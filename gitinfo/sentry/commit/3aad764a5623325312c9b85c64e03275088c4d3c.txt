commit 3aad764a5623325312c9b85c64e03275088c4d3c
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 20 14:55:51 2016 -0700

    Quick toggle for changing stacktrace order
    
    @getsentry/ui

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
index c62cab61e9..ce9e882f5d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
@@ -4,6 +4,7 @@ import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 import ExceptionContent from './exceptionContent';
 import RawExceptionContent from './rawExceptionContent';
+import TooltipMixin from '../../../mixins/tooltip';
 import {t} from '../../../locale';
 
 const ExceptionInterface = React.createClass({
@@ -14,6 +15,12 @@ const ExceptionInterface = React.createClass({
     data: React.PropTypes.object.isRequired,
   },
 
+  mixins: [TooltipMixin({
+    html: false,
+    selector: '.tip',
+    trigger: 'hover'
+  })],
+
   getInitialState() {
     let user = ConfigStore.get('user');
     // user may not be authenticated
@@ -45,6 +52,10 @@ const ExceptionInterface = React.createClass({
     });
   },
 
+  toggleOrder() {
+    this.setState({newestFirst: !this.state.newestFirst});
+  },
+
   render() {
     let group = this.props.group;
     let evt = this.props.event;
@@ -58,7 +69,7 @@ const ExceptionInterface = React.createClass({
 
     let title = (
       <div>
-        <div className="btn-group" style={{marginLeft:'10px'}}>
+        <div className="btn-group" style={{marginLeft:10}}>
           {data.hasSystemFrames &&
             <a className={(stackView === 'app' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStackView.bind(this, 'app')}>{t('App Only')}</a>
           }
@@ -76,11 +87,13 @@ const ExceptionInterface = React.createClass({
         <h3>
           {t('Exception')}
           <small style={{marginLeft: 5}}>
-            {newestFirst ?
-              t('most recent call first')
-            :
-              t('most recent call last')
-            }
+            (<a onClick={this.toggleOrder} className="tip" title={t('Toggle stacktrace order')} style={{borderBottom: '1px dotted #aaa'}}>
+              {newestFirst ?
+                t('most recent call first')
+              :
+                t('most recent call last')
+              }
+            </a>)
           </small>
         </h3>
       </div>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
index 8229864be4..73fdb9085f 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
@@ -15,6 +15,7 @@ const ExceptionContent = React.createClass({
 
   render() {
     let stackView = this.props.view;
+    let newestFirst = this.props.newestFirst;
     let children = this.props.values.map((exc, excIdx) => {
       return (
         <div key={excIdx} className="exception">
@@ -34,12 +35,12 @@ const ExceptionContent = React.createClass({
                 data={this.props.type === 'original' ? exc.stacktrace : exc.rawStacktrace}
                 includeSystemFrames={stackView === 'full'}
                 platform={this.props.platform}
-                newestFirst={this.props.newestFirst} />
+                newestFirst={newestFirst} />
           }
         </div>
       );
     });
-    if (this.props.newestFirst) {
+    if (newestFirst) {
       children.reverse();
     }
 
