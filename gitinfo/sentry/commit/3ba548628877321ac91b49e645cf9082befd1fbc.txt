commit 3ba548628877321ac91b49e645cf9082befd1fbc
Author: ted kaemming <t.kaemming+github@gmail.com>
Date:   Fri Aug 19 14:55:54 2016 -0700

    Add top release list to reports. (#3984)

diff --git a/src/sentry/tasks/reports.py b/src/sentry/tasks/reports.py
index 368c85ee15..cd974fc4da 100644
--- a/src/sentry/tasks/reports.py
+++ b/src/sentry/tasks/reports.py
@@ -15,7 +15,7 @@ from sentry import features
 from sentry.app import tsdb
 from sentry.models import (
     Activity, Group, GroupStatus, Organization, OrganizationStatus, Project,
-    Team, User, UserOption,
+    Release, TagValue, Team, User, UserOption,
 )
 from sentry.tasks.base import instrumented_task
 from sentry.utils import json, redis
@@ -259,11 +259,42 @@ def merge_issue_lists(target, other):
     )
 
 
+def trim_release_list(value):
+    return sorted(
+        value,
+        key=lambda (id, count): count,
+        reverse=True,
+    )[:5]
+
+
+def prepare_project_release_list((start, stop), project):
+    return trim_release_list(
+        filter(
+            lambda item: item[1] > 0,
+            tsdb.get_sums(
+                tsdb.models.release,
+                Release.objects.filter(
+                    project=project,
+                    version__in=TagValue.objects.filter(
+                        project=project,
+                        key='sentry:release',
+                        last_seen__gte=start,  # lack of upper bound is intentional
+                    ).values_list('value', flat=True),
+                ).values_list('id', flat=True),
+                start,
+                stop,
+                rollup=60 * 60 * 24,
+            ).items(),
+        )
+    )
+
+
 def prepare_project_report(interval, project):
     return (
         prepare_project_series(interval, project),
         prepare_project_aggregates(interval, project),
         prepare_project_issue_list(interval, project),
+        prepare_project_release_list(interval, project),
     )
 
 
@@ -388,6 +419,7 @@ def merge_reports(target, other):
             target[2],
             other[2],
         ),
+        trim_release_list(target[3] + other[3]),
     )
 
 
@@ -597,7 +629,7 @@ Point = namedtuple('Point', 'resolved unresolved')
 
 
 def to_context(report, fetch_groups=None):
-    series, aggregates, issue_list = report
+    series, aggregates, issue_list, release_list = report
     series = [(timestamp, Point(*values)) for timestamp, values in series]
 
     return {
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 90cc9584a5..315d8a0dd7 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -34,6 +34,7 @@ from sentry.models import (
     Organization,
     OrganizationMember,
     Project,
+    Release,
     Rule,
     Team,
 )
@@ -415,9 +416,8 @@ def report(request):
                 results[id] = instance
         return results
 
-    group_generator = make_group_generator(random, project)
-
     def make_group_id_generator():
+        group_generator = make_group_generator(random, project)
         while True:
             group = next(group_generator)
             if random.random() < 0.95:
@@ -426,6 +426,36 @@ def report(request):
 
     group_id_sequence = make_group_id_generator()
 
+    def make_release_generator():
+        id_sequence = itertools.count(1)
+        while True:
+            dt = to_datetime(
+                random.randint(
+                    timestamp - (30 * 24 * 60 * 60),
+                    timestamp,
+                ),
+            )
+            yield Release(
+                id=next(id_sequence),
+                project=project,
+                version=''.join([
+                    random.choice('0123456789abcdef') for _ in range(40)
+                ]),
+                date_added=dt,
+                date_started=dt,
+            )
+
+    release_instances = {}
+
+    def make_release_id_generator():
+        release_generator = make_release_generator()
+        while True:
+            release = next(release_generator)
+            release_instances[release.id] = release
+            yield release.id
+
+    release_id_generator = make_release_id_generator()
+
     def build_issue_list():
         count = random.randint(0, int(random.paretovariate(0.4)))
         return count, [(
@@ -436,6 +466,14 @@ def report(request):
             ),
         ) for _ in xrange(0, min(count, 5))]
 
+    def build_release_list():
+        return reports.trim_release_list([
+            (
+                next(release_id_generator),
+                max(1, int(random.weibullvariate(20, 0.15))),
+            ) for _ in range(random.randint(0, 10))
+        ])
+
     def build_report():
         daily_maximum = random.randint(1000, 10000)
 
@@ -449,7 +487,7 @@ def report(request):
             random.randint(0, daily_maximum * 7) if random.random() < 0.9 else None for _ in xrange(0, 4)
         ]
 
-        return series, aggregates, build_issue_list()
+        return series, aggregates, build_issue_list(), build_release_list()
 
     report = reduce(
         reports.merge_reports,
