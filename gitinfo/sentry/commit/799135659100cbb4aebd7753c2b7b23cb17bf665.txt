commit 799135659100cbb4aebd7753c2b7b23cb17bf665
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Dec 16 13:53:03 2014 -0800

    Add option to disable data scrubbing

diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 8ff432e182..9da90e3ade 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -23,15 +23,14 @@
             {{ form|as_crispy_errors }}
 
             <fieldset>
-                {% for field in form %}
-                    {% if field.name != 'origins' and field.name != 'public' and field.name != 'resolve_age' %}
-                        {{ field|as_crispy_field }}
-                    {% endif %}
-                {% endfor %}
+                {{ form.name|as_crispy_field }}
+                {{ form.slug|as_crispy_field }}
+                {{ form.platform|as_crispy_field }}
             </fieldset>
             <fieldset id="events">
                 <div><legend>{% trans "Event Settings" %}</legend></div>
                 {{ form.resolve_age|as_crispy_field }}
+                {{ form.scrub_data|as_crispy_field }}
                 {% if form.public %}
                     {{ form.public|as_crispy_field }}
                 {% endif %}
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index bc91ae4834..8f7f00b81e 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -369,9 +369,10 @@ class StoreView(APIView):
             logger.warning('Discarded recent duplicate event from project %s/%s (id=%s)', project.organization.slug, project.slug, event_id)
             raise InvalidRequest('An event with the same ID already exists.')
 
-        # We filter data immediately before it ever gets into the queue
-        inst = SensitiveDataFilter()
-        inst.apply(data)
+        if project.get_option('sentry:scrub_data', True):
+            # We filter data immediately before it ever gets into the queue
+            inst = SensitiveDataFilter()
+            inst.apply(data)
 
         # mutates data (strips a lot of context if not queued)
         insert_data_to_database(data)
diff --git a/src/sentry/web/frontend/project_settings.py b/src/sentry/web/frontend/project_settings.py
index 8810af76fe..8688443fab 100644
--- a/src/sentry/web/frontend/project_settings.py
+++ b/src/sentry/web/frontend/project_settings.py
@@ -74,6 +74,11 @@ class EditProjectForm(forms.ModelForm):
         help_text=_('Separate multiple entries with a newline.'))
     resolve_age = RangeField(help_text=_('Treat an event as resolved if it hasn\'t been seen for this amount of time.'),
         required=False, min_value=0, max_value=168, step_value=1)
+    scrub_data = forms.BooleanField(
+        label=_('Data Scrubber'),
+        help_text=_('Apply server-side data scrubbing to prevent things like passwords and credit cards from being stored.'),
+        required=False
+    )
 
     class Meta:
         fields = ('name', 'platform', 'public', 'team', 'slug')
@@ -171,6 +176,7 @@ class ProjectSettingsView(ProjectView):
         return EditProjectForm(request, team_list, request.POST or None, instance=project, initial={
             'origins': '\n'.join(project.get_option('sentry:origins', None) or []),
             'resolve_age': int(project.get_option('sentry:resolve_age', 0)),
+            'scrub_data': bool(project.get_option('sentry:scrub_data', True)),
         })
 
     def handle(self, request, organization, team, project):
@@ -180,6 +186,7 @@ class ProjectSettingsView(ProjectView):
             project = form.save()
             project.update_option('sentry:origins', form.cleaned_data.get('origins') or [])
             project.update_option('sentry:resolve_age', form.cleaned_data.get('resolve_age'))
+            project.update_option('sentry:scrub_data', form.cleaned_data.get('scrub_data'))
 
             AuditLogEntry.objects.create(
                 organization=organization,
