commit ccb2756369ef8f5432d249cb8bbe7534378b33bd
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Feb 18 18:06:08 2016 -0800

    Added basic global key support

diff --git a/src/sentry/api/authentication.py b/src/sentry/api/authentication.py
index 4021811e00..93331cec5e 100644
--- a/src/sentry/api/authentication.py
+++ b/src/sentry/api/authentication.py
@@ -5,8 +5,10 @@ from django.utils.crypto import constant_time_compare
 from rest_framework.authentication import BasicAuthentication
 from rest_framework.exceptions import AuthenticationFailed
 
+from sentry import options
 from sentry.app import raven
 from sentry.models import ApiKey, ProjectKey
+from sentry.models.apikey import SYSTEM_KEY
 
 
 class QuietBasicAuthentication(BasicAuthentication):
@@ -16,6 +18,14 @@ class QuietBasicAuthentication(BasicAuthentication):
 
 class ApiKeyAuthentication(QuietBasicAuthentication):
     def authenticate_credentials(self, userid, password):
+        if userid == 'admin':
+            ref_pw = options.get('system.admin-auth-password')
+            if not ref_pw:
+                raise AuthenticationFailed('System admin authentication disabled')
+            if not constant_time_compare(ref_pw, password):
+                raise AuthenticationFailed('Invalid system admin password')
+            return (None, SYSTEM_KEY)
+
         if password:
             return
 
diff --git a/src/sentry/api/permissions.py b/src/sentry/api/permissions.py
index 5fae249084..5ec66322ff 100644
--- a/src/sentry/api/permissions.py
+++ b/src/sentry/api/permissions.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from rest_framework import permissions
 
 from sentry.models import ProjectKey
+from sentry.models.apikey import SYSTEM_KEY
 
 
 class NoPermission(permissions.BasePermission):
@@ -50,3 +51,8 @@ class SuperuserPermission(permissions.BasePermission):
         if request.is_superuser():
             return True
         return False
+
+
+class SystemPermission(permissions.BasePermission):
+    def has_permission(self, request, view):
+        return request.auth is SYSTEM_KEY
diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index a5bede8fdc..8b3bdd7e58 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -96,3 +96,25 @@ class ApiKey(Model):
 
     def get_scopes(self):
         return self.scopes.keys()
+
+
+class SystemKey(object):
+    is_active = True
+
+    def get_allowed_origins(self):
+        return []
+
+    def get_audit_log_data(self):
+        return {
+            'label': 'System',
+            'key': '<system>',
+            'scopes': -1,
+            'status': ApiKeyStatus.ACTIVE
+        }
+
+    def get_scopes(self):
+        # All scopes!
+        return ApiKey.scopes
+
+
+SYSTEM_KEY = SystemKey()
diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index e000b47fb4..fab84f5295 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -10,7 +10,7 @@ from __future__ import absolute_import, print_function
 from sentry.options import (
     FLAG_IMMUTABLE, FLAG_NOSTORE, FLAG_PRIORITIZE_DISK, FLAG_REQUIRED, register
 )
-from sentry.utils.types import Dict
+from sentry.utils.types import Dict, String
 
 register('cache.backend', flags=FLAG_NOSTORE)
 register('cache.options', type=Dict, flags=FLAG_NOSTORE)
@@ -34,6 +34,8 @@ register(
     },
     flags=FLAG_NOSTORE | FLAG_IMMUTABLE
 )
+register('redis.options', type=Dict, flags=FLAG_NOSTORE)
 
 # Absolute URL to the sentry root directory. Should not include a trailing slash.
 register('system.url-prefix', ttl=60, grace=3600, flags=FLAG_REQUIRED | FLAG_PRIORITIZE_DISK)
+register('system.admin-auth-password', type=String)
