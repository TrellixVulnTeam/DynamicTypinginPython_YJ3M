commit 4db9e0cc7d78e75f76583f18998bbf99b7351700
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 24 10:36:33 2015 -0800

    Move organization create into feature check

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index f2e8fa0eaa..1befb9555c 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -534,6 +534,7 @@ SENTRY_CACHE_BACKEND = 'default'
 SENTRY_FEATURES = {
     'auth:register': True,
     'social-auth:register': True,
+    'organizations:create': True,
 }
 
 SENTRY_FILTERS = (
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 31d9231ea9..6dc8eae57b 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -7,6 +7,7 @@ from .manager import *  # NOQA
 default_manager = FeatureManager()
 default_manager.add('auth:register')
 default_manager.add('social-auth:register')
+default_manager.add('organizations:create')
 
 # expose public api
 add = default_manager.add
diff --git a/src/sentry/permissions.py b/src/sentry/permissions.py
index b87a39195e..88e80f37ab 100644
--- a/src/sentry/permissions.py
+++ b/src/sentry/permissions.py
@@ -67,23 +67,6 @@ def is_project_admin(user, project):
     return is_team_admin(user, project.team)
 
 
-@cached_for_request
-@requires_login
-def can_create_organizations(user):
-    """
-    Returns a boolean describing whether a user has the ability to
-    create new organizations.
-    """
-    if user.is_superuser:
-        return True
-
-    result = plugins.first('has_perm', user, 'add_organization')
-    if result is False:
-        return result
-
-    return True
-
-
 @cached_for_request
 @requires_login
 def can_create_teams(user, organization):
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 8ae87372e2..14b912b5c3 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -1,4 +1,5 @@
 {% load i18n %}
+{% load sentry_features %}
 {% load sentry_helpers %}
 {% load sentry_permissions %}
 {% get_sentry_version %}
@@ -122,9 +123,9 @@
                                             <span class="caret"></span>
                                           </a>
                                           <ul class="dropdown-menu">
-                                            {% if request.user|can_create_organizations %}
+                                            {% feature organizations:create %}
                                               <li><h6><a href="{% url 'sentry-create-organization' %}" class="new pull-right"><span class="icon-plus"></span></a>{% trans "Organizations" %}</h6></li>
-                                            {% endif %}
+                                            {% endfeature %}
                                             {% for o in request.user|list_organizations %}
                                                 <li{% if o == organization %} class="active"{% endif %}>
                                                     <a href="{% url 'sentry-organization-home' o.slug %}">{{ o.name }}</a>
diff --git a/src/sentry/templatetags/sentry_permissions.py b/src/sentry/templatetags/sentry_permissions.py
index 63849fb839..892e4e029c 100644
--- a/src/sentry/templatetags/sentry_permissions.py
+++ b/src/sentry/templatetags/sentry_permissions.py
@@ -10,7 +10,7 @@ from __future__ import absolute_import
 from django import template
 
 from sentry.permissions import (
-    can_create_organizations, can_create_teams, can_create_projects,
+    can_create_teams, can_create_projects,
     can_remove_project, can_manage_project, can_manage_team, can_manage_org
 )
 
@@ -18,7 +18,6 @@ register = template.Library()
 
 # TODO: Django doesn't seem to introspect function args correctly for filters
 # so we can't just register.filter(can_add_team_member)
-register.filter('can_create_organizations')(lambda a: can_create_organizations(a))
 register.filter('can_create_teams')(lambda a, b: can_create_teams(a, b))
 register.filter('can_create_projects')(lambda a, b: can_create_projects(a, b))
 register.filter('can_manage_team')(lambda a, b: can_manage_team(a, b))
diff --git a/src/sentry/web/frontend/create_organization.py b/src/sentry/web/frontend/create_organization.py
index 299972d4b8..101ae96407 100644
--- a/src/sentry/web/frontend/create_organization.py
+++ b/src/sentry/web/frontend/create_organization.py
@@ -5,10 +5,10 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
+from sentry import features
 from sentry.models import (
     AuditLogEntry, AuditLogEntryEvent, Organization
 )
-from sentry.permissions import can_create_organizations
 from sentry.web.frontend.base import BaseView
 
 
@@ -26,9 +26,7 @@ class CreateOrganizationView(BaseView):
         return NewOrganizationForm(request.POST or None)
 
     def has_permission(self, request):
-        if not can_create_organizations(request.user):
-            return False
-        return True
+        return features.has('organizations:create', actor=request.user)
 
     def handle(self, request):
         form = self.get_form(request)
