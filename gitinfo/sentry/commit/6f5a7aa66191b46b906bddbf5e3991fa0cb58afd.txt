commit 6f5a7aa66191b46b906bddbf5e3991fa0cb58afd
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Oct 26 13:59:32 2017 -0700

    ref: Improve SSO enabled link emails

diff --git a/src/sentry/auth/helper.py b/src/sentry/auth/helper.py
index 1c2c036daa..1dfb8ba86f 100644
--- a/src/sentry/auth/helper.py
+++ b/src/sentry/auth/helper.py
@@ -724,9 +724,7 @@ class AuthHelper(object):
             data=self.auth_provider.get_audit_log_data(),
         )
 
-        email_missing_links.delay(
-            organization_id=self.organization.id,
-        )
+        email_missing_links.delay(self.organization.id, request.user.id, self.provider.key)
 
         messages.add_message(
             self.request,
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 93bdc3f599..167b4dc3c0 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -154,23 +154,16 @@ class OrganizationMember(Model):
             logger = get_logger(name='sentry.mail')
             logger.exception(e)
 
-    def send_sso_link_email(self):
+    def send_sso_link_email(self, configurer, provider):
         from sentry.utils.email import MessageBuilder
 
+        link_args = {'organization_slug': self.organization.slug}
+
         context = {
-            'email':
-            self.email,
-            'organization_name':
-            self.organization.name,
-            'url':
-            absolute_uri(
-                reverse(
-                    'sentry-auth-organization',
-                    kwargs={
-                        'organization_slug': self.organization.slug,
-                    }
-                )
-            ),
+            'organization': self.organization,
+            'configurer': configurer,
+            'provider': provider,
+            'url': absolute_uri(reverse('sentry-auth-organization', kwargs=link_args)),
         }
 
         msg = MessageBuilder(
diff --git a/src/sentry/tasks/auth.py b/src/sentry/tasks/auth.py
index 40e05f9a2e..beafd40a48 100644
--- a/src/sentry/tasks/auth.py
+++ b/src/sentry/tasks/auth.py
@@ -2,21 +2,22 @@ from __future__ import absolute_import, print_function
 
 import logging
 
-from sentry.models import Organization, OrganizationMember
+from sentry.models import Organization, OrganizationMember, User
 from sentry.tasks.base import instrumented_task
+from sentry.auth import manager
+from sentry.auth.exceptions import ProviderNotRegistered
 
 logger = logging.getLogger('sentry.auth')
 
 
 @instrumented_task(name='sentry.tasks.send_sso_link_emails', queue='auth')
-def email_missing_links(organization_id, **kwargs):
+def email_missing_links(org_id, configurer_id, provider_key, **kwargs):
     try:
-        org = Organization.objects.get(id=organization_id)
-    except Organization.DoesNotExist:
-        logger.warning(
-            'Organization(id=%s) does not exist',
-            organization_id,
-        )
+        org = Organization.objects.get(id=org_id)
+        configurer = User.objects.get(id=configurer_id)
+        provider = manager.get(provider_key)
+    except(Organization.DoesNotExist, User.DoesNotExist, ProviderNotRegistered) as e:
+        logger.warning('Could not send SSO link emails: %s', e)
         return
 
     member_list = OrganizationMember.objects.filter(
@@ -24,4 +25,4 @@ def email_missing_links(organization_id, **kwargs):
         flags=~getattr(OrganizationMember.flags, 'sso:linked'),
     )
     for member in member_list:
-        member.send_sso_link_email()
+        member.send_sso_link_email(configurer, provider)
diff --git a/src/sentry/templates/sentry/emails/auth-link-identity.html b/src/sentry/templates/sentry/emails/auth-link-identity.html
index a91ca70001..38d3752a5f 100644
--- a/src/sentry/templates/sentry/emails/auth-link-identity.html
+++ b/src/sentry/templates/sentry/emails/auth-link-identity.html
@@ -3,7 +3,14 @@
 {% load i18n %}
 
 {% block main %}
-  <p>SSO has been configured for the <strong>{{ organization_name }}</strong> organization.</p>
+  <h3>{{ provider.name }} SSO Enabled</h3>
 
-  <p>We'll need you to link your existing account with the SSO provider by visiting the following url: {{ url }}</p>
+  <p>
+    <strong>{{ provider.name }}</strong> Single Sign-On has been configured for the
+    <strong>{{ organization_name }}</strong> organization. Link your Sentry account to enable
+    signing on with your <strong>{{ provider.name }}</strong> account.
+  </p>
+
+  <p><a href="{{ url|safe }}" class="btn">Link Account</a></p>
+  <p><small>SSO was enabled by <strong>{{ configurer.email }}</strong></small></p>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/auth-link-identity.txt b/src/sentry/templates/sentry/emails/auth-link-identity.txt
index bc6d6f8fb5..119c3281ce 100644
--- a/src/sentry/templates/sentry/emails/auth-link-identity.txt
+++ b/src/sentry/templates/sentry/emails/auth-link-identity.txt
@@ -1,6 +1,7 @@
-SSO has been configured for the {{ organization_name }} organization.
+{{ provider.name }} Single Sign-On has been configured for the {{ organization_name }} organization.
 
-We'll need you to link your existing account with the SSO provider by visiting the following url:
+Link your Sentry account to enable signing on with your {{ provider.name }} account by visiting the following url:
 
-    {{ url }}
+{{ url }}
 
+SSO was enabled by {{ configurer.email }}
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index 0b117f5a5b..0df5b3e8fd 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -92,7 +92,7 @@ class OrganizationAuthSettingsView(OrganizationView):
                 next_uri = reverse('sentry-organization-auth-settings', args=[organization.slug])
                 return self.redirect(next_uri)
             elif op == 'reinvite':
-                email_missing_links.delay(organization_id=organization.id)
+                email_missing_links.delay(organization.id, request.user.id, provider.key)
 
                 messages.add_message(
                     request,
diff --git a/tests/sentry/tasks/test_auth.py b/tests/sentry/tasks/test_auth.py
index 283ed9a2fd..1847c5bfaf 100644
--- a/tests/sentry/tasks/test_auth.py
+++ b/tests/sentry/tasks/test_auth.py
@@ -11,7 +11,7 @@ class EmailMissingLinksTest(TestCase):
     def test_simple(self):
         user = self.create_user(email='bar@example.com')
         organization = self.create_organization(owner=user, name='Test')
-        AuthProvider.objects.create(
+        provider = AuthProvider.objects.create(
             organization=organization,
             provider='dummy',
         )
@@ -29,7 +29,7 @@ class EmailMissingLinksTest(TestCase):
             flags=0,
         )
         with self.tasks():
-            email_missing_links(organization.id)
+            email_missing_links(organization.id, user.id, provider.provider)
 
         assert len(mail.outbox) == 1
         assert mail.outbox[0].to == [user2.email]
