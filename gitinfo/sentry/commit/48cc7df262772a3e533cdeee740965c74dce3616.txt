commit 48cc7df262772a3e533cdeee740965c74dce3616
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Mar 15 12:00:20 2018 -0700

     feat(environments): Add environment to release details (#7604)

diff --git a/src/sentry/static/sentry/app/views/releaseDetails.jsx b/src/sentry/static/sentry/app/views/releaseDetails.jsx
index 9ef68fa353..6e346c5e3f 100644
--- a/src/sentry/static/sentry/app/views/releaseDetails.jsx
+++ b/src/sentry/static/sentry/app/views/releaseDetails.jsx
@@ -13,12 +13,15 @@ import ProjectState from '../mixins/projectState';
 import TimeSince from '../components/timeSince';
 import Version from '../components/version';
 import {t} from '../locale';
+import SentryTypes from '../proptypes';
+import withEnvironmentInQueryString from '../utils/withEnvironmentInQueryString';
 
 const ReleaseDetails = createReactClass({
   displayName: 'ReleaseDetails',
 
   propTypes: {
     setProjectNavSection: PropTypes.func,
+    environment: SentryTypes.Environment,
   },
 
   contextTypes: {
@@ -50,6 +53,12 @@ const ReleaseDetails = createReactClass({
     this.fetchData();
   },
 
+  componentDidUpdate(prevProps) {
+    if (this.props.environment !== prevProps.environment) {
+      this.fetchData();
+    }
+  },
+
   getTitle() {
     let project = this.getProject();
     let params = this.props.params;
@@ -62,7 +71,11 @@ const ReleaseDetails = createReactClass({
       error: false,
     });
 
+    const {environment} = this.props;
+    const query = environment ? {environment: environment.name} : {};
+
     this.api.request(this.getReleaseDetailsEndpoint(), {
+      query,
       success: data => {
         this.setState({
           loading: false,
@@ -204,6 +217,7 @@ const ReleaseDetails = createReactClass({
           </div>
           {React.cloneElement(this.props.children, {
             release,
+            environment: this.props.environment,
           })}
         </div>
       </DocumentTitle>
@@ -211,4 +225,4 @@ const ReleaseDetails = createReactClass({
   },
 });
 
-export default ReleaseDetails;
+export default withEnvironmentInQueryString(ReleaseDetails);
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index a5ac78a171..2552f9699a 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -16,10 +16,15 @@ import TimeSince from '../../components/timeSince';
 import ApiMixin from '../../mixins/apiMixin';
 
 import {t} from '../../locale';
+import SentryTypes from '../../proptypes';
 
 const ReleaseOverview = createReactClass({
   displayName: 'ReleaseOverview',
 
+  propTypes: {
+    environment: SentryTypes.Environment,
+  },
+
   contextTypes: {
     release: PropTypes.object,
   },
@@ -38,14 +43,31 @@ const ReleaseOverview = createReactClass({
   },
 
   componentDidMount() {
+    this.fetchAll();
+  },
+
+  componentDidUpdate(prevProps) {
+    if (prevProps.environment !== this.props.environment) {
+      this.fetchAll();
+    }
+  },
+
+  fetchAll() {
     let {orgId, version} = this.props.params;
+    let query = {
+      ...this.props.location.query,
+    };
+
+    if (this.props.environment) {
+      query.environment = this.props.environment.name;
+    }
 
     let path = `/organizations/${orgId}/releases/${encodeURIComponent(
       version
     )}/commitfiles/`;
     this.api.request(path, {
       method: 'GET',
-      data: this.props.location.query,
+      data: query,
       success: (data, _, jqXHR) => {
         this.setState({
           fileList: data,
@@ -64,8 +86,11 @@ const ReleaseOverview = createReactClass({
 
   getReleaseProjects() {
     let {orgId, version} = this.props.params;
+    let query = this.props.environment ? {environment: this.props.environment.name} : {};
+
     let path = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;
     this.api.request(path, {
+      query,
       method: 'GET',
       success: (data, _, jqXHR) => {
         this.setState({
@@ -82,6 +107,7 @@ const ReleaseOverview = createReactClass({
 
   getDeploys() {
     let {orgId, version} = this.props.params;
+
     let path = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/deploys/`;
     this.api.request(path, {
       method: 'GET',
@@ -101,9 +127,12 @@ const ReleaseOverview = createReactClass({
 
   getRepos() {
     let {orgId} = this.props.params;
+    let query = this.props.environment ? {environment: this.props.environment.name} : {};
+
     let path = `/organizations/${orgId}/repos/`;
     this.api.request(path, {
       method: 'GET',
+      query,
       success: (data, _, jqXHR) => {
         this.setState({
           hasRepos: data.length > 0,
