commit f4090d59f77f868a82909a2557e97ff1c8e3d944
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Oct 19 19:44:22 2014 +0200

    Correct data passing in execute_rule

diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 1196402d7f..56850955be 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -158,7 +158,7 @@ def execute_rule(rule_id, event, state):
             rules_logger.error('Unregistered action %r', action['id'])
             continue
 
-        action_inst = action_cls(project, data=rule.data)
+        action_inst = action_cls(project, data=action)
         safe_execute(action_inst.after, event=event, state=state)
 
 
diff --git a/tests/sentry/tasks/post_process/tests.py b/tests/sentry/tasks/post_process/tests.py
index f7122ee5d4..4002c4d480 100644
--- a/tests/sentry/tasks/post_process/tests.py
+++ b/tests/sentry/tasks/post_process/tests.py
@@ -144,11 +144,12 @@ class ExecuteRuleTest(TestCase):
     def test_simple(self, mock_rules):
         group = self.create_group(project=self.project)
         event = self.create_event(group=group)
+        action_data = {'id': 'a.rule.id', 'foo': 'bar'}
         rule = Rule.objects.create(
             project=event.project,
             data={
                 'actions': [
-                    {'id': 'a.rule.id'},
+                    action_data,
                 ],
             }
         )
@@ -168,7 +169,7 @@ class ExecuteRuleTest(TestCase):
 
         mock_rules.get.assert_called_once_with('a.rule.id')
         mock_rule_inst = mock_rules.get.return_value
-        mock_rule_inst.assert_called_once_with(self.project, data=rule.data)
+        mock_rule_inst.assert_called_once_with(self.project, data=action_data)
         mock_rule_inst.return_value.after.assert_called_once_with(
             event=event,
             state=state,
