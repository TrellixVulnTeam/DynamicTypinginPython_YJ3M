commit 689677a382066463e26dcf0392bce408b09f6f18
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Mar 26 13:59:18 2020 -0700

    fix(analytics): Fix wrong data types for some events (#17943)
    
    Events that are causing issues:
    
    * `organization_saved_search.selected`
    * `search.ping`
    
    Fixes RELOAD-W
    Fixes RELOAD-T

diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index 44215a4cd4..851aa9360f 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -4,8 +4,8 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
 import * as Sentry from '@sentry/browser';
-import debounce from 'lodash/debounce';
 import createReactClass from 'create-react-class';
+import debounce from 'lodash/debounce';
 import styled from '@emotion/styled';
 
 import {
@@ -14,7 +14,7 @@ import {
   NEGATION_OPERATOR,
   SEARCH_WILDCARD,
 } from 'app/constants';
-import {analytics} from 'app/utils/analytics';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {callIfFunction} from 'app/utils/callIfFunction';
 import {defined} from 'app/utils';
 import {
@@ -24,19 +24,19 @@ import {
   unpinSearch,
 } from 'app/actionCreators/savedSearches';
 import {fetchReleases} from 'app/actionCreators/releases';
+import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
 import ButtonBar from 'app/components/buttonBar';
 import CreateSavedSearchButton from 'app/views/issueList/createSavedSearchButton';
-import InlineSvg from 'app/components/inlineSvg';
 import DropdownLink from 'app/components/dropdownLink';
+import InlineSvg from 'app/components/inlineSvg';
 import MemberListStore from 'app/stores/memberListStore';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
-import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 
 import SearchDropdown from './searchDropdown';
 
@@ -263,8 +263,10 @@ class SmartSearchBar extends React.Component {
     const {organization, savedSearchType} = this.props;
     evt.preventDefault();
 
-    analytics('search.searched', {
-      org_id: parseInt(organization.id, 10),
+    trackAnalyticsEvent({
+      eventKey: 'search.searched',
+      eventName: 'Search: Performed search',
+      organization_id: organization.id,
       query: removeSpace(this.state.query),
       search_type: savedSearchType === 0 ? 'issues' : 'events',
       search_source: 'main_search',
@@ -852,18 +854,22 @@ class SmartSearchBar extends React.Component {
       });
     }
 
-    analytics('search.pin', {
-      org_id: parseInt(organization.id, 10),
+    trackAnalyticsEvent({
+      eventKey: 'search.pin',
+      eventName: 'Search: Pin',
+      organization_id: organization.id,
       action: !!pinnedSearch ? 'unpin' : 'pin',
       search_type: savedSearchType === 0 ? 'issues' : 'events',
-      query: pinnedSearch || this.state.query,
+      query: pinnedSearch?.query ?? this.state.query,
     });
   };
 
   onAutoComplete = (replaceText, item) => {
     if (item.type === 'recent-search') {
-      analytics('search.searched', {
-        org_id: parseInt(this.props.organization.id, 10),
+      trackAnalyticsEvent({
+        eventKey: 'search.searched',
+        eventName: 'Search: Performed search',
+        organization_id: this.props.organization.id,
         query: replaceText,
         source: this.props.savedSearchType === 0 ? 'issues' : 'events',
         search_source: 'recent_search',
diff --git a/src/sentry/static/sentry/app/views/issueList/filters.jsx b/src/sentry/static/sentry/app/views/issueList/filters.jsx
index e39f8b38fa..36a2f16d4f 100644
--- a/src/sentry/static/sentry/app/views/issueList/filters.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/filters.jsx
@@ -3,15 +3,15 @@ import React from 'react';
 import styled from '@emotion/styled';
 
 import {PageHeader} from 'app/styles/organization';
-import {analytics} from 'app/utils/analytics';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {t} from 'app/locale';
 import PageHeading from 'app/components/pageHeading';
 import QueryCount from 'app/components/queryCount';
 import SentryTypes from 'app/sentryTypes';
 
-import SavedSearchSelector from './savedSearchSelector';
 import IssueListSearchBar from './searchBar';
 import IssueListSortOptions from './sortOptions';
+import SavedSearchSelector from './savedSearchSelector';
 
 class IssueListFilters extends React.Component {
   static propTypes = {
@@ -48,8 +48,10 @@ class IssueListFilters extends React.Component {
   };
 
   handleSavedSearchSelect = savedSearch => {
-    analytics('organization_saved_search.selected', {
-      org_id: this.props.organization.id,
+    trackAnalyticsEvent({
+      eventKey: 'organization_saved_search.selected',
+      eventName: 'Organization Saved Search: Selected saved search',
+      organization_id: this.props.organization.id,
       query: savedSearch.query,
       search_type: 'issues',
       id: savedSearch.id ? parseInt(savedSearch.id, 10) : -1,
