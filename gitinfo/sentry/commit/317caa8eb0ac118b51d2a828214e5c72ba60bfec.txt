commit 317caa8eb0ac118b51d2a828214e5c72ba60bfec
Author: Ted Kaemming <ted@kaemming.com>
Date:   Tue Sep 29 14:47:15 2015 -0700

    Scaffolding for preview email.

diff --git a/src/sentry/digests/__init__.py b/src/sentry/digests/__init__.py
index 2631d07396..8b5cbad2e2 100644
--- a/src/sentry/digests/__init__.py
+++ b/src/sentry/digests/__init__.py
@@ -2,7 +2,13 @@ from __future__ import absolute_import
 
 from collections import namedtuple
 
+from sentry.utils.dates import to_datetime
+
+
+class Record(namedtuple('Record', 'key value timestamp')):
+    @property
+    def datetime(self):
+        return to_datetime(self.timestamp)
 
-Record = namedtuple('Record', 'key value timestamp')
 
 ScheduleEntry = namedtuple('ScheduleEntry', 'key timestamp')
diff --git a/src/sentry/templates/sentry/emails/digests/body.html b/src/sentry/templates/sentry/emails/digests/body.html
new file mode 100644
index 0000000000..60c4c7bbf0
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/digests/body.html
@@ -0,0 +1,23 @@
+{% extends "sentry/emails/base.html" %}
+
+{% load sentry_helpers %}
+
+{% block main %}
+
+<h2>{{ project }}</h2>
+
+{% for group, records in digest.items %}
+    {% url 'sentry-group' group.organization.slug group.project.slug group.id as group_link %}
+    <h3><a href="{% absolute_uri group_link %}">{{ group.title }}</a></h3>
+    {{ records|length }} event{{ records|pluralize }}
+    <ul>
+        {% for record in records %}
+            <li>
+                {{ record.value.event.message }}
+                at {{ record.datetime }}
+            </li>
+        {% endfor %}
+    </ul>
+{% endfor %}
+
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/digests/body.txt b/src/sentry/templates/sentry/emails/digests/body.txt
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index affca870cf..65778ff6c9 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -1,11 +1,22 @@
 from __future__ import absolute_import, print_function
 
+import itertools
 import logging
+import time
 import traceback
+from collections import OrderedDict
+from datetime import (
+    datetime,
+    timedelta,
+)
+from random import Random
+
+import pytz
 
 from django.core.urlresolvers import reverse
 from django.utils.safestring import mark_safe
 
+from sentry.digests.notifications import event_to_record
 from sentry.models import (
     Activity, Event, Group, Organization, Project, Rule, Team,
 )
@@ -16,12 +27,15 @@ from sentry.web.decorators import login_required
 from sentry.web.helpers import render_to_response, render_to_string
 
 
+logger = logging.getLogger(__name__)
+
+
 # TODO(dcramer): use https://github.com/disqus/django-mailviews
 class MailPreview(object):
-    def __init__(self, html_template, text_template, context):
+    def __init__(self, html_template, text_template, context=None):
         self.html_template = html_template
         self.text_template = text_template
-        self.context = context
+        self.context = context if context is not None else {}
 
     def text_body(self):
         return render_to_string(self.text_template, self.context)
@@ -33,6 +47,11 @@ class MailPreview(object):
             traceback.print_exc()
             raise
 
+    def render(self):
+        return render_to_response('sentry/debug/mail/preview.html', {
+            'preview': self,
+        })
+
 
 @login_required
 def new_event(request):
@@ -78,7 +97,7 @@ def new_event(request):
             continue
         interface_list.append((interface.get_title(), mark_safe(body)))
 
-    preview = MailPreview(
+    return MailPreview(
         html_template='sentry/emails/error.html',
         text_template='sentry/emails/error.html',
         context={
@@ -90,15 +109,12 @@ def new_event(request):
             'tags': event.get_tags(),
             'project_label': project.name,
         },
-    )
-
-    return render_to_response('sentry/debug/mail/preview.html', {
-        'preview': preview,
-    })
+    ).render()
 
 
 @login_required
 def new_note(request):
+
     org = Organization(
         id=1,
         slug='example',
@@ -135,7 +151,7 @@ def new_note(request):
         data={'text': 'This is an example note!'},
     )
 
-    preview = MailPreview(
+    return MailPreview(
         html_template='sentry/emails/activity/note.html',
         text_template='sentry/emails/activity/note.txt',
         context={
@@ -145,11 +161,75 @@ def new_note(request):
             'group': group,
             'link': group.get_absolute_url(),
         },
+    ).render()
+
+
+@login_required
+def digest(request):
+    seed = request.GET.get('seed', str(time.time()))
+    logger.debug('Using random seed value: %s')
+
+    random = Random(seed)
+
+    # TODO: Refactor all of these into something more manageable.
+    org = Organization(
+        id=1,
+        slug='example',
+        name='Example',
+    )
+    team = Team(
+        id=1,
+        slug='example',
+        name='Example',
+        organization=org,
+    )
+    project = Project(
+        id=1,
+        slug='example',
+        name='Example',
+        team=team,
+        organization=org,
     )
 
-    return render_to_response('sentry/debug/mail/preview.html', {
-        'preview': preview,
-    })
+    now = datetime.utcnow().replace(tzinfo=pytz.utc)
+
+    event_sequence = itertools.count(1)
+    digest = OrderedDict()
+    for i in xrange(random.randint(1, 4)):
+        group = Group(
+            id=i,
+            project=project,
+            message='This is an example event.',
+        )
+
+        records = []
+        offset = timedelta(seconds=0)
+        for i in xrange(random.randint(1, 10)):
+            offset += timedelta(seconds=random.random() * 120)
+            records.append(
+                event_to_record(
+                    Event(
+                        id=next(itertools.count()),
+                        project=project,
+                        group=group,
+                        message=group.message,
+                        data=load_data('python'),
+                        datetime=now - offset,
+                    ),
+                    [Rule(label="An example rule")],
+                )
+            )
+
+        digest[group] = records
+
+    return MailPreview(
+        html_template='sentry/emails/digests/body.html',
+        text_template='sentry/emails/digests/body.txt',
+        context={
+            'project': project,
+            'digest': digest,
+        },
+    ).render()
 
 
 @login_required
@@ -166,7 +246,7 @@ def request_access(request):
         organization=org,
     )
 
-    preview = MailPreview(
+    return MailPreview(
         html_template='sentry/emails/request-team-access.html',
         text_template='sentry/emails/request-team-access.txt',
         context={
@@ -178,11 +258,7 @@ def request_access(request):
                 'organization_slug': org.slug,
             }) + '?ref=access-requests'),
         },
-    )
-
-    return render_to_response('sentry/debug/mail/preview.html', {
-        'preview': preview,
-    })
+    ).render()
 
 
 @login_required
@@ -199,7 +275,7 @@ def access_approved(request):
         organization=org,
     )
 
-    preview = MailPreview(
+    return MailPreview(
         html_template='sentry/emails/access-approved.html',
         text_template='sentry/emails/access-approved.txt',
         context={
@@ -208,8 +284,4 @@ def access_approved(request):
             'organization': org,
             'team': team,
         },
-    )
-
-    return render_to_response('sentry/debug/mail/preview.html', {
-        'preview': preview,
-    })
+    ).render()
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 1b82f2d9f5..3e6e235d99 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -88,6 +88,8 @@ if settings.DEBUG:
             sentry.web.frontend.debug.mail.new_note),
         url(r'^debug/mail/new-release/$',
             DebugNewReleaseEmailView.as_view()),
+        url(r'^debug/mail/digest/$',
+            sentry.web.frontend.debug.mail.digest),
         url(r'^debug/mail/request-access/$',
             sentry.web.frontend.debug.mail.request_access),
         url(r'^debug/mail/access-approved/$',
