commit 2df51af74abdb691a6cffdd83447354f7d2d4faa
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Jan 28 15:55:28 2016 -0800

    Added statuspage support

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index b783c1f5f3..5bee178370 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -922,6 +922,10 @@ SENTRY_WATCHERS = (
      "--config={}".format(os.path.join(PROJECT_ROOT, os.pardir, os.pardir, "webpack.config.js"))],
 )
 
+# statuspage.io support
+STATUS_PAGE_ID = None
+STATUS_PAGE_API_HOST = 'statuspage.io'
+
 
 def get_raven_config():
     return {
diff --git a/src/sentry/static/sentry/app/components/header/index.jsx b/src/sentry/static/sentry/app/components/header/index.jsx
index 947571b724..be071630fe 100644
--- a/src/sentry/static/sentry/app/components/header/index.jsx
+++ b/src/sentry/static/sentry/app/components/header/index.jsx
@@ -4,6 +4,7 @@ import OrganizationState from '../../mixins/organizationState';
 import {Link} from 'react-router';
 
 import Broadcasts from './broadcasts';
+import StatusPage from './statuspage';
 import UserNav from './userNav';
 import OrganizationSelector from './organizationSelector';
 
@@ -32,6 +33,7 @@ const Header = React.createClass({
             <a href="/" className="logo">{logo}</a>
           }
           <OrganizationSelector organization={this.getOrganization()} className="pull-right" />
+          <StatusPage className="pull-right" />
         </div>
       </header>
     );
diff --git a/src/sentry/static/sentry/app/components/header/statuspage.jsx b/src/sentry/static/sentry/app/components/header/statuspage.jsx
new file mode 100644
index 0000000000..cfc87e3cd1
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/header/statuspage.jsx
@@ -0,0 +1,141 @@
+import React from 'react';
+import jQuery from 'jquery';
+
+import ConfigStore from '../../stores/configStore';
+import DropdownLink from '../dropdownLink';
+import {t} from '../../locale';
+
+const StatusPage = React.createClass({
+
+  getInitialState() {
+    return {
+      status: null,
+      isLoading: false
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  remountComponent() {
+    this.setState(this.getInitialState(), this.fetchData);
+  },
+
+  getConfig() {
+    return ConfigStore.get('statuspage');
+  },
+
+  getIncidentsFromIncidentResponse(incidents) {
+    if (incidents === null || incidents.length == 0) {
+      return [[], 'none'];
+    }
+
+    let isMajor = false;
+    let log = [];
+    incidents.forEach((item) => {
+      if (!isMajor && item.impact === 'major') {
+        isMajor = true;
+      }
+      log.push({
+        name: item.name,
+        updates: item.incident_updates.map((update) => {
+          return update.body;
+        }),
+        url: item.shortlink,
+        status: item.status
+      });
+    });
+
+    return [log, isMajor ? 'major' : 'minor'];
+  },
+
+  fetchData(callback) {
+    let cfg = this.getConfig();
+    if (cfg && cfg.id) {
+      this.setState({
+        isLoading: true
+      });
+      jQuery.ajax({
+        type: 'GET',
+        url: 'https://' + cfg.id + '.' + cfg.api_host + '/api/v2/incidents/unresolved.json',
+        crossDomain: true,
+        cache: false,
+        success: (data) => {
+          let [incidents, indicator] = this.getIncidentsFromIncidentResponse(
+            data.incidents);
+          this.setState({
+            isLoading: false,
+            status: {
+              incidents: incidents,
+              indicator: indicator,
+              url: data.page.url
+            }
+          });
+        },
+        error: () => {
+          this.setState({
+            isLoading: false,
+            status: null
+          });
+        }
+      });
+    }
+    return;
+  },
+
+  isDisabled() {
+    return this.getConfig() === null;
+  },
+
+  getIconClass() {
+    let status = this.state.status;
+    if (!status || status.indicator == 'none') {
+      return null;
+    } else if (status.indicator == 'minor') {
+      return 'icon-triangle';
+    } else if (status.indicator == 'major') {
+      return 'icon-exclamation';
+    }
+    return null;
+  },
+
+  render() {
+    if (this.isDisabled() || this.state.isLoading) {
+      return null;
+    }
+
+    let icon = this.getIconClass();
+    if (icon === null) {
+      return null;
+    }
+
+    let title = <span className={icon} />;
+    let items = this.state.status.incidents.map((incident, i) => {
+      return (
+        <li key={i} className="incident">
+          <strong>{incident.name}</strong> [{incident.status}]
+          <ul>
+            {incident.updates.map((update, j) => {
+              return (
+                <li key={j}>{update}</li>
+              );
+            })}
+          </ul>
+          <a href={incident.url} target="_blank">{t('Read more â€¦')}</a>
+        </li>
+      );
+    });
+
+    return (
+      <DropdownLink
+          topLevelClasses={`statuspage ${this.props.className || ''}`}
+          menuClasses="dropdown-menu-right"
+          title={title}>
+        {items}
+      </DropdownLink>
+    );
+  }
+});
+
+export default StatusPage;
diff --git a/src/sentry/static/sentry/less/components/statuspage.less b/src/sentry/static/sentry/less/components/statuspage.less
new file mode 100644
index 0000000000..61ce424fb4
--- /dev/null
+++ b/src/sentry/static/sentry/less/components/statuspage.less
@@ -0,0 +1,13 @@
+.statuspage {
+  ul {
+    padding: 20px;
+    ul {
+      padding: 0 0 0 30px;
+    }
+  }
+
+  a {
+    text-align: right;
+    font-weight: bold;
+  }
+}
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index ccaf19017f..d0c9b40a59 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -1,4 +1,5 @@
 @import url('components/broadcasts.less');
+@import url('components/statuspage.less');
 
 /**
 * Buttons
diff --git a/src/sentry/templatetags/sentry_react.py b/src/sentry/templatetags/sentry_react.py
index 1e6fc12a8a..4b15181847 100644
--- a/src/sentry/templatetags/sentry_react.py
+++ b/src/sentry/templatetags/sentry_react.py
@@ -64,6 +64,16 @@ def _get_public_dsn():
     return projectkey.dsn_public
 
 
+def _get_statuspage():
+    id = settings.STATUS_PAGE_ID
+    if id is None:
+        return None
+    return {
+        'id': id,
+        'api_host': settings.STATUS_PAGE_API_HOST
+    }
+
+
 @register.simple_tag(takes_context=True)
 def get_react_config(context):
     if 'request' in context:
@@ -102,6 +112,7 @@ def get_react_config(context):
         'mediaUrl': get_asset_url('sentry', ''),
         'needsUpgrade': needs_upgrade,
         'dsn': _get_public_dsn(),
+        'statuspage': _get_statuspage(),
         'messages': [{
             'message': msg.message,
             'level': msg.tags,
