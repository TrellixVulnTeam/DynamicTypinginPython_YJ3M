commit a0eb8b7ba5dac464a66860ced18d9cc6801f6b50
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Sep 19 13:23:48 2018 -0700

    fix(dropdown): Add emptyHidesInput prop (#9809)

diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 97baaa1429..793cc60f16 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -251,6 +251,7 @@ const AssigneeSelectorComponent = createReactClass({
             itemSize="small"
             searchPlaceholder={t('Filter teams and people')}
             menuWithArrow
+            emptyHidesInput
             menuHeader={
               assignedTo && (
                 <MenuItemWrapper
diff --git a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
index a9507a7ef6..9f01bbb1b4 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
@@ -42,6 +42,12 @@ class DropdownAutoCompleteMenu extends React.Component {
      */
     busy: PropTypes.bool,
 
+    /**
+     * Hide's the input when there are no items. Avoid using this when querying
+     * results in an async fashion.
+     */
+    emptyHidesInput: PropTypes.bool,
+
     onSelect: PropTypes.func,
     /**
      * When AutoComplete input changes
@@ -254,6 +260,7 @@ class DropdownAutoCompleteMenu extends React.Component {
       searchPlaceholder,
       itemSize,
       busy,
+      emptyHidesInput,
       ...props
     } = this.props;
 
@@ -292,6 +299,10 @@ class DropdownAutoCompleteMenu extends React.Component {
           // Results mean there was a search (i.e. inputValue)
           let showNoResultsMessage = !busy && inputValue && !hasResults;
 
+          // Hide the input when we have no items to filter, only if
+          // emptyHidesInput is set to true.
+          let showInput = hasItems || !emptyHidesInput;
+
           return (
             <AutoCompleteRoot {...getRootProps()}>
               {children({
@@ -314,7 +325,7 @@ class DropdownAutoCompleteMenu extends React.Component {
                   })}
                 >
                   {itemsLoading && <LoadingIndicator mini />}
-                  {hasItems && (
+                  {showInput && (
                     <Flex>
                       <StyledInput
                         autoFocus
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index ad29d3a719..d06ec40446 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -113,6 +113,7 @@ const ProjectSelector = withRouter(
           emptyMessage={t('You have no projects')}
           noResultsMessage={t('No projects found')}
           virtualizedHeight={33}
+          emptyHidesInput
           menuFooter={
             !hasProjects && hasProjectWrite ? (
               <CreateProjectButton
diff --git a/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx b/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
index 183bb5678d..048540ee25 100644
--- a/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
+++ b/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
@@ -94,7 +94,12 @@ describe('DropdownAutoCompleteMenu', function() {
 
   it('shows empty message when there are no items', function() {
     const wrapper = mount(
-      <DropdownAutoCompleteMenu isOpen={true} items={[]} emptyMessage="No items!">
+      <DropdownAutoCompleteMenu
+        emptyHidesInput
+        isOpen={true}
+        items={[]}
+        emptyMessage="No items!"
+      >
         {({selectedItem}) => (selectedItem ? selectedItem.label : 'Click me!')}
       </DropdownAutoCompleteMenu>,
       routerContext
