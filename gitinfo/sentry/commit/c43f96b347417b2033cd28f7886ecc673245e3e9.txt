commit c43f96b347417b2033cd28f7886ecc673245e3e9
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 19 15:52:47 2017 -0700

    feat(ui): Add hooks for various secondary columns

diff --git a/src/sentry/static/sentry/app/components/group/sidebar.jsx b/src/sentry/static/sentry/app/components/group/sidebar.jsx
index fd64071d0c..6686b5f317 100644
--- a/src/sentry/static/sentry/app/components/group/sidebar.jsx
+++ b/src/sentry/static/sentry/app/components/group/sidebar.jsx
@@ -6,6 +6,7 @@ import SuggestedOwners from './suggestedOwners';
 import GroupParticipants from './participants';
 import GroupReleaseStats from './releaseStats';
 import GroupState from '../../mixins/groupState';
+import HookStore from '../../stores/hookStore';
 import IndicatorStore from '../../stores/indicatorStore';
 import TagDistributionMeter from './tagDistributionMeter';
 import LoadingError from '../../components/loadingError';
@@ -24,8 +25,16 @@ const GroupSidebar = React.createClass({
   mixins: [ApiMixin, GroupState],
 
   getInitialState() {
+    // Allow injection via getsentry et all
+    let hooks = HookStore.get('issue:secondary-column').map(cb => {
+      return cb({
+        params: this.props.params
+      });
+    });
+
     return {
-      participants: []
+      participants: [],
+      hooks
     };
   },
 
@@ -181,6 +190,8 @@ const GroupSidebar = React.createClass({
 
         {this.renderPluginIssue()}
 
+        {this.state.hooks}
+
         <h6><span>{t('Tags')}</span></h6>
         {group.tags.map(data => {
           return (
diff --git a/src/sentry/static/sentry/app/stores/hookStore.jsx b/src/sentry/static/sentry/app/stores/hookStore.jsx
index f6f1432a86..91f2c25639 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.jsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.jsx
@@ -5,12 +5,14 @@ let validHookNames = new Set([
   'footer',
   'organization:header',
   'organization:sidebar',
+  'organization:dashboard:secondary-column',
   'routes',
   'routes:admin',
   'routes:organization',
   'project:data-forwarding:disabled',
   'project:rate-limits:disabled',
-  'project:custom-inbound-filters:disabled'
+  'project:custom-inbound-filters:disabled',
+  'issue:secondary-column'
 ]);
 
 const HookStore = Reflux.createStore({
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index 1122334e49..998ee7fa3d 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -8,6 +8,7 @@ import ApiMixin from '../mixins/apiMixin';
 import {loadStats} from '../actionCreators/projects';
 
 import GroupStore from '../stores/groupStore';
+import HookStore from '../stores/hookStore';
 import TeamStore from '../stores/teamStore';
 
 import ActivityFeed from '../components/activity/feed';
@@ -267,8 +268,16 @@ const OrganizationDashboard = React.createClass({
   },
 
   getInitialState() {
+    // Allow injection via getsentry et all
+    let hooks = HookStore.get('organization:dashboard:secondary-column').map(cb => {
+      return cb({
+        params: this.props.params
+      });
+    });
+
     return {
-      teams: TeamStore.getAll()
+      teams: TeamStore.getAll(),
+      hooks
     };
   },
 
@@ -303,6 +312,7 @@ const OrganizationDashboard = React.createClass({
             <Activity {...this.props} />
           </div>
           <div className="col-md-4">
+            {this.state.hooks}
             <EventsPerHour {...this.props} />
             <ProjectList {...this.props} teams={this.state.teams} />
           </div>
