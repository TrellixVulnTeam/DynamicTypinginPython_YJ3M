commit 4d8f4f93795374826f3a2064855effd6dde5fb35
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Wed Jun 20 13:23:57 2018 -0700

    fix(2fa): Send 'security settings changed' email with 2fa enroll (#8771)

diff --git a/src/sentry/api/endpoints/user_authenticator_enroll.py b/src/sentry/api/endpoints/user_authenticator_enroll.py
index 1d232362fe..dda66b8f89 100644
--- a/src/sentry/api/endpoints/user_authenticator_enroll.py
+++ b/src/sentry/api/endpoints/user_authenticator_enroll.py
@@ -195,7 +195,7 @@ class UserAuthenticatorEnrollEndpoint(UserEndpoint):
                 context={
                     'authenticator': interface.authenticator,
                 },
-                send_email=False,
+                send_email=True,
             )
             request.user.clear_lost_passwords()
             request.user.refresh_session_nonce(self.request)
diff --git a/src/sentry/security/emails.py b/src/sentry/security/emails.py
index 2ff9d1fa4c..ca2086c4e5 100644
--- a/src/sentry/security/emails.py
+++ b/src/sentry/security/emails.py
@@ -38,4 +38,5 @@ def generate_security_email(account, type, actor, ip_address, context=None, curr
         context=new_context,
         template=template,
         html_template=html_template,
+        type=type
     )
diff --git a/src/sentry/web/frontend/accounts_twofactor.py b/src/sentry/web/frontend/accounts_twofactor.py
index 3c8bdd9bf3..8ff40d14fa 100644
--- a/src/sentry/web/frontend/accounts_twofactor.py
+++ b/src/sentry/web/frontend/accounts_twofactor.py
@@ -152,7 +152,7 @@ class TwoFactorSettingsView(BaseView):
                     context={
                         'authenticator': interface.authenticator,
                     },
-                    send_email=False,
+                    send_email=True,
                 )
 
                 request.user.refresh_session_nonce(self.request)
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_details.py b/tests/sentry/api/endpoints/test_user_authenticator_details.py
index 9f69fe99d3..2df6c33dff 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_details.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_details.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+import mock
 import six
 
 from django.core.urlresolvers import reverse
@@ -13,6 +14,12 @@ class UserAuthenticatorDetailsTest(APITestCase):
         self.user = self.create_user(email='test@example.com', is_superuser=False)
         self.login_as(user=self.user)
 
+    def _assert_mfa_removed_email_sent(*args):
+        test, email_log = args
+        assert email_log.info.call_count == 1
+        assert 'mail.queued' in email_log.info.call_args[0]
+        assert email_log.info.call_args[1]['extra']['message_type'] == 'mfa-removed'
+
     def test_wrong_auth_id(self):
         url = reverse(
             'sentry-api-0-user-authenticator-details',
@@ -103,7 +110,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         assert 'challenge' not in resp.data
         assert 'response' not in resp.data
 
-    def test_u2f_remove_device(self):
+    @mock.patch('sentry.utils.email.logger')
+    def test_u2f_remove_device(self, email_log):
         auth = Authenticator.objects.create(
             type=3,  # u2f
             user=self.user,
@@ -155,6 +163,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         resp = self.client.delete(url)
         assert resp.status_code == 500
 
+        assert email_log.info.call_count == 0
+
     def test_sms_get_phone(self):
         interface = SmsInterface()
         interface.phone_number = '5551231234'
@@ -178,7 +188,8 @@ class UserAuthenticatorDetailsTest(APITestCase):
         assert 'totp_secret' not in resp.data
         assert 'form' not in resp.data
 
-    def test_recovery_codes_regenerate(self):
+    @mock.patch('sentry.utils.email.logger')
+    def test_recovery_codes_regenerate(self, email_log):
         interface = RecoveryCodeInterface()
         interface.enroll(self.user)
 
@@ -203,7 +214,10 @@ class UserAuthenticatorDetailsTest(APITestCase):
         resp = self.client.get(url)
         assert old_codes != resp.data['codes']
 
-    def test_delete(self):
+        assert email_log.info.call_count == 0
+
+    @mock.patch('sentry.utils.email.logger')
+    def test_delete(self, email_log):
         user = self.create_user(email='a@example.com', is_superuser=True)
         auth = Authenticator.objects.create(
             type=3,  # u2f
@@ -226,7 +240,10 @@ class UserAuthenticatorDetailsTest(APITestCase):
             id=auth.id,
         ).exists()
 
-    def test_cannot_delete_without_superuser(self):
+        self._assert_mfa_removed_email_sent(email_log)
+
+    @mock.patch('sentry.utils.email.logger')
+    def test_cannot_delete_without_superuser(self, email_log):
         user = self.create_user(email='a@example.com', is_superuser=False)
         auth = Authenticator.objects.create(
             type=3,  # u2f
@@ -249,3 +266,5 @@ class UserAuthenticatorDetailsTest(APITestCase):
         assert Authenticator.objects.filter(
             id=auth.id,
         ).exists()
+
+        assert email_log.info.call_count == 0
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
index e3fe191717..92cefc0255 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
@@ -14,8 +14,15 @@ class UserAuthenticatorEnrollTest(APITestCase):
         self.user = self.create_user(email='a@example.com', is_superuser=False)
         self.login_as(user=self.user)
 
+    def _assert_mfa_added_email_sent(*args):
+        test, email_log = args
+        assert email_log.info.call_count == 1
+        assert 'mail.queued' in email_log.info.call_args[0]
+        assert email_log.info.call_args[1]['extra']['message_type'] == 'mfa-added'
+
+    @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.TotpInterface.validate_otp', return_value=True)
-    def test_totp_can_enroll(self, validate_otp):
+    def test_totp_can_enroll(self, validate_otp, email_log):
         url = reverse(
             'sentry-api-0-user-authenticator-enroll', kwargs={'user_id': 'me', 'interface_id': 'totp'}
         )
@@ -42,14 +49,17 @@ class UserAuthenticatorEnrollTest(APITestCase):
         recovery = Authenticator.objects.get_interface(user=self.user, interface_id="recovery")
         assert recovery.is_enrolled
 
+        self._assert_mfa_added_email_sent(email_log)
+
         # can't enroll again because no multi enrollment is allowed
         resp = self.client.get(url)
         assert resp.status_code == 400
         resp = self.client.post(url)
         assert resp.status_code == 400
 
+    @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.TotpInterface.validate_otp', return_value=False)
-    def test_invalid_otp(self, validate_otp):
+    def test_invalid_otp(self, validate_otp, email_log):
         url = reverse(
             'sentry-api-0-user-authenticator-enroll', kwargs={'user_id': 'me', 'interface_id': 'totp'}
         )
@@ -62,10 +72,12 @@ class UserAuthenticatorEnrollTest(APITestCase):
         assert validate_otp.call_count == 1
         assert validate_otp.call_args == mock.call("1234")
         assert resp.status_code == 400
+        assert email_log.call_count == 0
 
+    @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.SmsInterface.validate_otp', return_value=True)
     @mock.patch('sentry.models.SmsInterface.send_text', return_value=True)
-    def test_sms_can_enroll(self, send_text, validate_otp):
+    def test_sms_can_enroll(self, send_text, validate_otp, email_log):
         new_options = settings.SENTRY_OPTIONS.copy()
         new_options['sms.twilio-account'] = 'twilio-account'
 
@@ -98,8 +110,11 @@ class UserAuthenticatorEnrollTest(APITestCase):
             interface = Authenticator.objects.get_interface(user=self.user, interface_id="sms")
             assert interface.phone_number == "1231234"
 
+            self._assert_mfa_added_email_sent(email_log)
+
+    @mock.patch('sentry.utils.email.logger')
     @mock.patch('sentry.models.U2fInterface.try_enroll', return_value=True)
-    def test_u2f_can_enroll(self, try_enroll):
+    def test_u2f_can_enroll(self, try_enroll, email_log):
         new_options = settings.SENTRY_OPTIONS.copy()
         new_options['system.url-prefix'] = 'https://testserver'
         with self.settings(SENTRY_OPTIONS=new_options):
@@ -123,3 +138,5 @@ class UserAuthenticatorEnrollTest(APITestCase):
             assert try_enroll.call_count == 1
             assert try_enroll.call_args == mock.call("challenge", "response", "device name")
             assert resp.status_code == 204
+
+            self._assert_mfa_added_email_sent(email_log)
