commit ee5822bf9d2e1641d71d9cf88767ea6f095b8d6a
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jun 1 15:30:35 2017 -0700

    options: move to memcached instead of default redis cache
    
    I don't think I consciously made a decision to use Redis or not, but
    it's more favorable to use Memcached for this for sure.

diff --git a/src/sentry/options/store.py b/src/sentry/options/store.py
index 19066de817..e0c60dcb36 100644
--- a/src/sentry/options/store.py
+++ b/src/sentry/options/store.py
@@ -101,9 +101,10 @@ class OptionsStore(object):
             if not silent:
                 logger.warn(CACHE_FETCH_ERR, key.name, exc_info=True)
             value = None
-        else:
-            if key.ttl > 0:
-                self._local_cache[cache_key] = _make_cache_value(key, value)
+
+        if value is not None and key.ttl > 0:
+            self._local_cache[cache_key] = _make_cache_value(key, value)
+
         return value
 
     def get_local_cache(self, key, force_grace=False):
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 0e88a4f2c2..59067490e2 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -362,7 +362,7 @@ def bind_cache_to_option_store():
     # settings and/or configuration values. Those options should have been
     # loaded at this point, so we can plug in the cache backend before
     # continuing to initialize the remainder of the application.
-    from sentry.cache import default_cache
+    from django.core.cache import cache as default_cache
     from sentry.options import default_store
 
     default_store.cache = default_cache
diff --git a/tests/sentry/options/test_manager.py b/tests/sentry/options/test_manager.py
index c6531593d9..8e4a703e93 100644
--- a/tests/sentry/options/test_manager.py
+++ b/tests/sentry/options/test_manager.py
@@ -5,8 +5,8 @@ from __future__ import absolute_import
 from exam import fixture, around
 from mock import patch
 from django.conf import settings
+from django.core.cache.backends.locmem import LocMemCache
 
-from sentry.cache.redis import RedisCache
 from sentry.models import Option
 from sentry.options.store import OptionsStore
 from sentry.options.manager import (
@@ -19,9 +19,9 @@ from sentry.testutils import TestCase
 class OptionsManagerTest(TestCase):
     @fixture
     def store(self):
-        return OptionsStore(
-            cache=RedisCache()
-        )
+        c = LocMemCache('test', {})
+        c.clear()
+        return OptionsStore(cache=c)
 
     @fixture
     def manager(self):
diff --git a/tests/sentry/options/test_store.py b/tests/sentry/options/test_store.py
index 7199ec1739..eebb44befd 100644
--- a/tests/sentry/options/test_store.py
+++ b/tests/sentry/options/test_store.py
@@ -7,8 +7,8 @@ from uuid import uuid1
 import pytest
 from exam import before, fixture
 from mock import patch
+from django.core.cache.backends.locmem import LocMemCache
 
-from sentry.cache.redis import RedisCache
 from sentry.models import Option
 from sentry.options.store import OptionsStore
 from sentry.testutils import TestCase
@@ -17,9 +17,9 @@ from sentry.testutils import TestCase
 class OptionsStoreTest(TestCase):
     @fixture
     def store(self):
-        return OptionsStore(
-            cache=RedisCache()
-        )
+        c = LocMemCache('test', {})
+        c.clear()
+        return OptionsStore(cache=c)
 
     @fixture
     def key(self):
