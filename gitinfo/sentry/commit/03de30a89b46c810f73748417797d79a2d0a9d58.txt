commit 03de30a89b46c810f73748417797d79a2d0a9d58
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 11 11:43:20 2015 -0800

    Automatically create Release objects

diff --git a/src/sentry/receivers/releases.py b/src/sentry/receivers/releases.py
new file mode 100644
index 0000000000..1db8ca3020
--- /dev/null
+++ b/src/sentry/receivers/releases.py
@@ -0,0 +1,37 @@
+from __future__ import absolute_import, print_function
+
+from django.db import IntegrityError, transaction
+from django.db.models.signals import post_save
+
+from sentry.models import Release, TagValue
+
+
+def ensure_release_exists(instance, created, **kwargs):
+    if not created:
+        return
+
+    if instance.key != 'sentry:release':
+        return
+
+    if instance.data and instance.data.get('release_id'):
+        return
+
+    try:
+        with transaction.atomic():
+            release = Release.objects.create(
+                project=instance.project,
+                version=instance.value,
+                date_added=instance.first_seen,
+            )
+    except IntegrityError:
+        pass
+    else:
+        instance.update(data={'release_id': release.id})
+
+
+post_save.connect(
+    ensure_release_exists,
+    sender=TagValue,
+    dispatch_uid="ensure_release_exists",
+    weak=False
+)
diff --git a/tests/sentry/receivers/test_releases.py b/tests/sentry/receivers/test_releases.py
new file mode 100644
index 0000000000..eac8210583
--- /dev/null
+++ b/tests/sentry/receivers/test_releases.py
@@ -0,0 +1,25 @@
+from __future__ import absolute_import
+
+from sentry.models import Release, TagValue
+from sentry.testutils import TestCase
+
+
+class EnsureReleaseExistsTest(TestCase):
+    def test_simple(self):
+        tv = TagValue.objects.create(
+            project=self.project,
+            key='sentry:release',
+            value='1.0',
+        )
+
+        tv = TagValue.objects.get(id=tv.id)
+        assert tv.data['release_id']
+
+        release = Release.objects.get(
+            id=tv.data['release_id']
+        )
+        assert release.version == tv.value
+        assert release.project == self.project
+
+        # ensure we dont hit some kind of error saving it again
+        tv.save()
