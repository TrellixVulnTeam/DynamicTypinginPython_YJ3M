commit 669305c0e2c8be8f2d562d74faa668bdf2f3223b
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Nov 27 09:44:51 2018 -0800

    feat(settings): Expose disabled org general settings to users (#10769)

diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
index 53f3bb7715..d7a980d7ef 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
@@ -10,7 +10,6 @@ const organizationNavigation = [
         path: `${pathPrefix}/`,
         title: t('General Settings'),
         index: true,
-        show: ({access}) => access.has('org:write'),
         description: t('Configure general settings for an organization'),
       },
       {
diff --git a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
index bc7faed2e1..6e4ecd102e 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
@@ -18,7 +18,6 @@ import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
-import recreateRoute from 'app/utils/recreateRoute';
 
 import OrganizationSettingsForm from './organizationSettingsForm';
 
@@ -42,22 +41,6 @@ const OrganizationGeneralSettings = createReactClass({
   componentDidMount() {
     Promise.all([this.fetchData()]).then(
       ([data]) => {
-        // Redirect if can't write to org
-        if (
-          data &&
-          data.access.indexOf('org:admin') === -1 &&
-          data.access.indexOf('org:write') === -1
-        ) {
-          browserHistory.replace(
-            recreateRoute('teams', {
-              params: this.props.params,
-              routes: this.props.routes,
-              stepBack: -1,
-            })
-          );
-          return;
-        }
-
         this.setState({data, loading: false});
       },
       () => {
diff --git a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
index 57ba756444..56b44feaff 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
@@ -1,16 +1,17 @@
-import {Box} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
+import {t} from 'app/locale';
 import {updateOrganization} from 'app/actionCreators/organizations';
+import Alert from 'app/components/alert';
 import ApiMixin from 'app/mixins/apiMixin';
 import AvatarChooser from 'app/components/avatarChooser';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
-import organizationSettingsFields from 'app/data/forms/organizationGeneralSettings';
 import OrganizationState from 'app/mixins/organizationState';
+import organizationSettingsFields from 'app/data/forms/organizationGeneralSettings';
 
 const OrganizationSettingsForm = createReactClass({
   displayName: 'OrganizationSettingsForm',
@@ -44,21 +45,28 @@ const OrganizationSettingsForm = createReactClass({
         }}
         onSubmitError={err => addErrorMessage('Unable to save change')}
       >
-        <Box>
-          <JsonForm
-            features={this.getFeatures()}
-            access={access}
-            location={this.props.location}
-            forms={organizationSettingsFields}
-          />
-          <AvatarChooser
-            type="organization"
-            allowGravatar={false}
-            endpoint={`${endpoint}avatar/`}
-            model={initialData}
-            onSave={updateOrganization}
-          />
-        </Box>
+        {!access.has('org:write') && (
+          <Alert type="warning" icon="icon-warning-sm">
+            {t(
+              'These settings can only be edited by users with the owner or manager role.'
+            )}
+          </Alert>
+        )}
+        <JsonForm
+          features={this.getFeatures()}
+          access={access}
+          location={this.props.location}
+          forms={organizationSettingsFields}
+          disabled={!access.has('org:write')}
+        />
+        <AvatarChooser
+          type="organization"
+          allowGravatar={false}
+          endpoint={`${endpoint}avatar/`}
+          model={initialData}
+          onSave={updateOrganization}
+          disabled={!access.has('org:write')}
+        />
       </Form>
     );
   },
diff --git a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
index c842626a03..cfdd90beb2 100644
--- a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
@@ -3,7 +3,6 @@ import {mount} from 'enzyme';
 import React from 'react';
 
 import OrganizationGeneralSettings from 'app/views/settings/organizationGeneralSettings';
-import recreateRoute from 'app/utils/recreateRoute';
 
 jest.mock('jquery');
 
@@ -102,13 +101,12 @@ describe('OrganizationGeneralSettings', function() {
     expect(browserHistory.replace).toHaveBeenCalledWith('/settings/new-slug/');
   });
 
-  it('redirects to teams page if user does not have write access', async function() {
+  it('disables the entire form if user does not have write access', async function() {
     MockApiClient.clearMockResponses();
     MockApiClient.addMockResponse({
       url: ENDPOINT,
       body: TestStubs.Organization({access: ['org:read']}),
     });
-    recreateRoute.mockReturnValueOnce('teams');
     let wrapper = mount(
       <OrganizationGeneralSettings routes={[]} params={{orgId: org.slug}} />,
       TestStubs.routerContext()
@@ -117,7 +115,16 @@ describe('OrganizationGeneralSettings', function() {
     wrapper.setState({loading: false});
     await tick();
     wrapper.update();
-    expect(browserHistory.replace).toHaveBeenCalledWith('teams');
+
+    expect(wrapper.find('Form FormField[disabled=false]')).toHaveLength(0);
+    expect(
+      wrapper
+        .find('Alert')
+        .first()
+        .text()
+    ).toEqual(
+      'These settings can only be edited by users with the owner or manager role.'
+    );
   });
 
   it('does not have remove organization button', async function() {
