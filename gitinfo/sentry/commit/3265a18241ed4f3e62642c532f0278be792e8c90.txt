commit 3265a18241ed4f3e62642c532f0278be792e8c90
Author: k-fish <6111995+k-fish@users.noreply.github.com>
Date:   Mon Jun 22 15:06:22 2020 -0700

    fix(discover): User misery shows as empty when close to 0 (#19433)
    
    The `UserMisery` bar appears to be empty when close to zero, which is misleading. This adds an adjusted score that will always render at least one bar if there are any miserable users.
    
    * Add jest test for userMisery to test score logic
    * Remove snapshot from component test

diff --git a/docs-ui/components/userMisery.stories.js b/docs-ui/components/userMisery.stories.js
index 01c325692c..d3a66b0afc 100644
--- a/docs-ui/components/userMisery.stories.js
+++ b/docs-ui/components/userMisery.stories.js
@@ -50,6 +50,22 @@ storiesOf('Other|ScoreBar/UserMisery', module)
       </Container>
     ))
   )
+  .add(
+    'near empty',
+    withInfo('Nearly empty state will still show 1 bar if there are any miserable users')(
+      () => (
+        <Container>
+          <UserMisery
+            bars={10}
+            barHeight={20}
+            miseryLimit={300}
+            miserableUsers={1}
+            totalUsers={1000}
+          />
+        </Container>
+      )
+    )
+  )
   .add(
     'full',
     withInfo('Full state')(() => (
diff --git a/src/sentry/static/sentry/app/components/userMisery.tsx b/src/sentry/static/sentry/app/components/userMisery.tsx
index df67556cd0..5652085be2 100644
--- a/src/sentry/static/sentry/app/components/userMisery.tsx
+++ b/src/sentry/static/sentry/app/components/userMisery.tsx
@@ -18,7 +18,12 @@ function UserMisery(props: Props) {
   const {bars, barHeight, miserableUsers, miseryLimit, totalUsers} = props;
 
   const palette = new Array(bars).fill(theme.purpleDarkest);
-  const score = Math.floor((miserableUsers / Math.max(totalUsers, 1)) * palette.length);
+  const rawScore = Math.floor(
+    (miserableUsers / Math.max(totalUsers, 1)) * palette.length
+  );
+
+  const adjustedScore = rawScore > 0 ? rawScore : miserableUsers > 0 ? 1 : 0;
+
   const miseryPercentage = ((100 * miserableUsers) / Math.max(totalUsers, 1)).toFixed(2);
 
   const title = tct(
@@ -32,7 +37,7 @@ function UserMisery(props: Props) {
   );
   return (
     <Tooltip title={title} containerDisplayMode="block">
-      <ScoreBar size={barHeight} score={score} palette={palette} radius={0} />
+      <ScoreBar size={barHeight} score={adjustedScore} palette={palette} radius={0} />
     </Tooltip>
   );
 }
diff --git a/tests/js/spec/components/userMisery.spec.jsx b/tests/js/spec/components/userMisery.spec.jsx
new file mode 100644
index 0000000000..6267f4b54d
--- /dev/null
+++ b/tests/js/spec/components/userMisery.spec.jsx
@@ -0,0 +1,38 @@
+import React from 'react';
+
+import {shallow} from 'sentry-test/enzyme';
+
+import ScoreBar from 'app/components/scoreBar';
+import UserMisery from 'app/components/userMisery';
+
+describe('UserMisery', function() {
+  beforeEach(function() {});
+
+  afterEach(function() {});
+
+  it('renders no bars when miserable users is zero', function() {
+    const wrapper = shallow(
+      <UserMisery
+        bars={10}
+        barHeight={20}
+        miseryLimit={300}
+        miserableUsers={0}
+        totalUsers={100}
+      />
+    );
+    expect(wrapper.find(ScoreBar).props().score).toEqual(0);
+  });
+
+  it('renders one bar when miserable users are close to zero', function() {
+    const wrapper = shallow(
+      <UserMisery
+        bars={10}
+        barHeight={20}
+        miseryLimit={300}
+        miserableUsers={1}
+        totalUsers={100}
+      />
+    );
+    expect(wrapper.find(ScoreBar).props().score).toEqual(1);
+  });
+});
