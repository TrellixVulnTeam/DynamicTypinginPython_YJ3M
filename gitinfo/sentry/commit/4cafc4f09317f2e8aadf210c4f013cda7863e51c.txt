commit 4cafc4f09317f2e8aadf210c4f013cda7863e51c
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Jan 10 13:16:02 2019 -0800

    feat(discover): Auto-run when there is a query string present (#11425)
    
    This will autorun queries if it is not the default query from `queryBuilder`, this way we still have the help screen. Otherwise will autorun queries, which is helpful when navigating to discover via a link (whether it is via in-app or outside w/ direct link).

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index 2600c793fc..ea9ffa9e2c 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -66,7 +66,10 @@ export default class OrganizationDiscover extends React.Component {
   }
 
   componentDidMount() {
-    if (this.props.savedQuery) {
+    const {savedQuery, location} = this.props;
+
+    // Run query if there is *any* querystring
+    if (savedQuery || (location && !!location.search)) {
       this.runQuery();
     }
   }
diff --git a/tests/js/spec/views/organizationDiscover/discover.spec.jsx b/tests/js/spec/views/organizationDiscover/discover.spec.jsx
index 451adbf4be..7f8485d196 100644
--- a/tests/js/spec/views/organizationDiscover/discover.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/discover.spec.jsx
@@ -52,9 +52,34 @@ describe('Discover', function() {
       );
     });
 
-    it('does not auto run non-saved query', async function() {
+    it('auto-runs when there is a query string', async function() {
       wrapper = mount(
         <Discover
+          location={{
+            search:
+              'projects=%5B%5D&fields=%5B%22id%22%2C%22issue.id%22%2C%22project.name%22%2C%22platform%22%2C%22timestamp%22%5D&conditions=%5B%5D&aggregations=%5B%5D&range=%227d%22&orderby=%22-timestamp%22&limit=1000&start=null&end=null',
+          }}
+          queryBuilder={queryBuilder}
+          organization={organization}
+          updateSavedQueryData={jest.fn()}
+          toggleEditMode={jest.fn()}
+          isLoading={false}
+        />,
+        TestStubs.routerContext([{organization}])
+      );
+      await tick();
+      expect(wrapper.state().data.baseQuery.query).toEqual(queryBuilder.getExternal());
+      expect(wrapper.state().data.baseQuery.data).toEqual(
+        expect.objectContaining({data: mockResponse.data})
+      );
+    });
+
+    it('does not auto run when there is no query string', async function() {
+      wrapper = mount(
+        <Discover
+          location={{
+            search: '',
+          }}
           queryBuilder={queryBuilder}
           organization={organization}
           updateSavedQueryData={jest.fn()}
