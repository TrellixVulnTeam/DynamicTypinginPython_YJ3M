commit 56a717fc2b0b4e73149ceba1740fa57ac653a3ed
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Mon Mar 18 13:40:32 2019 -0700

    Add enhanced privacy to feedback (#12418)

diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 25212d59e8..cd5d6cffc4 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -368,6 +368,9 @@ class MailPlugin(NotificationPlugin):
         if not participants:
             return
 
+        org = group.organization
+        enhanced_privacy = org.flags.enhanced_privacy
+
         context = {
             'project': project,
             'project_link': absolute_uri(u'/{}/{}/'.format(
@@ -387,6 +390,7 @@ class MailPlugin(NotificationPlugin):
             )),
             'group': group,
             'report': payload['report'],
+            'enhanced_privacy': enhanced_privacy,
         }
 
         subject_prefix = self.get_option('subject_prefix', project) or self._subject_prefix()
diff --git a/src/sentry/templates/sentry/emails/activity/generic.html b/src/sentry/templates/sentry/emails/activity/generic.html
index 5682fe0ac5..bcae411921 100644
--- a/src/sentry/templates/sentry/emails/activity/generic.html
+++ b/src/sentry/templates/sentry/emails/activity/generic.html
@@ -28,7 +28,7 @@
 
   {% endblock %}
 
-  {% if group %}
+  {% if group and not enhanced_privacy %}
     {% include "sentry/emails/group_header.html" %}
   {% endif %}
 
diff --git a/src/sentry/templates/sentry/emails/activity/new-user-feedback.html b/src/sentry/templates/sentry/emails/activity/new-user-feedback.html
index 32dd9bd696..0c44fda3cd 100644
--- a/src/sentry/templates/sentry/emails/activity/new-user-feedback.html
+++ b/src/sentry/templates/sentry/emails/activity/new-user-feedback.html
@@ -7,17 +7,25 @@
 {% block activity %}
   <h3>New Feedback from {{ report.name }}</h3>
 
-  <table class="note">
-    <tr>
-      <td class="avatar-column">
-        {% email_avatar report.name report.email size 48 %}
-      </td>
-      <td class="notch-column">
-        <img width="7" height="48" src="{% absolute_asset_url 'sentry' 'images/email/avatar-notch.png' %}">
-      </td>
-      <td>
-        <div class="note-body">{{ report.comments|urlize|linebreaks }}</div>
-      </td>
-    </tr>
-  </table>
+  {% if enhanced_privacy %}
+    <div class="notice">
+      Details about this feedback are not shown in this notification since enhanced privacy
+        controls are enabled. For more details about this feedback, <a href="{{ link }}">view on Sentry</a>.
+    </div>
+
+  {% else %}
+    <table class="note">
+      <tr>
+        <td class="avatar-column">
+          {% email_avatar report.name report.email size 48 %}
+        </td>
+        <td class="notch-column">
+          <img width="7" height="48" src="{% absolute_asset_url 'sentry' 'images/email/avatar-notch.png' %}">
+        </td>
+        <td>
+          <div class="note-body">{{ report.comments|urlize|linebreaks }}</div>
+        </td>
+      </tr>
+    </table>
+  {% endif %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/activity/new-user-feedback.txt b/src/sentry/templates/sentry/emails/activity/new-user-feedback.txt
index 2bf7249e5d..0747792e22 100644
--- a/src/sentry/templates/sentry/emails/activity/new-user-feedback.txt
+++ b/src/sentry/templates/sentry/emails/activity/new-user-feedback.txt
@@ -4,8 +4,14 @@
 
 {{ report.name }} left a new comment:
 
+{% if enhanced_privacy %}
+Details about this feedback are not shown in this notification since enhanced privacy
+controls are enabled. For more details about this feedback, view on Sentry.
+
+{% else %}
 {{ report.comments }}
 
+{% endif %}
 
 ## Details
 
diff --git a/src/sentry/web/frontend/debug/debug_new_user_feedback_email.py b/src/sentry/web/frontend/debug/debug_new_user_feedback_email.py
index 513d5cd177..8912d05951 100644
--- a/src/sentry/web/frontend/debug/debug_new_user_feedback_email.py
+++ b/src/sentry/web/frontend/debug/debug_new_user_feedback_email.py
@@ -2,10 +2,13 @@ from __future__ import absolute_import
 
 from django.views.generic import View
 
-from sentry.models import Group, Organization, Project
+from sentry.models import Organization, Project
 
 from .mail import MailPreview
 
+from sentry.utils.http import absolute_uri
+from sentry.utils.samples import create_sample_event
+
 
 class DebugNewUserFeedbackEmailView(View):
     def get(self, request):
@@ -20,11 +23,21 @@ class DebugNewUserFeedbackEmailView(View):
             slug='project',
             name='My Project',
         )
-        group = Group(
-            id=1,
+
+        event = create_sample_event(
             project=project,
+            platform='python',
+            event_id='595',
+            timestamp=1452683305,
         )
 
+        group = event.group
+        link = absolute_uri(u'/{}/{}/issues/{}/feedback/'.format(
+            project.organization.slug,
+            project.slug,
+            group.id,
+        ))
+
         return MailPreview(
             html_template='sentry/emails/activity/new-user-feedback.html',
             text_template='sentry/emails/activity/new-user-feedback.txt',
@@ -35,5 +48,8 @@ class DebugNewUserFeedbackEmailView(View):
                     'email': 'homer.simpson@example.com',
                     'comments': 'I hit a bug.\n\nI went to https://example.com, hit the any key, and then it stopped working. DOH!',
                 },
+                'link': link,
+                'reason': 'are subscribed to this issue',
+                'enhanced_privacy': False,
             },
         ).render(request)
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 57e42bfef6..832ca27f5e 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -9,6 +9,7 @@ import pytz
 import six
 from django.contrib.auth.models import AnonymousUser
 from django.core import mail
+from django.db.models import F
 from django.utils import timezone
 from exam import fixture
 from mock import Mock
@@ -19,8 +20,8 @@ from sentry.api.serializers import (
 )
 from sentry.digests.notifications import build_digest, event_to_record
 from sentry.models import (
-    Activity, Event, Group, GroupSubscription, OrganizationMember, OrganizationMemberTeam,
-    ProjectOwnership, Rule, UserOption, UserReport
+    Activity, Event, Group, GroupSubscription, Organization, OrganizationMember,
+    OrganizationMemberTeam, ProjectOwnership, Rule, UserOption, UserReport
 )
 from sentry.ownership.grammar import Owner, Matcher, dump_schema
 from sentry.plugins import Notification
@@ -398,17 +399,19 @@ class MailPluginSignalsTest(TestCase):
     def plugin(self):
         return MailPlugin()
 
-    def test_user_feedback(self):
+    def create_report(self):
         user_foo = self.create_user('foo@example.com')
+        self.project.teams.first().organization.member_set.create(user=user_foo)
 
-        report = UserReport.objects.create(
+        return UserReport.objects.create(
             project=self.project,
             group=self.group,
             name='Homer Simpson',
             email='homer.simpson@example.com'
         )
 
-        self.project.teams.first().organization.member_set.create(user=user_foo)
+    def test_user_feedback(self):
+        report = self.create_report()
 
         with self.tasks():
             self.plugin.handle_signal(
@@ -420,9 +423,39 @@ class MailPluginSignalsTest(TestCase):
             )
 
         assert len(mail.outbox) == 1
+        msg = mail.outbox[0]
+
+        # email includes issue metadata
+        assert 'group-header' in msg.alternatives[0][0]
+        assert 'enhanced privacy' not in msg.body
+
+        assert msg.subject == u'[Sentry] {} - New Feedback from Homer Simpson'.format(
+            self.group.qualified_short_id,
+        )
+        assert msg.to == [self.user.email]
+
+    def test_user_feedback__enhanced_privacy(self):
+        self.organization.update(flags=F('flags').bitor(Organization.flags.enhanced_privacy))
+        assert self.organization.flags.enhanced_privacy.is_set is True
 
+        report = self.create_report()
+
+        with self.tasks():
+            self.plugin.handle_signal(
+                name='user-reports.created',
+                project=self.project,
+                payload={
+                    'report': serialize(report, AnonymousUser(), UserReportWithGroupSerializer()),
+                },
+            )
+
+        assert len(mail.outbox) == 1
         msg = mail.outbox[0]
 
+        # email does not include issue metadata
+        assert 'group-header' not in msg.alternatives[0][0]
+        assert 'enhanced privacy' in msg.body
+
         assert msg.subject == u'[Sentry] {} - New Feedback from Homer Simpson'.format(
             self.group.qualified_short_id,
         )
