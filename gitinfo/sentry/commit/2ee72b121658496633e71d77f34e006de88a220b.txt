commit 2ee72b121658496633e71d77f34e006de88a220b
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Thu Jan 9 11:11:09 2020 +0100

    feat: Separate datascrubbers v2 feature from Relay (#16323)
    
    * feat: Separate datascrubbers v2 feature from Relay
    
    * fix: Fix tests

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index b13591c5e2..05a81413bf 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -179,10 +179,12 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
 
         organization = self.context["project"].organization
         request = self.context["request"]
-        has_relays = features.has("organizations:relay", organization, actor=request.user)
-        if not has_relays:
+        has_datascrubbers_v2 = features.has(
+            "organizations:datascrubbers-v2", organization, actor=request.user
+        )
+        if not has_datascrubbers_v2:
             raise serializers.ValidationError(
-                "Organization does not have the relay feature enabled"
+                "Organization does not have the datascrubbers-v2 feature enabled"
             )
         return value
 
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 35fa5d5c22..e8addfd52f 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -840,7 +840,9 @@ SENTRY_FEATURES = {
     "organizations:invite-members": True,
     # Enable org-wide saved searches and user pinned search
     "organizations:org-saved-searches": False,
-    # Enable the relay functionality, for use with sentry semaphore. See
+    # Enable access to more advanced (alpha) datascrubbing settings.
+    "organizations:datascrubbers-v2": False,
+    # Enable usage of external relays, for use with sentry semaphore. See
     # https://github.com/getsentry/semaphore.
     "organizations:relay": False,
     # Enable basic SSO functionality, providing configurable single sign on
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index c11dd29cd4..58cee96e8f 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -76,6 +76,7 @@ default_manager.add("organizations:monitors", OrganizationFeature)  # NOQA
 default_manager.add("organizations:onboarding", OrganizationFeature)  # NOQA
 default_manager.add("organizations:org-saved-searches", OrganizationFeature)  # NOQA
 default_manager.add("organizations:relay", OrganizationFeature)  # NOQA
+default_manager.add("organizations:datascrubbers-v2", OrganizationFeature)  # NOQA
 default_manager.add("organizations:sso-basic", OrganizationFeature)  # NOQA
 default_manager.add("organizations:sso-rippling", OrganizationFeature)  # NOQA
 default_manager.add("organizations:sso-saml2", OrganizationFeature)  # NOQA
diff --git a/src/sentry/relay/config.py b/src/sentry/relay/config.py
index 9108ef51f9..9f4234a13d 100644
--- a/src/sentry/relay/config.py
+++ b/src/sentry/relay/config.py
@@ -65,6 +65,7 @@ def get_project_config(project, org_options=None, full_config=True, project_keys
         org_options = OrganizationOption.objects.get_all_values(project.organization_id)
 
     with Hub.current.start_span(op="get_public_config"):
+
         cfg = {
             "disabled": project.status > 0,
             "slug": project.slug,
diff --git a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
index 5294234a06..e0817bee0e 100644
--- a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
@@ -346,20 +346,18 @@ export const fields = {
   relayPiiConfig: {
     name: 'relayPiiConfig',
     type: 'string',
-    label: t('Custom Relay PII Config'),
-    placeholder: t(
-      'Paste a relay JSON PII config here. Leave empty to generate a default based on the above settings.'
-    ),
+    label: t('Advanced datascrubber configuration'),
+    placeholder: t('Paste a JSON configuration here.'),
     multiline: true,
     autosize: true,
     maxRows: 10,
     help: tct(
-      'If you put a custom JSON relay PII config here it overrides the default generated config.  This is pushed to all trusted relays.  [learn_more:Learn more]',
+      'Advanced JSON-based configuration for datascrubbing. Applied in addition to the settings above. [learn_more:Learn more]',
       {
-        learn_more: <a href="https://docs.sentry.io/relay/pii-config/" />,
+        learn_more: <a href="https://getsentry.github.io/semaphore/pii-config/" />,
       }
     ),
-    visible: ({features}) => features.has('relay'),
+    visible: ({features}) => features.has('datascrubbers-v2'),
     validate: ({id, form}) => {
       try {
         JSON.parse(form[id]);
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 6b8dc5fd67..90a86988ed 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -449,7 +449,7 @@ class ProjectUpdateTest(APITestCase):
         assert resp.data["storeCrashReports"] == 10
 
     def test_relay_pii_config(self):
-        with self.feature("organizations:relay"):
+        with self.feature("organizations:datascrubbers-v2"):
             value = '{"applications": {"freeform": []}}'
             resp = self.client.put(self.path, data={"relayPiiConfig": value})
             assert resp.status_code == 200, resp.content
