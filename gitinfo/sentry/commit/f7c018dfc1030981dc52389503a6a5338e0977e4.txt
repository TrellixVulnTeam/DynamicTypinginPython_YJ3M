commit f7c018dfc1030981dc52389503a6a5338e0977e4
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 11 16:30:46 2015 -0700

    Various fixes/tests for release webhook

diff --git a/src/sentry/web/frontend/release_webhook.py b/src/sentry/web/frontend/release_webhook.py
index 38cd02ea08..8b44f57a98 100644
--- a/src/sentry/web/frontend/release_webhook.py
+++ b/src/sentry/web/frontend/release_webhook.py
@@ -8,7 +8,7 @@ from django.http import HttpResponse
 from django.views.generic import View
 from django.utils.crypto import constant_time_compare
 
-from sentry.models import Project
+from sentry.models import Project, ProjectOption
 from sentry.plugins import plugins
 
 
@@ -25,14 +25,18 @@ class ReleaseWebhookView(View):
     def post(self, request, project_id, plugin_id, signature):
         project = Project.objects.get_from_cache(id=project_id)
 
-        plugin = plugins.get(plugin_id)
-        token = plugin.get_option(project, 'token')
+        token = ProjectOption.objects.get_value(project, 'sentry:release-token')
+
+        logging.info('Incoming webhook for project_id=%s, plugin_id=%s',
+                     project_id, plugin_id)
 
         if not self.verify(project_id, plugin_id, token, signature):
-            logging.info('Unable to verify signature for release hook')
+            logging.error('Unable to verify signature for release hook')
             return HttpResponse(status=403)
 
+        plugin = plugins.get(plugin_id)
         cls = plugin.get_release_hook()
         hook = cls(project)
         hook.handle(request)
+
         return HttpResponse(status=204)
diff --git a/tests/sentry/web/frontend/test_release_webhook.py b/tests/sentry/web/frontend/test_release_webhook.py
new file mode 100644
index 0000000000..ea6078d41e
--- /dev/null
+++ b/tests/sentry/web/frontend/test_release_webhook.py
@@ -0,0 +1,55 @@
+from __future__ import absolute_import
+
+import hashlib
+import hmac
+
+from django.core.urlresolvers import reverse
+from exam import fixture
+from mock import patch
+
+from sentry.models import ProjectOption
+from sentry.testutils import TestCase
+
+
+class ReleaseWebhookTest(TestCase):
+    def setUp(self):
+        super(ReleaseWebhookTest, self).setUp()
+        self.organization = self.create_organization()
+        self.team = self.create_team(organization=self.organization)
+        self.project = self.create_project(team=self.team)
+        self.token = 'a2587e3af83411e4a28634363b8514c2'
+        self.signature = hmac.new(
+            key=self.token,
+            msg='dummy-{}'.format(self.project.id),
+            digestmod=hashlib.sha256,
+        ).hexdigest()
+        ProjectOption.objects.set_value(
+            self.project, 'sentry:release-token', self.token)
+
+    @fixture
+    def path(self):
+        return reverse('sentry-release-hook', kwargs={
+            'project_id': self.project.id,
+            'plugin_id': 'dummy',
+            'signature': self.signature,
+        })
+
+    def test_invalid_signature(self):
+        path = reverse('sentry-release-hook', kwargs={
+            'project_id': self.project.id,
+            'plugin_id': 'dummy',
+            'signature': 'wrong',
+        })
+        resp = self.client.post(path)
+        assert resp.status_code == 403
+
+    @patch('sentry.plugins.plugins.get')
+    def test_valid_signature(self, mock_plugin_get):
+        MockPlugin = mock_plugin_get.return_value
+        MockReleaseHook = MockPlugin.get_release_hook.return_value
+        resp = self.client.post(self.path)
+        assert resp.status_code == 204
+        mock_plugin_get.assert_called_once_with('dummy')
+        MockPlugin.get_release_hook.assert_called_once_with()
+        MockReleaseHook.assert_called_once_with(self.project)
+        MockReleaseHook.return_value.handle.assert_called_once()
