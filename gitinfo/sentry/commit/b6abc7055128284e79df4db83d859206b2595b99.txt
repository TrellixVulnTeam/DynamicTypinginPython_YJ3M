commit b6abc7055128284e79df4db83d859206b2595b99
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Dec 10 15:59:52 2019 -0800

    ref: Prevent accessing any attribute on an event (#15783)
    
    Define which attributes of an event can be accessed and raise an exception on attempt to access invalid or private attributes.
    
    As a follow up, we shouldn't assume that the attribute name always matches the Snuba column name as well as the key in the nodestore object. When we start to fetch SnubaEvent from other datasets (eg. Discover) this will no longer be the case.

diff --git a/src/sentry/api/serializers/models/event.py b/src/sentry/api/serializers/models/event.py
index f34732a986..f10e134dbd 100644
--- a/src/sentry/api/serializers/models/event.py
+++ b/src/sentry/api/serializers/models/event.py
@@ -360,7 +360,7 @@ class SimpleEventSerializer(EventSerializer):
 
         return {
             "id": six.text_type(obj.id),
-            "event.type": six.text_type(obj.type),
+            "event.type": six.text_type(obj.get_event_type()),
             "groupID": six.text_type(obj.group_id) if obj.group_id else None,
             "eventID": six.text_type(obj.event_id),
             "projectID": six.text_type(obj.project_id),
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index 86c33cb7a7..ba7d136c59 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+import logging
 import six
 import string
 import pytz
@@ -30,6 +31,8 @@ from sentry.utils.canonical import CanonicalKeyDict, CanonicalKeyView
 from sentry.utils.safe import get_path
 from sentry.utils.strings import truncatechars
 
+logger = logging.getLogger(__name__)
+
 
 class EventDict(CanonicalKeyDict):
     """
@@ -419,6 +422,11 @@ class SnubaEvent(EventCommon):
         if name in ("_project_cache", "_group_cache", "_environment_cache"):
             raise AttributeError()
 
+        allowed_attributes = ["timestamp", "event_id", "group_id", "project_id"]
+
+        if name not in allowed_attributes:
+            logger.warn("event.invalid-attribute", extra={"attribute_name": name})
+
         if name in self.snuba_data:
             return self.snuba_data[name]
         else:
@@ -436,8 +444,8 @@ class SnubaEvent(EventCommon):
         tag deletions without having to rewrite nodestore blobs.
         """
         if "tags.key" in self.snuba_data and "tags.value" in self.snuba_data:
-            keys = getattr(self, "tags.key")
-            values = getattr(self, "tags.value")
+            keys = self.snuba_data["tags.key"]
+            values = self.snuba_data["tags.value"]
             if keys and values and len(keys) == len(values):
                 return sorted(zip(keys, values))
             else:
@@ -448,13 +456,19 @@ class SnubaEvent(EventCommon):
     def get_minimal_user(self):
         from sentry.interfaces.user import User
 
+        if all(key in self.snuba_data for key in ["user_id", "email", "username", "ip_address"]):
+            user_id = self.snuba_data["user_id"]
+            email = self.snuba_data["email"]
+            username = self.snuba_data["username"]
+            ip_address = self.snuba_data["ip_address"]
+        else:
+            user_id = self.data["user_id"]
+            email = self.data["email"]
+            username = self.data["username"]
+            ip_address = self.data["ip_address"]
+
         return User.to_python(
-            {
-                "id": self.user_id,
-                "email": self.email,
-                "username": self.username,
-                "ip_address": self.ip_address,
-            }
+            {"id": user_id, "email": email, "username": username, "ip_address": ip_address}
         )
 
     # If the data for these is available from snuba, we assume
diff --git a/tests/sentry/api/serializers/test_event.py b/tests/sentry/api/serializers/test_event.py
index 26b7d2eef1..4028aa6950 100644
--- a/tests/sentry/api/serializers/test_event.py
+++ b/tests/sentry/api/serializers/test_event.py
@@ -287,10 +287,10 @@ class SimpleEventSerializerTest(TestCase):
         assert result["location"] == event.location
         assert result["culprit"] == event.culprit
         assert result["dateCreated"] == event.datetime
-        assert result["user"]["id"] == event.user_id
-        assert result["user"]["email"] == event.email
-        assert result["user"]["username"] == event.username
-        assert result["user"]["ip_address"] == event.ip_address
+        assert result["user"]["id"] == event.get_minimal_user().id
+        assert result["user"]["email"] == event.get_minimal_user().email
+        assert result["user"]["username"] == event.get_minimal_user().username
+        assert result["user"]["ip_address"] == event.get_minimal_user().ip_address
         assert result["tags"] == [
             {"key": "user", "value": "email:test@test.com", "query": 'user.email:"test@test.com"'}
         ]
