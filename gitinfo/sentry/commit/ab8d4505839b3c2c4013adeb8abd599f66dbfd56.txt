commit ab8d4505839b3c2c4013adeb8abd599f66dbfd56
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Fri Jan 11 16:29:00 2019 +0100

    fix: Use safe urlencode from django (#11482)

diff --git a/src/sentry/interfaces/http.py b/src/sentry/interfaces/http.py
index 9547cdcfdc..2c49eb0e4f 100644
--- a/src/sentry/interfaces/http.py
+++ b/src/sentry/interfaces/http.py
@@ -15,7 +15,8 @@ import six
 
 from django.conf import settings
 from django.utils.translation import ugettext as _
-from six.moves.urllib.parse import parse_qsl, urlencode, urlsplit, urlunsplit
+from django.utils.http import urlencode
+from six.moves.urllib.parse import parse_qsl, urlsplit, urlunsplit
 
 from sentry.interfaces.base import Interface, InterfaceValidationError, prune_empty_keys
 from sentry.interfaces.schemas import validate_and_default_interface
diff --git a/tests/sentry/interfaces/test_http.py b/tests/sentry/interfaces/test_http.py
index a0666bcc7b..c762758b30 100644
--- a/tests/sentry/interfaces/test_http.py
+++ b/tests/sentry/interfaces/test_http.py
@@ -163,19 +163,19 @@ class HttpTest(TestCase):
         result = Http.to_python(
             dict(
                 url='http://example.com',
-                query_string=u'foo=bar\u2026',
+                query_string=u'foo\ufffd=bar\u2026',
                 fragment='fragment',
             )
         )
         assert result.url == 'http://example.com'
-        assert result.full_url == 'http://example.com?foo=bar...#fragment'
+        assert result.full_url == 'http://example.com?foo%EF%BF%BD=bar...#fragment'
 
     def test_query_string_and_fragment_in_url(self):
         result = Http.to_python(dict(
-            url=u'http://example.com?foo=bar#fragment\u2026',
+            url=u'http://example.com?foo\ufffd=bar#fragment\u2026',
         ))
         assert result.url == 'http://example.com'
-        assert result.full_url == 'http://example.com?foo=bar#fragment...'
+        assert result.full_url == 'http://example.com?foo%EF%BF%BD=bar#fragment...'
 
     def test_header_value_list(self):
         result = Http.to_python(dict(
