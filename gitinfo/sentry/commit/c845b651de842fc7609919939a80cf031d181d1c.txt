commit c845b651de842fc7609919939a80cf031d181d1c
Author: Dan Colish <dcolish@gmail.com>
Date:   Wed Jul 25 15:46:16 2012 -0700

    Correct deletion of unique index on sentry_groupedmessage and update
    natural_key

diff --git a/sentry/manager.py b/sentry/manager.py
index 6c87faa1e6..fe23ee4d89 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -633,8 +633,8 @@ class GroupManager(BaseManager, ChartMixin):
                 'last_seen': date,
             })
 
-    def get_by_natural_key(self, logger, culprit, checksum):
-        return self.get(logger=logger, view=culprit, checksum=checksum)
+    def get_by_natural_key(self, project, logger, culprit, checksum):
+        return self.get(project=project, logger=logger, view=culprit, checksum=checksum)
 
     def get_accelerated(self, queryset=None, minutes=15):
         # mintues should
diff --git a/sentry/migrations/0062_correct_del_index_sentry_groupedmessage_logger__view__checksum.py b/sentry/migrations/0062_correct_del_index_sentry_groupedmessage_logger__view__checksum.py
new file mode 100644
index 0000000000..4bd1104e77
--- /dev/null
+++ b/sentry/migrations/0062_correct_del_index_sentry_groupedmessage_logger__view__checksum.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+import datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        # Removing unique constraint on 'GroupedMessage', fields ['logger', 'view', 'checksum']
+        # FIXES 0015
+        db.delete_unique('sentry_groupedmessage', ['logger', 'view', 'checksum'])
+
+    def backwards(self, orm):
+        # Adding unique constraint on 'GroupedMessage', fields ['checksum', 'logger', 'view']
+        #FIXES 0015
+        db.create_unique('sentry_groupedmessage', ['checksum', 'logger', 'view'])
+
+    complete_apps = ['sentry']
diff --git a/sentry/models.py b/sentry/models.py
index bd7e86baac..5163c908a7 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -429,7 +429,7 @@ class Group(MessageBase):
         return '#'
 
     def natural_key(self):
-        return (self.logger, self.culprit, self.checksum)
+        return (self.project, self.logger, self.culprit, self.checksum)
 
     def get_score(self):
         return int(math.log(self.times_seen) * 600 + float(time.mktime(self.last_seen.timetuple())))
