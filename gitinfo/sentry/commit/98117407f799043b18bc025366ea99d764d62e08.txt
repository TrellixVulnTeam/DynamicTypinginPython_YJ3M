commit 98117407f799043b18bc025366ea99d764d62e08
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jan 9 11:04:57 2018 -0800

    fix(ui): Fix falsy values for FormFields (fixes auto resolve) (#6916)

diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index ddd49b5327..3016c42178 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -12,7 +12,11 @@ export default class FormField extends React.PureComponent {
     style: PropTypes.object,
 
     label: PropTypes.string,
+
+    // This is actually used but eslint doesn't parse it correctly
+    // eslint-disable-next-line react/no-unused-prop-types
     defaultValue: PropTypes.any,
+
     disabled: PropTypes.bool,
     disabledReason: PropTypes.string,
     help: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),
@@ -67,9 +71,9 @@ export default class FormField extends React.PureComponent {
       return props.value;
     }
     if (form && form.data.hasOwnProperty(props.name)) {
-      return form.data[props.name] || '';
+      return defined(form.data[props.name]) ? form.data[props.name] : '';
     }
-    return props.defaultValue || '';
+    return defined(props.defaultValue) ? props.defaultValue : '';
   }
 
   getError(props, context) {
diff --git a/src/sentry/static/sentry/app/views/projectSettings/pluginNavigation.jsx b/src/sentry/static/sentry/app/views/projectSettings/pluginNavigation.jsx
index 6103fe4dfa..45e8f6a4f8 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/pluginNavigation.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/pluginNavigation.jsx
@@ -11,7 +11,7 @@ const PluginNavigation = createReactClass({
   displayName: 'PluginNavigation',
   propTypes: {
     urlRoot: PropTypes.string,
-    plugins: PropTypes.arrayOf(SentryTypes.PluginShape),
+    plugins: SentryTypes.PluginsStore,
   },
 
   render() {
diff --git a/tests/js/spec/components/forms/rangeField.spec.jsx b/tests/js/spec/components/forms/rangeField.spec.jsx
index af2d4c6b5f..7beba069ed 100644
--- a/tests/js/spec/components/forms/rangeField.spec.jsx
+++ b/tests/js/spec/components/forms/rangeField.spec.jsx
@@ -42,5 +42,20 @@ describe('RangeField', function() {
       });
       expect(wrapper).toMatchSnapshot();
     });
+
+    it('renders with value=0 in form context', function() {
+      let wrapper = shallow(<RangeField name="fieldName" />, {
+        context: {
+          form: {
+            data: {
+              fieldName: 0,
+            },
+            errors: {},
+          },
+        },
+      });
+
+      expect(wrapper.find('input').prop('value')).toBe(0);
+    });
   });
 });
