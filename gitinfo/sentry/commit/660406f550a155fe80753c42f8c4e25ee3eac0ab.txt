commit 660406f550a155fe80753c42f8c4e25ee3eac0ab
Author: Xavier Ordoquy <xordoquy@linovia.com>
Date:   Mon Jan 2 13:59:39 2012 +0100

    Processors tests and bugfix.

diff --git a/sentry/processors/__init__.py b/sentry/processors/__init__.py
index 939f21a924..6b8a9abeff 100644
--- a/sentry/processors/__init__.py
+++ b/sentry/processors/__init__.py
@@ -25,10 +25,6 @@ PROCESSORS_CACHE = None
 def post_save_processors(sender, **kwargs):
     global PROCESSORS_CACHE
 
-    if PROCESSORS_CACHE is not None:
-        for processor in PROCESSORS_CACHE:
-            processor.post_processing(sender)
-
     from django.conf import settings
 
     if not hasattr(settings, 'SENTRY_PROCESSORS'):
@@ -49,6 +45,5 @@ def post_save_processors(sender, **kwargs):
             processors.append(processor_)
         PROCESSORS_CACHE = processors
 
-    for processor in settings.SENTRY_PROCESSORS:
-        print 'Calling processor: %s' % processor
-        print '  Sender:', sender
+    for processor in PROCESSORS_CACHE:
+        processor.post_processing(sender)
diff --git a/tests/processor.py b/tests/processor.py
index 6fed24bd89..83d979d6f8 100644
--- a/tests/processor.py
+++ b/tests/processor.py
@@ -1,6 +1,10 @@
 
 from sentry.processors import BaseProcessor
 
+CALLED = 0
+
 
 class TestProcessor(BaseProcessor):
-    pass
+    def post_processing(self, event):
+        global CALLED
+        CALLED += 1
diff --git a/tests/tests.py b/tests/tests.py
index ae252bd9a0..fbdacb7767 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -600,6 +600,8 @@ class SentryProcessorsTest(TestCase):
         django_settings.SENTRY_PROCESSORS = (
             'tests.processor.TestProcessor',
         )
+        from . import processor
+        processor.CALLED = 0
 
     def tearDown(self):
         django_settings.SENTRY_PROCESSORS = ()
@@ -613,9 +615,10 @@ class SentryProcessorsTest(TestCase):
     def test_processors_cache(self):
         self.assertEqual(processors.PROCESSORS_CACHE, None)
         self.create_event()
-        print '[', django_settings.SENTRY_PROCESSORS, ']', processors.PROCESSORS_CACHE
         self.assertEqual(len(processors.PROCESSORS_CACHE), 1)
 
     def test_processors_called(self):
         self.create_event()
-        self.assertTrue(False)
+        self.create_event()
+        from . import processor
+        self.assertEqual(processor.CALLED, 2)
