commit 00b104cfdd8d7dfe670224d84819d9115ff0e885
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Feb 28 11:16:47 2017 -0800

    Utility method for extracting multiline fields

diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 230db7505b..194abf0121 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -219,6 +219,14 @@ export function formatBytes(bytes) {
   return bytes.toFixed(1) + ' ' + units[u];
 }
 
+/**
+ * Converts a multi-line textarea input value into an array,
+ * eliminating empty lines
+ */
+export function extractMultilineFields(value) {
+  return value.split('\n').map(f => trim(f)).filter(f => f !== '');
+}
+
 // import/export sub-utils
 import parseLinkHeader from './utils/parseLinkHeader';
 import deviceNameMapper from './utils/deviceNameMapper';
diff --git a/src/sentry/static/sentry/app/views/organizationSettings.jsx b/src/sentry/static/sentry/app/views/organizationSettings.jsx
index fc514ef507..a2e051c777 100644
--- a/src/sentry/static/sentry/app/views/organizationSettings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationSettings.jsx
@@ -13,7 +13,7 @@ import LoadingIndicator from '../components/loadingIndicator';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
 import OrganizationStore from '../stores/organizationStore';
 import {t} from '../locale';
-import {trim} from '../utils';
+import {extractMultilineFields} from '../utils';
 
 
 const OrganizationSettingsForm = React.createClass({
@@ -83,12 +83,8 @@ const OrganizationSettingsForm = React.createClass({
         method: 'PUT',
         data: {
           ...formData,
-          safeFields: (
-            trim(formData.safeFields).split('\n').filter(f => f !== '')
-          ),
-          sensitiveFields: (
-            trim(formData.sensitiveFields).split('\n').filter(f => f !== '')
-          ),
+          safeFields: extractMultilineFields(formData.safeFields),
+          sensitiveFields: extractMultilineFields(formData.sensitiveFields),
         },
         success: (data) => {
           this.props.onSave(data);
diff --git a/tests/js/spec/utils/utils.spec.jsx b/tests/js/spec/utils/utils.spec.jsx
index 8efabf5819..ac26d3bf3c 100644
--- a/tests/js/spec/utils/utils.spec.jsx
+++ b/tests/js/spec/utils/utils.spec.jsx
@@ -1,4 +1,4 @@
-import {valueIsEqual} from 'app/utils';
+import {valueIsEqual, extractMultilineFields} from 'app/utils';
 
 describe('utils.valueIsEqual', function() {
 
@@ -85,3 +85,23 @@ describe('utils.valueIsEqual', function() {
     expect(isEqual).to.be.false;
   });
 });
+
+describe('utils.extractMultilineFields', function () {
+  it('should work for basic, simple values', function () {
+    expect(extractMultilineFields('one\ntwo\nthree')).to.deep.equal(['one', 'two', 'three']);
+  });
+
+  it('should return an empty array if only whitespace', function () {
+    expect(extractMultilineFields('    \n    \n\n\n   \n')).to.deep.equal([]);
+  });
+
+  it('should trim values and ignore empty lines', function () {
+    expect(extractMultilineFields(`one
+  two
+
+three
+        four
+
+five`)).to.deep.equal(['one', 'two', 'three', 'four', 'five']);
+  });
+});
\ No newline at end of file
