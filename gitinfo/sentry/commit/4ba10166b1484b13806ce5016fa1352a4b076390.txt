commit 4ba10166b1484b13806ce5016fa1352a4b076390
Author: Katie Byers <katie.byers@sentry.io>
Date:   Fri Nov 22 15:18:36 2019 -0800

    feat(filters): Add Firefox extensions to browser extensions filter (#15787)
    
    Per the MDN page here:
    
    https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/web_accessible_resources
    
    the `moz-extension://` scheme is how extensions access their resources, including their JS files.
    
    Adding this scheme here as well as in the relay version of the filter (https://github.com/getsentry/semaphore/pull/333).

diff --git a/src/sentry/message_filters.py b/src/sentry/message_filters.py
index 2fb690ceb4..e930808dd9 100644
--- a/src/sentry/message_filters.py
+++ b/src/sentry/message_filters.py
@@ -262,6 +262,8 @@ _EXTENSION_EXC_SOURCES = re.compile(
             r"static\.woopra\.com\/js\/woopra\.js",
             # Chrome extensions
             r"^chrome(?:-extension)?:\/\/",
+            # Firefox extensions
+            r"^moz-extension:\/\/",
             # Cacaoweb
             r"127\.0\.0\.1:4001\/isrunning",
             # Other
diff --git a/tests/sentry/filters/test_browser_extensions.py b/tests/sentry/filters/test_browser_extensions.py
index 419d33e50b..a98f4f4d82 100644
--- a/tests/sentry/filters/test_browser_extensions.py
+++ b/tests/sentry/filters/test_browser_extensions.py
@@ -61,6 +61,10 @@ class BrowserExtensionsFilterTest(TestCase):
         data = self.get_mock_data(exc_source="chrome-extension://my-extension/or/something")
         assert self.apply_filter(data)
 
+    def test_filters_firefox_extensions(self):
+        data = self.get_mock_data(exc_source="moz-extension://my-extension/or/something")
+        assert self.apply_filter(data)
+
     def test_does_not_filter_generic_data(self):
         data = self.get_mock_data()
         assert not self.apply_filter(data)
