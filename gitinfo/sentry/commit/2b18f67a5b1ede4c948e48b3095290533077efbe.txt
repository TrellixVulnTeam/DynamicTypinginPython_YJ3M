commit 2b18f67a5b1ede4c948e48b3095290533077efbe
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue May 24 02:24:27 2016 +0200

    Add u2f support to sudo

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index bade834b7b..dc9281dbde 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -984,3 +984,5 @@ EMAIL_HOST_PASSWORD = DEAD
 EMAIL_USE_TLS = DEAD
 SERVER_EMAIL = DEAD
 EMAIL_SUBJECT_PREFIX = DEAD
+
+SUDO_VIEW_NAME = 'sentry-sudo'
diff --git a/src/sentry/static/sentry/app/components/u2fsign.jsx b/src/sentry/static/sentry/app/components/u2fsign.jsx
index 7b9939dc91..e6ad9b1c94 100644
--- a/src/sentry/static/sentry/app/components/u2fsign.jsx
+++ b/src/sentry/static/sentry/app/components/u2fsign.jsx
@@ -5,19 +5,30 @@ import {t} from '../locale';
 
 const U2fSign = React.createClass({
   propTypes: {
-    challengeData: React.PropTypes.object
+    challengeData: React.PropTypes.object,
+    displayMode: React.PropTypes.string,
+  },
+
+  getDefaultProps() {
+    return {
+      displayMode: 'signin'
+    };
   },
 
   render() {
+    const {displayMode} = this.props;
     return (
       <U2fInterface
         challengeData={this.props.challengeData}
+        silentIfUnsupported={displayMode === 'sudo'}
         flowMode={'sign'}>
         <p>
-          {t(`
+          {displayMode === 'signin' ? t(`
             Insert your U2F device or tap the button on it to confirm the
             sign-in request.
-          `)}
+          `) : displayMode === 'sudo' ? t(`
+            Alternatively you can use your U2F device to confirm the action.
+          `) : null}
         </p>
       </U2fInterface>
     );
diff --git a/src/sentry/templates/sentry/account/sudo.html b/src/sentry/templates/sentry/account/sudo.html
index a55e6a4302..b1dd6bb904 100644
--- a/src/sentry/templates/sentry/account/sudo.html
+++ b/src/sentry/templates/sentry/account/sudo.html
@@ -2,6 +2,7 @@
 
 {% load crispy_forms_tags %}
 {% load i18n %}
+{% load sentry_helpers %}
 
 {% block title %}{% trans "Confirm Password" %} | {{ block.super }}{% endblock %}
 
@@ -48,6 +49,17 @@
                         <a href="{% url 'sentry-account-recover' %}">Forgot your password?</a>
                     </p>
                 </div>
+
+                {% if u2f_challenge %}
+                    <div id="u2f-challenge"></div>
+                    <script>
+                      ReactDOM.render(React.createElement(Sentry.U2fSign, {
+                        challengeData: {{ u2f_challenge|to_json|safe }},
+                        displayMode: 'sudo'
+                      }), document.getElementById('u2f-challenge'));
+                    </script>
+                {% endif %}
+
                 <p>
                     <button type="submit" class="btn btn-primary">{% trans "Continue" %}</button>
                 </p>
diff --git a/src/sentry/web/frontend/accounts_twofactor.py b/src/sentry/web/frontend/accounts_twofactor.py
index e070879d64..929b832b15 100644
--- a/src/sentry/web/frontend/accounts_twofactor.py
+++ b/src/sentry/web/frontend/accounts_twofactor.py
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+
 from django import forms
 from django.db import transaction
 from django.http import HttpResponseRedirect, Http404
diff --git a/src/sentry/web/frontend/sudo.py b/src/sentry/web/frontend/sudo.py
new file mode 100644
index 0000000000..5dd58b9fbf
--- /dev/null
+++ b/src/sentry/web/frontend/sudo.py
@@ -0,0 +1,26 @@
+from __future__ import absolute_import
+
+from sudo.views import SudoView as BaseSudoView
+
+from sentry.models import Authenticator
+from sentry.utils import json
+
+
+class SudoView(BaseSudoView):
+    template_name = 'sentry/account/sudo.html'
+
+    def handle_sudo(self, request, redirect_to, context):
+        interface = Authenticator.objects.get_interface(request.user, 'u2f')
+
+        if interface.is_available and interface.is_enrolled:
+            challenge = interface.activate(request).challenge
+            if request.method == 'POST':
+                if 'challenge' in request.POST:
+                    challenge = json.loads(request.POST['challenge'])
+                if 'response' in request.POST:
+                    response = json.loads(request.POST['response'])
+                    if interface.validate_response(request, challenge, response):
+                        return True
+            context['u2f_challenge'] = challenge
+
+        return BaseSudoView.handle_sudo(self, request, redirect_to, context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 3379d4abf5..37a67ed87a 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -74,6 +74,7 @@ from sentry.web.frontend.remove_project import RemoveProjectView
 from sentry.web.frontend.remove_project_key import RemoveProjectKeyView
 from sentry.web.frontend.remove_team import RemoveTeamView
 from sentry.web.frontend.replay_event import ReplayEventView
+from sentry.web.frontend.sudo import SudoView
 from sentry.web.frontend.user_avatar import UserAvatarPhotoView
 
 __all__ = ('urlpatterns',)
@@ -177,9 +178,7 @@ urlpatterns += patterns(
         name='sentry-login-redirect'),
     url(r'^register/$', AuthLoginView.as_view(),
         name='sentry-register'),
-    url(r'^account/sudo/$', 'sudo.views.sudo',
-        {'template_name': 'sentry/account/sudo.html'},
-        name='sentry-sudo'),
+    url(r'^account/sudo/$', SudoView.as_view(), name='sentry-sudo'),
     url(r'^account/recover/$', accounts.recover,
         name='sentry-account-recover'),
     url(r'^account/recover/confirm/(?P<user_id>[\d]+)/(?P<hash>[0-9a-zA-Z]+)/$', accounts.recover_confirm,
