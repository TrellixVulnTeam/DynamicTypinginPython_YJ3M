commit 9e4ff940d610a97fc100057ef600c7d93188aa31
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Dec 7 20:45:01 2015 +0100

    Added a command to dump cli help

diff --git a/bin/dump-command-help b/bin/dump-command-help
new file mode 100644
index 0000000000..4fbe9d2d1c
--- /dev/null
+++ b/bin/dump-command-help
@@ -0,0 +1,105 @@
+#!/usr/bin/env python
+import os
+import click
+from click.formatting import join_options
+
+from sentry.runner import cli as root_command
+
+
+def get_opts(param):
+    any_prefix_is_slash = []
+    def _write(opts):
+        rv, any_slashes = join_options(opts)
+        if any_slashes:
+            any_prefix_is_slash[:] = [True]
+        if not param.is_flag and not param.count:
+            rv += ' ' + param.make_metavar()
+        return rv
+    rv = [_write(param.opts)]
+    if param.secondary_opts:
+        rv.append(_write(param.secondary_opts))
+    return (any_prefix_is_slash and '; ' or ' / ').join(rv)
+
+
+def write_page(out, data):
+    path = data['path']
+    filename = os.path.join(out, *path) + '/index.rst'
+    dirname = os.path.dirname(filename)
+    try:
+        os.makedirs(dirname)
+    except OSError:
+        pass
+
+    args = [x['metavar'] for x in data['arguments']]
+    title = '`%s`' % ' '.join(data['path'] + args)
+    body = [
+        title,
+        '=' * len(title),
+        '',
+        data['help'] or '',
+    ]
+
+    body.append('')
+    body.append('Options')
+    body.append('-------')
+    body.append('')
+    for opt in data['options']:
+        prefix = '- `%s`: ' % opt['opt_string']
+        for line in click.wrap_text(
+                opt['help'] or '', 74, prefix, '  ').splitlines():
+            body.append(line)
+    body.append('- `--help`: print this help page.')
+
+    if data['subcommands']:
+        body.append('')
+        body.append('Subcommands')
+        body.append('-----------')
+        body.append('')
+        body.append('.. toctree::')
+        body.append('')
+        for subcmd in data['subcommands']:
+            body.append(' %s/index' % subcmd)
+        body.append('')
+
+    with open(filename, 'w') as f:
+        for line in body:
+            f.write('%s\n' % line.encode('utf-8'))
+
+
+def dump_command(out, cmd, path):
+    data = {
+        'path': path,
+        'help': cmd.help.replace('\b', ''),
+        'options': [],
+        'arguments': [],
+        'subcommands': [],
+    }
+
+    for param in cmd.params:
+        if isinstance(param, click.Option):
+            data['options'].append({
+                'opt_string': get_opts(param),
+                'help': param.help,
+            })
+        else:
+            data['arguments'].append({
+                'metavar': param.make_metavar(),
+            })
+
+    if isinstance(cmd, click.Group):
+        for child_name, child_cmd in cmd.commands.iteritems():
+            dump_command(out, child_cmd, path + [child_name])
+            data['subcommands'].append(child_name)
+
+    write_page(out, data)
+
+
+@click.command()
+@click.option('--output-path', 'out', type=click.Path(),
+              default='build/cli-help')
+def cli(out):
+    dump_command(out, root_command, ['lektor'])
+
+
+if __name__ == '__main__':
+    cli()
