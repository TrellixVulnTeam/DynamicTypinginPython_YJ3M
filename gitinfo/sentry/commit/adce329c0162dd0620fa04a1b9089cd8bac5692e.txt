commit adce329c0162dd0620fa04a1b9089cd8bac5692e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 3 01:51:33 2012 -0800

    Move plugin tests and remove with statement imports

diff --git a/tests/plugins/__init__.py b/tests/plugins/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/plugins/tests.py b/tests/plugins/tests.py
new file mode 100644
index 0000000000..099b4e4842
--- /dev/null
+++ b/tests/plugins/tests.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.models import Group
+from sentry.utils import MockDjangoRequest
+
+from tests.base import TestCase
+
+
+class SentryPluginTest(TestCase):
+    def test_registration(self):
+        from sentry.plugins import GroupActionProvider
+        self.assertEquals(len(GroupActionProvider.plugins), 4)
+
+    def test_get_actions(self):
+        from sentry.templatetags.sentry_helpers import get_actions
+        checksum = 'a' * 32
+        group = Group.objects.create(
+            project_id=1,
+            logger='root',
+            culprit='a',
+            checksum=checksum,
+            message='hi',
+        )
+
+        widgets = list(get_actions(group, MockDjangoRequest()))
+        self.assertEquals(len(widgets), 1)
diff --git a/tests/processors/tests.py b/tests/processors/tests.py
index 9ff4170607..38b657f59a 100644
--- a/tests/processors/tests.py
+++ b/tests/processors/tests.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 
-from __future__ import absolute_import, with_statement
+from __future__ import absolute_import
 
 
 from sentry.processors import Processor
diff --git a/tests/tasks/cleanup/tests.py b/tests/tasks/cleanup/tests.py
index 4654c13288..a6134661a2 100644
--- a/tests/tasks/cleanup/tests.py
+++ b/tests/tasks/cleanup/tests.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 
-from __future__ import absolute_import, with_statement
+from __future__ import absolute_import
 
 import logging
 
diff --git a/tests/tests.py b/tests/tests.py
index f2f8791408..8a69ed0ff1 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -1,18 +1,16 @@
 # -*- coding: utf-8 -*-
 
-from __future__ import absolute_import, with_statement
+from __future__ import absolute_import
 
 import getpass
 import logging
 
 from django.core import mail
-from django.core.urlresolvers import reverse
 
 from sentry.conf import settings
 from sentry.exceptions import InvalidInterface, InvalidData
 from sentry.interfaces import Interface
 from sentry.models import Group, Project
-from sentry.utils import MockDjangoRequest
 from sentry.utils.auth import get_auth_header
 from sentry.services.udp import SentryUDPServer
 
@@ -102,75 +100,11 @@ class SentryMailTest(TestCase):
         self.assertTrue('http://example.com/group/2' in out.body, out.body)
 
 
-class SentrySearchTest(TestCase):
-    def test_checksum_query(self):
-        checksum = 'a' * 32
-        g = Group.objects.create(
-            project_id=1,
-            logger='root',
-            culprit='a',
-            checksum=checksum,
-            message='hi',
-        )
-
-        with self.Settings(SENTRY_PUBLIC=True):
-            response = self.client.get(reverse('sentry-search', kwargs={'project_id': 1}), {'q': '%s$%s' % (checksum, checksum)})
-            self.assertEquals(response.status_code, 302)
-            self.assertEquals(response['Location'], 'http://testserver%s' % (g.get_absolute_url(),))
-
-    def test_dupe_checksum(self):
-        checksum = 'a' * 32
-        g1 = Group.objects.create(
-            project_id=1,
-            logger='root',
-            culprit='a',
-            checksum=checksum,
-            message='hi',
-        )
-        g2 = Group.objects.create(
-            project_id=1,
-            logger='root',
-            culprit='b',
-            checksum=checksum,
-            message='hi',
-        )
-
-        with self.Settings(SENTRY_PUBLIC=True):
-            response = self.client.get(reverse('sentry-search', kwargs={'project_id': 1}), {'q': '%s$%s' % (checksum, checksum)})
-            self.assertEquals(response.status_code, 200)
-            self.assertTemplateUsed(response, 'sentry/search.html')
-            context = response.context
-            self.assertTrue('event_list' in context)
-            self.assertEquals(len(context['event_list']), 2)
-            self.assertTrue(g1 in context['event_list'])
-            self.assertTrue(g2 in context['event_list'])
-
-
 class DummyInterface(Interface):
     def __init__(self, baz):
         self.baz = baz
 
 
-class SentryPluginTest(TestCase):
-    def test_registration(self):
-        from sentry.plugins import GroupActionProvider
-        self.assertEquals(len(GroupActionProvider.plugins), 4)
-
-    def test_get_actions(self):
-        from sentry.templatetags.sentry_helpers import get_actions
-        checksum = 'a' * 32
-        group = Group.objects.create(
-            project_id=1,
-            logger='root',
-            culprit='a',
-            checksum=checksum,
-            message='hi',
-        )
-
-        widgets = list(get_actions(group, MockDjangoRequest()))
-        self.assertEquals(len(widgets), 1)
-
-
 class SentryManagerTest(TestCase):
     def test_invalid_project(self):
         self.assertRaises(Project.DoesNotExist, Group.objects.from_kwargs, 2, message='foo')
diff --git a/tests/web/tests.py b/tests/web/tests.py
index ad65ec292b..df05a2bb5f 100644
--- a/tests/web/tests.py
+++ b/tests/web/tests.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 
-from __future__ import absolute_import, with_statement
+from __future__ import absolute_import
 
 import datetime
 import logging
