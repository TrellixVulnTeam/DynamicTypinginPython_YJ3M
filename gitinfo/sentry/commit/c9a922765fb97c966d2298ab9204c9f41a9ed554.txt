commit c9a922765fb97c966d2298ab9204c9f41a9ed554
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Fri May 11 09:31:44 2018 -0700

    feat: Turn on sentry 9 (#8409)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 28d87495e4..2617edb557 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -752,14 +752,15 @@ SENTRY_FEATURES = {
     'organizations:group-unmerge': False,
     'organizations:integrations-v3': False,
     'organizations:invite-members': True,
-    'organizations:new-settings': False,
+    'organizations:new-settings': True,
     'organizations:require-2fa': False,
     'organizations:environments': False,
     'organizations:internal-catchall': False,
-    'organizations:new-teams': False,
-    'organizations:code-owners': False,
+    'organizations:new-teams': True,
+    'organizations:code-owners': True,
     'organizations:unreleased-changes': False,
-    'organizations:dashboard': False,
+    'organizations:dashboard': True,
+    'organizations:suggested-commits': True,
     'organizations:relay': False,
     'projects:global-events': False,
     'projects:plugins': True,
diff --git a/tests/acceptance/test_create_project.py b/tests/acceptance/test_create_project.py
index 64c4d4021f..50e7b4284e 100644
--- a/tests/acceptance/test_create_project.py
+++ b/tests/acceptance/test_create_project.py
@@ -52,8 +52,8 @@ class CreateProjectTest(AcceptanceTestCase):
 
         self.browser.click('.ref-create-team')
         self.browser.wait_until('.modal-dialog')
-        input = self.browser.element('input[name="name"]')
-        input.send_keys('New Team')
+        input = self.browser.element('input[name="slug"]')
+        input.send_keys('new-team')
 
         self.browser.snapshot(name='create project no teams - create team modal')
         self.browser.element('.modal-dialog form').submit()
diff --git a/tests/acceptance/test_dashboard.py b/tests/acceptance/test_dashboard.py
index f149dd6b37..2251fbe68c 100644
--- a/tests/acceptance/test_dashboard.py
+++ b/tests/acceptance/test_dashboard.py
@@ -34,13 +34,8 @@ class DashboardTest(AcceptanceTestCase):
     def test_no_issues(self):
         self.project.update(first_event=None)
         self.browser.get(self.path)
-        # dashboard is a bit complex to load since it has many subcomponents
-        # so we bank on a few containers being enough of a check
-        self.browser.wait_until('.organization-home')
-        self.browser.wait_until('.dashboard-barchart')
         self.browser.wait_until_not('.loading-indicator')
-        self.browser.wait_until('.awaiting-events')
-        self.browser.snapshot('org dash no issues')
+        self.browser.snapshot('new dashboard empty')
 
     def test_one_issue(self):
         event = create_sample_event(
@@ -60,42 +55,5 @@ class DashboardTest(AcceptanceTestCase):
         )
         self.project.update(first_event=timezone.now())
         self.browser.get(self.path)
-        # dashboard is a bit complex to load since it has many subcomponents
-        # so we bank on the core container and the activity container being
-        # enough of a check
-        self.browser.wait_until('.organization-home')
-        self.browser.wait_until('.dashboard-barchart')
         self.browser.wait_until_not('.loading-indicator')
-        assert not self.browser.element_exists('.awaiting-events')
         self.browser.snapshot('org dash one issue')
-
-    def test_new_dashboard(self):
-        with self.feature('organizations:dashboard'):
-            self.browser.get(self.path)
-            self.browser.wait_until_not('.loading-indicator')
-            self.browser.snapshot('new dashboard')
-
-
-class EmptyDashboardTest(AcceptanceTestCase):
-    def setUp(self):
-        super(EmptyDashboardTest, self).setUp()
-        self.user = self.create_user('foo@example.com')
-        self.org = self.create_organization(
-            name='Rowdy Tiger',
-            owner=None,
-        )
-        self.team = self.create_team(organization=self.org, name='Mariachi Band')
-        self.create_member(
-            user=self.user,
-            organization=self.org,
-            role='owner',
-            teams=[self.team],
-        )
-        self.login_as(self.user)
-        self.path = '/{}/'.format(self.org.slug)
-
-    def test_new_dashboard_empty(self):
-        with self.feature('organizations:dashboard'):
-            self.browser.get(self.path)
-            self.browser.wait_until_not('.loading-indicator')
-            self.browser.snapshot('new dashboard empty')
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index d65876d92e..2b5a0a6ad3 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -90,7 +90,7 @@ class ProjectUpdateTest(APITestCase):
         })
         self.login_as(user=self.user)
 
-    def test_team_changes(self):
+    def test_team_changes_deprecated(self):
         project = self.create_project()
         team = self.create_team(members=[self.user])
         self.login_as(user=self.user)
@@ -106,30 +106,11 @@ class ProjectUpdateTest(APITestCase):
                 'team': team.slug,
             }
         )
-        assert resp.status_code == 200, resp.content
-        project = Project.objects.get(id=project.id)
-        assert project.teams.first() == team
-
-    def test_team_changes_not_found(self):
-        project = self.create_project()
-        self.login_as(user=self.user)
-        url = reverse(
-            'sentry-api-0-project-details',
-            kwargs={
-                'organization_slug': project.organization.slug,
-                'project_slug': project.slug,
-            }
-        )
-        resp = self.client.put(
-            url, data={
-                'team': 'the-team-that-does-not-exist',
-            }
-        )
         assert resp.status_code == 400, resp.content
-        assert resp.data['detail'][0] == 'The new team is not found.'
-        project = Project.objects.get(id=project.id)
+        assert resp.data['detail'][0] == 'Editing a team via this endpoint has been deprecated.'
 
-        assert project.teams.first() == self.team
+        project = Project.objects.get(id=project.id)
+        assert project.teams.first() != team
 
     def test_simple_member_restriction(self):
         project = self.create_project()
