commit 6514497f3dfe1b0fa716035101db2efed3b21ce3
Author: Anton Ovchinnikov <anton@tonyo.info>
Date:   Mon Nov 4 14:52:53 2019 +0100

    feat: More metrics for RelayProjectConfigsEndpoint (#15420)

diff --git a/src/sentry/api/endpoints/relay_projectconfigs.py b/src/sentry/api/endpoints/relay_projectconfigs.py
index e5e2915ae2..e21c57a5b8 100644
--- a/src/sentry/api/endpoints/relay_projectconfigs.py
+++ b/src/sentry/api/endpoints/relay_projectconfigs.py
@@ -8,6 +8,7 @@ from sentry.api.permissions import RelayPermission
 from sentry.api.authentication import RelayAuthentication
 from sentry.relay import config
 from sentry.models import Project, Organization, OrganizationOption
+from sentry.utils import metrics
 
 
 class RelayProjectConfigsEndpoint(Endpoint):
@@ -26,7 +27,8 @@ class RelayProjectConfigsEndpoint(Endpoint):
 
         project_ids = set(request.relay_request_data.get("projects") or ())
         if project_ids:
-            projects = {p.id: p for p in Project.objects.filter(pk__in=project_ids)}
+            with metrics.timer("relay_project_configs.fetching_projects.duration"):
+                projects = {p.id: p for p in Project.objects.filter(pk__in=project_ids)}
         else:
             projects = {}
 
@@ -34,15 +36,20 @@ class RelayProjectConfigsEndpoint(Endpoint):
         # database access when computing the project configuration.
         org_ids = set(project.organization_id for project in six.itervalues(projects))
         if org_ids:
-            orgs = {
-                o.id: o
-                for o in Organization.objects.filter(pk__in=org_ids)
-                if request.relay.has_org_access(o)
-            }
+            with metrics.timer("relay_project_configs.fetching_orgs.duration"):
+                orgs = {
+                    o.id: o
+                    for o in Organization.objects.filter(pk__in=org_ids)
+                    if request.relay.has_org_access(o)
+                }
         else:
             orgs = {}
         org_options = {i: OrganizationOption.objects.get_all_values(i) for i in six.iterkeys(orgs)}
 
+        metrics.timing("relay_project_configs.projects_requested", len(project_ids))
+        metrics.timing("relay_project_configs.projects_fetched", len(projects))
+        metrics.timing("relay_project_configs.orgs_fetched", len(orgs))
+
         configs = {}
         for project_id in project_ids:
             configs[six.text_type(project_id)] = None
@@ -58,9 +65,10 @@ class RelayProjectConfigsEndpoint(Endpoint):
             project.organization = organization
             org_opts = org_options.get(organization.id) or {}
 
-            project_config = config.get_project_config(
-                project, org_options=org_opts, full_config=full_config_requested
-            )
+            with metrics.timer("relay_project_configs.get_config.duration"):
+                project_config = config.get_project_config(
+                    project, org_options=org_opts, full_config=full_config_requested
+                )
             configs[six.text_type(project_id)] = project_config.to_camel_case_dict()
 
         return Response({"configs": configs}, status=200)
