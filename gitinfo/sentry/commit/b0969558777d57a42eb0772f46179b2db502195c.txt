commit b0969558777d57a42eb0772f46179b2db502195c
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jan 28 11:16:13 2016 -0800

    Make sure that stacktrace frames are a list
    
    Some clients sometimes send garbage here, and we end up erroring more
    loudly.

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 756b3676d9..2ad39db55e 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -537,6 +537,9 @@ class Stacktrace(Interface):
         if not data.get('frames'):
             raise InterfaceValidationError("No 'frames' present")
 
+        if not isinstance(data['frames'], list):
+            raise InterfaceValidationError("Invalid value for 'frames'")
+
         if has_system_frames is None:
             has_system_frames = cls.data_has_system_frames(data)
 
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index aaf0cb585f..115a4ecb71 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -56,6 +56,16 @@ class StacktraceTest(TestCase):
             'filename': 'foo.py',
         }]))
 
+    def test_requires_frames(self):
+        with self.assertRaises(InterfaceValidationError):
+            Stacktrace.to_python({})
+
+        with self.assertRaises(InterfaceValidationError):
+            Stacktrace.to_python(dict(frames=[]))
+
+        with self.assertRaises(InterfaceValidationError):
+            Stacktrace.to_python(dict(frames=1))
+
     def test_allows_abs_path_without_filename(self):
         interface = Stacktrace.to_python(dict(frames=[{
             'lineno': 1,
