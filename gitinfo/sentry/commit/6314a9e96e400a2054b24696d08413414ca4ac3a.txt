commit 6314a9e96e400a2054b24696d08413414ca4ac3a
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Feb 4 22:31:41 2014 -0800

    Pass along protocol for testing

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index d32d2d3b35..dd7518393c 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -116,7 +116,7 @@ class BaseTestCase(Fixtures, Exam):
         )
         return resp
 
-    def _getWithReferer(self, data, key=None, referer='getsentry.com'):
+    def _getWithReferer(self, data, key=None, referer='getsentry.com', protocol='4'):
         if key is None:
             key = self.projectkey.public_key
 
@@ -126,7 +126,7 @@ class BaseTestCase(Fixtures, Exam):
 
         message = self._makeMessage(data)
         qs = {
-            'sentry_version': '4',
+            'sentry_version': protocol,
             'sentry_client': 'raven-js/lol',
             'sentry_key': key,
             'sentry_data': message,
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 8155b854b3..1f3ebbabc7 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -176,13 +176,13 @@ class SentryRemoteTest(TestCase):
     @override_settings(SENTRY_ALLOW_ORIGIN='getsentry.com')
     def test_get_without_referer(self):
         kwargs = {'message': 'hello', 'server_name': 'not_dcramer.local', 'level': 40, 'site': 'not_a_real_site'}
-        resp = self._getWithReferer(kwargs, referer=None)
+        resp = self._getWithReferer(kwargs, referer=None, protocol='4')
         self.assertEquals(resp.status_code, 400, resp.content)
 
     @override_settings(SENTRY_ALLOW_ORIGIN='*')
     def test_get_without_referer_allowed(self):
         kwargs = {'message': 'hello', 'server_name': 'not_dcramer.local', 'level': 40, 'site': 'not_a_real_site'}
-        resp = self._getWithReferer(kwargs, referer=None)
+        resp = self._getWithReferer(kwargs, referer=None, protocol='4')
         self.assertEquals(resp.status_code, 200, resp.content)
 
     # def test_byte_sequence(self):
