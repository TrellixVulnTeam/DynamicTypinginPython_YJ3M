commit a723f2986e72dd0309a8e38b46d115aa4a24e6ca
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Feb 6 10:00:17 2020 -0800

    fix(workflow): Fix wrapping for actions with lots of inputs (#16779)
    
    This fixes wrapping for actions with lots of inputs

diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
index aa407cdc81..b9ccebe1db 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
@@ -48,20 +48,18 @@ class RuleNode extends React.Component<Props> {
     }
 
     return (
-      <SelectWrapper>
-        <SelectControl
-          deprecatedSelectControl
-          clearable={false}
-          placeholder={t('Select integration')}
-          noResultsText={t('No integrations available')}
-          height="35"
-          name={name}
-          value={initialVal}
-          choices={fieldConfig.choices}
-          key={name}
-          onChange={val => this.props.onPropertyChange(name, val)}
-        />
-      </SelectWrapper>
+      <SelectControl
+        deprecatedSelectControl
+        clearable={false}
+        placeholder={t('Select integration')}
+        noResultsText={t('No integrations available')}
+        height="35"
+        name={name}
+        value={initialVal}
+        choices={fieldConfig.choices}
+        key={name}
+        onChange={val => this.props.onPropertyChange(name, val)}
+      />
     );
   };
 
@@ -108,7 +106,7 @@ class RuleNode extends React.Component<Props> {
     return getFieldTypes[fieldConfig.type](name, fieldConfig);
   };
 
-  getComponent() {
+  renderRow() {
     const {data, node} = this.props;
 
     if (!node) {
@@ -149,15 +147,11 @@ class RuleNode extends React.Component<Props> {
   render() {
     const {data, onDelete} = this.props;
 
-    const component = this.getComponent();
-
     return (
       <React.Fragment>
         {data && <input type="hidden" name="id" value={data.id} />}
-        {component}
-        <div>
-          <Button onClick={onDelete} type="button" size="small" icon="icon-trash" />
-        </div>
+        {this.renderRow()}
+        <DeleteButton onClick={onDelete} type="button" size="small" icon="icon-trash" />
       </React.Fragment>
     );
   }
@@ -165,10 +159,6 @@ class RuleNode extends React.Component<Props> {
 
 export default RuleNode;
 
-const SelectWrapper = styled('div')`
-  width: 204px;
-`;
-
 const InlineInput = styled(Input)`
   width: auto;
 `;
@@ -176,8 +166,11 @@ const InlineInput = styled(Input)`
 const RuleNodeForm = styled('div')`
   display: grid;
   grid-gap: ${space(1)};
-  grid-auto-flow: column;
-  grid-auto-columns: min-content;
+  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
   align-items: center;
   white-space: nowrap;
 `;
+
+const DeleteButton = styled(Button)`
+  height: 36px;
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx
index 56fb7488e2..ec832df619 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx
@@ -97,9 +97,14 @@ const StyledSelectControl = styled(SelectControl)`
 
 const RuleNodes = styled('div')`
   display: grid;
-  grid-template-columns: max-content auto min-content;
-  flex-direction: column;
+  grid-template-columns: max-content auto max-content;
+  grid-template-rows: repeat(2, auto);
   align-items: center;
   margin-bottom: ${space(2)};
   grid-gap: ${space(1)};
+
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+    grid-template-columns: none;
+    grid-auto-flow: row;
+  }
 `;
