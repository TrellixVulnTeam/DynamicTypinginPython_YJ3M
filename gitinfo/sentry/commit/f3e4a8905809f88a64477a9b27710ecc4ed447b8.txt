commit f3e4a8905809f88a64477a9b27710ecc4ed447b8
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 28 16:53:17 2010 -0700

    Full support for optional request

diff --git a/djangodblog/__init__.py b/djangodblog/__init__.py
index 367be0b79f..26f23c008c 100644
--- a/djangodblog/__init__.py
+++ b/djangodblog/__init__.py
@@ -1 +1 @@
-__version__ = (2, 1, 2)
\ No newline at end of file
+__version__ = (2, 1, 3)
\ No newline at end of file
diff --git a/djangodblog/models.py b/djangodblog/models.py
index 8d4866f8b2..00029debc6 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -116,7 +116,7 @@ class ErrorBatch(Model):
                 data = dict()
 
             extra = dict(
-                url=request.build_absolute_uri(),
+                url=request and request.build_absolute_uri() or None,
                 data=data,
             )
 
diff --git a/djangodblog/tests.py b/djangodblog/tests.py
index 04d5e3c20f..c0fc3eda57 100644
--- a/djangodblog/tests.py
+++ b/djangodblog/tests.py
@@ -357,3 +357,25 @@ class DBLogTestCase(TestCase):
         self.assertEquals(last.class_name, 'DoesNotExist')
         self.assertEquals(last.level, logging.ERROR)
         self.assertEquals(last.message, smart_unicode(exc))        
+
+    def testSignalsWithoutRequest(self):
+        Error.objects.all().delete()
+        ErrorBatch.objects.all().delete()
+
+        request = RF.get("/", REMOTE_ADDR="127.0.0.1:8000")
+
+        try:
+            Error.objects.get(id=999999999)
+        except Error.DoesNotExist, exc:
+            got_request_exception.send(sender=self.__class__, request=None)
+        else:
+            self.fail('Expected an exception.')
+            
+        cur = (Error.objects.count(), ErrorBatch.objects.count())
+        self.assertEquals(cur, (1, 1), 'Assumed logs failed to save. %s' % (cur,))
+        last = Error.objects.all().order_by('-id')[0:1].get()
+        self.assertEquals(last.logger, 'root')
+        self.assertEquals(last.class_name, 'DoesNotExist')
+        self.assertEquals(last.level, logging.ERROR)
+        self.assertEquals(last.message, smart_unicode(exc))        
+
