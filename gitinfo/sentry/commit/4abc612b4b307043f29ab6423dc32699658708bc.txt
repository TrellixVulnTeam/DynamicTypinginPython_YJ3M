commit 4abc612b4b307043f29ab6423dc32699658708bc
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Nov 28 17:56:09 2018 -0800

    fix(stream): Check firstEvent render *after* groupID length (#10819)
    
    When using real-time polling, the firstEvent on the `project` will not
    be updated until the project is updated on the frontend.

diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 5eab50cba8..356588242f 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -710,10 +710,10 @@ const Stream = createReactClass({
       body = this.renderLoading();
     } else if (this.state.error) {
       body = <LoadingError message={this.state.error} onRetry={this.fetchData} />;
-    } else if (!project.firstEvent) {
-      body = this.renderAwaitingEvents();
     } else if (this.state.groupIds.length > 0) {
       body = this.renderGroupNodes(this.state.groupIds, this.state.statsPeriod);
+    } else if (!project.firstEvent) {
+      body = this.renderAwaitingEvents();
     } else {
       body = this.renderEmpty();
     }
diff --git a/tests/js/spec/views/stream/stream.spec.jsx b/tests/js/spec/views/stream/stream.spec.jsx
index 8650b2a3cc..3bf7e4e226 100644
--- a/tests/js/spec/views/stream/stream.spec.jsx
+++ b/tests/js/spec/views/stream/stream.spec.jsx
@@ -319,19 +319,30 @@ describe('Stream', function() {
       expect(wrapper.find('.empty-stream').length).toBeTruthy();
     });
 
-    it('shows "awaiting events" message when no events have been sent', function() {
-      context.project.firstEvent = false; // Set false for this test only
+    describe('no first event sent', function() {
+      it('shows "awaiting events" message when no events have been sent', function() {
+        context.project.firstEvent = false;
+        wrapper.setState({
+          error: false,
+          groupIds: [],
+          loading: false,
+          dataLoading: false,
+        });
 
-      wrapper.setState({
-        error: false,
-        groupIds: [],
-        loading: false,
-        dataLoading: false,
+        expect(wrapper.find(ErrorRobot)).toHaveLength(1);
       });
 
-      expect(wrapper.find(ErrorRobot)).toHaveLength(1);
+      it('does not show "awaiting events" when an event is recieved', function() {
+        context.project.firstEvent = false;
+        wrapper.setState({
+          error: false,
+          groupIds: ['1'],
+          loading: false,
+          dataLoading: false,
+        });
 
-      context.project.firstEvent = true; // Reset for other tests
+        expect(wrapper.find('.ref-group-list').length).toBeTruthy();
+      });
     });
 
     it('does not have real time event updates when events exist', function() {
