commit 39f180ccb0efac566f9c1a3e68b84319df31aaa4
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Mar 29 13:24:18 2015 -0700

    Revert "Correct cursor handling for reversed pagination"
    
    This reverts commit 0f386c11f223afc37340527fa3d8bdd402f08904.
    
    Conflicts:
            tests/sentry/api/endpoints/test_project_group_index.py

diff --git a/src/sentry/api/paginator.py b/src/sentry/api/paginator.py
index 99c4121435..c1899df227 100644
--- a/src/sentry/api/paginator.py
+++ b/src/sentry/api/paginator.py
@@ -99,16 +99,15 @@ class Paginator(object):
 
         # this effectively gets us the before post, and the current (after) post
         # every time
-        offset = cursor.offset
         if cursor.is_prev:
-            stop = offset + limit + 2
+            stop = cursor.offset + limit + 2
         else:
-            stop = offset + limit + 1
+            stop = cursor.offset + limit + 1
 
-        results = list(queryset[offset:stop])
+        results = list(queryset[cursor.offset:stop])
 
         if cursor.is_prev:
-            results = results[::-1][1:]
+            results = results[1:][::-1]
 
         return build_cursor(
             results=results,
diff --git a/src/sentry/utils/cursors.py b/src/sentry/utils/cursors.py
index 434f08b263..6d996ed43e 100644
--- a/src/sentry/utils/cursors.py
+++ b/src/sentry/utils/cursors.py
@@ -136,19 +136,24 @@ def build_cursor(results, key, limit=100, cursor=None):
     if is_prev and num_results:
         prev_value = long(key(results[0]))
 
-        if prev_value == value:
-            prev_offset = offset
+        if num_results > 2:
+            i = 1
+            while i < num_results and prev_value == long(key(results[i])):
+                i += 1
+            i -= 1
         else:
-            prev_offset = 0
+            i = 0
 
-        i = 0
-        while i < num_results and prev_value == long(key(results[i])):
-            i += 1
-        prev_offset += i
+        # if we iterated every result and the offset didn't change, we need
+        # to simply add the current offset to our total results (visible)
+        if prev_value == value:
+            prev_offset = offset + i
+        else:
+            prev_offset = i
     else:
         # previous cursor is easy if we're paginating forward
         prev_value = value
-        prev_offset = max(0, offset - 1)
+        prev_offset = offset
 
     # Truncate the list to our original result size now that we've determined the next page
     results = results[:limit]
