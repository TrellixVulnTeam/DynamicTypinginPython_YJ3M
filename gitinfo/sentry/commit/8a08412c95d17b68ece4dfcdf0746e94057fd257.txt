commit 8a08412c95d17b68ece4dfcdf0746e94057fd257
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Thu Apr 19 10:01:12 2018 -0700

    ref(snuba): Change top tags/values query to use new snuba (#8104)
    
    Top tags/values will now return the full set of normal and promoted tags
    and top values using the `tags_key` and `tags_value` special columns.

diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index c5104f669b..f5b46b4af4 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -242,12 +242,14 @@ class SnubaTagStorage(TagStorage):
             'issue': [group_id],
         }
         aggregations = [
-            ['topK(10)', 'tags.value', 'top'],
             ['count()', '', 'count'],
-            ['uniq', 'tags.key', 'uniq'],
+            ['topK(10)', 'tags_value', 'top'],
+            ['uniq', 'tags_value', 'uniq'],
         ]
-        results = snuba.query(start, end, ['tags.key'], None, filters,
-                              aggregations, arrayjoin='tags')
+        conditions = [
+            ['tags_value', 'IS NOT NULL', None],
+        ]
+        results = snuba.query(start, end, ['tags_key'], conditions, filters, aggregations)
 
         return [{
             'id': key,
diff --git a/tests/snuba/tagstore/test_backend.py b/tests/snuba/tagstore/test_backend.py
index cd798bde56..d960b71991 100644
--- a/tests/snuba/tagstore/test_backend.py
+++ b/tests/snuba/tagstore/test_backend.py
@@ -9,9 +9,7 @@ import requests
 import responses
 import six
 
-from sentry.utils import snuba
 from sentry.models import GroupHash, EventUser
-from sentry.testutils import TestCase
 from sentry.tagstore.exceptions import (
     GroupTagKeyNotFound,
     GroupTagValueNotFound,
@@ -19,6 +17,8 @@ from sentry.tagstore.exceptions import (
     TagValueNotFound,
 )
 from sentry.tagstore.snuba.backend import SnubaTagStorage
+from sentry.testutils import TestCase
+from sentry.utils import snuba
 
 
 class TagStorage(TestCase):
@@ -131,15 +131,19 @@ class TagStorage(TestCase):
             self.proj1group1.id,
             self.proj1env1.id,
         )
-        result.sort(key=lambda r: r['id'])
-        assert result[0]['key'] == 'baz'
-        assert result[1]['key'] == 'foo'
+        tags = [r['id'] for r in result]
+        assert set(tags) == set(['foo', 'baz', 'environment', 'release'])
 
+        result.sort(key=lambda r: r['id'])
+        assert result[0]['id'] == 'baz'
         assert result[0]['uniqueValues'] == 1
         assert result[0]['totalValues'] == 2
-
         assert result[0]['topValues'][0]['value'] == 'quux'
-        assert result[1]['topValues'][0]['value'] == 'bar'
+
+        assert result[3]['id'] == 'release'
+        assert result[3]['uniqueValues'] == 2
+        assert result[3]['totalValues'] == 2
+        assert result[3]['topValues'][0]['value'] == '100'
 
     def test_get_top_group_tag_values(self):
         resp = self.ts.get_top_group_tag_values(
