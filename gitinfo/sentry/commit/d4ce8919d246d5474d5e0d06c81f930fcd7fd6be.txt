commit d4ce8919d246d5474d5e0d06c81f930fcd7fd6be
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Wed Mar 22 14:58:05 2017 -0700

    Make VersionHoverCard more modular

diff --git a/src/sentry/static/sentry/app/components/group/seenInfo.jsx b/src/sentry/static/sentry/app/components/group/seenInfo.jsx
index 2f24e8aa2d..4668b6cafe 100644
--- a/src/sentry/static/sentry/app/components/group/seenInfo.jsx
+++ b/src/sentry/static/sentry/app/components/group/seenInfo.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 import DateTime from '../../components/dateTime';
 import TimeSince from '../../components/timeSince';
 import Version from '../../components/version';
+import VersionHoverCard from '../../components/versionHoverCard';
 import TooltipMixin from '../../mixins/tooltip';
 import {defined, toTitleCase} from '../../utils';
 import componentToString from '../../utils/componentToString';
@@ -20,6 +21,11 @@ const SeenInfo = React.createClass({
     hasRelease: React.PropTypes.bool.isRequired,
   },
 
+
+  contextTypes: {
+    organization: React.PropTypes.object,
+  },
+
   mixins: [
     TooltipMixin(function () {
       let instance = this;
@@ -84,7 +90,18 @@ const SeenInfo = React.createClass({
         )}
         <dt key={4}>{t('Release')}:</dt>
         {defined(release) ?
-          <dd key={5}><Version orgId={orgId} projectId={projectId} version={release.version} onIssuePage={true} /></dd>
+          <dd key={5}>
+          {new Set(this.context.organization.features).has('release-commits') ?
+            <VersionHoverCard
+              orgId={orgId}
+              projectId={projectId}
+              version={release.version}>
+              <Version orgId={orgId} projectId={projectId} version={release.version}/>
+            </VersionHoverCard>
+          :
+            <Version orgId={orgId} projectId={projectId} version={release.version}/>
+          }
+          </dd>
         : (!this.props.hasRelease ?
           <dd key={5}><small style={{marginLeft: 5, fontStyle: 'italic'}}><a href={this.getReleaseTrackingUrl()}>not configured</a></small></dd>
         :
diff --git a/src/sentry/static/sentry/app/components/hoverCard.jsx b/src/sentry/static/sentry/app/components/hoverCard.jsx
deleted file mode 100644
index c7d96957be..0000000000
--- a/src/sentry/static/sentry/app/components/hoverCard.jsx
+++ /dev/null
@@ -1,101 +0,0 @@
-import React from 'react';
-
-import Avatar from './avatar';
-
-import LoadingIndicator from './loadingIndicator';
-import LoadingError from './loadingError';
-
-import ApiMixin from '../mixins/apiMixin';
-
-const HoverCard = React.createClass({
-  propTypes: {
-    version: React.PropTypes.string.isRequired,
-    orgId: React.PropTypes.string.isRequired,
-    projectId: React.PropTypes.string.isRequired,
-    visible: React.PropTypes.bool.isRequired,
-  },
-
-  mixins: [ApiMixin],
-
-  getInitialState() {
-    return {
-      loading: true,
-      error: false,
-      data: {},
-    };
-  },
-
-  componentDidMount() {
-    let {orgId, version} = this.props;
-
-    let path = `/organizations/${orgId}/releases/${version}/`;
-    this.api.request(path, {
-      method: 'GET',
-      success: (data, _, jqXHR) => {
-        this.setState({
-          release: data,
-          loading: false,
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-        });
-      }
-    });
-  },
-
-  render() {
-
-    let {version, visible} = this.props;
-    let shortVersion = version.match(/^[a-f0-9]{40}$/) ? version.substr(0, 12) : version;
-    let release = this.state.release;
-    if (!visible) {
-      return null;
-    }
-
-    if (this.state.error) {
-      return(
-        <div className="hovercard">
-          <div className="hovercard-header">
-            <span>Release {shortVersion}</span>
-          </div>
-          <LoadingError />
-        </div>
-      );
-    }
-
-    return (
-      <div className="hovercard">
-        <div className="hovercard-header">
-          <span>Release {shortVersion}</span>
-        </div>
-        <div className="hovercard-body">
-        {this.state.loading ? <LoadingIndicator mini={true}/> :
-          <div className="row row-flex">
-            <div className="col-xs-4">
-              <h6>New Issues</h6>
-              <div className="count">{release.newGroups}</div>
-            </div>
-            <div className="col-xs-8">
-              <h6>{release.commitCount} commits by {release.authors.length} authors</h6>
-              <div className="avatar-grid">
-                {release.authors.map(author => {
-                  return (
-                    <span className="avatar-grid-item tip"
-                         title={author.name + ' ' + author.email}>
-                      <Avatar user={author}/>
-                    </span>
-                  );
-                })}
-              </div>
-            </div>
-          </div>
-        }
-        </div>
-      </div>
-    );
-  }
-});
-
-export default HoverCard;
diff --git a/src/sentry/static/sentry/app/components/version.jsx b/src/sentry/static/sentry/app/components/version.jsx
index 6ec29a0744..5d0a2c196c 100644
--- a/src/sentry/static/sentry/app/components/version.jsx
+++ b/src/sentry/static/sentry/app/components/version.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {Link} from 'react-router';
 
-import HoverCard from './hoverCard';
+import {getShortVersion} from '../utils';
 
 const Version = React.createClass({
   propTypes: {
@@ -9,50 +9,25 @@ const Version = React.createClass({
     version: React.PropTypes.string.isRequired,
     orgId: React.PropTypes.string.isRequired,
     projectId: React.PropTypes.string.isRequired,
-    onIssuePage: React.PropTypes.bool,
-  },
-
-  contextTypes: {
-    organization: React.PropTypes.object,
   },
 
   getDefaultProps() {
     return {
       anchor: true,
-      onIssuePage: false,
-    };
-  },
-
-  getInitialState() {
-    return {
-      showHovercard: false,
-      mountHovercard: false,
     };
   },
 
-  toggleHovercard () {
-    this.setState({
-      showHovercard: !this.state.showHovercard,
-      mountHovercard: true,
-    });
-  },
-
   render() {
     let {orgId, projectId, version} = this.props;
-    let shortVersion = version.match(/^[a-f0-9]{40}$/) ? version.substr(0, 12) : version;
+    let shortVersion = getShortVersion(version);
 
     if (this.props.anchor) {
       return (
         // NOTE: version is encoded because it can contain slashes "/",
         //       which can interfere with URL construction
-        <span onMouseEnter={this.toggleHovercard} onMouseLeave={this.toggleHovercard}>
           <Link to={`/${orgId}/${projectId}/releases/${encodeURIComponent(version)}/`}>
-          <span title={version}>{shortVersion}</span>
+            <span title={version}>{shortVersion}</span>
           </Link>
-          {this.state.mountHovercard && this.props.onIssuePage && new Set(this.context.organization.features).has('release-commits') &&
-            <HoverCard visible={this.state.showHovercard} orgId={orgId} projectId={projectId} version={version} />
-          }
-        </span>
       );
     }
     return <span title={version}>{shortVersion}</span>;
diff --git a/src/sentry/static/sentry/app/components/versionHoverCard.jsx b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
new file mode 100644
index 0000000000..279d964c6b
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/versionHoverCard.jsx
@@ -0,0 +1,108 @@
+import React from 'react';
+
+import Avatar from './avatar';
+
+import LoadingIndicator from './loadingIndicator';
+import LoadingError from './loadingError';
+
+import {getShortVersion} from '../utils';
+import ApiMixin from '../mixins/apiMixin';
+
+const VersionHoverCard = React.createClass({
+  propTypes: {
+    version: React.PropTypes.string.isRequired,
+    orgId: React.PropTypes.string.isRequired,
+    projectId: React.PropTypes.string.isRequired,
+  },
+
+  mixins: [ApiMixin],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      data: {},
+      visible: false,
+    };
+  },
+
+  componentDidMount() {
+    let {orgId, version} = this.props;
+
+    let path = `/organizations/${orgId}/releases/${version}/`;
+    this.api.request(path, {
+      method: 'GET',
+      success: (data, _, jqXHR) => {
+        this.setState({
+          release: data,
+          loading: false,
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+        });
+      }
+    });
+  },
+
+  toggleHovercard () {
+    this.setState({
+      visible: !this.state.visible,
+    });
+  },
+
+  renderBody() {
+    let {release} = this.state;
+
+    return (
+      <div className="hovercard-body">
+        {this.state.loading ? <LoadingIndicator mini={true}/> :
+          (this.state.error ? <LoadingError /> :
+            <div className="row row-flex">
+              <div className="col-xs-4">
+                <h6>New Issues</h6>
+                <div className="count">{release.newGroups}</div>
+              </div>
+              <div className="col-xs-8">
+                <h6>{release.commitCount} commits by {release.authors.length} authors</h6>
+                <div className="avatar-grid">
+                  {release.authors.map(author => {
+                    return (
+                      <span className="avatar-grid-item tip"
+                           title={author.name + ' ' + author.email}>
+                        <Avatar user={author}/>
+                      </span>
+                    );
+                  })}
+                </div>
+              </div>
+            </div>
+          )
+        }
+      </div>
+    );
+  },
+
+  render() {
+    let {version} = this.props;
+    let shortVersion = getShortVersion(version);
+    let {visible} = this.state;
+
+    return (
+      <span onMouseEnter={this.toggleHovercard} onMouseLeave={this.toggleHovercard}>
+        {this.props.children}
+        {visible &&
+          <div className="hovercard" >
+            <div className="hovercard-header">
+              <span>Release {shortVersion}</span>
+            </div>
+            {this.renderBody()}
+          </div>
+        }
+      </span>
+    );
+  }
+});
+
+export default VersionHoverCard;
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 194abf0121..6979a77c30 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -219,6 +219,10 @@ export function formatBytes(bytes) {
   return bytes.toFixed(1) + ' ' + units[u];
 }
 
+export function getShortVersion(version) {
+  return version.match(/^[a-f0-9]{40}$/) ? version.substr(0, 12) : version;
+}
+
 /**
  * Converts a multi-line textarea input value into an array,
  * eliminating empty lines
