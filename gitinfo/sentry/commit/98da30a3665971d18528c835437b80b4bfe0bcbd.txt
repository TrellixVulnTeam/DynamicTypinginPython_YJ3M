commit 98da30a3665971d18528c835437b80b4bfe0bcbd
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Feb 8 00:24:26 2017 +0100

    Pass frame index into the process_frame function

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 83d2a86260..e6201a58c4 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -640,7 +640,7 @@ class JavaScriptStacktraceProcessor(StacktraceProcessor):
         self.populate_source_cache(frames)
         return True
 
-    def process_frame(self, frame):
+    def process_frame(self, frame, idx=None):
         if not settings.SENTRY_SCRAPE_JAVASCRIPT_CONTEXT or \
            self.get_effective_platform(frame) != 'javascript':
             return
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index be32470076..4f9d6f8006 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -381,7 +381,7 @@ class NativeStacktraceProcessor(StacktraceProcessor):
         # dict.
         return self.sym.resolve_missing_vmaddrs()
 
-    def process_frame(self, frame):
+    def process_frame(self, frame, idx=None):
         # XXX: warn on missing availability?
 
         # Only process frames here that are of supported platforms and
diff --git a/src/sentry/stacktraces.py b/src/sentry/stacktraces.py
index 44a1f3250e..56ff828be4 100644
--- a/src/sentry/stacktraces.py
+++ b/src/sentry/stacktraces.py
@@ -33,7 +33,7 @@ class StacktraceProcessor(object):
     def get_effective_platform(self, frame):
         return frame.get('platform') or self.data['platform']
 
-    def process_frame(self, frame):
+    def process_frame(self, frame, idx=None):
         pass
 
 
@@ -119,13 +119,14 @@ def process_single_stacktrace(stacktrace_info, processors):
     processed_frames = []
     all_errors = []
 
-    for frame in stacktrace_info.stacktrace['frames']:
+    frame_count = len(stacktrace_info.stacktrace['frames'])
+    for idx, frame in enumerate(stacktrace_info.stacktrace['frames']):
         need_processed_frame = True
         need_raw_frame = True
         errors = None
         for processor in processors:
             try:
-                rv = processor.process_frame(frame)
+                rv = processor.process_frame(frame, frame_count - idx - 1)
                 if rv is None:
                     continue
             except Exception:
