commit cb5b819e62e40fcfca81d0876e987890341cfa1e
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 18 16:03:14 2015 -0800

    Add HelpPage list and details endpoints

diff --git a/src/sentry/api/endpoints/helppage_details.py b/src/sentry/api/endpoints/helppage_details.py
new file mode 100644
index 0000000000..98ec081f91
--- /dev/null
+++ b/src/sentry/api/endpoints/helppage_details.py
@@ -0,0 +1,25 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.base import Endpoint
+from sentry.api.serializers import serialize
+from sentry.models import HelpPage
+
+
+class HelpPageDetailsEndpoint(Endpoint):
+    permission_classes = ()
+
+    def get(self, request, page_id):
+        try:
+            page = HelpPage.objects.get_from_cache(
+                id=page_id,
+            )
+        except HelpPage.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        context = serialize(page)
+        context['content'] = page.content
+
+        return Response(context)
diff --git a/src/sentry/api/endpoints/helppage_index.py b/src/sentry/api/endpoints/helppage_index.py
new file mode 100644
index 0000000000..b53829b544
--- /dev/null
+++ b/src/sentry/api/endpoints/helppage_index.py
@@ -0,0 +1,18 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.base import Endpoint
+from sentry.api.serializers import serialize
+from sentry.models import HelpPage
+
+
+class HelpPageIndexEndpoint(Endpoint):
+    permission_classes = ()
+
+    def get(self, request):
+        pages = sorted(HelpPage.objects.filter(
+            is_visible=True,
+        ), key=lambda x: (-x.priority, x.title))
+
+        return Response(serialize(pages))
diff --git a/src/sentry/api/serializers/models/helppage.py b/src/sentry/api/serializers/models/helppage.py
new file mode 100644
index 0000000000..9e79f15227
--- /dev/null
+++ b/src/sentry/api/serializers/models/helppage.py
@@ -0,0 +1,14 @@
+from __future__ import absolute_import
+
+from sentry.api.serializers import Serializer, register
+from sentry.models import HelpPage
+
+
+@register(HelpPage)
+class HelpPageSerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        d = {
+            'id': str(obj.id),
+            'title': obj.title,
+        }
+        return d
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index fc6bbe0dad..d25cc5880b 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -13,6 +13,8 @@ from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
 from .endpoints.group_tagkey_values import GroupTagKeyValuesEndpoint
+from .endpoints.helppage_details import HelpPageDetailsEndpoint
+from .endpoints.helppage_index import HelpPageIndexEndpoint
 from .endpoints.index import IndexEndpoint
 from .endpoints.organization_member_details import OrganizationMemberDetailsEndpoint
 from .endpoints.organization_projects import OrganizationProjectsEndpoint
@@ -135,6 +137,14 @@ urlpatterns = patterns(
         EventDetailsEndpoint.as_view(),
         name='sentry-api-0-event-details'),
 
+    # Help Pages
+    url(r'^helppages/$',
+        HelpPageIndexEndpoint.as_view(),
+        name='sentry-api-0-helppage-index'),
+    url(r'^helppages/(?P<page_id>\d+)/$',
+        HelpPageDetailsEndpoint.as_view(),
+        name='sentry-api-0-helppage-details'),
+
     url(r'^$',
         IndexEndpoint.as_view(),
         name='sentry-api-catchall'),
diff --git a/tests/sentry/api/endpoints/test_helppage_details.py b/tests/sentry/api/endpoints/test_helppage_details.py
new file mode 100644
index 0000000000..f662f8c488
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_helppage_details.py
@@ -0,0 +1,21 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import HelpPage
+from sentry.testutils import APITestCase
+
+
+class HelpPageDetailsTest(APITestCase):
+    def test_simple(self):
+        page = HelpPage.objects.create(key='foo', title='Foo', content='bar')
+
+        url = reverse('sentry-api-0-helppage-details', kwargs={
+            'page_id': page.id,
+        })
+
+        response = self.client.get(url)
+
+        assert response.status_code == 200
+        assert response.data['id'] == str(page.id)
+        assert response.data['content'] == 'bar'
diff --git a/tests/sentry/api/endpoints/test_helppage_index.py b/tests/sentry/api/endpoints/test_helppage_index.py
new file mode 100644
index 0000000000..40978f77e0
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_helppage_index.py
@@ -0,0 +1,20 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import HelpPage
+from sentry.testutils import APITestCase
+
+
+class HelpPageListTest(APITestCase):
+    def test_simple(self):
+        HelpPage.objects.all().delete()
+        page = HelpPage.objects.create(key='foo', title='Foo', content='bar')
+
+        url = reverse('sentry-api-0-helppage-index')
+
+        response = self.client.get(url)
+
+        assert response.status_code == 200
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == str(page.id)
