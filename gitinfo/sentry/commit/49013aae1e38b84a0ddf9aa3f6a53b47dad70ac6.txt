commit 49013aae1e38b84a0ddf9aa3f6a53b47dad70ac6
Author: Chris Fuller <cfuller@sentry.io>
Date:   Thu Apr 16 22:30:59 2020 -0400

    fix(workflow): Adding alertrule manager + meta option migrations (#18299)

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 263ce6251b..f6bfc9f8dc 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0065_add_incident_status_method
+sentry: 0066_alertrule_manager
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0066_alertrule_manager.py b/src/sentry/migrations/0066_alertrule_manager.py
new file mode 100644
index 0000000000..7bec65af18
--- /dev/null
+++ b/src/sentry/migrations/0066_alertrule_manager.py
@@ -0,0 +1,43 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.29 on 2020-04-15 23:27
+from __future__ import unicode_literals
+
+from django.db import migrations
+import django.db.models.manager
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0065_add_incident_status_method'),
+    ]
+
+    operations = [
+        migrations.AlterModelOptions(
+            name='alertrule',
+            options={'base_manager_name': 'objects_with_snapshots', 'default_manager_name': 'objects_with_snapshots'},
+        ),
+        migrations.AlterModelManagers(
+            name='alertrule',
+            managers=[
+                ('objects_with_snapshots', django.db.models.manager.Manager()),
+            ],
+        ),
+    ]
