commit 266ba7e9072e757eb5ad99068f9feaa95f09acc3
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Dec 7 20:21:38 2015 -0800

    Don't check version-configured to determine if setup properly
    
    We should always check all of the Options keys to determine this state.
    
    The problem scenario is when a user has gone through the Install Wizard
    flow, configured things correctly, then either deletes a value from the
    database or edits it in their config file. This now brings the server
    back into an unconfigured state again.

diff --git a/src/sentry/templatetags/sentry_react.py b/src/sentry/templatetags/sentry_react.py
index 792410c72c..d50d876835 100644
--- a/src/sentry/templatetags/sentry_react.py
+++ b/src/sentry/templatetags/sentry_react.py
@@ -39,17 +39,15 @@ def _needs_upgrade():
         # we want to force an upgrade, even if the values are set.
         return True
 
-    # Already up to date, yay!
-    if version_configured == sentry.get_version():
-        return False
-
     # Check all required options to see if they've been set
     for key in options.filter(flag=options.FLAG_REQUIRED):
         if not options.get(key.name):
             return True
 
-    # Everything looks good, but version changed, so let's bump it
-    options.set('sentry:version-configured', sentry.get_version())
+    if version_configured != sentry.get_version():
+        # Everything looks good, but version changed, so let's bump it
+        options.set('sentry:version-configured', sentry.get_version())
+
     return False
 
 
