commit 7f36fd076d398eb1797d33287387cec9a07175a3
Author: Ted Kaemming <ted@kaemming.com>
Date:   Wed Nov 18 14:28:42 2015 -0800

    Replace `interval` with `minimum_delay`.

diff --git a/src/sentry/digests/backends/base.py b/src/sentry/digests/backends/base.py
index 847dff5116..2357664ba5 100644
--- a/src/sentry/digests/backends/base.py
+++ b/src/sentry/digests/backends/base.py
@@ -50,10 +50,10 @@ class Backend(object):
     be transitioned to "waiting" instead.)
     """
     def __init__(self, **options):
-        # The ``interval`` option defines the minimum amount of time (in
+        # The ``minimum_delay`` option defines the minimum amount of time (in
         # seconds) to wait between scheduling digests for delivery after the
         # initial scheduling.
-        self.interval = options.pop('interval', 60 * 5)
+        self.minimum_delay = options.pop('minimum_delay', 60 * 5)
 
         # The ``maximum_delay`` option defines the maximum amount of time (in
         # seconds) to wait between scheduling digests for delivery.
diff --git a/src/sentry/digests/backends/redis.py b/src/sentry/digests/backends/redis.py
index ba874559a7..af56782a1a 100644
--- a/src/sentry/digests/backends/redis.py
+++ b/src/sentry/digests/backends/redis.py
@@ -523,7 +523,7 @@ class RedisBackend(Backend):
 
                     cleanup_records(pipeline)
                     pipeline.zrem(make_schedule_key(self.namespace, SCHEDULE_STATE_READY), key)
-                    pipeline.zadd(make_schedule_key(self.namespace, SCHEDULE_STATE_WAITING), time.time() + self.interval, key)
+                    pipeline.zadd(make_schedule_key(self.namespace, SCHEDULE_STATE_WAITING), time.time() + self.minimum_delay, key)
                     pipeline.setex(make_last_processed_timestamp_key(timeline_key), self.ttl, int(time.time()))
                     pipeline.execute()
 
diff --git a/tests/sentry/digests/backends/test_redis.py b/tests/sentry/digests/backends/test_redis.py
index 7fe595a676..a2c8362dad 100644
--- a/tests/sentry/digests/backends/test_redis.py
+++ b/tests/sentry/digests/backends/test_redis.py
@@ -247,7 +247,7 @@ class DigestTestCase(BaseRedisBackendTestCase):
                 entries = list(entries)
                 assert entries == records[::-1]
 
-            next_scheduled_delivery = timestamp + backend.interval
+            next_scheduled_delivery = timestamp + backend.minimum_delay
             assert client.zscore(waiting_set_key, timeline) == next_scheduled_delivery
             assert int(client.get(make_last_processed_timestamp_key(timeline_key))) == int(timestamp)
 
@@ -314,4 +314,4 @@ class DigestTestCase(BaseRedisBackendTestCase):
                 entries = list(entries)
                 assert entries == (records + extra)[::-1]
 
-            assert client.zscore(waiting_set_key, timeline) == timestamp + backend.interval
+            assert client.zscore(waiting_set_key, timeline) == timestamp + backend.minimum_delay
