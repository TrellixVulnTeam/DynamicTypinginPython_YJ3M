commit 180f5feeb07f417c6ad71e802e8ecc6b15b11d1f
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Jul 19 12:38:19 2018 -0700

    chore(cmdpal): Add source for analytics events (#9108)
    
    omnisearch is now one of [settings_search, command_palette]

diff --git a/src/sentry/static/sentry/app/components/modals/commandPalette.jsx b/src/sentry/static/sentry/app/components/modals/commandPalette.jsx
index 4397495db1..23cf970863 100644
--- a/src/sentry/static/sentry/app/components/modals/commandPalette.jsx
+++ b/src/sentry/static/sentry/app/components/modals/commandPalette.jsx
@@ -6,6 +6,7 @@ import {t} from 'app/locale';
 import Search from 'app/components/search';
 import SearchResult from 'app/components/search/searchResult';
 import SearchResultWrapper from 'app/components/search/searchResultWrapper';
+import analytics from 'app/utils/analytics';
 
 const dropdownStyle = css`
   width: 100%;
@@ -23,6 +24,10 @@ class CommandPaletteModal extends React.Component {
     Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,
   };
 
+  componentDidMount() {
+    analytics('omnisearch.open');
+  }
+
   handleSuccess = data => {
     if (this.props.onClose) {
       this.props.onClose(data);
@@ -38,6 +43,7 @@ class CommandPaletteModal extends React.Component {
       <Body>
         <Search
           {...this.props}
+          source="command_palette"
           minSearch={1}
           maxResults={10}
           dropdownStyle={dropdownStyle}
diff --git a/src/sentry/static/sentry/app/components/search/index.jsx b/src/sentry/static/sentry/app/components/search/index.jsx
index 6b9f19a3fa..4102642b72 100644
--- a/src/sentry/static/sentry/app/components/search/index.jsx
+++ b/src/sentry/static/sentry/app/components/search/index.jsx
@@ -18,6 +18,9 @@ import replaceRouterParams from 'app/utils/replaceRouterParams';
 // "Omni" search
 class Search extends React.Component {
   static propTypes = {
+    // For analytics
+    source: PropTypes.oneOf(['settings_search', 'command_palette']).isRequired,
+
     router: PropTypes.object,
     /**
      * Render prop for the main input for the search
@@ -59,13 +62,13 @@ class Search extends React.Component {
   };
 
   componentDidMount() {
-    analytics('omnisearch.open');
+    analytics(`${this.props.source}.open`);
   }
 
   handleSelect = (item, state) => {
     if (!item) return;
 
-    analytics('omnisearch.select', {query: state && state.inputValue});
+    analytics(`${this.props.source}.select`, {query: state && state.inputValue});
 
     let {to} = item;
     if (!to) return;
@@ -76,7 +79,10 @@ class Search extends React.Component {
     navigateTo(nextPath, router);
   };
 
-  saveQueryMetrics = debounce(query => analytics('omnisearch.query', {query}), 200);
+  saveQueryMetrics = debounce(
+    query => analytics(`${this.props.source}.query`, {query}),
+    200
+  );
 
   renderItem = ({resultObj, index, highlightedIndex, getItemProps}) => {
     // resultObj is a fuse.js result object with {item, matches, score}
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsSearch/index.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsSearch/index.jsx
index 43d4b93b1d..7eda841c09 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsSearch/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsSearch/index.jsx
@@ -23,6 +23,7 @@ class SettingsSearch extends React.Component {
     return (
       <Search
         {...this.props}
+        source="settings_search"
         minSearch={MIN_SEARCH_LENGTH}
         maxResults={MAX_RESULTS}
         renderInput={({getInputProps}) => (
