commit 37064b53be85c0c03c036ca94f3d8edf8bc473d6
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Jun 3 17:12:34 2020 -0700

    fix(alerts): Include transaction types in discoverQuery (#19178)

diff --git a/src/sentry/api/serializers/models/incident.py b/src/sentry/api/serializers/models/incident.py
index f24f02dc66..7d5cba004f 100644
--- a/src/sentry/api/serializers/models/incident.py
+++ b/src/sentry/api/serializers/models/incident.py
@@ -90,8 +90,15 @@ class DetailedIncidentSerializer(IncidentSerializer):
 
     def _build_discover_query(self, incident):
         query = incident.alert_rule.snuba_query.query
-        if QueryDatasets(incident.alert_rule.snuba_query.dataset) == QueryDatasets.EVENTS:
+        dataset = QueryDatasets(incident.alert_rule.snuba_query.dataset)
+        condition = None
+
+        if dataset == QueryDatasets.EVENTS:
             condition = "event.type:error"
+        elif dataset == QueryDatasets.TRANSACTIONS:
+            condition = "event.type:transaction"
+
+        if condition:
             query = "{} {}".format(condition, query) if query else condition
 
         return query
diff --git a/tests/sentry/api/serializers/test_incident.py b/tests/sentry/api/serializers/test_incident.py
index 679869890b..952cd34164 100644
--- a/tests/sentry/api/serializers/test_incident.py
+++ b/tests/sentry/api/serializers/test_incident.py
@@ -10,6 +10,7 @@ from freezegun import freeze_time
 
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.incident import DetailedIncidentSerializer
+from sentry.snuba.models import QueryDatasets
 from sentry.incidents.logic import subscribe_to_incident
 from sentry.testutils import TestCase
 
@@ -44,11 +45,21 @@ class DetailedIncidentSerializerTest(TestCase):
         result = serialize(incident, serializer=serializer, user=self.user)
         assert result["isSubscribed"]
 
-    def test_alert_rule(self):
-        incident = self.create_incident()
+    def test_error_alert_rule(self):
         query = "test query"
+        incident = self.create_incident(query=query)
 
         serializer = DetailedIncidentSerializer()
         result = serialize(incident, serializer=serializer)
         assert result["alertRule"] == serialize(incident.alert_rule)
         assert result["discoverQuery"] == "event.type:error {}".format(query)
+
+    def test_transaction_alert_rule(self):
+        query = "test query"
+        alert_rule = self.create_alert_rule(dataset=QueryDatasets.TRANSACTIONS, query=query)
+        incident = self.create_incident(alert_rule=alert_rule)
+
+        serializer = DetailedIncidentSerializer()
+        result = serialize(incident, serializer=serializer)
+        assert result["alertRule"] == serialize(incident.alert_rule)
+        assert result["discoverQuery"] == "event.type:transaction {}".format(query)
