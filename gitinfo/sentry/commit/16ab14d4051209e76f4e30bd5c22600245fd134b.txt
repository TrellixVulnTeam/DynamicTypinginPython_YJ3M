commit 16ab14d4051209e76f4e30bd5c22600245fd134b
Author: jeffkwoh <23180853+jeffkwoh@users.noreply.github.com>
Date:   Fri Feb 21 16:32:59 2020 -0800

    feat(analytics): Track issue alert event #17150

diff --git a/src/sentry/analytics/events/issue_alert_fired.py b/src/sentry/analytics/events/issue_alert_fired.py
new file mode 100644
index 0000000000..17abd030d5
--- /dev/null
+++ b/src/sentry/analytics/events/issue_alert_fired.py
@@ -0,0 +1,17 @@
+from __future__ import absolute_import
+
+from sentry import analytics
+
+
+class IssueAlertFiredEvent(analytics.Event):
+    type = "issue_alert.fired"
+
+    attributes = (
+        analytics.Attribute("issue_id"),
+        analytics.Attribute("project_id"),
+        analytics.Attribute("organization_id"),
+        analytics.Attribute("rule_id"),
+    )
+
+
+analytics.register(IssueAlertFiredEvent)
diff --git a/src/sentry/rules/processor.py b/src/sentry/rules/processor.py
index fe55f8388a..40289cc45d 100644
--- a/src/sentry/rules/processor.py
+++ b/src/sentry/rules/processor.py
@@ -8,6 +8,7 @@ from datetime import timedelta
 from django.core.cache import cache
 from django.utils import timezone
 
+from sentry import analytics
 from sentry.models import GroupRuleStatus, Rule
 from sentry.rules import EventState, rules
 from sentry.utils.hashlib import hash_values
@@ -109,6 +110,14 @@ class RuleProcessor(object):
         if not passed:
             return
 
+        analytics.record(
+            "issue_alert.fired",
+            issue_id=self.group.id,
+            project_id=rule.project.id,
+            organization_id=rule.project.organization.id,
+            rule_id=rule.id,
+        )
+
         for action in rule.data.get("actions", ()):
             action_cls = rules.get(action["id"])
             if action_cls is None:
