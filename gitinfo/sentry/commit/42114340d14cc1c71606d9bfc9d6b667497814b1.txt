commit 42114340d14cc1c71606d9bfc9d6b667497814b1
Author: Tony <Zylphrex@users.noreply.github.com>
Date:   Mon Jun 29 16:58:09 2020 -0400

    fix(perf-view): Persist series selection in duration breakdown (#19602)
    
    In a transaction summary, the series selection in a duration break down will
    reset on page refresh and a drag zoom. This is not ideal as it will force the
    user to reconstruct their previous selection. This change will persist the
    series selection in the query params allowing the change to be persisted in
    these situations.

diff --git a/src/sentry/static/sentry/app/components/charts/baseChart.jsx b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
index af9069cb03..803c3eb699 100644
--- a/src/sentry/static/sentry/app/components/charts/baseChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
@@ -132,6 +132,8 @@ class BaseChart extends React.Component {
 
     onFinished: PropTypes.func,
 
+    onLegendSelectChanged: PropTypes.func,
+
     // Forwarded Ref
     forwardedRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
 
@@ -188,6 +190,8 @@ class BaseChart extends React.Component {
     datazoom: (...args) => callIfFunction(this.props.onDataZoom, ...args),
     restore: (...args) => callIfFunction(this.props.onRestore, ...args),
     finished: (...args) => callIfFunction(this.props.onFinished, ...args),
+    legendselectchanged: (...args) =>
+      callIfFunction(this.props.onLegendSelectChanged, ...args),
   };
 
   handleChartReady = (...args) => {
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx
index a90ae9c2c0..005dbe4cb1 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx
@@ -1,5 +1,7 @@
 import React from 'react';
+import {browserHistory} from 'react-router';
 import * as ReactRouter from 'react-router';
+import {Location} from 'history';
 
 import {OrganizationSummary} from 'app/types';
 import {Client} from 'app/api';
@@ -38,6 +40,7 @@ type ViewProps = Pick<EventView, typeof QUERY_KEYS[number]>;
 type Props = ReactRouter.WithRouterProps &
   ViewProps & {
     api: Client;
+    location: Location;
     organization: OrganizationSummary;
   };
 
@@ -48,17 +51,42 @@ const YAXIS_VALUES = ['p50()', 'p75()', 'p95()', 'p99()', 'p100()'];
  * percentiles over the past 7 days
  */
 class DurationChart extends React.Component<Props> {
+  handleLegendSelectChanged = legendChange => {
+    const {location} = this.props;
+    const {selected} = legendChange;
+    const unselected = Object.keys(selected).filter(key => !selected[key]);
+
+    const to = {
+      ...location,
+      query: {
+        ...location.query,
+        unselectedSeries: unselected,
+      },
+    };
+    browserHistory.push(to);
+  };
+
   render() {
     const {
       api,
       project,
       environment,
+      location,
       organization,
       query,
       statsPeriod,
       router,
     } = this.props;
 
+    const unselectedSeries = location.query.unselectedSeries ?? [];
+    const unselectedMetrics = Array.isArray(unselectedSeries)
+      ? unselectedSeries
+      : [unselectedSeries];
+    const seriesSelection = unselectedMetrics.reduce((selection, metric) => {
+      selection[metric] = false;
+      return selection;
+    }, {});
+
     const start = this.props.start
       ? getUtcToLocalDateObject(this.props.start)
       : undefined;
@@ -79,6 +107,7 @@ class DurationChart extends React.Component<Props> {
         fontSize: 11,
         fontFamily: 'Rubik',
       },
+      selected: seriesSelection,
     };
 
     const tooltip = {
@@ -173,6 +202,7 @@ class DurationChart extends React.Component<Props> {
                             <AreaChart
                               {...zoomRenderProps}
                               legend={legend}
+                              onLegendSelectChanged={this.handleLegendSelectChanged}
                               series={[...series, ...releaseSeries]}
                               seriesOptions={{
                                 showSymbol: false,
