commit 17d736a47ee197b907f3c38367ec7c7415cfaaf6
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Oct 12 07:19:20 2014 -0700

    Update project deletion to match team behavior

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index ea5cc11d84..15c718fe99 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -6,7 +6,8 @@ from sentry.api.decorators import sudo_required
 from sentry.api.permissions import assert_perm
 from sentry.api.serializers import serialize
 from sentry.constants import MEMBER_ADMIN
-from sentry.models import Project
+from sentry.models import Project, ProjectStatus
+from sentry.tasks.deletion import delete_project
 
 
 class ProjectSerializer(serializers.ModelSerializer):
@@ -68,7 +69,9 @@ class ProjectDetailsEndpoint(Endpoint):
         if not (request.user.is_superuser or project.team.owner_id == request.user.id):
             return Response('{"error": "form"}', status=status.HTTP_403_FORBIDDEN)
 
-        # TODO(dcramer): this needs to push it into the queue
-        project.delete()
+        project.update(status=ProjectStatus.PENDING_DELETION)
+
+        # we delay the task for 5 minutes so we can implement an undo
+        delete_project.delay(object_id=project.id, countdown=60 * 5)
 
         return Response(status=204)
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 8c2b7df834..626faeac9a 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -44,9 +44,6 @@ SEARCH_SORT_OPTIONS = SortedDict((
     ('new', _('First Seen')),
 ))
 
-STATUS_VISIBLE = 0
-STATUS_HIDDEN = 1
-
 STATUS_ACTIVE = 0
 STATUS_INACTIVE = 1
 
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index ecebd7074a..34cc20e154 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -14,7 +14,7 @@ from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.constants import (
-    PLATFORM_TITLES, PLATFORM_LIST, STATUS_VISIBLE, STATUS_HIDDEN
+    PLATFORM_TITLES, PLATFORM_LIST
 )
 from sentry.db.models import (
     Model, BoundedPositiveIntegerField, sane_repr
@@ -24,6 +24,14 @@ from sentry.manager import ProjectManager
 from sentry.utils.http import absolute_uri
 
 
+# TODO(dcramer): pull in enum library
+class ProjectStatus(object):
+    VISIBLE = 0
+    HIDDEN = 1
+    PENDING_DELETION = 2
+    DELETION_IN_PROGRESS = 3
+
+
 class Project(Model):
     """
     Projects are permission based namespaces which generally
@@ -44,8 +52,10 @@ class Project(Model):
     public = models.BooleanField(default=False)
     date_added = models.DateTimeField(default=timezone.now)
     status = BoundedPositiveIntegerField(default=0, choices=(
-        (STATUS_VISIBLE, _('Visible')),
-        (STATUS_HIDDEN, _('Hidden')),
+        (ProjectStatus.VISIBLE, _('Visible')),
+        (ProjectStatus.HIDDEN, _('Hidden')),
+        (ProjectStatus.PENDING_DELETION, _('Pending Deletion')),
+        (ProjectStatus.DELETION_IN_PROGRESS, _('Deletion in Progress')),
     ), db_index=True)
     platform = models.CharField(max_length=32, choices=PLATFORM_CHOICES, null=True)
 
diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index 3d00722c0c..497663aa79 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -51,10 +51,9 @@ def delete_team(object_id, **kwargs):
                    default_retry_delay=60 * 5, max_retries=None)
 @retry
 def delete_project(object_id, **kwargs):
-    from sentry.constants import STATUS_HIDDEN
     from sentry.models import (
-        Project, ProjectKey, TagKey, TagValue, GroupTagKey, GroupTagValue,
-        Activity, EventMapping, Event, Group
+        Project, ProjectKey, ProjectStatus, TagKey, TagValue, GroupTagKey,
+        GroupTagValue, Activity, EventMapping, Event, Group
     )
 
     try:
@@ -62,8 +61,8 @@ def delete_project(object_id, **kwargs):
     except Project.DoesNotExist:
         return
 
-    if p.status != STATUS_HIDDEN:
-        p.update(status=STATUS_HIDDEN)
+    if p.status != ProjectStatus.DELETION_IN_PROGRESS:
+        p.update(status=ProjectStatus.DELETION_IN_PROGRESS)
 
     logger = delete_project.get_logger()
 
diff --git a/src/sentry/templates/sentry/teams/projects/index.html b/src/sentry/templates/sentry/teams/projects/index.html
index 39007ff84f..75bb2b35fb 100644
--- a/src/sentry/templates/sentry/teams/projects/index.html
+++ b/src/sentry/templates/sentry/teams/projects/index.html
@@ -15,18 +15,17 @@
             <colgroup>
                 <col/>
                 <col width="140px"/>
+                <col width="140px"/>
             </colgroup>
             <tbody>
             {% for project in project_list %}
                 <tr>
                     <td>
                         <strong><a href="{% url 'sentry-manage-project' project.team.slug project.slug %}">{{ project.name }}</a></strong>
-                        {% if project.status == STATUS_HIDDEN %}
-                            (pending deletion)
-                        {% endif %}<br>
                          {{ team.slug }}/{{ project.slug }}
                     </td>
-                    <td style="text-align:right;">
+                    <td style="text-align:center">{{ project.get_status_display }}</td>
+                    <td style="text-align:right">
                       {% trans "Created" %} {{ project.date_added|timesince }}
                     </td>
                 </tr>
diff --git a/src/sentry/web/frontend/projects/remove.py b/src/sentry/web/frontend/projects/remove.py
index 921e53c54f..6763334293 100644
--- a/src/sentry/web/frontend/projects/remove.py
+++ b/src/sentry/web/frontend/projects/remove.py
@@ -12,7 +12,8 @@ from django.http import HttpResponseRedirect
 from django.views.decorators.csrf import csrf_protect
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.constants import MEMBER_OWNER, STATUS_HIDDEN
+from sentry.constants import MEMBER_OWNER
+from sentry.models import ProjectStatus
 from sentry.permissions import can_remove_project
 from sentry.tasks.deletion import delete_project
 from sentry.web.decorators import has_access
@@ -29,8 +30,8 @@ def remove_project(request, team, project):
     form = RemoveProjectForm(request.user, request.POST or None)
 
     if form.is_valid():
-        if project.status != STATUS_HIDDEN:
-            project.update(status=STATUS_HIDDEN)
+        if project.status == ProjectStatus.VISIBLE:
+            project.update(status=ProjectStatus.PENDING_DELETION)
             delete_project.delay(object_id=project.id)
 
         messages.add_message(
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index ce5620fd63..2f8862c66c 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -14,7 +14,7 @@ from django.utils.translation import ugettext as _
 
 from sudo.decorators import sudo_required
 
-from sentry.constants import MEMBER_USER, MEMBER_OWNER, STATUS_VISIBLE
+from sentry.constants import MEMBER_USER, MEMBER_OWNER
 from sentry.models import PendingTeamMember, TeamMember, AccessGroup, User
 from sentry.permissions import (
     can_add_team_member, can_remove_team, can_create_projects,
@@ -128,8 +128,6 @@ def manage_team_projects(request, team):
         return HttpResponseRedirect(reverse('sentry'))
 
     project_list = team.project_set.all()
-    if not request.user.is_superuser:
-        project_list = project_list.filter(status=STATUS_VISIBLE)
     project_list = sorted(project_list, key=lambda o: o.slug)
     for project in project_list:
         project.team = team
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index a0da86d8c0..c2a06ce83b 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -20,7 +20,7 @@ from django.utils.safestring import mark_safe
 
 from sentry import options
 from sentry.api.serializers.base import serialize
-from sentry.constants import EVENTS_PER_PAGE, STATUS_HIDDEN
+from sentry.constants import EVENTS_PER_PAGE
 from sentry.models import Project, Team, Option, ProjectOption
 
 logger = logging.getLogger('sentry.errors')
@@ -90,7 +90,6 @@ def get_default_context(request, existing_context=None, team=None):
         'EVENTS_PER_PAGE': EVENTS_PER_PAGE,
         'URL_PREFIX': settings.SENTRY_URL_PREFIX,
         'PLUGINS': plugins,
-        'STATUS_HIDDEN': STATUS_HIDDEN,
         'ALLOWED_HOSTS': settings.ALLOWED_HOSTS,
     }
 
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index f18f7bb793..da6f7f976e 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -8,8 +8,9 @@ import logging
 from django.core.urlresolvers import reverse
 from exam import before, fixture
 
-from sentry.constants import STATUS_HIDDEN
-from sentry.models import Project, ProjectKey, ProjectOption, TagKey
+from sentry.models import (
+    Project, ProjectKey, ProjectOption, ProjectStatus, TagKey
+)
 from sentry.testutils import TestCase
 
 logger = logging.getLogger(__name__)
@@ -170,7 +171,9 @@ class RemoveProjectTest(TestCase):
         assert resp.status_code == 302
         delete_project.delay.assert_called_once_with(
             object_id=self.project.id)
-        assert Project.objects.get(id=self.project.id).status == STATUS_HIDDEN
+
+        project = Project.objects.get(id=self.project.id)
+        assert project.status == ProjectStatus.PENDING_DELETION
 
 
 class ManageProjectTagsTest(TestCase):
