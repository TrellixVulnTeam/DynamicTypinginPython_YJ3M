commit df4440a4b55c946c5f56e01fa0d5b09b84c6b500
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Nov 6 21:31:34 2014 -0800

    Fix integration tests

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 23216d525c..93c00f9f2d 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -131,11 +131,12 @@ class BaseTestCase(Fixtures, Exam):
             secret = self.projectkey.secret_key
 
         message = self._makePostMessage(data)
-        resp = self.client.post(
-            reverse('sentry-api-store'), message,
-            content_type='application/octet-stream',
-            HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
-        )
+        with self.settings(CELERY_ALWAYS_EAGER=True):
+            resp = self.client.post(
+                reverse('sentry-api-store'), message,
+                content_type='application/octet-stream',
+                HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
+            )
         return resp
 
     def _getWithReferer(self, data, key=None, referer='getsentry.com', protocol='4'):
@@ -153,10 +154,11 @@ class BaseTestCase(Fixtures, Exam):
             'sentry_key': key,
             'sentry_data': message,
         }
-        resp = self.client.get(
-            '%s?%s' % (reverse('sentry-api-store', args=(self.project.pk,)), urllib.urlencode(qs)),
-            **headers
-        )
+        with self.settings(CELERY_ALWAYS_EAGER=True):
+            resp = self.client.get(
+                '%s?%s' % (reverse('sentry-api-store', args=(self.project.pk,)), urllib.urlencode(qs)),
+                **headers
+            )
         return resp
 
     _postWithSignature = _postWithHeader
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 59da41d807..eea139ce38 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -102,7 +102,9 @@ class RavenIntegrationTest(TestCase):
             dsn='http://%s:%s@localhost:8000/%s' % (
                 self.pk.public_key, self.pk.secret_key, self.pk.project_id)
         )
-        client.capture('Message', message='foo')
+
+        with self.settings(CELERY_ALWAYS_EAGER=True):
+            client.capture('Message', message='foo')
 
         send_remote.assert_called_once()
         self.assertEquals(Group.objects.count(), 1)
@@ -199,12 +201,13 @@ class SentryRemoteTest(TestCase):
         key = self.projectkey.public_key
         secret = self.projectkey.secret_key
 
-        resp = self.client.post(
-            self.path, message,
-            content_type='application/octet-stream',
-            HTTP_CONTENT_ENCODING='deflate',
-            HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
-        )
+        with self.settings(CELERY_ALWAYS_EAGER=True):
+            resp = self.client.post(
+                self.path, message,
+                content_type='application/octet-stream',
+                HTTP_CONTENT_ENCODING='deflate',
+                HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
+            )
 
         assert resp.status_code == 200, resp.content
 
@@ -229,12 +232,13 @@ class SentryRemoteTest(TestCase):
         key = self.projectkey.public_key
         secret = self.projectkey.secret_key
 
-        resp = self.client.post(
-            self.path, fp.getvalue(),
-            content_type='application/octet-stream',
-            HTTP_CONTENT_ENCODING='gzip',
-            HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
-        )
+        with self.settings(CELERY_ALWAYS_EAGER=True):
+            resp = self.client.post(
+                self.path, fp.getvalue(),
+                content_type='application/octet-stream',
+                HTTP_CONTENT_ENCODING='gzip',
+                HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
+            )
 
         assert resp.status_code == 200, resp.content
 
