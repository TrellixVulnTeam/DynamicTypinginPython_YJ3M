commit 5b1c0cd62dcbb17166e3bccdcec35ec0f0d49a1f
Author: David Cramer <dcramer@gmail.com>
Date:   Tue May 8 09:35:00 2018 -0700

    fix(ingest): Always bucket node_modules as system frames
    
    Fixes SDK-166

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 27e881d202..25df192292 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -676,20 +676,25 @@ class JavaScriptStacktraceProcessor(StacktraceProcessor):
 
                     # As noted above:
                     # * [js/node] '~/' means they're coming from node_modules, so these are not app dependencies
-                    # * [node] sames goes for `./node_modules/`, which is used when bundling node apps
+                    # * [node] sames goes for `./node_modules/` and '../node_modules/', which is used when bundling node apps
                     # * [node] and webpack, which includes it's own code to bootstrap all modules and its internals
                     #   eg. webpack:///webpack/bootstrap, webpack:///external
                     if filename.startswith('~/') or \
-                            filename.startswith('./node_modules/') or \
+                            '/node_modules/' in filename or \
                             not filename.startswith('./'):
                         in_app = False
                     # And conversely, local dependencies start with './'
                     elif filename.startswith('./'):
                         in_app = True
-
                     # We want to explicitly generate a webpack module name
                     new_frame['module'] = generate_module(filename)
 
+                # while you could technically use a subpath of 'node_modules' for your libraries,
+                # it would be an extremely complicated decision and we've not seen anyone do it
+                # so instead we assume if node_modules is in the path its part of the vendored code
+                elif '/node_modules/' in abs_path:
+                    in_app = False
+
                 if abs_path.startswith('app:'):
                     if filename and NODE_MODULES_RE.search(filename):
                         in_app = False
