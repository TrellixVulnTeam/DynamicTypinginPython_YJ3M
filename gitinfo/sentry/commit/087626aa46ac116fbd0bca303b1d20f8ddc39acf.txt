commit 087626aa46ac116fbd0bca303b1d20f8ddc39acf
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jan 2 14:47:59 2020 -0800

    fix: dataset_query expects aliases (#16233)
    
    The dataset_query function expects aliases to be passed so they can be
    resolved into column names for the requested dataset.
    
    This came up in https://github.com/getsentry/sentry/pull/15944

diff --git a/src/sentry/eventstore/snuba/backend.py b/src/sentry/eventstore/snuba/backend.py
index 56007d0cfa..7b934d7713 100644
--- a/src/sentry/eventstore/snuba/backend.py
+++ b/src/sentry/eventstore/snuba/backend.py
@@ -3,28 +3,33 @@ from __future__ import absolute_import
 import six
 from copy import deepcopy
 
+from sentry.eventstore.base import EventStorage
 from sentry.models import SnubaEvent
+from sentry.snuba.events import Columns
 from sentry.utils import snuba
-from sentry.eventstore.base import EventStorage
 from sentry.utils.validators import normalize_event_id
 
-DESC_ORDERING = ["-timestamp", "-event_id"]
-ASC_ORDERING = ["timestamp", "event_id"]
+EVENT_ID = Columns.EVENT_ID.value.alias
+PROJECT_ID = Columns.PROJECT_ID.value.alias
+TIMESTAMP = Columns.TIMESTAMP.value.alias
+
+DESC_ORDERING = ["-{}".format(TIMESTAMP), "-{}".format(EVENT_ID)]
+ASC_ORDERING = [TIMESTAMP, EVENT_ID]
 DEFAULT_LIMIT = 100
 DEFAULT_OFFSET = 0
 
 
 def get_before_event_condition(event):
     return [
-        ["timestamp", "<=", event.timestamp],
-        [["timestamp", "<", event.timestamp], ["event_id", "<", event.event_id]],
+        [TIMESTAMP, "<=", event.timestamp],
+        [[TIMESTAMP, "<", event.timestamp], [EVENT_ID, "<", event.event_id]],
     ]
 
 
 def get_after_event_condition(event):
     return [
-        ["timestamp", ">=", event.timestamp],
-        [["timestamp", ">", event.timestamp], ["event_id", ">", event.event_id]],
+        [TIMESTAMP, ">=", event.timestamp],
+        [[TIMESTAMP, ">", event.timestamp], [EVENT_ID, ">", event.event_id]],
     ]
 
 
@@ -147,7 +152,8 @@ class SnubaEventStorage(EventStorage):
         return [col.value.event_name for col in columns]
 
     def __get_event_id_from_filter(self, filter=None, orderby=None):
-        columns = ["event_id", "project_id"]
+        columns = [Columns.EVENT_ID.value.alias, Columns.PROJECT_ID.value.alias]
+
         try:
             result = snuba.dataset_query(
                 selected_columns=columns,
diff --git a/src/sentry/eventstore/snuba_discover/backend.py b/src/sentry/eventstore/snuba_discover/backend.py
index 6bcad49dcf..d675c1ecc0 100644
--- a/src/sentry/eventstore/snuba_discover/backend.py
+++ b/src/sentry/eventstore/snuba_discover/backend.py
@@ -8,6 +8,8 @@ from sentry.eventstore.base import EventStorage
 from sentry.eventstore.snuba.backend import (
     ASC_ORDERING,
     DESC_ORDERING,
+    EVENT_ID,
+    PROJECT_ID,
     get_after_event_condition,
     get_before_event_condition,
     SnubaEventStorage,
@@ -78,7 +80,8 @@ class SnubaDiscoverEventStorage(EventStorage):
         return self.__get_event_id_from_filter(filter=filter, orderby=DESC_ORDERING)
 
     def __get_event_id_from_filter(self, filter=None, orderby=None):
-        columns = ["event_id", "project_id", "timestamp"]
+        columns = [EVENT_ID, PROJECT_ID]
+
         try:
             result = snuba.dataset_query(
                 selected_columns=columns,
