commit 975b08750c384737ea61c13b25c4d4d0a73286f6
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Jul 23 14:51:51 2018 -0700

    fix(ui): Fix SelectField to support "multiple" property directly... (#9156)
    
    Instead of using the `<MultiSelectField>` you can use `multiple` property directly with `<SelectField>`. (Maybe follow up to remove `<MultiSelectField>`).
    Some integrations are passing `multi` to the field (i.e. JIRA) - it will be better if `<SelectField>` supports this type of field directly.
    
    Moved a lot of logic from the different "Select" components into `<SelectField>` so that it can support different combinations of "Select" fields. Now you can have "multiple" behavior in all Select fields.
    
    There was a disconnect between the value in local state (where `react-select` expects an object with `label` and `value` keys) and the value that our forms expect (just the raw value to be used).

diff --git a/docs-ui/components/multipleCheckbox.stories.js b/docs-ui/components/multipleCheckbox.stories.js
index f2c19e4e38..52452d5ff4 100644
--- a/docs-ui/components/multipleCheckbox.stories.js
+++ b/docs-ui/components/multipleCheckbox.stories.js
@@ -5,7 +5,7 @@ import {action} from '@storybook/addon-actions';
 
 import MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';
 
-storiesOf('Forms/Fields', module).add(
+storiesOf('Forms/Controls', module).add(
   'MultipleCheckbox',
   withInfo('Multiple Checkbox Control (controlled only atm)')(() => (
     <MultipleCheckbox
diff --git a/docs-ui/components/selectFields.stories.js b/docs-ui/components/selectFields.stories.js
new file mode 100644
index 0000000000..69e91e977e
--- /dev/null
+++ b/docs-ui/components/selectFields.stories.js
@@ -0,0 +1,51 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {action} from '@storybook/addon-actions';
+
+import {Form as LegacyForm} from 'app/components/forms';
+import SelectField from 'app/components/forms/selectField';
+import SelectCreatableField from 'app/components/forms/selectCreatableField';
+
+// eslint-disable-next-line
+storiesOf('Forms/Fields/Old', module)
+  .add(
+    'SelectField',
+    withInfo({
+      text: 'Select Field',
+      propTablesExclude: [LegacyForm],
+    })(() => (
+      <LegacyForm onSubmit={action('onSubmit')}>
+        <SelectField
+          name="foos"
+          choices={[['foo', 'Foo'], ['bar', 'Bar'], ['baz', 'Baz']]}
+        />
+        <SelectField
+          name="multi_foos"
+          choices={[['foo', 'Foo'], ['bar', 'Bar'], ['baz', 'Baz']]}
+          multiple
+        />
+      </LegacyForm>
+    ))
+  )
+  .add(
+    'SelectCreatableField',
+    withInfo({
+      text: 'Select Creatable Field',
+      propTablesExclude: [LegacyForm],
+    })(() => (
+      <LegacyForm onSubmit={action('onSubmit')}>
+        <SelectCreatableField
+          label="Creatable"
+          name="creatable_foos"
+          choices={[['foo', 'Foo'], ['bar', 'Bar'], ['baz', 'Baz']]}
+        />
+        <SelectCreatableField
+          label="Creatable (and Multiple)"
+          name="creatable_multi_foos"
+          multiple
+          choices={[['foo', 'Foo'], ['bar', 'Bar'], ['baz', 'Baz']]}
+        />
+      </LegacyForm>
+    ))
+  );
diff --git a/src/sentry/static/sentry/app/components/forms/multiSelectField.jsx b/src/sentry/static/sentry/app/components/forms/multiSelectField.jsx
index 3abf157c48..9ec15cad72 100644
--- a/src/sentry/static/sentry/app/components/forms/multiSelectField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multiSelectField.jsx
@@ -1,47 +1,15 @@
-import React from 'react';
 import PropTypes from 'prop-types';
 
-import {defined} from 'app/utils';
-import FormField from 'app/components/forms/formField';
-import MultiSelectControl from 'app/components/forms/multiSelectControl';
+import SelectField from 'app/components/forms/selectField';
 
-export default class MultiSelectField extends FormField {
+export default class MultiSelectField extends SelectField {
   static propTypes = {
     options: PropTypes.array,
     onChange: PropTypes.func,
     value: PropTypes.any,
   };
 
-  // Overriding this for now so that we can set default value to `[]`
-  getValue(props, context) {
-    let form = (context || this.context || {}).form;
-    props = props || this.props;
-    if (defined(props.value)) {
-      return props.value;
-    }
-    if (form && form.data.hasOwnProperty(props.name)) {
-      return defined(form.data[props.name]) ? form.data[props.name] : [];
-    }
-    return defined(props.defaultValue) ? props.defaultValue : [];
-  }
-
-  getClassName() {
-    return '';
-  }
-
-  onChange = (opts = []) => {
-    const value = opts.map(opt => opt.value);
-    this.setValue(value);
-  };
-
-  getField() {
-    return (
-      <MultiSelectControl
-        id={this.getId()}
-        value={this.state.value}
-        {...this.props}
-        onChange={this.onChange}
-      />
-    );
+  isMultiple() {
+    return true;
   }
 }
diff --git a/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx b/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx
index a880474d99..a626886db1 100644
--- a/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectAsyncField.jsx
@@ -1,8 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {defined} from 'app/utils';
-
 import SelectAsyncControl from './selectAsyncControl';
 import SelectField from './selectField';
 
@@ -36,46 +34,6 @@ class SelectAsyncField extends SelectField {
     placeholder: 'Start typing to search for an issue',
   };
 
-  componentWillReceiveProps(nextProps, nextContext) {
-    // super.componentWillReceiveProps(nextProps, nextContext);
-    let newError = this.getError(nextProps, nextContext);
-    if (newError != this.state.error) {
-      this.setState({error: newError});
-    }
-    if (this.props.value !== nextProps.value || defined(nextContext.form)) {
-      let newValue = this.getValue(nextProps, nextContext);
-      // This is the only thing that is different from parent, we compare newValue against coerved value in state
-      // To remain compatible with react-select, we need to store the option object that
-      // includes `value` and `label`, but when we submit the format, we need to coerce it
-      // to just return `value`. Also when field changes, it propagates the coerced value up
-      let coercedValue = this.coerceValue(this.state.value);
-
-      // newValue can be empty string because of `getValue`, while coerceValue needs to return null (to differentiate
-      // empty string from cleared item). We could use `!=` to compare, but lets be a bit more explicit with strict equality
-      //
-      // This can happen when this is apart of a field, and it re-renders onChange for a different field,
-      // there will be a mismatch between this component's state.value and `this.getValue` result above
-      if (newValue !== coercedValue && !!newValue !== !!coercedValue) {
-        this.setValue(newValue);
-      }
-    }
-  }
-
-  // Not sure why, but we need this to get react-select's `Creatable` to work properly
-  // Otherwise, when you hit "enter" to create a new item, the "selected value" does
-  // not update with new value (and also new value is not displayed in dropdown)
-  coerceValue(value) {
-    if (!value) return '';
-
-    if (this.isMultiple()) {
-      return value.map(v => v.value);
-    } else if (value.hasOwnProperty('value')) {
-      return value.value;
-    }
-
-    return value;
-  }
-
   onResults = data => {
     let {name} = this.props;
     let results = data && data[name];
@@ -88,12 +46,6 @@ class SelectAsyncField extends SelectField {
     return {autocomplete_query: query, autocomplete_field: this.props.name};
   };
 
-  onChange = opt => {
-    // Changing this will most likely break react-select (e.g. you won't be able to select
-    // a menu option that is from an async request).
-    this.setValue(opt);
-  };
-
   getField() {
     // Callers should be able to override all props except onChange
     // FormField calls props.onChange via `setValue`
diff --git a/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx b/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
index 5bb6882cf3..88dc92910c 100644
--- a/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
@@ -2,9 +2,10 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
+import {StyledForm} from 'app/components/forms/form';
 import {defined} from 'app/utils';
-import FormField from 'app/components/forms/formField';
 import SelectControl from 'app/components/forms/selectControl';
+import SelectField from 'app/components/forms/selectField';
 import convertFromSelect2Choices from 'app/utils/convertFromSelect2Choices';
 
 /**
@@ -12,9 +13,9 @@ import convertFromSelect2Choices from 'app/utils/convertFromSelect2Choices';
  *
  * This is used in some integrations
  */
-export default class SelectCreatableField extends FormField {
+export default class SelectCreatableField extends SelectField {
   static propTypes = {
-    ...FormField.propTypes,
+    ...SelectField.propTypes,
     options: SelectControl.propTypes.options,
     clearable: SelectControl.propTypes.clearable,
     choices: SelectControl.propTypes.choices,
@@ -33,7 +34,6 @@ export default class SelectCreatableField extends FormField {
   }
 
   componentWillReceiveProps(nextProps, nextContext) {
-    // super.componentWillReceiveProps(nextProps, nextContext);
     let newError = this.getError(nextProps, nextContext);
     if (newError != this.state.error) {
       this.setState({error: newError});
@@ -65,41 +65,34 @@ export default class SelectCreatableField extends FormField {
     return convertFromSelect2Choices(props.choices) || props.options;
   }
 
-  getClassName = () => '';
-
-  // Not sure why, but we need this to get react-select's `Creatable` to work properly
-  // Otherwise, when you hit "enter" to create a new item, the "selected value" does
-  // not update with new value (and also new value is not displayed in dropdown)
-  coerceValue(value) {
-    return value ? value.value : null;
-  }
-
-  onChange = opt => {
-    this.setValue(opt);
-  };
-
   getField() {
-    let {placeholder, disabled, required, clearable} = this.props;
+    let {placeholder, disabled, required, clearable, name} = this.props;
 
     return (
-      <FieldSeparator>
-        <SelectControl
-          creatable
-          id={this.getId()}
-          options={this.options}
-          placeholder={placeholder}
-          disabled={disabled}
-          required={required}
-          value={this.state.value}
-          onChange={this.onChange}
-          clearable={clearable}
-        />
-      </FieldSeparator>
+      <StyledSelectControl
+        creatable
+        id={this.getId()}
+        options={this.options}
+        placeholder={placeholder}
+        disabled={disabled}
+        required={required}
+        value={this.state.value}
+        onChange={this.onChange}
+        clearable={clearable}
+        multiple={this.isMultiple()}
+        name={name}
+      />
     );
   }
 }
 
 // This is because we are removing `control-group` class name which provides margin-bottom
-const FieldSeparator = styled('div')`
-  margin-bottom: 15px;
+const StyledSelectControl = styled(SelectControl)`
+  ${StyledForm} &, .form-stacked & {
+    .control-group & {
+      margin-bottom: 0;
+    }
+
+    margin-bottom: 15px;
+  }
 `;
diff --git a/src/sentry/static/sentry/app/components/forms/selectField.jsx b/src/sentry/static/sentry/app/components/forms/selectField.jsx
index 38844e9623..23b39d27e7 100644
--- a/src/sentry/static/sentry/app/components/forms/selectField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectField.jsx
@@ -1,7 +1,9 @@
-import React from 'react';
 import PropTypes from 'prop-types';
+import React from 'react';
 import styled from 'react-emotion';
 
+import {defined} from 'app/utils';
+
 import {StyledForm} from './form';
 import FormField from './formField';
 import SelectControl from './selectControl';
@@ -22,9 +24,69 @@ export default class SelectField extends FormField {
     multiple: false,
   };
 
-  isMultiple() {
+  componentWillReceiveProps(nextProps, nextContext) {
+    let newError = this.getError(nextProps, nextContext);
+    if (newError != this.state.error) {
+      this.setState({error: newError});
+    }
+    if (this.props.value !== nextProps.value || defined(nextContext.form)) {
+      let newValue = this.getValue(nextProps, nextContext);
+      // This is the only thing that is different from parent, we compare newValue against coerved value in state
+      // To remain compatible with react-select, we need to store the option object that
+      // includes `value` and `label`, but when we submit the format, we need to coerce it
+      // to just return `value`. Also when field changes, it propagates the coerced value up
+      let coercedValue = this.coerceValue(this.state.value);
+
+      // newValue can be empty string because of `getValue`, while coerceValue needs to return null (to differentiate
+      // empty string from cleared item). We could use `!=` to compare, but lets be a bit more explicit with strict equality
+      //
+      // This can happen when this is apart of a field, and it re-renders onChange for a different field,
+      // there will be a mismatch between this component's state.value and `this.getValue` result above
+      if (newValue !== coercedValue && !!newValue !== !!coercedValue) {
+        this.setValue(newValue);
+      }
+    }
+  }
+
+  // Overriding this so that we can support `multi` fields through property
+  getValue(props, context) {
+    let form = (context || this.context || {}).form;
+    props = props || this.props;
+
+    // Don't use `isMultiple` here because we're taking props from args as well
+    let defaultValue = this.isMultiple(props) ? [] : '';
+
+    if (defined(props.value)) {
+      return props.value;
+    }
+    if (form && form.data.hasOwnProperty(props.name)) {
+      return defined(form.data[props.name]) ? form.data[props.name] : defaultValue;
+    }
+    return defined(props.defaultValue) ? props.defaultValue : defaultValue;
+  }
+
+  // We need this to get react-select's `Creatable` to work properly
+  // Otherwise, when you hit "enter" to create a new item, the "selected value" does
+  // not update with new value (and also new value is not displayed in dropdown)
+  //
+  // This is also needed to get `multi` select working since we need the {label, value} object
+  // for react-select (but forms expect just the value to be propagated)
+  coerceValue(value) {
+    if (!value) return '';
+
+    if (this.isMultiple()) {
+      return value.map(v => v.value);
+    } else if (value.hasOwnProperty('value')) {
+      return value.value;
+    }
+
+    return value;
+  }
+
+  isMultiple(props) {
+    props = props || this.props;
     // this is to maintain compatibility with the 'multi' prop
-    return this.props.multi || this.props.multiple;
+    return props.multi || props.multiple;
   }
 
   getClassName() {
@@ -32,12 +94,22 @@ export default class SelectField extends FormField {
   }
 
   onChange = opt => {
-    const value = opt ? opt.value : null;
-    this.setValue(value);
+    // Changing this will most likely break react-select (e.g. you won't be able to select
+    // a menu option that is from an async request, or a multi select).
+    this.setValue(opt);
   };
 
   getField() {
-    const {options, creatable, choices, placeholder, disabled, required} = this.props;
+    const {
+      options,
+      clearable,
+      creatable,
+      choices,
+      placeholder,
+      disabled,
+      required,
+      name,
+    } = this.props;
 
     return (
       <StyledSelectControl
@@ -49,9 +121,10 @@ export default class SelectField extends FormField {
         disabled={disabled}
         required={required}
         value={this.state.value}
-        onChange={this.onChange.bind(this)}
-        clearable={this.props.clearable}
+        onChange={this.onChange}
+        clearable={clearable}
         multiple={this.isMultiple()}
+        name={name}
       />
     );
   }
diff --git a/tests/js/helpers/select.js b/tests/js/helpers/select.js
index 9a3e8645b7..c7a5a5b87d 100644
--- a/tests/js/helpers/select.js
+++ b/tests/js/helpers/select.js
@@ -11,7 +11,7 @@ export function getSelector(options = {}) {
 
 export function openMenu(wrapper, options = {}) {
   let selector = getSelector(options);
-  wrapper.find(`${selector} input`).simulate('focus');
+  wrapper.find(`${selector} input[role="combobox"]`).simulate('focus');
   wrapper.find(`${selector} .Select-control`).simulate('mouseDown', {button: 0});
 
   return wrapper;
diff --git a/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
index f280d1db08..d52b7b52af 100644
--- a/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
@@ -17,12 +17,14 @@ exports[`GenericField renders text as TextInput 1`] = `
 exports[`GenericField renders text with choices as SelectCreatableField 1`] = `
 <SelectCreatableField
   choices={Array []}
+  clearable={true}
   disabled={false}
   formState="Ready"
   help={null}
   hideErrorMessage={false}
   key="field-name"
   label="field label*"
+  multiple={false}
   name="field-name"
   required={true}
   type="text"
diff --git a/tests/js/spec/components/forms/__snapshots__/multiSelectField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/multiSelectField.spec.jsx.snap
index 1402da6e82..b30381a9ef 100644
--- a/tests/js/spec/components/forms/__snapshots__/multiSelectField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/multiSelectField.spec.jsx.snap
@@ -7,10 +7,11 @@ exports[`MultiSelectField render() renders without form context 1`] = `
   <div
     className="controls"
   >
-    <MultiSelectControl
+    <StyledSelectControl
+      clearable={true}
       disabled={false}
-      hideErrorMessage={false}
       id="id-fieldName"
+      multiple={true}
       name="fieldName"
       onChange={[Function]}
       options={
diff --git a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
index 6e6faa13de..9d10240ec6 100644
--- a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
@@ -19,6 +19,7 @@ exports[`SelectField renders with flat choices 1`] = `
       disabled={false}
       id="id-fieldName"
       multiple={false}
+      name="fieldName"
       onChange={[Function]}
       required={false}
       value="fieldValue"
@@ -55,6 +56,7 @@ exports[`SelectField renders with paired choices 1`] = `
       disabled={false}
       id="id-fieldName"
       multiple={false}
+      name="fieldName"
       onChange={[Function]}
       required={false}
       value="fieldValue"
@@ -96,6 +98,7 @@ exports[`SelectField renders without form context 1`] = `
         disabled={false}
         id="id-fieldName"
         multiple={false}
+        name="fieldName"
         onChange={[Function]}
         options={
           Array [
@@ -119,6 +122,7 @@ exports[`SelectField renders without form context 1`] = `
           height={36}
           id="id-fieldName"
           multiple={false}
+          name="fieldName"
           onChange={[Function]}
           options={
             Array [
@@ -145,6 +149,7 @@ exports[`SelectField renders without form context 1`] = `
             height={36}
             id="id-fieldName"
             multiple={false}
+            name="fieldName"
             onChange={[Function]}
             options={
               Array [
@@ -171,6 +176,7 @@ exports[`SelectField renders without form context 1`] = `
               height={36}
               id="id-fieldName"
               multiple={false}
+              name="fieldName"
               onChange={[Function]}
               options={
                 Array [
@@ -217,6 +223,7 @@ exports[`SelectField renders without form context 1`] = `
                 menuRenderer={[Function]}
                 multi={false}
                 multiple={false}
+                name="fieldName"
                 noResultsText="No results found"
                 onBlurResetsInput={true}
                 onChange={[Function]}
@@ -253,6 +260,13 @@ exports[`SelectField renders without form context 1`] = `
                 <div
                   className="Select e1qrhqd00 css-7y4fj5-StyledSelect-StyledSelectControl eho28m20 has-value is-clearable is-searchable Select--single"
                 >
+                  <input
+                    disabled={false}
+                    key="hidden.0"
+                    name="fieldName"
+                    type="hidden"
+                    value="a"
+                  />
                   <div
                     className="Select-control"
                     onKeyDown={[Function]}
diff --git a/tests/js/spec/components/forms/multiSelectField.spec.jsx b/tests/js/spec/components/forms/multiSelectField.spec.jsx
index 573a5e4f74..3f24f0249c 100644
--- a/tests/js/spec/components/forms/multiSelectField.spec.jsx
+++ b/tests/js/spec/components/forms/multiSelectField.spec.jsx
@@ -23,7 +23,7 @@ describe('MultiSelectField', function() {
           value={['a']}
         />
       );
-      expect(wrapper.find('MultiSelectControl').prop('value')).toEqual(['a']);
+      expect(wrapper.find('StyledSelectControl').prop('value')).toEqual(['a']);
     });
 
     it('renders with form context', function() {
@@ -44,7 +44,7 @@ describe('MultiSelectField', function() {
         }
       );
 
-      expect(wrapper.find('MultiSelectControl').prop('value')).toEqual(['a', 'b']);
+      expect(wrapper.find('StyledSelectControl').prop('value')).toEqual(['a', 'b']);
     });
   });
 });
diff --git a/tests/js/spec/components/forms/selectField.spec.jsx b/tests/js/spec/components/forms/selectField.spec.jsx
index a94c2a233d..ba6cc7aa4a 100644
--- a/tests/js/spec/components/forms/selectField.spec.jsx
+++ b/tests/js/spec/components/forms/selectField.spec.jsx
@@ -69,4 +69,26 @@ describe('SelectField', function() {
       expect.anything()
     );
   });
+
+  describe('Multiple', function() {
+    it('selects multiple values and submits', function() {
+      let mock = jest.fn();
+      let wrapper = mount(
+        <Form onSubmit={mock}>
+          <SelectField
+            multiple
+            options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
+            name="fieldName"
+          />
+        </Form>
+      );
+      selectByValue(wrapper, 'a', {name: 'fieldName'});
+      wrapper.find('Form').simulate('submit');
+      expect(mock).toHaveBeenCalledWith(
+        {fieldName: ['a']},
+        expect.anything(),
+        expect.anything()
+      );
+    });
+  });
 });
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index b19f4bd66c..6f42041ea8 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -162,6 +162,7 @@ exports[`Project Ownership Input renders 1`] = `
                   disabled={false}
                   id="id-select-type"
                   multiple={false}
+                  name="select-type"
                   onChange={[Function]}
                   options={
                     Array [
@@ -185,6 +186,7 @@ exports[`Project Ownership Input renders 1`] = `
                     height={36}
                     id="id-select-type"
                     multiple={false}
+                    name="select-type"
                     onChange={[Function]}
                     options={
                       Array [
@@ -211,6 +213,7 @@ exports[`Project Ownership Input renders 1`] = `
                       height={36}
                       id="id-select-type"
                       multiple={false}
+                      name="select-type"
                       onChange={[Function]}
                       options={
                         Array [
@@ -237,6 +240,7 @@ exports[`Project Ownership Input renders 1`] = `
                         height={36}
                         id="id-select-type"
                         multiple={false}
+                        name="select-type"
                         onChange={[Function]}
                         options={
                           Array [
@@ -283,6 +287,7 @@ exports[`Project Ownership Input renders 1`] = `
                           menuRenderer={[Function]}
                           multi={false}
                           multiple={false}
+                          name="select-type"
                           noResultsText="No results found"
                           onBlurResetsInput={true}
                           onChange={[Function]}
@@ -319,6 +324,13 @@ exports[`Project Ownership Input renders 1`] = `
                           <div
                             className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                           >
+                            <input
+                              disabled={false}
+                              key="hidden.0"
+                              name="select-type"
+                              type="hidden"
+                              value="path"
+                            />
                             <div
                               className="Select-control"
                               onKeyDown={[Function]}
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index a40a3e4721..f74d2e8ded 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -338,6 +338,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                 disabled={false}
                                 id="id-actionMatch"
                                 multiple={false}
+                                name="actionMatch"
                                 onChange={[Function]}
                                 required={true}
                                 value=""
@@ -365,6 +366,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                   height={36}
                                   id="id-actionMatch"
                                   multiple={false}
+                                  name="actionMatch"
                                   onChange={[Function]}
                                   required={true}
                                   value=""
@@ -379,6 +381,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                     height={36}
                                     id="id-actionMatch"
                                     multiple={false}
+                                    name="actionMatch"
                                     onChange={[Function]}
                                     options={
                                       Array [
@@ -409,6 +412,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                       height={36}
                                       id="id-actionMatch"
                                       multiple={false}
+                                      name="actionMatch"
                                       onChange={[Function]}
                                       options={
                                         Array [
@@ -459,6 +463,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                         menuRenderer={[Function]}
                                         multi={false}
                                         multiple={false}
+                                        name="actionMatch"
                                         noResultsText="No results found"
                                         onBlurResetsInput={true}
                                         onChange={[Function]}
@@ -1091,6 +1096,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             disabled={false}
                             id="id-environment"
                             multiple={false}
+                            name="environment"
                             onChange={[Function]}
                             required={true}
                             value="staging"
@@ -1118,6 +1124,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                               height={36}
                               id="id-environment"
                               multiple={false}
+                              name="environment"
                               onChange={[Function]}
                               required={true}
                               value="staging"
@@ -1132,6 +1139,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                 height={36}
                                 id="id-environment"
                                 multiple={false}
+                                name="environment"
                                 onChange={[Function]}
                                 options={
                                   Array [
@@ -1162,6 +1170,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                   height={36}
                                   id="id-environment"
                                   multiple={false}
+                                  name="environment"
                                   onChange={[Function]}
                                   options={
                                     Array [
@@ -1212,6 +1221,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                     menuRenderer={[Function]}
                                     multi={false}
                                     multiple={false}
+                                    name="environment"
                                     noResultsText="No results found"
                                     onBlurResetsInput={true}
                                     onChange={[Function]}
@@ -1252,6 +1262,13 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                     <div
                                       className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                     >
+                                      <input
+                                        disabled={false}
+                                        key="hidden.0"
+                                        name="environment"
+                                        type="hidden"
+                                        value="staging"
+                                      />
                                       <div
                                         className="Select-control"
                                         onKeyDown={[Function]}
@@ -1914,6 +1931,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                 disabled={false}
                                 id="id-frequency"
                                 multiple={false}
+                                name="frequency"
                                 onChange={[Function]}
                                 required={true}
                                 value=""
@@ -1965,6 +1983,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                   height={36}
                                   id="id-frequency"
                                   multiple={false}
+                                  name="frequency"
                                   onChange={[Function]}
                                   required={true}
                                   value=""
@@ -1979,6 +1998,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                     height={36}
                                     id="id-frequency"
                                     multiple={false}
+                                    name="frequency"
                                     onChange={[Function]}
                                     options={
                                       Array [
@@ -2033,6 +2053,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                       height={36}
                                       id="id-frequency"
                                       multiple={false}
+                                      name="frequency"
                                       onChange={[Function]}
                                       options={
                                         Array [
@@ -2107,6 +2128,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                         menuRenderer={[Function]}
                                         multi={false}
                                         multiple={false}
+                                        name="frequency"
                                         noResultsText="No results found"
                                         onBlurResetsInput={true}
                                         onChange={[Function]}
@@ -2746,6 +2768,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                 disabled={false}
                                 id="id-actionMatch"
                                 multiple={false}
+                                name="actionMatch"
                                 onChange={[Function]}
                                 required={true}
                                 value="all"
@@ -2773,6 +2796,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                   height={36}
                                   id="id-actionMatch"
                                   multiple={false}
+                                  name="actionMatch"
                                   onChange={[Function]}
                                   required={true}
                                   value="all"
@@ -2787,6 +2811,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                     height={36}
                                     id="id-actionMatch"
                                     multiple={false}
+                                    name="actionMatch"
                                     onChange={[Function]}
                                     options={
                                       Array [
@@ -2817,6 +2842,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                       height={36}
                                       id="id-actionMatch"
                                       multiple={false}
+                                      name="actionMatch"
                                       onChange={[Function]}
                                       options={
                                         Array [
@@ -2867,6 +2893,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                         menuRenderer={[Function]}
                                         multi={false}
                                         multiple={false}
+                                        name="actionMatch"
                                         noResultsText="No results found"
                                         onBlurResetsInput={true}
                                         onChange={[Function]}
@@ -2907,6 +2934,13 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                         <div
                                           className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                         >
+                                          <input
+                                            disabled={false}
+                                            key="hidden.0"
+                                            name="actionMatch"
+                                            type="hidden"
+                                            value="all"
+                                          />
                                           <div
                                             className="Select-control"
                                             onKeyDown={[Function]}
@@ -3348,6 +3382,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             disabled={false}
                             id="id-environment"
                             multiple={false}
+                            name="environment"
                             onChange={[Function]}
                             required={true}
                             value="__all_environments__"
@@ -3375,6 +3410,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                               height={36}
                               id="id-environment"
                               multiple={false}
+                              name="environment"
                               onChange={[Function]}
                               required={true}
                               value="__all_environments__"
@@ -3389,6 +3425,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                 height={36}
                                 id="id-environment"
                                 multiple={false}
+                                name="environment"
                                 onChange={[Function]}
                                 options={
                                   Array [
@@ -3419,6 +3456,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                   height={36}
                                   id="id-environment"
                                   multiple={false}
+                                  name="environment"
                                   onChange={[Function]}
                                   options={
                                     Array [
@@ -3469,6 +3507,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                     menuRenderer={[Function]}
                                     multi={false}
                                     multiple={false}
+                                    name="environment"
                                     noResultsText="No results found"
                                     onBlurResetsInput={true}
                                     onChange={[Function]}
@@ -3509,6 +3548,13 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                     <div
                                       className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                     >
+                                      <input
+                                        disabled={false}
+                                        key="hidden.0"
+                                        name="environment"
+                                        type="hidden"
+                                        value="__all_environments__"
+                                      />
                                       <div
                                         className="Select-control"
                                         onKeyDown={[Function]}
@@ -4000,6 +4046,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                 disabled={false}
                                 id="id-frequency"
                                 multiple={false}
+                                name="frequency"
                                 onChange={[Function]}
                                 required={true}
                                 value={30}
@@ -4051,6 +4098,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                   height={36}
                                   id="id-frequency"
                                   multiple={false}
+                                  name="frequency"
                                   onChange={[Function]}
                                   required={true}
                                   value={30}
@@ -4065,6 +4113,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                     height={36}
                                     id="id-frequency"
                                     multiple={false}
+                                    name="frequency"
                                     onChange={[Function]}
                                     options={
                                       Array [
@@ -4119,6 +4168,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                       height={36}
                                       id="id-frequency"
                                       multiple={false}
+                                      name="frequency"
                                       onChange={[Function]}
                                       options={
                                         Array [
@@ -4193,6 +4243,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                         menuRenderer={[Function]}
                                         multi={false}
                                         multiple={false}
+                                        name="frequency"
                                         noResultsText="No results found"
                                         onBlurResetsInput={true}
                                         onChange={[Function]}
@@ -4257,6 +4308,13 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                         <div
                                           className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                                         >
+                                          <input
+                                            disabled={false}
+                                            key="hidden.0"
+                                            name="frequency"
+                                            type="hidden"
+                                            value="30"
+                                          />
                                           <div
                                             className="Select-control"
                                             onKeyDown={[Function]}
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index 1785591d1e..aebe013fbf 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -136,6 +136,7 @@ exports[`RuleBuilder renders 1`] = `
                 disabled={false}
                 id="id-select-type"
                 multiple={false}
+                name="select-type"
                 onChange={[Function]}
                 options={
                   Array [
@@ -159,6 +160,7 @@ exports[`RuleBuilder renders 1`] = `
                   height={36}
                   id="id-select-type"
                   multiple={false}
+                  name="select-type"
                   onChange={[Function]}
                   options={
                     Array [
@@ -185,6 +187,7 @@ exports[`RuleBuilder renders 1`] = `
                     height={36}
                     id="id-select-type"
                     multiple={false}
+                    name="select-type"
                     onChange={[Function]}
                     options={
                       Array [
@@ -211,6 +214,7 @@ exports[`RuleBuilder renders 1`] = `
                       height={36}
                       id="id-select-type"
                       multiple={false}
+                      name="select-type"
                       onChange={[Function]}
                       options={
                         Array [
@@ -257,6 +261,7 @@ exports[`RuleBuilder renders 1`] = `
                         menuRenderer={[Function]}
                         multi={false}
                         multiple={false}
+                        name="select-type"
                         noResultsText="No results found"
                         onBlurResetsInput={true}
                         onChange={[Function]}
@@ -293,6 +298,13 @@ exports[`RuleBuilder renders 1`] = `
                         <div
                           className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                         >
+                          <input
+                            disabled={false}
+                            key="hidden.0"
+                            name="select-type"
+                            type="hidden"
+                            value="path"
+                          />
                           <div
                             className="Select-control"
                             onKeyDown={[Function]}
@@ -1386,6 +1398,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                 disabled={false}
                 id="id-select-type"
                 multiple={false}
+                name="select-type"
                 onChange={[Function]}
                 options={
                   Array [
@@ -1409,6 +1422,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   height={36}
                   id="id-select-type"
                   multiple={false}
+                  name="select-type"
                   onChange={[Function]}
                   options={
                     Array [
@@ -1435,6 +1449,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     height={36}
                     id="id-select-type"
                     multiple={false}
+                    name="select-type"
                     onChange={[Function]}
                     options={
                       Array [
@@ -1461,6 +1476,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       height={36}
                       id="id-select-type"
                       multiple={false}
+                      name="select-type"
                       onChange={[Function]}
                       options={
                         Array [
@@ -1507,6 +1523,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         menuRenderer={[Function]}
                         multi={false}
                         multiple={false}
+                        name="select-type"
                         noResultsText="No results found"
                         onBlurResetsInput={true}
                         onChange={[Function]}
@@ -1543,6 +1560,13 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         <div
                           className="Select e1qrhqd00 css-17e2btp-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
                         >
+                          <input
+                            disabled={false}
+                            key="hidden.0"
+                            name="select-type"
+                            type="hidden"
+                            value="path"
+                          />
                           <div
                             className="Select-control"
                             onKeyDown={[Function]}
diff --git a/tests/js/spec/views/projectAlertRuleDetails.spec.jsx b/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
index edc1e81102..8c9c989321 100644
--- a/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
+++ b/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
@@ -156,9 +156,9 @@ describe('ProjectAlertRuleDetails', function() {
 
     it('sends correct environment value', function() {
       selectByValue(wrapper, 'production', {name: 'environment'});
-      expect(wrapper.find('SelectField[name="environment"] Select').prop('value')).toBe(
-        'production'
-      );
+      expect(
+        wrapper.find('SelectField[name="environment"] Select').prop('value')
+      ).toEqual(expect.objectContaining({value: 'production'}));
       wrapper.find('form').simulate('submit');
 
       expect(mock).toHaveBeenCalledWith(
