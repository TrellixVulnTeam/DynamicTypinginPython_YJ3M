commit df28562de2b51b42960fbda37ea0bbc4a6cc14ab
Author: Mark Story <mark@sentry.io>
Date:   Thu May 2 10:01:25 2019 -0400

    ref(ui) Move a few more components away from ApiMixin (#13015)
    
    Get a few more of the components that were not able to be code-modded
    off of ApiMixin
    
    Fixes SEN-280
    Fixes SEN-279
    Fixes SEN-278

diff --git a/src/sentry/static/sentry/app/components/events/eventAttachments.jsx b/src/sentry/static/sentry/app/components/events/eventAttachments.jsx
index 957b3095e0..2a66d88a86 100644
--- a/src/sentry/static/sentry/app/components/events/eventAttachments.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventAttachments.jsx
@@ -1,52 +1,50 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 import {Box} from 'grid-emotion';
 
-import ApiMixin from 'app/mixins/apiMixin';
 import FileSize from 'app/components/fileSize';
 
 import {t} from 'app/locale';
-
 import {Panel, PanelBody, PanelItem} from 'app/components/panels';
+import withApi from 'app/utils/withApi';
 
-export default createReactClass({
-  displayName: 'EventAttachments',
-
-  propTypes: {
+class EventAttachments extends React.Component {
+  static propTypes = {
+    api: PropTypes.object.isRequired,
     event: PropTypes.object.isRequired,
     orgId: PropTypes.string.isRequired,
     projectId: PropTypes.string.isRequired,
-  },
+  };
 
-  mixins: [ApiMixin],
-
-  getInitialState() {
-    return {attachmentList: undefined, expanded: false};
-  },
+  state = {
+    attachmentList: undefined,
+    expanded: false,
+  };
 
   componentDidMount() {
     this.fetchData(this.props.event);
-  },
+  }
 
-  componentWillReceiveProps(nextProps) {
-    if (this.props.event && nextProps.event) {
-      if (this.props.event.id !== nextProps.event.id) {
-        //two events, with different IDs
-        this.fetchData(nextProps.event);
-      }
-    } else if (nextProps.event) {
-      //going from having no event to having an event
-      this.fetchData(nextProps.event);
+  componentDidUpdate(prevProps) {
+    let doFetch = false;
+    if (!prevProps.event && this.props.event) {
+      // going from having no event to having an event
+      doFetch = true;
+    } else if (this.props.event && this.props.event.id !== prevProps.event.id) {
+      doFetch = true;
     }
-  },
+
+    if (doFetch) {
+      this.fetchData(this.props.event);
+    }
+  }
 
   fetchData(event) {
     // TODO(dcramer): this API request happens twice, and we need a store for it
     if (!event) {
       return;
     }
-    this.api.request(
+    this.props.api.request(
       `/projects/${this.props.orgId}/${this.props.projectId}/events/${
         event.id
       }/attachments/`,
@@ -63,14 +61,14 @@ export default createReactClass({
         },
       }
     );
-  },
+  }
 
   getDownloadUrl(attachment) {
     const {orgId, event, projectId} = this.props;
     return `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${
       attachment.id
     }/?download=1`;
-  },
+  }
 
   render() {
     const {attachmentList} = this.state;
@@ -109,5 +107,7 @@ export default createReactClass({
         </div>
       </div>
     );
-  },
-});
+  }
+}
+
+export default withApi(EventAttachments);
diff --git a/src/sentry/static/sentry/app/components/events/eventCause.jsx b/src/sentry/static/sentry/app/components/events/eventCause.jsx
index 58a5029122..60ef2ea715 100644
--- a/src/sentry/static/sentry/app/components/events/eventCause.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventCause.jsx
@@ -1,12 +1,11 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 import {uniqBy, flatMap} from 'lodash';
 import styled from 'react-emotion';
 
-import ApiMixin from 'app/mixins/apiMixin';
 import CommitRow from 'app/components/commitRow';
 import InlineSvg from 'app/components/inlineSvg';
+import withApi from 'app/utils/withApi';
 
 import {t} from 'app/locale';
 
@@ -19,43 +18,43 @@ const ExpandButton = styled.span`
   top: 7px;
 `;
 
-export default createReactClass({
-  displayName: 'EventCause',
-
-  propTypes: {
+class EventCause extends React.Component {
+  static propTypes = {
+    api: PropTypes.object.isRequired,
     event: PropTypes.object.isRequired,
     orgId: PropTypes.string.isRequired,
     projectId: PropTypes.string.isRequired,
-  },
-
-  mixins: [ApiMixin],
+  };
 
-  getInitialState() {
-    return {committers: undefined, expanded: false};
-  },
+  state = {
+    committers: undefined,
+    expanded: false,
+  };
 
   componentDidMount() {
     this.fetchData(this.props.event);
-  },
+  }
+
+  componentDidUpdate(prevProps) {
+    let doFetch = false;
+    if (!prevProps.event && this.props.event) {
+      // going from having no event to having an event
+      doFetch = true;
+    } else if (this.props.event && this.props.event.id !== prevProps.event.id) {
+      doFetch = true;
+    }
 
-  componentWillReceiveProps(nextProps) {
-    if (this.props.event && nextProps.event) {
-      if (this.props.event.id !== nextProps.event.id) {
-        //two events, with different IDs
-        this.fetchData(nextProps.event);
-      }
-    } else if (nextProps.event) {
-      //going from having no event to having an event
-      this.fetchData(nextProps.event);
+    if (doFetch) {
+      this.fetchData(this.props.event);
     }
-  },
+  }
 
   fetchData(event) {
     // TODO(dcramer): this API request happens twice, and we need a store for it
     if (!event) {
       return;
     }
-    this.api.request(
+    this.props.api.request(
       `/projects/${this.props.orgId}/${this.props.projectId}/events/${
         event.id
       }/committers/`,
@@ -70,7 +69,7 @@ export default createReactClass({
         },
       }
     );
-  },
+  }
 
   getUniqueCommitsWithAuthors() {
     const {committers} = this.state;
@@ -85,7 +84,7 @@ export default createReactClass({
     //remove duplicate commits
     const uniqueCommitsWithAuthors = uniqBy(commitsWithAuthors, commit => commit.id);
     return uniqueCommitsWithAuthors;
-  },
+  }
 
   render() {
     const {committers, expanded} = this.state;
@@ -122,5 +121,7 @@ export default createReactClass({
         </div>
       </div>
     );
-  },
-});
+  }
+}
+
+export default withApi(EventCause);
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 65986dd6fb..39e4a6b278 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -18,6 +18,7 @@ import EventDevice from 'app/components/events/device';
 import EventUserFeedback from 'app/components/events/userFeedback';
 import SentryTypes from 'app/sentryTypes';
 import utils from 'app/utils';
+import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 import {t} from 'app/locale';
 
@@ -209,4 +210,4 @@ class EventEntries extends React.Component {
   }
 }
 
-export default withOrganization(EventEntries);
+export default withOrganization(withApi(EventEntries));
diff --git a/src/sentry/static/sentry/app/components/internalStatChart.jsx b/src/sentry/static/sentry/app/components/internalStatChart.jsx
index ad141d1987..8dee1624eb 100644
--- a/src/sentry/static/sentry/app/components/internalStatChart.jsx
+++ b/src/sentry/static/sentry/app/components/internalStatChart.jsx
@@ -1,63 +1,47 @@
 /*eslint getsentry/jsx-needs-il8n:0*/
 import PropTypes from 'prop-types';
-
 import React from 'react';
-import createReactClass from 'create-react-class';
-import _ from 'lodash';
 
-import ApiMixin from 'app/mixins/apiMixin';
 import BarChart from 'app/components/barChart';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
+import withApi from 'app/utils/withApi';
 
-export default createReactClass({
-  displayName: 'internalStatChart',
-
-  propTypes: {
+class InternalStatChart extends React.Component {
+  static propTypes = {
+    api: PropTypes.object.isRequired,
     since: PropTypes.number.isRequired,
     resolution: PropTypes.string.isRequired,
     stat: PropTypes.string.isRequired,
     label: PropTypes.string,
     height: PropTypes.number,
-  },
+  };
 
-  mixins: [ApiMixin],
+  static defaultProps = {
+    height: 150,
+  };
 
-  getDefaultProps() {
-    return {
-      height: 150,
-    };
-  },
+  state = {
+    error: false,
+    loading: true,
+    data: null,
+  };
 
-  getInitialState() {
-    return {
-      error: false,
-      loading: true,
-      data: null,
-    };
-  },
-
-  componentWillMount() {
+  componentDidMount() {
     this.fetchData();
-  },
-
-  componentWillReceiveProps(nextProps) {
-    if (!_.isEqual(nextProps, this.props)) {
-      this.setState(
-        {
-          loading: true,
-        },
-        this.fetchData
-      );
-    }
-  },
+  }
 
   shouldComponentUpdate(nextProps, nextState) {
     return this.state.loading !== nextState.loading;
-  },
+  }
+
+  componentDidUpdate() {
+    this.fetchData();
+  }
 
   fetchData() {
-    this.api.request('/internal/stats/', {
+    this.setState({loading: true});
+    this.props.api.request('/internal/stats/', {
       method: 'GET',
       data: {
         since: this.props.since,
@@ -77,13 +61,13 @@ export default createReactClass({
         });
       },
     });
-  },
+  }
 
   getChartPoints() {
     return this.state.data.map(([x, y]) => {
       return {x, y};
     });
-  },
+  }
 
   render() {
     if (this.state.loading) {
@@ -100,5 +84,7 @@ export default createReactClass({
         height={this.props.height}
       />
     );
-  },
-});
+  }
+}
+
+export default withApi(InternalStatChart);
diff --git a/tests/js/spec/views/admin/__snapshots__/adminBuffer.spec.jsx.snap b/tests/js/spec/views/admin/__snapshots__/adminBuffer.spec.jsx.snap
index 039f52938b..7eb9214f70 100644
--- a/tests/js/spec/views/admin/__snapshots__/adminBuffer.spec.jsx.snap
+++ b/tests/js/spec/views/admin/__snapshots__/adminBuffer.spec.jsx.snap
@@ -38,8 +38,7 @@ exports[`AdminBuffer render() renders 1`] = `
         Updates Processed
       </h4>
     </div>
-    <internalStatChart
-      height={150}
+    <withApi(InternalStatChart)
       label="Jobs"
       resolution="1h"
       since={1507603280}
@@ -56,8 +55,7 @@ exports[`AdminBuffer render() renders 1`] = `
         Revoked Updates
       </h4>
     </div>
-    <internalStatChart
-      height={150}
+    <withApi(InternalStatChart)
       label="Jobs"
       resolution="1h"
       since={1507603280}
diff --git a/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap b/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap
index cc6d86b137..191145803f 100644
--- a/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap
+++ b/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap
@@ -45,8 +45,7 @@ exports[`AdminQueue render() renders 1`] = `
           Global Throughput
         </h3>
       </div>
-      <internalStatChart
-        height={150}
+      <withApi(InternalStatChart)
         label="jobs started"
         resolution="1h"
         since={1507603280}
diff --git a/tests/js/spec/views/admin/__snapshots__/adminQuotas.spec.jsx.snap b/tests/js/spec/views/admin/__snapshots__/adminQuotas.spec.jsx.snap
index a8be07c3bd..067f3984ef 100644
--- a/tests/js/spec/views/admin/__snapshots__/adminQuotas.spec.jsx.snap
+++ b/tests/js/spec/views/admin/__snapshots__/adminQuotas.spec.jsx.snap
@@ -47,8 +47,7 @@ exports[`AdminQuotas render() renders 1`] = `
           Total Events
         </h4>
       </div>
-      <internalStatChart
-        height={150}
+      <withApi(InternalStatChart)
         label="Events"
         resolution="1h"
         since={1507603280}
@@ -65,8 +64,7 @@ exports[`AdminQuotas render() renders 1`] = `
           Dropped Events
         </h4>
       </div>
-      <internalStatChart
-        height={150}
+      <withApi(InternalStatChart)
         label="Events"
         resolution="1h"
         since={1507603280}
diff --git a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
index 67c630e7fe..15b4f7a0e5 100644
--- a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
@@ -312,7 +312,7 @@ exports[`SharedGroupDetails renders 1`] = `
                           }
                         }
                       >
-                        <EventEntries
+                        <withApi(EventEntries)
                           event={
                             Object {
                               "entries": Array [
@@ -468,13 +468,42 @@ exports[`SharedGroupDetails renders 1`] = `
                             }
                           }
                         >
-                          <div
-                            className="entries"
-                          >
-                             
-                            <EventTags
-                              event={
-                                Object {
+                          <EventEntries
+                            api={Client {}}
+                            event={
+                              Object {
+                                "entries": Array [
+                                  Object {
+                                    "data": Object {
+                                      "formatted": "Blocked script",
+                                    },
+                                    "id": "1",
+                                    "type": "message",
+                                  },
+                                ],
+                                "eventID": "12345678901234567890123456789012",
+                                "groupID": "1",
+                                "id": "1",
+                                "message": "ApiException",
+                              }
+                            }
+                            group={
+                              Object {
+                                "activity": Array [],
+                                "annotations": Array [],
+                                "assignedTo": null,
+                                "count": "327482",
+                                "culprit": "fetchData(app/components/group/suggestedOwners)",
+                                "firstRelease": null,
+                                "firstSeen": "2019-04-05T19:44:05.963Z",
+                                "hasSeen": false,
+                                "id": "1",
+                                "isBookmarked": false,
+                                "isPublic": false,
+                                "isSubscribed": false,
+                                "lastRelease": null,
+                                "lastSeen": "2019-04-11T01:08:59Z",
+                                "latestEvent": Object {
                                   "entries": Array [
                                     Object {
                                       "data": Object {
@@ -488,171 +517,121 @@ exports[`SharedGroupDetails renders 1`] = `
                                   "groupID": "1",
                                   "id": "1",
                                   "message": "ApiException",
-                                }
-                              }
-                              group={
-                                Object {
-                                  "activity": Array [],
-                                  "annotations": Array [],
-                                  "assignedTo": null,
-                                  "count": "327482",
-                                  "culprit": "fetchData(app/components/group/suggestedOwners)",
-                                  "firstRelease": null,
-                                  "firstSeen": "2019-04-05T19:44:05.963Z",
-                                  "hasSeen": false,
-                                  "id": "1",
+                                },
+                                "level": "warning",
+                                "logger": null,
+                                "metadata": Object {
+                                  "function": "fetchData",
+                                  "type": "RequestError",
+                                },
+                                "numComments": 0,
+                                "participants": Array [],
+                                "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                                "platform": "javascript",
+                                "pluginActions": Array [],
+                                "pluginContexts": Array [],
+                                "pluginIssues": Array [],
+                                "project": Object {
+                                  "environments": Array [],
+                                  "hasAccess": true,
+                                  "id": "2",
                                   "isBookmarked": false,
-                                  "isPublic": false,
-                                  "isSubscribed": false,
-                                  "lastRelease": null,
-                                  "lastSeen": "2019-04-11T01:08:59Z",
-                                  "latestEvent": Object {
-                                    "entries": Array [
-                                      Object {
-                                        "data": Object {
-                                          "formatted": "Blocked script",
-                                        },
-                                        "id": "1",
-                                        "type": "message",
-                                      },
-                                    ],
-                                    "eventID": "12345678901234567890123456789012",
-                                    "groupID": "1",
-                                    "id": "1",
-                                    "message": "ApiException",
+                                  "isMember": true,
+                                  "name": "Project Name",
+                                  "organization": Object {
+                                    "slug": "test-org",
                                   },
-                                  "level": "warning",
-                                  "logger": null,
-                                  "metadata": Object {
-                                    "function": "fetchData",
-                                    "type": "RequestError",
-                                  },
-                                  "numComments": 0,
-                                  "participants": Array [],
-                                  "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                                  "platform": "javascript",
-                                  "pluginActions": Array [],
-                                  "pluginContexts": Array [],
-                                  "pluginIssues": Array [],
-                                  "project": Object {
-                                    "environments": Array [],
-                                    "hasAccess": true,
-                                    "id": "2",
-                                    "isBookmarked": false,
-                                    "isMember": true,
-                                    "name": "Project Name",
-                                    "organization": Object {
-                                      "slug": "test-org",
-                                    },
-                                    "slug": "project-slug",
-                                    "teams": Array [],
-                                  },
-                                  "seenBy": Array [],
-                                  "shareId": null,
-                                  "shortId": "JAVASCRIPT-6QS",
-                                  "stats": Object {
-                                    "24h": Array [
-                                      Array [
-                                        1517281200,
-                                        2,
-                                      ],
-                                      Array [
-                                        1517310000,
-                                        1,
-                                      ],
+                                  "slug": "project-slug",
+                                  "teams": Array [],
+                                },
+                                "seenBy": Array [],
+                                "shareId": null,
+                                "shortId": "JAVASCRIPT-6QS",
+                                "stats": Object {
+                                  "24h": Array [
+                                    Array [
+                                      1517281200,
+                                      2,
                                     ],
-                                    "30d": Array [
-                                      Array [
-                                        1514764800,
-                                        1,
-                                      ],
-                                      Array [
-                                        1515024000,
-                                        122,
-                                      ],
+                                    Array [
+                                      1517310000,
+                                      1,
                                     ],
-                                  },
-                                  "status": "unresolved",
-                                  "statusDetails": Object {},
-                                  "subscriptionDetails": null,
-                                  "tags": Array [],
-                                  "title": "ZeroDivisionError",
-                                  "type": "error",
-                                  "userCount": 35097,
-                                  "userReportCount": 0,
-                                }
-                              }
-                              orgId="test-org"
-                              organization={
-                                Object {
-                                  "access": Array [
-                                    "org:read",
-                                    "org:write",
-                                    "org:admin",
-                                    "org:integrations",
-                                    "project:read",
-                                    "project:write",
-                                    "project:admin",
-                                    "team:read",
-                                    "team:write",
-                                    "team:admin",
                                   ],
-                                  "features": Array [],
-                                  "id": "3",
-                                  "name": "Organization Name",
-                                  "onboardingTasks": Array [],
-                                  "projects": Array [],
-                                  "scrapeJavaScript": true,
-                                  "slug": "org-slug",
-                                  "status": Object {
-                                    "id": "active",
-                                    "name": "active",
-                                  },
-                                  "teams": Array [],
-                                }
+                                  "30d": Array [
+                                    Array [
+                                      1514764800,
+                                      1,
+                                    ],
+                                    Array [
+                                      1515024000,
+                                      122,
+                                    ],
+                                  ],
+                                },
+                                "status": "unresolved",
+                                "statusDetails": Object {},
+                                "subscriptionDetails": null,
+                                "tags": Array [],
+                                "title": "ZeroDivisionError",
+                                "type": "error",
+                                "userCount": 35097,
+                                "userReportCount": 0,
                               }
-                              projectId="project-slug"
-                            />
-                            <MessageInterface
-                              data={
-                                Object {
-                                  "formatted": "Blocked script",
-                                }
+                            }
+                            isShare={true}
+                            orgId="test-org"
+                            organization={
+                              Object {
+                                "access": Array [
+                                  "org:read",
+                                  "org:write",
+                                  "org:admin",
+                                  "org:integrations",
+                                  "project:read",
+                                  "project:write",
+                                  "project:admin",
+                                  "team:read",
+                                  "team:write",
+                                  "team:admin",
+                                ],
+                                "features": Array [],
+                                "id": "3",
+                                "name": "Organization Name",
+                                "onboardingTasks": Array [],
+                                "projects": Array [],
+                                "scrapeJavaScript": true,
+                                "slug": "org-slug",
+                                "status": Object {
+                                  "id": "active",
+                                  "name": "active",
+                                },
+                                "teams": Array [],
                               }
-                              event={
-                                Object {
-                                  "entries": Array [
-                                    Object {
-                                      "data": Object {
-                                        "formatted": "Blocked script",
-                                      },
-                                      "id": "1",
-                                      "type": "message",
-                                    },
-                                  ],
-                                  "eventID": "12345678901234567890123456789012",
-                                  "groupID": "1",
-                                  "id": "1",
-                                  "message": "ApiException",
-                                }
+                            }
+                            project={
+                              Object {
+                                "environments": Array [],
+                                "hasAccess": true,
+                                "id": "2",
+                                "isBookmarked": false,
+                                "isMember": true,
+                                "name": "Project Name",
+                                "organization": Object {
+                                  "slug": "test-org",
+                                },
+                                "slug": "project-slug",
+                                "teams": Array [],
                               }
-                              group={
-                                Object {
-                                  "activity": Array [],
-                                  "annotations": Array [],
-                                  "assignedTo": null,
-                                  "count": "327482",
-                                  "culprit": "fetchData(app/components/group/suggestedOwners)",
-                                  "firstRelease": null,
-                                  "firstSeen": "2019-04-05T19:44:05.963Z",
-                                  "hasSeen": false,
-                                  "id": "1",
-                                  "isBookmarked": false,
-                                  "isPublic": false,
-                                  "isSubscribed": false,
-                                  "lastRelease": null,
-                                  "lastSeen": "2019-04-11T01:08:59Z",
-                                  "latestEvent": Object {
+                            }
+                          >
+                            <div
+                              className="entries"
+                            >
+                               
+                              <EventTags
+                                event={
+                                  Object {
                                     "entries": Array [
                                       Object {
                                         "data": Object {
@@ -666,73 +645,137 @@ exports[`SharedGroupDetails renders 1`] = `
                                     "groupID": "1",
                                     "id": "1",
                                     "message": "ApiException",
-                                  },
-                                  "level": "warning",
-                                  "logger": null,
-                                  "metadata": Object {
-                                    "function": "fetchData",
-                                    "type": "RequestError",
-                                  },
-                                  "numComments": 0,
-                                  "participants": Array [],
-                                  "permalink": "https://foo.io/organizations/foo/issues/1234/",
-                                  "platform": "javascript",
-                                  "pluginActions": Array [],
-                                  "pluginContexts": Array [],
-                                  "pluginIssues": Array [],
-                                  "project": Object {
-                                    "environments": Array [],
-                                    "hasAccess": true,
-                                    "id": "2",
+                                  }
+                                }
+                                group={
+                                  Object {
+                                    "activity": Array [],
+                                    "annotations": Array [],
+                                    "assignedTo": null,
+                                    "count": "327482",
+                                    "culprit": "fetchData(app/components/group/suggestedOwners)",
+                                    "firstRelease": null,
+                                    "firstSeen": "2019-04-05T19:44:05.963Z",
+                                    "hasSeen": false,
+                                    "id": "1",
                                     "isBookmarked": false,
-                                    "isMember": true,
-                                    "name": "Project Name",
-                                    "organization": Object {
-                                      "slug": "test-org",
-                                    },
-                                    "slug": "project-slug",
-                                    "teams": Array [],
-                                  },
-                                  "seenBy": Array [],
-                                  "shareId": null,
-                                  "shortId": "JAVASCRIPT-6QS",
-                                  "stats": Object {
-                                    "24h": Array [
-                                      Array [
-                                        1517281200,
-                                        2,
-                                      ],
-                                      Array [
-                                        1517310000,
-                                        1,
+                                    "isPublic": false,
+                                    "isSubscribed": false,
+                                    "lastRelease": null,
+                                    "lastSeen": "2019-04-11T01:08:59Z",
+                                    "latestEvent": Object {
+                                      "entries": Array [
+                                        Object {
+                                          "data": Object {
+                                            "formatted": "Blocked script",
+                                          },
+                                          "id": "1",
+                                          "type": "message",
+                                        },
                                       ],
-                                    ],
-                                    "30d": Array [
-                                      Array [
-                                        1514764800,
-                                        1,
+                                      "eventID": "12345678901234567890123456789012",
+                                      "groupID": "1",
+                                      "id": "1",
+                                      "message": "ApiException",
+                                    },
+                                    "level": "warning",
+                                    "logger": null,
+                                    "metadata": Object {
+                                      "function": "fetchData",
+                                      "type": "RequestError",
+                                    },
+                                    "numComments": 0,
+                                    "participants": Array [],
+                                    "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                                    "platform": "javascript",
+                                    "pluginActions": Array [],
+                                    "pluginContexts": Array [],
+                                    "pluginIssues": Array [],
+                                    "project": Object {
+                                      "environments": Array [],
+                                      "hasAccess": true,
+                                      "id": "2",
+                                      "isBookmarked": false,
+                                      "isMember": true,
+                                      "name": "Project Name",
+                                      "organization": Object {
+                                        "slug": "test-org",
+                                      },
+                                      "slug": "project-slug",
+                                      "teams": Array [],
+                                    },
+                                    "seenBy": Array [],
+                                    "shareId": null,
+                                    "shortId": "JAVASCRIPT-6QS",
+                                    "stats": Object {
+                                      "24h": Array [
+                                        Array [
+                                          1517281200,
+                                          2,
+                                        ],
+                                        Array [
+                                          1517310000,
+                                          1,
+                                        ],
                                       ],
-                                      Array [
-                                        1515024000,
-                                        122,
+                                      "30d": Array [
+                                        Array [
+                                          1514764800,
+                                          1,
+                                        ],
+                                        Array [
+                                          1515024000,
+                                          122,
+                                        ],
                                       ],
+                                    },
+                                    "status": "unresolved",
+                                    "statusDetails": Object {},
+                                    "subscriptionDetails": null,
+                                    "tags": Array [],
+                                    "title": "ZeroDivisionError",
+                                    "type": "error",
+                                    "userCount": 35097,
+                                    "userReportCount": 0,
+                                  }
+                                }
+                                orgId="test-org"
+                                organization={
+                                  Object {
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "org:integrations",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
                                     ],
-                                  },
-                                  "status": "unresolved",
-                                  "statusDetails": Object {},
-                                  "subscriptionDetails": null,
-                                  "tags": Array [],
-                                  "title": "ZeroDivisionError",
-                                  "type": "error",
-                                  "userCount": 35097,
-                                  "userReportCount": 0,
+                                    "features": Array [],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
+                                    },
+                                    "teams": Array [],
+                                  }
+                                }
+                                projectId="project-slug"
+                              />
+                              <MessageInterface
+                                data={
+                                  Object {
+                                    "formatted": "Blocked script",
+                                  }
                                 }
-                              }
-                              isShare={true}
-                              key="entry-0"
-                              type="message"
-                            >
-                              <GroupEventDataSection
                                 event={
                                   Object {
                                     "entries": Array [
@@ -842,46 +885,151 @@ exports[`SharedGroupDetails renders 1`] = `
                                     "userReportCount": 0,
                                   }
                                 }
-                                raw={false}
-                                title="Message"
+                                isShare={true}
+                                key="entry-0"
                                 type="message"
-                                wrapTitle={true}
                               >
-                                <div
-                                  className=" box"
+                                <GroupEventDataSection
+                                  event={
+                                    Object {
+                                      "entries": Array [
+                                        Object {
+                                          "data": Object {
+                                            "formatted": "Blocked script",
+                                          },
+                                          "id": "1",
+                                          "type": "message",
+                                        },
+                                      ],
+                                      "eventID": "12345678901234567890123456789012",
+                                      "groupID": "1",
+                                      "id": "1",
+                                      "message": "ApiException",
+                                    }
+                                  }
+                                  group={
+                                    Object {
+                                      "activity": Array [],
+                                      "annotations": Array [],
+                                      "assignedTo": null,
+                                      "count": "327482",
+                                      "culprit": "fetchData(app/components/group/suggestedOwners)",
+                                      "firstRelease": null,
+                                      "firstSeen": "2019-04-05T19:44:05.963Z",
+                                      "hasSeen": false,
+                                      "id": "1",
+                                      "isBookmarked": false,
+                                      "isPublic": false,
+                                      "isSubscribed": false,
+                                      "lastRelease": null,
+                                      "lastSeen": "2019-04-11T01:08:59Z",
+                                      "latestEvent": Object {
+                                        "entries": Array [
+                                          Object {
+                                            "data": Object {
+                                              "formatted": "Blocked script",
+                                            },
+                                            "id": "1",
+                                            "type": "message",
+                                          },
+                                        ],
+                                        "eventID": "12345678901234567890123456789012",
+                                        "groupID": "1",
+                                        "id": "1",
+                                        "message": "ApiException",
+                                      },
+                                      "level": "warning",
+                                      "logger": null,
+                                      "metadata": Object {
+                                        "function": "fetchData",
+                                        "type": "RequestError",
+                                      },
+                                      "numComments": 0,
+                                      "participants": Array [],
+                                      "permalink": "https://foo.io/organizations/foo/issues/1234/",
+                                      "platform": "javascript",
+                                      "pluginActions": Array [],
+                                      "pluginContexts": Array [],
+                                      "pluginIssues": Array [],
+                                      "project": Object {
+                                        "environments": Array [],
+                                        "hasAccess": true,
+                                        "id": "2",
+                                        "isBookmarked": false,
+                                        "isMember": true,
+                                        "name": "Project Name",
+                                        "organization": Object {
+                                          "slug": "test-org",
+                                        },
+                                        "slug": "project-slug",
+                                        "teams": Array [],
+                                      },
+                                      "seenBy": Array [],
+                                      "shareId": null,
+                                      "shortId": "JAVASCRIPT-6QS",
+                                      "stats": Object {
+                                        "24h": Array [
+                                          Array [
+                                            1517281200,
+                                            2,
+                                          ],
+                                          Array [
+                                            1517310000,
+                                            1,
+                                          ],
+                                        ],
+                                        "30d": Array [
+                                          Array [
+                                            1514764800,
+                                            1,
+                                          ],
+                                          Array [
+                                            1515024000,
+                                            122,
+                                          ],
+                                        ],
+                                      },
+                                      "status": "unresolved",
+                                      "statusDetails": Object {},
+                                      "subscriptionDetails": null,
+                                      "tags": Array [],
+                                      "title": "ZeroDivisionError",
+                                      "type": "error",
+                                      "userCount": 35097,
+                                      "userReportCount": 0,
+                                    }
+                                  }
+                                  raw={false}
+                                  title="Message"
+                                  type="message"
+                                  wrapTitle={true}
                                 >
                                   <div
-                                    className="box-header"
-                                    id="message"
+                                    className=" box"
                                   >
-                                    <a
-                                      className="permalink"
-                                      href="#message"
+                                    <div
+                                      className="box-header"
+                                      id="message"
                                     >
-                                      <em
-                                        className="icon-anchor"
-                                      />
-                                    </a>
-                                    <h3>
-                                      Message
-                                    </h3>
-                                  </div>
-                                  <div
-                                    className="box-content with-padding"
-                                  >
-                                    <pre
-                                      className="plain"
+                                      <a
+                                        className="permalink"
+                                        href="#message"
+                                      >
+                                        <em
+                                          className="icon-anchor"
+                                        />
+                                      </a>
+                                      <h3>
+                                        Message
+                                      </h3>
+                                    </div>
+                                    <div
+                                      className="box-content with-padding"
                                     >
-                                      <Annotated
-                                        object={
-                                          Object {
-                                            "formatted": "Blocked script",
-                                          }
-                                        }
-                                        prop="formatted"
-                                        required={false}
+                                      <pre
+                                        className="plain"
                                       >
-                                        <MetaData
+                                        <Annotated
                                           object={
                                             Object {
                                               "formatted": "Blocked script",
@@ -890,21 +1038,31 @@ exports[`SharedGroupDetails renders 1`] = `
                                           prop="formatted"
                                           required={false}
                                         >
-                                          <ErrorBoundary
-                                            mini={true}
+                                          <MetaData
+                                            object={
+                                              Object {
+                                                "formatted": "Blocked script",
+                                              }
+                                            }
+                                            prop="formatted"
+                                            required={false}
                                           >
-                                            Blocked script
-                                          </ErrorBoundary>
-                                        </MetaData>
-                                      </Annotated>
-                                    </pre>
+                                            <ErrorBoundary
+                                              mini={true}
+                                            >
+                                              Blocked script
+                                            </ErrorBoundary>
+                                          </MetaData>
+                                        </Annotated>
+                                      </pre>
+                                    </div>
                                   </div>
-                                </div>
-                              </GroupEventDataSection>
-                            </MessageInterface>
-                             
-                          </div>
-                        </EventEntries>
+                                </GroupEventDataSection>
+                              </MessageInterface>
+                               
+                            </div>
+                          </EventEntries>
+                        </withApi(EventEntries)>
                       </WithOrganizationMockWrapper>
                     </div>
                   </div>
