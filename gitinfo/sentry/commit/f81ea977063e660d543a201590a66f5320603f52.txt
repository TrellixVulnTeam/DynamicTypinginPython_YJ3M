commit f81ea977063e660d543a201590a66f5320603f52
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 2 10:51:42 2015 -0800

    Add Plugin2.get_annotations

diff --git a/src/sentry/plugins/base/__init__.py b/src/sentry/plugins/base/__init__.py
index 769855d888..bc6ce6faaf 100644
--- a/src/sentry/plugins/base/__init__.py
+++ b/src/sentry/plugins/base/__init__.py
@@ -9,6 +9,7 @@ from __future__ import absolute_import, print_function
 
 from sentry.plugins.base.manager import PluginManager
 from sentry.plugins.base.response import *  # NOQA
+from sentry.plugins.base.structs import *  # NOQA
 from sentry.plugins.base.v1 import *  # NOQA
 from sentry.plugins.base.v2 import *  # NOQA
 
diff --git a/src/sentry/plugins/base/structs.py b/src/sentry/plugins/base/structs.py
new file mode 100644
index 0000000000..3d0e3ac874
--- /dev/null
+++ b/src/sentry/plugins/base/structs.py
@@ -0,0 +1,20 @@
+"""
+sentry.plugins.base.structs
+~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from __future__ import absolute_import, print_function
+
+__all__ = ('Annotation',)
+
+
+class Annotation(object):
+    __slots__ = ['label', 'url', 'description']
+
+    def __init__(self, label, url=None, description=None):
+        self.label = label
+        self.url = url
+        self.description = description
diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index 194f7e0b2c..3141b64755 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -41,7 +41,8 @@ class IPlugin2(local):
     >>>     def get_title(self):
     >>>         return 'My Plugin'
 
-    All children should allow ``**kwargs`` on all inherited methods.
+    As a general rule all inherited methods should allow ``**kwargs`` to ensure
+    ease of future compatibility.
     """
     # Generic plugin information
     title = None
@@ -217,9 +218,11 @@ class IPlugin2(local):
         """
         return []
 
-    def get_actions(self, request, group):
+    def get_actions(self, request, group, **kwargs):
         """
-        Return a list of available actions to append to aggregates.
+        Return a list of available actions to append this aggregate.
+
+        Examples of built-in actions are "Mute Event" and "Remove Data".
 
         An action is a tuple containing two elements:
 
@@ -230,6 +233,23 @@ class IPlugin2(local):
         """
         return []
 
+    def get_annotations(self, request, group, **kwargs):
+        """
+        Return a list of annotations to append to this aggregate.
+
+        An example of an annotation might be "Needs Fix" or "Task #123".
+
+        The properties of each tag must match the constructor for
+        :class:`sentry.plugins.Annotation`
+
+        >>> def get_annotations(self, request, group, **kwargs):
+        >>>     task_id = GroupMeta.objects.get_value(group, 'myplugin:tid')
+        >>>     if not task_id:
+        >>>         return []
+        >>>     return [{'label': '#%s' % (task_id,)}]
+        """
+        return []
+
 
 class Plugin2(IPlugin2):
     """
diff --git a/src/sentry/templates/sentry/partial/_group.html b/src/sentry/templates/sentry/partial/_group.html
index fafc26f876..60999af114 100644
--- a/src/sentry/templates/sentry/partial/_group.html
+++ b/src/sentry/templates/sentry/partial/_group.html
@@ -13,7 +13,13 @@
         </h3>
         <p class="message" title="{{ group.message }}">
             <a href="{% url 'sentry-stream' group.organization.slug group.project.slug %}?logger={{ group.logger }}" class="tag tag-logger">{{ group.logger }}</a>
-            {% for tag in group|get_tags:request %}<span class="tag">{{ tag }}</span> {% endfor %}
+            {% for annotation in group|get_annotations:request %}
+                {% if annotation.url %}
+                    <a href="{{ annotation.url }}" class="tag">{{ annotation.label }}</a>
+                {% else %}
+                    <span class="tag">{{ annotation.label }}</span>
+                {% endif %}
+            {% endfor %}
             {{ group.error }}
         </p>
         <div class="meta">
diff --git a/src/sentry/templatetags/sentry_plugins.py b/src/sentry/templatetags/sentry_plugins.py
index 3c788bb0b1..9137292ad7 100644
--- a/src/sentry/templatetags/sentry_plugins.py
+++ b/src/sentry/templatetags/sentry_plugins.py
@@ -9,7 +9,7 @@ from __future__ import absolute_import
 
 from django import template
 
-from sentry.plugins import plugins
+from sentry.plugins import Annotation, plugins
 from sentry.utils.safe import safe_execute
 
 register = template.Library()
@@ -63,20 +63,26 @@ def get_widgets(group, request):
 
 
 @register.filter
-def get_tags(group, request=None):
+def get_annotations(group, request=None):
     project = group.project
 
-    tag_list = []
-    for plugin in plugins.for_project(project):
-        results = safe_execute(plugin.tags, request, group, tag_list)
+    annotation_list = []
+    for plugin in plugins.for_project(project, version=1):
+        results = safe_execute(plugin.tags, request, group, annotation_list)
 
         if not results:
             continue
 
-        tag_list = results
+        annotation_list = results
+
+    annotation_list = [Annotation(*tag) for tag in annotation_list]
+    for plugin in plugins.for_project(project, version=2):
+        for value in (safe_execute(plugin.get_annotations, request, group) or ()):
+            annotation = safe_execute(Annotation, **value)
+            if annotation:
+                annotation_list.append(annotation)
 
-    for tag in tag_list:
-        yield tag
+    return annotation_list
 
 
 @register.simple_tag
diff --git a/src/sentry/utils/javascript.py b/src/sentry/utils/javascript.py
index 28ef5afad4..c2b6b0f175 100644
--- a/src/sentry/utils/javascript.py
+++ b/src/sentry/utils/javascript.py
@@ -18,7 +18,7 @@ from sentry.constants import TAG_LABELS
 from sentry.models import (
     Group, GroupBookmark, GroupTagKey, GroupSeen, GroupStatus, ProjectOption
 )
-from sentry.templatetags.sentry_plugins import get_tags
+from sentry.templatetags.sentry_plugins import get_annotations
 from sentry.utils import json
 from sentry.utils.db import attach_foreignkey
 from sentry.utils.http import absolute_uri
@@ -190,6 +190,8 @@ class GroupTransformer(Transformer):
             d['historicalData'] = obj.historical_data
         if hasattr(obj, 'annotations'):
             d['annotations'] = obj.annotations
+
+        # TODO(dcramer): these aren't tags, and annotations aren't annotations
         if request:
-            d['tags'] = list(get_tags(obj, request))
+            d['tags'] = list(get_annotations(obj, request))
         return d
diff --git a/tests/sentry/templatetags/test_sentry_plugins.py b/tests/sentry/templatetags/test_sentry_plugins.py
index 411fa20419..1e56a298c4 100644
--- a/tests/sentry/templatetags/test_sentry_plugins.py
+++ b/tests/sentry/templatetags/test_sentry_plugins.py
@@ -11,6 +11,12 @@ class SamplePlugin(Plugin2):
     def get_actions(self, request, group):
         return [('Example Action', 'http://example.com?id=%s' % (group.id,))]
 
+    def get_annotations(self, request, group):
+        return [
+            {'label': 'Example Tag', 'url': 'http://example.com?id=%s' % (group.id,)},
+            {'label': 'Example Two'},
+        ]
+
     def is_enabled(self, project=None):
         return True
 
@@ -43,3 +49,25 @@ class GetActionsTest(PluginTestCase):
         }))
 
         assert '<span>Example Action - http://example.com?id=%s</span>' % (group.id,) in result
+
+
+class GetAnnotationsTest(PluginTestCase):
+    plugin = SamplePlugin
+
+    TEMPLATE = Template("""
+        {% load sentry_plugins %}
+        {% for a in group|get_annotations:request %}
+            <span>{{ a.label }} - {{ a.url }}</span>
+        {% endfor %}
+    """)
+
+    def test_includes_v2_plugins(self):
+        group = self.create_group()
+
+        result = self.TEMPLATE.render(Context({
+            'request': Mock(),
+            'group': group,
+        }))
+
+        assert '<span>Example Tag - http://example.com?id=%s</span>' % (group.id,) in result
+        assert '<span>Example Two - None</span>' in result
