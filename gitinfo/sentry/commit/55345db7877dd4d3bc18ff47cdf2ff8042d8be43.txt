commit 55345db7877dd4d3bc18ff47cdf2ff8042d8be43
Author: Jan Michael Auer <account@jauer.org>
Date:   Fri Nov 9 16:03:03 2018 +0100

    ref(interfaces): Remove the query interface (#10475)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index da2d1e84c6..935a2d80b5 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -913,7 +913,6 @@ SENTRY_INTERFACES = {
     'device': 'sentry.interfaces.device.Device',
     'exception': 'sentry.interfaces.exception.Exception',
     'logentry': 'sentry.interfaces.message.Message',
-    'query': 'sentry.interfaces.query.Query',
     'request': 'sentry.interfaces.http.Http',
     'sdk': 'sentry.interfaces.sdk.Sdk',
     'stacktrace': 'sentry.interfaces.stacktrace.Stacktrace',
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index b2c47c42bb..7e609cfc93 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -167,7 +167,7 @@ CLIENT_RESERVED_ATTRS = (
     'project', 'errors', 'event_id', 'message', 'checksum', 'culprit', 'fingerprint', 'level',
     'time_spent', 'logger', 'server_name', 'site', 'received', 'timestamp', 'extra', 'modules',
     'tags', 'platform', 'release', 'dist', 'environment', 'transaction', 'key_id', '_meta',
-    'repos',
+    'repos', 'query',
 )
 
 # XXX: Must be all lowercase
diff --git a/src/sentry/interfaces/query.py b/src/sentry/interfaces/query.py
deleted file mode 100644
index e8282df16e..0000000000
--- a/src/sentry/interfaces/query.py
+++ /dev/null
@@ -1,44 +0,0 @@
-"""
-sentry.interfaces.query
-~~~~~~~~~~~~~~~~~~~~~~~
-
-:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
-:license: BSD, see LICENSE for more details.
-"""
-
-from __future__ import absolute_import
-
-__all__ = ('Query', )
-
-from sentry.interfaces.base import Interface, InterfaceValidationError
-from sentry.utils.safe import trim
-
-
-class Query(Interface):
-    """
-    A SQL query with an optional string describing the SQL driver, ``engine``.
-
-    >>> {
-    >>>     "query": "SELECT 1"
-    >>>     "engine": "psycopg2"
-    >>> }
-    """
-
-    @classmethod
-    def to_python(cls, data):
-        if not isinstance(data, dict):
-            raise InterfaceValidationError("Invalid interface data")
-        if not data.get('query'):
-            raise InterfaceValidationError("No 'query' value")
-
-        kwargs = {
-            'query': trim(data['query'], 1024),
-            'engine': trim(data.get('engine'), 128),
-        }
-        return cls(**kwargs)
-
-    def get_hash(self):
-        return [self.query]
-
-    def get_path(self):
-        return 'sentry.interfaces.Query'
diff --git a/src/sentry/utils/canonical.py b/src/sentry/utils/canonical.py
index d75d0d7096..7bc9e19fa1 100644
--- a/src/sentry/utils/canonical.py
+++ b/src/sentry/utils/canonical.py
@@ -21,7 +21,6 @@ CANONICAL_KEY_MAPPING = {
     'sentry.interfaces.Message': 'logentry',
     'sentry.interfaces.Stacktrace': 'stacktrace',
     'sentry.interfaces.Template': 'template',
-    'sentry.interfaces.Query': 'query',
     'sentry.interfaces.Http': 'request',
     'sentry.interfaces.User': 'user',
     'sentry.interfaces.Csp': 'csp',
diff --git a/tests/sentry/interfaces/test_query.py b/tests/sentry/interfaces/test_query.py
deleted file mode 100644
index ebf52a9de9..0000000000
--- a/tests/sentry/interfaces/test_query.py
+++ /dev/null
@@ -1,27 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from __future__ import absolute_import
-
-from exam import fixture
-
-from sentry.interfaces.query import Query
-from sentry.testutils import TestCase
-
-
-class QueryTest(TestCase):
-    @fixture
-    def interface(self):
-        return Query.to_python(dict(query='SELECT 1', engine='psycopg2'))
-
-    def test_serialize_behavior(self):
-        assert self.interface.to_json() == {
-            'query': self.interface.query,
-            'engine': self.interface.engine,
-        }
-
-    def test_get_hash_uses_query(self):
-        assert self.interface.get_hash() == [self.interface.query]
-
-    def test_serialize_unserialize_behavior(self):
-        result = type(self.interface).to_python(self.interface.to_json())
-        assert result.to_json() == self.interface.to_json()
