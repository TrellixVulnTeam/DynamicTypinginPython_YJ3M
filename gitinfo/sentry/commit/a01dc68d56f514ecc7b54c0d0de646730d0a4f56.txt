commit a01dc68d56f514ecc7b54c0d0de646730d0a4f56
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jan 18 14:10:33 2018 -0800

    fix: Do not use project from context
    
    Context changes do not always trigger a rerender

diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index 554ec4f233..3c3f29cb8d 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -1,7 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import {Link} from 'react-router';
-import classNames from 'classnames';
 
 import ProjectSelector from './projectSelector';
 import BookmarkToggle from '../projects/bookmarkToggle';
@@ -43,19 +42,13 @@ class ProjectHeader extends React.Component {
       ? activeEnvironment.name
       : allEnvironmentsLabel;
 
-    let projectIconClass = classNames('project-select-bookmark icon icon-star-solid', {
-      active: project.isBookmarked,
-    });
-
     return (
       <div className="sub-header flex flex-container flex-vertically-centered">
         <div className="project-header p-t-1">
           <div className="project-header-main">
             <div className="project-select-wrapper">
               <ProjectSelector organization={org} projectId={project.slug} />
-              <BookmarkToggle orgId={org.slug} project={project}>
-                <a className={projectIconClass} />
-              </BookmarkToggle>
+              <BookmarkToggle />
             </div>
 
             <ul className="nav nav-tabs">
diff --git a/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx b/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx
index 9fdab267cd..e4939a49e7 100644
--- a/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx
+++ b/src/sentry/static/sentry/app/components/projects/bookmarkToggle.jsx
@@ -1,37 +1,44 @@
-import PropTypes from 'prop-types';
 import React from 'react';
-
+import Reflux from 'reflux';
+import classNames from 'classnames';
 import createReactClass from 'create-react-class';
-
 import ApiMixin from '../../mixins/apiMixin';
-
 import {update as projectUpdate} from '../../actionCreators/projects';
+import LatestContextStore from '../../stores/latestContextStore';
 
 const BookmarkToggle = createReactClass({
   displayName: 'BookmarkToggle',
 
-  propTypes: {
-    orgId: PropTypes.string.isRequired,
-    project: PropTypes.object.isRequired,
-  },
-
-  mixins: [ApiMixin],
+  mixins: [ApiMixin, Reflux.connect(LatestContextStore, 'latestContext')],
 
   handleBookmarkClick() {
-    let {project} = this.props;
-    projectUpdate(this.api, {
-      orgId: this.props.orgId,
-      projectId: project.slug,
-      data: {
-        isBookmarked: !project.isBookmarked,
-      },
-    });
+    let {project, organization} = this.state.latestContext;
+    if (project && organization) {
+      projectUpdate(this.api, {
+        orgId: organization.slug,
+        projectId: project.slug,
+        data: {
+          isBookmarked: !project.isBookmarked,
+        },
+      });
+    }
   },
 
   render() {
     // TODO: can't guarantee that a <span> is appropriate here 100% of the time
     //       if this is to be truly re-usable
-    return <span onClick={this.handleBookmarkClick}>{this.props.children}</span>;
+    let project = this.state.latestContext.project;
+    let isActive = project ? project.isBookmarked : false;
+
+    let projectIconClass = classNames('project-select-bookmark icon icon-star-solid', {
+      active: isActive,
+    });
+
+    return (
+      <span onClick={this.handleBookmarkClick}>
+        <a className={projectIconClass} />
+      </span>
+    );
   },
 });
 
diff --git a/src/sentry/static/sentry/app/stores/latestContextStore.jsx b/src/sentry/static/sentry/app/stores/latestContextStore.jsx
index 455f234584..0191d0e903 100644
--- a/src/sentry/static/sentry/app/stores/latestContextStore.jsx
+++ b/src/sentry/static/sentry/app/stores/latestContextStore.jsx
@@ -18,6 +18,7 @@ const LatestContextStore = Reflux.createStore({
   init() {
     this.reset();
     this.listenTo(ProjectActions.setActive, this.onSetActiveProject);
+    this.listenTo(ProjectActions.updateSuccess, this.onUpdateProject);
     this.listenTo(OrganizationsActions.setActive, this.onSetActiveOrganization);
     this.listenTo(OrganizationsActions.update, this.onUpdateOrganization);
     this.listenTo(EnvironmentActions.setActive, this.onSetActiveEnvironment);
@@ -67,6 +68,11 @@ const LatestContextStore = Reflux.createStore({
     this.trigger(this.state);
   },
 
+  onUpdateProject(project) {
+    this.state.project = project;
+    this.trigger(this.state);
+  },
+
   onSetActiveEnvironment(environment) {
     this.state.environment = environment;
 
