commit 2668cd6b370efbbd547d070cc42956b9a401d8a5
Author: Mark Story <mark@sentry.io>
Date:   Mon Sep 30 11:59:53 2019 -0400

    ref(ts) Convert Count to Typescript (#14853)
    
    * ref(ts) Convert Count to Typescript
    
    * Fix formatting

diff --git a/src/sentry/static/sentry/app/components/count.jsx b/src/sentry/static/sentry/app/components/count.jsx
deleted file mode 100644
index 2f67339f35..0000000000
--- a/src/sentry/static/sentry/app/components/count.jsx
+++ /dev/null
@@ -1,15 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import formatAbbreviatedNumber from 'app/utils/formatAbbreviatedNumber';
-
-export default class Count extends React.PureComponent {
-  static propTypes = {
-    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
-  };
-  render() {
-    const {value, className} = this.props;
-
-    return <span className={className}>{formatAbbreviatedNumber(value)}</span>;
-  }
-}
diff --git a/src/sentry/static/sentry/app/components/count.tsx b/src/sentry/static/sentry/app/components/count.tsx
new file mode 100644
index 0000000000..8ce9aa50de
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/count.tsx
@@ -0,0 +1,20 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import formatAbbreviatedNumber from 'app/utils/formatAbbreviatedNumber';
+
+type Props = {
+  value: string | number;
+  className?: string;
+};
+
+function Count(props: Props) {
+  const {value, className} = props;
+
+  return <span className={className}>{formatAbbreviatedNumber(value)}</span>;
+}
+Count.propTypes = {
+  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
+};
+
+export default Count;
