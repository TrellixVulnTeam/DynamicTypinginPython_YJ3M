commit 0e355409d9793ed06dc36c98311d601a259e713e
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Mar 23 14:37:19 2017 +0100

    Fixed association endpoint

diff --git a/src/sentry/api/endpoints/dsym_files.py b/src/sentry/api/endpoints/dsym_files.py
index 179393b30c..b3437b7f82 100644
--- a/src/sentry/api/endpoints/dsym_files.py
+++ b/src/sentry/api/endpoints/dsym_files.py
@@ -11,14 +11,16 @@ from sentry.api.permissions import SystemPermission
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import ListField
 from sentry.models import ProjectDSymFile, create_files_from_macho_zip, \
-    VersionDSymFile, DSymApp
+    VersionDSymFile, DSymApp, DSYM_PLATFORMS
 
 ERR_FILE_EXISTS = 'A file matching this uuid already exists'
 
 
 class AssociateDsymSerializer(serializers.Serializer):
     checksums = ListField(child=serializers.CharField(max_length=40))
-    platform = serializers.CharField(max_length=20)
+    platform = serializers.ChoiceField(choices=zip(
+        DSYM_PLATFORMS.keys(), DSYM_PLATFORMS.keys(),
+    ))
     name = serializers.CharField(max_length=250)
     appId = serializers.CharField(max_length=250)
     version = serializers.CharField(max_length=40)
@@ -123,7 +125,27 @@ class AssociateDSymFilesEndpoint(ProjectEndpoint):
 
         data = serializer.object
 
-        ProjectDSymFile.objects.find_by_checksums(
+        associated = []
+        dsym_app = DSymApp.objects.create_or_update_app(
+            sync_id=None,
+            app_id=data['appId'],
+            project=project,
+            data={'name': data['name']},
+            platform=DSYM_PLATFORMS[data['platform']],
+        )
+        dsym_files = ProjectDSymFile.objects.find_by_checksums(
             data['checksums'], project)
 
-        return Response({'data': data})
+        for dsym_file in dsym_files:
+            version_dsym_file, created = VersionDSymFile.objects.get_or_create(
+                dsym_file=dsym_file,
+                dsym_app=dsym_app,
+                version=data['version'],
+                build=data['build'],
+            )
+            if created:
+                associated.append(dsym_file)
+
+        return Response({
+            'associatedDsymFiles': serialize(associated, request.user),
+        })
diff --git a/src/sentry/models/dsymfile.py b/src/sentry/models/dsymfile.py
index 9be9f57d38..65a1bbe4db 100644
--- a/src/sentry/models/dsymfile.py
+++ b/src/sentry/models/dsymfile.py
@@ -55,12 +55,21 @@ class DSymPlatform(object):
     ANDROID = 2
 
 
+DSYM_PLATFORMS = {
+    'generic': DSymPlatform.GENERIC,
+    'apple': DSymPlatform.APPLE,
+    'android': DSymPlatform.ANDROID,
+}
+
+
 class DSymAppManager(BaseManager):
 
-    def create_or_update_app(self, sync_id, app_id, project, data=None, platform=DSymPlatform.GENERIC):
+    def create_or_update_app(self, sync_id, app_id, project, data=None,
+                             platform=DSymPlatform.GENERIC):
         if data is None:
             data = {}
-        existing_app = DSymApp.objects.filter(app_id=app_id, project=project).first()
+        existing_app = DSymApp.objects.filter(
+            app_id=app_id, project=project).first()
         if existing_app is not None:
             now = timezone.now()
             existing_app.update(
@@ -88,9 +97,9 @@ class DSymApp(Model):
     sync_id = models.CharField(max_length=64, null=True)
     data = JSONField()
     platform = BoundedPositiveIntegerField(default=0, choices=(
-        (DSymPlatform.GENERIC, _('generic')),
-        (DSymPlatform.APPLE, _('apple')),
-        (DSymPlatform.ANDROID, _('android'))
+        (DSymPlatform.GENERIC, _('Generic')),
+        (DSymPlatform.APPLE, _('Apple')),
+        (DSymPlatform.ANDROID, _('Android')),
     ))
     last_synced = models.DateTimeField(default=timezone.now)
     date_added = models.DateTimeField(default=timezone.now)
