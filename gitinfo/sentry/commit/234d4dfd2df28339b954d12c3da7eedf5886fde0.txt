commit 234d4dfd2df28339b954d12c3da7eedf5886fde0
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Sep 28 12:11:41 2015 -0700

    Add stats for blacklisted events

diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index 2024419f0a..7ec679176e 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -81,6 +81,11 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
                 stat_model = tsdb.models.project_total_rejected
             else:
                 stat_model = tsdb.models.organization_total_rejected
+        elif stat == 'blacklisted':
+            if group == 'project':
+                stat_model = tsdb.models.project_total_blacklisted
+            else:
+                stat_model = tsdb.models.organization_total_blacklisted
         else:
             raise ValueError('Invalid stat: %s' % stat)
 
diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index 87e9d90e5c..5a2537cc59 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -29,8 +29,8 @@ var OrganizationStats = React.createClass({
       statsLoading: false,
       statsRequestsPending: 0,
       projectMap: null,
-      rawProjectData: {received: null, rejected: null},
-      rawOrgData: {received: null, rejected: null},
+      rawProjectData: {received: null, rejected: null, blacklisted: null},
+      rawOrgData: {received: null, rejected: null, blacklisted: null},
       orgStats: null,
       orgTotal: null,
       projectTotals: null
@@ -62,10 +62,10 @@ var OrganizationStats = React.createClass({
     this.setState({
       statsError: false,
       statsLoading: true,
-      statsRequestsPending: 2,
+      statsRequestsPending: 3,
       projectsError: false,
       projectsLoading: true,
-      projectsRequestsPending: 3
+      projectsRequestsPending: 4
     });
 
     var statEndpoint = this.getOrganizationStatsEndpoint();
@@ -151,23 +151,29 @@ var OrganizationStats = React.createClass({
   processOrgData() {
     var oReceived = 0;
     var oRejected = 0;
+    var oBlacklisted = 0;
     var sReceived = {};
     var sRejected = {};
+    var sBlacklisted = {};
     var aReceived = [0, 0]; // received, points
     var rawOrgData = this.state.rawOrgData;
     $.each(rawOrgData.received, (idx, point) => {
       var dReceived = point[1];
       var dRejected = rawOrgData.rejected[idx][1];
+      var dBlacklisted = rawOrgData.blacklisted[idx][1];
       var ts = point[0] * 1000;
       if (sReceived[ts] === undefined) {
         sReceived[ts] = dReceived;
         sRejected[ts] = dRejected;
+        sBlacklisted[ts] = dBlacklisted;
       } else {
         sReceived[ts] += dReceived;
         sRejected[ts] += dRejected;
+        sBlacklisted[ts] += dBlacklisted;
       }
       oReceived += dReceived;
       oRejected += dRejected;
+      oBlacklisted += dBlacklisted;
       if (dReceived > 0) {
         aReceived[0] += dReceived;
         aReceived[1] += 1;
@@ -180,12 +186,16 @@ var OrganizationStats = React.createClass({
         }),
         accepted: $.map(sReceived, (value, ts) => {
           return [[ts, value - sRejected[ts]]];
+        }),
+        blacklisted: $.map(sBlacklisted, (value, ts) => {
+          return [[ts, value - sBlacklisted[ts]]];
         })
       },
       orgTotal: {
         received: oReceived,
         rejected: oRejected,
-        accepted: oReceived - oRejected,
+        blacklisted: oBlacklisted,
+        accepted: oReceived - oRejected - oBlacklisted,
         avgRate: parseInt((aReceived[0] / aReceived[1]) / 60, 10)
       },
       statsLoading: false
@@ -198,15 +208,18 @@ var OrganizationStats = React.createClass({
     $.each(rawProjectData.received, (projectId, data) => {
       var pReceived = 0;
       var pRejected = 0;
+      var pBlacklisted = 0;
       $.each(data, (idx, point) => {
         pReceived += point[1];
         pRejected += rawProjectData.rejected[projectId][idx][1];
+        pBlacklisted += rawProjectData.blacklisted[projectId][idx][1];
       });
       projectTotals.push({
         id: projectId,
         received: pReceived,
         rejected: pRejected,
-        accepted: pReceived - pRejected
+        blacklisted: pBlacklisted,
+        accepted: pReceived - pRejected - pBlacklisted
       });
     });
     this.setState({
@@ -242,6 +255,18 @@ var OrganizationStats = React.createClass({
           show: true,
           fill: true
         }
+      },
+      {
+        data: stats.blacklisted,
+        color: 'rgba(192, 152, 83, 1)',
+        shadowSize: 0,
+        label: 'Events Blacklisted',
+        stack: true,
+        lines: {
+          lineWidth: 2,
+          show: true,
+          fill: true
+        }
       }
     ];
   },
@@ -252,7 +277,12 @@ var OrganizationStats = React.createClass({
         <h3>Stats</h3>
         <div className="row">
           <div className="col-md-9">
-            <p>The chart below reflects events the system has received across your entire organization. Events are broken down into two categories: Accepted and Rejected. Rejected events are entries that the system threw away due to quotas being hit.</p>
+            <p>The chart below reflects events the system has received
+            across your entire organization. Events are broken down into
+            three categories: Accepted, Rejected, and Blacklisted. Rejected
+            events are entries that the system threw away due to quotas
+            being hit, and Blacklisted events are events that were blocked
+            due to your Blacklisted IPs setting.</p>
           </div>
           {!this.state.statsLoading &&
             <div className="col-md-3 stats-column">
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index b081bbe9e3..b7dea4316d 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -35,6 +35,7 @@ var ProjectTable = React.createClass({
             <th>Project</th>
             <th className="align-right">Accepted</th>
             <th className="align-right">Rejected</th>
+            <th className="align-right">Blacklisted</th>
             <th className="align-right">Total</th>
           </tr>
         </thead>
@@ -55,6 +56,10 @@ var ProjectTable = React.createClass({
                   <Count value={item.rejected} /><br/>
                   <small>{getPercent(item.rejected, orgTotal.rejected)}</small>
                 </td>
+                <td className="align-right">
+                  <Count value={item.blacklisted} /><br/>
+                  <small>{getPercent(item.blacklisted, orgTotal.blacklisted)}</small>
+                </td>
                 <td className="align-right">
                   <Count value={item.received} /><br/>
                   <small>{getPercent(item.received, orgTotal.received)}</small>
