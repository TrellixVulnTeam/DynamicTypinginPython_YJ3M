commit a6af08da087f7c20dac24c8f27224b5809f76408
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Sep 1 15:32:36 2015 +0200

    Finished up API docs for teams

diff --git a/src/sentry/api/endpoints/team_details.py b/src/sentry/api/endpoints/team_details.py
index 3995800095..f586cdcb7a 100644
--- a/src/sentry/api/endpoints/team_details.py
+++ b/src/sentry/api/endpoints/team_details.py
@@ -9,6 +9,29 @@ from sentry.api.decorators import sudo_required
 from sentry.api.serializers import serialize
 from sentry.models import AuditLogEntryEvent, Team, TeamStatus
 from sentry.tasks.deletion import delete_team
+from sentry.utils.apidocs import scenario, attach_scenarios
+
+
+@scenario('GetTeam')
+def get_team_scenario(runner):
+    runner.request(
+        method='GET',
+        path='/teams/%s/%s/' % (
+            runner.org.slug, runner.default_team.slug)
+    )
+
+
+@scenario('UpdateTeam')
+def update_team_scenario(runner):
+    team = runner.utils.create_team('The Obese Philosophers', runner.org)
+    runner.request(
+        method='PUT',
+        path='/teams/%s/%s/' % (
+            runner.org.slug, team.slug),
+        data={
+            'name': 'The Inflated Philosophers'
+        }
+    )
 
 
 class TeamSerializer(serializers.ModelSerializer):
@@ -26,6 +49,7 @@ class TeamSerializer(serializers.ModelSerializer):
 class TeamDetailsEndpoint(TeamEndpoint):
     doc_section = DocSection.TEAMS
 
+    @attach_scenarios([get_team_scenario])
     def get(self, request, team):
         """
         Retrieve a Team
@@ -33,14 +57,17 @@ class TeamDetailsEndpoint(TeamEndpoint):
 
         Return details on an individual team.
 
-            {method} {path}
-
+        :pparam string organization_slug: the slug of the organization the
+                                          team belongs to.
+        :pparam string team_slug: the slug of the team to get.
+        :auth: required
         """
         context = serialize(team, request.user)
         context['organization'] = serialize(team.organization, request.user)
 
         return Response(context)
 
+    @attach_scenarios([update_team_scenario])
     @sudo_required
     def put(self, request, team):
         """
@@ -49,6 +76,14 @@ class TeamDetailsEndpoint(TeamEndpoint):
 
         Update various attributes and configurable settings for the given
         team.
+
+        :pparam string organization_slug: the slug of the organization the
+                                          team belongs to.
+        :pparam string team_slug: the slug of the team to get.
+        :param string name: the new name for the team.
+        :param string slug: a new slug for the team.  It has to be unique
+                            and available.
+        :auth: required
         """
         serializer = TeamSerializer(team, data=request.DATA, partial=True)
         if serializer.is_valid():
diff --git a/src/sentry/api/endpoints/team_stats.py b/src/sentry/api/endpoints/team_stats.py
index ab11428cff..c644d46039 100644
--- a/src/sentry/api/endpoints/team_stats.py
+++ b/src/sentry/api/endpoints/team_stats.py
@@ -7,17 +7,29 @@ from sentry.app import tsdb
 from sentry.api.base import DocSection, StatsMixin
 from sentry.api.bases.team import TeamEndpoint
 from sentry.models import Project
+from sentry.utils.apidocs import scenario, attach_scenarios
+
+
+@scenario('RetrieveEventCountsTeam')
+def retrieve_event_counts_team(runner):
+    runner.request(
+        method='GET',
+        path='/teams/%s/%s/stats/' % (
+            runner.org.slug, runner.default_team.slug)
+    )
 
 
 class TeamStatsEndpoint(TeamEndpoint, StatsMixin):
     doc_section = DocSection.TEAMS
 
+    @attach_scenarios([retrieve_event_counts_team])
     def get(self, request, team):
         """
         Retrieve Event Counts for a Team
         ````````````````````````````````
 
-        **Draft:** This endpoint may change in the future without notice.
+        .. caution::
+           This endpoint may change in the future without notice.
 
         Return a set of points representing a normalized timestamp and the
         number of events seen in the period.
@@ -25,14 +37,20 @@ class TeamStatsEndpoint(TeamEndpoint, StatsMixin):
         Query ranges are limited to Sentry's configured time-series
         resolutions.
 
-        Parameters:
-
-        - ``since``: a timestamp to set the start of the query
-        - ``until``: a timestamp to set the end of the query
-        - ``resolution``: an explicit resolution to search for (i.e. 10s)
-
-        **Note:** resolution should not be used unless you're familiar
-        with Sentry internals as it's restricted to pre-defined values.
+        :pparam string organization_slug: the slug of the organization.
+        :pparam string team_slug: the slug of the team.
+        :qparam string stat: the name of the stat to query (``"received"``,
+                             ``"rejected"``)
+        :qparam timestamp since: a timestamp to set the start of the query
+                                 in seconds since UNIX epoch.
+        :qparam timestamp until: a timestamp to set the end of the query
+                                 in seconds since UNIX epoch.
+        :qparam string resolution: an explicit resolution to search
+                                   for (eg: ``10s``).  This should not be
+                                   used unless you are familiar with Sentry's
+                                   internals as it's restricted to pre-defined
+                                   values.
+        :auth: required
         """
         projects = Project.objects.get_for_user(
             team=team,
