commit 7c4cbef941122e4802cb40fe49dcc47f32684db2
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 6 03:20:37 2012 -0800

    Use span technique to wordwrap long strings

diff --git a/bootstrap/lib/sentry.less b/bootstrap/lib/sentry.less
index 277b94f297..0f68838b7d 100644
--- a/bootstrap/lib/sentry.less
+++ b/bootstrap/lib/sentry.less
@@ -1,3 +1,9 @@
+pre, code {
+  span {
+    display: inline-block;
+  }
+}
+
 code {
   background-color: inherit;
   color: lighten(@black, 40%);
diff --git a/sentry/static/styles/bootstrap.css b/sentry/static/styles/bootstrap.css
index fdc370cf3d..da5905d9d8 100644
--- a/sentry/static/styles/bootstrap.css
+++ b/sentry/static/styles/bootstrap.css
@@ -6,7 +6,7 @@
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Designed and built with all the love in the world @twitter by @mdo and @fat.
- * Date: Fri Jan  6 03:16:05 PST 2012
+ * Date: Fri Jan  6 03:20:02 PST 2012
  */
 /* Reset.less
  * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here	that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
@@ -2467,6 +2467,9 @@ button.btn::-moz-focus-inner, input[type=submit].btn::-moz-focus-inner {
   -moz-box-shadow: 0 1px 4px rgba(0, 105, 214, 0.25);
   box-shadow: 0 1px 4px rgba(0, 105, 214, 0.25);
 }
+pre span, code span {
+  display: inline-block;
+}
 code {
   background-color: inherit;
   color: #666666;
diff --git a/sentry/static/styles/bootstrap.min.css b/sentry/static/styles/bootstrap.min.css
index 85528965ed..8d311e599d 100644
--- a/sentry/static/styles/bootstrap.min.css
+++ b/sentry/static/styles/bootstrap.min.css
@@ -354,6 +354,7 @@ button.btn::-moz-focus-inner,input[type=submit].btn::-moz-focus-inner{padding:0;
 .media-grid li{display:inline;}
 .media-grid a{float:left;padding:4px;margin:0 0 18px 20px;border:1px solid #ddd;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 1px 1px rgba(0, 0, 0, 0.075);-moz-box-shadow:0 1px 1px rgba(0, 0, 0, 0.075);box-shadow:0 1px 1px rgba(0, 0, 0, 0.075);}.media-grid a img{display:block;}
 .media-grid a:hover{border-color:#0069d6;-webkit-box-shadow:0 1px 4px rgba(0, 105, 214, 0.25);-moz-box-shadow:0 1px 4px rgba(0, 105, 214, 0.25);box-shadow:0 1px 4px rgba(0, 105, 214, 0.25);}
+pre span,code span{display:inline-block;}
 code{background-color:inherit;color:#666666;}
 .options{margin:0 0 18px;padding:0;list-style:none;zoom:1;border-color:#ddd;border-style:solid;border-width:0 0 1px;height:36px;margin:0 0 18px;}.options:before,.options:after{display:table;content:"";zoom:1;}
 .options:after{clear:both;}
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index c1387e369b..a825243f44 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -2,7 +2,7 @@
 #      INSTALLED_APPS
 from django import template
 from django.template import RequestContext
-from django.template.defaultfilters import stringfilter
+from django.template.defaultfilters import stringfilter, escape
 from django.template.loader import render_to_string
 from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext as _
@@ -26,8 +26,10 @@ def pprint(value, break_after=10):
     """
     from pprint import pformat
 
-    # return u'\u200B'.join([value[i:(i + break_after)] for i in xrange(0, len(value), break_after)])
-    return pformat(value).decode('utf-8', 'replace')
+    value = pformat(value).decode('utf-8', 'replace')
+    return mark_safe(u'<span></span>'.join(
+        [escape(value[i:(i + break_after)]) for i in xrange(0, len(value), break_after)]
+    ))
 
 
 # seriously Django?
