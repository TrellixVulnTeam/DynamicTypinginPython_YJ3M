commit e552e8fe87f553d377ad2bfbe08aa21c3eb6a0fe
Author: Dena Mwangi <dena@getsentry.com>
Date:   Mon Nov 19 11:41:49 2018 -0800

    feat(analytics): Add source param to error notification email (#10635)

diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 509cd11c39..764c0f5d1b 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -183,10 +183,11 @@ class MailPlugin(NotificationPlugin):
 
         return send_to_list
 
-    def add_unsubscribe_link(self, context, user_id, project):
+    def add_unsubscribe_link(self, context, user_id, project, source):
         context['unsubscribe_link'] = generate_signed_link(
             user_id,
             'sentry-account-email-unsubscribe-project',
+            source,
             kwargs={
                 'project_id': project.id,
             }
@@ -207,8 +208,11 @@ class MailPlugin(NotificationPlugin):
 
         link = group.get_absolute_url()
 
+        query_params = {'source': 'alert_email'}
         if environment:
-            link = link + '?' + urlencode({'environment': environment})
+            query_params['environment'] = environment
+
+        link = link + '?' + urlencode(query_params)
 
         template = 'sentry/emails/error.txt'
         html_template = 'sentry/emails/error.html'
@@ -275,7 +279,8 @@ class MailPlugin(NotificationPlugin):
         }
 
         for user_id in self.get_send_to(project=project, event=event):
-            self.add_unsubscribe_link(context, user_id, project)
+            self.add_unsubscribe_link(context, user_id, project, 'alert_email')
+
             self._send_mail(
                 subject=subject,
                 template=template,
@@ -331,7 +336,7 @@ class MailPlugin(NotificationPlugin):
             group = six.next(iter(counts))
             subject = self.get_digest_subject(group, counts, start)
 
-            self.add_unsubscribe_link(context, user_id, project)
+            self.add_unsubscribe_link(context, user_id, project, 'alert_digest')
             self._send_mail(
                 subject=subject,
                 template='sentry/emails/digests/body.txt',
diff --git a/src/sentry/utils/linksign.py b/src/sentry/utils/linksign.py
index 28fdb1f0fe..b2d09ca976 100644
--- a/src/sentry/utils/linksign.py
+++ b/src/sentry/utils/linksign.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import
 
 from django.core import signing
 from django.core.urlresolvers import reverse
+from six.moves.urllib.parse import urlencode
 
 from sentry import options
 from sentry.models import User
@@ -13,7 +14,7 @@ def get_signer():
     return signing.TimestampSigner(salt='sentry-link-signature')
 
 
-def generate_signed_link(user, viewname, args=None, kwargs=None):
+def generate_signed_link(user, viewname, source=None, args=None, kwargs=None):
     """This returns an absolute URL where the given user is signed in for
     the given viewname with args and kwargs.  This returns a redirect link
     that if followed sends the user to another URL which carries another
@@ -30,8 +31,10 @@ def generate_signed_link(user, viewname, args=None, kwargs=None):
     path = reverse(viewname, args=args, kwargs=kwargs)
     item = '%s|%s|%s' % (options.get('system.url-prefix'), path, base36_encode(user_id))
     signature = ':'.join(get_signer().sign(item).rsplit(':', 2)[1:])
-
-    return '%s?_=%s:%s' % (absolute_uri(path), base36_encode(user_id), signature, )
+    signed_link = '%s?_=%s:%s' % (absolute_uri(path), base36_encode(user_id), signature, )
+    if source:
+        signed_link = signed_link + '&' + urlencode({'source': source})
+    return signed_link
 
 
 def process_signature(request, max_age=60 * 60 * 24 * 10):
