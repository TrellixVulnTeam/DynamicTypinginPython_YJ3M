commit e28dd2a2c06b479638339a5f2dd8c5437df82470
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Dec 19 09:59:37 2018 -0800

    fix(ui): Create team sending duplicate requests (#10336)
    
    The success handler for "create team" modal was being called twice.
    
    Fixes JAVASCRIPT-4F4 (maybe?)

diff --git a/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx b/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx
index 36ab13e0b5..a2ea863f83 100644
--- a/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx
+++ b/src/sentry/static/sentry/app/components/createTeam/createTeamForm.jsx
@@ -10,13 +10,19 @@ import slugify from 'app/utils/slugify';
 export default class CreateTeamForm extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
-    onSuccess: PropTypes.func.isRequired,
+    onSuccess: PropTypes.func,
     onSubmit: PropTypes.func,
     formProps: PropTypes.object,
   };
 
   handleCreateTeamSuccess = data => {
-    this.props.onSuccess(data);
+    let {onSuccess} = this.props;
+
+    if (typeof onSuccess !== 'function') {
+      return;
+    }
+
+    onSuccess(data);
   };
 
   render() {
@@ -37,6 +43,7 @@ export default class CreateTeamForm extends React.Component {
           onSubmit={this.props.onSubmit}
           onSubmitSuccess={this.handleCreateTeamSuccess}
           requireChanges
+          data-test-id="create-team-form"
           {...this.props.formProps}
         >
           <TextField
diff --git a/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx b/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx
index f4d770fc68..ebf02aed5d 100644
--- a/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/createTeamModal.jsx
@@ -45,11 +45,7 @@ class CreateTeamModal extends React.Component {
           {t('Create Team')}
         </Header>
         <Body>
-          <CreateTeamForm
-            {...props}
-            onSubmit={this.handleSubmit}
-            onSuccess={this.handleSuccess}
-          />
+          <CreateTeamForm {...props} onSubmit={this.handleSubmit} />
         </Body>
       </React.Fragment>
     );
diff --git a/tests/js/spec/components/modals/createTeamModal.spec.jsx b/tests/js/spec/components/modals/createTeamModal.spec.jsx
index 918f576af0..2ee5a47f07 100644
--- a/tests/js/spec/components/modals/createTeamModal.spec.jsx
+++ b/tests/js/spec/components/modals/createTeamModal.spec.jsx
@@ -13,8 +13,12 @@ describe('CreateTeamModal', function() {
   let org = TestStubs.Organization();
   let closeModal = jest.fn();
   let onClose = jest.fn();
+  let onSuccess = jest.fn();
 
-  beforeEach(function() {});
+  beforeEach(function() {
+    onClose.mockReset();
+    onSuccess.mockReset();
+  });
 
   afterEach(function() {});
 
@@ -26,6 +30,7 @@ describe('CreateTeamModal', function() {
         organization={org}
         closeModal={closeModal}
         onClose={onClose}
+        onSuccess={onSuccess}
       />,
       TestStubs.routerContext()
     );
@@ -36,9 +41,10 @@ describe('CreateTeamModal', function() {
 
     wrapper.find('CreateTeamForm Form').simulate('submit');
 
-    expect(createTeam).toHaveBeenCalled();
+    expect(createTeam).toHaveBeenCalledTimes(1);
     await tick();
     expect(onClose).toHaveBeenCalled();
     expect(closeModal).toHaveBeenCalled();
+    expect(onSuccess).toHaveBeenCalledTimes(1);
   });
 });
diff --git a/tests/js/spec/views/projectTeams.spec.jsx b/tests/js/spec/views/projectTeams.spec.jsx
index a63bb50ac9..c4a0b1602c 100644
--- a/tests/js/spec/views/projectTeams.spec.jsx
+++ b/tests/js/spec/views/projectTeams.spec.jsx
@@ -1,14 +1,11 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
 
-import {Client} from 'app/api';
+import {shallow, mount} from 'enzyme';
+import App from 'app/views/app';
 import ProjectTeams from 'app/views/settings/project/projectTeams';
-import {openCreateTeamModal} from 'app/actionCreators/modal';
+import * as modals from 'app/actionCreators/modal';
 
 jest.unmock('app/actionCreators/modal');
-jest.mock('app/actionCreators/modal', () => ({
-  openCreateTeamModal: jest.fn(),
-}));
 
 describe('ProjectTeams', function() {
   let org;
@@ -22,21 +19,22 @@ describe('ProjectTeams', function() {
   };
 
   beforeEach(function() {
+    jest.spyOn(modals, 'openCreateTeamModal');
     org = TestStubs.Organization();
     project = TestStubs.ProjectDetails();
     team = TestStubs.Team();
 
-    Client.addMockResponse({
+    MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/`,
       method: 'GET',
       body: project,
     });
-    Client.addMockResponse({
+    MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/teams/`,
       method: 'GET',
       body: [team],
     });
-    Client.addMockResponse({
+    MockApiClient.addMockResponse({
       url: `/organizations/${org.slug}/teams/`,
       method: 'GET',
       body: [team, team2],
@@ -44,7 +42,8 @@ describe('ProjectTeams', function() {
   });
 
   afterEach(function() {
-    Client.clearMockResponses();
+    MockApiClient.clearMockResponses();
+    modals.openCreateTeamModal.mockRestore();
   });
 
   it('renders', function() {
@@ -59,21 +58,21 @@ describe('ProjectTeams', function() {
   });
 
   it('can remove a team from project', async function() {
-    Client.addMockResponse({
+    MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/teams/`,
       method: 'GET',
       body: [team, team2],
     });
 
     let endpoint = `/projects/${org.slug}/${project.slug}/teams/${team.slug}/`;
-    let mock = Client.addMockResponse({
+    let mock = MockApiClient.addMockResponse({
       url: endpoint,
       method: 'DELETE',
       statusCode: 200,
     });
 
     let endpoint2 = `/projects/${org.slug}/${project.slug}/teams/${team2.slug}/`;
-    let mock2 = Client.addMockResponse({
+    let mock2 = MockApiClient.addMockResponse({
       url: endpoint2,
       method: 'DELETE',
       statusCode: 200,
@@ -125,7 +124,7 @@ describe('ProjectTeams', function() {
 
   it('can associate a team with project', function() {
     let endpoint = `/projects/${org.slug}/${project.slug}/teams/${team2.slug}/`;
-    let mock = Client.addMockResponse({
+    let mock = MockApiClient.addMockResponse({
       url: endpoint,
       method: 'POST',
       statusCode: 200,
@@ -156,13 +155,38 @@ describe('ProjectTeams', function() {
     );
   });
 
-  it('opens "create team modal" when creating a new team from dropdown', function() {
+  it('creates a new team adds it to current project using the "create team modal" in dropdown', async function() {
+    MockApiClient.addMockResponse({
+      url: '/organizations/',
+      body: [org],
+    });
+
+    MockApiClient.addMockResponse({
+      url: '/internal/health/',
+      body: {},
+    });
+    MockApiClient.addMockResponse({
+      url: '/assistant/',
+      body: {},
+    });
+    let addTeamToProject = MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/teams/new-team/`,
+      method: 'POST',
+    });
+    let createTeam = MockApiClient.addMockResponse({
+      url: `/organizations/${org.slug}/teams/`,
+      method: 'POST',
+      body: {slug: 'new-team'},
+    });
+
     let wrapper = mount(
-      <ProjectTeams
-        params={{orgId: org.slug, projectId: project.slug}}
-        project={project}
-        organization={org}
-      />,
+      <App params={{orgId: org.slug}}>
+        <ProjectTeams
+          params={{orgId: org.slug, projectId: project.slug}}
+          project={project}
+          organization={org}
+        />
+      </App>,
       TestStubs.routerContext()
     );
 
@@ -173,7 +197,7 @@ describe('ProjectTeams', function() {
     wrapper.find('StyledCreateTeamLink').simulate('click');
 
     // action creator to open "create team modal" is called
-    expect(openCreateTeamModal).toHaveBeenCalledWith(
+    expect(modals.openCreateTeamModal).toHaveBeenCalledWith(
       expect.objectContaining({
         project: expect.objectContaining({
           slug: project.slug,
@@ -183,5 +207,28 @@ describe('ProjectTeams', function() {
         }),
       })
     );
+
+    // Two ticks are required
+    await tick();
+    await tick();
+    wrapper.update();
+
+    wrapper.find('input[name="slug"]').simulate('change', {target: {value: 'new-team'}});
+    wrapper.find('[data-test-id="create-team-form"] form').simulate('submit');
+    expect(createTeam).toHaveBeenCalledTimes(1);
+    expect(createTeam).toHaveBeenCalledWith(
+      '/organizations/org-slug/teams/',
+      expect.objectContaining({
+        data: {slug: 'new-team'},
+      })
+    );
+
+    await tick();
+
+    expect(addTeamToProject).toHaveBeenCalledTimes(1);
+    expect(addTeamToProject).toHaveBeenCalledWith(
+      '/projects/org-slug/project-slug/teams/new-team/',
+      expect.anything()
+    );
   });
 });
