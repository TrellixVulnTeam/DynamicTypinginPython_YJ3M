commit a15120e9cf3d91ba281e58b84a2e3db360528aa9
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Aug 17 12:28:37 2016 -0700

    Allow identity removal via API
    
    @getsentry/infrastructure

diff --git a/src/sentry/api/endpoints/user_identity_details.py b/src/sentry/api/endpoints/user_identity_details.py
new file mode 100644
index 0000000000..946d1dff6a
--- /dev/null
+++ b/src/sentry/api/endpoints/user_identity_details.py
@@ -0,0 +1,15 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases.user import UserEndpoint
+from sentry.models import AuthIdentity
+
+
+class UserIdentityDetailsEndpoint(UserEndpoint):
+    def delete(self, request, user, identity_id):
+        AuthIdentity.objects.filter(
+            user=user,
+            id=identity_id,
+        ).delete()
+        return Response(status=204)
diff --git a/src/sentry/api/serializers/models/user.py b/src/sentry/api/serializers/models/user.py
index 844713f2e7..8b7b76c0a3 100644
--- a/src/sentry/api/serializers/models/user.py
+++ b/src/sentry/api/serializers/models/user.py
@@ -93,7 +93,8 @@ class UserSerializer(Serializer):
 
         if attrs['identities'] is not None:
             d['identities'] = [{
-                'id': i.ident,
+                'id': i.id,
+                'name': i.ident,
                 'organization': {
                     'slug': i.auth_provider.organization.slug,
                     'name': i.auth_provider.organization.name,
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 304fb7322e..6a8d3b826e 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -79,6 +79,7 @@ from .endpoints.team_groups_trending import TeamGroupsTrendingEndpoint
 from .endpoints.team_members import TeamMembersEndpoint
 from .endpoints.team_project_index import TeamProjectIndexEndpoint
 from .endpoints.team_stats import TeamStatsEndpoint
+from .endpoints.user_identity_details import UserIdentityDetailsEndpoint
 from .endpoints.user_index import UserIndexEndpoint
 from .endpoints.user_details import UserDetailsEndpoint
 from .endpoints.useravatar import UserAvatarEndpoint
@@ -113,6 +114,9 @@ urlpatterns = patterns(
     url(r'^users/(?P<user_id>[^\/]+)/avatar/$',
         UserAvatarEndpoint.as_view(),
         name='sentry-api-0-user-avatar'),
+    url(r'^users/(?P<user_id>[^\/]+)/identities/(?P<identity_id>[^\/]+)/$',
+        UserIdentityDetailsEndpoint.as_view(),
+        name='sentry-api-0-user-identity-details'),
     url(r'^users/(?P<user_id>[^\/]+)/organizations/$',
         UserOrganizationsEndpoint.as_view(),
         name='sentry-api-0-user-organizations'),
diff --git a/tests/sentry/api/endpoints/test_user_details.py b/tests/sentry/api/endpoints/test_user_details.py
index 32ca058034..37c2ecff93 100644
--- a/tests/sentry/api/endpoints/test_user_details.py
+++ b/tests/sentry/api/endpoints/test_user_details.py
@@ -50,7 +50,8 @@ class UserDetailsTest(APITestCase):
         assert resp.data['id'] == six.text_type(user.id)
         assert 'identities' in resp.data
         assert len(resp.data['identities']) == 1
-        assert resp.data['identities'][0]['id'] == auth_identity.ident
+        assert resp.data['identities'][0]['id'] == auth_identity.id
+        assert resp.data['identities'][0]['name'] == auth_identity.ident
 
     def test_superuser(self):
         user = self.create_user(email='a@example.com')
diff --git a/tests/sentry/api/endpoints/test_user_identity_details.py b/tests/sentry/api/endpoints/test_user_identity_details.py
new file mode 100644
index 0000000000..f1b238d604
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_user_identity_details.py
@@ -0,0 +1,34 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import AuthIdentity, AuthProvider
+from sentry.testutils import APITestCase
+
+
+class DeleteUserIdentityTest(APITestCase):
+    def test_simple(self):
+        user = self.create_user(email='a@example.com')
+        org = self.create_organization(owner=user)
+        auth_provider = AuthProvider.objects.create(
+            organization=org,
+            provider='dummy',
+        )
+        auth_identity = AuthIdentity.objects.create(
+            auth_provider=auth_provider,
+            ident=user.email,
+            user=user,
+        )
+
+        self.login_as(user=user)
+
+        url = reverse('sentry-api-0-user-identity-details', kwargs={
+            'user_id': user.id,
+            'identity_id': auth_identity.id,
+        })
+        resp = self.client.delete(url, format='json')
+        assert resp.status_code == 204, resp.content
+
+        assert not AuthIdentity.objects.filter(
+            id=auth_identity.id,
+        ).exists()
