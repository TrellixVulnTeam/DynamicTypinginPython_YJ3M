commit 66ecdc708cd920b81f89c201e20ef4e955ae1ac4
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Sep 2 17:54:07 2015 -0700

    Add pagination to release files endpoint

diff --git a/src/sentry/api/endpoints/release_files.py b/src/sentry/api/endpoints/release_files.py
index 992e0ac877..586feba9eb 100644
--- a/src/sentry/api/endpoints/release_files.py
+++ b/src/sentry/api/endpoints/release_files.py
@@ -10,6 +10,7 @@ from rest_framework.response import Response
 from sentry.api.base import DocSection
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.models import File, Release, ReleaseFile
 from sentry.utils.apidocs import scenario, attach_scenarios
@@ -88,11 +89,17 @@ class ReleaseFilesEndpoint(ProjectEndpoint):
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
-        file_list = list(ReleaseFile.objects.filter(
+        file_list = ReleaseFile.objects.filter(
             release=release,
-        ).select_related('file').order_by('name'))
-
-        return Response(serialize(file_list, request.user))
+        ).select_related('file').order_by('name')
+
+        return self.paginate(
+            request=request,
+            queryset=file_list,
+            order_by='name',
+            paginator_cls=OffsetPaginator,
+            on_results=lambda x: serialize(x, request.user),
+        )
 
     @attach_scenarios([upload_file_scenario])
     def post(self, request, project, version):
diff --git a/src/sentry/api/paginator.py b/src/sentry/api/paginator.py
index c1899df227..78792c51d7 100644
--- a/src/sentry/api/paginator.py
+++ b/src/sentry/api/paginator.py
@@ -127,3 +127,11 @@ class DateTimePaginator(Paginator):
 
     def _value_from_cursor(self, cursor):
         return datetime.fromtimestamp(cursor.value).replace(tzinfo=timezone.utc)
+
+
+class OffsetPaginator(Paginator):
+    def _get_item_key(self, item):
+        return 0
+
+    def _value_from_cursor(self, cursor):
+        return 0
