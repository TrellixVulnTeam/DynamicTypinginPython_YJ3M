commit 8503fb9073675206aa50e4e2e0a71fbcfb10c776
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jun 14 12:29:10 2011 -0700

    Ensure string can be coerced into utf-8 before leaving it as a string (thanks to kbourgoin, fixes GH-178, closes GH-179)

diff --git a/sentry/utils/__init__.py b/sentry/utils/__init__.py
index 5f950d97af..0a233514da 100644
--- a/sentry/utils/__init__.py
+++ b/sentry/utils/__init__.py
@@ -81,8 +81,6 @@ def has_sentry_metadata(value):
 
 def transform(value, stack=[], context=None):
     # TODO: make this extendable
-    # TODO: include some sane defaults, like UUID
-    # TODO: dont coerce strings to unicode, leave them as strings
     if context is None:
         context = {}
 
@@ -105,7 +103,7 @@ def transform(value, stack=[], context=None):
         ret = to_unicode(value)
     elif isinstance(value, str):
         try:
-            ret = str(value)
+            ret = str(value.decode('utf-8').encode('utf-8'))
         except:
             ret = to_unicode(value)
     elif not isinstance(value, (ClassType, TypeType)) and \
@@ -113,6 +111,7 @@ def transform(value, stack=[], context=None):
         ret = transform_rec(value.__sentry__())
     elif isinstance(value, Promise):
         # EPIC HACK
+        # handles lazy model instances (which are proxy values that dont easily give you the actual function)
         pre = value.__class__.__name__[1:]
         value = getattr(value, '%s__func' % pre)(*getattr(value, '%s__args' % pre), **getattr(value, '%s__kw' % pre))
         return transform(value)
diff --git a/tests/tests.py b/tests/tests.py
index 77628136db..08d7e94384 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -1198,17 +1198,6 @@ class SentryHelpersTest(BaseTestCase):
         django_settings.DATABASES = _databases
         django_settings.DATABASE_ENGINE = _engine
 
-    def test_transform_handles_gettext_lazy(self):
-        def fake_gettext(to_translate):
-            return u'Igpay Atinlay'
-
-        fake_gettext_lazy = lazy(fake_gettext, str)
-
-        self.assertEquals(
-            pickle.loads(pickle.dumps(
-                    transform(fake_gettext_lazy("something")))),
-            u'Igpay Atinlay')
-
     def test_get_versions(self):
         import sentry
         from sentry.utils import get_versions
@@ -1217,12 +1206,31 @@ class SentryHelpersTest(BaseTestCase):
         versions = get_versions(['sentry.client'])
         self.assertEquals(versions.get('sentry'), sentry.VERSION)
 
-    def test_transform_model_instance(self):
+class SentryTransformTest(BaseTestCase):
+    def test_bad_string(self):
+        x = 'The following character causes problems: \xd4'
+
+        result = transform(x)
+        self.assertEquals(result, '(Error decoding value)')
+
+    def test_model_instance(self):
         instance = DuplicateKeyModel(foo='foo')
         
         result = transform(instance)
         self.assertEquals(result, '<DuplicateKeyModel: foo>')
 
+    def test_handles_gettext_lazy(self):
+        def fake_gettext(to_translate):
+            return u'Igpay Atinlay'
+
+        fake_gettext_lazy = lazy(fake_gettext, str)
+
+        self.assertEquals(
+            pickle.loads(pickle.dumps(
+                    transform(fake_gettext_lazy("something")))),
+            u'Igpay Atinlay')
+
+
 class SentryClientTest(BaseTestCase):
     def setUp(self):
         self._client = settings.CLIENT
