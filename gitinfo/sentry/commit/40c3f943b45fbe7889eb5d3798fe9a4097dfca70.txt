commit 40c3f943b45fbe7889eb5d3798fe9a4097dfca70
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 27 22:10:07 2013 -0800

    Correct sentry-mail behavior

diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 1edbed9d0b..1a93ed3973 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -10,6 +10,7 @@ import sentry
 from django import forms
 from django.core.mail import EmailMultiAlternatives
 from django.core.validators import email_re, ValidationError
+from django.core.urlresolvers import reverse
 from django.template.loader import render_to_string
 from django.utils.translation import ugettext_lazy as _
 from sentry.conf import settings
@@ -159,7 +160,8 @@ class MailProcessor(NotificationPlugin):
         subject = '[%s] %s: %s' % (project.name.encode('utf-8'), event.get_level_display().upper().encode('utf-8'),
             event.error().encode('utf-8').splitlines()[0])
 
-        link = '%s/%s/%s/group/%d/' % (settings.URL_PREFIX, group.team.slug, group.project.slug, group.id)
+        link = '%s%s' % (settings.URL_PREFIX,
+            reverse('sentry-group', args=[group.team.slug, group.project.slug, group.id]))
 
         body = self.get_plaintext_body(group, event, link, interface_list)
 
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index b0c7f0567a..1c0919f184 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -6,13 +6,20 @@ import mock
 from mock import Mock
 from django.utils import timezone
 from sentry.interfaces import Stacktrace
-from sentry.models import Event, Group, Project
+from sentry.models import Event, Group, Project, Team
 from sentry.plugins.sentry_mail.models import MailProcessor
-
-from sentry.testutils import TestCase
+from sentry.testutils import TestCase, fixture
 
 
 class MailProcessorTest(TestCase):
+    @fixture
+    def team(self):
+        return Team(id=1, slug='foo', name='Team Name')
+
+    @fixture
+    def project(self):
+        return Project(id=1, name='Project Name', slug='foo', team=self.team)
+
     @mock.patch('sentry.models.ProjectOption.objects.get_value', Mock(side_effect=lambda p, k, d: d))
     @mock.patch('sentry.plugins.sentry_mail.models.MailProcessor.get_send_to', Mock(return_value=[]))
     def test_should_notify_no_send_to(self):
@@ -56,11 +63,12 @@ class MailProcessorTest(TestCase):
 
     @mock.patch('sentry.plugins.sentry_mail.models.MailProcessor._send_mail')
     def test_notify_users_renders_interfaces(self, _send_mail):
-        group = Group()
-        group.first_seen = timezone.now()
-        group.last_seen = group.first_seen
-        group.id = 2
-        group.project_id = 1
+        group = Group(
+            id=2,
+            first_seen=timezone.now(),
+            last_seen=timezone.now(),
+            project=self.project,
+        )
 
         stacktrace = Mock(spec=Stacktrace)
         stacktrace.to_string.return_value = 'foo bar'
@@ -82,11 +90,12 @@ class MailProcessorTest(TestCase):
 
     @mock.patch('sentry.plugins.sentry_mail.models.MailProcessor._send_mail')
     def test_notify_users_renders_interfaces_with_utf8(self, _send_mail):
-        group = Group()
-        group.first_seen = timezone.now()
-        group.last_seen = group.first_seen
-        group.id = 2
-        group.project_id = 1
+        group = Group(
+            id=2,
+            first_seen=timezone.now(),
+            last_seen=timezone.now(),
+            project=self.project,
+        )
 
         stacktrace = Mock(spec=Stacktrace)
         stacktrace.to_string.return_value = u'רונית מגן'
@@ -108,11 +117,12 @@ class MailProcessorTest(TestCase):
 
     @mock.patch('sentry.plugins.sentry_mail.models.MailProcessor._send_mail')
     def test_notify_users_renders_interfaces_with_utf8_fix_issue_422(self, _send_mail):
-        group = Group()
-        group.first_seen = timezone.now()
-        group.last_seen = group.first_seen
-        group.id = 2
-        group.project_id = 1
+        group = Group(
+            id=2,
+            first_seen=timezone.now(),
+            last_seen=timezone.now(),
+            project=self.project,
+        )
 
         stacktrace = Mock(spec=Stacktrace)
         stacktrace.to_string.return_value = u'רונית מגן'
@@ -134,20 +144,20 @@ class MailProcessorTest(TestCase):
 
     @mock.patch('sentry.plugins.sentry_mail.models.MailProcessor._send_mail')
     def test_notify_users_does_email(self, _send_mail):
-        project = Project(id=1, name='Project Name')
-
-        group = Group()
-        group.first_seen = timezone.now()
-        group.last_seen = group.first_seen
-        group.project = project
-        group.id = 2
-
-        event = Event()
-        event.group = group
-        event.message = 'hello world'
-        event.logger = 'root'
-        event.project = project
-        event.date = group.last_seen
+        group = Group(
+            id=2,
+            first_seen=timezone.now(),
+            last_seen=timezone.now(),
+            project=self.project,
+        )
+
+        event = Event(
+            group=group,
+            message='hello world',
+            logger='root',
+            project=self.project,
+            datetime=group.last_seen,
+        )
 
         with self.Settings(SENTRY_URL_PREFIX='http://example.com'):
             p = MailProcessor(send_to=['foo@example.com'])
@@ -156,25 +166,25 @@ class MailProcessorTest(TestCase):
         _send_mail.assert_called_once()
         args, kwargs = _send_mail.call_args
         self.assertEquals(kwargs.get('fail_silently'), False)
-        self.assertEquals(kwargs.get('project'), project)
+        self.assertEquals(kwargs.get('project'), self.project)
         self.assertEquals(kwargs.get('subject'), u"[Project Name] ERROR: hello world")
 
     @mock.patch('sentry.plugins.sentry_mail.models.MailProcessor._send_mail')
     def test_multiline_error(self, _send_mail):
-        project = Project(id=1, name='Project Name')
-
-        group = Group()
-        group.first_seen = timezone.now()
-        group.last_seen = group.first_seen
-        group.project = project
-        group.id = 2
-
-        event = Event()
-        event.group = group
-        event.message = 'hello world\nfoo bar'
-        event.logger = 'root'
-        event.project = project
-        event.date = group.last_seen
+        group = Group(
+            id=2,
+            first_seen=timezone.now(),
+            last_seen=timezone.now(),
+            project=self.project,
+        )
+
+        event = Event(
+            group=group,
+            message='hello world\nfoo bar',
+            logger='root',
+            project=self.project,
+            datetime=group.last_seen,
+        )
 
         with self.Settings(SENTRY_URL_PREFIX='http://example.com'):
             p = MailProcessor(send_to=['foo@example.com'])
