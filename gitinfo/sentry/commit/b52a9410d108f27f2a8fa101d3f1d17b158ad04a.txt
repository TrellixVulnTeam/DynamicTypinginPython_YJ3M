commit b52a9410d108f27f2a8fa101d3f1d17b158ad04a
Author: Dena Mwangi <dena@getsentry.com>
Date:   Tue Apr 9 11:20:55 2019 -0700

    fix(onboarding): Remove polling for events (#12687)

diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 9ab798ae04..16ad949f62 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -222,7 +222,6 @@ const globals = {
     Tooltip: require('app/components/tooltip').default,
     U2fEnrollment: require('app/components/u2fenrollment').default,
     U2fSign: require('app/components/u2fsign').default,
-    Waiting: require('app/views/onboarding/configure/waiting').default,
     Badge: require('app/components/badge').default,
     Tag: require('app/views/settings/components/tag').default,
     Switch: require('app/components/switch').default,
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
index a9824bda96..1d698c30bd 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import createReactClass from 'create-react-class';
 import {browserHistory} from 'react-router';
-import * as Sentry from '@sentry/browser';
+import styled from 'react-emotion';
 
 import {analytics, amplitude} from 'app/utils/analytics';
 import ApiMixin from 'app/mixins/apiMixin';
@@ -10,8 +10,8 @@ import ProjectContext from 'app/views/projects/projectContext';
 import ProjectDocsContext from 'app/views/projectInstall/docsContext';
 import ProjectInstallPlatform from 'app/views/projectInstall/platform';
 import SentryTypes from 'app/sentryTypes';
-import Waiting from 'app/views/onboarding/configure/waiting';
 import {t} from 'app/locale';
+import Button from 'app/components/button';
 
 const Configure = createReactClass({
   displayName: 'Configure',
@@ -22,23 +22,10 @@ const Configure = createReactClass({
 
   getInitialState() {
     return {
-      isFirstTimePolling: true,
       hasSentRealEvent: false,
     };
   },
 
-  componentWillMount() {
-    const {platform} = this.props.params;
-    //redirect if platform is not known.
-    if (!platform || platform === 'other') {
-      this.redirectToNeutralDocs();
-    }
-    this.fetchEventData();
-    this.timer = setInterval(() => {
-      this.fetchEventData();
-    }, 2000);
-  },
-
   componentDidMount() {
     const {organization} = this.context;
     const {params} = this.props;
@@ -55,29 +42,23 @@ const Configure = createReactClass({
 
     data.org_id = parseInt(organization.id, 10);
     analytics('onboarding.configure_viewed', data);
-  },
 
-  componentWillUpdate(nextProps, nextState) {
-    if (
-      !this.state.isFirstTimePolling &&
-      nextState.hasSentRealEvent == true &&
-      this.state.hasSentRealEvent == false
-    ) {
-      this.redirectUrl();
+    //redirect if platform is not known.
+    if (!params.platform || params.platform === 'other') {
+      this.redirectToNeutralDocs();
     }
+    this.sentRealEvent();
   },
 
-  componentWillUnmount() {
-    clearInterval(this.timer);
-  },
-
-  sentRealEvent(data) {
-    if (data.length == 1) {
-      const firstError = data[0];
-      return !firstError.message.includes('This is an example');
-    } else {
-      return data.length > 1;
+  sentRealEvent() {
+    const project = this.context.organization.projects.find(
+      p => p.slug == this.props.params.projectId
+    );
+    let hasSentRealEvent = false;
+    if (project && project.firstEvent) {
+      hasSentRealEvent = true;
     }
+    this.setState({hasSentRealEvent});
   },
 
   redirectUrl() {
@@ -92,27 +73,6 @@ const Configure = createReactClass({
     browserHistory.push(url);
   },
 
-  fetchEventData() {
-    const {orgId, projectId} = this.props.params;
-
-    this.api.request(`/projects/${orgId}/${projectId}/events/`, {
-      method: 'GET',
-      success: data => {
-        this.setState({
-          isFirstTimePolling: false,
-          hasSentRealEvent: this.sentRealEvent(data),
-        });
-      },
-
-      error: err => {
-        Sentry.withScope(scope => {
-          scope.setExtra('err', err);
-          Sentry.captureMessage('Polling for events in onboarding configure failed');
-        });
-      },
-    });
-  },
-
   submit() {
     const {projectId} = this.props.params;
     const {organization} = this.context;
@@ -163,11 +123,26 @@ const Configure = createReactClass({
               />
             </ProjectDocsContext>
           </ProjectContext>
-          <Waiting skip={this.submit} hasEvent={hasSentRealEvent} />
+          <DoneButton>
+            <Button
+              priority="primary"
+              data-test-id="configure-done"
+              onClick={this.submit}
+            >
+              {t('All done!')}
+            </Button>
+          </DoneButton>
         </div>
       </div>
     );
   },
 });
 
+const DoneButton = styled('div')`
+  display: grid;
+  grid-template-columns: max-content;
+  place-content: end;
+  margin-bottom: 20px;
+`;
+
 export default Configure;
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/waiting.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/waiting.jsx
deleted file mode 100644
index 2e93b70644..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/configure/waiting.jsx
+++ /dev/null
@@ -1,53 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {t} from 'app/locale';
-import styled from 'react-emotion';
-
-import Button from 'app/components/button';
-
-class Waiting extends React.Component {
-  static propTypes = {
-    skip: PropTypes.func,
-    hasEvent: PropTypes.bool.isRequired,
-  };
-
-  render() {
-    const {hasEvent} = this.props;
-
-    return (
-      <div className="awaiting-event">
-        <div className="row">
-          <div className="col-sm-10">
-            <div className="wrap waiting-text">
-              {!hasEvent ? (
-                <h3 className="animated-ellipsis">{t('Waiting to receive an error')}</h3>
-              ) : (
-                <h3>{t("You've successfully sent an error")}</h3>
-              )}
-              <div className="robot">
-                <span className="eye" />
-              </div>
-            </div>
-          </div>
-          <CenteredButtons className="col-sm-2">
-            <div className="pull-right">
-              <Button
-                priority="primary"
-                data-test-id="configure-done"
-                onClick={this.props.skip}
-              >
-                {t('All done!')}
-              </Button>
-            </div>
-          </CenteredButtons>
-        </div>
-      </div>
-    );
-  }
-}
-
-const CenteredButtons = styled('div')`
-  text-align: center;
-`;
-
-export default Waiting;
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
index 44652078cd..f383d3cf27 100644
--- a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -1,41 +1,29 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`Configure should render correctly render() should redirect to if no matching platform 1`] = `
-<div>
-  <div
-    className="onboarding-Configure"
-  >
-    <h2
-      style={
-        Object {
-          "marginBottom": 30,
-        }
-      }
+<Configure
+  next={[Function]}
+  params={
+    Object {
+      "orgId": "testOrg",
+      "platform": "other",
+      "projectId": "project-slug",
+    }
+  }
+>
+  <div>
+    <div
+      className="onboarding-Configure"
     >
-      Configure your application
-      <withApi(CreateSampleEvent)
-        params={
+      <h2
+        style={
           Object {
-            "orgId": "testOrg",
-            "platform": "other",
-            "projectId": "project-slug",
+            "marginBottom": 30,
           }
         }
-        source="header"
-      />
-    </h2>
-    <withProjects(withRouter(ProjectContext))
-      orgId="testOrg"
-      projectId="project-slug"
-      style={
-        Object {
-          "marginBottom": 30,
-        }
-      }
-    >
-      <ProjectDocsContext>
-        <WithOrganizationMockWrapper
-          linkPath={[Function]}
+      >
+        Configure your application
+        <withApi(CreateSampleEvent)
           params={
             Object {
               "orgId": "testOrg",
@@ -43,20 +31,250 @@ exports[`Configure should render correctly render() should redirect to if no mat
               "projectId": "project-slug",
             }
           }
-          platformData={
+          source="header"
+        >
+          <CreateSampleEvent
+            api={Client {}}
+            params={
+              Object {
+                "orgId": "testOrg",
+                "platform": "other",
+                "projectId": "project-slug",
+              }
+            }
+            source="header"
+          >
+            <div
+              className="pull-right"
+            >
+              <StyledButton
+                onClick={[Function]}
+                priority="primary"
+              >
+                <Button
+                  className="css-1lewl16-StyledButton eadl9o50"
+                  disabled={false}
+                  onClick={[Function]}
+                  priority="primary"
+                >
+                  <StyledButton
+                    aria-disabled={false}
+                    aria-label="Or See Sample Event"
+                    className="css-1lewl16-StyledButton eadl9o50"
+                    disabled={false}
+                    onClick={[Function]}
+                    priority="primary"
+                    role="button"
+                  >
+                    <Component
+                      aria-disabled={false}
+                      aria-label="Or See Sample Event"
+                      className="eadl9o50 css-w2sk1s-StyledButton-getColors-StyledButton eqrebog0"
+                      onClick={[Function]}
+                      role="button"
+                    >
+                      <button
+                        aria-disabled={false}
+                        aria-label="Or See Sample Event"
+                        className="eadl9o50 css-w2sk1s-StyledButton-getColors-StyledButton eqrebog0"
+                        onClick={[Function]}
+                        role="button"
+                      >
+                        <ButtonLabel
+                          priority="primary"
+                        >
+                          <Component
+                            className="css-ga4b18-ButtonLabel eqrebog1"
+                            priority="primary"
+                          >
+                            <span
+                              className="css-ga4b18-ButtonLabel eqrebog1"
+                            >
+                              Or See Sample Event
+                            </span>
+                          </Component>
+                        </ButtonLabel>
+                      </button>
+                    </Component>
+                  </StyledButton>
+                </Button>
+              </StyledButton>
+            </div>
+          </CreateSampleEvent>
+        </withApi(CreateSampleEvent)>
+      </h2>
+      <withProjects(withRouter(ProjectContext))
+        orgId="testOrg"
+        projectId="project-slug"
+        style={
+          Object {
+            "marginBottom": 30,
+          }
+        }
+      >
+        <withRouter(ProjectContext)
+          orgId="testOrg"
+          projectId="project-slug"
+          projects={
+            Array [
+              Object {
+                "hasAccess": true,
+                "id": "testProject",
+                "isBookmarked": false,
+                "isMember": true,
+                "name": "Test Project",
+                "slug": "project-slug",
+                "teams": Array [
+                  Object {
+                    "hasAccess": true,
+                    "id": "coolid",
+                    "slug": "coolteam",
+                  },
+                ],
+              },
+            ]
+          }
+          style={
             Object {
-              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
+              "marginBottom": 30,
             }
           }
-        />
-      </ProjectDocsContext>
-    </withProjects(withRouter(ProjectContext))>
-    <Waiting
-      hasEvent={false}
-      skip={[Function]}
-    />
+        >
+          <ProjectContext
+            location={
+              Object {
+                "query": Object {},
+              }
+            }
+            orgId="testOrg"
+            projectId="project-slug"
+            projects={
+              Array [
+                Object {
+                  "hasAccess": true,
+                  "id": "testProject",
+                  "isBookmarked": false,
+                  "isMember": true,
+                  "name": "Test Project",
+                  "slug": "project-slug",
+                  "teams": Array [
+                    Object {
+                      "hasAccess": true,
+                      "id": "coolid",
+                      "slug": "coolteam",
+                    },
+                  ],
+                },
+              ]
+            }
+            router={
+              Object {
+                "createHref": [MockFunction],
+                "go": [MockFunction],
+                "goBack": [MockFunction],
+                "goForward": [MockFunction],
+                "isActive": [MockFunction],
+                "listen": [MockFunction],
+                "location": Object {
+                  "query": Object {},
+                },
+                "push": [MockFunction],
+                "replace": [MockFunction],
+                "setRouteLeaveHook": [MockFunction],
+              }
+            }
+            style={
+              Object {
+                "marginBottom": 30,
+              }
+            }
+          >
+            <SideEffect(DocumentTitle)
+              title="project-slug"
+            >
+              <DocumentTitle
+                title="project-slug"
+              >
+                <div
+                  className="loading-full-layout"
+                >
+                  <LoadingIndicator>
+                    <div
+                      className="loading"
+                    >
+                      <div
+                        className="loading-indicator"
+                        style={Object {}}
+                      />
+                      <div
+                        className="loading-message"
+                      />
+                    </div>
+                  </LoadingIndicator>
+                </div>
+              </DocumentTitle>
+            </SideEffect(DocumentTitle)>
+          </ProjectContext>
+        </withRouter(ProjectContext)>
+      </withProjects(withRouter(ProjectContext))>
+      <DoneButton>
+        <div
+          className="css-5mss3k-DoneButton e1chtmge0"
+        >
+          <Button
+            data-test-id="configure-done"
+            disabled={false}
+            onClick={[Function]}
+            priority="primary"
+          >
+            <StyledButton
+              aria-disabled={false}
+              aria-label="All done!"
+              data-test-id="configure-done"
+              disabled={false}
+              onClick={[Function]}
+              priority="primary"
+              role="button"
+            >
+              <Component
+                aria-disabled={false}
+                aria-label="All done!"
+                className="css-1msljz8-StyledButton-getColors eqrebog0"
+                data-test-id="configure-done"
+                onClick={[Function]}
+                role="button"
+              >
+                <button
+                  aria-disabled={false}
+                  aria-label="All done!"
+                  className="css-1msljz8-StyledButton-getColors eqrebog0"
+                  data-test-id="configure-done"
+                  onClick={[Function]}
+                  role="button"
+                >
+                  <ButtonLabel
+                    priority="primary"
+                  >
+                    <Component
+                      className="css-ga4b18-ButtonLabel eqrebog1"
+                      priority="primary"
+                    >
+                      <span
+                        className="css-ga4b18-ButtonLabel eqrebog1"
+                      >
+                        All done!
+                      </span>
+                    </Component>
+                  </ButtonLabel>
+                </button>
+              </Component>
+            </StyledButton>
+          </Button>
+        </div>
+      </DoneButton>
+    </div>
   </div>
-</div>
+</Configure>
 `;
 
 exports[`Configure should render correctly render() should render platform docs 1`] = `
@@ -651,100 +869,61 @@ exports[`Configure should render correctly render() should render platform docs
           </ProjectContext>
         </withRouter(ProjectContext)>
       </withProjects(withRouter(ProjectContext))>
-      <Waiting
-        hasEvent={false}
-        skip={[Function]}
-      >
+      <DoneButton>
         <div
-          className="awaiting-event"
+          className="css-5mss3k-DoneButton e1chtmge0"
         >
-          <div
-            className="row"
+          <Button
+            data-test-id="configure-done"
+            disabled={false}
+            onClick={[Function]}
+            priority="primary"
           >
-            <div
-              className="col-sm-10"
+            <StyledButton
+              aria-disabled={false}
+              aria-label="All done!"
+              data-test-id="configure-done"
+              disabled={false}
+              onClick={[Function]}
+              priority="primary"
+              role="button"
             >
-              <div
-                className="wrap waiting-text"
-              >
-                <h3
-                  className="animated-ellipsis"
-                >
-                  Waiting to receive an error
-                </h3>
-                <div
-                  className="robot"
-                >
-                  <span
-                    className="eye"
-                  />
-                </div>
-              </div>
-            </div>
-            <CenteredButtons
-              className="col-sm-2"
-            >
-              <div
-                className="col-sm-2 css-mm32tp-CenteredButtons e1p80ulz0"
+              <Component
+                aria-disabled={false}
+                aria-label="All done!"
+                className="css-1msljz8-StyledButton-getColors eqrebog0"
+                data-test-id="configure-done"
+                onClick={[Function]}
+                role="button"
               >
-                <div
-                  className="pull-right"
+                <button
+                  aria-disabled={false}
+                  aria-label="All done!"
+                  className="css-1msljz8-StyledButton-getColors eqrebog0"
+                  data-test-id="configure-done"
+                  onClick={[Function]}
+                  role="button"
                 >
-                  <Button
-                    data-test-id="configure-done"
-                    disabled={false}
-                    onClick={[Function]}
+                  <ButtonLabel
                     priority="primary"
                   >
-                    <StyledButton
-                      aria-disabled={false}
-                      aria-label="All done!"
-                      data-test-id="configure-done"
-                      disabled={false}
-                      onClick={[Function]}
+                    <Component
+                      className="css-ga4b18-ButtonLabel eqrebog1"
                       priority="primary"
-                      role="button"
                     >
-                      <Component
-                        aria-disabled={false}
-                        aria-label="All done!"
-                        className="css-1msljz8-StyledButton-getColors eqrebog0"
-                        data-test-id="configure-done"
-                        onClick={[Function]}
-                        role="button"
+                      <span
+                        className="css-ga4b18-ButtonLabel eqrebog1"
                       >
-                        <button
-                          aria-disabled={false}
-                          aria-label="All done!"
-                          className="css-1msljz8-StyledButton-getColors eqrebog0"
-                          data-test-id="configure-done"
-                          onClick={[Function]}
-                          role="button"
-                        >
-                          <ButtonLabel
-                            priority="primary"
-                          >
-                            <Component
-                              className="css-ga4b18-ButtonLabel eqrebog1"
-                              priority="primary"
-                            >
-                              <span
-                                className="css-ga4b18-ButtonLabel eqrebog1"
-                              >
-                                All done!
-                              </span>
-                            </Component>
-                          </ButtonLabel>
-                        </button>
-                      </Component>
-                    </StyledButton>
-                  </Button>
-                </div>
-              </div>
-            </CenteredButtons>
-          </div>
+                        All done!
+                      </span>
+                    </Component>
+                  </ButtonLabel>
+                </button>
+              </Component>
+            </StyledButton>
+          </Button>
         </div>
-      </Waiting>
+      </DoneButton>
     </div>
   </div>
 </Configure>
@@ -801,10 +980,16 @@ exports[`Configure should render correctly render() shouldn't redirect for a fou
         />
       </ProjectDocsContext>
     </withProjects(withRouter(ProjectContext))>
-    <Waiting
-      hasEvent={false}
-      skip={[Function]}
-    />
+    <DoneButton>
+      <Button
+        data-test-id="configure-done"
+        disabled={false}
+        onClick={[Function]}
+        priority="primary"
+      >
+        All done!
+      </Button>
+    </DoneButton>
   </div>
 </div>
 `;
diff --git a/tests/js/spec/views/onboarding/configure/index.spec.jsx b/tests/js/spec/views/onboarding/configure/index.spec.jsx
index 1c16644b41..829387bd32 100644
--- a/tests/js/spec/views/onboarding/configure/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/configure/index.spec.jsx
@@ -47,7 +47,10 @@ describe('Configure should render correctly', function() {
       url: '/projects/testOrg/project-slug/docs/node/',
       body: {},
     });
-
+    MockApiClient.addMockResponse({
+      url: '/projects/testOrg/project-slug/docs/other/',
+      body: {},
+    });
     ProjectsStore.loadInitialData([
       {
         name: 'Test Project',
@@ -94,7 +97,12 @@ describe('Configure should render correctly', function() {
         <Configure {...props} />,
         TestStubs.routerContext([
           {
-            organization: {id: '1337', slug: 'testOrg', teams: [['project-slug']]},
+            organization: {
+              id: '1337',
+              slug: 'testOrg',
+              teams: [['project-slug']],
+              projects: [],
+            },
           },
         ])
       );
@@ -123,11 +131,16 @@ describe('Configure should render correctly', function() {
         Configure.prototype.__reactAutoBindPairs.indexOf('redirectToNeutralDocs') + 1;
       Configure.prototype.__reactAutoBindPairs[index] = handleSubmitStub;
 
-      const wrapper = shallow(
+      const wrapper = mount(
         <Configure {...props} />,
         TestStubs.routerContext([
           {
-            organization: {id: '1337', slug: 'testOrg', teams: [['project-slug']]},
+            organization: {
+              id: '1337',
+              slug: 'testOrg',
+              teams: [['project-slug']],
+              projects: [],
+            },
           },
         ])
       );
