commit d0da5a039bcf81fcf2a1e472e0332d19a007c8e2
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 30 20:53:44 2010 -0700

    Add in pagination and basic filters to error dashboard

diff --git a/dblog/templates/dblog/group.html b/dblog/templates/dblog/group.html
index 2b865770f1..19bfebe8b0 100644
--- a/dblog/templates/dblog/group.html
+++ b/dblog/templates/dblog/group.html
@@ -1,8 +1,10 @@
 {% extends "dblog/index.html" %}
 
+{% block title %}{{ message.error }} | Django DB Log{% endblock %}
+
 {% block body %}
 	<div id="header"> 
-		<h1>Django DB Log</h1> 
+		<h1><a href="{% url dblog %}">Django DB Log</a></h1> 
 		<h2>Message Details</h2>
 	</div> 
 
diff --git a/dblog/templates/dblog/index.html b/dblog/templates/dblog/index.html
index 8e0c3101a4..174a658024 100644
--- a/dblog/templates/dblog/index.html
+++ b/dblog/templates/dblog/index.html
@@ -1,8 +1,11 @@
+{% load paging_extras %}
+
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
 <html lang="en">
 	<head> 
 		<meta http-equiv="content-type" content="text/html; charset=utf-8"> 
-		<meta name="robots" content="NONE,NOARCHIVE"><title>Django DB Log</title> 
+		<meta name="robots" content="NONE,NOARCHIVE">
+		<title>{% block title %}Django DB Log{% endblock %}</title> 
 		<script type="text/javascript"> 
 		//<!--
 		function getElementsByClassName(oElm, strTagName, strClassName){
@@ -64,6 +67,7 @@
 			body * * { padding:0; }
 			body { font:small sans-serif; background:#f6f6f6; }
 			h1 { font-weight:normal; }
+			h1 a { color: inherit; text-decoration: none; }
 			h2 { margin-bottom:.8em; font-weight: normal; }
 			h2 span { font-size:80%; color:#666; font-weight:normal; }
 			h3 { margin:1em 0 .5em 0; }
@@ -72,8 +76,8 @@
 			tbody td, tbody th { vertical-align:top; padding:2px 3px; }
 			thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }
 			tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
-			a { color: blue; }
-			a:visited { color: blue; }
+			a { color: #333; }
+			a:visited { color: inherit; }
 			ul { margin: 1em 0 1em 2em; }
 			#header { background: #e0ebff; border-bottom:1px solid #ddd; }
 			#header h2 { font-weight: normal; color: #666; margin-bottom: 0; }
@@ -129,8 +133,12 @@
 			pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
 			
 			/* message details */
-			.server-list, .url-list { list-style: none; margin-left: 5px; }
-			
+			.server-list, .url-list, .logger-list, .level-list { list-style: none; margin-left: 5px; }
+			.filter-list { margin-left: 0;  }
+			.filter-list li a { display: block; padding: 5px; text-decoration: none; }
+			.filter-list li a:hover, .filter-list li.active a { background: #e0ebff; }
+			 .filter-list li.active a { font-weight: bold; }
+
 			/* messages generic */
 			.count { background: #000; -moz-border-radius: 4px; border-radius: 4px; padding: 0 5px; margin-right: 3px; line-height: 19px; color: #fff; display: inline-block; }
 			
@@ -176,13 +184,44 @@
 	<body> 
 		{% block body %}
 		<div id="header"> 
-			<h1>Django DB Log</h1> 
+			<h1><a href="{% url dblog %}">Django DB Log</a></h1> 
 			<h2>Dashboard</h2>
 		</div> 
- 
-		<div id="body"> 
+		
+		<div id="sidebar">
+			<h2>Loggers</h2>
+
+			<ul class="logger-list filter-list">
+				<li{% if not logger %} class="active"{% endif %}><a href="?server_name={{ server_name }}&amp;level={{ level }}">any logger</a></li>
+				{% for key, name in logger_names.iteritems %}
+					<li{% if logger == key %} class="active"{% endif %}><a href="?logger={{ key }}&amp;server_name={{ server_name }}&amp;level={{ level }}">{{ name }}</a></li>
+				{% endfor %}
+			</ul>
+			
+			<h2>Levels</h2>
+
+			<ul class="level-list filter-list">
+				<li{% if not level %} class="active"{% endif %}><a href="?server_name={{ server_name }}&amp;logger={{ logger }}">any level</a></li>
+				{% for key, name in level_names.iteritems %}
+					<li{% if level == key %} class="active"{% endif %}><a href="?level={{ key }}&amp;server_name={{ server_name }}&amp;logger={{ logger }}">{{ name|title }}</a></li>
+				{% endfor %}
+			</ul>
+
+			<h2>Servers</h2>
+
+			<ul class="server-list filter-list">
+				<li{% if not server_name %} class="active"{% endif %}><a href="?level={{ level }}&amp;logger={{ logger }}">any server</a></li>
+				{% for key, name in server_names.iteritems %}
+					<li{% if server_name == key %} class="active"{% endif %}><a href="?server_name={{ key }}&amp;level={{ level }}&amp;logger={{ logger }}">{{ name }}</a></li>
+				{% endfor %}
+			</ul>
+		</div>
+
+		<div id="body" class="with-sidebar">
+			{% paginate message_list from request as message_list per_page 25 %}
+			{{ message_list.paging }}
 			<ul class="messages">
-				{% for message in message_list %}
+				{% for message in message_list.objects %}
 					<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ message.priority }}" onclick="window.location.href='{% url dblog-group message.pk %}'">
 						<span class="count">{{ message.times_seen }}</span>
 						<h3>{{ message.view }}</h3>
@@ -192,6 +231,7 @@
 					</li>
 				{% endfor %}
 			</ul>
+			{{ message_list.paging }}
 			<!-- <div id="details">
 				<pre>{{ message.traceback }}</pre>
 			</div> -->
diff --git a/dblog/views.py b/dblog/views.py
index 7b855aec99..2248ca5a41 100644
--- a/dblog/views.py
+++ b/dblog/views.py
@@ -4,7 +4,7 @@ from django.shortcuts import render_to_response
 from django.utils.safestring import mark_safe
 
 from dblog.helpers import FakeRequest, ImprovedExceptionReporter
-from dblog.models import GroupedMessage, Message
+from dblog.models import GroupedMessage, Message, LOG_LEVELS
 
 from math import log
 
@@ -15,28 +15,54 @@ except ImportError:
     import pickle
 
 def index(request):
+    logger_names = dict((l, l) for l in GroupedMessage.objects.values_list('logger', flat=True).distinct())
+    server_names = dict((l, l) for l in GroupedMessage.objects.values_list('server_name', flat=True).distinct())
+    level_names = dict((str(k), v) for k, v in LOG_LEVELS)
+
+    logger = request.GET.get('logger')
+    server_name = request.GET.get('server_name') or ''
+    level = request.GET.get('level') or ''
+
+    if logger not in logger_names:
+        logger = ''
+
+    if server_name not in server_names:
+        server_name = ''
+
+    if level not in level_names:
+        level = ''
+
     # this only works in postgres
-    message_list = list(GroupedMessage.objects.filter(
+    message_list = GroupedMessage.objects.filter(
         status=0,
     ).extra(
         select={
             'score': 'times_seen / (pow((floor(extract(epoch from now() - last_seen) / 3600) + 2), 1.25) + 1)',
         }
-    ).order_by('-score', '-last_seen')[0:10])
-    
-    for m in message_list:
-        score = log(m.score)
-        if score > 2:
-            m.priority = 'high'
-        elif score > 1:
-            m.priority = 'medium'
-        elif score >= 0:
-            m.priority = 'low'
-        elif score < 0:
-            m.priority = 'verylow'
-        else:
-            m.priority = 'veryhigh'
-    
+    ).order_by('-score', '-last_seen')
+
+    if logger:
+        message_list = message_list.filter(logger=logger)
+
+    if level:
+        message_list = message_list.filter(level=level)
+
+    if server_name:
+        message_list = message_list.filter(server_name=server_name)
+
+    # for m in message_list:
+    #     score = log(m.score)
+    #     if score > 2:
+    #         m.priority = 'high'
+    #     elif score > 1:
+    #         m.priority = 'medium'
+    #     elif score >= 0:
+    #         m.priority = 'low'
+    #     elif score < 0:
+    #         m.priority = 'verylow'
+    #     else:
+    #         m.priority = 'veryhigh'
+
     return render_to_response('dblog/index.html', locals())
 
 def group(request, group_id):
diff --git a/example_project/settings.py b/example_project/settings.py
index 206c9154f0..409de0dfcd 100644
--- a/example_project/settings.py
+++ b/example_project/settings.py
@@ -95,6 +95,7 @@ INSTALLED_APPS = (
     'django.contrib.sites',
     'django.contrib.messages',
     'dblog',
+    'paging',
     # Uncomment the next line to enable the admin:
     # 'django.contrib.admin',
 )
diff --git a/setup.py b/setup.py
index 5c7db9548d..21705ab537 100644
--- a/setup.py
+++ b/setup.py
@@ -10,6 +10,9 @@ setup(
     url='http://github.com/dcramer/django-db-log2',
     description = 'Exception Logging to a Database in Django',
     packages=find_packages(),
+    requirements=[
+        'django-paging',
+    ]
     include_package_data=True,
     classifiers=[
         'Framework :: Django',
