commit 9c9c1e3d67c23f47dce52bf00921782d94ac0ec1
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Mar 12 11:41:31 2018 -0700

    feat(csp): Add `frame-src` and `worker-src` directives
    
    Fixes GH-7271

diff --git a/src/sentry/interfaces/schemas.py b/src/sentry/interfaces/schemas.py
index 16bdc544a1..c1bafac055 100644
--- a/src/sentry/interfaces/schemas.py
+++ b/src/sentry/interfaces/schemas.py
@@ -417,7 +417,8 @@ CSP_SCHEMA = {
                         'script-src',
                         'style-src',
                         'upgrade-insecure-requests',
-                        # 'frame-src', # Deprecated (https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives#frame-src)
+                        'frame-src',
+                        'worker-src',
                         # 'sandbox', # Unsupported
                     ],
                 },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
index b1856c87fa..52ce9db2c5 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
@@ -11,15 +11,13 @@ const help = {
 The <code>base-uri</code> directive defines the URIs that a user agent
 may use as the document base URL. If this value is absent, then any URI
 is allowed. If this directive is absent, the user agent will use the
-value in the <code>base</code> element.`
+value in the <code>&lt;base&gt;</code> element.`
   ),
   'child-src': t(
     `
-The <code>child-src</code> directive defines the valid sources for web
-workers and nested browsing contexts loaded using elements such as
-<frame> and <iframe>. This directive is preferred over the
-<code>frame-src</code> directive, which is deprecated. For workers,
-non-compliant requests are treated as fatal network errors by the user agent.`
+The <code>child-src</code> directive defines the valid sources for
+web workers and nested browsing contexts loaded using elements such as
+<code>&lt;frame&gt;</code> and <code>&lt;iframe&gt;</code>.`
   ),
   'connect-src': t(
     `
@@ -94,6 +92,18 @@ requested or loaded. When either the <code>style-src</code> or the
 <code>&lt;style&gt;</code> element and HTML style attributes are disabled
 unless you specify 'unsafe-inline'.`
   ),
+  'frame-src': t(
+    `
+The <code>frame-src</code> directive specifies valid sources for nested
+browsing contexts loading using elements such as
+<code>&lt;frame&gt;</code> and <code>&lt;iframe&gt;</code>.`
+  ),
+  'worker-src': t(
+    `
+The <code>worker-src</code> directive specifies valid sources for
+<code>Worker<code>, <code>SharedWorker</code>, or
+<code>ServiceWorker</code> scripts.`
+  ),
 };
 
 const linkOverrides = {
