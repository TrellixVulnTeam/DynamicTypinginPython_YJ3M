commit 293f22b620879e13801b3b3f28202a3d7598e6b5
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 22 12:47:14 2014 -0800

    Optimize out ScoreClause update

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 265e6b3c90..bdd949e99b 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -8,6 +8,7 @@ sentry.event_manager
 from __future__ import absolute_import, print_function
 
 import logging
+import math
 import six
 
 from datetime import datetime, timedelta
@@ -121,6 +122,10 @@ class ScoreClause(object):
 
         return (sql, [])
 
+    @classmethod
+    def calculate(self, times_seen, last_seen):
+        return math.log(times_seen) * 600 + float(last_seen.strftime('%s'))
+
 
 class EventManager(object):
     def __init__(self, data, version='5'):
@@ -398,6 +403,7 @@ class EventManager(object):
         # it should be resolved by the hash merging function later but this
         # should be better tested/reviewed
         if existing_group_id is None:
+            kwargs['score'] = ScoreClause.calculate(1, kwargs['last_seen'])
             group, group_is_new = Group.objects.get_or_create(
                 project=project,
                 # TODO(dcramer): remove checksum from Group/Event
@@ -440,9 +446,6 @@ class EventManager(object):
         else:
             is_regression = False
 
-            # TODO: this update should actually happen as part of create
-            group.update(score=ScoreClause(group))
-
             # We need to commit because the queue can run too fast and hit
             # an issue with the group not existing before the buffers run
             transaction.commit_unless_managed(using=group._state.db)
