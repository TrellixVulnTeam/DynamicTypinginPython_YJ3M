commit c992dec125c382fbb4d7dfa6fe52394c20da2c33
Author: Wojciech Zelek <wojciech.zelek@infiniteloop.eu>
Date:   Fri Apr 18 18:10:10 2014 +0200

    Replace httpagentparser with ua_parser \nadd DevicePlugin

diff --git a/setup.py b/setup.py
index e9c93ea674..989b5e10c2 100755
--- a/setup.py
+++ b/setup.py
@@ -82,7 +82,7 @@ install_requires = [
     'email-reply-parser>=0.2.0,<0.3.0',
     'gevent>=1.0.0,<1.1.0',
     'gunicorn>=0.17.2,<0.18.0',
-    'httpagentparser>=1.6.0,<1.7.0',
+    'ua-parser>=0.3.5',
     'logan>=0.5.8.2,<0.6.0',
     'nydus>=0.10.0,<0.11.0',
     'Pygments>=1.6.0,<1.7.0',
diff --git a/src/sentry/plugins/sentry_useragents/models.py b/src/sentry/plugins/sentry_useragents/models.py
index 9d280d62a1..e5b6362fe7 100644
--- a/src/sentry/plugins/sentry_useragents/models.py
+++ b/src/sentry/plugins/sentry_useragents/models.py
@@ -5,7 +5,7 @@ sentry.plugins.sentry_useragents.models
 :copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-import httpagentparser
+from ua_parser.user_agent_parser import Parse
 import sentry
 
 from django.utils.translation import ugettext_lazy as _
@@ -28,7 +28,7 @@ class UserAgentPlugin(TagPlugin):
             return []
         if 'User-Agent' not in http.headers:
             return []
-        ua = httpagentparser.detect(http.headers['User-Agent'])
+        ua = Parse(http.headers['User-Agent'])
         if not ua:
             return []
         result = self.get_tag_from_ua(ua)
@@ -40,7 +40,7 @@ class UserAgentPlugin(TagPlugin):
 class BrowserPlugin(UserAgentPlugin):
     """
     Automatically adds the 'browser' tag from events containing interface data
-    from ``sentry.interfaes.Http``.
+    from ``sentry.interfaces.Http``.
     """
     slug = 'browsers'
     title = _('Auto Tag: Browsers')
@@ -48,12 +48,18 @@ class BrowserPlugin(UserAgentPlugin):
     tag_label = _('Browser Name')
 
     def get_tag_from_ua(self, ua):
-        if 'browser' not in ua:
+        ua = ua['user_agent']
+
+        if not ua['family']:
             return
 
-        tag = ua['browser']['name']
-        if 'version' in ua['browser']:
-            tag += ' ' + ua['browser']['version']
+        version = '.'.join(value for value in [
+            ua['major'],
+            ua['minor'],
+        ] if value)
+        tag = ua['family']
+        if version:
+            tag += ' ' + version
 
         return tag
 
@@ -64,7 +70,7 @@ register(BrowserPlugin)
 class OsPlugin(UserAgentPlugin):
     """
     Automatically adds the 'os' tag from events containing interface data
-    from ``sentry.interfaes.Http``.
+    from ``sentry.interfaces.Http``.
     """
     slug = 'os'
     title = _('Auto Tag: Operating Systems')
@@ -72,21 +78,36 @@ class OsPlugin(UserAgentPlugin):
     tag_label = _('Operating System')
 
     def get_tag_from_ua(self, ua):
-        if 'flavor' in ua:
-            tag = ua['flavor']['name']
-            if 'version' in ua['flavor']:
-                tag += ' ' + ua['flavor']['version']
-        elif 'os' in ua:
-            # Linux
-            tag = ua['os']['name']
-            if 'version' in ua['os']:
-                tag += ' ' + ua['os']['version']
-            elif 'dist' in ua:
-                # Ubuntu
-                tag += ua['dist']['name']
-        else:
+        ua = ua['os']
+
+        if not ua['family']:
             return
 
+        version = '.'.join(value for value in [
+            ua['major'],
+            ua['minor'],
+            ua['patch'],
+        ] if value)
+        tag = ua['family']
+        if version:
+            tag += ' ' + version
+
         return tag
 
+
 register(OsPlugin)
+
+class DevicePlugin(UserAgentPlugin):
+    """
+    Automatically adds the 'device' tag from events containing interface data
+    from ``sentry.interfaces.Http``.
+    """
+    slug = 'device'
+    title = _('Auto Tag: Device')
+    tag = 'device'
+    tag_label = _('Device')
+
+    def get_tag_from_ua(self, ua):
+        return ua['device']['family']
+
+register(DevicePlugin)
diff --git a/tests/sentry/plugins/useragents/__init__.py b/tests/sentry/plugins/useragents/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/plugins/useragents/tests.py b/tests/sentry/plugins/useragents/tests.py
new file mode 100644
index 0000000000..7c97ada00b
--- /dev/null
+++ b/tests/sentry/plugins/useragents/tests.py
@@ -0,0 +1,28 @@
+# -*- coding: utf-8 -*-
+
+import mock
+from ua_parser.user_agent_parser import Parse
+
+from sentry.plugins.bases.issue import IssuePlugin
+from sentry.testutils import TestCase
+from sentry.plugins.sentry_useragents.models import (
+    BrowserPlugin, DevicePlugin, OsPlugin )
+
+class UserAgentPlugins(TestCase):
+    data = [
+        {
+            'user_agent': "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
+            'browser_plugin_output': 'Googlebot 2.1',
+            'device_plugin_output': 'Spider',
+            'os_plugin_output': 'Other',
+        },
+    ]
+
+
+    def test_plugins(self):
+        for row in self.data:
+            ua = Parse(row['user_agent'])
+            assert BrowserPlugin().get_tag_from_ua(ua) == row['browser_plugin_output']
+            assert DevicePlugin().get_tag_from_ua(ua) == row['device_plugin_output']
+            assert OsPlugin().get_tag_from_ua(ua) == row['os_plugin_output']
+
