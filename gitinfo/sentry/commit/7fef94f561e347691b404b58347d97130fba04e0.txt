commit 7fef94f561e347691b404b58347d97130fba04e0
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Fri May 25 11:01:15 2018 -0700

     feat(integrations): Commits for GitHubApps (#8550)
    
    * feat(integrations): Commits for GitHubApps
    
    * feat(integrations): Support commits for GitHub App repos
    
    * avoid try/except duplication

diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index d81e84cde8..6c4e239478 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -6,6 +6,8 @@ import six
 from sentry.models import Integration
 from sentry.plugins import providers
 
+from .client import GitHubAppsClient
+
 WEBHOOK_EVENTS = ['push', 'pull_request']
 
 
@@ -61,7 +63,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
                 self.raise_error(e)
             else:
                 config['external_id'] = six.text_type(repo['id'])
-                config['integration_id'] = six.text_type(integration.id)
+                config['integration_id'] = integration.id
 
         return config
 
@@ -76,10 +78,25 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
             'integration_id': data['integration_id']
         }
 
+    def _format_commits(self, repo, commit_list):
+        return [
+            {
+                'id': c['sha'],
+                'repository': repo.name,
+                'author_email': c['commit']['author'].get('email'),
+                'author_name': c['commit']['author'].get('name'),
+                'message': c['commit']['message'],
+            } for c in commit_list
+        ]
+
     def compare_commits(self, repo, start_sha, end_sha, actor=None):
-        if actor is None:
-            raise NotImplementedError('Cannot fetch commits anonymously')
-        client = self.get_client(actor)
+        integration_id = repo.integration_id
+        if integration_id is None:
+            raise NotImplementedError('GitHub apps requires an integration id to fetch commits')
+
+        client = GitHubAppsClient(
+            Integration.objects.get(id=integration_id).external_id,
+        )
 
         # use config name because that is kept in sync via webhooks
         name = repo.config['name']
@@ -100,9 +117,13 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         def get_pr_commits(self, repo, number, actor=None):
             # (not currently used by sentry)
-            if actor is None:
-                raise NotImplementedError('Cannot fetch commits anonymously')
-            client = self.get_client(actor)
+            integration_id = repo.integration_id
+            if integration_id is None:
+                raise NotImplementedError('GitHub apps requires an integration id to fetch commits')
+
+            client = GitHubAppsClient(
+                Integration.objects.get(id=integration_id),
+            )
 
             # use config name because that is kept in sync via webhooks
             name = repo.config['name']
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 4ac0f46ea3..664f2391e6 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -336,12 +336,11 @@ class Release(Model):
             ReleaseCommit, ReleaseHeadCommit, Repository, PullRequest
         )
         from sentry.plugins.providers.repository import RepositoryProvider
-
+        # todo(meredith): implement for IntegrationRepositoryProvider
         commit_list = [
             c for c in commit_list
             if not RepositoryProvider.should_ignore_commit(c.get('message', ''))
         ]
-
         lock_key = type(self).get_lock_key(self.organization_id, self.id)
         lock = locks.get(lock_key, duration=10)
         with TimedRetryPolicy(10)(lock.acquire):
diff --git a/src/sentry/plugins/providers/integration_repository.py b/src/sentry/plugins/providers/integration_repository.py
index 6e50f89e4f..3776e26e36 100644
--- a/src/sentry/plugins/providers/integration_repository.py
+++ b/src/sentry/plugins/providers/integration_repository.py
@@ -64,6 +64,7 @@ class IntegrationRepositoryProvider(ProviderMixin):
                     url=result.get('url'),
                     config=result.get('config') or {},
                     provider=self.id,
+                    integration_id=result.get('integration_id'),
                 )
         except IntegrityError:
             # Try to delete webhook we just created
diff --git a/src/sentry/tasks/commits.py b/src/sentry/tasks/commits.py
index 1d686f985a..1c98ac46a6 100644
--- a/src/sentry/tasks/commits.py
+++ b/src/sentry/tasks/commits.py
@@ -93,8 +93,10 @@ def fetch_commits(release_id, user_id, refs, prev_release_id=None, **kwargs):
             )
             continue
 
+        binding_key = 'integration-repository.provider' if repo.provider and repo.provider.startswith(
+            'integrations:') else 'repository.provider'
         try:
-            provider_cls = bindings.get('repository.provider').get(repo.provider)
+            provider_cls = bindings.get(binding_key).get(repo.provider)
         except KeyError:
             continue
 
