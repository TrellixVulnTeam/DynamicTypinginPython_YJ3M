commit 7ccb608210c8aacd348d811bade1c075a267eac1
Author: Chris Fuller <cfuller@sentry.io>
Date:   Tue Jan 7 12:09:47 2020 -0500

    cleanup: Removing unused code (#16187)
    
    * Removing unneccessary import and test

diff --git a/tests/sentry/incidents/endpoints/test_project_alert_rule_index.py b/tests/sentry/incidents/endpoints/test_project_alert_rule_index.py
index 7560074e4c..d6bb613458 100644
--- a/tests/sentry/incidents/endpoints/test_project_alert_rule_index.py
+++ b/tests/sentry/incidents/endpoints/test_project_alert_rule_index.py
@@ -117,7 +117,7 @@ class AlertRuleCreateEndpointTest(APITestCase):
         assert resp.status_code == 403
 
 
-class ProjectCombinedRuleIndexEndpointTest(BaseAlertRuleSerializerTest, APITestCase, TestCase):
+class ProjectCombinedRuleIndexEndpointTest(BaseAlertRuleSerializerTest, TestCase):
     def setup_project_and_rules(self):
         self.org = self.create_organization(owner=self.user, name="Rowdy Tiger")
         self.team = self.create_team(organization=self.org, name="Mariachi Band")
@@ -156,22 +156,6 @@ class ProjectCombinedRuleIndexEndpointTest(BaseAlertRuleSerializerTest, APITestC
             )
         assert response.status_code == 400
 
-    def test_limit_higher_than_cap(self):
-        pass  # TODO: Make limit a variable, so we can set it low for this test and avoid doing so many DB operations for a not-so-important test.
-        # self.setup_project_and_rules()
-        # for _ in range(125):
-        #     self.create_alert_rule(projects=self.projects)
-
-        # # Test limit above result cap (which is 100), no cursor.
-        # with self.feature("organizations:incidents"):
-        #     request_data = {"limit": "125"}
-        #     response = self.client.get(
-        #         path=self.combined_rules_url, data=request_data, content_type="application/json"
-        #     )
-        # assert response.status_code == 200
-        # result = json.loads(response.content)
-        # assert len(result) == 100
-
     def test_limit_higher_than_results_no_cursor(self):
         self.setup_project_and_rules()
         # Test limit above result count (which is 4), no cursor.
