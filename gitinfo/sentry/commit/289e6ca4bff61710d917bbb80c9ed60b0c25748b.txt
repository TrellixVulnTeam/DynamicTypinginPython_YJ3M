commit 289e6ca4bff61710d917bbb80c9ed60b0c25748b
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 22 16:56:00 2015 +0200

    Add celerybeat automated check

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index b7199c704c..63a92a48f6 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -367,6 +367,7 @@ CELERY_IMPORTS = (
     'sentry.tasks.merge',
     'sentry.tasks.store',
     'sentry.tasks.options',
+    'sentry.tasks.ping',
     'sentry.tasks.post_process',
     'sentry.tasks.process_buffer',
 )
@@ -414,6 +415,13 @@ CELERYBEAT_SCHEDULE = {
             'expires': 3600,
         },
     },
+    'send-ping': {
+        'task': 'sentry.tasks.send_ping',
+        'schedule': timedelta(minutes=1),
+        'options': {
+            'expires': 60,
+        },
+    },
     'flush-buffers': {
         'task': 'sentry.tasks.process_buffer.process_pending',
         'schedule': timedelta(seconds=10),
diff --git a/src/sentry/tasks/ping.py b/src/sentry/tasks/ping.py
new file mode 100644
index 0000000000..9b4d32efe3
--- /dev/null
+++ b/src/sentry/tasks/ping.py
@@ -0,0 +1,19 @@
+"""
+sentry.tasks.ping
+~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2015 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from __future__ import absolute_import, print_function
+
+from time import time
+
+from sentry import options
+from sentry.tasks.base import instrumented_task
+
+
+@instrumented_task(name='sentry.tasks.send_ping')
+def send_ping():
+    options.set('sentry:last_worker_ping', time())
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 689c9a8a78..48822cb49a 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -2,6 +2,7 @@
 {% load sentry_features %}
 {% load sentry_helpers %}
 {% load sentry_permissions %}
+{% load sentry_status %}
 {% get_sentry_version %}
 <!DOCTYPE html>
 <html lang="en">
@@ -193,6 +194,10 @@
             <div class="container">
                 {% block above_content %}{% endblock %}
 
+                {% if request.user.is_superuser %}
+                    {% show_system_status %}
+                {% endif %}
+
                 {% block alerts %}
                     {% include "sentry/partial/alerts.html" %}
                 {% endblock %}
diff --git a/src/sentry/templates/sentry/partial/system-status.html b/src/sentry/templates/sentry/partial/system-status.html
new file mode 100644
index 0000000000..afd352eeb2
--- /dev/null
+++ b/src/sentry/templates/sentry/partial/system-status.html
@@ -0,0 +1,10 @@
+{% load sentry_helpers %}
+
+{% if problems %}
+  {% for message in problems %}
+    <div class="alert alert-block alert-error">
+      <a class="close" data-dismiss="alert">Ã—</a>
+      {{ message|linebreaks }}
+    </div>
+  {% endfor %}
+{% endif %}
diff --git a/src/sentry/templatetags/sentry_status.py b/src/sentry/templatetags/sentry_status.py
new file mode 100644
index 0000000000..e1d50ab698
--- /dev/null
+++ b/src/sentry/templatetags/sentry_status.py
@@ -0,0 +1,23 @@
+from __future__ import absolute_import, print_function
+
+from django import template
+from time import time
+
+from sentry import options
+
+register = template.Library()
+
+ERR_WORKERS_LONG_PING = "Background workers haven't checked in recently. This can mean an issue with your configuration or a serious backlog in tasks."
+
+
+@register.inclusion_tag('sentry/partial/system-status.html', takes_context=True)
+def show_system_status(context):
+    problems = []
+
+    last_ping = options.get('sentry:last_worker_ping') or 0
+    if last_ping < time() - 300:
+        problems.append(ERR_WORKERS_LONG_PING)
+
+    return {
+        'problems': problems,
+    }
