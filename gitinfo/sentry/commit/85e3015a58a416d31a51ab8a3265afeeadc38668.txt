commit 85e3015a58a416d31a51ab8a3265afeeadc38668
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 19 21:05:38 2014 -0700

    Maintain support for old-style exceptions

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 009465500b..2b1c73016b 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -369,11 +369,16 @@ def validate_data(project, data, client=None):
                 **client_metadata(client, project))
             continue
 
-        if type(value) is not dict:
-            logger.info(
-                'Invalid parameters for value: %s (dict expected, got %s)', k,
-                type(value), **client_metadata(client, project))
-            continue
+        if type(value) != dict:
+            # HACK(dcramer): the exception interface supports a list as the
+            # value. We should change this in a new protocol version.
+            if type(value) in (list, tuple):
+                value = {'values': value}
+            else:
+                logger.info(
+                    'Invalid parameters for value: %s', k,
+                    type(value), **client_metadata(client, project))
+                continue
 
         try:
             inst = interface.to_python(value)
diff --git a/src/sentry/interfaces/exception.py b/src/sentry/interfaces/exception.py
index 966749fb94..d7c270d0d9 100644
--- a/src/sentry/interfaces/exception.py
+++ b/src/sentry/interfaces/exception.py
@@ -37,7 +37,7 @@ class SingleException(Interface):
 
     @classmethod
     def to_python(cls, data):
-        assert data['value']
+        assert data.get('value') is not None
 
         if data.get('stacktrace'):
             stacktrace = Stacktrace.to_python(data['stacktrace'])
