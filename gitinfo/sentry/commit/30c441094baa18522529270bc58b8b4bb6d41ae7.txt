commit 30c441094baa18522529270bc58b8b4bb6d41ae7
Author: David Cramer <dcramer@gmail.com>
Date:   Thu May 28 14:01:59 2015 +0200

    Add basic global indicators

diff --git a/src/sentry/static/sentry/app/components/indicators.jsx b/src/sentry/static/sentry/app/components/indicators.jsx
new file mode 100644
index 0000000000..89978148d2
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/indicators.jsx
@@ -0,0 +1,32 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+var Reflux = require("reflux");
+var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
+
+var IndicatorStore = require('../stores/indicatorStore');
+
+var Indicators = React.createClass({
+  mixins: [
+    PureRenderMixin,
+    Reflux.connect(IndicatorStore, "items")
+  ],
+
+  getInitialState() {
+      return {
+          items: []
+      };
+  },
+
+  render() {
+    return (
+      <div {...this.props}>
+        {this.state.items.map(function(item, key) {
+           return <div key={key}>{item}</div>;
+        })}
+      </div>
+    );
+  }
+});
+
+module.exports = Indicators;
diff --git a/src/sentry/static/sentry/app/components/loadingIndicator.jsx b/src/sentry/static/sentry/app/components/loadingIndicator.jsx
index d28487ab59..e18935267e 100644
--- a/src/sentry/static/sentry/app/components/loadingIndicator.jsx
+++ b/src/sentry/static/sentry/app/components/loadingIndicator.jsx
@@ -5,7 +5,7 @@ var React = require("react");
 
 var LoadingIndicator = React.createClass({
   propTypes: {
-    message: React.PropTypes.string,
+    global: React.PropTypes.bool,
     mini:  React.PropTypes.bool
   },
 
@@ -24,7 +24,7 @@ var LoadingIndicator = React.createClass({
       <div className={joinClasses(this.props.className, className)}>
         <div className="loading-mask"></div>
         <div className="loading-indicator"></div>
-        <div className="loading-message">{this.props.message}</div>
+        <div className="loading-message">{this.props.children}</div>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/stores/indicatorStore.jsx b/src/sentry/static/sentry/app/stores/indicatorStore.jsx
new file mode 100644
index 0000000000..f8cafe9c18
--- /dev/null
+++ b/src/sentry/static/sentry/app/stores/indicatorStore.jsx
@@ -0,0 +1,29 @@
+/** @jsx React.DOM */
+
+var Reflux = require("reflux");
+
+var LoadingIndicator = require('../components/loadingIndicator');
+
+var IndicatorStore = Reflux.createStore({
+  init() {
+    this.items = [];
+  },
+
+  add(node) {
+    if (!React.isValidElement(node)) {
+      node = <LoadingIndicator global={true}>{node}</LoadingIndicator>;
+    }
+    this.items.push(node);
+    this.trigger(this.items);
+    return node;
+  },
+
+  remove(indicator) {
+    this.items = this.items.filter((item) => {
+      return item !== indicator;
+    });
+    this.trigger(this.items);
+  }
+});
+
+module.exports = IndicatorStore;
diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index 83358833fa..d81577e951 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -5,6 +5,7 @@ var React = require("react");
 var api = require("../api");
 var Alerts = require("../components/alerts");
 var ConfigStore = require("../stores/configStore");
+var Indicators = require("../components/indicators");
 var LoadingIndicator = require("../components/loadingIndicator");
 var PropTypes = require("../proptypes");
 
@@ -58,6 +59,7 @@ var App = React.createClass({
     return (
       <div>
         <Alerts className="messages-container" />
+        <Indicators className="indicators-container" />
         <Router.RouteHandler />
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/groupActivity.jsx b/src/sentry/static/sentry/app/views/groupActivity.jsx
index aa799f9144..64bcfff67e 100644
--- a/src/sentry/static/sentry/app/views/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity.jsx
@@ -8,6 +8,7 @@ var api = require("../api");
 var Gravatar = require("../components/gravatar");
 var GroupState = require("../mixins/groupState");
 var GroupStore = require("../stores/groupStore");
+var IndicatorStore = require("../stores/indicatorStore");
 var MemberListStore = require("../stores/memberListStore");
 var PropTypes = require("../proptypes");
 var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
@@ -70,6 +71,8 @@ var NoteInput = React.createClass({
       error: false
     });
 
+    var loadingIndicator = IndicatorStore.add('Posting note..');
+
     api.request('/groups/' + this.props.group.id + '/notes/', {
       method: 'POST',
       data: {
@@ -88,6 +91,9 @@ var NoteInput = React.createClass({
           loading: false
         });
         GroupStore.addActivity(this.props.group.id, data);
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
       }
     });
   },
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 64e64f4e7e..42f505bad5 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -514,7 +514,7 @@ table.integrations {
   border-radius: 3px;
 
   position: fixed;
-  bottom: -100px;
+  bottom: 0;
   right: 20px;
   background: rgba(52, 60, 69, .8);
   color: #fff;
