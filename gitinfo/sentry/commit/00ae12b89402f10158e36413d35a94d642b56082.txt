commit 00ae12b89402f10158e36413d35a94d642b56082
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Fri Jun 5 15:55:17 2020 -0700

    fix(api): Add support for sentry app install tokens (#19169)
    
    * fix(api): Add support for sentry app install tokens
    
    * add test

diff --git a/src/sentry/api/endpoints/project_index.py b/src/sentry/api/endpoints/project_index.py
index 0e302fda12..d40729f89b 100644
--- a/src/sentry/api/endpoints/project_index.py
+++ b/src/sentry/api/endpoints/project_index.py
@@ -10,7 +10,7 @@ from sentry.api.paginator import DateTimePaginator
 from sentry.api.serializers import serialize, ProjectWithOrganizationSerializer
 from sentry.auth.superuser import is_active_superuser
 from sentry.db.models.query import in_iexact
-from sentry.models import Project, ProjectPlatform, ProjectStatus
+from sentry.models import Project, ProjectPlatform, ProjectStatus, SentryAppInstallationToken
 from sentry.search.utils import tokenize_query
 from sentry.utils.apidocs import scenario, attach_scenarios
 
@@ -53,7 +53,10 @@ class ProjectIndexEndpoint(Endpoint):
             else:
                 queryset = queryset.none()
         elif not (is_active_superuser(request) and request.GET.get("show") == "all"):
-            queryset = queryset.filter(teams__organizationmember__user=request.user)
+            if request.user.is_sentry_app:
+                queryset = SentryAppInstallationToken.get_projects(request.auth)
+            else:
+                queryset = queryset.filter(teams__organizationmember__user=request.user)
 
         query = request.GET.get("query")
         if query:
diff --git a/src/sentry/models/sentryappinstallation.py b/src/sentry/models/sentryappinstallation.py
index a2e972ede1..c8d9e62cef 100644
--- a/src/sentry/models/sentryappinstallation.py
+++ b/src/sentry/models/sentryappinstallation.py
@@ -8,6 +8,7 @@ from django.utils import timezone
 
 from sentry.constants import SentryAppInstallationStatus
 from sentry.db.models import BoundedPositiveIntegerField, FlexibleForeignKey, ParanoidModel, Model
+from sentry.models import Project
 
 
 def default_uuid():
@@ -36,6 +37,19 @@ class SentryAppInstallationToken(Model):
 
         return install_token.sentry_app_installation.organization_id == organization.id
 
+    @classmethod
+    def get_projects(cls, token):
+        try:
+            install_token = cls.objects.select_related("sentry_app_installation").get(
+                api_token=token
+            )
+        except cls.DoesNotExist:
+            return False
+
+        return Project.objects.filter(
+            organization_id=install_token.sentry_app_installation.organization_id
+        )
+
 
 class SentryAppInstallation(ParanoidModel):
     __core__ = True
diff --git a/tests/sentry/api/endpoints/test_project_index.py b/tests/sentry/api/endpoints/test_project_index.py
index 52faf0c0fb..e7b2a41e93 100644
--- a/tests/sentry/api/endpoints/test_project_index.py
+++ b/tests/sentry/api/endpoints/test_project_index.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 import six
 
-from sentry.models import Project, ProjectStatus
+from sentry.models import Project, ProjectStatus, SentryAppInstallationToken
 from sentry.testutils import APITestCase
 
 
@@ -138,3 +138,18 @@ class ProjectsListTest(APITestCase):
         response = self.client.get(u"{}?query=id:-1".format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
+
+    def test_valid_with_internal_integration(self):
+        project = self.create_project(organization=self.organization, teams=[self.team])
+        self.create_internal_integration(
+            name="my_app",
+            organization=self.organization,
+            scopes=("project:read",),
+            webhook_url="http://example.com",
+        )
+        # there should only be one record created so just grab the first one
+        token = SentryAppInstallationToken.objects.first()
+        response = self.client.get(
+            u"{}".format(self.path), HTTP_AUTHORIZATION=u"Bearer {}".format(token.api_token.token)
+        )
+        assert project.name in response.content
