commit eaec559eb0eecda7e54673eac2e07ca95c33e14a
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 22 11:44:03 2015 -0700

    Add escape param to json.dumps

diff --git a/src/sentry/utils/json.py b/src/sentry/utils/json.py
index 06781e7a2f..2d5dad389d 100644
--- a/src/sentry/utils/json.py
+++ b/src/sentry/utils/json.py
@@ -27,10 +27,13 @@ class BetterJSONEncoder(DjangoJSONEncoder):
         return super(BetterJSONEncoder, self).default(obj)
 
 
-def dumps(value, **kwargs):
+def dumps(value, escape=False, **kwargs):
     if 'separators' not in kwargs:
         kwargs['separators'] = (',', ':')
-    return json.dumps(value, cls=BetterJSONEncoder, **kwargs)
+    rv = json.dumps(value, cls=BetterJSONEncoder, **kwargs)
+    if escape:
+        rv = rv.replace('</', '<\/')
+    return rv
 
 
 def loads(value, **kwargs):
diff --git a/tests/sentry/utils/json/tests.py b/tests/sentry/utils/json/tests.py
index 24b100f9ca..c783938dfa 100644
--- a/tests/sentry/utils/json/tests.py
+++ b/tests/sentry/utils/json/tests.py
@@ -26,3 +26,8 @@ class JSONTest(TestCase):
     def test_frozenset(self):
         res = frozenset(['foo', 'bar'])
         self.assertEquals(json.dumps(res), '["foo","bar"]')
+
+    def test_escape(self):
+        res = '<script>alert(1);</script>'
+        assert json.dumps(res) == '"<script>alert(1);</script>"'
+        assert json.dumps(res, escape=True) == '"<script>alert(1);<\/script>"'
