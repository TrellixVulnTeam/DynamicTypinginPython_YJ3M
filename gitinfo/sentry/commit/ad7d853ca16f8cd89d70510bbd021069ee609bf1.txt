commit ad7d853ca16f8cd89d70510bbd021069ee609bf1
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Dec 16 10:52:42 2014 -0800

    Add brief delays to deletion tasks

diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index e9fb4340b9..579a08fb1a 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -31,14 +31,14 @@ def delete_organization(object_id, **kwargs):
     for team in Team.objects.filter(organization=o).order_by('id')[:1]:
         logger.info('Removing Team id=%s where organization=%s', team.id, o.id)
         delete_team(team.id)
-        delete_organization.delay(object_id=object_id)
+        delete_organization.delay(object_id=object_id, countdown=15)
         return
 
     model_list = (OrganizationMember,)
 
     has_more = delete_objects(model_list, relation={'organization': o}, logger=logger)
     if has_more:
-        delete_organization.delay(object_id=object_id)
+        delete_organization.delay(object_id=object_id, countdown=15)
         return
     o.delete()
 
@@ -65,14 +65,14 @@ def delete_team(object_id, **kwargs):
     for project in Project.objects.filter(team=t).order_by('id')[:1]:
         logger.info('Removing Project id=%s where team=%s', project.id, t.id)
         delete_project(project.id)
-        delete_team.delay(object_id=object_id)
+        delete_team.delay(object_id=object_id, countdown=15)
         return
 
     model_list = (AccessGroup,)
 
     has_more = delete_objects(model_list, relation={'team': t}, logger=logger)
     if has_more:
-        delete_team.delay(object_id=object_id)
+        delete_team.delay(object_id=object_id, countdown=15)
         return
     t.delete()
 
@@ -104,7 +104,7 @@ def delete_project(object_id, **kwargs):
 
     has_more = delete_objects(model_list, relation={'project': p}, logger=logger)
     if has_more:
-        delete_project.delay(object_id=object_id)
+        delete_project.delay(object_id=object_id, countdown=15)
         return
     p.delete()
 
@@ -131,7 +131,7 @@ def delete_group(object_id, **kwargs):
 
     has_more = delete_objects(model_list, relation={'group': group}, logger=logger)
     if has_more:
-        delete_group.delay(object_id=object_id)
+        delete_group.delay(object_id=object_id, countdown=15)
         return
     group.delete()
 
