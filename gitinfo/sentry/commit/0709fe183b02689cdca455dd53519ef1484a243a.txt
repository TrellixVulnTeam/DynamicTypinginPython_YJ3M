commit 0709fe183b02689cdca455dd53519ef1484a243a
Author: Chris Jennings <chriskjennings@gmail.com>
Date:   Tue Mar 6 10:34:32 2018 -0800

    feat(ui): System alerts (#7462)
    
    * Properly style system alerts
    
    * More mellow yellow
    
    * Make sure system messages use system alerts

diff --git a/docs-ui/components/alertMessage.stories.js b/docs-ui/components/alertMessage.stories.js
index da3efb6501..402b2163e0 100644
--- a/docs-ui/components/alertMessage.stories.js
+++ b/docs-ui/components/alertMessage.stories.js
@@ -5,35 +5,91 @@ import {withInfo} from '@storybook/addon-info';
 
 import AlertMessage from 'sentry-ui/alertMessage';
 
-storiesOf('AlertMessage', module).add(
-  'all',
-  withInfo('All of the different alert messages')(() => (
-    <div>
-      <AlertMessage
-        alert={{
-          id: 'id',
-          message: 'Alert Message',
-          type: 'success',
-          url: 'url',
-        }}
-      />
-
-      <AlertMessage
-        alert={{
-          id: 'id',
-          message: 'Alert Message',
-          type: 'error',
-          url: 'url',
-        }}
-      />
-      <AlertMessage
-        alert={{
-          id: 'id',
-          message: 'Alert Message',
-          type: 'warning',
-          url: 'url',
-        }}
-      />
-    </div>
-  ))
-);
+storiesOf('AlertMessage', module)
+  .add(
+    'Default',
+    withInfo('Inline alert messages')(() => (
+      <div>
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Info message with a url',
+            type: 'info',
+            url: 'url',
+          }}
+        />
+
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Success message without a url',
+            type: 'success',
+          }}
+        />
+
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Warning Message',
+            type: 'warning',
+            url: 'url',
+          }}
+        />
+
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Error Message',
+            type: 'error',
+            url: 'url',
+          }}
+        />
+      </div>
+    ))
+  )
+  .add(
+    'System',
+    withInfo('System-level alert messages that appear at the top of the viewport')(() => (
+      <div>
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Info message with a url',
+            type: 'info',
+            url: 'url',
+          }}
+          system
+        />
+
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Success message without a url',
+            type: 'success',
+          }}
+          system
+        />
+
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message: 'Warning Message',
+            type: 'warning',
+            url: 'url',
+          }}
+          system
+        />
+
+        <AlertMessage
+          alert={{
+            id: 'id',
+            message:
+              "Background workers haven't checked in recently. This can mean an issue with your configuration or a serious backlog in tasks.",
+            type: 'error',
+            url: 'url',
+          }}
+          system
+        />
+      </div>
+    ))
+  );
diff --git a/src/sentry/static/sentry/app/components/alert.jsx b/src/sentry/static/sentry/app/components/alert.jsx
index b5ab6d4e0f..badd602953 100644
--- a/src/sentry/static/sentry/app/components/alert.jsx
+++ b/src/sentry/static/sentry/app/components/alert.jsx
@@ -5,12 +5,44 @@ import styled from 'react-emotion';
 import TextBlock from '../views/settings/components/text/textBlock';
 import InlineSvg from './inlineSvg';
 
-const getAlertColorStyles = ({backgroundLight, border, iconColor}) => `
+const StyledInlineSvg = styled(InlineSvg)`
+  margin-right: 12px;
+`;
+
+const getAlertColorStyles = ({backgroundLight, border, iconColor}, textColor) => `
   background: ${backgroundLight};
   border: 1px solid ${border};
+
   svg {
     color: ${iconColor};
   }
+
+  a {
+    color: ${textColor};
+    border-bottom: 1px dotted ${textColor};
+  }
+`;
+
+const getSystemAlertColorStyles = ({background}) => `
+  background: ${background};
+  border: 0;
+  border-radius: 0;
+  color: #fff;
+  font-weight: bold;
+  text-shadow: 0 1px 1px rgba(0,0,0, .15);
+
+  ${StyledInlineSvg} {
+    color: #fff;
+  }
+
+  a {
+    color: #fff;
+    border-bottom: 1px dotted rgba(255,255,255, .8);
+
+    &:hover {
+      border-bottom: 1px dotted rgba(255,255,255, 1);
+    }
+  }
 `;
 
 const AlertWrapper = styled.div`
@@ -23,7 +55,10 @@ const AlertWrapper = styled.div`
   background: ${p => p.theme.whiteDark};
   border: 1px solid ${p => p.theme.borderDark};
 
-  ${p => p.type && getAlertColorStyles(p.theme.alert[p.type])};
+  ${p =>
+    p.system
+      ? p.type && getSystemAlertColorStyles(p.theme.alert[p.type])
+      : p.type && getAlertColorStyles(p.theme.alert[p.type], p.theme.gray5)};
 `;
 
 const StyledTextBlock = styled(TextBlock)`
@@ -33,10 +68,6 @@ const StyledTextBlock = styled(TextBlock)`
   align-self: center;
 `;
 
-const StyledInlineSvg = styled(InlineSvg)`
-  margin-right: 12px;
-`;
-
 const Alert = ({type, icon, children, className, ...props}) => {
   let refClass;
 
diff --git a/src/sentry/static/sentry/app/components/alertMessage.jsx b/src/sentry/static/sentry/app/components/alertMessage.jsx
index 00ad1eb495..831a213805 100644
--- a/src/sentry/static/sentry/app/components/alertMessage.jsx
+++ b/src/sentry/static/sentry/app/components/alertMessage.jsx
@@ -41,9 +41,10 @@ export default class AlertMessage extends React.PureComponent {
     alert: PropTypes.shape({
       id: PropTypes.string,
       message: PropTypes.string.isRequired,
-      type: PropTypes.oneOf(['success', 'error', 'warning']),
+      type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),
       url: PropTypes.string,
     }),
+    system: PropTypes.bool,
   };
 
   closeAlert = () => {
@@ -51,16 +52,16 @@ export default class AlertMessage extends React.PureComponent {
   };
 
   render = () => {
-    let alert = this.props.alert;
+    let {alert, system} = this.props;
     let icon;
 
     if (alert.type == 'success') {
       icon = 'icon-circle-check';
-    } else if (alert.type == 'error' || alert.type == 'warning') {
+    } else {
       icon = 'icon-circle-exclamation';
     }
     return (
-      <StyledAlert type={this.props.alert.type} icon={icon}>
+      <StyledAlert type={this.props.alert.type} icon={icon} system={system}>
         <StyledCloseButton
           type="button"
           aria-label={t('Close')}
diff --git a/src/sentry/static/sentry/app/components/alerts.jsx b/src/sentry/static/sentry/app/components/alerts.jsx
index 0097248e3e..be2b34249e 100644
--- a/src/sentry/static/sentry/app/components/alerts.jsx
+++ b/src/sentry/static/sentry/app/components/alerts.jsx
@@ -23,7 +23,7 @@ const Alerts = createReactClass({
       <ThemeProvider theme={theme}>
         <div {...this.props}>
           {this.state.alerts.map(function(alert) {
-            return <AlertMessage alert={alert} key={alert.key} />;
+            return <AlertMessage alert={alert} key={alert.key} system />;
           })}
         </div>
       </ThemeProvider>
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index b35ac07248..03c09b2b4b 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -16,10 +16,10 @@ const theme = {
   greenLight: '#71D8A6',
   greenDark: '#3EA573',
 
-  yellow: '#ECD744',
+  yellow: '#ecc844',
   yellowLightest: '#FFFDF7',
   yellowLight: '#FFF15E',
-  yellowDark: '#D3BE2B',
+  yellowDark: '#e6bc23',
 
   yellowOrange: '#f9a66d',
   yellowOrangeLight: '#FFC087',
@@ -62,7 +62,6 @@ const theme = {
   alert: {
     info: {
       backgroundLight: '#F5FAFE',
-      background: '#2D5BB1',
       border: '#B5D6ED',
     },
     warning: {
@@ -77,7 +76,7 @@ const theme = {
       border: '#BBD6B3',
     },
     error: {
-      background: '#FDF6F5',
+      backgroundLight: '#FDF6F5',
       border: '#E7C0BC',
       textLight: '#92635f',
       textDark: '#5d3e3b',
@@ -111,9 +110,16 @@ theme.success = theme.green;
 theme.error = theme.red;
 
 theme.alert.info.iconColor = theme.blue;
+theme.alert.info.background = theme.blue;
+
 theme.alert.warning.iconColor = theme.yellowDark;
+theme.alert.warning.background = theme.yellow;
+
 theme.alert.success.iconColor = theme.greenDark;
+theme.alert.success.background = theme.green;
+
 theme.alert.error.iconColor = theme.redDark;
+theme.alert.error.background = theme.red;
 
 //alias warn to warning
 theme.alert.warn = theme.alert.warning;
