commit 2242c018b9cd1f0dd3a7d603808a7520f58e91e6
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Apr 15 11:30:56 2019 -0700

    feat(events): Use SnubaEvent if option is turned on (#12594)
    
    Prevents 404s on various events endpoints caused by sampling events when Snuba is on

diff --git a/src/sentry/api/endpoints/event_apple_crash_report.py b/src/sentry/api/endpoints/event_apple_crash_report.py
index a65325f09b..74b5024b3c 100644
--- a/src/sentry/api/endpoints/event_apple_crash_report.py
+++ b/src/sentry/api/endpoints/event_apple_crash_report.py
@@ -9,9 +9,10 @@ try:
 except ImportError:
     from django.http import HttpResponse, StreamingHttpResponse
 
+from sentry import options
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
-from sentry.models import Event
+from sentry.models import Event, SnubaEvent
 from sentry.lang.native.applecrashreport import AppleCrashReport
 from sentry.utils.safe import get_path
 
@@ -28,7 +29,12 @@ class EventAppleCrashReportEndpoint(ProjectEndpoint):
         or the event ID that is reported by the client upon submission.
         This works only if the event.platform == cocoa
         """
-        event = Event.objects.from_event_id(event_id, project_id=project.id)
+
+        use_snuba = options.get('snuba.events-queries.enabled')
+
+        event_cls = event_cls = SnubaEvent if use_snuba else Event
+
+        event = event_cls.objects.from_event_id(event_id, project_id=project.id)
         if event is None:
             raise ResourceDoesNotExist
 
diff --git a/src/sentry/api/endpoints/event_attachment_details.py b/src/sentry/api/endpoints/event_attachment_details.py
index eb49d3e045..ef8cce5eb4 100644
--- a/src/sentry/api/endpoints/event_attachment_details.py
+++ b/src/sentry/api/endpoints/event_attachment_details.py
@@ -8,9 +8,9 @@ try:
 except ImportError:
     from django.http import StreamingHttpResponse
 
-from sentry import features
+from sentry import features, options
 from sentry.api.bases.project import ProjectEndpoint
-from sentry.models import Event, EventAttachment
+from sentry.models import Event, SnubaEvent, EventAttachment
 
 
 class EventAttachmentDetailsEndpoint(ProjectEndpoint):
@@ -44,7 +44,11 @@ class EventAttachmentDetailsEndpoint(ProjectEndpoint):
                             project.organization, actor=request.user):
             return self.respond(status=404)
 
-        event = Event.objects.from_event_id(event_id, project.id)
+        use_snuba = options.get('snuba.events-queries.enabled')
+
+        event_cls = event_cls = SnubaEvent if use_snuba else Event
+
+        event = event_cls.objects.from_event_id(event_id, project.id)
         if event is None:
             return self.respond({'detail': 'Event not found'}, status=404)
 
diff --git a/src/sentry/api/endpoints/event_attachments.py b/src/sentry/api/endpoints/event_attachments.py
index d54c96a573..4d679853e9 100644
--- a/src/sentry/api/endpoints/event_attachments.py
+++ b/src/sentry/api/endpoints/event_attachments.py
@@ -1,10 +1,10 @@
 from __future__ import absolute_import
 
-from sentry import features
+from sentry import features, options
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
-from sentry.models import Event, EventAttachment
+from sentry.models import Event, SnubaEvent, EventAttachment
 
 
 class EventAttachmentsEndpoint(ProjectEndpoint):
@@ -24,7 +24,11 @@ class EventAttachmentsEndpoint(ProjectEndpoint):
                             project.organization, actor=request.user):
             return self.respond(status=404)
 
-        event = Event.objects.from_event_id(event_id, project.id)
+        use_snuba = options.get('snuba.events-queries.enabled')
+
+        event_cls = event_cls = SnubaEvent if use_snuba else Event
+
+        event = event_cls.objects.from_event_id(event_id, project.id)
         if event is None:
             return self.respond({'detail': 'Event not found'}, status=404)
 
diff --git a/src/sentry/api/endpoints/event_file_committers.py b/src/sentry/api/endpoints/event_file_committers.py
index 5d54416d69..f4b3d6ca6f 100644
--- a/src/sentry/api/endpoints/event_file_committers.py
+++ b/src/sentry/api/endpoints/event_file_committers.py
@@ -2,8 +2,9 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
+from sentry import options
 from sentry.api.bases.project import ProjectEndpoint
-from sentry.models import Commit, Event, Release
+from sentry.models import Commit, Event, SnubaEvent, Release
 from sentry.utils.committers import get_event_file_committers
 
 
@@ -21,7 +22,12 @@ class EventFileCommittersEndpoint(ProjectEndpoint):
                                  retrieve (as reported by the raven client).
         :auth: required
         """
-        event = Event.objects.from_event_id(event_id, project.id)
+
+        use_snuba = options.get('snuba.events-queries.enabled')
+
+        event_cls = event_cls = SnubaEvent if use_snuba else Event
+
+        event = event_cls.objects.from_event_id(event_id, project.id)
         if event is None:
             return Response({'detail': 'Event not found'}, status=404)
 
diff --git a/src/sentry/api/endpoints/event_grouping_info.py b/src/sentry/api/endpoints/event_grouping_info.py
index 40759f804b..bac10e15de 100644
--- a/src/sentry/api/endpoints/event_grouping_info.py
+++ b/src/sentry/api/endpoints/event_grouping_info.py
@@ -4,10 +4,11 @@ import six
 
 from django.http import HttpResponse
 
+from sentry import options
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.grouping.api import ConfigNotFoundException
-from sentry.models import Event
+from sentry.models import Event, SnubaEvent
 from sentry.utils import json
 
 
@@ -20,7 +21,12 @@ class EventGroupingInfoEndpoint(ProjectEndpoint):
         This endpoint returns a JSON dump of the metadata that went into the
         grouping algorithm.
         """
-        event = Event.objects.from_event_id(event_id, project_id=project.id)
+
+        use_snuba = options.get('snuba.events-queries.enabled')
+
+        event_cls = event_cls = SnubaEvent if use_snuba else Event
+
+        event = event_cls.objects.from_event_id(event_id, project_id=project.id)
         if event is None:
             raise ResourceDoesNotExist
 
diff --git a/src/sentry/api/endpoints/event_owners.py b/src/sentry/api/endpoints/event_owners.py
index 45c233cc5e..647341897f 100644
--- a/src/sentry/api/endpoints/event_owners.py
+++ b/src/sentry/api/endpoints/event_owners.py
@@ -2,11 +2,12 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
+from sentry import options
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.fields.actor import Actor
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.actor import ActorSerializer
-from sentry.models import Event, ProjectOwnership
+from sentry.models import Event, SnubaEvent, ProjectOwnership
 
 
 class EventOwnersEndpoint(ProjectEndpoint):
@@ -21,7 +22,11 @@ class EventOwnersEndpoint(ProjectEndpoint):
         :auth: required
         """
 
-        event = Event.objects.from_event_id(event_id, project.id)
+        use_snuba = options.get('snuba.events-queries.enabled')
+
+        event_cls = SnubaEvent if use_snuba else Event
+
+        event = event_cls.objects.from_event_id(event_id, project.id)
         if event is None:
             return Response({'detail': 'Event not found'}, status=404)
 
