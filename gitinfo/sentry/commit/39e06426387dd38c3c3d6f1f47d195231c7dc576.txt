commit 39e06426387dd38c3c3d6f1f47d195231c7dc576
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 3 19:55:08 2012 -0800

    Correctly handle POST request on invite acceptance, and tests

diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index 3b7ae2990f..6568f5277d 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -187,7 +187,11 @@ def accept_invite(request, member_id, token):
 
         return render_to_response('sentry/teams/members/accept_invite_unauthenticated.html', context, request)
 
-    form = AcceptInviteForm(request.POST or None)
+    if request.method == 'POST':
+        form = AcceptInviteForm(request.POST)
+    else:
+        form = AcceptInviteForm()
+
     if form.is_valid():
         team.member_set.get_or_create(
             user=request.user,
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 9d066a3fe7..a7226fe42e 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -8,7 +8,7 @@ from django.contrib.auth.models import User
 from django.core.urlresolvers import reverse
 
 from sentry.constants import MEMBER_OWNER, MEMBER_USER
-from sentry.models import Team, PendingTeamMember
+from sentry.models import Team, TeamMember, PendingTeamMember
 from sentry.testutils import fixture
 from sentry.testutils import TestCase
 
@@ -245,7 +245,6 @@ class AcceptInviteTest(BaseTeamTest):
         self.client.logout()
         ptm = PendingTeamMember.objects.create(
             email='newuser@example.com',
-            token='foobar',
             team=self.team,
         )
         resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
@@ -255,9 +254,30 @@ class AcceptInviteTest(BaseTeamTest):
     def test_renders_authenticated_template(self):
         ptm = PendingTeamMember.objects.create(
             email='newuser@example.com',
-            token='foobar',
             team=self.team,
         )
         resp = self.client.get(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
         self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite.html')
+
+    def test_can_accept_while_authenticated(self):
+        ptm = PendingTeamMember.objects.create(
+            email='newuser@example.com',
+            type=MEMBER_USER,
+            team=self.team,
+        )
+        resp = self.client.post(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
+        self.assertEquals(resp.status_code, 302, resp.context['form'].errors if resp.status_code != 302 else None)
+        self.assertFalse(PendingTeamMember.objects.filter(id=ptm.id).exists())
+        self.assertTrue(TeamMember.objects.filter(user=self.user, team=self.team).exists())
+
+    def test_cannot_accept_while_unauthenticated(self):
+        self.client.logout()
+        ptm = PendingTeamMember.objects.create(
+            email='newuser@example.com',
+            type=MEMBER_USER,
+            team=self.team,
+        )
+        resp = self.client.post(reverse('sentry-accept-invite', args=[ptm.id, ptm.token]))
+        self.assertTemplateUsed(resp, 'sentry/teams/members/accept_invite_unauthenticated.html')
+        self.assertEquals(resp.status_code, 200)
