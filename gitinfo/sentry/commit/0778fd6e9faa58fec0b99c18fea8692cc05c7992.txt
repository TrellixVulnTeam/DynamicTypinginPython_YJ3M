commit 0778fd6e9faa58fec0b99c18fea8692cc05c7992
Author: David Cramer <cramer@dropbox.com>
Date:   Sat Jan 4 14:21:24 2014 -0800

    Use DI for datetime so values can still be static in tests

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 0fee4f3609..bdffc302e6 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -206,7 +206,7 @@ def ensure_valid_project_id(desired_project, data, client=None):
         data['project'] = desired_project.id
 
 
-def process_data_timestamp(data):
+def process_data_timestamp(data, current_datetime=None):
     if is_float(data['timestamp']):
         try:
             data['timestamp'] = datetime.fromtimestamp(float(data['timestamp']))
@@ -225,11 +225,13 @@ def process_data_timestamp(data):
         except Exception:
             raise InvalidTimestamp('Invalid value for timestamp: %r' % data['timestamp'])
 
-    now = datetime.now()
-    if data['timestamp'] > now + timedelta(minutes=1):
+    if current_datetime is None:
+        current_datetime = datetime.now()
+
+    if data['timestamp'] > current_datetime + timedelta(minutes=1):
         raise InvalidTimestamp('Invalid value for timestamp (in future): %r' % data['timestamp'])
 
-    if data['timestamp'] < now - timedelta(days=30):
+    if data['timestamp'] < current_datetime - timedelta(days=30):
         raise InvalidTimestamp('Invalid value for timestamp (too old): %r' % data['timestamp'])
 
     return data
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 06a5f638ba..78ae72931c 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -2,9 +2,10 @@
 
 from __future__ import absolute_import
 
-import datetime
 import mock
 
+from datetime import datetime
+
 from sentry.models import Project, User
 from sentry.exceptions import InvalidTimestamp
 from sentry.coreapi import (
@@ -95,26 +96,26 @@ class ProjectFromAuthVarsTest(BaseAPITest):
 
 class ProcessDataTimestampTest(BaseAPITest):
     def test_iso_timestamp(self):
+        d = datetime(2012, 01, 01, 10, 30, 45)
         data = process_data_timestamp({
             'timestamp': '2012-01-01T10:30:45'
-        })
-        d = datetime.datetime(2012, 01, 01, 10, 30, 45)
+        }, current_datetime=d)
         self.assertTrue('timestamp' in data)
         self.assertEquals(data['timestamp'], d)
 
     def test_iso_timestamp_with_ms(self):
+        d = datetime(2012, 01, 01, 10, 30, 45, 434000)
         data = process_data_timestamp({
             'timestamp': '2012-01-01T10:30:45.434'
-        })
-        d = datetime.datetime(2012, 01, 01, 10, 30, 45, 434000)
+        }, current_datetime=d)
         self.assertTrue('timestamp' in data)
         self.assertEquals(data['timestamp'], d)
 
     def test_timestamp_iso_timestamp_with_Z(self):
+        d = datetime(2012, 01, 01, 10, 30, 45)
         data = process_data_timestamp({
             'timestamp': '2012-01-01T10:30:45Z'
-        })
-        d = datetime.datetime(2012, 01, 01, 10, 30, 45)
+        }, current_datetime=d)
         self.assertTrue('timestamp' in data)
         self.assertEquals(data['timestamp'], d)
 
