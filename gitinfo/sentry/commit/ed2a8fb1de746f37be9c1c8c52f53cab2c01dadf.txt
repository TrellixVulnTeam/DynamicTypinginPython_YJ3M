commit ed2a8fb1de746f37be9c1c8c52f53cab2c01dadf
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Apr 3 11:03:34 2016 -0700

    Put breadcrumbs behind feature switch

diff --git a/src/sentry/api/endpoints/shared_group_details.py b/src/sentry/api/endpoints/shared_group_details.py
index 936e9a432c..0b65c8c829 100644
--- a/src/sentry/api/endpoints/shared_group_details.py
+++ b/src/sentry/api/endpoints/shared_group_details.py
@@ -5,7 +5,8 @@ from rest_framework.response import Response
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import (
-    serialize, SharedEventSerializer, SharedGroupSerializer
+    serialize, SharedEventSerializer, SharedGroupSerializer,
+    SharedProjectSerializer
 )
 from sentry.models import Group
 
@@ -37,8 +38,7 @@ class SharedGroupDetailsEndpoint(Endpoint):
         event = group.get_latest_event()
 
         context = serialize(group, request.user, SharedGroupSerializer())
+        # TODO(dcramer): move latestEvent/project into SharedGroupSerializer
         context['latestEvent'] = serialize(event, request.user, SharedEventSerializer())
-
-        # TODO(dcramer): use specific serializer for public group and embed
-        # event details as part of api response
+        context['project'] = serialize(group.project, request.user, SharedProjectSerializer())
         return Response(context)
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index af2a99441e..b87c84d88b 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from sentry.api.serializers import Serializer, register, serialize
+from sentry.api.serializers import register, serialize, Serializer
 from sentry.models import Project, ProjectBookmark, ProjectOption, ProjectStatus
 
 STATUS_LABELS = {
@@ -86,3 +86,25 @@ class ProjectWithOrganizationSerializer(ProjectSerializer):
         )
         data['organization'] = attrs['organization']
         return data
+
+
+class SharedProjectSerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        from sentry import features
+
+        feature_list = []
+        for feature in ('breadcrumbs', 'event-types', 'global-events', 'user-reports', 'dsym'):
+            if features.has('projects:' + feature, obj, actor=user):
+                feature_list.append(feature)
+
+        return {
+            'slug': obj.slug,
+            'name': obj.name,
+            'callSign': obj.callsign,
+            'color': obj.color,
+            'features': feature_list,
+            'organization': {
+                'slug': obj.organization.slug,
+                'name': obj.organization.name,
+            },
+        }
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 44525f070f..56a94a9e7b 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -11,6 +11,7 @@ default_manager.add('organizations:create')
 default_manager.add('organizations:sso', OrganizationFeature)
 default_manager.add('organizations:onboarding', OrganizationFeature)
 default_manager.add('organizations:callsigns', OrganizationFeature)
+default_manager.add('projects:breadcrumbs', ProjectFeature)
 default_manager.add('projects:event-types', ProjectFeature)
 default_manager.add('projects:global-events', ProjectFeature)
 default_manager.add('projects:quotas', ProjectFeature)
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index f0e484f0af..de6416f0eb 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -18,7 +18,7 @@ const EventEntries = React.createClass({
     group: PropTypes.Group.isRequired,
     event: PropTypes.Event.isRequired,
     orgId: React.PropTypes.string.isRequired,
-    projectId: React.PropTypes.string.isRequired,
+    project: React.PropTypes.object.isRequired,
     // TODO(dcramer): ideally isShare would be replaced with simple permission
     // checks
     isShare: React.PropTypes.bool
@@ -48,8 +48,13 @@ const EventEntries = React.createClass({
     let group = this.props.group;
     let evt = this.props.event;
     let isShare = this.props.isShare;
+    let project = this.props.project;
+    let projectFeatures = new Set(project.features);
 
     let entries = evt.entries.map((entry, entryIdx) => {
+      if (entry.type === 'breadcrumbs' && !projectFeatures.has('breadcrumbs')) {
+        return null;
+      }
       try {
         let Component = this.interfaces[entry.type];
         if (!Component) {
@@ -80,7 +85,6 @@ const EventEntries = React.createClass({
       }
     });
 
-    let {orgId, projectId} = this.props;
     return (
       <div>
         {evt.userReport &&
@@ -99,8 +103,8 @@ const EventEntries = React.createClass({
         <EventTags
           group={group}
           event={evt}
-          orgId={orgId}
-          projectId={projectId} />
+          orgId={this.props.orgId}
+          projectId={project.slug} />
         {!utils.objectIsEmpty(evt.user) &&
           <EventUser
             group={group}
diff --git a/src/sentry/static/sentry/app/views/groupEventDetails.jsx b/src/sentry/static/sentry/app/views/groupEventDetails.jsx
index 30db78b7e3..2543f25e87 100644
--- a/src/sentry/static/sentry/app/views/groupEventDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupEventDetails.jsx
@@ -113,7 +113,7 @@ const GroupEventDetails = React.createClass({
                 group={group}
                 event={evt}
                 orgId={params.orgId}
-                projectId={params.projectId} />
+                project={this.getProject()} />
             )}
           </div>
           <div className="col-md-3">
diff --git a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
index 368db40a8e..a3688b38da 100644
--- a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
+++ b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
@@ -95,7 +95,12 @@ const SharedGroupDetails = React.createClass({
             <div className="content">
               <SharedGroupHeader group={group} />
               <div className="group-overview">
-                <EventEntries group={group} event={evt} isShare={true} />
+                <EventEntries
+                  group={group}
+                  event={evt}
+                  orgId={group.project.organization.slug}
+                  project={group.project}
+                  isShare={true} />
               </div>
             </div>
           </div>
diff --git a/tests/sentry/api/endpoints/test_shared_group_details.py b/tests/sentry/api/endpoints/test_shared_group_details.py
index 92f162257d..d1a5f2c0cd 100644
--- a/tests/sentry/api/endpoints/test_shared_group_details.py
+++ b/tests/sentry/api/endpoints/test_shared_group_details.py
@@ -16,6 +16,8 @@ class SharedGroupDetailsTest(APITestCase):
         assert response.status_code == 200, response.content
         assert response.data['id'] == str(group.id)
         assert response.data['latestEvent']['id'] == str(event.id)
+        assert response.data['project']['slug'] == group.project.slug
+        assert response.data['project']['organization']['slug'] == group.organization.slug
 
     def test_feature_disabled(self):
         self.login_as(user=self.user)
