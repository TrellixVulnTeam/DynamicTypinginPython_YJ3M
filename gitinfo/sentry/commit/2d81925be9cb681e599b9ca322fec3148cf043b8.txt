commit 2d81925be9cb681e599b9ca322fec3148cf043b8
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 10 09:37:32 2015 -0700

    Functional new mute action

diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index f6c6158ad9..87516fdc5d 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -39,26 +39,6 @@ var GroupActions = React.createClass({
     });
   },
 
-  onToggleMute() {
-    var group = this.getGroup();
-    var project = this.getProject();
-    var org = this.getOrganization();
-    var loadingIndicator = IndicatorStore.add('Saving changes..');
-
-    api.bulkUpdate({
-      orgId: org.slug,
-      projectId: project.slug,
-      itemIds: [group.id],
-      data: {
-        status: group.status === 'muted' ? 'unresolved' : 'muted'
-      }
-    }, {
-      complete: () => {
-        IndicatorStore.remove(loadingIndicator);
-      }
-    });
-  },
-
   onToggleResolve() {
     var group = this.getGroup();
     var project = this.getProject();
@@ -132,26 +112,21 @@ var GroupActions = React.createClass({
             <span className="icon-trash"></span>
           </LinkWithConfirmation>
         </div>
-        <div className="btn-group more">
-          <DropdownLink
-              className="btn btn-default btn-sm"
-              title="More">
-            <MenuItem onSelect={this.onToggleMute} key="mute">
-              {group.status !== 'muted' ?
-                'Mute this event'
-              :
-                'Unmute this event'
-              }
-            </MenuItem>
-            {group.pluginActions.map((action, actionIdx) => {
-              return (
-                <MenuItem key={actionIdx} href={action[1]}>
-                  {action[0]}
-                </MenuItem>
-              );
-            })}
-          </DropdownLink>
-        </div>
+        {group.pluginActions.length !== 0 &&
+          <div className="btn-group more">
+            <DropdownLink
+                className="btn btn-default btn-sm"
+                title="More">
+              {group.pluginActions.map((action, actionIdx) => {
+                return (
+                  <MenuItem key={actionIdx} href={action[1]}>
+                    {action[0]}
+                  </MenuItem>
+                );
+              })}
+            </DropdownLink>
+          </div>
+        }
         <div className="severity">
           <span className="severity-indicator-bg">
             <span className="severity-indicator"></span>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index e089edcd47..137167085f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -8,17 +8,19 @@ var AssigneeSelector = require("../../components/assigneeSelector");
 var Count = require("../../components/count");
 var GroupActions = require("./actions");
 var GroupSeenBy = require("./seenBy");
-var GroupState = require("../../mixins/groupState");
+var IndicatorStore = require("../../stores/indicatorStore");
 var ListLink = require("../../components/listLink");
+var ProjectState = require("../../mixins/projectState");
 var PropTypes = require("../../proptypes");
 
 var GroupHeader = React.createClass({
+  mixins: [ProjectState],
+
   contextTypes: {
     router: React.PropTypes.func.isRequired
   },
 
   propTypes: {
-    group: PropTypes.Group.isRequired,
     memberList: React.PropTypes.instanceOf(Array).isRequired
   },
 
@@ -34,6 +36,26 @@ var GroupHeader = React.createClass({
     });
   },
 
+  onToggleMute() {
+    var group = this.props.group;
+    var project = this.getProject();
+    var org = this.getOrganization();
+    var loadingIndicator = IndicatorStore.add('Saving changes..');
+
+    api.bulkUpdate({
+      orgId: org.slug,
+      projectId: project.slug,
+      itemIds: [group.id],
+      data: {
+        status: group.status === 'muted' ? 'unresolved' : 'muted'
+      }
+    }, {
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
+    });
+  },
+
   render() {
     var group = this.props.group,
         userCount = 0;
@@ -87,7 +109,14 @@ var GroupHeader = React.createClass({
         <GroupActions />
         <div className="pull-right">
           <div className="group-notifications">
-            <a href="#"><span className="icon"></span>Turn notifications off</a>
+            <a onClick={this.onToggleMute}>
+              <span className="icon"></span>
+              {group.status !== 'muted' ?
+                'Turn notifications off'
+              :
+                'Turn notifications on'
+              }
+            </a>
           </div>
           <div className="group-privacy">
             <a href="#"><span className="icon"></span>Make this event public</a>
