commit 8b10c1884fae09b07f9d6f2eeed76ba57ea1467c
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Apr 16 15:08:11 2018 -0700

    fix(ui): Fix null commits/PR in Group Activity (#8027)

diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index 794a6e70c3..c0f276a109 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -126,7 +126,7 @@ class ActivityItem extends React.Component {
             <PullRequestLink
               inline={true}
               pullRequest={data.pullRequest}
-              repository={data.pullRequest.repository}
+              repository={data.pullRequest && data.pullRequest.repository}
             />
           ),
           issue: issueLink,
diff --git a/src/sentry/static/sentry/app/views/groupActivity/index.jsx b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
index ecb030f20d..77bb407060 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
@@ -1,41 +1,38 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {
+  addErrorMessage,
+  addLoadingMessage,
+  removeIndicator,
+} from '../../actionCreators/indicator';
+import {t, tct, tn} from '../../locale';
 import ApiMixin from '../../mixins/apiMixin';
-import GroupState from '../../mixins/groupState';
-
-import PullRequestLink from '../../views/releases/pullRequestLink';
-
+import Avatar from '../../components/avatar';
 import CommitLink from '../../components/commitLink';
+import ConfigStore from '../../stores/configStore';
 import Duration from '../../components/duration';
-import Avatar from '../../components/avatar';
-import TimeSince from '../../components/timeSince';
-import Version from '../../components/version';
+import ErrorBoundary from '../../components/errorBoundary';
+import GroupState from '../../mixins/groupState';
+import GroupStore from '../../stores/groupStore';
+import MemberListStore from '../../stores/memberListStore';
 import NoteContainer from '../../components/activity/noteContainer';
 import NoteInput from '../../components/activity/noteInput';
-
-import ConfigStore from '../../stores/configStore';
-import GroupStore from '../../stores/groupStore';
+import PullRequestLink from '../../views/releases/pullRequestLink';
 import TeamStore from '../../stores/teamStore';
-import IndicatorStore from '../../stores/indicatorStore';
-import MemberListStore from '../../stores/memberListStore';
-
-import {t, tct, tn} from '../../locale';
-
-const GroupActivity = createReactClass({
-  displayName: 'GroupActivity',
-
-  // TODO(dcramer): only re-render on group/activity change
-  propTypes: {
-    group: PropTypes.object,
-  },
+import TimeSince from '../../components/timeSince';
+import Version from '../../components/version';
 
-  mixins: [GroupState, ApiMixin],
+class GroupActivityItem extends React.Component {
+  static propTypes = {
+    author: PropTypes.node,
+    item: PropTypes.object,
+  };
 
-  formatActivity(author, item, params) {
-    let data = item.data;
+  render() {
+    let {author, item, params} = this.props;
+    let {data} = item;
     let {orgId, projectId} = params;
 
     switch (item.type) {
@@ -62,8 +59,8 @@ const GroupActivity = createReactClass({
           version: (
             <CommitLink
               inline={true}
-              commitId={data.commit.id}
-              repository={data.commit.repository}
+              commitId={data.commit && data.commit.id}
+              repository={data.commit && data.commit.repository}
             />
           ),
         });
@@ -74,7 +71,7 @@ const GroupActivity = createReactClass({
             <PullRequestLink
               inline={true}
               pullRequest={data.pullRequest}
-              repository={data.pullRequest.repository}
+              repository={data.pullRequest && data.pullRequest.repository}
             />
           ),
         });
@@ -199,8 +196,19 @@ const GroupActivity = createReactClass({
       default:
         return ''; // should never hit (?)
     }
+  }
+}
+
+const GroupActivity = createReactClass({
+  displayName: 'GroupActivity',
+
+  // TODO(dcramer): only re-render on group/activity change
+  propTypes: {
+    group: PropTypes.object,
   },
 
+  mixins: [GroupState, ApiMixin],
+
   onNoteDelete(item) {
     let {group} = this.props;
 
@@ -211,17 +219,17 @@ const GroupActivity = createReactClass({
       return;
     }
 
-    let loadingIndicator = IndicatorStore.add(t('Removing comment..'));
+    addLoadingMessage(t('Removing comment...'));
 
     this.api.request('/issues/' + group.id + '/comments/' + item.id + '/', {
       method: 'DELETE',
+      success: () => {
+        removeIndicator();
+      },
       error: error => {
-        // TODO(mattrobenolt): Show an actual error that this failed,
-        // but just bring it back in place for now
         GroupStore.addActivity(group.id, item, index);
-      },
-      complete: () => {
-        IndicatorStore.remove(loadingIndicator);
+        removeIndicator();
+        addErrorMessage(t('Failed to delete comment'));
       },
     });
   },
@@ -268,14 +276,18 @@ const GroupActivity = createReactClass({
             <a name={'event_' + item.id} />
             <TimeSince date={item.dateCreated} />
             <div className="activity-item-content">
-              {this.formatActivity(
-                <span key="author">
-                  {avatar}
-                  <span className="activity-author">{author.name}</span>
-                </span>,
-                item,
-                this.props.params
-              )}
+              <ErrorBoundary mini>
+                <GroupActivityItem
+                  author={
+                    <span key="author">
+                      {avatar}
+                      <span className="activity-author">{author.name}</span>
+                    </span>
+                  }
+                  item={item}
+                  params={this.props.params}
+                />
+              </ErrorBoundary>
             </div>
           </li>
         );
