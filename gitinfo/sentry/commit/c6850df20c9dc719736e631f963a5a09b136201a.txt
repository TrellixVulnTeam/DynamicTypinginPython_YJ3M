commit c6850df20c9dc719736e631f963a5a09b136201a
Author: Max Bittker <maxbittker@gmail.com>
Date:   Tue Sep 5 15:36:04 2017 -0700

    parse platform from query in onboarding (#5997)
    
     on boarding url param parsing and test cases

diff --git a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
index 755818e84d..9308e118b1 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
@@ -33,15 +33,17 @@ const CreateProject = React.createClass({
   getInitialState() {
     let {teams} = this.getOrganization();
     let accessTeams = teams.filter(team => team.hasAccess);
+    let {query} = this.context.location;
+
+    let team = query.team || (accessTeams.length && accessTeams[0].slug);
+    let platform = getPlatformName(query.platform) ? query.platform : '';
 
-    let team =
-      this.context.location.query.team || (accessTeams.length && accessTeams[0].slug);
     return {
       loading: true,
       error: false,
-      platform: '',
-      projectName: '',
+      projectName: getPlatformName(platform) || '',
       team,
+      platform,
       inFlight: false
     };
   },
@@ -113,6 +115,7 @@ const CreateProject = React.createClass({
       teams: accessTeams,
       setTeam: teamSlug => this.setState({team: teamSlug})
     };
+
     return (
       <div>
         {error && <h2 className="alert alert-error">{error}</h2>}
diff --git a/src/sentry/static/sentry/app/views/onboarding/onboarding.less b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
index b1fe08f84b..ba76f0b2f7 100644
--- a/src/sentry/static/sentry/app/views/onboarding/onboarding.less
+++ b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
@@ -157,10 +157,6 @@
   .install .install-content {
     padding-left: 15px; // Fix .row negative margin
   }
-
-  .new-project-name{
-    position: sticky;
-  }
 }
 
 .create-project-form{
@@ -171,6 +167,10 @@
   padding: 20px 0;
   box-shadow: 0 -1px 0 rgba(0, 0, 0, .1);
 
+  position: sticky;
+  bottom: 0;
+  background: white;
+
   p{
     margin-top: 20px;
     color: @50;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
index b18c5ce974..a25ece59ab 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
@@ -7,7 +7,7 @@ import PlatformiconTile from './platformiconTile';
 import SelectInput from '../../../components/selectInput';
 import {t} from '../../../locale';
 
-const Project = React.createClass({
+const OnboardingProject = React.createClass({
   propTypes: {
     next: PropTypes.func,
     setPlatform: PropTypes.func,
@@ -105,4 +105,4 @@ const Project = React.createClass({
   }
 });
 
-export default Project;
+export default OnboardingProject;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
index 37d91706a1..29af7051a9 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -23,7 +23,7 @@ const PlatformPicker = React.createClass({
   getInitialState() {
     return {
       tab: categoryList[0],
-      filter: ''
+      filter: (this.props.platform || '').split('-')[0]
     };
   },
 
@@ -103,8 +103,7 @@ const PlatformPicker = React.createClass({
                   e.preventDefault();
                 }}
                 to={''}
-                isActive={() =>
-                  (filter ? categoryName === 'All' : categoryName === this.state.tab)}>
+                isActive={() => categoryName === (filter ? 'All' : this.state.tab)}>
                 {categoryName}
               </ListLink>
             );
diff --git a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
index 746fe10e77..97a2ad1e68 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
@@ -18,6 +18,1126 @@ exports[`CreateProject render() should block if you have access to no teams 1`]
 </div>
 `;
 
+exports[`CreateProject render() should deal with incorrect platform name if its provided by url 1`] = `
+<CreateProject
+  getDocsUrl={[Function]}
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "orgId": "testOrg",
+      "projectId": "",
+    }
+  }
+>
+  <div>
+    <OnboardingProject
+      name=""
+      next={[Function]}
+      platform=""
+      setName={[Function]}
+      setPlatform={[Function]}
+      setTeam={[Function]}
+      team="test"
+      teams={
+        Array [
+          Object {
+            "hasAccess": true,
+            "id": "1",
+            "name": "test",
+            "slug": "test",
+          },
+        ]
+      }
+    >
+      <div
+        className="onboarding-info"
+      >
+        <h4>
+          Choose a language or framework:
+        </h4>
+        <PlatformPicker
+          name=""
+          next={[Function]}
+          platform=""
+          setName={[Function]}
+          setPlatform={[Function]}
+          setTeam={[Function]}
+          showOther={true}
+          team="test"
+          teams={
+            Array [
+              Object {
+                "hasAccess": true,
+                "id": "1",
+                "name": "test",
+                "slug": "test",
+              },
+            ]
+          }
+        >
+          <div
+            className="platform-picker"
+          >
+            <ul
+              className="nav nav-tabs"
+            >
+              <li
+                style={
+                  Object {
+                    "float": "right",
+                    "marginRight": 0,
+                  }
+                }
+              >
+                <div
+                  className="platform-filter-container"
+                >
+                  <span
+                    className="icon icon-search"
+                  />
+                  <input
+                    className="platform-filter"
+                    label="Filter"
+                    onChange={[Function]}
+                    placeholder="Filter"
+                    type="text"
+                    value=""
+                  />
+                </div>
+              </li>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className="active"
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Popular
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Frontend
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Mobile
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Backend
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      All
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+            </ul>
+            <ul
+              className="client-platform-list platform-tiles"
+            >
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="csharp"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="csharp"
+                  >
+                    <li
+                      className="platform-tile list-unstyled csharp csharp "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-csharp"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    C#
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="java"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="java"
+                  >
+                    <li
+                      className="platform-tile list-unstyled java java "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-java"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Java
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="javascript-angular"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="javascript-angular"
+                  >
+                    <li
+                      className="platform-tile list-unstyled javascript-angular javascript "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-javascript-angular"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Angular
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="javascript"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="javascript"
+                  >
+                    <li
+                      className="platform-tile list-unstyled javascript javascript "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-javascript"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    JavaScript
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="javascript-react"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="javascript-react"
+                  >
+                    <li
+                      className="platform-tile list-unstyled javascript-react javascript "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-javascript-react"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    React
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="node-express"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="node-express"
+                  >
+                    <li
+                      className="platform-tile list-unstyled node-express node "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-node-express"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Express
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="node"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="node"
+                  >
+                    <li
+                      className="platform-tile list-unstyled node node "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-node"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Node.js
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="php-laravel"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="php-laravel"
+                  >
+                    <li
+                      className="platform-tile list-unstyled php-laravel php "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-php-laravel"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Laravel
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="php"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="php"
+                  >
+                    <li
+                      className="platform-tile list-unstyled php php "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-php"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    PHP
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="php-symfony2"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="php-symfony2"
+                  >
+                    <li
+                      className="platform-tile list-unstyled php-symfony2 php "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-php-symfony2"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Symfony2
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="python-django"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="python-django"
+                  >
+                    <li
+                      className="platform-tile list-unstyled python-django python "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-python-django"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Django
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="python-flask"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="python-flask"
+                  >
+                    <li
+                      className="platform-tile list-unstyled python-flask python "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-python-flask"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Flask
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="python"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="python"
+                  >
+                    <li
+                      className="platform-tile list-unstyled python python "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-python"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Python
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="cocoa"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="cocoa"
+                  >
+                    <li
+                      className="platform-tile list-unstyled cocoa cocoa "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-cocoa"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    React-Native
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="ruby-rails"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="ruby-rails"
+                  >
+                    <li
+                      className="platform-tile list-unstyled ruby-rails ruby "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-ruby-rails"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Rails
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="ruby"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="ruby"
+                  >
+                    <li
+                      className="platform-tile list-unstyled ruby ruby "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-ruby"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Ruby
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+            </ul>
+          </div>
+        </PlatformPicker>
+        <div
+          className="create-project-form"
+        >
+          <div
+            className="new-project-name client-platform"
+          >
+            <h4>
+              Give your project a name:
+            </h4>
+            <div
+              className="project-name-wrapper"
+            >
+              <PlatformiconTile
+                platform=""
+              >
+                <li
+                  className="platform-tile list-unstyled   undefined"
+                >
+                  <span
+                    className="platformicon platformicon-"
+                  />
+                </li>
+              </PlatformiconTile>
+              <input
+                autoComplete="off"
+                label="Project Name"
+                name="name"
+                onChange={[Function]}
+                placeholder="Project name"
+                type="text"
+                value=""
+              />
+            </div>
+          </div>
+          <div>
+            <button
+              className="btn btn-primary submit-new-team"
+              onClick={[Function]}
+            >
+              Create Project
+            </button>
+          </div>
+          <p>
+            Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects your API server and frontend client.
+          </p>
+        </div>
+      </div>
+    </OnboardingProject>
+  </div>
+</CreateProject>
+`;
+
+exports[`CreateProject render() should fill in platform name if its provided by url 1`] = `
+<CreateProject
+  getDocsUrl={[Function]}
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "orgId": "testOrg",
+      "projectId": "",
+    }
+  }
+>
+  <div>
+    <OnboardingProject
+      name="Ruby"
+      next={[Function]}
+      platform="ruby"
+      setName={[Function]}
+      setPlatform={[Function]}
+      setTeam={[Function]}
+      team="test"
+      teams={
+        Array [
+          Object {
+            "hasAccess": true,
+            "id": "1",
+            "name": "test",
+            "slug": "test",
+          },
+        ]
+      }
+    >
+      <div
+        className="onboarding-info"
+      >
+        <h4>
+          Choose a language or framework:
+        </h4>
+        <PlatformPicker
+          name="Ruby"
+          next={[Function]}
+          platform="ruby"
+          setName={[Function]}
+          setPlatform={[Function]}
+          setTeam={[Function]}
+          showOther={true}
+          team="test"
+          teams={
+            Array [
+              Object {
+                "hasAccess": true,
+                "id": "1",
+                "name": "test",
+                "slug": "test",
+              },
+            ]
+          }
+        >
+          <div
+            className="platform-picker"
+          >
+            <ul
+              className="nav nav-tabs"
+            >
+              <li
+                style={
+                  Object {
+                    "float": "right",
+                    "marginRight": 0,
+                  }
+                }
+              >
+                <div
+                  className="platform-filter-container"
+                >
+                  <span
+                    className="icon icon-search"
+                  />
+                  <input
+                    className="platform-filter"
+                    label="Filter"
+                    onChange={[Function]}
+                    placeholder="Filter"
+                    type="text"
+                    value="ruby"
+                  />
+                </div>
+              </li>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Popular
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Frontend
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Mobile
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className=""
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      Backend
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+              <ListLink
+                activeClassName="active"
+                index={false}
+                isActive={[Function]}
+                onClick={[Function]}
+                to=""
+              >
+                <li
+                  className="active"
+                >
+                  <Link
+                    onClick={[Function]}
+                    onlyActiveOnIndex={false}
+                    style={Object {}}
+                    to=""
+                  >
+                    <a
+                      onClick={[Function]}
+                      style={Object {}}
+                    >
+                      All
+                    </a>
+                  </Link>
+                </li>
+              </ListLink>
+            </ul>
+            <ul
+              className="client-platform-list platform-tiles"
+            >
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="ruby-rack"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="ruby-rack"
+                  >
+                    <li
+                      className="platform-tile list-unstyled ruby-rack ruby "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-ruby-rack"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Rack
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className=""
+                onClick={[Function]}
+                platform="ruby-rails"
+              >
+                <span
+                  className="platform-card"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className=""
+                    onClick={[Function]}
+                    platform="ruby-rails"
+                  >
+                    <li
+                      className="platform-tile list-unstyled ruby-rails ruby "
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-ruby-rails"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Rails
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+              <PlatformCard
+                className="selected"
+                onClick={[Function]}
+                platform="ruby"
+              >
+                <span
+                  className="platform-card selected"
+                  onClick={[Function]}
+                >
+                  <PlatformiconTile
+                    className="selected"
+                    onClick={[Function]}
+                    platform="ruby"
+                  >
+                    <li
+                      className="platform-tile list-unstyled ruby ruby selected"
+                      onClick={[Function]}
+                    >
+                      <span
+                        className="platformicon platformicon-ruby"
+                      />
+                    </li>
+                  </PlatformiconTile>
+                  <h5>
+                     
+                    Ruby
+                     
+                  </h5>
+                </span>
+              </PlatformCard>
+            </ul>
+          </div>
+        </PlatformPicker>
+        <div
+          className="create-project-form"
+        >
+          <div
+            className="new-project-name client-platform"
+          >
+            <h4>
+              Give your project a name:
+            </h4>
+            <div
+              className="project-name-wrapper"
+            >
+              <PlatformiconTile
+                platform="ruby"
+              >
+                <li
+                  className="platform-tile list-unstyled ruby ruby undefined"
+                >
+                  <span
+                    className="platformicon platformicon-ruby"
+                  />
+                </li>
+              </PlatformiconTile>
+              <input
+                autoComplete="off"
+                label="Project Name"
+                name="name"
+                onChange={[Function]}
+                placeholder="Project name"
+                type="text"
+                value="Ruby"
+              />
+            </div>
+          </div>
+          <div>
+            <button
+              className="btn btn-primary submit-new-team"
+              onClick={[Function]}
+            >
+              Create Project
+            </button>
+          </div>
+          <p>
+            Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects your API server and frontend client.
+          </p>
+        </div>
+      </div>
+    </OnboardingProject>
+  </div>
+</CreateProject>
+`;
+
 exports[`CreateProject render() should fill in project name if its empty when platform is chosen 1`] = `
 <CreateProject
   getDocsUrl={[Function]}
@@ -34,7 +1154,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
   }
 >
   <div>
-    <Project
+    <OnboardingProject
       name="another"
       next={[Function]}
       platform="csharp"
@@ -768,7 +1888,7 @@ exports[`CreateProject render() should fill in project name if its empty when pl
           </p>
         </div>
       </div>
-    </Project>
+    </OnboardingProject>
   </div>
 </CreateProject>
 `;
diff --git a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
index 60f52785ec..83a1793931 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
@@ -109,7 +109,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
         </div>
       </ProgressNodes>
       <div>
-        <Project
+        <OnboardingProject
           name=""
           next={[Function]}
           platform=""
@@ -825,7 +825,7 @@ exports[`OnboardingWizard render() should render and respond to click events 1`]
               </p>
             </div>
           </div>
-        </Project>
+        </OnboardingProject>
       </div>
     </div>
   </div>
@@ -919,7 +919,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
         </div>
       </ProgressNodes>
       <div>
-        <Project
+        <OnboardingProject
           name=""
           next={[Function]}
           platform=""
@@ -1635,7 +1635,7 @@ exports[`OnboardingWizard render() should render and respond to click events 2`]
               </p>
             </div>
           </div>
-        </Project>
+        </OnboardingProject>
       </div>
     </div>
   </div>
diff --git a/tests/js/spec/views/onboarding/createProject.spec.jsx b/tests/js/spec/views/onboarding/createProject.spec.jsx
index 43fb9e268f..c07e006c2b 100644
--- a/tests/js/spec/views/onboarding/createProject.spec.jsx
+++ b/tests/js/spec/views/onboarding/createProject.spec.jsx
@@ -3,7 +3,6 @@ import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
 import CreateProject from 'app/views/onboarding/createProject';
-import Project from 'app/views/onboarding/project';
 
 describe('CreateProject', function() {
   beforeEach(function() {
@@ -48,16 +47,7 @@ describe('CreateProject', function() {
 
     it('should fill in project name if its empty when platform is chosen', function() {
       let props = {
-        ...baseProps,
-        children: (
-          <Project
-            next={jest.fn()}
-            platform={''}
-            setName={jest.fn()}
-            name={''}
-            setPlatform={jest.fn()}
-          />
-        )
+        ...baseProps
       };
 
       let wrapper = mount(<CreateProject {...props} />, {
@@ -94,5 +84,59 @@ describe('CreateProject', function() {
 
       expect(wrapper).toMatchSnapshot();
     });
+
+    it('should fill in platform name if its provided by url', function() {
+      let props = {
+        ...baseProps
+      };
+
+      let wrapper = mount(<CreateProject {...props} />, {
+        context: {
+          organization: {
+            id: '1',
+            slug: 'testOrg',
+            teams: [{slug: 'test', id: '1', name: 'test', hasAccess: true}]
+          },
+          router: TestStubs.router(),
+          location: {query: {platform: 'ruby'}}
+        },
+        childContextTypes: {
+          router: React.PropTypes.object,
+          organization: React.PropTypes.object,
+          location: React.PropTypes.object
+        }
+      });
+
+      expect(wrapper.state().projectName).toBe('Ruby');
+
+      expect(wrapper).toMatchSnapshot();
+    });
+
+    it('should deal with incorrect platform name if its provided by url', function() {
+      let props = {
+        ...baseProps
+      };
+
+      let wrapper = mount(<CreateProject {...props} />, {
+        context: {
+          organization: {
+            id: '1',
+            slug: 'testOrg',
+            teams: [{slug: 'test', id: '1', name: 'test', hasAccess: true}]
+          },
+          router: TestStubs.router(),
+          location: {query: {platform: 'XrubyROOLs'}}
+        },
+        childContextTypes: {
+          router: React.PropTypes.object,
+          organization: React.PropTypes.object,
+          location: React.PropTypes.object
+        }
+      });
+
+      expect(wrapper.state().projectName).toBe('');
+
+      expect(wrapper).toMatchSnapshot();
+    });
   });
 });
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
index f6254df81f..f1be60b5b6 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
@@ -70,7 +70,7 @@ exports[`Project render() should render NotFound if no matching organization 1`]
 `;
 
 exports[`Project render() should set required class on empty submit 1`] = `
-<Project
+<OnboardingProject
   location={
     Object {
       "query": Object {},
@@ -808,5 +808,5 @@ exports[`Project render() should set required class on empty submit 1`] = `
       </p>
     </div>
   </div>
-</Project>
+</OnboardingProject>
 `;
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
index 681fc596de..6b3e1db39c 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
@@ -324,13 +324,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
       "query": Object {},
     }
   }
-  params={
-    Object {
-      "isActive": "",
-      "platform": "",
-      "setPlatform": "",
-    }
-  }
+  platform=""
   setPlatform={[Function]}
   showOther={true}
 >
diff --git a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
index 09d279cf5c..eedc9df83b 100644
--- a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
+++ b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
@@ -18,13 +18,9 @@ describe('PlatformPicker', function() {
 
   describe('render()', function() {
     const baseProps = {
+      platform: '',
       setPlatform: () => {},
-      location: {query: {}},
-      params: {
-        setPlatform: '',
-        platform: '',
-        isActive: ''
-      }
+      location: {query: {}}
     };
 
     it('should only render Mobile platforms under Mobile tab', function() {
