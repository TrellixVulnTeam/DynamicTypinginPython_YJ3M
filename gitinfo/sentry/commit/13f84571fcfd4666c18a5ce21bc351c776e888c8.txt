commit 13f84571fcfd4666c18a5ce21bc351c776e888c8
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Oct 24 21:07:32 2013 -0700

    Allow read choice to be customized

diff --git a/src/sentry/nodestore/multi/backend.py b/src/sentry/nodestore/multi/backend.py
index 0656f744cf..b8b971ab64 100644
--- a/src/sentry/nodestore/multi/backend.py
+++ b/src/sentry/nodestore/multi/backend.py
@@ -25,9 +25,9 @@ class MultiNodeStorage(NodeStorage):
     >>> MultiNodeStorage(backends=[
     >>>     ('sentry.nodestore.django.backend.DjangoNodeStorage', {}),
     >>>     ('sentry.nodestore.riak.backend.RiakNodeStorage', {}),
-    >>> ])
+    >>> ], read_selector=random.choice)
     """
-    def __init__(self, backends, **kwargs):
+    def __init__(self, backends, read_selector=random.choice, **kwargs):
         assert backends, "you should provide at least one backend"
 
         self.backends = []
@@ -35,15 +35,16 @@ class MultiNodeStorage(NodeStorage):
             if isinstance(backend, basestring):
                 backend = import_string(backend)
             self.backends.append(backend(**backend_options))
+        self.read_selector = read_selector
         super(MultiNodeStorage, self).__init__(**kwargs)
 
     def get(self, id):
         # just fetch it from a random backend, we're not aiming for consistency
-        backend = random.choice(self.backends)
+        backend = self.read_selector(self.backends)
         return backend.get(id)
 
     def get_multi(self, id_list):
-        backend = random.choice(self.backends)
+        backend = self.read_selector(self.backends)
         return backend.get_multi(id_list=id_list)
 
     def set(self, id, data):
