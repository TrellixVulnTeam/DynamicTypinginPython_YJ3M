commit 8de4273ebc624d463057d4d1b7633f58ee80b396
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Wed May 15 12:31:10 2019 +0200

    fix: Pass correct platform when trimming functions (#13217)
    
    * fix: Pass correct platform when trimming functions
    
    * fix: We know the platform is native

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 8334dc7244..428e48f2e6 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -386,11 +386,10 @@ class NativeStacktraceProcessor(StacktraceProcessor):
         else:  # processable_frame.cache_value is present
             _ignored, symbolicated_frames = processable_frame.cache_value
 
-        platform = raw_frame.get('platform') or self.data.get('platform')
         new_frames = []
         for sfrm in symbolicated_frames:
             new_frame = dict(raw_frame)
-            merge_symbolicated_frame(new_frame, sfrm, platform=platform)
+            merge_symbolicated_frame(new_frame, sfrm)
             new_frames.append(new_frame)
 
         return new_frames, [raw_frame], []
diff --git a/src/sentry/lang/native/utils.py b/src/sentry/lang/native/utils.py
index 3c2abf62da..ece5802b2e 100644
--- a/src/sentry/lang/native/utils.py
+++ b/src/sentry/lang/native/utils.py
@@ -95,10 +95,10 @@ def signal_from_data(data):
     return None
 
 
-def merge_symbolicated_frame(new_frame, sfrm, platform=None):
+def merge_symbolicated_frame(new_frame, sfrm):
     if sfrm.get('function'):
         raw_func = trim(sfrm['function'], 256)
-        func = trim(trim_function_name(sfrm['function'], platform), 256)
+        func = trim(trim_function_name(sfrm['function'], 'native'), 256)
 
         # if function and raw function match, we can get away without
         # storing a raw function
