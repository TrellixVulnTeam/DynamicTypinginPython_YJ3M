commit 3674be23d3c91be80faafeb5b9b302da656aaa44
Author: Scott Cooper <scttcper@gmail.com>
Date:   Tue Jun 9 11:55:11 2020 -0700

    fix(ui): Add new alert status icons (#19076)

diff --git a/src/sentry/static/sentry/app/components/dropdownButton.tsx b/src/sentry/static/sentry/app/components/dropdownButton.tsx
index ca9fa73258..c431e2b564 100644
--- a/src/sentry/static/sentry/app/components/dropdownButton.tsx
+++ b/src/sentry/static/sentry/app/components/dropdownButton.tsx
@@ -18,6 +18,10 @@ type Props = React.ComponentProps<typeof Button> & {
    * Should a chevron icon be shown?
    */
   showChevron?: boolean;
+  /**
+   * Should the bottom border become transparent when open?
+   */
+  hideBottomBorder?: boolean;
   forwardedRef?: React.Ref<typeof Button>;
 };
 
@@ -27,9 +31,16 @@ const DropdownButton = ({
   forwardedRef,
   prefix,
   showChevron = false,
+  hideBottomBorder = true,
   ...props
 }: Props) => (
-  <StyledButton type="button" isOpen={isOpen} ref={forwardedRef} {...props}>
+  <StyledButton
+    type="button"
+    isOpen={isOpen}
+    hideBottomBorder={hideBottomBorder}
+    ref={forwardedRef}
+    {...props}
+  >
     {prefix && <LabelText>{prefix}:</LabelText>}
     {children}
     {showChevron && <StyledChevron size="10px" direction={isOpen ? 'up' : 'down'} />}
@@ -44,18 +55,22 @@ const StyledChevron = styled(IconChevron)`
   margin-left: 0.33em;
 `;
 
-const StyledButton = styled(Button)<Pick<Props, 'isOpen' | 'disabled'>>`
+const StyledButton = styled(Button)<
+  Pick<Props, 'isOpen' | 'disabled' | 'hideBottomBorder'>
+>`
   border-bottom-right-radius: ${p => (p.isOpen ? 0 : p.theme.borderRadius)};
   border-bottom-left-radius: ${p => (p.isOpen ? 0 : p.theme.borderRadius)};
   position: relative;
   z-index: 2;
   box-shadow: ${p => (p.isOpen || p.disabled ? 'none' : p.theme.dropShadowLight)};
-  border-bottom-color: ${p => (p.isOpen ? 'transparent' : p.theme.borderDark)};
+  border-bottom-color: ${p =>
+    p.isOpen && p.hideBottomBorder ? 'transparent' : p.theme.borderDark};
 
   &:active,
   &:focus,
   &:hover {
-    border-bottom-color: ${p => (p.isOpen ? 'transparent' : p.theme.borderDark)};
+    border-bottom-color: ${p =>
+      p.isOpen && p.hideBottomBorder ? 'transparent' : p.theme.borderDark};
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/views/alerts/details/header.tsx b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
index a0492ef4db..2b147e8fac 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/header.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
@@ -41,17 +41,26 @@ export default class DetailsHeader extends React.Component<Props> {
     const {incident, onStatusChange} = this.props;
 
     const isIncidentOpen = incident && isOpen(incident);
-    const statusLabel = incident ? <Status incident={incident} /> : null;
+    const statusLabel = incident ? <StyledStatus incident={incident} /> : null;
 
     return (
       <DropdownControl
         data-test-id="status-dropdown"
         label={statusLabel}
-        buttonProps={{size: 'small', disabled: !incident || !isIncidentOpen}}
+        alignRight
+        blendWithActor={false}
+        buttonProps={{
+          size: 'small',
+          disabled: !incident || !isIncidentOpen,
+          hideBottomBorder: false,
+        }}
       >
+        <StatusMenuItem isActive>
+          {incident && <Status disableIconColor incident={incident} />}
+        </StatusMenuItem>
         <StatusMenuItem onSelect={onStatusChange}>
           <IconCheckmark color="green400" />
-          {t('Resolve')}
+          {t('Resolved')}
         </StatusMenuItem>
       </DropdownControl>
     );
@@ -247,13 +256,20 @@ const IncidentSubTitle = styled('div', {
   color: ${p => p.theme.gray500};
 `;
 
+const StyledStatus = styled(Status)`
+  margin-right: ${space(2)};
+`;
+
 const StatusMenuItem = styled(MenuItem)`
   > span {
-    font-size: ${p => p.theme.fontSizeMedium};
+    padding: ${space(1)} ${space(1.5)};
+    font-size: ${p => p.theme.fontSizeSmall};
+    font-weight: 600;
+    line-height: 1;
     text-align: left;
     display: grid;
     grid-template-columns: max-content 1fr;
-    grid-gap: ${space(0.5)};
+    grid-gap: ${space(0.75)};
     align-items: center;
   }
 `;
diff --git a/src/sentry/static/sentry/app/views/alerts/status.tsx b/src/sentry/static/sentry/app/views/alerts/status.tsx
index 5372378cbc..9b940acba2 100644
--- a/src/sentry/static/sentry/app/views/alerts/status.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/status.tsx
@@ -2,34 +2,38 @@ import React from 'react';
 import styled from '@emotion/styled';
 
 import {t} from 'app/locale';
-import InlineSvg from 'app/components/inlineSvg';
 import space from 'app/styles/space';
+import {IconCheckmark, IconWarning, IconFire} from 'app/icons';
 
 import {Incident, IncidentStatus} from './types';
 
 type Props = {
   className?: string;
   incident: Incident;
-  isSmall?: boolean;
+  /**
+   * Use inherited color for icons
+   */
+  disableIconColor?: boolean;
 };
 
-const Status = ({className, incident, isSmall}: Props) => {
+const Status = ({className, incident, disableIconColor}: Props) => {
   const {status} = incident;
-  const isIncidentOpen = status !== IncidentStatus.CLOSED;
   const isResolved = status === IncidentStatus.CLOSED;
   const isWarning = status === IncidentStatus.WARNING;
 
-  const icon = isResolved
-    ? 'icon-circle-check'
-    : isWarning
-    ? 'icon-warning-sm'
-    : 'icon-circle-exclamation';
+  const icon = isResolved ? (
+    <IconCheckmark color={disableIconColor ? undefined : 'green400'} />
+  ) : isWarning ? (
+    <IconWarning color={disableIconColor ? undefined : 'orange400'} />
+  ) : (
+    <IconFire color={disableIconColor ? undefined : 'red400'} />
+  );
 
   const text = isResolved ? t('Resolved') : isWarning ? t('Warning') : t('Critical');
 
   return (
-    <Wrapper className={className} isSmall={!!isSmall}>
-      <Icon src={icon} status={status} isOpen={isIncidentOpen} />
+    <Wrapper className={className}>
+      <Icon>{icon}</Icon>
       {text}
     </Wrapper>
   );
@@ -37,27 +41,14 @@ const Status = ({className, incident, isSmall}: Props) => {
 
 export default Status;
 
-type WrapperProps = {status: IncidentStatus};
-
-function getColor({theme, status}) {
-  if (status === IncidentStatus.CLOSED) {
-    return theme.green500;
-  } else if (status === IncidentStatus.WARNING) {
-    return theme.yellowDark;
-  }
-
-  return theme.redDark;
-}
-
-const Wrapper = styled('div')<{isSmall: boolean}>`
-  display: flex;
+const Wrapper = styled('div')`
+  display: grid;
+  grid-auto-flow: column;
   align-items: center;
-  justify-self: flex-start;
-  ${p => p.isSmall && `font-size: ${p.theme.fontSizeSmall};`};
+  grid-template-columns: auto 1fr;
+  grid-gap: ${space(0.75)};
 `;
 
-const Icon = styled(InlineSvg)<WrapperProps & {isOpen: boolean}>`
-  color: ${getColor};
-  margin-right: ${space(0.5)};
-  font-size: ${p => p.theme.fontSizeMedium};
+const Icon = styled('span')`
+  margin-bottom: -3px;
 `;
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 0527214d08..41c233bcec 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -188,12 +188,14 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                     size="xsmall"
                                   >
                                     <StyledButton
+                                      hideBottomBorder={true}
                                       isOpen={false}
                                       size="xsmall"
                                       type="button"
                                     >
                                       <forwardRef<Button>
                                         className="css-1k1xa0j-StyledButton eenpoef1"
+                                        hideBottomBorder={true}
                                         isOpen={false}
                                         size="xsmall"
                                         type="button"
@@ -203,6 +205,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                           className="css-1k1xa0j-StyledButton eenpoef1"
                                           disabled={false}
                                           forwardRef={null}
+                                          hideBottomBorder={true}
                                           isOpen={false}
                                           size="xsmall"
                                           type="button"
@@ -212,6 +215,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                             className="css-1k1xa0j-StyledButton eenpoef1"
                                             disabled={false}
                                             forwardRef={null}
+                                            hideBottomBorder={true}
                                             isOpen={false}
                                             onClick={[Function]}
                                             role="button"
diff --git a/tests/js/spec/views/alerts/details/index.spec.jsx b/tests/js/spec/views/alerts/details/index.spec.jsx
index 718b94c9d8..4593035a0e 100644
--- a/tests/js/spec/views/alerts/details/index.spec.jsx
+++ b/tests/js/spec/views/alerts/details/index.spec.jsx
@@ -130,11 +130,16 @@ describe('IncidentDetails', function() {
 
     expect(activitiesList).toHaveBeenCalledTimes(1);
 
-    expect(wrapper.find('Status').text()).not.toBe('Resolved');
+    expect(
+      wrapper
+        .find('Status')
+        .at(0)
+        .text()
+    ).not.toBe('Resolved');
     wrapper.find('[data-test-id="status-dropdown"] DropdownButton').simulate('click');
     wrapper
       .find('[data-test-id="status-dropdown"] MenuItem span')
-      .at(0)
+      .at(2)
       .simulate('click');
 
     await tick();
@@ -148,7 +153,12 @@ describe('IncidentDetails', function() {
 
     // Refresh activities list since status changes also creates an activity
     expect(activitiesList).toHaveBeenCalledTimes(2);
-    expect(wrapper.find('Status').text()).toBe('Resolved');
+    expect(
+      wrapper
+        .find('Status')
+        .at(0)
+        .text()
+    ).toBe('Resolved');
   });
 
   it('allows members to change issuet status', async function() {
@@ -162,7 +172,12 @@ describe('IncidentDetails', function() {
     await tick();
     wrapper.update();
 
-    expect(wrapper.find('Status').text()).not.toBe('Resolved');
+    expect(
+      wrapper
+        .find('Status')
+        .at(0)
+        .text()
+    ).not.toBe('Resolved');
     expect(wrapper.find('[data-test-id="status-dropdown"] DropdownButton').exists()).toBe(
       true
     );
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index 380ae9b15c..218b544d56 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -611,6 +611,7 @@ exports[`InviteMember should render roles when available and allowed, and handle
                                         >
                                           <StyledButton
                                             aria-label="Add Team"
+                                            hideBottomBorder={true}
                                             isOpen={false}
                                             size="xsmall"
                                             type="button"
@@ -618,6 +619,7 @@ exports[`InviteMember should render roles when available and allowed, and handle
                                             <forwardRef<Button>
                                               aria-label="Add Team"
                                               className="css-1k1xa0j-StyledButton eenpoef1"
+                                              hideBottomBorder={true}
                                               isOpen={false}
                                               size="xsmall"
                                               type="button"
@@ -628,6 +630,7 @@ exports[`InviteMember should render roles when available and allowed, and handle
                                                 className="css-1k1xa0j-StyledButton eenpoef1"
                                                 disabled={false}
                                                 forwardRef={null}
+                                                hideBottomBorder={true}
                                                 isOpen={false}
                                                 size="xsmall"
                                                 type="button"
@@ -638,6 +641,7 @@ exports[`InviteMember should render roles when available and allowed, and handle
                                                   className="css-1k1xa0j-StyledButton eenpoef1"
                                                   disabled={false}
                                                   forwardRef={null}
+                                                  hideBottomBorder={true}
                                                   isOpen={false}
                                                   onClick={[Function]}
                                                   role="button"
