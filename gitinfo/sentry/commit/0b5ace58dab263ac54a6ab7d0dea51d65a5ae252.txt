commit 0b5ace58dab263ac54a6ab7d0dea51d65a5ae252
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Tue Jul 11 13:54:54 2017 -0700

    Implemenet feedback

diff --git a/src/sentry/api/endpoints/group_tombstone.py b/src/sentry/api/endpoints/group_tombstone.py
index 181b016e19..308950328d 100644
--- a/src/sentry/api/endpoints/group_tombstone.py
+++ b/src/sentry/api/endpoints/group_tombstone.py
@@ -4,9 +4,7 @@ from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 
-from sentry.models import (
-    GroupHash, GroupTombstone
-)
+from sentry.models import GroupTombstone
 
 
 class GroupTombstoneEndpoint(ProjectEndpoint):
@@ -24,9 +22,7 @@ class GroupTombstoneEndpoint(ProjectEndpoint):
         :auth: required
         """
         queryset = GroupTombstone.objects.filter(
-            id__in=GroupHash.objects.filter(
-                project=project
-            ).values_list('group_tombstone', flat=True)
+            project=project
         )
 
         return self.paginate(
diff --git a/src/sentry/api/endpoints/group_tombstone_details.py b/src/sentry/api/endpoints/group_tombstone_details.py
index 4a456b723e..146c0c8c65 100644
--- a/src/sentry/api/endpoints/group_tombstone_details.py
+++ b/src/sentry/api/endpoints/group_tombstone_details.py
@@ -2,18 +2,16 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.api.bases import Endpoint
-from sentry.api.bases.group import GroupPermission
+from sentry.api.bases import ProjectEndpoint
 
 from sentry.models import (
     GroupHash, GroupTombstone,
 )
 
 
-class GroupTombstoneDetailsEndpoint(Endpoint):
-    permission_classes = (GroupPermission,)
+class GroupTombstoneDetailsEndpoint(ProjectEndpoint):
 
-    def delete(self, request, tombstone_id):
+    def delete(self, request, project, tombstone_id):
         """
         Remove a GroupTombstone
         ```````````````
@@ -36,4 +34,4 @@ class GroupTombstoneDetailsEndpoint(Endpoint):
         except GroupTombstone.DoesNotExist:
             pass
 
-        return Response(status=202)
+        return Response(status=204)
diff --git a/src/sentry/api/serializers/models/grouptombstone.py b/src/sentry/api/serializers/models/grouptombstone.py
index 5aa26e47e2..72ad0d89c2 100644
--- a/src/sentry/api/serializers/models/grouptombstone.py
+++ b/src/sentry/api/serializers/models/grouptombstone.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 import six
 
 from sentry.api.serializers import Serializer, register, serialize
+from sentry.constants import LOG_LEVELS
 from sentry.models import (
     GroupTombstone, User
 )
@@ -19,7 +20,7 @@ class GroupTombstoneSerializer(Serializer):
         user_list = list(User.objects.filter(id__in=[item.actor_id for item in item_list]))
         users = {
             d['id']: d
-            for d in serialize(user_list)
+            for d in serialize(user_list, user)
         }
 
         attrs = {}
@@ -31,15 +32,13 @@ class GroupTombstoneSerializer(Serializer):
         return attrs
 
     def serialize(self, obj, attrs, user):
-        d = {
+        return {
             'id': six.text_type(obj.id),
-            'project': attrs.get('project'),
-            'level': six.text_type(obj.level),
+            'project': attrs['project'],
+            'level': LOG_LEVELS.get(obj.level, 'unknown'),
             'message': obj.message,
             'culprit': obj.culprit,
             'type': obj.get_event_type(),
             'actor': attrs.get('user'),
 
         }
-
-        return d
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 2b4581b764..3ecf219126 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -481,10 +481,10 @@ urlpatterns = patterns(
         name='sentry-api-0-shared-group-details'),
 
     # Tombstone
-    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/tombstone/$',
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/tombstones/$',
         GroupTombstoneEndpoint.as_view(),
-        name='sentry-api-0-group-tombstone'),
-    url(r'^tombstone/(?P<tombstone_id>\d+)/$',
+        name='sentry-api-0-group-tombstones'),
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/tombstones/(?P<tombstone_id>\d+)/$',
         GroupTombstoneDetailsEndpoint.as_view(),
         name='sentry-api-0-group-tombstone-details'),
 
diff --git a/src/sentry/static/sentry/app/components/groupTombstones.jsx b/src/sentry/static/sentry/app/components/groupTombstones.jsx
index 7717d5bca8..db4ec7bd1c 100644
--- a/src/sentry/static/sentry/app/components/groupTombstones.jsx
+++ b/src/sentry/static/sentry/app/components/groupTombstones.jsx
@@ -74,7 +74,8 @@ const GroupTombstones = React.createClass({
 
   undiscard(tombstoneId) {
     // TODO (kt): update this when you scope the API endpoint to the project
-    let path = `/tombstone/${tombstoneId}/`;
+    let {orgId, projectId} = this.props;
+    let path = `/projects/${orgId}/${projectId}/tombstones/${tombstoneId}/`;
     this.api.request(path, {
       method: 'DELETE',
       success: data => {
diff --git a/src/sentry/static/sentry/app/views/projectFilters.jsx b/src/sentry/static/sentry/app/views/projectFilters.jsx
index fed9dc3125..67a5d2e2d4 100644
--- a/src/sentry/static/sentry/app/views/projectFilters.jsx
+++ b/src/sentry/static/sentry/app/views/projectFilters.jsx
@@ -415,7 +415,7 @@ const ProjectFilters = React.createClass({
       }
     });
 
-    this.api.request(`/projects/${orgId}/${projectId}/tombstone/`, {
+    this.api.request(`/projects/${orgId}/${projectId}/tombstones/`, {
       method: 'GET',
       success: tombstones => {
         this.setState({tombstones});
diff --git a/tests/sentry/api/endpoints/test_group_tombstone.py b/tests/sentry/api/endpoints/test_group_tombstone.py
index 327ee276e3..d1de400dc2 100644
--- a/tests/sentry/api/endpoints/test_group_tombstone.py
+++ b/tests/sentry/api/endpoints/test_group_tombstone.py
@@ -40,7 +40,7 @@ class GroupTombstoneTest(APITestCase):
             group_tombstone=tombstone
         )
 
-        path = reverse('sentry-api-0-group-tombstone',
+        path = reverse('sentry-api-0-group-tombstones',
                        kwargs={
                            'organization_slug': self.org.slug,
                            'project_slug': self.project.slug,
diff --git a/tests/sentry/api/endpoints/test_group_tombstone_details.py b/tests/sentry/api/endpoints/test_group_tombstone_details.py
index 5edd386829..1c0dcf87cc 100644
--- a/tests/sentry/api/endpoints/test_group_tombstone_details.py
+++ b/tests/sentry/api/endpoints/test_group_tombstone_details.py
@@ -1,4 +1,5 @@
 from __future__ import absolute_import, print_function
+from django.core.urlresolvers import reverse
 
 from sentry.models import GroupHash, GroupTombstone
 from sentry.testutils import APITestCase
@@ -7,6 +8,20 @@ from sentry.testutils import APITestCase
 class GroupTombstoneDetailsTest(APITestCase):
 
     def test_delete(self):
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            owner=self.user,
+            name='Rowdy Tiger'
+        )
+        self.team = self.create_team(
+            organization=self.org,
+            name='Mariachi Band'
+        )
+        self.project = self.create_project(
+            organization=self.org,
+            team=self.team,
+            name='Bengal',
+        )
         self.login_as(user=self.user)
 
         group = self.create_group()
@@ -25,9 +40,14 @@ class GroupTombstoneDetailsTest(APITestCase):
             group_tombstone=tombstone
         )
         assert GroupHash.objects.filter(group_tombstone=tombstone).exists()
-
-        path = '/api/0/tombstone/{}/'.format(tombstone.id)
+        path = reverse('sentry-api-0-group-tombstone-details',
+                       kwargs={
+                           'organization_slug': self.org.slug,
+                           'project_slug': self.project.slug,
+                           'tombstone_id': tombstone.id,
+                       }
+                       )
         response = self.client.delete(path)
 
-        assert response.status_code == 202, response
+        assert response.status_code == 204, response
         assert not GroupHash.objects.filter(group_tombstone=tombstone).exists()
