commit 1e8c6a162edc3881dd20d768022bb39b24f25cef
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 16 11:35:35 2016 -0800

    Remove Project constraint on ProjectBookmark

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 65cd674435..9b98b99941 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -176,14 +176,14 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             try:
                 with transaction.atomic():
                     ProjectBookmark.objects.create(
-                        project=project,
+                        project_id=project.id,
                         user=request.user,
                     )
             except IntegrityError:
                 pass
         elif result.get('isBookmarked') is False:
             ProjectBookmark.objects.filter(
-                project=project,
+                project_id=project.id,
                 user=request.user,
             ).delete()
 
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index 7875758241..c703cc10b0 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -10,7 +10,7 @@ class ProjectSerializer(Serializer):
         if user.is_authenticated() and item_list:
             bookmarks = set(ProjectBookmark.objects.filter(
                 user=user,
-                project__in=item_list,
+                project_id__in=[i.id for i in item_list],
             ).values_list('project_id', flat=True))
         else:
             bookmarks = set()
diff --git a/src/sentry/migrations/0235_auto__add_projectbookmark__add_unique_projectbookmark_project_user__ch.py b/src/sentry/migrations/0235_auto__add_projectbookmark__add_unique_projectbookmark_project_id_user_.py
similarity index 99%
rename from src/sentry/migrations/0235_auto__add_projectbookmark__add_unique_projectbookmark_project_user__ch.py
rename to src/sentry/migrations/0235_auto__add_projectbookmark__add_unique_projectbookmark_project_id_user_.py
index 2a492b50dc..1909254bc6 100644
--- a/src/sentry/migrations/0235_auto__add_projectbookmark__add_unique_projectbookmark_project_user__ch.py
+++ b/src/sentry/migrations/0235_auto__add_projectbookmark__add_unique_projectbookmark_project_id_user_.py
@@ -11,22 +11,23 @@ class Migration(SchemaMigration):
         # Adding model 'ProjectBookmark'
         db.create_table('sentry_projectbookmark', (
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
-            ('project', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(to=orm['sentry.Project'])),
+            ('project_id', self.gf('sentry.db.models.fields.bounded.BoundedBigIntegerField')(null=True, blank=True)),
             ('user', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(to=orm['sentry.User'])),
             ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, null=True)),
         ))
         db.send_create_signal('sentry', ['ProjectBookmark'])
 
-        # Adding unique constraint on 'ProjectBookmark', fields ['project', 'user']
+        # Adding unique constraint on 'ProjectBookmark', fields ['project_id', 'user']
         db.create_unique('sentry_projectbookmark', ['project_id', 'user_id'])
 
     def backwards(self, orm):
-        # Removing unique constraint on 'ProjectBookmark', fields ['project', 'user']
+        # Removing unique constraint on 'ProjectBookmark', fields ['project_id', 'user']
         db.delete_unique('sentry_projectbookmark', ['project_id', 'user_id'])
 
         # Deleting model 'ProjectBookmark'
         db.delete_table('sentry_projectbookmark')
 
+
     models = {
         'sentry.activity': {
             'Meta': {'object_name': 'Activity'},
@@ -361,10 +362,10 @@ class Migration(SchemaMigration):
             'team': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Team']"})
         },
         'sentry.projectbookmark': {
-            'Meta': {'unique_together': "(('project', 'user'),)", 'object_name': 'ProjectBookmark'},
+            'Meta': {'unique_together': "(('project_id', 'user'),)", 'object_name': 'ProjectBookmark'},
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'null': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
-            'project': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Project']"}),
+            'project_id': ('sentry.db.models.fields.bounded.BoundedBigIntegerField', [], {'null': 'True', 'blank': 'True'}),
             'user': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.User']"})
         },
         'sentry.projectkey': {
diff --git a/src/sentry/models/projectbookmark.py b/src/sentry/models/projectbookmark.py
index 60d3f1da9c..d5d977cb20 100644
--- a/src/sentry/models/projectbookmark.py
+++ b/src/sentry/models/projectbookmark.py
@@ -11,7 +11,9 @@ from django.conf import settings
 from django.db import models
 from django.utils import timezone
 
-from sentry.db.models import FlexibleForeignKey, Model, BaseManager, sane_repr
+from sentry.db.models import (
+    BoundedBigIntegerField, FlexibleForeignKey, Model, BaseManager, sane_repr
+)
 
 
 class ProjectBookmark(Model):
@@ -21,7 +23,7 @@ class ProjectBookmark(Model):
     """
     __core__ = True
 
-    project = FlexibleForeignKey('sentry.Project')
+    project_id = BoundedBigIntegerField(blank=True, null=True)
     user = FlexibleForeignKey(settings.AUTH_USER_MODEL)
     date_added = models.DateTimeField(default=timezone.now, null=True)
 
@@ -30,6 +32,6 @@ class ProjectBookmark(Model):
     class Meta:
         app_label = 'sentry'
         db_table = 'sentry_projectbookmark'
-        unique_together = (('project', 'user',))
+        unique_together = (('project_id', 'user',))
 
     __repr__ = sane_repr('project_id', 'user_id')
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 424d1bbfc0..28bfde60fb 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -111,7 +111,7 @@ class ProjectUpdateTest(APITestCase):
         })
         assert resp.status_code == 200, resp.content
         assert ProjectBookmark.objects.filter(
-            project=project,
+            project_id=project.id,
             user=self.user,
         ).exists()
 
@@ -120,7 +120,7 @@ class ProjectUpdateTest(APITestCase):
         })
         assert resp.status_code == 200, resp.content
         assert not ProjectBookmark.objects.filter(
-            project=project,
+            project_id=project.id,
             user=self.user,
         ).exists()
 
