commit 152d0db72dcc8202af7c9fcb759387aff411630c
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Nov 8 22:20:00 2012 -0800

    Dont require lineno for frames in stacktrace

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index eb0ba183ab..2fccc75814 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -183,18 +183,18 @@ class Stacktrace(Interface):
     caller being the last in the list.
 
     The stacktrace contains one element, ``frames``, which is a list of hashes. Each
-    hash must contain **at least** ``filename`` and ``lineno``. The rest of the values
-    are optional.
+    hash must contain **at least** the ``filename`` attribute. The rest of the values
+    are optional, but recommended.
 
     Each frame must contain the following attributes:
 
     ``filename``
       The relative filepath to the call
-    ``lineno``
-      The lineno of the call
 
     The following additional attributes are supported:
 
+    ``lineno``
+      The lineno of the call
     ``abs_path``
       The absolute path to filename
     ``function``
@@ -242,10 +242,10 @@ class Stacktrace(Interface):
         for frame in frames:
             # ensure we've got the correct required values
             assert 'filename' in frame
-            assert 'lineno' in frame
 
             # lineno should be an int
-            frame['lineno'] = int(frame['lineno'])
+            if 'lineno' in frame:
+                frame['lineno'] = int(frame['lineno'])
 
             # in_app should be a boolean
             if 'in_app' in frame:
@@ -279,14 +279,14 @@ class Stacktrace(Interface):
 
             if frame.get('function'):
                 output.append(frame['function'])
-            else:
+            elif frame.get('lineno'):
                 output.append(frame['lineno'])
         return output
 
     def to_html(self, event):
         frames = []
         for frame in self.frames:
-            if frame.get('context_line'):
+            if frame.get('context_line') and frame.get('lineno') is not None:
                 context = get_context(frame['lineno'], frame['context_line'], frame.get('pre_context'), frame.get('post_context'))
                 start_lineno = context[0][0]
             else:
diff --git a/src/sentry/templates/sentry/partial/interfaces/stacktrace.html b/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
index 3025e324d4..7e658bc262 100644
--- a/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
+++ b/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
@@ -13,7 +13,7 @@
                     <p>
                         <code>{{ frame.filename }}</code>
                         {% if frame.function %} in <code>{{ frame.function }}</code>{% endif %}
-                        {% if not frame.context %} at line <code>{{ frame.lineno }}</code>{% endif %}
+                        {% if not frame.context and frame.lineno %} at line <code>{{ frame.lineno }}</code>{% endif %}
                     </p>
 
                     {% if frame.context %}
diff --git a/tests/sentry/interfaces/stacktrace/tests.py b/tests/sentry/interfaces/stacktrace/tests.py
index 9b34754f3e..63c688fc4b 100644
--- a/tests/sentry/interfaces/stacktrace/tests.py
+++ b/tests/sentry/interfaces/stacktrace/tests.py
@@ -15,7 +15,7 @@ class StacktraceTest(TestCase):
         self.assertRaises(AssertionError, Stacktrace, frames=[{
             'lineno': 1,
         }])
-        self.assertRaises(AssertionError, Stacktrace, frames=[{
+        Stacktrace(frames=[{
             'filename': 'foo.py',
         }])
         Stacktrace(frames=[{
