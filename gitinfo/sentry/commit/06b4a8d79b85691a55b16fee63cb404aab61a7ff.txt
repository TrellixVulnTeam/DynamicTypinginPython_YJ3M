commit 06b4a8d79b85691a55b16fee63cb404aab61a7ff
Author: Mark Story <mark@sentry.io>
Date:   Thu Apr 25 11:55:41 2019 -0400

    chore: Remove unused/always on features (#12918)
    
    These feature switches are either always on or have no checks attached
    to them. I've also checked getsentry as that that repo often has feature
    switch references as well.

diff --git a/src/sentry/api/endpoints/organization_repositories.py b/src/sentry/api/endpoints/organization_repositories.py
index 47343a4aa9..421900b1fa 100644
--- a/src/sentry/api/endpoints/organization_repositories.py
+++ b/src/sentry/api/endpoints/organization_repositories.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry import features
 from sentry.api.base import DocSection
 from sentry.api.bases.organization import (
     OrganizationEndpoint,
@@ -20,13 +19,6 @@ class OrganizationRepositoriesEndpoint(OrganizationEndpoint):
     doc_section = DocSection.ORGANIZATIONS
     permission_classes = (OrganizationRepositoryPermission,)
 
-    def has_feature(self, request, organization):
-        return features.has(
-            'organizations:repos',
-            organization=organization,
-            actor=request.user,
-        )
-
     def get(self, request, organization):
         """
         List an Organization's Repositories
@@ -37,12 +29,6 @@ class OrganizationRepositoriesEndpoint(OrganizationEndpoint):
         :pparam string organization_slug: the organization short name
         :auth: required
         """
-        if not self.has_feature(request, organization):
-            return self.respond({
-                'error_type': 'unavailable_feature',
-                'detail': ['You do not have that feature enabled']
-            }, status=403)
-
         queryset = Repository.objects.filter(
             organization_id=organization.id,
         )
@@ -94,13 +80,6 @@ class OrganizationRepositoriesEndpoint(OrganizationEndpoint):
     def post(self, request, organization):
         if not request.user.is_authenticated():
             return Response(status=401)
-
-        if not self.has_feature(request, organization):
-            return self.respond({
-                'error_type': 'unavailable_feature',
-                'detail': ['You do not have that feature enabled']
-            }, status=403)
-
         provider_id = request.DATA.get('provider')
 
         if provider_id is not None and provider_id.startswith('integrations:'):
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 0aab3d32be..39a455d466 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -834,13 +834,9 @@ SENTRY_FEATURES = {
     # Enable organizations to create and utilize Sentry Apps.
     'organizations:sentry-apps': False,
 
-    # DEPRECATED: pending removal.
-    'organizations:new-teams': True,
     # Enable the relay functionality, for use with sentry semaphore. See
     # https://github.com/getsentry/semaphore.
     'organizations:relay': False,
-    # Enable managing repositories associated to an organization.
-    'organizations:repos': True,
     # DEPCREATED: pending removal.
     'organizations:require-2fa': False,
     # Sentry 10 - multi project interfaces.
@@ -854,10 +850,6 @@ SENTRY_FEATURES = {
     'organizations:sso-saml2': True,
     # Enable Rippling SSO functionality.
     'organizations:sso-rippling': False,
-    # Enable suggested commits associated to a event group in the UI.
-    'organizations:suggested-commits': True,
-    # DEPCREATED: pending removal.
-    'organizations:unreleased-changes': False,
 
     # Enable functionality to specify custom inbound filters on events.
     'projects:custom-inbound-filters': False,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 35e81bcd0f..1ad80cd307 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -59,7 +59,6 @@ default_manager.add('organizations:discover', OrganizationFeature)  # NOQA
 default_manager.add('organizations:events', OrganizationFeature)  # NOQA
 default_manager.add('organizations:event-attachments', OrganizationFeature)  # NOQA
 default_manager.add('organizations:symbol-sources', OrganizationFeature)  # NOQA
-default_manager.add('organizations:gitlab-integration', OrganizationFeature)  # NOQA
 default_manager.add('organizations:global-views', OrganizationFeature)  # NOQA
 default_manager.add('organizations:incidents', OrganizationFeature)  # NOQA
 default_manager.add('organizations:integrations-issue-basic', OrganizationFeature)  # NOQA
@@ -71,19 +70,14 @@ default_manager.add('organizations:invite-members', OrganizationFeature)  # NOQA
 default_manager.add('organizations:large-debug-files', OrganizationFeature)  # NOQA
 default_manager.add('organizations:legacy-event-id', OrganizationFeature)  # NOQA
 default_manager.add('organizations:monitors', OrganizationFeature)  # NOQA
-default_manager.add('organizations:new-teams', OrganizationFeature)  # NOQA
 default_manager.add('organizations:onboarding', OrganizationFeature)  # NOQA
 default_manager.add('organizations:org-saved-searches', OrganizationFeature)  # NOQA
 default_manager.add('organizations:relay', OrganizationFeature)  # NOQA
-default_manager.add('organizations:release-commits', OrganizationFeature)  # NOQA
-default_manager.add('organizations:repos', OrganizationFeature)  # NOQA
 default_manager.add('organizations:require-2fa', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sentry10', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sso-basic', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sso-rippling', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sso-saml2', OrganizationFeature)  # NOQA
-default_manager.add('organizations:suggested-commits', OrganizationFeature)  # NOQA
-default_manager.add('organizations:unreleased-changes', OrganizationFeature)  # NOQA
 default_manager.add('organizations:grouping-info', OrganizationFeature)  # NOQA
 default_manager.add('organizations:set-grouping-config', OrganizationFeature)  # NOQA
 
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 245592d53f..ec1fc22bae 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -18,7 +18,7 @@ from django.utils import dateformat
 from django.utils.encoding import force_text
 from django.utils.safestring import mark_safe
 
-from sentry import features, options
+from sentry import options
 from sentry.models import ProjectOwnership, User
 
 from sentry.digests.utilities import get_digest_metadata, get_personalized_digests
@@ -228,22 +228,21 @@ class MailPlugin(NotificationPlugin):
 
         # lets identify possibly suspect commits and owners
         commits = {}
-        if features.has('organizations:suggested-commits', org):
-            try:
-                committers = get_event_file_committers(project, event)
-            except (Commit.DoesNotExist, Release.DoesNotExist):
-                pass
-            except Exception as exc:
-                logging.exception(six.text_type(exc))
-            else:
-                for committer in committers:
-                    for commit in committer['commits']:
-                        if commit['id'] not in commits:
-                            commit_data = commit.copy()
-                            commit_data['shortId'] = commit_data['id'][:7]
-                            commit_data['author'] = committer['author']
-                            commit_data['subject'] = commit_data['message'].split('\n', 1)[0]
-                            commits[commit['id']] = commit_data
+        try:
+            committers = get_event_file_committers(project, event)
+        except (Commit.DoesNotExist, Release.DoesNotExist):
+            pass
+        except Exception as exc:
+            logging.exception(six.text_type(exc))
+        else:
+            for committer in committers:
+                for commit in committer['commits']:
+                    if commit['id'] not in commits:
+                        commit_data = commit.copy()
+                        commit_data['shortId'] = commit_data['id'][:7]
+                        commit_data['author'] = committer['author']
+                        commit_data['subject'] = commit_data['message'].split('\n', 1)[0]
+                        commits[commit['id']] = commit_data
 
         context = {
             'project_label': project.get_full_name(),
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 3d94f348a2..65986dd6fb 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -155,9 +155,7 @@ class EventEntries extends React.Component {
         {!utils.objectIsEmpty(event.errors) && (
           <EventErrors group={group} event={event} />
         )}{' '}
-        {!isShare && features.has('suggested-commits') && (
-          <EventCause event={event} orgId={orgId} projectId={project.slug} />
-        )}
+        {!isShare && <EventCause event={event} orgId={orgId} projectId={project.slug} />}
         {event.userReport && (
           <EventUserFeedback
             report={event.userReport}
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 94f46339d8..c2e8a82b0c 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -946,26 +946,25 @@ class IntegrationRepositoryTestCase(APITestCase):
                           organization_slug=None, add_responses=True):
         if add_responses:
             self.add_create_repository_responses(repository_config)
-        with self.feature({'organizations:repos': True}):
-            if not integration_id:
-                data = {
-                    'provider': self.provider_name,
-                    'identifier': repository_config['id'],
-                }
-            else:
-                data = {
-                    'provider': self.provider_name,
-                    'installation': integration_id,
-                    'identifier': repository_config['id'],
-                }
-
-            response = self.client.post(
-                path=reverse(
-                    'sentry-api-0-organization-repositories',
-                    args=[organization_slug or self.organization.slug]
-                ),
-                data=data
-            )
+        if not integration_id:
+            data = {
+                'provider': self.provider_name,
+                'identifier': repository_config['id'],
+            }
+        else:
+            data = {
+                'provider': self.provider_name,
+                'installation': integration_id,
+                'identifier': repository_config['id'],
+            }
+
+        response = self.client.post(
+            path=reverse(
+                'sentry-api-0-organization-repositories',
+                args=[organization_slug or self.organization.slug]
+            ),
+            data=data
+        )
         return response
 
     def assert_error_message(self, response, error_type, error_message):
diff --git a/tests/sentry/api/serializers/test_organization.py b/tests/sentry/api/serializers/test_organization.py
index fabd11f706..09ece56155 100644
--- a/tests/sentry/api/serializers/test_organization.py
+++ b/tests/sentry/api/serializers/test_organization.py
@@ -20,15 +20,12 @@ class OrganizationSerializerTest(TestCase):
         assert result['id'] == six.text_type(organization.id)
         assert result['features'] == set([
             'advanced-search',
-            'new-teams',
             'shared-issues',
-            'repos',
             'open-membership',
             'integrations-issue-basic',
             'integrations-issue-sync',
             'invite-members',
             'sso-saml2',
             'sso-basic',
-            'suggested-commits'
         ])
         assert result['disableNewVisibilityFeatures']
