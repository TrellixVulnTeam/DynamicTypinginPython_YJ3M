commit 6a49f5e71e88bd515472f45da3d11a0186b390fd
Author: Jess MacQueen <jess@getsentry.com>
Date:   Thu Dec 14 11:39:57 2017 -0800

    ref(teams): Use ProjectTeam relation instead of project.team
    
    remove outdated todo
    
    fix tests
    
    add a few more todos, remove team slug from email headers
    
    update ProjectView to inherit from org view instead of team
    
    have project serializer use new relation
    
    fix mysql tests
    
    update test fixtures to use teams kwarg
    
    stop writing team to deleted project audit
    
    remove todo i handled in a different PR
    
    remove team x header
    
    make fixtures create_project backwards compatible for other repos
    
    matt pr feedback

diff --git a/api-docs/generator.py b/api-docs/generator.py
index 6aaf562939..4a96075938 100644
--- a/api-docs/generator.py
+++ b/api-docs/generator.py
@@ -167,7 +167,7 @@ def cli(output_path):
         projects = []
         for project_name in 'Pump Station', 'Prime Mover':
             report('project', 'Creating project "%s"' % project_name)
-            project = utils.create_project(project_name, team=team, org=org)
+            project = utils.create_project(project_name, teams=[team], org=org)
             release = utils.create_release(project=project, user=user)
             report('event', 'Creating event for "%s"' % project_name)
 
diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index 2d1da8bc77..8e18f7a3d8 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -9,7 +9,7 @@ from sentry.app import raven
 from sentry.auth import access
 from sentry.auth.superuser import is_active_superuser
 from sentry.models import (
-    ApiKey, Organization, OrganizationMemberTeam, Project, ReleaseProject, Team
+    ApiKey, Organization, OrganizationMemberTeam, Project, ProjectTeam, ReleaseProject, Team
 )
 from sentry.utils import auth
 
@@ -157,7 +157,12 @@ class OrganizationReleasesBaseEndpoint(OrganizationEndpoint):
             ).values_list(
                 'team_id', flat=True
             )
-        return Project.objects.filter(team_id__in=allowed_teams)
+
+        return Project.objects.filter(
+            id__in=ProjectTeam.objects.filter(
+                team_id__in=allowed_teams,
+            ).values_list('project_id', flat=True)
+        )
 
     def has_release_permission(self, request, organization, release):
         return ReleaseProject.objects.filter(
diff --git a/src/sentry/api/bases/organizationissues.py b/src/sentry/api/bases/organizationissues.py
index e2b5d0967a..26fbdd46f6 100644
--- a/src/sentry/api/bases/organizationissues.py
+++ b/src/sentry/api/bases/organizationissues.py
@@ -33,9 +33,9 @@ class OrganizationIssuesEndpoint(OrganizationMemberEndpoint, EnvironmentMixin):
 
         project_list = Project.objects.filter(
             organization=organization,
-            team__in=OrganizationMemberTeam.objects.filter(
+            teams__in=OrganizationMemberTeam.objects.filter(
                 organizationmember=member,
-            ).values('team')
+            ).values('team'),
         )
 
         queryset = self.get_queryset(request, organization, member, project_list)
diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 748219902a..26c9081f55 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -5,10 +5,11 @@ from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.app import raven
 from sentry.models import Project, ProjectStatus
 
-from .team import TeamPermission
+from .organization import OrganizationPermission
+from .team import has_team_permission
 
 
-class ProjectPermission(TeamPermission):
+class ProjectPermission(OrganizationPermission):
     scope_map = {
         'GET': ['project:read', 'project:write', 'project:admin'],
         'POST': ['project:write', 'project:admin'],
@@ -17,7 +18,15 @@ class ProjectPermission(TeamPermission):
     }
 
     def has_object_permission(self, request, view, project):
-        return super(ProjectPermission, self).has_object_permission(request, view, project.team)
+        result = super(ProjectPermission,
+                       self).has_object_permission(request, view, project.organization)
+
+        if not result:
+            return result
+
+        return any(
+            has_team_permission(request, team, self.scope_map) for team in project.teams.all()
+        )
 
 
 class StrictProjectPermission(ProjectPermission):
@@ -74,15 +83,13 @@ class ProjectEndpoint(Endpoint):
             project = Project.objects.filter(
                 organization__slug=organization_slug,
                 slug=project_slug,
-            ).select_related('organization', 'team').get()
+            ).select_related('organization').prefetch_related('teams').get()
         except Project.DoesNotExist:
             raise ResourceDoesNotExist
 
         if project.status != ProjectStatus.VISIBLE:
             raise ResourceDoesNotExist
 
-        project.team.organization = project.organization
-
         self.check_object_permissions(request, project)
 
         raven.tags_context({
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index 9f3beea110..2ed2b0c051 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -8,6 +8,14 @@ from sentry.models import Team, TeamStatus
 from .organization import OrganizationPermission
 
 
+def has_team_permission(request, team, scope_map):
+    if not (request.user and request.user.is_authenticated()) and request.auth:
+        return request.auth.organization_id == team.organization.id
+
+    allowed_scopes = set(scope_map.get(request.method, []))
+    return any(request.access.has_team_scope(team, s) for s in allowed_scopes)
+
+
 class TeamPermission(OrganizationPermission):
     scope_map = {
         'GET': ['team:read', 'team:write', 'team:admin'],
@@ -22,11 +30,7 @@ class TeamPermission(OrganizationPermission):
         if not result:
             return result
 
-        if not (request.user and request.user.is_authenticated()) and request.auth:
-            return request.auth.organization_id == team.organization.id
-
-        allowed_scopes = set(self.scope_map.get(request.method, []))
-        return any(request.access.has_team_scope(team, s) for s in allowed_scopes)
+        return has_team_permission(request, team, self.scope_map)
 
 
 class TeamEndpoint(Endpoint):
diff --git a/src/sentry/api/endpoints/organization_activity.py b/src/sentry/api/endpoints/organization_activity.py
index a05db491b7..6a6d8fbaef 100644
--- a/src/sentry/api/endpoints/organization_activity.py
+++ b/src/sentry/api/endpoints/organization_activity.py
@@ -12,7 +12,7 @@ class OrganizationActivityEndpoint(OrganizationMemberEndpoint, EnvironmentMixin)
         queryset = Activity.objects.filter(
             project__in=Project.objects.filter(
                 organization=organization,
-                team__in=OrganizationMemberTeam.objects.filter(
+                teams__in=OrganizationMemberTeam.objects.filter(
                     organizationmember=member,
                 ).values('team')
             )
diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index 31ddacfe3e..661e87a21b 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -54,18 +54,18 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint):
         if request.auth and not request.user.is_authenticated():
             # TODO: remove this, no longer supported probably
             if hasattr(request.auth, 'project'):
-                team_list = [request.auth.project.team]
+                team_list = list(request.auth.project.teams.all())
                 queryset = queryset = Project.objects.filter(
                     id=request.auth.project.id,
-                ).select_related('team')
+                ).prefetch_related('teams')
             elif request.auth.organization is not None:
                 org = request.auth.organization
                 team_list = list(Team.objects.filter(
                     organization=org,
                 ))
                 queryset = Project.objects.filter(
-                    team__in=team_list,
-                ).select_related('team')
+                    teams__in=team_list,
+                ).prefetch_related('teams')
             else:
                 return Response(
                     {
@@ -76,8 +76,8 @@ class OrganizationProjectsEndpoint(OrganizationEndpoint):
         else:
             team_list = list(request.access.teams)
             queryset = Project.objects.filter(
-                team__in=team_list,
-            ).select_related('team')
+                teams__in=team_list,
+            ).prefetch_related('team')
 
         return self.paginate(
             request=request,
diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index f266660924..70e969f39c 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -61,7 +61,7 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, EnvironmentMixin, StatsMix
                     team=team,
                     user=request.user,
                 ))
-            keys = [p.id for p in project_list]
+            keys = list({p.id for p in project_list})
         else:
             raise ValueError('Invalid group: %s' % group)
 
diff --git a/src/sentry/api/endpoints/organization_user_issues.py b/src/sentry/api/endpoints/organization_user_issues.py
index ed901ba5f1..3222159b74 100644
--- a/src/sentry/api/endpoints/organization_user_issues.py
+++ b/src/sentry/api/endpoints/organization_user_issues.py
@@ -7,7 +7,7 @@ from sentry.api.base import EnvironmentMixin
 from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.group import TagBasedStreamGroupSerializer
-from sentry.models import (EventUser, Group, Project)
+from sentry.models import (EventUser, Group, ProjectTeam, Team)
 
 
 class OrganizationUserIssuesEndpoint(OrganizationEndpoint, EnvironmentMixin):
@@ -21,8 +21,15 @@ class OrganizationUserIssuesEndpoint(OrganizationEndpoint, EnvironmentMixin):
         )
         # they have organization access but not to this project, thus
         # they shouldn't be able to see this user
-        if not request.access.has_team_access(
-                Project.objects.select_related('team').get(pk=euser.project_id).team):
+        teams = Team.objects.filter(
+            organization=organization,
+            id__in=ProjectTeam.objects.filter(
+                project_id=euser.project_id,
+            ).values_list('team_id', flat=True)
+        )
+        has_team_access = any([request.access.has_team_access(t) for t in teams])
+
+        if not has_team_access:
             return Response([])
 
         other_eusers = euser.find_similar_users(request.user)
diff --git a/src/sentry/api/endpoints/organization_user_issues_search.py b/src/sentry/api/endpoints/organization_user_issues_search.py
index b9514eea7e..4f4932a410 100644
--- a/src/sentry/api/endpoints/organization_user_issues_search.py
+++ b/src/sentry/api/endpoints/organization_user_issues_search.py
@@ -22,7 +22,7 @@ class OrganizationUserIssuesSearchEndpoint(OrganizationEndpoint, EnvironmentMixi
         # limit to only teams user has opted into
         project_ids = list(
             Project.objects.filter(
-                team__in=OrganizationMemberTeam.objects.filter(
+                teams__in=OrganizationMemberTeam.objects.filter(
                     organizationmember__user=request.user,
                     organizationmember__organization=organization,
                     is_active=True,
diff --git a/src/sentry/api/endpoints/project_index.py b/src/sentry/api/endpoints/project_index.py
index d356b74b51..94bdf39a80 100644
--- a/src/sentry/api/endpoints/project_index.py
+++ b/src/sentry/api/endpoints/project_index.py
@@ -62,7 +62,7 @@ class ProjectIndexEndpoint(Endpoint):
                 queryset = queryset.none()
         elif not is_active_superuser(request):
             queryset = queryset.filter(
-                team__organizationmember__user=request.user,
+                teams__organizationmember__user=request.user,
             )
 
         query = request.GET.get('query')
diff --git a/src/sentry/api/endpoints/project_member_index.py b/src/sentry/api/endpoints/project_member_index.py
index e0d9fd3c20..090052085b 100644
--- a/src/sentry/api/endpoints/project_member_index.py
+++ b/src/sentry/api/endpoints/project_member_index.py
@@ -13,7 +13,7 @@ class ProjectMemberIndexEndpoint(ProjectEndpoint):
         queryset = OrganizationMember.objects.filter(
             Q(user__is_active=True) | Q(user__isnull=True),
             organization=project.organization,
-            teams=project.team,
+            teams=project.teams.all(),
         ).select_related('user')
 
         member_list = sorted(
diff --git a/src/sentry/api/endpoints/project_search_details.py b/src/sentry/api/endpoints/project_search_details.py
index d44a0da700..93a3335bc3 100644
--- a/src/sentry/api/endpoints/project_search_details.py
+++ b/src/sentry/api/endpoints/project_search_details.py
@@ -64,7 +64,10 @@ class ProjectSearchDetailsEndpoint(ProjectEndpoint):
         except SavedSearch.DoesNotExist:
             raise ResourceDoesNotExist
 
-        if request.access.has_team_scope(project.team, 'project:write'):
+        has_team_scope = any(
+            request.access.has_team_scope(team, 'project:write') for team in project.teams.all()
+        )
+        if has_team_scope:
             serializer = SavedSearchSerializer(data=request.DATA, partial=True)
         else:
             serializer = LimitedSavedSearchSerializer(data=request.DATA, partial=True)
diff --git a/src/sentry/api/endpoints/team_project_index.py b/src/sentry/api/endpoints/team_project_index.py
index a679563e5c..2dea644900 100644
--- a/src/sentry/api/endpoints/team_project_index.py
+++ b/src/sentry/api/endpoints/team_project_index.py
@@ -73,7 +73,7 @@ class TeamProjectIndexEndpoint(TeamEndpoint):
         else:
             # TODO(dcramer): status should be selectable
             results = list(Project.objects.filter(
-                team=team,
+                teams=team,
                 status=ProjectStatus.VISIBLE,
             ))
 
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index a59c14fb79..e69cfed6bc 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -14,8 +14,8 @@ from sentry.api.serializers.models.plugin import PluginSerializer
 from sentry.constants import StatsPeriod
 from sentry.digests import backend as digests
 from sentry.models import (
-    Project, ProjectBookmark, ProjectOption, ProjectPlatform, ProjectStatus, Release, UserOption,
-    DEFAULT_SUBJECT_TEMPLATE
+    Project, ProjectBookmark, ProjectOption, ProjectPlatform, ProjectStatus, ProjectTeam,
+    Release, UserOption, DEFAULT_SUBJECT_TEMPLATE
 )
 from sentry.utils.data_filters import FilterTypes
 
@@ -159,16 +159,29 @@ class ProjectWithTeamSerializer(ProjectSerializer):
         attrs = super(ProjectWithTeamSerializer,
                       self).get_attrs(item_list, user)
 
+        project_teams = list(
+            ProjectTeam.objects.filter(
+                project__in=item_list,
+            ).select_related('team')
+        )
+
         teams = {d['id']: d for d in serialize(
-            list(set(i.team for i in item_list)), user)}
+            list(set(pt.team for pt in project_teams)), user)}
+
+        teams_by_project_id = defaultdict(list)
+        for pt in project_teams:
+            teams_by_project_id[pt.project_id].append(teams[six.text_type(pt.team_id)])
+
         for item in item_list:
-            attrs[item]['team'] = teams[six.text_type(item.team_id)]
+            attrs[item]['teams'] = teams_by_project_id[item.id]
         return attrs
 
     def serialize(self, obj, attrs, user):
         data = super(ProjectWithTeamSerializer,
                      self).serialize(obj, attrs, user)
-        data['team'] = attrs['team']
+        # TODO(jess): remove this when this is deprecated
+        data['team'] = attrs['teams'][0]
+        data['teams'] = attrs['teams']
         return data
 
 
diff --git a/src/sentry/api/serializers/models/team.py b/src/sentry/api/serializers/models/team.py
index d846c86dd0..238f1c561a 100644
--- a/src/sentry/api/serializers/models/team.py
+++ b/src/sentry/api/serializers/models/team.py
@@ -9,7 +9,8 @@ from sentry.app import env
 from sentry.api.serializers import Serializer, register, serialize
 from sentry.auth.superuser import is_active_superuser
 from sentry.models import (
-    OrganizationAccessRequest, OrganizationMemberTeam, Project, ProjectStatus, Team
+    OrganizationAccessRequest, OrganizationMemberTeam, ProjectStatus,
+    ProjectTeam, Team
 )
 
 
@@ -70,24 +71,30 @@ class TeamSerializer(Serializer):
 
 class TeamWithProjectsSerializer(TeamSerializer):
     def get_attrs(self, item_list, user):
-        project_qs = list(
-            Project.objects.filter(
+        project_teams = list(
+            ProjectTeam.objects.filter(
                 team__in=item_list,
-                status=ProjectStatus.VISIBLE,
-            ).order_by('name', 'slug')
+                project__status=ProjectStatus.VISIBLE,
+            ).order_by('project__name', 'project__slug').select_related('project')
         )
 
         team_map = {i.id: i for i in item_list}
         # TODO(dcramer): we should query in bulk for ones we're missing here
         orgs = {i.organization_id: i.organization for i in item_list}
 
-        for project in project_qs:
-            project._team_cache = team_map[project.team_id]
-            project._organization_cache = orgs[project.organization_id]
+        for project_team in project_teams:
+            # TODO(jess): remove when we've completely deprecated Project.team
+            project_team.project._team_cache = team_map[project_team.project.team_id]
+            project_team.project._organization_cache = orgs[project_team.project.organization_id]
+
+        projects = [pt.project for pt in project_teams]
+        projects_by_id = {
+            project.id: data for project, data in zip(projects, serialize(projects, user))
+        }
 
         project_map = defaultdict(list)
-        for project, data in zip(project_qs, serialize(project_qs, user)):
-            project_map[project.team_id].append(data)
+        for project_team in project_teams:
+            project_map[project_team.team_id].append(projects_by_id[project_team.project_id])
 
         result = super(TeamWithProjectsSerializer, self).get_attrs(item_list, user)
         for team in item_list:
diff --git a/src/sentry/integrations/cloudflare/webhook.py b/src/sentry/integrations/cloudflare/webhook.py
index dcb2f9b58b..ebb2ad4ebf 100644
--- a/src/sentry/integrations/cloudflare/webhook.py
+++ b/src/sentry/integrations/cloudflare/webhook.py
@@ -79,7 +79,7 @@ class CloudflareWebhookEndpoint(Endpoint):
 
         projects = Project.objects.filter(
             organization=org,
-            team__in=Team.objects.get_for_user(org, request.user, scope='project:write'),
+            teams__in=Team.objects.get_for_user(org, request.user, scope='project:write'),
         )
         for project in projects:
             if six.text_type(project.id) == project_id:
@@ -144,7 +144,7 @@ class CloudflareWebhookEndpoint(Endpoint):
 
         projects = sorted(Project.objects.filter(
             organization=org,
-            team__in=Team.objects.get_for_user(org, request.user, scope='project:write'),
+            teams__in=Team.objects.get_for_user(org, request.user, scope='project:write'),
         ), key=lambda x: x.slug)
 
         enum_choices = [six.text_type(o.id) for o in projects]
diff --git a/src/sentry/management/commands/create_sample_event.py b/src/sentry/management/commands/create_sample_event.py
index 9be7692372..f069baaa44 100644
--- a/src/sentry/management/commands/create_sample_event.py
+++ b/src/sentry/management/commands/create_sample_event.py
@@ -30,7 +30,7 @@ class Command(BaseCommand):
                 project = Project.objects.get(id=options['project'])
             elif '/' in options['project']:
                 t_slug, p_slug = options['project'].split('/', 1)
-                project = Project.objects.get(slug=p_slug, team__slug=t_slug)
+                project = Project.objects.get(slug=p_slug, teams__slug=t_slug)
             else:
                 raise CommandError(
                     'Project must be specified as team-slug/project-slug or a project id'
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index bc542a5365..1d49dcb1bb 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -127,10 +127,6 @@ class Event(Model):
         warnings.warn('Event.message_short is deprecated, use Event.title', DeprecationWarning)
         return self.title
 
-    @property
-    def team(self):
-        return self.project.team
-
     @property
     def organization(self):
         return self.project.organization
diff --git a/src/sentry/models/eventmapping.py b/src/sentry/models/eventmapping.py
index 61d34377b9..9f4b48cae2 100644
--- a/src/sentry/models/eventmapping.py
+++ b/src/sentry/models/eventmapping.py
@@ -28,10 +28,6 @@ class EventMapping(Model):
 
     __repr__ = sane_repr('project_id', 'group_id', 'event_id')
 
-    @property
-    def team(self):
-        return self.project.team
-
     # Implement a ForeignKey-like accessor for backwards compat
     def _set_group(self, group):
         self.group_id = group.id
diff --git a/src/sentry/models/eventuser.py b/src/sentry/models/eventuser.py
index f5ac825694..40581e61b7 100644
--- a/src/sentry/models/eventuser.py
+++ b/src/sentry/models/eventuser.py
@@ -100,7 +100,7 @@ class EventUser(Model):
         # limit to only teams user has opted into
         project_ids = list(
             Project.objects.filter(
-                team__in=OrganizationMemberTeam.objects.filter(
+                teams__in=OrganizationMemberTeam.objects.filter(
                     organizationmember__user=user,
                     organizationmember__organization__project=self.project_id,
                     is_active=True,
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 80464d2d43..73ba07677e 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -404,10 +404,6 @@ class Group(Model):
     def organization(self):
         return self.project.organization
 
-    @property
-    def team(self):
-        return self.project.team
-
     @property
     def checksum(self):
         warnings.warn('Group.checksum is no longer used', DeprecationWarning)
diff --git a/src/sentry/models/groupsubscription.py b/src/sentry/models/groupsubscription.py
index 534229c14b..af2338c763 100644
--- a/src/sentry/models/groupsubscription.py
+++ b/src/sentry/models/groupsubscription.py
@@ -101,7 +101,7 @@ class GroupSubscriptionManager(BaseManager):
             user.id: user
             for user in
             User.objects.filter(
-                sentry_orgmember_set__teams=group.project.team,
+                sentry_orgmember_set__teams=group.project.teams.all(),
                 is_active=True,
             )
         }
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 9e142ff239..1977af9ab2 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -70,13 +70,12 @@ class ProjectManager(BaseManager):
                 return []
 
         base_qs = self.filter(
-            team=team,
+            teams=team,
             status=ProjectStatus.VISIBLE,
         )
 
         project_list = []
         for project in base_qs:
-            project.team = team
             project_list.append(project)
 
         return sorted(project_list, key=lambda x: x.name.lower())
diff --git a/src/sentry/models/team.py b/src/sentry/models/team.py
index ed0c99d04d..09a3d80803 100644
--- a/src/sentry/models/team.py
+++ b/src/sentry/models/team.py
@@ -8,6 +8,7 @@ sentry.models.team
 from __future__ import absolute_import, print_function
 
 import warnings
+from collections import defaultdict
 
 from django.conf import settings
 from django.db import connections, IntegrityError, models, router, transaction
@@ -32,6 +33,7 @@ class TeamManager(BaseManager):
             OrganizationMemberTeam,
             Project,
             ProjectStatus,
+            ProjectTeam,
             OrganizationMember,
         )
 
@@ -71,20 +73,26 @@ class TeamManager(BaseManager):
         if with_projects:
             project_list = sorted(
                 Project.objects.filter(
-                    team__in=team_list,
+                    teams__in=team_list,
                     status=ProjectStatus.VISIBLE,
                 ),
                 key=lambda x: x.name.lower()
             )
+
+            teams_by_project = defaultdict(set)
+            for project_id, team_id in ProjectTeam.objects.filter(
+                project__in=project_list,
+            ).values_list('project_id', 'team_id'):
+                teams_by_project[project_id].add(team_id)
+
             projects_by_team = {t.id: [] for t in team_list}
             for project in project_list:
-                projects_by_team[project.team_id].append(project)
+                for team_id in teams_by_project[project.id]:
+                    projects_by_team[team_id].append(project)
 
             # these kinds of queries make people sad :(
             for idx, team in enumerate(results):
                 team_projects = projects_by_team[team.id]
-                for project in team_projects:
-                    project.team = team
                 results[idx] = (team, team_projects)
 
         return results
@@ -194,7 +202,7 @@ class Team(Model):
 
         project_ids = list(
             Project.objects.filter(
-                team=self,
+                teams=self,
             ).exclude(
                 organization=organization,
             ).values_list('id', flat=True)
diff --git a/src/sentry/plugins/sentry_mail/activity/base.py b/src/sentry/plugins/sentry_mail/activity/base.py
index 9fd8516733..7e712def80 100644
--- a/src/sentry/plugins/sentry_mail/activity/base.py
+++ b/src/sentry/plugins/sentry_mail/activity/base.py
@@ -138,7 +138,6 @@ class ActivityEmail(object):
         group = self.group
 
         headers = {
-            'X-Sentry-Team': project.team.slug,
             'X-Sentry-Project': project.slug,
         }
 
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 81e22321d5..377e1aa932 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -118,7 +118,7 @@ class MailPlugin(NotificationPlugin):
 
         This result may come from cached data.
         """
-        if not (project and project.team):
+        if not (project and project.teams.exists()):
             logger.debug('Tried to send notification to invalid project: %r', project)
             return []
 
@@ -187,7 +187,6 @@ class MailPlugin(NotificationPlugin):
         headers = {
             'X-Sentry-Logger': group.logger,
             'X-Sentry-Logger-Level': group.get_level_display(),
-            'X-Sentry-Team': project.team.slug,
             'X-Sentry-Project': project.slug,
             'X-Sentry-Reply-To': group_id_to_email(group.id),
         }
@@ -241,7 +240,6 @@ class MailPlugin(NotificationPlugin):
         }
 
         headers = {
-            'X-Sentry-Team': project.team.slug,
             'X-Sentry-Project': project.slug,
         }
 
diff --git a/src/sentry/tasks/email.py b/src/sentry/tasks/email.py
index 9715d9e524..0d4cf6ff3e 100644
--- a/src/sentry/tasks/email.py
+++ b/src/sentry/tasks/email.py
@@ -24,7 +24,7 @@ def _get_user_from_email(group, email):
     for user in User.objects.filter(email__iexact=email):
         # Make sure that the user actually has access to this project
         context = access.from_user(user=user, organization=group.organization)
-        if not context.has_team(group.project.team):
+        if not any(context.has_team(t) for t in group.project.teams.all()):
             logger.warning('User %r does not have access to group %r', user, group)
             continue
 
diff --git a/src/sentry/testutils/fixtures.py b/src/sentry/testutils/fixtures.py
index 598961848e..df9b79b886 100644
--- a/src/sentry/testutils/fixtures.py
+++ b/src/sentry/testutils/fixtures.py
@@ -189,7 +189,7 @@ class Fixtures(object):
         return self.create_project(
             name='Bar',
             slug='bar',
-            team=self.team,
+            teams=[self.team],
         )
 
     @fixture
@@ -284,17 +284,31 @@ class Fixtures(object):
         return env
 
     def create_project(self, **kwargs):
+        teams = kwargs.pop('teams', None)
+
+        # TOOD(jess): this is just to keep backwards compat
+        # for sentry-plugins and getsentry. Remove once those
+        # are updated
+        team = kwargs.pop('team', None)
+        assert team is None or teams is None
+        if team is not None:
+            teams = [team]
+
+        if teams is None:
+            teams = [self.team]
+        # TODO(jess): remove when deprecated
+        kwargs['team'] = teams[0]
+
         if not kwargs.get('name'):
             kwargs['name'] = petname.Generate(2, ' ', letters=10).title()
         if not kwargs.get('slug'):
             kwargs['slug'] = slugify(six.text_type(kwargs['name']))
-        if not kwargs.get('team'):
-            kwargs['team'] = self.team
         if not kwargs.get('organization'):
             kwargs['organization'] = kwargs['team'].organization
 
         project = Project.objects.create(**kwargs)
-        project.add_team(kwargs['team'])
+        for team in teams:
+            project.add_team(team)
         return project
 
     def create_project_key(self, project):
diff --git a/src/sentry/utils/apidocs.py b/src/sentry/utils/apidocs.py
index 6ba79d8453..402bbbf5de 100644
--- a/src/sentry/utils/apidocs.py
+++ b/src/sentry/utils/apidocs.py
@@ -284,14 +284,15 @@ class MockUtils(object):
             },
         )[0]
 
-    def create_project(self, name, team, org):
+    def create_project(self, name, teams, org):
         from sentry.models import Project
         project = Project.objects.get_or_create(
-            team=team, name=name, defaults={
+            team=teams[0], name=name, defaults={
                 'organization': org,
             }
         )[0]
-        project.add_team(team)
+        for team in teams:
+            project.add_team(team)
         return project
 
     def create_release(self, project, user, version=None):
@@ -386,7 +387,7 @@ class Runner(object):
     def isolated_project(self, project_name):
         from sentry.models import Group, Event
 
-        project = self.utils.create_project(project_name, team=self.default_team, org=self.org)
+        project = self.utils.create_project(project_name, teams=[self.default_team], org=self.org)
         release = self.utils.create_release(project=project, user=self.me)
         self.utils.create_event(project=project, release=release, platform='python')
         self.utils.create_event(project=project, release=release, platform='java')
diff --git a/src/sentry/utils/audit.py b/src/sentry/utils/audit.py
index 8eec2418ba..ce5a927a76 100644
--- a/src/sentry/utils/audit.py
+++ b/src/sentry/utils/audit.py
@@ -71,11 +71,6 @@ def create_project_delete_log(entry):
     delete_log.organization_name = entry.organization.name
     delete_log.organization_slug = entry.organization.slug
 
-    team = project.team
-    delete_log.team_id = team.id
-    delete_log.team_name = team.name
-    delete_log.team_slug = team.slug
-
     complete_delete_log(delete_log, entry)
 
 
diff --git a/src/sentry/web/frontend/account_notification.py b/src/sentry/web/frontend/account_notification.py
index be11008409..7cffdbfae9 100644
--- a/src/sentry/web/frontend/account_notification.py
+++ b/src/sentry/web/frontend/account_notification.py
@@ -54,8 +54,8 @@ class AccountNotificationView(BaseView):
 
         project_list = list(
             Project.objects.filter(
-                team__organizationmemberteam__organizationmember__user=request.user,
-                team__organizationmemberteam__is_active=True,
+                teams__organizationmemberteam__organizationmember__user=request.user,
+                teams__organizationmemberteam__is_active=True,
                 status=ProjectStatus.VISIBLE,
             ).distinct()
         )
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index 2b496e7fc7..2ce6873cd5 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -460,40 +460,40 @@ class TeamView(OrganizationView):
         return (args, kwargs)
 
 
-class ProjectView(TeamView):
+class ProjectView(OrganizationView):
     """
     Any view acting on behalf of a project should inherit from this base and the
-    matching URL pattern must pass 'team_slug' as well as 'project_slug'.
+    matching URL pattern must pass 'org_slug' as well as 'project_slug'.
 
     Three keyword arguments are added to the resulting dispatch:
 
     - organization
-    - team
     - project
     """
 
-    def get_context_data(self, request, organization, team, project, **kwargs):
-        context = super(ProjectView, self).get_context_data(request, organization, team)
+    def get_context_data(self, request, organization, project, **kwargs):
+        context = super(ProjectView, self).get_context_data(request, organization)
         context['project'] = project
         context['processing_issues'] = serialize(project).get('processingIssues', 0)
         return context
 
-    def has_permission(self, request, organization, team, project, *args, **kwargs):
+    def has_permission(self, request, organization, project, *args, **kwargs):
         if project is None:
             return False
-        if team is None:
-            return False
-        rv = super(ProjectView, self).has_permission(request, organization, team)
+        rv = super(ProjectView, self).has_permission(request, organization)
         if not rv:
             return rv
+
+        teams = list(project.teams.all())
+
         if self.required_scope:
-            if not request.access.has_team_scope(team, self.required_scope):
+            if not any(request.access.has_team_scope(team, self.required_scope) for team in teams):
                 logger.info(
                     'User %s does not have %s permission to access project %s', request.user,
                     self.required_scope, project
                 )
                 return False
-        elif not request.access.has_team(team):
+        elif not any(request.access.has_team(team) for team in teams):
             logger.info('User %s does not have access to project %s', request.user, project)
             return False
         return True
@@ -513,13 +513,7 @@ class ProjectView(TeamView):
         else:
             active_project = None
 
-        if active_project:
-            active_team = active_project.team
-        else:
-            active_team = None
-
         kwargs['project'] = active_project
-        kwargs['team'] = active_team
         kwargs['organization'] = active_organization
 
         return (args, kwargs)
diff --git a/src/sentry/web/frontend/group_event_json.py b/src/sentry/web/frontend/group_event_json.py
index 0c0349205c..e19e46afb9 100644
--- a/src/sentry/web/frontend/group_event_json.py
+++ b/src/sentry/web/frontend/group_event_json.py
@@ -11,7 +11,7 @@ from sentry.web.frontend.base import ProjectView
 class GroupEventJsonView(ProjectView):
     required_scope = 'event:read'
 
-    def get(self, request, organization, project, team, group_id, event_id_or_latest):
+    def get(self, request, organization, project, group_id, event_id_or_latest):
         try:
             # TODO(tkaemming): This should *actually* redirect, see similar
             # comment in ``GroupEndpoint.convert_args``.
diff --git a/src/sentry/web/frontend/group_plugin_action.py b/src/sentry/web/frontend/group_plugin_action.py
index 401cd877b1..a7afd10b8c 100644
--- a/src/sentry/web/frontend/group_plugin_action.py
+++ b/src/sentry/web/frontend/group_plugin_action.py
@@ -12,7 +12,7 @@ from sentry.web.frontend.base import ProjectView
 class GroupPluginActionView(ProjectView):
     required_scope = 'event:read'
 
-    def handle(self, request, organization, team, project, group_id, slug):
+    def handle(self, request, organization, project, group_id, slug):
         group = get_object_or_404(Group, pk=group_id, project=project)
 
         try:
diff --git a/src/sentry/web/frontend/group_tag_export.py b/src/sentry/web/frontend/group_tag_export.py
index 35cdb88cfb..9ab24f727a 100644
--- a/src/sentry/web/frontend/group_tag_export.py
+++ b/src/sentry/web/frontend/group_tag_export.py
@@ -58,7 +58,7 @@ class GroupTagExportView(ProjectView, CsvMixin, EnvironmentMixin):
             item.first_seen.strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
         )
 
-    def get(self, request, organization, project, team, group_id, key):
+    def get(self, request, organization, project, group_id, key):
         try:
             # TODO(tkaemming): This should *actually* redirect, see similar
             # comment in ``GroupEndpoint.convert_args``.
diff --git a/src/sentry/web/frontend/project_plugins.py b/src/sentry/web/frontend/project_plugins.py
index 73aad3281b..0eb33ddea6 100644
--- a/src/sentry/web/frontend/project_plugins.py
+++ b/src/sentry/web/frontend/project_plugins.py
@@ -10,7 +10,7 @@ from sentry.web.frontend.base import ProjectView
 class ProjectPluginsView(ProjectView):
     required_scope = 'project:write'
 
-    def handle(self, request, organization, team, project):
+    def handle(self, request, organization, project):
         if request.POST:
             enabled = set(request.POST.getlist('plugin'))
             for plugin in plugins.configurable_for_project(project, version=None):
diff --git a/src/sentry/web/frontend/project_rule_edit.py b/src/sentry/web/frontend/project_rule_edit.py
index e536cce62b..2db483b15b 100644
--- a/src/sentry/web/frontend/project_rule_edit.py
+++ b/src/sentry/web/frontend/project_rule_edit.py
@@ -10,7 +10,7 @@ from sentry.utils.http import absolute_uri
 class ProjectRuleEditView(ProjectView):
     required_scope = 'project:write'
 
-    def get(self, request, organization, team, project, rule_id=None):
+    def get(self, request, organization, project, rule_id=None):
         if rule_id:
             try:
                 rule = Rule.objects.get(
diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
index 76a579afad..13aba501b5 100644
--- a/src/sentry/web/frontend/remove_project.py
+++ b/src/sentry/web/frontend/remove_project.py
@@ -23,7 +23,7 @@ class RemoveProjectView(ProjectView):
             return RemoveProjectForm(request.POST)
         return RemoveProjectForm()
 
-    def handle(self, request, organization, team, project):
+    def handle(self, request, organization, project):
         form = self.get_form(request)
 
         if form.is_valid():
@@ -39,7 +39,7 @@ class RemoveProjectView(ProjectView):
             )
 
             return HttpResponseRedirect(
-                reverse('sentry-organization-home', args=[team.organization.slug])
+                reverse('sentry-organization-home', args=[organization.slug])
             )
 
         context = {
diff --git a/src/sentry/web/frontend/transfer_project.py b/src/sentry/web/frontend/transfer_project.py
index d1a0dea428..bd477d7485 100644
--- a/src/sentry/web/frontend/transfer_project.py
+++ b/src/sentry/web/frontend/transfer_project.py
@@ -36,7 +36,7 @@ class TransferProjectView(ProjectView):
             return TransferProjectForm(request.POST)
         return TransferProjectForm()
 
-    def handle(self, request, organization, team, project):
+    def handle(self, request, organization, project):
         form = self.get_form(request)
 
         if form.is_valid():
@@ -94,7 +94,7 @@ class TransferProjectView(ProjectView):
             )
 
             return HttpResponseRedirect(
-                reverse('sentry-organization-home', args=[team.organization.slug])
+                reverse('sentry-organization-home', args=[organization.slug])
             )
 
         context = {
diff --git a/tests/acceptance/test_account_notification_settings.py b/tests/acceptance/test_account_notification_settings.py
index 4bb97c5469..17d5095abe 100644
--- a/tests/acceptance/test_account_notification_settings.py
+++ b/tests/acceptance/test_account_notification_settings.py
@@ -14,7 +14,7 @@ class AccountNotificationSettingsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_dashboard.py b/tests/acceptance/test_dashboard.py
index 370a55be87..da16168dab 100644
--- a/tests/acceptance/test_dashboard.py
+++ b/tests/acceptance/test_dashboard.py
@@ -16,7 +16,7 @@ class DashboardTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index 00f06bfd3a..545543666b 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -15,7 +15,7 @@ class IssueDetailsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(self.user)
diff --git a/tests/acceptance/test_organization_integrations.py b/tests/acceptance/test_organization_integrations.py
index 3d1759fab8..fae8a163f5 100644
--- a/tests/acceptance/test_organization_integrations.py
+++ b/tests/acceptance/test_organization_integrations.py
@@ -14,7 +14,7 @@ class OrganizationIntegrationsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_organization_rate_limits.py b/tests/acceptance/test_organization_rate_limits.py
index 1c2c6ba871..5891b0c24c 100644
--- a/tests/acceptance/test_organization_rate_limits.py
+++ b/tests/acceptance/test_organization_rate_limits.py
@@ -17,7 +17,7 @@ class OrganizationRateLimitsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_organization_settings.py b/tests/acceptance/test_organization_settings.py
index d9f7820d03..c411520573 100644
--- a/tests/acceptance/test_organization_settings.py
+++ b/tests/acceptance/test_organization_settings.py
@@ -14,7 +14,7 @@ class OrganizationSettingsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_organization_stats.py b/tests/acceptance/test_organization_stats.py
index e73c2fb58a..044a6637eb 100644
--- a/tests/acceptance/test_organization_stats.py
+++ b/tests/acceptance/test_organization_stats.py
@@ -13,7 +13,7 @@ class OrganizationStatsTest(AcceptanceTestCase):
         self.team = self.create_team(name='Team Name', organization=self.org, members=[self.user])
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Project Name'
         )
         self.login_as(self.user)
diff --git a/tests/acceptance/test_project_alert_settings.py b/tests/acceptance/test_project_alert_settings.py
index f181d26008..c1c2ed9f1f 100644
--- a/tests/acceptance/test_project_alert_settings.py
+++ b/tests/acceptance/test_project_alert_settings.py
@@ -15,7 +15,7 @@ class ProjectAlertSettingsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_project_data_forwarding_settings.py b/tests/acceptance/test_project_data_forwarding_settings.py
index d4505a5910..25bfa81c3e 100644
--- a/tests/acceptance/test_project_data_forwarding_settings.py
+++ b/tests/acceptance/test_project_data_forwarding_settings.py
@@ -14,7 +14,7 @@ class ProjectDataForwardingSettingsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_project_issue_tracking_settings.py b/tests/acceptance/test_project_issue_tracking_settings.py
index dcdcb638ff..8b89d72d74 100644
--- a/tests/acceptance/test_project_issue_tracking_settings.py
+++ b/tests/acceptance/test_project_issue_tracking_settings.py
@@ -14,7 +14,7 @@ class ProjectAlertSettingsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_project_issues.py b/tests/acceptance/test_project_issues.py
index 45f2dfff79..39b02ecb53 100644
--- a/tests/acceptance/test_project_issues.py
+++ b/tests/acceptance/test_project_issues.py
@@ -13,7 +13,7 @@ class ProjectIssuesTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(self.user)
diff --git a/tests/acceptance/test_project_keys.py b/tests/acceptance/test_project_keys.py
index 190f4ff711..602436542f 100644
--- a/tests/acceptance/test_project_keys.py
+++ b/tests/acceptance/test_project_keys.py
@@ -18,7 +18,7 @@ class ProjectKeysTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
@@ -57,7 +57,7 @@ class ProjectKeyDetailsTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_project_list.py b/tests/acceptance/test_project_list.py
index fdc9774f46..7a74ccc075 100644
--- a/tests/acceptance/test_project_list.py
+++ b/tests/acceptance/test_project_list.py
@@ -16,7 +16,7 @@ class ProjectListTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.create_member(
diff --git a/tests/acceptance/test_project_overview.py b/tests/acceptance/test_project_overview.py
index 73f787908a..77101f5b15 100644
--- a/tests/acceptance/test_project_overview.py
+++ b/tests/acceptance/test_project_overview.py
@@ -15,7 +15,7 @@ class ProjectOverviewTest(AcceptanceTestCase):
             organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(self.user)
diff --git a/tests/acceptance/test_project_similar_issues.py b/tests/acceptance/test_project_similar_issues.py
index dfd0d08e37..bcd336b717 100644
--- a/tests/acceptance/test_project_similar_issues.py
+++ b/tests/acceptance/test_project_similar_issues.py
@@ -17,7 +17,7 @@ class ProjectIssuesGroupingTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(self.user)
diff --git a/tests/acceptance/test_shared_issue.py b/tests/acceptance/test_shared_issue.py
index 623a1591e2..b728d6e573 100644
--- a/tests/acceptance/test_shared_issue.py
+++ b/tests/acceptance/test_shared_issue.py
@@ -16,7 +16,7 @@ class SharedIssueTest(AcceptanceTestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(self.user)
diff --git a/tests/integration/test_api.py b/tests/integration/test_api.py
index 48edf74d45..15004ee23d 100644
--- a/tests/integration/test_api.py
+++ b/tests/integration/test_api.py
@@ -16,7 +16,7 @@ class AuthenticationTest(AuthProviderTestCase):
         organization = self.create_organization(name='foo')
         team = self.create_team(name='bar', organization=organization)
         project = self.create_project(
-            name='baz', organization=organization, team=team)
+            name='baz', organization=organization, teams=[team])
         member = self.create_member(
             user=user, organization=organization, teams=[team])
         setattr(member.flags, 'sso:linked', True)
@@ -73,7 +73,7 @@ class AuthenticationTest(AuthProviderTestCase):
         organization = self.create_organization(name='foo')
         team = self.create_team(name='bar', organization=organization)
         project = self.create_project(
-            name='baz', organization=organization, team=team)
+            name='baz', organization=organization, teams=[team])
         member = self.create_member(
             user=user, organization=organization, teams=[team])
         setattr(member.flags, 'sso:linked', True)
diff --git a/tests/sentry/api/endpoints/test_group_tombstone.py b/tests/sentry/api/endpoints/test_group_tombstone.py
index b3d26773a9..12d85bcf1c 100644
--- a/tests/sentry/api/endpoints/test_group_tombstone.py
+++ b/tests/sentry/api/endpoints/test_group_tombstone.py
@@ -13,7 +13,7 @@ class GroupTombstoneTest(APITestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(self.user)
diff --git a/tests/sentry/api/endpoints/test_group_tombstone_details.py b/tests/sentry/api/endpoints/test_group_tombstone_details.py
index 3eb9c950c3..43dee7fecd 100644
--- a/tests/sentry/api/endpoints/test_group_tombstone_details.py
+++ b/tests/sentry/api/endpoints/test_group_tombstone_details.py
@@ -12,7 +12,7 @@ class GroupTombstoneDetailsTest(APITestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
         self.login_as(user=self.user)
@@ -52,13 +52,13 @@ class GroupTombstoneDetailsTest(APITestCase):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Bengal',
         )
 
         self.other_project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
             name='Snake',
         )
 
diff --git a/tests/sentry/api/endpoints/test_issues_resolved_in_release.py b/tests/sentry/api/endpoints/test_issues_resolved_in_release.py
index 0b6c172c1b..de0af6fefd 100644
--- a/tests/sentry/api/endpoints/test_issues_resolved_in_release.py
+++ b/tests/sentry/api/endpoints/test_issues_resolved_in_release.py
@@ -22,7 +22,7 @@ class IssuesResolvedInReleaseEndpointTest(APITestCase):
         self.team = self.create_team(organization=self.org)
         self.create_member(organization=self.org, user=self.user, teams=[self.team])
         self.project = self.create_project(
-            team=self.team,
+            teams=[self.team],
         )
         self.release = self.create_release(
             project=self.project,
diff --git a/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py b/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py
index 2986658b8f..bc34ff8449 100644
--- a/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py
+++ b/tests/sentry/api/endpoints/test_organization_member_issues_assigned.py
@@ -22,11 +22,11 @@ class OrganizationMemberIssuesAssignedTest(APITestCase):
             role='admin',
             teams=[team],
         )
-        project1 = self.create_project(name='foo', organization=org, team=team)
+        project1 = self.create_project(name='foo', organization=org, teams=[team])
         group1 = self.create_group(project=project1)
         group2 = self.create_group(project=project1)
         project2 = self.create_project(
-            name='bar', organization=org, team=team, status=ProjectStatus.PENDING_DELETION
+            name='bar', organization=org, teams=[team], status=ProjectStatus.PENDING_DELETION
         )
         group3 = self.create_group(project=project2)
         GroupAssignee.objects.create(
diff --git a/tests/sentry/api/endpoints/test_organization_projects.py b/tests/sentry/api/endpoints/test_organization_projects.py
index a14649eab8..78440bfcc6 100644
--- a/tests/sentry/api/endpoints/test_organization_projects.py
+++ b/tests/sentry/api/endpoints/test_organization_projects.py
@@ -11,7 +11,7 @@ class OrganizationProjectsTest(APITestCase):
 
         org = self.create_organization(owner=self.user, name='baz')
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
 
         path = '/api/0/organizations/{}/projects/'.format(org.slug)
         response = self.client.get(path)
@@ -25,7 +25,7 @@ class OrganizationProjectsTest(APITestCase):
 
         org = self.create_organization(owner=self.user, name='baz')
         team = self.create_team(organization=org)
-        self.create_project(team=team)
+        self.create_project(teams=[team])
 
         path = '/api/0/organizations/{}/projects/'.format(org.slug)
 
diff --git a/tests/sentry/api/endpoints/test_organization_release_details.py b/tests/sentry/api/endpoints/test_organization_release_details.py
index 5efb9907b3..b3fc6b84e3 100644
--- a/tests/sentry/api/endpoints/test_organization_release_details.py
+++ b/tests/sentry/api/endpoints/test_organization_release_details.py
@@ -20,8 +20,8 @@ class ReleaseDetailsTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org)
+        project = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org)
 
         release = Release.objects.create(
             organization_id=org.id,
@@ -73,8 +73,8 @@ class ReleaseDetailsTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org)
+        project = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org)
 
         release = Release.objects.create(
             organization_id=org.id,
@@ -121,8 +121,8 @@ class UpdateReleaseDetailsTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org)
+        project = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org)
 
         base_release = Release.objects.create(
             organization_id=org.id,
@@ -251,8 +251,8 @@ class UpdateReleaseDetailsTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org)
+        project = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org)
 
         base_release = Release.objects.create(
             organization_id=org.id,
@@ -371,7 +371,7 @@ class UpdateReleaseDetailsTest(APITestCase):
 
         team = self.create_team(organization=org)
 
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
 
         release = Release.objects.create(
             organization_id=org.id,
@@ -423,7 +423,7 @@ class UpdateReleaseDetailsTest(APITestCase):
 
         team = self.create_team(organization=org)
 
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
 
         release = Release.objects.create(
             organization_id=org.id,
@@ -471,7 +471,7 @@ class ReleaseDeleteTest(APITestCase):
 
         team = self.create_team(organization=org)
 
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
 
         release = Release.objects.create(
             organization_id=org.id,
@@ -515,7 +515,7 @@ class ReleaseDeleteTest(APITestCase):
 
         team = self.create_team(organization=org)
 
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
 
         release = Release.objects.create(
             organization_id=org.id,
@@ -549,7 +549,7 @@ class ReleaseDeleteTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
         release = Release.objects.create(
             organization_id=org.id,
             version='abcabcabc',
@@ -588,7 +588,7 @@ class ReleaseDeleteTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
         Repository.objects.create(organization_id=org.id, name='a_repo')
         release = Release.objects.create(
             organization_id=org.id,
diff --git a/tests/sentry/api/endpoints/test_organization_releases.py b/tests/sentry/api/endpoints/test_organization_releases.py
index 8e9198871d..96f63bc6c2 100644
--- a/tests/sentry/api/endpoints/test_organization_releases.py
+++ b/tests/sentry/api/endpoints/test_organization_releases.py
@@ -24,9 +24,9 @@ class OrganizationReleaseListTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project1 = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org2)
-        project3 = self.create_project(team=team1, organization=org)
+        project1 = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org2)
+        project3 = self.create_project(teams=[team1], organization=org)
 
         self.create_member(teams=[team1], user=user, organization=org)
 
@@ -78,7 +78,7 @@ class OrganizationReleaseListTest(APITestCase):
 
         team = self.create_team(organization=org)
 
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
 
         self.create_member(teams=[team], user=user, organization=org)
 
@@ -119,8 +119,8 @@ class OrganizationReleaseListTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project1 = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org)
+        project1 = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org)
 
         self.create_member(teams=[team1], user=user, organization=org)
         self.login_as(user=user)
@@ -164,8 +164,8 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
-        project2 = self.create_project(name='bar', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
+        project2 = self.create_project(name='bar', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -203,7 +203,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         )
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -300,8 +300,8 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
-        project2 = self.create_project(name='bar', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
+        project2 = self.create_project(name='bar', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -341,7 +341,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -380,7 +380,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -408,7 +408,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -466,7 +466,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         )
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -550,7 +550,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         )
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -624,7 +624,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
@@ -646,8 +646,8 @@ class OrganizationReleaseCreateTest(APITestCase):
         team1 = self.create_team(organization=org)
         team2 = self.create_team(organization=org)
 
-        project1 = self.create_project(team=team1, organization=org)
-        project2 = self.create_project(team=team2, organization=org)
+        project1 = self.create_project(teams=[team1], organization=org)
+        project2 = self.create_project(teams=[team2], organization=org)
 
         self.create_member(teams=[team1], user=user, organization=org)
         self.login_as(user=user)
@@ -695,7 +695,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         org2 = self.create_organization()
 
         team1 = self.create_team(organization=org)
-        project1 = self.create_project(team=team1, organization=org)
+        project1 = self.create_project(teams=[team1], organization=org)
         release1 = Release.objects.create(
             organization_id=org.id,
             version='1',
@@ -769,7 +769,7 @@ class OrganizationReleaseCreateTest(APITestCase):
 
         team1 = self.create_team(organization=org)
         self.create_member(teams=[team1], user=user, organization=org)
-        project1 = self.create_project(team=team1, organization=org)
+        project1 = self.create_project(teams=[team1], organization=org)
         release1 = Release.objects.create(
             organization_id=org.id,
             version='1',
@@ -831,7 +831,7 @@ class OrganizationReleaseCreateTest(APITestCase):
         org.save()
 
         team = self.create_team(organization=org)
-        project = self.create_project(name='foo', organization=org, team=team)
+        project = self.create_project(name='foo', organization=org, teams=[team])
 
         self.create_member(teams=[team], user=user, organization=org)
         self.login_as(user=user)
diff --git a/tests/sentry/api/endpoints/test_organization_stats.py b/tests/sentry/api/endpoints/test_organization_stats.py
index ec7d0c7aea..a9be7e7184 100644
--- a/tests/sentry/api/endpoints/test_organization_stats.py
+++ b/tests/sentry/api/endpoints/test_organization_stats.py
@@ -45,7 +45,7 @@ class OrganizationStatsTest(APITestCase):
 
         org = self.create_organization(owner=self.user)
         project = self.create_project(
-            team=self.create_team(organization=org, members=[self.user]),
+            teams=[self.create_team(organization=org, members=[self.user])],
         )
 
         make_request = functools.partial(
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues.py b/tests/sentry/api/endpoints/test_organization_user_issues.py
index 6a923f5570..e46d667943 100644
--- a/tests/sentry/api/endpoints/test_organization_user_issues.py
+++ b/tests/sentry/api/endpoints/test_organization_user_issues.py
@@ -19,8 +19,8 @@ class OrganizationUserIssuesTest(APITestCase):
         self.org.save()
         self.team1 = self.create_team(organization=self.org)
         self.team2 = self.create_team(organization=self.org)
-        self.project1 = self.create_project(team=self.team1)
-        self.project2 = self.create_project(team=self.team2)
+        self.project1 = self.create_project(teams=[self.team1])
+        self.project2 = self.create_project(teams=[self.team2])
         self.group1 = self.create_group(
             project=self.project1,
             last_seen=timezone.now() - timedelta(minutes=1),
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues_search.py b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
index c639a1e23c..b2caf00afa 100644
--- a/tests/sentry/api/endpoints/test_organization_user_issues_search.py
+++ b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
@@ -19,8 +19,8 @@ class OrganizationUserIssuesSearchTest(APITestCase):
         self.org.save()
         self.team1 = self.create_team(organization=self.org)
         self.team2 = self.create_team(organization=self.org)
-        self.project1 = self.create_project(team=self.team1)
-        self.project2 = self.create_project(team=self.team2)
+        self.project1 = self.create_project(teams=[self.team1])
+        self.project2 = self.create_project(teams=[self.team2])
         group1 = self.create_group(
             project=self.project1, last_seen=timezone.now() - timedelta(minutes=1)
         )
diff --git a/tests/sentry/api/endpoints/test_project_create_sample.py b/tests/sentry/api/endpoints/test_project_create_sample.py
index 89581e77fd..6527efc3ee 100644
--- a/tests/sentry/api/endpoints/test_project_create_sample.py
+++ b/tests/sentry/api/endpoints/test_project_create_sample.py
@@ -12,7 +12,7 @@ class ProjectCreateSampleTest(APITestCase):
         self.team = self.create_team()
 
     def test_simple(self):
-        project = self.create_project(team=self.team, name='foo')
+        project = self.create_project(teams=[self.team], name='foo')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -27,7 +27,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_project_platform(self):
-        project = self.create_project(team=self.team, name='foo', platform='javascript-react')
+        project = self.create_project(teams=[self.team], name='foo', platform='javascript-react')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -42,7 +42,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_cocoa(self):
-        project = self.create_project(team=self.team, name='foo', platform='cocoa')
+        project = self.create_project(teams=[self.team], name='foo', platform='cocoa')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -57,7 +57,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_java(self):
-        project = self.create_project(team=self.team, name='foo', platform='java')
+        project = self.create_project(teams=[self.team], name='foo', platform='java')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -72,7 +72,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_javascript(self):
-        project = self.create_project(team=self.team, name='foo', platform='javascript')
+        project = self.create_project(teams=[self.team], name='foo', platform='javascript')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -87,7 +87,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_php(self):
-        project = self.create_project(team=self.team, name='foo', platform='php')
+        project = self.create_project(teams=[self.team], name='foo', platform='php')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -102,7 +102,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_python(self):
-        project = self.create_project(team=self.team, name='foo', platform='python')
+        project = self.create_project(teams=[self.team], name='foo', platform='python')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -117,7 +117,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_reactnative(self):
-        project = self.create_project(team=self.team, name='foo', platform='react-native')
+        project = self.create_project(teams=[self.team], name='foo', platform='react-native')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
@@ -132,7 +132,7 @@ class ProjectCreateSampleTest(APITestCase):
         assert 'groupID' in json.loads(response.content)
 
     def test_ruby(self):
-        project = self.create_project(team=self.team, name='foo', platform='ruby')
+        project = self.create_project(teams=[self.team], name='foo', platform='ruby')
 
         url = reverse(
             'sentry-api-0-project-create-sample',
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 69066b0b11..da5199aa96 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -40,7 +40,7 @@ class ProjectDetailsTest(APITestCase):
         project = self.create_project(
             name='Bar',
             slug='bar',
-            team=team,
+            teams=[team],
         )
         # We want to make sure we don't hit the LegacyProjectRedirect view at all.
         url = '/api/0/projects/%s/%s/' % (org.slug, project.slug)
diff --git a/tests/sentry/api/endpoints/test_project_index.py b/tests/sentry/api/endpoints/test_project_index.py
index 396fb41c86..ce9a2a07cb 100644
--- a/tests/sentry/api/endpoints/test_project_index.py
+++ b/tests/sentry/api/endpoints/test_project_index.py
@@ -18,10 +18,10 @@ class ProjectsListTest(APITestCase):
         user = self.create_user()
         org = self.create_organization()
         team = self.create_team(organization=org, members=[user])
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
         org2 = self.create_organization()
         team2 = self.create_team(organization=org2, members=[])
-        self.create_project(team=team2)
+        self.create_project(teams=[team2])
 
         self.login_as(user=user)
         response = self.client.get(self.path)
@@ -53,8 +53,8 @@ class ProjectsListTest(APITestCase):
         user = self.create_user()
         org = self.create_organization()
         team = self.create_team(organization=org, members=[user])
-        project1 = self.create_project(team=team)
-        project2 = self.create_project(team=team, status=ProjectStatus.PENDING_DELETION)
+        project1 = self.create_project(teams=[team])
+        project2 = self.create_project(teams=[team], status=ProjectStatus.PENDING_DELETION)
 
         self.login_as(user=user)
 
@@ -74,8 +74,8 @@ class ProjectsListTest(APITestCase):
         user = self.create_user()
         org = self.create_organization()
         team = self.create_team(organization=org, members=[user])
-        project1 = self.create_project(name='foo', team=team)
-        self.create_project(name='bar', team=team)
+        project1 = self.create_project(name='foo', teams=[team])
+        self.create_project(name='bar', teams=[team])
 
         self.login_as(user=user)
 
@@ -94,8 +94,8 @@ class ProjectsListTest(APITestCase):
         user = self.create_user()
         org = self.create_organization()
         team = self.create_team(organization=org, members=[user])
-        project1 = self.create_project(slug='foo', name='foo', team=team)
-        self.create_project(name='bar', slug='bar', team=team)
+        project1 = self.create_project(slug='foo', name='foo', teams=[team])
+        self.create_project(name='bar', slug='bar', teams=[team])
 
         self.login_as(user=user)
 
@@ -114,8 +114,8 @@ class ProjectsListTest(APITestCase):
         user = self.create_user()
         org = self.create_organization()
         team = self.create_team(organization=org, members=[user])
-        project1 = self.create_project(team=team)
-        self.create_project(team=team)
+        project1 = self.create_project(teams=[team])
+        self.create_project(teams=[team])
 
         self.login_as(user=user)
 
diff --git a/tests/sentry/api/endpoints/test_project_member_index.py b/tests/sentry/api/endpoints/test_project_member_index.py
index 70958defe2..9e614dde15 100644
--- a/tests/sentry/api/endpoints/test_project_member_index.py
+++ b/tests/sentry/api/endpoints/test_project_member_index.py
@@ -12,10 +12,10 @@ class ProjectMemberIndexTest(APITestCase):
         user_3 = self.create_user('baz@localhost', username='baz')
         org = self.create_organization(owner=user_1)
         team = self.create_team(organization=org, slug='baz')
-        project_1 = self.create_project(team=team, slug='foo')
-        self.create_project(team=team, slug='bar')
-        self.create_member(organization=org, user=user_2, teams=[project_1.team])
-        self.create_member(organization=org, user=user_3, teams=[project_1.team])
+        project_1 = self.create_project(teams=[team], slug='foo')
+        self.create_project(teams=[team], slug='bar')
+        self.create_member(organization=org, user=user_2, teams=[team])
+        self.create_member(organization=org, user=user_3, teams=[team])
 
         self.login_as(user=user_2)
 
diff --git a/tests/sentry/api/endpoints/test_project_processingissues.py b/tests/sentry/api/endpoints/test_project_processingissues.py
index 25cadc8f2a..06cda9c774 100644
--- a/tests/sentry/api/endpoints/test_project_processingissues.py
+++ b/tests/sentry/api/endpoints/test_project_processingissues.py
@@ -13,7 +13,7 @@ class ProjectProjectProcessingIssuesTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
+        project1 = self.create_project(teams=[team], name='foo')
 
         raw_event = RawEvent.objects.create(project_id=project1.id, event_id='abc')
 
@@ -45,7 +45,7 @@ class ProjectProjectProcessingIssuesTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
+        project1 = self.create_project(teams=[team], name='foo')
 
         raw_event = RawEvent.objects.create(project_id=project1.id, event_id='abc')
 
@@ -93,7 +93,7 @@ class ProjectProjectProcessingIssuesTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
+        project1 = self.create_project(teams=[team], name='foo')
 
         RawEvent.objects.create(project_id=project1.id, event_id='abc')
 
diff --git a/tests/sentry/api/endpoints/test_project_releases.py b/tests/sentry/api/endpoints/test_project_releases.py
index c4dc74eb0c..745f7e2d6a 100644
--- a/tests/sentry/api/endpoints/test_project_releases.py
+++ b/tests/sentry/api/endpoints/test_project_releases.py
@@ -12,8 +12,8 @@ class ProjectReleaseListTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
-        project2 = self.create_project(team=team, name='bar')
+        project1 = self.create_project(teams=[team], name='foo')
+        project2 = self.create_project(teams=[team], name='bar')
 
         release1 = Release.objects.create(
             organization_id=project1.organization_id,
@@ -64,7 +64,7 @@ class ProjectReleaseListTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project = self.create_project(team=team, name='foo')
+        project = self.create_project(teams=[team], name='foo')
 
         release = Release.objects.create(
             organization_id=project.organization_id,
diff --git a/tests/sentry/api/endpoints/test_project_rule_details.py b/tests/sentry/api/endpoints/test_project_rule_details.py
index 9e9be3f584..8ebffb3013 100644
--- a/tests/sentry/api/endpoints/test_project_rule_details.py
+++ b/tests/sentry/api/endpoints/test_project_rule_details.py
@@ -13,8 +13,8 @@ class ProjectRuleDetailsTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
-        self.create_project(team=team, name='bar')
+        project1 = self.create_project(teams=[team], name='foo')
+        self.create_project(teams=[team], name='bar')
 
         rule = project1.rule_set.all()[0]
 
diff --git a/tests/sentry/api/endpoints/test_project_rules.py b/tests/sentry/api/endpoints/test_project_rules.py
index 7af6911266..5db86b4048 100644
--- a/tests/sentry/api/endpoints/test_project_rules.py
+++ b/tests/sentry/api/endpoints/test_project_rules.py
@@ -11,8 +11,8 @@ class ProjectRuleListTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
-        self.create_project(team=team, name='bar')
+        project1 = self.create_project(teams=[team], name='foo')
+        self.create_project(teams=[team], name='bar')
 
         url = reverse(
             'sentry-api-0-project-rules',
diff --git a/tests/sentry/api/endpoints/test_project_searches.py b/tests/sentry/api/endpoints/test_project_searches.py
index b5f88c6443..8f9a6fbca1 100644
--- a/tests/sentry/api/endpoints/test_project_searches.py
+++ b/tests/sentry/api/endpoints/test_project_searches.py
@@ -13,8 +13,8 @@ class ProjectSearchListTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
-        project2 = self.create_project(team=team, name='bar')
+        project1 = self.create_project(teams=[team], name='foo')
+        project2 = self.create_project(teams=[team], name='bar')
         SavedSearch.objects.filter(project=project1).delete()
         SavedSearch.objects.filter(project=project2).delete()
 
@@ -54,7 +54,7 @@ class ProjectSearchCreateTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project = self.create_project(team=team, name='foo')
+        project = self.create_project(teams=[team], name='foo')
 
         url = reverse(
             'sentry-api-0-project-searches',
@@ -78,7 +78,7 @@ class ProjectSearchCreateTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project = self.create_project(team=team, name='foo')
+        project = self.create_project(teams=[team], name='foo')
 
         SavedSearch.objects.create(name='ignored', project=project, query='')
 
@@ -98,7 +98,7 @@ class ProjectSearchCreateTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project = self.create_project(team=team, name='foo')
+        project = self.create_project(teams=[team], name='foo')
 
         url = reverse(
             'sentry-api-0-project-searches',
@@ -134,7 +134,7 @@ class ProjectSearchCreateTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team()
-        project = self.create_project(team=team, name='foo')
+        project = self.create_project(teams=[team], name='foo')
 
         url = reverse(
             'sentry-api-0-project-searches',
diff --git a/tests/sentry/api/endpoints/test_project_user_details.py b/tests/sentry/api/endpoints/test_project_user_details.py
index 29c0ce2b72..0efc8564dc 100644
--- a/tests/sentry/api/endpoints/test_project_user_details.py
+++ b/tests/sentry/api/endpoints/test_project_user_details.py
@@ -14,7 +14,7 @@ class ProjectUserDetailsTest(APITestCase):
         self.user = self.create_user()
         self.org = self.create_organization(owner=None)
         self.team = self.create_team(organization=self.org)
-        self.project = self.create_project(organization=self.org, team=self.team)
+        self.project = self.create_project(organization=self.org, teams=[self.team])
         self.create_member(user=self.user, organization=self.org, teams=[self.project.team])
         self.euser = EventUser.objects.create(email='foo@example.com', project_id=self.project.id)
 
diff --git a/tests/sentry/api/endpoints/test_project_user_stats.py b/tests/sentry/api/endpoints/test_project_user_stats.py
index 9399731251..abb83c3ab6 100644
--- a/tests/sentry/api/endpoints/test_project_user_stats.py
+++ b/tests/sentry/api/endpoints/test_project_user_stats.py
@@ -14,7 +14,7 @@ class ProjectUserDetailsTest(APITestCase):
         self.user = self.create_user()
         self.org = self.create_organization(owner=None)
         self.team = self.create_team(organization=self.org)
-        self.project = self.create_project(organization=self.org, team=self.team)
+        self.project = self.create_project(organization=self.org, teams=[self.team])
         self.create_member(
             user=self.user,
             organization=self.org,
diff --git a/tests/sentry/api/endpoints/test_team_details.py b/tests/sentry/api/endpoints/test_team_details.py
index b57498f810..2aad03c6eb 100644
--- a/tests/sentry/api/endpoints/test_team_details.py
+++ b/tests/sentry/api/endpoints/test_team_details.py
@@ -59,7 +59,7 @@ class TeamDeleteTest(APITestCase):
 
         org = self.create_organization()
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)  # NOQA
+        project = self.create_project(teams=[team])  # NOQA
 
         user = self.create_user(email='foo@example.com', is_superuser=False)
 
@@ -102,7 +102,7 @@ class TeamDeleteTest(APITestCase):
     def test_cannot_remove_as_member(self):
         org = self.create_organization(owner=self.user)
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)  # NOQA
+        project = self.create_project(teams=[team])  # NOQA
 
         user = self.create_user(email='foo@example.com', is_superuser=False)
 
diff --git a/tests/sentry/api/endpoints/test_team_groups_new.py b/tests/sentry/api/endpoints/test_team_groups_new.py
index ebe76cb798..250d0762b1 100644
--- a/tests/sentry/api/endpoints/test_team_groups_new.py
+++ b/tests/sentry/api/endpoints/test_team_groups_new.py
@@ -7,8 +7,8 @@ from sentry.testutils import APITestCase
 
 class TeamGroupsNewTest(APITestCase):
     def test_simple(self):
-        project1 = self.create_project(team=self.team, slug='foo')
-        project2 = self.create_project(team=self.team, slug='bar')
+        project1 = self.create_project(teams=[self.team], slug='foo')
+        project2 = self.create_project(teams=[self.team], slug='bar')
         group1 = self.create_group(checksum='a' * 32, project=project1, score=10)
         group2 = self.create_group(checksum='b' * 32, project=project2, score=5)
 
diff --git a/tests/sentry/api/endpoints/test_team_groups_trending.py b/tests/sentry/api/endpoints/test_team_groups_trending.py
index 8ba580fed1..7688686d38 100644
--- a/tests/sentry/api/endpoints/test_team_groups_trending.py
+++ b/tests/sentry/api/endpoints/test_team_groups_trending.py
@@ -7,8 +7,8 @@ from sentry.testutils import APITestCase
 
 class TeamGroupsTrendingTest(APITestCase):
     def test_simple(self):
-        project1 = self.create_project(team=self.team, slug='foo')
-        project2 = self.create_project(team=self.team, slug='bar')
+        project1 = self.create_project(teams=[self.team], slug='foo')
+        project2 = self.create_project(teams=[self.team], slug='bar')
         group1 = self.create_group(checksum='a' * 32, project=project1, score=10)
         group2 = self.create_group(checksum='b' * 32, project=project2, score=5)
 
diff --git a/tests/sentry/api/endpoints/test_team_project_index.py b/tests/sentry/api/endpoints/test_team_project_index.py
index cd8aef24ab..90c4e91bf7 100644
--- a/tests/sentry/api/endpoints/test_team_project_index.py
+++ b/tests/sentry/api/endpoints/test_team_project_index.py
@@ -12,8 +12,8 @@ class TeamProjectIndexTest(APITestCase):
     def test_simple(self):
         self.login_as(user=self.user)
         team = self.create_team(members=[self.user])
-        project_1 = self.create_project(team=team, slug='fiz')
-        project_2 = self.create_project(team=team, slug='buzz')
+        project_1 = self.create_project(teams=[team], slug='fiz')
+        project_2 = self.create_project(teams=[team], slug='buzz')
 
         url = reverse(
             'sentry-api-0-team-project-index',
diff --git a/tests/sentry/api/endpoints/test_team_stats.py b/tests/sentry/api/endpoints/test_team_stats.py
index 58fee4cab1..98dfcf1ca9 100644
--- a/tests/sentry/api/endpoints/test_team_stats.py
+++ b/tests/sentry/api/endpoints/test_team_stats.py
@@ -11,10 +11,10 @@ class TeamStatsTest(APITestCase):
         self.login_as(user=self.user)
 
         team = self.create_team(members=[self.user])
-        project_1 = self.create_project(team=team, name='a')
-        project_2 = self.create_project(team=team, name='b')
+        project_1 = self.create_project(teams=[team], name='a')
+        project_2 = self.create_project(teams=[team], name='b')
         team_2 = self.create_team(members=[self.user])
-        project_3 = self.create_project(team=team_2, name='c')
+        project_3 = self.create_project(teams=[team_2], name='c')
 
         tsdb.incr(tsdb.models.project, project_1.id, count=3)
         tsdb.incr(tsdb.models.project, project_2.id, count=5)
diff --git a/tests/sentry/api/serializers/test_project.py b/tests/sentry/api/serializers/test_project.py
index 6bcf3aebc3..438143c080 100644
--- a/tests/sentry/api/serializers/test_project.py
+++ b/tests/sentry/api/serializers/test_project.py
@@ -16,7 +16,7 @@ class ProjectSerializerTest(TestCase):
         user = self.create_user(username='foo')
         organization = self.create_organization(owner=user)
         team = self.create_team(organization=organization)
-        project = self.create_project(team=team, organization=organization, name='foo')
+        project = self.create_project(teams=[team], organization=organization, name='foo')
 
         result = serialize(project, user)
 
@@ -30,14 +30,19 @@ class ProjectWithTeamSerializerTest(TestCase):
         user = self.create_user(username='foo')
         organization = self.create_organization(owner=user)
         team = self.create_team(organization=organization)
-        project = self.create_project(team=team, organization=organization, name='foo')
+        project = self.create_project(teams=[team], organization=organization, name='foo')
 
         result = serialize(project, user, ProjectWithTeamSerializer())
 
+        # remove for mysql tests
+        result['team'].pop('dateCreated')
+        serialized_team = serialize(team, user)
+        serialized_team.pop('dateCreated')
+
         assert result['slug'] == project.slug
         assert result['name'] == project.name
         assert result['id'] == six.text_type(project.id)
-        assert result['team'] == serialize(team, user)
+        assert result['team'] == serialized_team
 
 
 class ProjectWithOrganizationSerializerTest(TestCase):
@@ -45,7 +50,7 @@ class ProjectWithOrganizationSerializerTest(TestCase):
         user = self.create_user(username='foo')
         organization = self.create_organization(owner=user)
         team = self.create_team(organization=organization)
-        project = self.create_project(team=team, organization=organization, name='foo')
+        project = self.create_project(teams=[team], organization=organization, name='foo')
 
         result = serialize(project, user, ProjectWithOrganizationSerializer())
 
diff --git a/tests/sentry/api/serializers/test_team.py b/tests/sentry/api/serializers/test_team.py
index e8244297b0..0b593f3d42 100644
--- a/tests/sentry/api/serializers/test_team.py
+++ b/tests/sentry/api/serializers/test_team.py
@@ -33,8 +33,8 @@ class TeamWithProjectsSerializerTest(TestCase):
         user = self.create_user(username='foo')
         organization = self.create_organization(owner=user)
         team = self.create_team(organization=organization)
-        project = self.create_project(team=team, organization=organization, name='foo')
-        project2 = self.create_project(team=team, organization=organization, name='bar')
+        project = self.create_project(teams=[team], organization=organization, name='foo')
+        project2 = self.create_project(teams=[team], organization=organization, name='bar')
 
         result = serialize(team, user, TeamWithProjectsSerializer())
         result.pop('dateCreated')
diff --git a/tests/sentry/buffer/base/tests.py b/tests/sentry/buffer/base/tests.py
index 883627f993..6c47075b20 100644
--- a/tests/sentry/buffer/base/tests.py
+++ b/tests/sentry/buffer/base/tests.py
@@ -56,7 +56,6 @@ class BufferTest(TestCase):
         org = Organization.objects.create(slug='test-org')
         team = Team.objects.create(organization=org, slug='test-team')
         project = Project.objects.create(organization=org, slug='test-project', team=team)
-        project.add_team(team)
         release = Release.objects.create(organization=org, version='abcdefg')
         release_project = ReleaseProject.objects.create(project=project, release=release)
         assert release_project.new_groups == 0
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 5da5428e42..0d8e3a9b99 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -28,7 +28,7 @@ class BaseAPITest(TestCase):
     def setUp(self):
         self.user = self.create_user('coreapi@example.com')
         self.team = self.create_team(name='Foo')
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
         self.pk = self.project.key_set.get_or_create()[0]
         self.helper = self.helper_cls(agent='Awesome Browser', ip_address='198.51.100.0')
 
diff --git a/tests/sentry/deletions/test_tagkey.py b/tests/sentry/deletions/test_tagkey.py
index 7fbee2ff5c..64be609fd6 100644
--- a/tests/sentry/deletions/test_tagkey.py
+++ b/tests/sentry/deletions/test_tagkey.py
@@ -10,7 +10,7 @@ from sentry.testutils import TestCase
 class DeleteTagKeyTest(TestCase):
     def test_simple(self):
         team = self.create_team(name='test', slug='test')
-        project = self.create_project(team=team, name='test1', slug='test1')
+        project = self.create_project(teams=[team], name='test1', slug='test1')
         group = self.create_group(project=project)
         key = 'foo'
         value = 'bar'
@@ -41,7 +41,7 @@ class DeleteTagKeyTest(TestCase):
             ]
         )
 
-        project2 = self.create_project(team=team, name='test2')
+        project2 = self.create_project(teams=[team], name='test2')
         env2 = self.create_environment(project=project2)
         group2 = self.create_group(project=project2)
         tk2 = tagstore.create_tag_key(project2.id, env2.id, key)
diff --git a/tests/sentry/deletions/test_team.py b/tests/sentry/deletions/test_team.py
index 6d0bfa4f3b..7255b0f4b9 100644
--- a/tests/sentry/deletions/test_team.py
+++ b/tests/sentry/deletions/test_team.py
@@ -10,8 +10,8 @@ class DeleteTeamTest(TestCase):
         team = self.create_team(
             name='test',
         )
-        project1 = self.create_project(team=team, name='test1')
-        project2 = self.create_project(team=team, name='test2')
+        project1 = self.create_project(teams=[team], name='test1')
+        project2 = self.create_project(teams=[team], name='test2')
         assert project1.teams.first() == team
         assert project2.teams.first() == team
 
diff --git a/tests/sentry/integrations/cloudflare/test_webhook.py b/tests/sentry/integrations/cloudflare/test_webhook.py
index f797e5f31f..cd1d26f1f8 100644
--- a/tests/sentry/integrations/cloudflare/test_webhook.py
+++ b/tests/sentry/integrations/cloudflare/test_webhook.py
@@ -19,7 +19,7 @@ class BaseWebhookTest(TestCase):
         self.org = self.create_organization(owner=None)
         self.team = self.create_team(organization=self.org)
         self.create_member(organization=self.org, user=self.user, role='owner', teams=[self.team])
-        self.project = self.create_project(name='a', team=self.team)
+        self.project = self.create_project(name='a', teams=[self.team])
         self.token = ApiToken.objects.create(
             user=self.user,
             token='55838c83b3ec4e3ebc24c10c7bd071ffb1dc91161d3d49aeaedd9bd35d84bbe2',
@@ -149,7 +149,7 @@ class PreviewWebhookTest(BaseWebhookTest):
             self.key.get_dsn(public=True))
 
     def test_multiple_projects(self):
-        project2 = self.create_project(name='b', team=self.team)
+        project2 = self.create_project(name='b', teams=[self.team])
 
         webhook_data = json.loads(self.load_fixture(
             'cloudflare/preview-webhook-authenticated.json'))
@@ -234,7 +234,7 @@ class OptionChangeAccountWebhookTest(BaseWebhookTest):
             self.key.get_dsn(public=True))
 
     def test_with_existing_project_selected_and_no_keys(self):
-        project2 = self.create_project(name='b', team=self.team)
+        project2 = self.create_project(name='b', teams=[self.team])
         # kill the automatically generated keys
         ProjectKey.objects.filter(project=project2).delete()
 
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 9cf52067fd..72d37636ae 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -106,8 +106,8 @@ class TeamManagerTest(TestCase):
         org = self.create_organization()
         team = self.create_team(organization=org, name='Test')
         self.create_member(organization=org, user=user, teams=[team])
-        project = self.create_project(team=team, name='foo')
-        project2 = self.create_project(team=team, name='bar')
+        project = self.create_project(teams=[team], name='foo')
+        project2 = self.create_project(teams=[team], name='bar')
         result = Team.objects.get_for_user(
             organization=org,
             user=user,
@@ -121,8 +121,8 @@ class ProjectManagerTest(TestCase):
         user = User.objects.create(username='foo')
         org = self.create_organization()
         team = self.create_team(organization=org, name='Test')
-        project = self.create_project(team=team, name='foo')
-        project2 = self.create_project(team=team, name='baz')
+        project = self.create_project(teams=[team], name='foo')
+        project2 = self.create_project(teams=[team], name='baz')
 
         result = Project.objects.get_for_user(
             team=team,
diff --git a/tests/sentry/models/test_groupsubscription.py b/tests/sentry/models/test_groupsubscription.py
index 781afa4b08..157c8e0be0 100644
--- a/tests/sentry/models/test_groupsubscription.py
+++ b/tests/sentry/models/test_groupsubscription.py
@@ -29,7 +29,7 @@ class GetParticipantsTest(TestCase):
     def test_simple(self):
         org = self.create_organization()
         team = self.create_team(organization=org)
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
         group = self.create_group(project=project)
         user = self.create_user('foo@example.com')
         user2 = self.create_user('bar@example.com')
@@ -89,7 +89,7 @@ class GetParticipantsTest(TestCase):
     def test_no_conversations(self):
         org = self.create_organization()
         team = self.create_team(organization=org)
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
         group = self.create_group(project=project)
         user = self.create_user()
         self.create_member(user=user, organization=org, teams=[team])
@@ -210,7 +210,7 @@ class GetParticipantsTest(TestCase):
     def test_participating_only(self):
         org = self.create_organization()
         team = self.create_team(organization=org)
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
         group = self.create_group(project=project)
         user = self.create_user()
         self.create_member(user=user, organization=org, teams=[team])
@@ -378,7 +378,7 @@ class GetParticipantsTest(TestCase):
     def test_does_not_include_nonmember(self):
         org = self.create_organization()
         team = self.create_team(organization=org)
-        project = self.create_project(team=team, organization=org)
+        project = self.create_project(teams=[team], organization=org)
         group = self.create_group(project=project)
         user = self.create_user('foo@example.com')
 
diff --git a/tests/sentry/models/test_organization.py b/tests/sentry/models/test_organization.py
index 234cc8ce56..f03161927f 100644
--- a/tests/sentry/models/test_organization.py
+++ b/tests/sentry/models/test_organization.py
@@ -16,7 +16,7 @@ class OrganizationTest(TestCase):
         from_team_two = self.create_team(organization=from_org, slug='bizzy')
         from_project_two = self.create_project(
             organization=from_org,
-            team=from_team_two,
+            teams=[from_team_two],
             slug='bizzy',
         )
         from_release = Release.objects.create(version='abcabcabc', organization=from_org)
@@ -58,7 +58,7 @@ class OrganizationTest(TestCase):
         to_team_two = self.create_team(organization=to_org, slug='bizzy')
         to_project_two = self.create_project(
             organization=to_org,
-            team=to_team_two,
+            teams=[to_team_two],
             slug='bizzy',
         )
         to_member = self.create_member(organization=to_org, user=other_user)
diff --git a/tests/sentry/models/test_processingissue.py b/tests/sentry/models/test_processingissue.py
index 2457285073..29783d5ab9 100644
--- a/tests/sentry/models/test_processingissue.py
+++ b/tests/sentry/models/test_processingissue.py
@@ -7,7 +7,7 @@ from sentry.testutils import TestCase
 class ProcessingIssueTest(TestCase):
     def test_simple(self):
         team = self.create_team()
-        project1 = self.create_project(team=team, name='foo')
+        project1 = self.create_project(teams=[team], name='foo')
 
         raw_event = RawEvent.objects.create(project_id=project1.id, event_id='abc')
 
diff --git a/tests/sentry/models/test_project.py b/tests/sentry/models/test_project.py
index b64b831621..4fb4841917 100644
--- a/tests/sentry/models/test_project.py
+++ b/tests/sentry/models/test_project.py
@@ -11,7 +11,7 @@ class ProjectTest(TestCase):
         user = self.create_user()
         org = self.create_organization(owner=user)
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
         member = OrganizationMember.objects.get(
             user=user,
             organization=org,
@@ -27,7 +27,7 @@ class ProjectTest(TestCase):
         user = self.create_user()
         org = self.create_organization(owner=user)
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
         OrganizationMember.objects.get(
             user=user,
             organization=org,
@@ -38,7 +38,7 @@ class ProjectTest(TestCase):
     def test_transfer_to(self):
         from_org = self.create_organization()
         from_team = self.create_team(organization=from_org)
-        project = self.create_project(team=from_team)
+        project = self.create_project(teams=[from_team])
         to_org = self.create_organization()
         to_team = self.create_team(organization=to_org)
 
@@ -54,11 +54,11 @@ class ProjectTest(TestCase):
     def test_transfer_to_slug_collision(self):
         from_org = self.create_organization()
         from_team = self.create_team(organization=from_org)
-        project = self.create_project(team=from_team, slug='matt')
+        project = self.create_project(teams=[from_team], slug='matt')
         to_org = self.create_organization()
         to_team = self.create_team(organization=to_org)
         # conflicting project slug
-        self.create_project(team=to_team, slug='matt')
+        self.create_project(teams=[to_team], slug='matt')
 
         assert Project.objects.filter(organization=to_org).count() == 1
 
diff --git a/tests/sentry/models/test_projectcounter.py b/tests/sentry/models/test_projectcounter.py
index 61275fc30f..0d75017a50 100644
--- a/tests/sentry/models/test_projectcounter.py
+++ b/tests/sentry/models/test_projectcounter.py
@@ -11,7 +11,7 @@ class ProjectCounterTest(TestCase):
         user = self.create_user()
         org = self.create_organization(owner=user)
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
 
         assert Counter.increment(project, 42) == 42
         assert Counter.increment(project, 1) == 43
diff --git a/tests/sentry/models/test_team.py b/tests/sentry/models/test_team.py
index e03e9df375..082537e702 100644
--- a/tests/sentry/models/test_team.py
+++ b/tests/sentry/models/test_team.py
@@ -70,7 +70,7 @@ class TransferTest(TestCase):
         org = self.create_organization(name='foo', owner=user)
         org2 = self.create_organization(name='bar', owner=None)
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
         user2 = self.create_user('foo@example.com')
         self.create_member(
             user=user2,
@@ -125,7 +125,7 @@ class TransferTest(TestCase):
         org2 = self.create_organization(name='bar')
         team = self.create_team(name='foo', organization=org)
         team2 = self.create_team(name='foo', organization=org2)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
         team.transfer_to(org2)
 
         project = Project.objects.get(id=project.id)
@@ -139,7 +139,7 @@ class TransferTest(TestCase):
         org = self.create_organization(name='foo', owner=user)
         org2 = self.create_organization(name='bar', owner=None)
         team = self.create_team(organization=org)
-        project = self.create_project(team=team)
+        project = self.create_project(teams=[team])
 
         release = Release.objects.create(
             version='a' * 7,
diff --git a/tests/sentry/models/tests.py b/tests/sentry/models/tests.py
index 558d5df405..f12553515c 100644
--- a/tests/sentry/models/tests.py
+++ b/tests/sentry/models/tests.py
@@ -48,7 +48,7 @@ class ProjectKeyTest(TestCase):
     def test_key_is_created_for_project(self):
         self.create_user('admin@example.com')
         team = self.create_team(name='Test')
-        project = self.create_project(name='Test', team=team)
+        project = self.create_project(name='Test', teams=[team])
         assert project.key_set.exists() is True
 
 
diff --git a/tests/sentry/plugins/mail/activity/test_release.py b/tests/sentry/plugins/mail/activity/test_release.py
index 8c7e08b6b2..d128486266 100644
--- a/tests/sentry/plugins/mail/activity/test_release.py
+++ b/tests/sentry/plugins/mail/activity/test_release.py
@@ -80,11 +80,11 @@ class ReleaseTestCase(TestCase):
 
         self.project = self.create_project(
             organization=self.org,
-            team=self.team,
+            teams=[self.team],
         )
         self.project2 = self.create_project(
             organization=self.org,
-            team=self.team2,
+            teams=[self.team2],
         )
         self.release = Release.objects.create(
             version='a' * 40,
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 42b3bc2384..ec469f7bc0 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -193,7 +193,7 @@ class MailPluginTest(TestCase):
         organization = self.create_organization(owner=user)
         team = self.create_team(organization=organization)
 
-        project = self.create_project(name='Test', team=team)
+        project = self.create_project(name='Test', teams=[team])
         OrganizationMemberTeam.objects.create(
             organizationmember=OrganizationMember.objects.get(
                 user=user,
@@ -395,7 +395,7 @@ class ActivityEmailTestCase(TestCase):
     def get_fixture_data(self, users):
         organization = self.create_organization(owner=self.create_user())
         team = self.create_team(organization=organization)
-        project = self.create_project(organization=organization, team=team)
+        project = self.create_project(organization=organization, teams=[team])
         group = self.create_group(project=project)
 
         users = [self.create_user() for _ in range(users)]
diff --git a/tests/sentry/receivers/test_featureadoption.py b/tests/sentry/receivers/test_featureadoption.py
index 4d985aac69..67fe25fceb 100644
--- a/tests/sentry/receivers/test_featureadoption.py
+++ b/tests/sentry/receivers/test_featureadoption.py
@@ -32,7 +32,7 @@ class FeatureAdoptionTest(TestCase):
         self.owner = self.create_user()
         self.organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(organization=self.organization)
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
 
     def test_bad_feature_slug(self):
         FeatureAdoption.objects.record(self.organization.id, "xxx")
diff --git a/tests/sentry/tasks/test_deletion.py b/tests/sentry/tasks/test_deletion.py
index f176d3eb1d..cb6d444e3c 100644
--- a/tests/sentry/tasks/test_deletion.py
+++ b/tests/sentry/tasks/test_deletion.py
@@ -97,8 +97,8 @@ class DeleteTeamTest(TestCase):
             name='test',
             status=TeamStatus.PENDING_DELETION,
         )
-        self.create_project(team=team, name='test1')
-        self.create_project(team=team, name='test2')
+        self.create_project(teams=[team], name='test1')
+        self.create_project(teams=[team], name='test2')
 
         with self.tasks():
             delete_team(object_id=team.id)
@@ -110,8 +110,8 @@ class DeleteTeamTest(TestCase):
             name='test',
             status=TeamStatus.VISIBLE,
         )
-        self.create_project(team=team, name='test1')
-        self.create_project(team=team, name='test2')
+        self.create_project(teams=[team], name='test1')
+        self.create_project(teams=[team], name='test2')
 
         with self.assertRaises(DeleteAborted):
             with self.tasks():
@@ -188,7 +188,7 @@ class DeleteTagKeyTest(TestCase):
         from sentry.tagstore.tasks import delete_tag_key as delete_tag_key_task
 
         team = self.create_team(name='test', slug='test')
-        project = self.create_project(team=team, name='test1', slug='test1')
+        project = self.create_project(teams=[team], name='test1', slug='test1')
         group = self.create_group(project=project)
         key = 'foo'
         value = 'bar'
@@ -219,7 +219,7 @@ class DeleteTagKeyTest(TestCase):
             ],
         )
 
-        project2 = self.create_project(team=team, name='test2')
+        project2 = self.create_project(teams=[team], name='test2')
         env2 = self.create_environment(project=project2)
         group2 = self.create_group(project=project2)
         tk2 = tagstore.create_tag_key(
diff --git a/tests/sentry/tasks/test_reports.py b/tests/sentry/tasks/test_reports.py
index ef74711bef..1ecc55bae2 100644
--- a/tests/sentry/tasks/test_reports.py
+++ b/tests/sentry/tasks/test_reports.py
@@ -272,7 +272,7 @@ class ReportTestCase(TestCase):
 
         project = self.create_project(
             organization=self.organization,
-            team=self.team,
+            teams=[self.team],
             date_added=now - timedelta(days=90),
         )
 
diff --git a/tests/sentry/web/frontend/test_accept_project_transfer.py b/tests/sentry/web/frontend/test_accept_project_transfer.py
index 80edea66ca..24cec9ac26 100644
--- a/tests/sentry/web/frontend/test_accept_project_transfer.py
+++ b/tests/sentry/web/frontend/test_accept_project_transfer.py
@@ -12,7 +12,7 @@ from sentry.testutils import TestCase, PermissionTestCase
 class AcceptTransferProjectPermissionTest(PermissionTestCase):
     def setUp(self):
         super(AcceptTransferProjectPermissionTest, self).setUp()
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
         self.path = reverse('sentry-accept-project-transfer')
 
     def test_team_admin_cannot_load(self):
@@ -34,7 +34,7 @@ class AcceptTransferProjectTest(TestCase):
             role='admin',
             teams=[self.from_team],
         )
-        self.project = self.create_project(name='proj', team=self.from_team)
+        self.project = self.create_project(name='proj', teams=[self.from_team])
         self.transaction_id = uuid4().hex
         self.path = reverse('sentry-accept-project-transfer')
 
diff --git a/tests/sentry/web/frontend/test_account_notifications.py b/tests/sentry/web/frontend/test_account_notifications.py
index 7083a69cba..915ebadf1e 100644
--- a/tests/sentry/web/frontend/test_account_notifications.py
+++ b/tests/sentry/web/frontend/test_account_notifications.py
@@ -31,12 +31,12 @@ class NotificationSettingsTest(TestCase):
         user = self.create_user('foo@example.com')
         organization = self.create_organization()
         team = self.create_team(organization=organization)
-        project = self.create_project(organization=organization, team=team)
+        project = self.create_project(organization=organization, teams=[team])
         team2 = self.create_team(organization=organization)
         self.create_project(
-            organization=organization, team=team, status=ProjectStatus.PENDING_DELETION
+            organization=organization, teams=[team], status=ProjectStatus.PENDING_DELETION
         )
-        self.create_project(organization=organization, team=team2)
+        self.create_project(organization=organization, teams=[team2])
         self.create_member(organization=organization, user=user, teams=[project.team])
         self.login_as(user)
         resp = self.client.get(self.path)
diff --git a/tests/sentry/web/frontend/test_release_webhook.py b/tests/sentry/web/frontend/test_release_webhook.py
index 6d9a405daf..5a26505e33 100644
--- a/tests/sentry/web/frontend/test_release_webhook.py
+++ b/tests/sentry/web/frontend/test_release_webhook.py
@@ -17,7 +17,7 @@ class ReleaseWebhookTest(TestCase):
         super(ReleaseWebhookTest, self).setUp()
         self.organization = self.create_organization()
         self.team = self.create_team(organization=self.organization)
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
         self.token = 'a2587e3af83411e4a28634363b8514c2'
         self.signature = hmac.new(
             key=self.token.encode('utf-8'),
@@ -38,7 +38,7 @@ class ReleaseWebhookTest(TestCase):
         )
 
     def test_no_token(self):
-        project = self.create_project(team=self.team)
+        project = self.create_project(teams=[self.team])
         path = reverse(
             'sentry-release-hook',
             kwargs={
@@ -101,7 +101,7 @@ class BuiltinReleaseWebhookTest(TestCase):
         super(BuiltinReleaseWebhookTest, self).setUp()
         self.organization = self.create_organization()
         self.team = self.create_team(organization=self.organization)
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
         self.token = 'a2587e3af83411e4a28634363b8514c2'
         self.signature = hmac.new(
             key=self.token.encode('utf-8'),
diff --git a/tests/sentry/web/frontend/test_remove_project.py b/tests/sentry/web/frontend/test_remove_project.py
index 8f741c4bc2..bbb2d705e8 100644
--- a/tests/sentry/web/frontend/test_remove_project.py
+++ b/tests/sentry/web/frontend/test_remove_project.py
@@ -9,7 +9,7 @@ from sentry.testutils import TestCase, PermissionTestCase
 class RemoveProjectPermissionTest(PermissionTestCase):
     def setUp(self):
         super(RemoveProjectPermissionTest, self).setUp()
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
         self.path = reverse(
             'sentry-remove-project', args=[self.organization.slug, self.project.slug]
         )
@@ -30,7 +30,7 @@ class RemoveProjectTest(TestCase):
         self.owner = self.create_user(email='example@example.com', is_superuser=False)
         organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(name='bar', organization=organization)
-        self.project = self.create_project(name='bar', team=self.team)
+        self.project = self.create_project(name='bar', teams=[self.team])
         self.path = reverse('sentry-remove-project', args=[organization.slug, self.project.slug])
 
     def test_requires_authentication(self):
@@ -42,7 +42,6 @@ class RemoveProjectTest(TestCase):
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/projects/remove.html')
-        assert resp.context['team'] == self.team
         assert resp.context['project'] == self.project
 
     def test_deletion_flow(self):
diff --git a/tests/sentry/web/frontend/test_transfer_project.py b/tests/sentry/web/frontend/test_transfer_project.py
index c6efa67118..d378ddcc23 100644
--- a/tests/sentry/web/frontend/test_transfer_project.py
+++ b/tests/sentry/web/frontend/test_transfer_project.py
@@ -8,7 +8,7 @@ from sentry.testutils import TestCase, PermissionTestCase
 class TransferProjectPermissionTest(PermissionTestCase):
     def setUp(self):
         super(TransferProjectPermissionTest, self).setUp()
-        self.project = self.create_project(team=self.team)
+        self.project = self.create_project(teams=[self.team])
         self.path = reverse(
             'sentry-transfer-project', args=[self.organization.slug, self.project.slug]
         )
@@ -29,7 +29,7 @@ class TransferProjectTest(TestCase):
         self.owner = self.create_user(email='example@example.com', is_superuser=False)
         organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(name='bar', organization=organization)
-        self.project = self.create_project(name='bar', team=self.team)
+        self.project = self.create_project(name='bar', teams=[self.team])
         self.path = reverse('sentry-transfer-project', args=[organization.slug, self.project.slug])
 
     def test_requires_authentication(self):
@@ -41,7 +41,6 @@ class TransferProjectTest(TestCase):
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/projects/transfer.html')
-        assert resp.context['team'] == self.team
         assert resp.context['project'] == self.project
 
     def test_deletion_flow(self):
