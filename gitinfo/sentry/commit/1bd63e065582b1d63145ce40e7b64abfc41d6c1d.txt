commit 1bd63e065582b1d63145ce40e7b64abfc41d6c1d
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Aug 27 15:08:35 2015 -0700

    Allow expansion of event errors (fixes GH-1851)

diff --git a/src/sentry/api/serializers/models/event.py b/src/sentry/api/serializers/models/event.py
index fc42f006f1..89743c8e4f 100644
--- a/src/sentry/api/serializers/models/event.py
+++ b/src/sentry/api/serializers/models/event.py
@@ -51,6 +51,10 @@ class EventSerializer(Serializer):
             error_result = {
                 'type': error['type'],
                 'message': message,
+                'data': {
+                    k: v for k, v in error.items()
+                    if k != 'type'
+                },
             }
             errors.append(error_result)
 
diff --git a/src/sentry/static/sentry/app/components/eventEntries.jsx b/src/sentry/static/sentry/app/components/eventEntries.jsx
index 9de4ad2d95..ebacb2084d 100644
--- a/src/sentry/static/sentry/app/components/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/eventEntries.jsx
@@ -28,6 +28,36 @@ var EventMessage = React.createClass({
   }
 });
 
+var EventErrorItem = React.createClass({
+  getInitialState(){
+    return {
+      isOpen: false,
+    };
+  },
+
+  shouldComponentUpdate(nextProps, nextState) {
+    if (this.state.isOpen != nextState.isOpen) {
+      return true;
+    }
+  },
+
+  toggle() {
+    this.setState({isOpen: !this.state.isOpen});
+  },
+
+  render() {
+    var error = this.props.error;
+    var isOpen = this.state.isOpen;
+    return (
+      <li>
+        {error.message}
+        <small> <a style={{marginLeft: 10}} onClick={this.toggle}>{isOpen ? 'Collapse' : 'Expand'}</a></small>
+        <pre style={{display: isOpen ? 'block' : 'none'}}>{JSON.stringify(error.data, null, 2)}</pre>
+      </li>
+    );
+  }
+});
+
 var EventErrors = React.createClass({
   propTypes: {
     group: PropTypes.Group.isRequired,
@@ -68,7 +98,7 @@ var EventErrors = React.createClass({
         <ul style={{display: isOpen ? 'block' : 'none'}}>
           {errors.map((error, errorIdx) => {
             return (
-              <li key={errorIdx}>{error.message}</li>
+              <EventErrorItem key={errorIdx} error={error} />
             );
           })}
         </ul>
