commit 6489c58965cf1cedc0abd2c2a140f578bbce0045
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 30 16:43:35 2010 -0700

    Some initial work on a 404 middleware (not working, unsure why)

diff --git a/sentry/client/middleware.py b/sentry/client/middleware.py
new file mode 100644
index 0000000000..0e24f60534
--- /dev/null
+++ b/sentry/client/middleware.py
@@ -0,0 +1,12 @@
+from django.http import Http404
+
+from sentry.client.models import sentry_exception_handler
+
+# XXX: this isnt working
+
+class Sentry404CatchMiddleware(object):
+    def process_exception(self, request, exception):
+        if not isinstance(exception, Http404):
+            return
+        sentry_exception_handler(sender=Sentry404CatchMiddleware, request=request)
+    
\ No newline at end of file
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 9f7728dede..23ab22bfd1 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -187,6 +187,20 @@ class SentryTestCase(TestCase):
 
         self.tearDownHandler()
 
+    # def test404Middleware(self):
+    #     settings.MIDDLEWARE_CLASSES = settings.MIDDLEWARE_CLASSES + ('sentry.client.middleware.Sentry404CatchMiddleware',)
+    #     
+    #     response = self.client.get("/404/this-page-does-not-exist", REMOTE_ADDR="127.0.0.1:8000")
+    #     self.assertTemplateUsed(response, '404.html')
+    #     
+    #     self.assertEquals(Message.objects.count(), 1)
+    #     self.assertEquals(GroupedMessage.objects.count(), 1)
+    #     last = Message.objects.get()
+    #     self.assertEquals(last.logger, 'root')
+    #     self.assertEquals(last.class_name, 'Http404')
+    #     self.assertEquals(last.level, logging.ERROR)
+    #     self.assertEquals(last.message, 'foo')
+
     def testAPI(self):
         try:
             Message.objects.get(id=999999989)
