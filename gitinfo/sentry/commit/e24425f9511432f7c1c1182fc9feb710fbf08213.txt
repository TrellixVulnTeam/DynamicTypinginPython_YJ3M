commit e24425f9511432f7c1c1182fc9feb710fbf08213
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Oct 25 14:03:38 2018 -0700

    feat(discover): Align cells based on column type (#10273)
    
    Use column type rather than the actual type of the seen cell value
    to align cell content. This ensures all data in the same column is
    aligned consistently, including headers and null values.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index 2095f7510f..ecfef18c52 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -45,7 +45,7 @@ export default class ResultTable extends React.Component {
   }
 
   cellRenderer = ({key, rowIndex, columnIndex, style}) => {
-    const {query, data: {data}} = this.props;
+    const {query, data: {data, meta}} = this.props;
     const cols = this.getColumnList();
 
     const showEventLinks = !query.aggregations.length;
@@ -56,9 +56,16 @@ export default class ResultTable extends React.Component {
 
     const colName = isLinkCol || isSpacingCol ? null : cols[columnIndex].name;
 
+    const isNumberCol =
+      !isLinkCol &&
+      !isSpacingCol &&
+      ['number', 'integer'].includes(meta[columnIndex].type);
+
+    const align = isNumberCol ? 'right' : isLinkCol ? 'center' : 'left';
+
     if (rowIndex === 0) {
       return (
-        <TableHeader key={key} style={style}>
+        <TableHeader key={key} style={style} align={align}>
           <strong>{colName}</strong>
         </TableHeader>
       );
@@ -68,10 +75,6 @@ export default class ResultTable extends React.Component {
       ? this.getLink(data[rowIndex - 1])
       : isSpacingCol ? null : getDisplayValue(data[rowIndex - 1][colName]);
 
-    const isNumber = !isLinkCol && typeof data[rowIndex - 1][colName] === 'number';
-
-    const align = isNumber ? 'right' : isLinkCol ? 'center' : 'left';
-
     return (
       <Cell key={key} style={style} isOddRow={rowIndex % 2 === 1} align={align}>
         <AutoSelectText>{value}</AutoSelectText>
