commit 030d5b25973c5890cc1d023e888065ac555280c7
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jan 14 12:48:55 2015 -0800

    Add "results" attribute to Link headers

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index f074224b64..dc5abcd531 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -21,7 +21,7 @@ ONE_MINUTE = 60
 ONE_HOUR = ONE_MINUTE * 60
 ONE_DAY = ONE_HOUR * 24
 
-LINK_HEADER = '<{uri}&cursor={cursor}>; rel="{name}"'
+LINK_HEADER = '<{uri}&cursor={cursor}>; rel="{name}"; results="{has_results}"'
 
 
 class DocSection(Enum):
@@ -54,6 +54,7 @@ class Endpoint(APIView):
             uri=base_url,
             cursor=str(cursor),
             name=name,
+            has_results='true' if bool(cursor) else 'false',
         )
 
     def paginate(self, request, on_results=lambda x: x, **kwargs):
diff --git a/src/sentry/templates/sentry/help/api_pagination.html b/src/sentry/templates/sentry/help/api_pagination.html
index cd57f0e349..c45db29f90 100644
--- a/src/sentry/templates/sentry/help/api_pagination.html
+++ b/src/sentry/templates/sentry/help/api_pagination.html
@@ -22,10 +22,10 @@
 
     <pre>$ curl -I -u PUBLIC_KEY:SECRET_KEY /api/0/projects/{project_id}/groups/
 
-Link: &lt;https://app.getsentry.com/api/0/projects/1/groups/?&amp;cursor=1420837590:0:1&gt;; rel="previous",
-      &lt;https://app.getsentry.com/api/0/projects/1/groups/?&amp;cursor=1420837533:0:0&gt;; rel="next"</pre>
+Link: &lt;https://app.getsentry.com/api/0/projects/1/groups/?&amp;cursor=1420837590:0:1&gt;; rel="previous"; results="false",
+      &lt;https://app.getsentry.com/api/0/projects/1/groups/?&amp;cursor=1420837533:0:0&gt;; rel="next"; results="true"</pre>
 
     <p>In this example we have both a 'previous' link and a 'next' link. The meaning of these links depends on the input query, but in our above example the 'previous' page would be page index -1, and the next page would be page index 1.</p>
 
-    <p>When supported, cursors will *always* be returned for both a previous and a next page, even if there are no results on these pages. This allows you to make a query against the API for yet-undiscovered results. An example where this would be used is when you're implementing polling behavior and you want to see if there is any new data.</p>
+    <p>When supported, cursors will *always* be returned for both a previous and a next page, even if there are no results on these pages. This allows you to make a query against the API for yet-undiscovered results. An example where this would be used is when you're implementing polling behavior and you want to see if there is any new data. To help understand if you actually need to paginate we return a <code>results="[true|false]"</code> indicator.</p>
 {% endblock %}
