commit 393b41acd3744425594552f64dde0542a1e45ad7
Author: Mark Story <mark@mark-story.com>
Date:   Thu Jan 23 09:25:39 2020 -0500

    ref(ts) Extract AvatarProject type (#16590)
    
    Pull out a smaller project type for avatars and badges.

diff --git a/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx b/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx
index c90a8e71ec..046aa1156a 100644
--- a/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx
+++ b/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx
@@ -4,10 +4,10 @@ import React from 'react';
 import BaseAvatar from 'app/components/avatar/baseAvatar';
 import PlatformList from 'app/components/platformList';
 import SentryTypes from 'app/sentryTypes';
-import {Project} from 'app/types';
+import {AvatarProject} from 'app/types';
 
 type Props = {
-  project: Project;
+  project: AvatarProject;
 } & BaseAvatar['props'];
 
 class ProjectAvatar extends React.Component<Props> {
@@ -19,7 +19,7 @@ class ProjectAvatar extends React.Component<Props> {
     ...BaseAvatar.propTypes,
   };
 
-  getPlatforms = (project: Project) => {
+  getPlatforms = (project: AvatarProject) => {
     // `platform` is a user selectable option that is performed during the onboarding process. The reason why this
     // is not the default is because there currently is no way to update it. Fallback to this if project does not
     // have recent events with a platform.
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 0c09cd1cc4..c71f2921d2 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -90,9 +90,14 @@ export type Organization = LightWeightOrganization & {
   teams: Team[];
 };
 
+// Minimal project representation for use with avatars.
+export type AvatarProject = {
+  slug: string;
+  platform?: string;
+};
+
 export type Project = {
   id: string;
-  slug: string;
   isMember: boolean;
   teams: Team[];
   features: string[];
@@ -100,12 +105,11 @@ export type Project = {
   isBookmarked: boolean;
   hasUserReports?: boolean;
   hasAccess: boolean;
-  platform: string;
 
   // XXX: These are part of the DetailedProject serializer
   plugins: Plugin[];
   processingIssues: number;
-};
+} & AvatarProject;
 
 export type Team = {
   id: string;
