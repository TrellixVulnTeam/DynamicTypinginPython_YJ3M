commit c3ac90ec38051018bd30b1cd95307ec420674818
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 2 13:55:19 2015 -0800

    Various fixes for org login urls

diff --git a/src/sentry/web/decorators.py b/src/sentry/web/decorators.py
index f5436d0d5a..98288fea6d 100644
--- a/src/sentry/web/decorators.py
+++ b/src/sentry/web/decorators.py
@@ -51,7 +51,13 @@ def has_access(access_or_func=None, organization=None, access=None):
                 request.session['_next'] = request.get_full_path()
                 if request.is_ajax():
                     return HttpResponse(status=401)
-                return HttpResponseRedirect(get_login_url())
+
+                if 'organization_slug' in kwargs:
+                    redirect_uri = reverse('sentry-organization-home',
+                                           args=[kwargs['organization_slug']])
+                else:
+                    redirect_uri = get_login_url()
+                return HttpResponseRedirect(redirect_uri)
 
             has_org = 'organization_slug' in kwargs
             has_team = 'team_slug' in kwargs
@@ -221,7 +227,12 @@ def login_required(func):
     def wrapped(request, *args, **kwargs):
         if not request.user.is_authenticated():
             request.session['_next'] = request.get_full_path()
-            return HttpResponseRedirect(get_login_url())
+            if 'organization_slug' in kwargs:
+                redirect_uri = reverse('sentry-organization-home',
+                                       args=[kwargs['organization_slug']])
+            else:
+                redirect_uri = get_login_url()
+            return HttpResponseRedirect(redirect_uri)
         return func(request, *args, **kwargs)
     return wrapped
 
@@ -229,10 +240,7 @@ def login_required(func):
 def requires_admin(func):
     @wraps(func)
     def wrapped(request, *args, **kwargs):
-        if not request.user.is_authenticated():
-            request.session['_next'] = request.get_full_path()
-            return HttpResponseRedirect(get_login_url())
         if not request.user.is_staff:
             return render_to_response('sentry/missing_permissions.html', status=400)
         return func(request, *args, **kwargs)
-    return wrapped
+    return login_required(wrapped)
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index e30003c5e5..87c7203638 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -224,11 +224,11 @@ class BaseView(View, OrganizationMixin):
 
     @method_decorator(csrf_protect)
     def dispatch(self, request, *args, **kwargs):
-        if self.is_auth_required(request):
-            return self.handle_auth_required(request)
+        if self.is_auth_required(request, *args, **kwargs):
+            return self.handle_auth_required(request, *args, **kwargs)
 
-        if self.is_sudo_required(request):
-            return self.handle_sudo_required(request)
+        if self.is_sudo_required(request, *args, **kwargs):
+            return self.handle_sudo_required(request, *args, **kwargs)
 
         args, kwargs = self.convert_args(request, *args, **kwargs)
 
