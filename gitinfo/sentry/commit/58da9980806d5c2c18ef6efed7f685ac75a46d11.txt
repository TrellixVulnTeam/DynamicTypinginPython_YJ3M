commit 58da9980806d5c2c18ef6efed7f685ac75a46d11
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Mar 23 10:31:43 2020 -0700

    ref(ecosystem): use new base class for integration client (#17784)

diff --git a/src/sentry/api/endpoints/group_integration_details.py b/src/sentry/api/endpoints/group_integration_details.py
index 119b2dda08..9877a157cb 100644
--- a/src/sentry/api/endpoints/group_integration_details.py
+++ b/src/sentry/api/endpoints/group_integration_details.py
@@ -9,7 +9,7 @@ from sentry.api.bases import GroupEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.integration import IntegrationIssueConfigSerializer
 from sentry.integrations import IntegrationFeatures
-from sentry.integrations.exceptions import IntegrationError, IntegrationFormError
+from sentry.shared_integrations.exceptions import IntegrationError, IntegrationFormError
 from sentry.models import Activity, ExternalIssue, GroupLink, Integration
 from sentry.signals import integration_issue_created, integration_issue_linked
 
diff --git a/src/sentry/api/endpoints/organization_integration_details.py b/src/sentry/api/endpoints/organization_integration_details.py
index a9d8ef22a2..d655ff6c03 100644
--- a/src/sentry/api/endpoints/organization_integration_details.py
+++ b/src/sentry/api/endpoints/organization_integration_details.py
@@ -7,7 +7,7 @@ from django.http import Http404
 
 from sentry.api.bases.organization import OrganizationEndpoint, OrganizationIntegrationsPermission
 from sentry.api.serializers import serialize
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import Integration, ObjectStatus, OrganizationIntegration
 from sentry.tasks.deletion import delete_organization_integration
 
diff --git a/src/sentry/api/endpoints/organization_integration_repos.py b/src/sentry/api/endpoints/organization_integration_repos.py
index c5fe0c9bd8..5f39a72881 100644
--- a/src/sentry/api/endpoints/organization_integration_repos.py
+++ b/src/sentry/api/endpoints/organization_integration_repos.py
@@ -5,7 +5,7 @@ from django.http import Http404
 
 from sentry.constants import ObjectStatus
 from sentry.api.bases.organization import OrganizationEndpoint, OrganizationIntegrationsPermission
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.models import Integration
 
diff --git a/src/sentry/identity/oauth2.py b/src/sentry/identity/oauth2.py
index d00a193c61..5c6e5236dc 100644
--- a/src/sentry/identity/oauth2.py
+++ b/src/sentry/identity/oauth2.py
@@ -12,7 +12,7 @@ from django.views.decorators.csrf import csrf_exempt
 
 from sentry.auth.exceptions import IdentityNotValid
 from sentry.http import safe_urlopen, safe_urlread
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.utils import json
 from sentry.utils.http import absolute_uri
 from sentry.pipeline import PipelineView
diff --git a/src/sentry/integrations/base.py b/src/sentry/integrations/base.py
index 590f53a44e..16d41f95ce 100644
--- a/src/sentry/integrations/base.py
+++ b/src/sentry/integrations/base.py
@@ -18,7 +18,7 @@ from enum import Enum
 from sentry.exceptions import InvalidIdentity
 from sentry.pipeline import PipelineProvider
 
-from .exceptions import (
+from sentry.shared_integrations.exceptions import (
     ApiHostError,
     ApiError,
     ApiUnauthorized,
@@ -26,7 +26,11 @@ from .exceptions import (
     IntegrationFormError,
     UnsupportedResponseType,
 )
-from .constants import ERR_UNAUTHORIZED, ERR_INTERNAL, ERR_UNSUPPORTED_RESPONSE_TYPE
+from sentry.shared_integrations.constants import (
+    ERR_UNAUTHORIZED,
+    ERR_INTERNAL,
+    ERR_UNSUPPORTED_RESPONSE_TYPE,
+)
 from sentry.models import Identity, OrganizationIntegration
 
 
diff --git a/src/sentry/integrations/bitbucket/integration.py b/src/sentry/integrations/bitbucket/integration.py
index d6dc111310..c71e2ae377 100644
--- a/src/sentry/integrations/bitbucket/integration.py
+++ b/src/sentry/integrations/bitbucket/integration.py
@@ -16,7 +16,7 @@ from sentry.pipeline import NestedPipelineView, PipelineView
 from sentry.identity.pipeline import IdentityProviderPipeline
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.models import Repository
 from sentry.tasks.integrations import migrate_repo
 from sentry.utils.http import absolute_uri
diff --git a/src/sentry/integrations/bitbucket/issues.py b/src/sentry/integrations/bitbucket/issues.py
index ee50e933ff..6572cc389b 100644
--- a/src/sentry/integrations/bitbucket/issues.py
+++ b/src/sentry/integrations/bitbucket/issues.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 from sentry.integrations.issues import IssueBasicMixin
-from sentry.integrations.exceptions import ApiError, IntegrationFormError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationFormError
 
 
 ISSUE_TYPES = (
diff --git a/src/sentry/integrations/bitbucket/repository.py b/src/sentry/integrations/bitbucket/repository.py
index d051c8f58e..82c83c95df 100644
--- a/src/sentry/integrations/bitbucket/repository.py
+++ b/src/sentry/integrations/bitbucket/repository.py
@@ -7,7 +7,7 @@ from sentry.plugins import providers
 from sentry.models import Integration
 from sentry.utils.http import absolute_uri
 
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.models.apitoken import generate_token
 
 from .webhook import parse_raw_user_email, parse_raw_user_name
diff --git a/src/sentry/integrations/bitbucket/search.py b/src/sentry/integrations/bitbucket/search.py
index 7d52d6b99f..2ff111dfd0 100644
--- a/src/sentry/integrations/bitbucket/search.py
+++ b/src/sentry/integrations/bitbucket/search.py
@@ -6,7 +6,7 @@ import six
 from rest_framework.response import Response
 
 from sentry.api.bases.integration import IntegrationEndpoint
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.models import Integration
 
 logger = logging.getLogger("sentry.integrations.bitbucket")
diff --git a/src/sentry/integrations/bitbucket_server/client.py b/src/sentry/integrations/bitbucket_server/client.py
index 624901f0e7..b3e711ad4b 100644
--- a/src/sentry/integrations/bitbucket_server/client.py
+++ b/src/sentry/integrations/bitbucket_server/client.py
@@ -3,7 +3,8 @@ from __future__ import absolute_import
 from oauthlib.oauth1 import SIGNATURE_RSA
 from requests_oauthlib import OAuth1
 from six.moves.urllib.parse import parse_qsl
-from sentry.integrations.client import ApiClient, ApiError
+from sentry.integrations.client import ApiClient
+from sentry.shared_integrations.exceptions import ApiError
 
 
 class BitbucketServerAPIPath(object):
diff --git a/src/sentry/integrations/bitbucket_server/integration.py b/src/sentry/integrations/bitbucket_server/integration.py
index fe0f975c44..9708329982 100644
--- a/src/sentry/integrations/bitbucket_server/integration.py
+++ b/src/sentry/integrations/bitbucket_server/integration.py
@@ -20,7 +20,7 @@ from sentry.integrations.repositories import RepositoryMixin
 from sentry.pipeline import PipelineView
 from sentry.utils.compat import filter
 from django.utils.translation import ugettext_lazy as _
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.models.repository import Repository
 from sentry.tasks.integrations import migrate_repo
 from sentry.web.helpers import render_to_response
diff --git a/src/sentry/integrations/bitbucket_server/repository.py b/src/sentry/integrations/bitbucket_server/repository.py
index ea82c912c7..ffd1a87d5d 100644
--- a/src/sentry/integrations/bitbucket_server/repository.py
+++ b/src/sentry/integrations/bitbucket_server/repository.py
@@ -9,7 +9,7 @@ from django.core.urlresolvers import reverse
 from sentry.models.integration import Integration
 from sentry.plugins.providers.integration_repository import IntegrationRepositoryProvider
 from sentry.utils.http import absolute_uri
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.utils.hashlib import md5_text
 
 
@@ -104,7 +104,9 @@ class BitbucketServerRepositoryProvider(IntegrationRepositoryProvider):
                 "author_name": c["author"].get("displayName", c["author"]["name"]),
                 "message": c["message"],
                 "timestamp": datetime.fromtimestamp(c["authorTimestamp"] / 1000, timezone.utc),
-                "patch_set": self._get_patchset(client, repo.config["project"], repo.config["repo"], c["id"]),
+                "patch_set": self._get_patchset(
+                    client, repo.config["project"], repo.config["repo"], c["id"]
+                ),
             }
             for c in commit_list["values"]
         ]
diff --git a/src/sentry/integrations/client.py b/src/sentry/integrations/client.py
index 3ed319b69c..9655f21d5d 100644
--- a/src/sentry/integrations/client.py
+++ b/src/sentry/integrations/client.py
@@ -1,266 +1,23 @@
 from __future__ import absolute_import
 
-import logging
-import json
-import requests
-import six
 
-from collections import OrderedDict
 from time import time
 
-from django.core.cache import cache
-from bs4 import BeautifulSoup
-from django.utils.functional import cached_property
-from requests.exceptions import ConnectionError, Timeout, HTTPError
-from sentry.exceptions import InvalidIdentity
-from sentry.http import build_session
-from sentry.utils import metrics
-from sentry.utils.hashlib import md5_text
-
-from .exceptions import ApiHostError, ApiTimeoutError, ApiError, UnsupportedResponseType
-
-
-class BaseApiResponse(object):
-    text = ""
-
-    def __init__(self, headers=None, status_code=None):
-        self.headers = headers
-        self.status_code = status_code
-
-    def __repr__(self):
-        return u"<%s: code=%s, content_type=%s>" % (
-            type(self).__name__,
-            self.status_code,
-            self.headers.get("Content-Type", "") if self.headers else "",
-        )
-
-    @cached_property
-    def rel(self):
-        if not self.headers:
-            return {}
-        link_header = self.headers.get("Link")
-        if not link_header:
-            return {}
-        return {item["rel"]: item["url"] for item in requests.utils.parse_header_links(link_header)}
-
-    @classmethod
-    def from_response(self, response, allow_text=False):
-        # XXX(dcramer): this doesnt handle leading spaces, but they're not common
-        # paths so its ok
-        if response.text.startswith(u"<?xml"):
-            return XmlApiResponse(response.text, response.headers, response.status_code)
-        elif response.text.startswith("<"):
-            if not allow_text:
-                raise ValueError(u"Not a valid response type: {}".format(response.text[:128]))
-            elif response.status_code < 200 or response.status_code >= 300:
-                raise ValueError(
-                    u"Received unexpected plaintext response for code {}".format(
-                        response.status_code
-                    )
-                )
-            return TextApiResponse(response.text, response.headers, response.status_code)
-
-        # Some APIs will return JSON with an invalid content-type, so we try
-        # to decode it anyways
-        if "application/json" not in response.headers["Content-Type"]:
-            try:
-                data = json.loads(response.text, object_pairs_hook=OrderedDict)
-            except (TypeError, ValueError):
-                if allow_text:
-                    return TextApiResponse(response.text, response.headers, response.status_code)
-                raise UnsupportedResponseType(
-                    response.headers["Content-Type"], response.status_code
-                )
-        else:
-            data = json.loads(response.text, object_pairs_hook=OrderedDict)
-
-        if isinstance(data, dict):
-            return MappingApiResponse(data, response.headers, response.status_code)
-        elif isinstance(data, (list, tuple)):
-            return SequenceApiResponse(data, response.headers, response.status_code)
-        else:
-            raise NotImplementedError
-
-
-class TextApiResponse(BaseApiResponse):
-    def __init__(self, text, *args, **kwargs):
-        self.text = text
-        super(TextApiResponse, self).__init__(*args, **kwargs)
-
-
-class XmlApiResponse(BaseApiResponse):
-    def __init__(self, text, *args, **kwargs):
-        self.xml = BeautifulSoup(text, "xml")
-        super(XmlApiResponse, self).__init__(*args, **kwargs)
-
-
-class MappingApiResponse(dict, BaseApiResponse):
-    def __init__(self, data, *args, **kwargs):
-        dict.__init__(self, data)
-        BaseApiResponse.__init__(self, *args, **kwargs)
-
-    @property
-    def json(self):
-        return self
-
-
-class SequenceApiResponse(list, BaseApiResponse):
-    def __init__(self, data, *args, **kwargs):
-        list.__init__(self, data)
-        BaseApiResponse.__init__(self, *args, **kwargs)
-
-    @property
-    def json(self):
-        return self
 
+from sentry.shared_integrations.client import BaseApiClient
+from sentry.exceptions import InvalidIdentity
 
-class ApiClient(object):
-    base_url = None
 
-    allow_text = False
+class ApiClient(BaseApiClient):
+    integration_type = "integration"
 
-    allow_redirects = None
+    datadog_prefix = "integrations"
 
-    logger = logging.getLogger("sentry.integrations")
+    log_path = "sentry.integrations.client"
 
     # Used in metrics and logging.
     integration_name = "undefined"
 
-    cache_time = 900
-
-    def __init__(self, verify_ssl=True, logging_context=None):
-        self.verify_ssl = verify_ssl
-        self.logging_context = logging_context
-
-    def get_cache_prefix(self):
-        return "%s.client:" % six.text_type(self.integration_name)
-
-    def track_response_data(self, code, error=None):
-        logger = logging.getLogger("sentry.integrations.client")
-
-        metrics.incr(
-            "integrations.http_response",
-            sample_rate=1.0,
-            tags={"integration": self.integration_name, "status": code},
-        )
-
-        extra = {
-            "integration": self.integration_name,
-            "status_string": six.text_type(code),
-            "error": six.text_type(error)[:128] if error else None,
-        }
-        extra.update(getattr(self, "logging_context", None) or {})
-        logger.info("integrations.http_response", extra=extra)
-
-    def build_url(self, path):
-        if path.startswith("/"):
-            if not self.base_url:
-                raise ValueError(u"Invalid URL: {}".format(path))
-            return u"{}{}".format(self.base_url, path)
-        return path
-
-    def _request(
-        self,
-        method,
-        path,
-        headers=None,
-        data=None,
-        params=None,
-        auth=None,
-        json=True,
-        allow_text=None,
-        allow_redirects=None,
-        timeout=None,
-    ):
-
-        if allow_text is None:
-            allow_text = self.allow_text
-
-        if allow_redirects is None:
-            allow_redirects = self.allow_redirects
-
-        if allow_redirects is None:  # is still None
-            allow_redirects = method.upper() == "GET"
-
-        if timeout is None:
-            timeout = 30
-
-        full_url = self.build_url(path)
-        session = build_session()
-
-        metrics.incr(
-            "integrations.http_request",
-            sample_rate=1.0,
-            tags={"integration": self.integration_name},
-        )
-        try:
-            resp = getattr(session, method.lower())(
-                url=full_url,
-                headers=headers,
-                json=data if json else None,
-                data=data if not json else None,
-                params=params,
-                auth=auth,
-                verify=self.verify_ssl,
-                allow_redirects=allow_redirects,
-                timeout=timeout,
-            )
-            resp.raise_for_status()
-        except ConnectionError as e:
-            self.track_response_data("connection_error", e)
-            raise ApiHostError.from_exception(e)
-        except Timeout as e:
-            self.track_response_data("timeout", e)
-            raise ApiTimeoutError.from_exception(e)
-        except HTTPError as e:
-            resp = e.response
-            if resp is None:
-                self.track_response_data("unknown", e)
-                self.logger.exception(
-                    "request.error", extra={"integration": self.integration_name, "url": full_url}
-                )
-                raise ApiError("Internal Error")
-            self.track_response_data(resp.status_code, e)
-            raise ApiError.from_response(resp)
-
-        self.track_response_data(resp.status_code)
-
-        if resp.status_code == 204:
-            return {}
-
-        return BaseApiResponse.from_response(resp, allow_text=allow_text)
-
-    # subclasses should override ``request``
-    def request(self, *args, **kwargs):
-        return self._request(*args, **kwargs)
-
-    def delete(self, *args, **kwargs):
-        return self.request("DELETE", *args, **kwargs)
-
-    def get_cached(self, path, *args, **kwargs):
-        query = ""
-        if kwargs.get("params", None):
-            query = json.dumps(kwargs.get("params"), sort_keys=True)
-        key = self.get_cache_prefix() + md5_text(self.build_url(path), query).hexdigest()
-
-        result = cache.get(key)
-        if result is None:
-            result = self.request("GET", path, *args, **kwargs)
-            cache.set(key, result, self.cache_time)
-        return result
-
-    def get(self, *args, **kwargs):
-        return self.request("GET", *args, **kwargs)
-
-    def patch(self, *args, **kwargs):
-        return self.request("PATCH", *args, **kwargs)
-
-    def post(self, *args, **kwargs):
-        return self.request("POST", *args, **kwargs)
-
-    def put(self, *args, **kwargs):
-        return self.request("PUT", *args, **kwargs)
-
 
 class OAuth2RefreshMixin(object):
     def check_auth(self, *args, **kwargs):
diff --git a/src/sentry/integrations/constants.py b/src/sentry/integrations/constants.py
deleted file mode 100644
index 70f837ed28..0000000000
--- a/src/sentry/integrations/constants.py
+++ /dev/null
@@ -1,10 +0,0 @@
-from __future__ import absolute_import
-
-
-ERR_INTERNAL = (
-    "An internal error occurred with the integration and the Sentry team has" " been notified"
-)
-
-ERR_UNAUTHORIZED = "Unauthorized: either your access token was invalid or you do not have" " access"
-
-ERR_UNSUPPORTED_RESPONSE_TYPE = "An unsupported response type was returned: {content_type}"
diff --git a/src/sentry/integrations/example/integration.py b/src/sentry/integrations/example/integration.py
index 3ce78d6f6e..683ce6f3ba 100644
--- a/src/sentry/integrations/example/integration.py
+++ b/src/sentry/integrations/example/integration.py
@@ -8,7 +8,7 @@ from sentry.integrations import (
     IntegrationProvider,
     FeatureDescription,
 )
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.integrations.issues import IssueSyncMixin
 from sentry.mediators.plugins import Migrator
 from sentry.models import User
diff --git a/src/sentry/integrations/example/repository.py b/src/sentry/integrations/example/repository.py
index f9d91ab4ab..35447c888d 100644
--- a/src/sentry/integrations/example/repository.py
+++ b/src/sentry/integrations/example/repository.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from sentry.plugins import providers
 from sentry.models import Integration
 
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 
 
 class ExampleRepositoryProvider(providers.IntegrationRepositoryProvider):
diff --git a/src/sentry/integrations/exceptions.py b/src/sentry/integrations/exceptions.py
deleted file mode 100644
index 7f07ff815c..0000000000
--- a/src/sentry/integrations/exceptions.py
+++ /dev/null
@@ -1,88 +0,0 @@
-from __future__ import absolute_import
-
-from bs4 import BeautifulSoup
-from collections import OrderedDict
-from simplejson.decoder import JSONDecodeError
-from six.moves.urllib.parse import urlparse
-from sentry.utils import json
-
-
-class ApiError(Exception):
-    code = None
-    json = None
-    xml = None
-
-    def __init__(self, text, code=None):
-        if code is not None:
-            self.code = code
-        self.text = text
-        self.xml = None
-        # TODO(dcramer): pull in XML support from Jira
-        if text:
-            try:
-                self.json = json.loads(text, object_pairs_hook=OrderedDict)
-            except (JSONDecodeError, ValueError):
-                if self.text[:5] == "<?xml":
-                    # perhaps it's XML?
-                    self.xml = BeautifulSoup(self.text, "xml")
-                # must be an awful code.
-                self.json = None
-        else:
-            self.json = None
-        super(ApiError, self).__init__(text[:1024])
-
-    @classmethod
-    def from_response(cls, response):
-        if response.status_code == 401:
-            return ApiUnauthorized(response.text)
-        return cls(response.text, response.status_code)
-
-
-class ApiHostError(ApiError):
-    code = 503
-
-    @classmethod
-    def from_exception(cls, exception):
-        if getattr(exception, "request"):
-            return cls.from_request(exception.request)
-        return cls("Unable to reach host")
-
-    @classmethod
-    def from_request(cls, request):
-        host = urlparse(request.url).netloc
-        return cls(u"Unable to reach host: {}".format(host))
-
-
-class ApiTimeoutError(ApiError):
-    code = 504
-
-    @classmethod
-    def from_exception(cls, exception):
-        if getattr(exception, "request"):
-            return cls.from_request(exception.request)
-        return cls("Timed out reaching host")
-
-    @classmethod
-    def from_request(cls, request):
-        host = urlparse(request.url).netloc
-        return cls(u"Timed out attempting to reach host: {}".format(host))
-
-
-class ApiUnauthorized(ApiError):
-    code = 401
-
-
-class UnsupportedResponseType(ApiError):
-    @property
-    def content_type(self):
-        return self.text
-
-
-class IntegrationError(Exception):
-    pass
-
-
-class IntegrationFormError(IntegrationError):
-    def __init__(self, field_errors):
-        super(IntegrationFormError, self).__init__("Invalid integration action")
-        self.field_errors = field_errors
diff --git a/src/sentry/integrations/github/integration.py b/src/sentry/integrations/github/integration.py
index 2b56bd5f13..e67a55a50b 100644
--- a/src/sentry/integrations/github/integration.py
+++ b/src/sentry/integrations/github/integration.py
@@ -12,8 +12,8 @@ from sentry.integrations import (
     IntegrationMetadata,
     FeatureDescription,
 )
-from sentry.integrations.exceptions import ApiError
-from sentry.integrations.constants import ERR_INTERNAL, ERR_UNAUTHORIZED
+from sentry.shared_integrations.exceptions import ApiError
+from sentry.shared_integrations.constants import ERR_INTERNAL, ERR_UNAUTHORIZED
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.models import Repository
 from sentry.pipeline import PipelineView
diff --git a/src/sentry/integrations/github/issues.py b/src/sentry/integrations/github/issues.py
index 3005d43d50..d0ae83d628 100644
--- a/src/sentry/integrations/github/issues.py
+++ b/src/sentry/integrations/github/issues.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.issues import IssueBasicMixin
 from sentry.utils.http import absolute_uri
 
diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index 3fb26a490b..58ab8efb6f 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import logging
 import six
 
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.models import Integration
 from sentry.plugins import providers
 
diff --git a/src/sentry/integrations/github/search.py b/src/sentry/integrations/github/search.py
index 82614162d5..73878e1d31 100644
--- a/src/sentry/integrations/github/search.py
+++ b/src/sentry/integrations/github/search.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from rest_framework.response import Response
 
 from sentry.api.bases.integration import IntegrationEndpoint
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.integrations.github.integration import build_repository_query
 from sentry.models import Integration
 
diff --git a/src/sentry/integrations/github/webhook.py b/src/sentry/integrations/github/webhook.py
index 1cdc08a439..471ad6fbf2 100644
--- a/src/sentry/integrations/github/webhook.py
+++ b/src/sentry/integrations/github/webhook.py
@@ -28,7 +28,7 @@ from sentry.models import (
 )
 from sentry.utils import json
 
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from .repository import GitHubRepositoryProvider
 
 logger = logging.getLogger("sentry.webhooks")
diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index 5379cf2db9..74cc4cddde 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -14,8 +14,8 @@ from sentry.integrations import (
     FeatureDescription,
     IntegrationFeatures,
 )
-from sentry.integrations.constants import ERR_INTERNAL, ERR_UNAUTHORIZED
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.constants import ERR_INTERNAL, ERR_UNAUTHORIZED
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.pipeline import NestedPipelineView, PipelineView
 from sentry.utils.http import absolute_uri
diff --git a/src/sentry/integrations/github_enterprise/repository.py b/src/sentry/integrations/github_enterprise/repository.py
index 20ab88a321..186ddc5bcd 100644
--- a/src/sentry/integrations/github_enterprise/repository.py
+++ b/src/sentry/integrations/github_enterprise/repository.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import logging
 
 from sentry.models import Integration
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.github.repository import GitHubRepositoryProvider
 
 
diff --git a/src/sentry/integrations/gitlab/client.py b/src/sentry/integrations/gitlab/client.py
index 49f2aed82b..c53626f8e7 100644
--- a/src/sentry/integrations/gitlab/client.py
+++ b/src/sentry/integrations/gitlab/client.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 
 from sentry.integrations.client import ApiClient
-from sentry.integrations.exceptions import ApiError, ApiUnauthorized
+from sentry.shared_integrations.exceptions import ApiError, ApiUnauthorized
 from sentry.utils.http import absolute_uri
 from six.moves.urllib.parse import quote
 
diff --git a/src/sentry/integrations/gitlab/integration.py b/src/sentry/integrations/gitlab/integration.py
index 00061f641b..ea0bdaca66 100644
--- a/src/sentry/integrations/gitlab/integration.py
+++ b/src/sentry/integrations/gitlab/integration.py
@@ -16,7 +16,7 @@ from sentry.integrations import (
     IntegrationProvider,
     IntegrationMetadata,
 )
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.pipeline import NestedPipelineView, PipelineView
 from sentry.utils.http import absolute_uri
diff --git a/src/sentry/integrations/gitlab/issues.py b/src/sentry/integrations/gitlab/issues.py
index 0dd8acceaf..ac2f534046 100644
--- a/src/sentry/integrations/gitlab/issues.py
+++ b/src/sentry/integrations/gitlab/issues.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import re
 
 from django.core.urlresolvers import reverse
-from sentry.integrations.exceptions import ApiError, IntegrationError, ApiUnauthorized
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError, ApiUnauthorized
 from sentry.integrations.issues import IssueBasicMixin
 from sentry.utils.http import absolute_uri
 
diff --git a/src/sentry/integrations/gitlab/repository.py b/src/sentry/integrations/gitlab/repository.py
index 6d8a4f6509..2fa5805e1e 100644
--- a/src/sentry/integrations/gitlab/repository.py
+++ b/src/sentry/integrations/gitlab/repository.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.plugins import providers
 from sentry.models import Integration
 
diff --git a/src/sentry/integrations/gitlab/search.py b/src/sentry/integrations/gitlab/search.py
index 7d36e7fa38..09027d9a77 100644
--- a/src/sentry/integrations/gitlab/search.py
+++ b/src/sentry/integrations/gitlab/search.py
@@ -4,7 +4,7 @@ import six
 from rest_framework.response import Response
 
 from sentry.api.bases.integration import IntegrationEndpoint
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.models import Integration
 
 
diff --git a/src/sentry/integrations/issues.py b/src/sentry/integrations/issues.py
index d49c119925..52eb79abc0 100644
--- a/src/sentry/integrations/issues.py
+++ b/src/sentry/integrations/issues.py
@@ -4,7 +4,7 @@ import logging
 import six
 
 from sentry import features
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.models import Activity, ExternalIssue, Group, GroupLink, GroupStatus, Organization
 from sentry.utils.http import absolute_uri
 from sentry.utils.safe import safe_execute
diff --git a/src/sentry/integrations/jira/client.py b/src/sentry/integrations/jira/client.py
index fc585b6535..8a0da86b80 100644
--- a/src/sentry/integrations/jira/client.py
+++ b/src/sentry/integrations/jira/client.py
@@ -8,7 +8,7 @@ from six.moves.urllib.parse import parse_qs, urlparse, urlsplit
 
 
 from sentry.integrations.atlassian_connect import get_query_hash
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.integrations.client import ApiClient
 from sentry.utils.http import absolute_uri
 
diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 1757aae96d..5c86fea58a 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -15,7 +15,7 @@ from sentry.integrations import (
     IntegrationMetadata,
     FeatureDescription,
 )
-from sentry.integrations.exceptions import (
+from sentry.shared_integrations.exceptions import (
     ApiUnauthorized,
     ApiError,
     IntegrationError,
diff --git a/src/sentry/integrations/jira/search.py b/src/sentry/integrations/jira/search.py
index f3a9a65c1a..8628f58ed6 100644
--- a/src/sentry/integrations/jira/search.py
+++ b/src/sentry/integrations/jira/search.py
@@ -4,7 +4,7 @@ import six
 from rest_framework.response import Response
 
 from sentry.api.bases.integration import IntegrationEndpoint
-from sentry.integrations.exceptions import ApiError, ApiUnauthorized, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, ApiUnauthorized, IntegrationError
 from sentry.models import Integration
 
 
diff --git a/src/sentry/integrations/jira_server/client.py b/src/sentry/integrations/jira_server/client.py
index c844e5e711..53c2ff84fe 100644
--- a/src/sentry/integrations/jira_server/client.py
+++ b/src/sentry/integrations/jira_server/client.py
@@ -8,7 +8,8 @@ from requests_oauthlib import OAuth1
 from six.moves.urllib.parse import parse_qsl
 
 from sentry.integrations.jira.client import JiraApiClient
-from sentry.integrations.client import ApiClient, ApiError
+from sentry.integrations.client import ApiClient
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.utils.http import absolute_uri
 
 
diff --git a/src/sentry/integrations/jira_server/integration.py b/src/sentry/integrations/jira_server/integration.py
index 52ffb4748d..5a8f98a72c 100644
--- a/src/sentry/integrations/jira_server/integration.py
+++ b/src/sentry/integrations/jira_server/integration.py
@@ -18,8 +18,7 @@ from sentry.integrations import (
     IntegrationMetadata,
     FeatureDescription,
 )
-from sentry.integrations.client import ApiError
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError, ApiError
 from sentry.integrations.jira import JiraIntegration
 from sentry.pipeline import PipelineView
 from sentry.utils.hashlib import sha1_text
diff --git a/src/sentry/integrations/jira_server/webhooks.py b/src/sentry/integrations/jira_server/webhooks.py
index 32e80106c3..43937c8c20 100644
--- a/src/sentry/integrations/jira_server/webhooks.py
+++ b/src/sentry/integrations/jira_server/webhooks.py
@@ -6,7 +6,7 @@ import six
 from django.views.decorators.csrf import csrf_exempt
 
 from sentry.api.base import Endpoint
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.integrations.jira.webhooks import handle_assignee_change, handle_status_change
 from sentry.models import Integration
 
diff --git a/src/sentry/integrations/pagerduty/notify_action.py b/src/sentry/integrations/pagerduty/notify_action.py
index 487f28567c..8e7b040b37 100644
--- a/src/sentry/integrations/pagerduty/notify_action.py
+++ b/src/sentry/integrations/pagerduty/notify_action.py
@@ -10,7 +10,7 @@ from django.utils.translation import ugettext_lazy as _
 from sentry.constants import ObjectStatus
 from sentry.rules.actions.base import EventAction
 from sentry.models import Integration, OrganizationIntegration, PagerDutyService
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from .client import PagerDutyClient
 
 
diff --git a/src/sentry/integrations/pipeline.py b/src/sentry/integrations/pipeline.py
index 457f587add..44172af3ae 100644
--- a/src/sentry/integrations/pipeline.py
+++ b/src/sentry/integrations/pipeline.py
@@ -8,7 +8,7 @@ from django.utils.translation import ugettext as _
 
 from sentry.api.serializers import serialize
 from sentry.constants import ObjectStatus
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import Identity, IdentityProvider, IdentityStatus, Integration
 from sentry.pipeline import Pipeline
 from sentry.web.helpers import render_to_response
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index ac28a20b35..d47e44f2c6 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -24,7 +24,7 @@ from sentry.integrations import (
     IntegrationMetadata,
     FeatureDescription,
 )
-from sentry.integrations.exceptions import ApiError, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.repositories import RepositoryMixin
 from sentry.integrations.vsts.issues import VstsIssueSync
 from sentry.models import Repository
diff --git a/src/sentry/integrations/vsts/issues.py b/src/sentry/integrations/vsts/issues.py
index e06670d915..d15accb473 100644
--- a/src/sentry/integrations/vsts/issues.py
+++ b/src/sentry/integrations/vsts/issues.py
@@ -8,7 +8,7 @@ from django.core.urlresolvers import reverse
 from sentry.models import IntegrationExternalProject, OrganizationIntegration, User
 from sentry.integrations.issues import IssueSyncMixin
 
-from sentry.integrations.exceptions import ApiUnauthorized, ApiError
+from sentry.shared_integrations.exceptions import ApiUnauthorized, ApiError
 from django.utils.translation import ugettext as _
 
 
diff --git a/src/sentry/integrations/vsts/repository.py b/src/sentry/integrations/vsts/repository.py
index 63be5d0d03..a44a89a2c9 100644
--- a/src/sentry/integrations/vsts/repository.py
+++ b/src/sentry/integrations/vsts/repository.py
@@ -4,7 +4,7 @@ import six
 
 from sentry.plugins import providers
 from sentry.models import Integration
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 
 MAX_COMMIT_DATA_REQUESTS = 90
 
diff --git a/src/sentry/models/repository.py b/src/sentry/models/repository.py
index efa62a62c0..6c7648a931 100644
--- a/src/sentry/models/repository.py
+++ b/src/sentry/models/repository.py
@@ -87,7 +87,7 @@ def on_delete(instance, actor=None, **kwargs):
     def handle_exception(e):
         import six
         from sentry.exceptions import InvalidIdentity, PluginError
-        from sentry.integrations.exceptions import IntegrationError
+        from sentry.shared_integrations.exceptions import IntegrationError
 
         if isinstance(e, (IntegrationError, PluginError, InvalidIdentity)):
             error = six.text_type(e)
diff --git a/src/sentry/plugins/providers/integration_repository.py b/src/sentry/plugins/providers/integration_repository.py
index 38bb6dc851..aeb61984d5 100644
--- a/src/sentry/plugins/providers/integration_repository.py
+++ b/src/sentry/plugins/providers/integration_repository.py
@@ -8,7 +8,7 @@ from rest_framework.response import Response
 
 from sentry import analytics
 from sentry.api.serializers import serialize
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import Repository, Integration
 from sentry.signals import repo_linked
 
diff --git a/src/sentry/tasks/commits.py b/src/sentry/tasks/commits.py
index 14a8372914..86fbda270e 100644
--- a/src/sentry/tasks/commits.py
+++ b/src/sentry/tasks/commits.py
@@ -6,7 +6,7 @@ import six
 from django.core.urlresolvers import reverse
 
 from sentry.exceptions import InvalidIdentity, PluginError
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import (
     Deploy,
     LatestRepoReleaseEnvironment,
diff --git a/src/sentry/tasks/integrations.py b/src/sentry/tasks/integrations.py
index fab6c7859e..5de201c230 100644
--- a/src/sentry/tasks/integrations.py
+++ b/src/sentry/tasks/integrations.py
@@ -21,7 +21,7 @@ from sentry.models import (
     User,
 )
 
-from sentry.integrations.exceptions import ApiError, ApiUnauthorized, IntegrationError
+from sentry.shared_integrations.exceptions import ApiError, ApiUnauthorized, IntegrationError
 from sentry.models.apitoken import generate_token
 from sentry.tasks.base import instrumented_task, retry
 
diff --git a/tests/sentry/api/bases/test_integration.py b/tests/sentry/api/bases/test_integration.py
index 42e66144a8..20b3b61bcb 100644
--- a/tests/sentry/api/bases/test_integration.py
+++ b/tests/sentry/api/bases/test_integration.py
@@ -4,7 +4,7 @@ from django.http import HttpRequest
 
 from sentry.api.bases.integration import IntegrationEndpoint
 from rest_framework.exceptions import APIException
-from sentry.integrations.exceptions import ApiError
+from sentry.shared_integrations.exceptions import ApiError
 from sentry.testutils import APITestCase
 
 
diff --git a/tests/sentry/api/endpoints/test_group_integration_details.py b/tests/sentry/api/endpoints/test_group_integration_details.py
index 38b612e333..4e944b9535 100644
--- a/tests/sentry/api/endpoints/test_group_integration_details.py
+++ b/tests/sentry/api/endpoints/test_group_integration_details.py
@@ -5,7 +5,7 @@ from sentry.utils.compat import mock
 import copy
 
 from sentry.integrations.example.integration import ExampleIntegration
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import Activity, ExternalIssue, GroupLink, Integration
 from sentry.testutils import APITestCase
 from sentry.utils.http import absolute_uri
diff --git a/tests/sentry/integrations/bitbucket/test_repository.py b/tests/sentry/integrations/bitbucket/test_repository.py
index 326b48ee91..22cdb9869f 100644
--- a/tests/sentry/integrations/bitbucket/test_repository.py
+++ b/tests/sentry/integrations/bitbucket/test_repository.py
@@ -10,7 +10,7 @@ from exam import fixture
 from sentry.models import Integration, Repository
 from sentry.testutils import TestCase, IntegrationRepositoryTestCase
 from sentry.integrations.bitbucket.repository import BitbucketRepositoryProvider
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from .testutils import COMPARE_COMMITS_EXAMPLE, COMMIT_DIFF_PATCH, REPO
 
 
diff --git a/tests/sentry/integrations/bitbucket_server/test_repository.py b/tests/sentry/integrations/bitbucket_server/test_repository.py
index b80e49b451..d1d8d15144 100644
--- a/tests/sentry/integrations/bitbucket_server/test_repository.py
+++ b/tests/sentry/integrations/bitbucket_server/test_repository.py
@@ -10,7 +10,7 @@ from exam import fixture
 from sentry.models import Integration, Repository, IdentityProvider, Identity, IdentityStatus
 from sentry.testutils import APITestCase
 from sentry.integrations.bitbucket_server.repository import BitbucketServerRepositoryProvider
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from .testutils import EXAMPLE_PRIVATE_KEY, COMPARE_COMMITS_EXAMPLE, REPO, COMMIT_CHANGELIST_EXAMPLE
 
 
@@ -82,26 +82,11 @@ class BitbucketServerRepositoryProviderTest(APITestCase):
                 "id": "e18e4e72de0d824edfbe0d73efe34cbd0d01d301",
                 "repository": "sentryuser/newsdiffs",
                 "patch_set": [
-                    {
-                        "path": "a.txt",
-                        "type": "M"
-                    },
-                    {
-                        "path": "b.txt",
-                        "type": "A"
-                    },
-                    {
-                        "path": "c.txt",
-                        "type": "D"
-                    },
-                    {
-                        "path": "e.txt",
-                        "type": "D"
-                    },
-                    {
-                        "path": "d.txt",
-                        "type": "A"
-                    }
+                    {"path": "a.txt", "type": "M"},
+                    {"path": "b.txt", "type": "A"},
+                    {"path": "c.txt", "type": "D"},
+                    {"path": "e.txt", "type": "D"},
+                    {"path": "d.txt", "type": "A"},
                 ],
                 "timestamp": datetime.datetime(2019, 12, 19, 13, 56, 56, tzinfo=timezone.utc),
             }
diff --git a/tests/sentry/integrations/github/test_repository.py b/tests/sentry/integrations/github/test_repository.py
index c188b90ad2..e1ce308f12 100644
--- a/tests/sentry/integrations/github/test_repository.py
+++ b/tests/sentry/integrations/github/test_repository.py
@@ -12,7 +12,7 @@ from sentry.testutils import PluginTestCase
 from sentry.testutils.asserts import assert_commit_shape
 from sentry.utils import json
 
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.integrations.github.repository import GitHubRepositoryProvider
 from .testutils import COMPARE_COMMITS_EXAMPLE, GET_LAST_COMMITS_EXAMPLE, GET_COMMIT_EXAMPLE
 
diff --git a/tests/sentry/integrations/gitlab/test_issues.py b/tests/sentry/integrations/gitlab/test_issues.py
index db4390c1ad..199f31a3b4 100644
--- a/tests/sentry/integrations/gitlab/test_issues.py
+++ b/tests/sentry/integrations/gitlab/test_issues.py
@@ -4,7 +4,7 @@ import responses
 import six
 import copy
 
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import ExternalIssue
 from sentry.utils.http import absolute_uri
 from sentry.testutils.factories import DEFAULT_EVENT_DATA
diff --git a/tests/sentry/integrations/gitlab/test_repository.py b/tests/sentry/integrations/gitlab/test_repository.py
index f807fd397a..37a2b63b09 100644
--- a/tests/sentry/integrations/gitlab/test_repository.py
+++ b/tests/sentry/integrations/gitlab/test_repository.py
@@ -6,7 +6,7 @@ import pytest
 from exam import fixture
 
 
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.integrations.gitlab.repository import GitlabRepositoryProvider
 from sentry.models import Identity, IdentityProvider, Integration, PullRequest, Repository
 from sentry.testutils import IntegrationRepositoryTestCase
diff --git a/tests/sentry/integrations/jira/test_integration.py b/tests/sentry/integrations/jira/test_integration.py
index 3f8a3dca36..db9523de7d 100644
--- a/tests/sentry/integrations/jira/test_integration.py
+++ b/tests/sentry/integrations/jira/test_integration.py
@@ -11,7 +11,7 @@ from django.core.urlresolvers import reverse
 from exam import fixture
 from sentry.utils.compat.mock import Mock
 
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.models import (
     ExternalIssue,
     Integration,
diff --git a/tests/sentry/integrations/test_client.py b/tests/sentry/integrations/test_client.py
index 7f1322e5f0..979027716a 100644
--- a/tests/sentry/integrations/test_client.py
+++ b/tests/sentry/integrations/test_client.py
@@ -57,7 +57,7 @@ class ApiClientTest(TestCase):
         resp = ApiClient().get_cached("http://example.com")
         assert resp == {"key": "value1"}
 
-        key = "undefined.client:a9b9f04336ce0181a08e774e01113b31"
+        key = "integration.undefined.client:a9b9f04336ce0181a08e774e01113b31"
         cache_get.assert_called_with(key)
         cache_set.assert_called_with(key, {"key": "value1"}, 900)
 
diff --git a/tests/sentry/integrations/vsts/test_integration.py b/tests/sentry/integrations/vsts/test_integration.py
index c9c21e2ad4..17ae575261 100644
--- a/tests/sentry/integrations/vsts/test_integration.py
+++ b/tests/sentry/integrations/vsts/test_integration.py
@@ -6,7 +6,7 @@ import responses
 from sentry.utils.compat.mock import patch, Mock
 
 from sentry.identity.vsts import VSTSIdentityProvider
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.integrations.vsts import VstsIntegration, VstsIntegrationProvider
 from sentry.models import (
     Integration,
diff --git a/tests/sentry/integrations/vsts/test_issues.py b/tests/sentry/integrations/vsts/test_issues.py
index afd53ccdd7..99413ac2ff 100644
--- a/tests/sentry/integrations/vsts/test_issues.py
+++ b/tests/sentry/integrations/vsts/test_issues.py
@@ -8,7 +8,7 @@ from exam import fixture
 from django.test import RequestFactory
 from time import time
 
-from sentry.integrations.exceptions import IntegrationError
+from sentry.shared_integrations.exceptions import IntegrationError
 from sentry.integrations.vsts.integration import VstsIntegration
 
 from sentry.models import (
