commit 2ea999f948e88bf6fb606753ddaf79af8cf5085e
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Jul 20 15:02:03 2018 -0700

    feat(discover): Add call to fetch data for chart (#9134)
    
    Fetch data with grouping by time for charts if there are any
    aggregations. Don't fetch or render the chart if there are no
    aggregations for now.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index e7d16ddcbc..26c80df64a 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -17,7 +17,8 @@ import TimeRangeSelector from 'app/components/organizations/timeRangeSelector';
 
 import Aggregations from './aggregations';
 import Conditions from './conditions';
-import Result from './result';
+import ResultTable from './result/table';
+import ResultChart from './result/chart';
 
 import {isValidCondition} from './conditions/utils';
 import {isValidAggregation} from './aggregations/utils';
@@ -35,6 +36,7 @@ export default class OrganizationDiscover extends React.Component {
     super(props);
     this.state = {
       result: null,
+      chartData: null,
     };
   }
 
@@ -79,6 +81,24 @@ export default class OrganizationDiscover extends React.Component {
         this.setState({result: null});
       }
     );
+
+    // If there are aggregations, get data for chart
+    if (queryBuilder.getInternal().aggregations.length > 0) {
+      const chartQuery = {
+        ...queryBuilder.getExternal(),
+        groupby: ['time'],
+        rollup: 60 * 60 * 24,
+      };
+
+      queryBuilder.fetch(chartQuery).then(
+        chartData => {
+          this.setState({chartData});
+        },
+        () => {
+          this.setState({chartData: null});
+        }
+      );
+    }
   };
 
   getOrderbyOptions = () => {
@@ -143,7 +163,7 @@ export default class OrganizationDiscover extends React.Component {
     });
   };
   render() {
-    const {result} = this.state;
+    const {result, chartData} = this.state;
     const {queryBuilder} = this.props;
 
     const query = queryBuilder.getInternal();
@@ -239,7 +259,8 @@ export default class OrganizationDiscover extends React.Component {
             </Flex>
           </Box>
           <Box w={[2 / 3, 2 / 3, 2 / 3, 3 / 4]} pl={2}>
-            {result && <Result result={result} />}
+            {chartData && <ResultChart data={chartData} />}
+            {result && <ResultTable result={result} />}
           </Box>
         </Flex>
       </Discover>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/chart.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/chart.jsx
new file mode 100644
index 0000000000..9b60205d50
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/chart.jsx
@@ -0,0 +1,13 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+export default class Result extends React.Component {
+  static propTypes = {
+    data: PropTypes.object.isRequired,
+  };
+
+  render() {
+    // TODO: implement charts
+    return `data for charts: ${JSON.stringify(this.props.data)}`;
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
rename to src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
