commit 7f2d38d419f3e83f9b8a8f32581aab6242ccdbc0
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 16 10:19:46 2015 -0800

    Ensure non-team admins are not notified of invites

diff --git a/src/sentry/models/organizationaccessrequest.py b/src/sentry/models/organizationaccessrequest.py
index 20a7cf93a4..359c808ae5 100644
--- a/src/sentry/models/organizationaccessrequest.py
+++ b/src/sentry/models/organizationaccessrequest.py
@@ -51,18 +51,18 @@ class OrganizationAccessRequest(Model):
             context=context,
         )
 
-        roles_capable = [
-            r.id for r in roles.with_scope('team:write')
+        global_roles = [
+            r.id for r in roles.with_scope('org:write')
+            if r.is_global
         ]
-        non_global_roles = [
-            r for r in roles_capable
-            if not roles.get(r).is_global or roles.get(r).has_scope('member:write')
+        team_roles = [
+            r.id for r in roles.with_scope('team:write')
         ]
 
         # find members which are either team scoped or have access to all teams
         member_list = OrganizationMember.objects.filter(
-            Q(role__in=non_global_roles) |
-            Q(teams=self.team, role__in=roles_capable),
+            Q(role__in=global_roles) |
+            Q(teams=self.team, role__in=team_roles),
             organization=self.team.organization,
             user__isnull=False,
         ).select_related('user')
diff --git a/tests/sentry/models/test_organizationaccessrequest.py b/tests/sentry/models/test_organizationaccessrequest.py
index 7c081d2342..5ef60a88bf 100644
--- a/tests/sentry/models/test_organizationaccessrequest.py
+++ b/tests/sentry/models/test_organizationaccessrequest.py
@@ -12,6 +12,7 @@ class SendRequestEmailTest(TestCase):
     def test_sends_email_to_everyone(self):
         owner = self.create_user('owner@example.com')
         team_admin = self.create_user('team-admin@example.com')
+        non_team_admin = self.create_user('non-team-admin@example.com')
         random_member = self.create_user('member@example.com')
         requesting_user = self.create_user('requesting@example.com')
 
@@ -33,6 +34,13 @@ class SendRequestEmailTest(TestCase):
             teams=[team],
         )
 
+        self.create_member(
+            organization=org,
+            user=non_team_admin,
+            role='admin',
+            teams=[],
+        )
+
         self.create_member(
             organization=org,
             user=random_member,
