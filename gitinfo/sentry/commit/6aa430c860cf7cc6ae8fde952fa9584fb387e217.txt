commit 6aa430c860cf7cc6ae8fde952fa9584fb387e217
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 23 13:29:14 2018 -0700

    feat(ui): Slight improvements in owners UI (#8491)

diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
index 487dec72da..0b1ffd8a51 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
@@ -1,12 +1,13 @@
 import React from 'react';
 import styled from 'react-emotion';
 
-import {t} from 'app/locale';
+import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
 
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import TextBlock from 'app/views/settings/components/text/textBlock';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';
@@ -50,26 +51,41 @@ class ProjectOwnership extends AsyncView {
         <Panel>
           <PanelHeader>{t('Ownership Rules')}</PanelHeader>
           <PanelBody disablePadding={false}>
-            <p>
+            <Block>
               {t(
                 'Define rules here to configure automated ownership for new issues and direct email alerts'
               )}
-            </p>
-            <p>{t('Rules follow the pattern type:glob owner owner')}</p>
-            <p>{t('Owners can be team identifiers starting with #, or user emails')}</p>
-            <p>
+            </Block>
+            <Block>
+              {t('Rules follow the pattern: ')}
+              <code>type:glob owner owner</code>
+            </Block>
+
+            <Block>
+              {tct(
+                'Owners can be team identifiers starting with [pound], or user emails',
+                {
+                  pound: <code>#</code>,
+                }
+              )}
+            </Block>
+
+            <Block>
               {t('Globbing Syntax:')}
               <CodeBlock>
                 {`* matches everything
 ? matches any single character`}
               </CodeBlock>
-            </p>
-            Examples:
-            <CodeBlock>
-              path:src/example/pipeline/* person@sentry.io #infrastructure
-              {'\n'}
-              url:http://example.com/settings/* #product
-            </CodeBlock>
+            </Block>
+
+            <Block>
+              {t('Examples:')}
+              <CodeBlock>
+                path:src/example/pipeline/* person@sentry.io #infrastructure
+                {'\n'}
+                url:http://example.com/settings/* #product
+              </CodeBlock>
+            </Block>
             <OwnerInput {...this.props} initialText={ownership.raw || ''} />
           </PanelBody>
         </Panel>
@@ -105,3 +121,7 @@ class ProjectOwnership extends AsyncView {
 }
 
 export default ProjectOwnership;
+
+const Block = styled(TextBlock)`
+  margin-bottom: 16px;
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
index ae1475ce7d..a832fc10db 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
@@ -1,3 +1,4 @@
+import {Flex} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
@@ -42,8 +43,9 @@ class OwnerInput extends React.Component {
     if (!text) {
       return null;
     }
+
     if (text.startsWith('Invalid rule owners:')) {
-      return text;
+      return <InvalidOwners>{text}</InvalidOwners>;
     } else {
       return <SyntaxOverlay line={text.match(/line (\d*),/)[1] - 1} />;
     }
@@ -111,18 +113,18 @@ class OwnerInput extends React.Component {
     }));
   }
 
-  onChange(e) {
+  handleChange = e => {
     this.setState({text: e.target.value});
-  }
+  };
 
-  handleAddRule(rule) {
+  handleAddRule = rule => {
     this.setState(
       ({text}) => ({
         text: text + '\n' + rule,
       }),
       this.handleUpdateOwnership
     );
-  }
+  };
 
   render() {
     let {project, organization, urls, paths} = this.props;
@@ -149,40 +151,44 @@ class OwnerInput extends React.Component {
             placeholder={
               '#example usage\npath:src/example/pipeline/* person@sentry.io #infra\nurl:http://example.com/settings/* #product'
             }
-            onChange={this.onChange.bind(this)}
+            onChange={this.handleChange}
             value={text}
             spellCheck="false"
             autoComplete="off"
             autoCorrect="off"
             autoCapitalize="off"
           />
-          {this.parseError(error)}
-          <SaveButton>
-            <Button
-              size="small"
-              priority="primary"
-              onClick={this.handleUpdateOwnership}
-              disabled={text === initialText}
-            >
-              {t('Save Changes')}
-            </Button>
-          </SaveButton>
+          <Flex align="center" justify="space-between">
+            <div>{this.parseError(error)}</div>
+            <SaveButton>
+              <Button
+                size="small"
+                priority="primary"
+                onClick={this.handleUpdateOwnership}
+                disabled={text === initialText}
+              >
+                {t('Save Changes')}
+              </Button>
+            </SaveButton>
+          </Flex>
         </div>
       </React.Fragment>
     );
   }
 }
 
+const TEXTAREA_PADDING = 4;
+const TEXTAREA_LINE_HEIGHT = 24;
+
 const SyntaxOverlay = styled.div`
   ${inputStyles};
-  margin: 10px 0;
   width: 100%;
-  height: 24px;
+  height: ${TEXTAREA_LINE_HEIGHT}px;
   background-color: red;
   opacity: 0.1;
   pointer-events: none;
   position: absolute;
-  top: ${({line}) => line * 24}px;
+  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;
 `;
 
 const SaveButton = styled.div`
@@ -201,6 +207,14 @@ const StyledTextArea = styled(TextareaAutosize)`
   font-family: ${p => p.theme.text.familyMono};
   word-break: break-all;
   white-space: pre-wrap;
+  padding-top: ${TEXTAREA_PADDING}px;
+  line-height: ${TEXTAREA_LINE_HEIGHT}px;
+`;
+
+const InvalidOwners = styled('div')`
+  color: ${p => p.theme.error};
+  font-weight: bold;
+  margin-top: 12px;
 `;
 
 export default OwnerInput;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
index bc7f88ccfe..6daa64203c 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
@@ -18,6 +18,7 @@ const initialState = {
   text: '',
   type: 'path',
   owners: [],
+  isValid: false,
 };
 
 class RuleBuilder extends React.Component {
@@ -34,22 +35,31 @@ class RuleBuilder extends React.Component {
     this.state = initialState;
   }
 
+  checkIsValid = () => {
+    this.setState(state => ({
+      isValid: !!state.text && state.owners && !!state.owners.length,
+    }));
+  };
+
   handleTypeChange = val => {
     this.setState({type: val});
+    this.checkIsValid();
   };
 
   handleChangeValue = e => {
     this.setState({text: e.target.value});
+    this.checkIsValid();
   };
 
   handleChangeOwners = owners => {
     this.setState({owners});
+    this.checkIsValid();
   };
 
   handleAddRule = () => {
-    let {type, text, owners} = this.state;
+    let {type, text, owners, isValid} = this.state;
 
-    if (!text || owners.length == 0) {
+    if (!isValid) {
       addErrorMessage('A Rule needs a type, a value, and one or more owners.');
       return;
     }
@@ -68,9 +78,14 @@ class RuleBuilder extends React.Component {
     this.setState(initialState);
   };
 
+  handleSelectCandidate = (text, type) => {
+    this.setState({text, type});
+    this.checkIsValid();
+  };
+
   render() {
     let {urls, paths, project, organization} = this.props;
-    let {type, text, owners} = this.state;
+    let {type, text, owners, isValid} = this.state;
 
     return (
       <React.Fragment>
@@ -80,7 +95,7 @@ class RuleBuilder extends React.Component {
               paths.map(v => (
                 <RuleCandidate
                   key={v}
-                  onClick={() => this.setState({text: v, type: 'path'})}
+                  onClick={() => this.handleSelectCandidate(v, 'path')}
                 >
                   <AddIcon src="icon-circle-add" />
                   <StyledTextOverflow>{v}</StyledTextOverflow>
@@ -91,7 +106,7 @@ class RuleBuilder extends React.Component {
               urls.map(v => (
                 <RuleCandidate
                   key={v}
-                  onClick={() => this.setState({text: v, type: 'url'})}
+                  onClick={() => this.handleSelectCandidate(v, 'url')}
                 >
                   <AddIcon src="icon-circle-add" />
                   <StyledTextOverflow>{v}</StyledTextOverflow>
@@ -130,6 +145,7 @@ class RuleBuilder extends React.Component {
 
           <RuleAddButton
             priority="primary"
+            disabled={!isValid}
             onClick={this.handleAddRule}
             icon="icon-circle-add"
             size="zero"
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index 060ce32714..98459190ea 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -731,6 +731,7 @@ exports[`Project Ownership Input renders 1`] = `
           </Base>
         </Flex>
         <RuleAddButton
+          disabled={true}
           icon="icon-circle-add"
           onClick={[Function]}
           priority="primary"
@@ -738,7 +739,7 @@ exports[`Project Ownership Input renders 1`] = `
         >
           <Button
             className="css-3daogo-RuleAddButton e1hyuoc79"
-            disabled={false}
+            disabled={true}
             icon="icon-circle-add"
             onClick={[Function]}
             priority="primary"
@@ -746,27 +747,33 @@ exports[`Project Ownership Input renders 1`] = `
           >
             <StyledButton
               className="css-3daogo-RuleAddButton e1hyuoc79"
-              disabled={false}
+              disabled={true}
+              href={null}
               onClick={[Function]}
               priority="primary"
               role="button"
               size="zero"
+              to={null}
             >
               <Component
-                className="e1hyuoc79 css-1gabw8k-StyledButton-getColors-RuleAddButton e17811v30"
-                disabled={false}
+                className="e1hyuoc79 css-18qh3k2-StyledButton-getColors-RuleAddButton e17811v30"
+                disabled={true}
+                href={null}
                 onClick={[Function]}
                 priority="primary"
                 role="button"
                 size="zero"
+                to={null}
               >
                 <button
-                  className="e1hyuoc79 css-1gabw8k-StyledButton-getColors-RuleAddButton e17811v30"
-                  disabled={false}
+                  className="e1hyuoc79 css-18qh3k2-StyledButton-getColors-RuleAddButton e17811v30"
+                  disabled={true}
+                  href={null}
                   onClick={[Function]}
                   priority="primary"
                   role="button"
                   size="zero"
+                  to={null}
                 >
                   <ButtonLabel
                     size="zero"
@@ -882,7 +889,7 @@ url:http://example.com/settings/* #product"
         autoCapitalize="off"
         autoComplete="off"
         autoCorrect="off"
-        className="css-19bz115-StyledTextArea-inputStyles en3n9di2"
+        className="css-18yzq2g-StyledTextArea-inputStyles en3n9di2"
         onChange={[Function]}
         placeholder="#example usage
 path:src/example/pipeline/* person@sentry.io #infra
@@ -895,7 +902,7 @@ url:http://example.com/settings/* #product"
           autoCapitalize="off"
           autoComplete="off"
           autoCorrect="off"
-          className="css-19bz115-StyledTextArea-inputStyles en3n9di2"
+          className="css-18yzq2g-StyledTextArea-inputStyles en3n9di2"
           onChange={[Function]}
           placeholder="#example usage
 path:src/example/pipeline/* person@sentry.io #infra
@@ -906,76 +913,93 @@ url:http://example.com/settings/* #product"
         />
       </TextareaAutosize>
     </StyledTextArea>
-    <SaveButton>
-      <div
-        className="css-5zvod-SaveButton en3n9di1"
+    <Flex
+      align="center"
+      justify="space-between"
+    >
+      <Base
+        align="center"
+        className="css-v7pzd9"
+        justify="space-between"
       >
-        <Button
-          disabled={false}
-          onClick={[Function]}
-          priority="primary"
-          size="small"
+        <div
+          className="css-v7pzd9"
+          is={null}
         >
-          <StyledButton
-            aria-label="Save Changes"
-            disabled={false}
-            onClick={[Function]}
-            priority="primary"
-            role="button"
-            size="small"
-          >
-            <Component
-              aria-label="Save Changes"
-              className="css-zvpqlo-StyledButton-getColors e17811v30"
-              disabled={false}
-              onClick={[Function]}
-              priority="primary"
-              role="button"
-              size="small"
+          <div />
+          <SaveButton>
+            <div
+              className="css-5zvod-SaveButton en3n9di1"
             >
-              <button
-                aria-label="Save Changes"
-                className="css-zvpqlo-StyledButton-getColors e17811v30"
+              <Button
                 disabled={false}
                 onClick={[Function]}
                 priority="primary"
-                role="button"
                 size="small"
               >
-                <ButtonLabel
+                <StyledButton
+                  aria-label="Save Changes"
+                  disabled={false}
+                  onClick={[Function]}
+                  priority="primary"
+                  role="button"
                   size="small"
                 >
                   <Component
-                    className="css-179w01k-ButtonLabel e17811v31"
+                    aria-label="Save Changes"
+                    className="css-zvpqlo-StyledButton-getColors e17811v30"
+                    disabled={false}
+                    onClick={[Function]}
+                    priority="primary"
+                    role="button"
                     size="small"
                   >
-                    <Flex
-                      align="center"
-                      className="css-179w01k-ButtonLabel e17811v31"
+                    <button
+                      aria-label="Save Changes"
+                      className="css-zvpqlo-StyledButton-getColors e17811v30"
+                      disabled={false}
+                      onClick={[Function]}
+                      priority="primary"
+                      role="button"
                       size="small"
                     >
-                      <Base
-                        align="center"
-                        className="e17811v31 css-8mahft-ButtonLabel"
+                      <ButtonLabel
                         size="small"
                       >
-                        <div
-                          className="e17811v31 css-8mahft-ButtonLabel"
-                          is={null}
+                        <Component
+                          className="css-179w01k-ButtonLabel e17811v31"
                           size="small"
                         >
-                          Save Changes
-                        </div>
-                      </Base>
-                    </Flex>
+                          <Flex
+                            align="center"
+                            className="css-179w01k-ButtonLabel e17811v31"
+                            size="small"
+                          >
+                            <Base
+                              align="center"
+                              className="e17811v31 css-8mahft-ButtonLabel"
+                              size="small"
+                            >
+                              <div
+                                className="e17811v31 css-8mahft-ButtonLabel"
+                                is={null}
+                                size="small"
+                              >
+                                Save Changes
+                              </div>
+                            </Base>
+                          </Flex>
+                        </Component>
+                      </ButtonLabel>
+                    </button>
                   </Component>
-                </ButtonLabel>
-              </button>
-            </Component>
-          </StyledButton>
-        </Button>
-      </div>
-    </SaveButton>
+                </StyledButton>
+              </Button>
+            </div>
+          </SaveButton>
+        </div>
+      </Base>
+    </Flex>
   </div>
 </OwnerInput>
 `;
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index e73e57fd4f..6a486a7321 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -23,29 +23,52 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
         disablePadding={false}
         flex={false}
       >
-        <p>
+        <Block>
           Define rules here to configure automated ownership for new issues and direct email alerts
-        </p>
-        <p>
-          Rules follow the pattern type:glob owner owner
-        </p>
-        <p>
-          Owners can be team identifiers starting with #, or user emails
-        </p>
-        <p>
+        </Block>
+        <Block>
+          Rules follow the pattern: 
+          <code>
+            type:glob owner owner
+          </code>
+        </Block>
+        <Block>
+          <span
+            key="4"
+          >
+            <span
+              key="0"
+            >
+              Owners can be team identifiers starting with 
+            </span>
+            <code
+              key="1"
+            >
+              #
+            </code>
+            <span
+              key="2"
+            >
+              , or user emails
+            </span>
+          </span>
+        </Block>
+        <Block>
           Globbing Syntax:
           <CodeBlock>
             * matches everything
 ? matches any single character
           </CodeBlock>
-        </p>
-        Examples:
-        <CodeBlock>
-          path:src/example/pipeline/* person@sentry.io #infrastructure
-          
+        </Block>
+        <Block>
+          Examples:
+          <CodeBlock>
+            path:src/example/pipeline/* person@sentry.io #infrastructure
+            
 
-          url:http://example.com/settings/* #product
-        </CodeBlock>
+            url:http://example.com/settings/* #product
+          </CodeBlock>
+        </Block>
         <OwnerInput
           initialText="url:src @dummy@example.com"
           organization={
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index 362791a036..823cadbcd8 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -567,7 +567,7 @@ exports[`RuleBuilder renders 1`] = `
                           ignoreAccents={true}
                           ignoreCase={true}
                           inputProps={Object {}}
-                          isLoading={true}
+                          isLoading={false}
                           joinValues={false}
                           labelKey="label"
                           loadOptions={[Function]}
@@ -577,7 +577,7 @@ exports[`RuleBuilder renders 1`] = `
                           menuBuffer={0}
                           menuRenderer={[Function]}
                           multi={true}
-                          noResultsText="Loading..."
+                          noResultsText="Type to search"
                           onBlurResetsInput={true}
                           onChange={[Function]}
                           onCloseResetsInput={true}
@@ -585,9 +585,150 @@ exports[`RuleBuilder renders 1`] = `
                           onSelectResetsInput={true}
                           openOnClick={true}
                           optionComponent={[Function]}
-                          options={Array []}
+                          options={
+                            Array [
+                              Object {
+                                "actor": Object {
+                                  "id": "1",
+                                  "name": "Jane Doe",
+                                  "type": "user",
+                                },
+                                "label": <IdBadge
+                                  avatarSize={24}
+                                  hideEmail={true}
+                                  useLink={false}
+                                  user={
+                                    Object {
+                                      "email": "janedoe@example.com",
+                                      "flags": Object {
+                                        "newsletter_consent_prompt": false,
+                                      },
+                                      "hasPasswordAuth": true,
+                                      "id": "1",
+                                      "isAuthenticated": true,
+                                      "name": "Jane Doe",
+                                      "options": Object {
+                                        "timezone": "UTC",
+                                      },
+                                      "user": Object {
+                                        "email": "janedoe@example.com",
+                                        "id": "1",
+                                        "name": "Jane Doe",
+                                      },
+                                      "username": "foo@example.com",
+                                    }
+                                  }
+                                />,
+                                "searchKey": "janedoe@example.com jane doe",
+                                "value": "user:1",
+                              },
+                              Object {
+                                "actor": Object {
+                                  "id": "3",
+                                  "name": "cool-team",
+                                  "type": "team",
+                                },
+                                "label": <IdBadge
+                                  team={
+                                    Object {
+                                      "id": "3",
+                                      "isMember": true,
+                                      "name": "COOL TEAM",
+                                      "slug": "cool-team",
+                                    }
+                                  }
+                                />,
+                                "searchKey": "#cool-team",
+                                "value": "team:3",
+                              },
+                              Object {
+                                "actor": Object {
+                                  "id": "4",
+                                  "name": "team-not-in-project",
+                                  "type": "team",
+                                },
+                                "disabled": true,
+                                "label": <Flex
+                                  justify="space-between"
+                                >
+                                  <DisabledLabel>
+                                    <Tooltip
+                                      title="#team-not-in-project is not a member of project"
+                                      tooltipOptions={
+                                        Object {
+                                          "container": "body",
+                                          "placement": "left",
+                                        }
+                                      }
+                                    >
+                                      <IdBadge
+                                        team={
+                                          Object {
+                                            "id": "4",
+                                            "isMember": true,
+                                            "name": "TEAM NOT IN PROJECT",
+                                            "slug": "team-not-in-project",
+                                          }
+                                        }
+                                      />
+                                    </Tooltip>
+                                  </DisabledLabel>
+                                  <Tooltip
+                                    title="Add #team-not-in-project to project"
+                                  >
+                                    <AddToProjectButton
+                                      borderless={true}
+                                      disabled={false}
+                                      onClick={[Function]}
+                                      size="zero"
+                                    >
+                                      <InlineSvg
+                                        src="icon-circle-add"
+                                      />
+                                    </AddToProjectButton>
+                                  </Tooltip>
+                                </Flex>,
+                                "searchKey": "#team-not-in-project",
+                                "value": "team:4",
+                              },
+                              Object {
+                                "actor": Object {
+                                  "id": "2",
+                                  "name": "John Smith",
+                                  "type": "user",
+                                },
+                                "disabled": true,
+                                "label": <DisabledLabel>
+                                  <Tooltip
+                                    title="John Smith is not a member of project"
+                                    tooltipOptions={
+                                      Object {
+                                        "container": "body",
+                                        "placement": "left",
+                                      }
+                                    }
+                                  >
+                                    <IdBadge
+                                      avatarSize={24}
+                                      hideEmail={true}
+                                      useLink={false}
+                                      user={
+                                        Object {
+                                          "email": "johnsmith@example.com",
+                                          "id": "2",
+                                          "name": "John Smith",
+                                        }
+                                      }
+                                    />
+                                  </Tooltip>
+                                </DisabledLabel>,
+                                "searchKey": "johnsmith@example.com john smith",
+                                "value": "user:2",
+                              },
+                            ]
+                          }
                           pageSize={5}
-                          placeholder="Loading..."
+                          placeholder="Add Owners"
                           removeSelected={true}
                           required={false}
                           rtl={false}
@@ -602,7 +743,7 @@ exports[`RuleBuilder renders 1`] = `
                           valueKey="value"
                         >
                           <div
-                            className="Select css-11osmt1-StyledSelect eho28m20 is-clearable is-loading is-searchable Select--multi"
+                            className="Select css-11osmt1-StyledSelect eho28m20 is-clearable is-searchable Select--multi"
                           >
                             <div
                               className="Select-control"
@@ -619,7 +760,7 @@ exports[`RuleBuilder renders 1`] = `
                                 <div
                                   className="Select-placeholder"
                                 >
-                                  Loading...
+                                  Add Owners
                                 </div>
                                 <AutosizeInput
                                   aria-activedescendant="react-select-3--value"
@@ -678,14 +819,6 @@ exports[`RuleBuilder renders 1`] = `
                                   </div>
                                 </AutosizeInput>
                               </span>
-                              <span
-                                aria-hidden="true"
-                                className="Select-loading-zone"
-                              >
-                                <span
-                                  className="Select-loading"
-                                />
-                              </span>
                               <span
                                 className="Select-arrow-zone"
                                 onMouseDown={[Function]}
@@ -707,6 +840,7 @@ exports[`RuleBuilder renders 1`] = `
         </Base>
       </Flex>
       <RuleAddButton
+        disabled={true}
         icon="icon-circle-add"
         onClick={[Function]}
         priority="primary"
@@ -714,7 +848,7 @@ exports[`RuleBuilder renders 1`] = `
       >
         <Button
           className="css-3daogo-RuleAddButton e1hyuoc79"
-          disabled={false}
+          disabled={true}
           icon="icon-circle-add"
           onClick={[Function]}
           priority="primary"
@@ -722,27 +856,33 @@ exports[`RuleBuilder renders 1`] = `
         >
           <StyledButton
             className="css-3daogo-RuleAddButton e1hyuoc79"
-            disabled={false}
+            disabled={true}
+            href={null}
             onClick={[Function]}
             priority="primary"
             role="button"
             size="zero"
+            to={null}
           >
             <Component
-              className="e1hyuoc79 css-1gabw8k-StyledButton-getColors-RuleAddButton e17811v30"
-              disabled={false}
+              className="e1hyuoc79 css-18qh3k2-StyledButton-getColors-RuleAddButton e17811v30"
+              disabled={true}
+              href={null}
               onClick={[Function]}
               priority="primary"
               role="button"
               size="zero"
+              to={null}
             >
               <button
-                className="e1hyuoc79 css-1gabw8k-StyledButton-getColors-RuleAddButton e17811v30"
-                disabled={false}
+                className="e1hyuoc79 css-18qh3k2-StyledButton-getColors-RuleAddButton e17811v30"
+                disabled={true}
+                href={null}
                 onClick={[Function]}
                 priority="primary"
                 role="button"
                 size="zero"
+                to={null}
               >
                 <ButtonLabel
                   size="zero"
@@ -1846,7 +1986,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           ignoreAccents={true}
                           ignoreCase={true}
                           inputProps={Object {}}
-                          isLoading={true}
+                          isLoading={false}
                           joinValues={false}
                           labelKey="label"
                           loadOptions={[Function]}
@@ -1856,7 +1996,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           menuBuffer={0}
                           menuRenderer={[Function]}
                           multi={true}
-                          noResultsText="Loading..."
+                          noResultsText="Type to search"
                           onBlurResetsInput={true}
                           onChange={[Function]}
                           onCloseResetsInput={true}
@@ -1864,9 +2004,150 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           onSelectResetsInput={true}
                           openOnClick={true}
                           optionComponent={[Function]}
-                          options={Array []}
+                          options={
+                            Array [
+                              Object {
+                                "actor": Object {
+                                  "id": "1",
+                                  "name": "Jane Doe",
+                                  "type": "user",
+                                },
+                                "label": <IdBadge
+                                  avatarSize={24}
+                                  hideEmail={true}
+                                  useLink={false}
+                                  user={
+                                    Object {
+                                      "email": "janedoe@example.com",
+                                      "flags": Object {
+                                        "newsletter_consent_prompt": false,
+                                      },
+                                      "hasPasswordAuth": true,
+                                      "id": "1",
+                                      "isAuthenticated": true,
+                                      "name": "Jane Doe",
+                                      "options": Object {
+                                        "timezone": "UTC",
+                                      },
+                                      "user": Object {
+                                        "email": "janedoe@example.com",
+                                        "id": "1",
+                                        "name": "Jane Doe",
+                                      },
+                                      "username": "foo@example.com",
+                                    }
+                                  }
+                                />,
+                                "searchKey": "janedoe@example.com jane doe",
+                                "value": "user:1",
+                              },
+                              Object {
+                                "actor": Object {
+                                  "id": "3",
+                                  "name": "cool-team",
+                                  "type": "team",
+                                },
+                                "label": <IdBadge
+                                  team={
+                                    Object {
+                                      "id": "3",
+                                      "isMember": true,
+                                      "name": "COOL TEAM",
+                                      "slug": "cool-team",
+                                    }
+                                  }
+                                />,
+                                "searchKey": "#cool-team",
+                                "value": "team:3",
+                              },
+                              Object {
+                                "actor": Object {
+                                  "id": "4",
+                                  "name": "team-not-in-project",
+                                  "type": "team",
+                                },
+                                "disabled": true,
+                                "label": <Flex
+                                  justify="space-between"
+                                >
+                                  <DisabledLabel>
+                                    <Tooltip
+                                      title="#team-not-in-project is not a member of project"
+                                      tooltipOptions={
+                                        Object {
+                                          "container": "body",
+                                          "placement": "left",
+                                        }
+                                      }
+                                    >
+                                      <IdBadge
+                                        team={
+                                          Object {
+                                            "id": "4",
+                                            "isMember": true,
+                                            "name": "TEAM NOT IN PROJECT",
+                                            "slug": "team-not-in-project",
+                                          }
+                                        }
+                                      />
+                                    </Tooltip>
+                                  </DisabledLabel>
+                                  <Tooltip
+                                    title="Add #team-not-in-project to project"
+                                  >
+                                    <AddToProjectButton
+                                      borderless={true}
+                                      disabled={false}
+                                      onClick={[Function]}
+                                      size="zero"
+                                    >
+                                      <InlineSvg
+                                        src="icon-circle-add"
+                                      />
+                                    </AddToProjectButton>
+                                  </Tooltip>
+                                </Flex>,
+                                "searchKey": "#team-not-in-project",
+                                "value": "team:4",
+                              },
+                              Object {
+                                "actor": Object {
+                                  "id": "2",
+                                  "name": "John Smith",
+                                  "type": "user",
+                                },
+                                "disabled": true,
+                                "label": <DisabledLabel>
+                                  <Tooltip
+                                    title="John Smith is not a member of project"
+                                    tooltipOptions={
+                                      Object {
+                                        "container": "body",
+                                        "placement": "left",
+                                      }
+                                    }
+                                  >
+                                    <IdBadge
+                                      avatarSize={24}
+                                      hideEmail={true}
+                                      useLink={false}
+                                      user={
+                                        Object {
+                                          "email": "johnsmith@example.com",
+                                          "id": "2",
+                                          "name": "John Smith",
+                                        }
+                                      }
+                                    />
+                                  </Tooltip>
+                                </DisabledLabel>,
+                                "searchKey": "johnsmith@example.com john smith",
+                                "value": "user:2",
+                              },
+                            ]
+                          }
                           pageSize={5}
-                          placeholder="Loading..."
+                          placeholder="Add Owners"
                           removeSelected={true}
                           required={false}
                           rtl={false}
@@ -1919,7 +2200,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           valueKey="value"
                         >
                           <div
-                            className="Select css-11osmt1-StyledSelect eho28m20 has-value is-clearable is-focused is-loading is-searchable Select--multi"
+                            className="Select css-11osmt1-StyledSelect eho28m20 has-value is-clearable is-focused is-searchable Select--multi"
                           >
                             <div
                               className="Select-control"
@@ -1940,7 +2221,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                   key="value-0-user:1"
                                   onClick={null}
                                   onRemove={[Function]}
-                                  placeholder="Loading..."
+                                  placeholder="Add Owners"
                                   value={
                                     Object {
                                       "actor": Object {
@@ -2157,11 +2438,21 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                                 Press backspace to remove [object Object]
                               </span>
                               <span
-                                aria-hidden="true"
-                                className="Select-loading-zone"
+                                aria-label="Clear all"
+                                className="Select-clear-zone"
+                                onMouseDown={[Function]}
+                                onTouchEnd={[Function]}
+                                onTouchMove={[Function]}
+                                onTouchStart={[Function]}
+                                title="Clear all"
                               >
                                 <span
-                                  className="Select-loading"
+                                  className="Select-clear"
+                                  dangerouslySetInnerHTML={
+                                    Object {
+                                      "__html": "&times;",
+                                    }
+                                  }
                                 />
                               </span>
                               <span
@@ -2185,6 +2476,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
         </Base>
       </Flex>
       <RuleAddButton
+        disabled={false}
         icon="icon-circle-add"
         onClick={[Function]}
         priority="primary"
diff --git a/tests/js/spec/views/ownershipInput.spec.jsx b/tests/js/spec/views/ownershipInput.spec.jsx
index bcdaa034bf..a43422bb81 100644
--- a/tests/js/spec/views/ownershipInput.spec.jsx
+++ b/tests/js/spec/views/ownershipInput.spec.jsx
@@ -44,10 +44,7 @@ describe('Project Ownership Input', function() {
     submit.simulate('click');
     expect(put).not.toHaveBeenCalled();
 
-    wrapper
-      .find(OwnerInput)
-      .instance()
-      .onChange({target: {value: 'new'}});
+    wrapper.find('StyledTextArea').simulate('change', {target: {value: 'new'}});
 
     submit.simulate('click');
 
diff --git a/tests/js/spec/views/ruleBuilder.spec.jsx b/tests/js/spec/views/ruleBuilder.spec.jsx
index 2c6b251cb7..c3ab983493 100644
--- a/tests/js/spec/views/ruleBuilder.spec.jsx
+++ b/tests/js/spec/views/ruleBuilder.spec.jsx
@@ -90,6 +90,7 @@ describe('RuleBuilder', function() {
 
     let text = wrapper.find('BuilderInput');
     text.simulate('change', {target: {value: 'some/path/*'}});
+    expect(wrapper.find('RuleAddButton').prop('disabled')).toBe(true);
 
     add.simulate('click');
     expect(handleAdd).not.toHaveBeenCalled();
@@ -98,9 +99,13 @@ describe('RuleBuilder', function() {
     wrapper.find('SelectOwners .Select-control').simulate('keyDown', {keyCode: 40});
     wrapper.find('SelectOwners .Select-control').simulate('keyDown', {keyCode: 13});
 
+    expect(wrapper.find('RuleAddButton').prop('disabled')).toBe(false);
     add.simulate('click');
     expect(handleAdd).toHaveBeenCalled();
 
+    // This is because after selecting, react-select (async) reloads
+    await tick();
+    wrapper.update();
     expect(wrapper.find(RuleBuilder)).toMatchSnapshot();
   });
 
@@ -152,6 +157,9 @@ describe('RuleBuilder', function() {
     let ruleCandidate = wrapper.find('RuleCandidate').first();
     ruleCandidate.simulate('click');
 
+    // This is because after selecting, react-select (async) reloads
+    await tick();
+    wrapper.update();
     expect(wrapper.find(RuleBuilder)).toMatchSnapshot();
 
     wrapper.find('RuleAddButton').simulate('click');
