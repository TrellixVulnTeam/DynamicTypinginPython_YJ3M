commit dc5d828bdd9fe89a85d68d573f8a9243fe1ed170
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 5 00:43:45 2013 -0800

    Better language

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 95961d0cdc..9ee1aa156d 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -297,19 +297,19 @@ def validate_data(project, data, client=None):
     if not data.get('message'):
         data['message'] = '<no message value>'
     elif len(data['message']) > MAX_MESSAGE_LENGTH:
-        logger.error('Truncated value for message was too long (%d chars)', len(data['message']),
+        logger.error('Truncated value for message due to length (%d chars)', len(data['message']),
             **client_metadata(client))
         data['message'] = data['message'][:MAX_MESSAGE_LENGTH]
 
     if data.get('culprit') and len(data['culprit']) > MAX_CULPRIT_LENGTH:
-        logger.error('Truncated value for culprit was too long (%d chars)', len(data['culprit']),
+        logger.error('Truncated value for culprit due to length (%d chars)', len(data['culprit']),
             **client_metadata(client))
         data['culprit'][:MAX_CULPRIT_LENGTH]
 
     if not data.get('event_id'):
         data['event_id'] = uuid.uuid4().hex
     if len(data['event_id']) > 32:
-        logger.error('Discarded value for event_id was too long (%d chars)', len(data['event_id']),
+        logger.error('Discarded value for event_id due to length (%d chars)', len(data['event_id']),
             **client_metadata(client))
         data['event_id'] = uuid.uuid4().hex
 
