commit 2f50afb7290b59f2852eb8692e50e639ba8b7abd
Author: Chris Jennings <chriskjennings@gmail.com>
Date:   Mon Apr 30 16:28:28 2018 -0700

    fix(ui): native text styles in panels (#8253)
    
    * Better default styles for native text elements in panelBody
    
    * Convert Security headers pages to use native text elements
    
    * Use getDynamicText to get rid of random span tag
    
    * Add support for .section and .highlight-* in docs
    
    * Use space for panelBody padding

diff --git a/src/sentry/static/sentry/app/components/autoSelectText.jsx b/src/sentry/static/sentry/app/components/autoSelectText.jsx
index 7a95940845..a3cc0fe721 100644
--- a/src/sentry/static/sentry/app/components/autoSelectText.jsx
+++ b/src/sentry/static/sentry/app/components/autoSelectText.jsx
@@ -37,7 +37,12 @@ class AutoSelectText extends React.Component {
     }
 
     return (
-      <div {...props} ref={this.handleMount} onClick={this.selectText}>
+      <div
+        {...props}
+        ref={this.handleMount}
+        onClick={this.selectText}
+        className="auto-select-text"
+      >
         {children}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/panels/panelBody.jsx b/src/sentry/static/sentry/app/components/panels/panelBody.jsx
index 98144c6a09..119f1d2eff 100644
--- a/src/sentry/static/sentry/app/components/panels/panelBody.jsx
+++ b/src/sentry/static/sentry/app/components/panels/panelBody.jsx
@@ -1,18 +1,23 @@
 import {Flex} from 'grid-emotion';
-import {css} from 'react-emotion';
+import {css, cx} from 'react-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import space from 'app/styles/space';
+import textStyles from 'app/styles/text';
+
 const PanelBody = ({disablePadding, flex, direction, ...props}) => {
   let padding = !disablePadding
     ? css`
-        padding: 20px;
+        padding: ${space(2)};
       `
     : '';
   let flexDirection = flex ? direction : undefined;
   let Comp = flex ? Flex : 'div';
 
-  return <Comp className={padding} {...props} direction={flexDirection} />;
+  return (
+    <Comp className={cx(padding, textStyles)} {...props} direction={flexDirection} />
+  );
 };
 
 PanelBody.propTypes = {
diff --git a/src/sentry/static/sentry/app/components/text.jsx b/src/sentry/static/sentry/app/components/text.jsx
index 5018c06dae..a0bafe96f2 100644
--- a/src/sentry/static/sentry/app/components/text.jsx
+++ b/src/sentry/static/sentry/app/components/text.jsx
@@ -1,62 +1,8 @@
 import styled from 'react-emotion';
+import textStyles from '../styles/text';
 
 const Text = styled.div`
-  h1,
-  h2,
-  h3,
-  h4,
-  h5,
-  h6 {
-    line-height: 1.2;
-  }
-
-  p,
-  ul,
-  ol,
-  blockquote {
-    line-height: 1.5;
-  }
-
-  h1 {
-    font-size: 2em;
-  }
-
-  h2 {
-    font-size: 1.75em;
-  }
-
-  h3 {
-    font-size: 1.5em;
-  }
-
-  h4 {
-    font-size: 1.25em;
-  }
-
-  h5 {
-    font-size: 1em;
-  }
-
-  h1,
-  h2,
-  h3,
-  h4,
-  h5,
-  h6,
-  p,
-  ul,
-  ol,
-  table,
-  dl,
-  blockquote,
-  form,
-  pre {
-    margin-bottom: 20px;
-
-    &:last-child {
-      margin-bottom: 0;
-    }
-  }
+  ${textStyles};
 `;
 
 export default Text;
diff --git a/src/sentry/static/sentry/app/styles/text.jsx b/src/sentry/static/sentry/app/styles/text.jsx
new file mode 100644
index 0000000000..b61e6d2415
--- /dev/null
+++ b/src/sentry/static/sentry/app/styles/text.jsx
@@ -0,0 +1,74 @@
+import {css} from 'react-emotion';
+
+const textStyles = props => {
+  return css`
+    /* stylelint-disable no-descending-specificity */
+    h1,
+    h2,
+    h3,
+    h4,
+    h5,
+    h6,
+    p,
+    ul,
+    ol,
+    table,
+    dl,
+    blockquote,
+    form,
+    pre,
+    .auto-select-text,
+    .section,
+    [class^='highlight-'] {
+      margin-bottom: 20px;
+
+      &:last-child {
+        margin-bottom: 0;
+      }
+    }
+
+    h1,
+    h2,
+    h3,
+    h4,
+    h5,
+    h6 {
+      line-height: 1.2;
+    }
+
+    p,
+    ul,
+    ol,
+    blockquote {
+      line-height: 1.5;
+    }
+
+    h1 {
+      font-size: 2em;
+    }
+
+    h2 {
+      font-size: 1.75em;
+    }
+
+    h3 {
+      font-size: 1.5em;
+    }
+
+    h4 {
+      font-size: 1.25em;
+    }
+
+    h5 {
+      font-size: 1em;
+    }
+
+    pre {
+      word-break: break-all;
+      white-space: pre-wrap;
+    }
+    /* stylelint-enable */
+  `;
+};
+
+export default textStyles;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
index 58ac9c9615..3bce873a3a 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
@@ -24,7 +24,7 @@ const getPadding = props => {
   if (typeof props.p !== 'undefined') {
     return `padding: ${props.p};`;
   }
-  return `padding: ${space(2)} ${props.hasControlState ? 0 : space(1)} ${space(
+  return `padding: ${space(2)} ${props.hasControlState ? 0 : space(2)} ${space(
     2
   )} ${space(2)}`;
 };
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx b/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx
index 1c97c50ab3..93e6937334 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx
@@ -1,6 +1,5 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import styled from 'react-emotion';
 
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {t, tct} from 'app/locale';
@@ -9,26 +8,16 @@ import AutoSelectText from 'app/components/autoSelectText';
 import Button from 'app/components/buttons/button';
 import Confirm from 'app/components/confirm';
 import DynamicWrapper from 'app/components/dynamicWrapper';
+import getDynamicText from 'app/utils/getDynamicText';
 import Field from 'app/views/settings/components/forms/field';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import PluginList from 'app/components/pluginList';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
 import TextCopyInput from 'app/views/settings/components/forms/textCopyInput';
 import withPlugins from 'app/utils/withPlugins';
 
-const noMargin = {margin: 0};
-const marginTop = {marginTop: 30};
-
-const PreWrap = styled.pre`
-  pre& {
-    word-break: break-all;
-    white-space: pre-wrap;
-  }
-`;
-
 class ProjectReleaseTracking extends AsyncView {
   static propTypes = {
     organization: PropTypes.object,
@@ -109,38 +98,39 @@ class ProjectReleaseTracking extends AsyncView {
 
     let {token, webhookUrl} = this.state.data;
 
+    token = getDynamicText({value: token, fixed: '__TOKEN__'});
+    webhookUrl = getDynamicText({value: webhookUrl, fixed: '__WEBHOOK_URL__'});
+
     return (
       <div>
         <SettingsPageHeader title={t('Release Tracking')} />
-        <TextBlock>
+        <p>
           {t(
             'Configure release tracking for this project to automatically record new releases of your application.'
           )}
-        </TextBlock>
+        </p>
 
         <Panel>
           <PanelHeader>{t('Client Configuration')}</PanelHeader>
           <PanelBody disablePadding={false} flex>
-            <TextBlock css={noMargin}>
+            <p>
               {tct('Start by binding the [release] attribute in your application', {
                 release: <code>release</code>,
               })}
-            </TextBlock>
+            </p>
             <AutoSelectText>
-              <PreWrap style={noMargin}>
-                {this.getReleaseClientConfigurationIntructions()}
-              </PreWrap>
+              <pre>{this.getReleaseClientConfigurationIntructions()}</pre>
             </AutoSelectText>
-            <TextBlock css={marginTop}>
+            <p>
               {t(
                 "This will annotate each event with the version of your application, as well as automatically create a release entity in the system the first time it's seen."
               )}
-            </TextBlock>
-            <TextBlock css={noMargin}>
+            </p>
+            <p>
               {t(
                 'In addition you may configure a release hook (or use our API) to push a release and include additional metadata with it.'
               )}
-            </TextBlock>
+            </p>
           </PanelBody>
         </Panel>
 
@@ -151,10 +141,7 @@ class ProjectReleaseTracking extends AsyncView {
               label={t('Token')}
               help={t('A unique secret which is used to generate deploy hook URLs')}
             >
-              <DynamicWrapper
-                value={<TextCopyInput>{token}</TextCopyInput>}
-                fixed="__TOKEN__"
-              />
+              <TextCopyInput>{token}</TextCopyInput>
             </Field>
             <Field
               label={t('Regenerate Token')}
@@ -182,42 +169,35 @@ class ProjectReleaseTracking extends AsyncView {
         <Panel>
           <PanelHeader>{t('Webhook')}</PanelHeader>
           <PanelBody disablePadding={false} flex>
-            <TextBlock css={noMargin}>
+            <p>
               {t(
                 'If you simply want to integrate with an existing system, sometimes its easiest just to use a webhook.'
               )}
-            </TextBlock>
+            </p>
 
-            <DynamicWrapper
-              value={
-                <AutoSelectText>
-                  <PreWrap>{webhookUrl}</PreWrap>
-                </AutoSelectText>
-              }
-              fixed={<PreWrap>__WEBHOOK_URL__</PreWrap>}
-            />
+            <AutoSelectText>
+              <pre>{webhookUrl}</pre>
+            </AutoSelectText>
 
-            <TextBlock css={noMargin}>
+            <p>
               {t(
                 'The release webhook accepts the same parameters as the "Create a new Release" API endpoint.'
               )}
-            </TextBlock>
+            </p>
 
             <DynamicWrapper
               value={
                 <AutoSelectText>
-                  <PreWrap style={noMargin}>
-                    {this.getReleaseWebhookIntructions()}
-                  </PreWrap>
+                  <pre>{this.getReleaseWebhookIntructions()}</pre>
                 </AutoSelectText>
               }
               fixed={
-                <PreWrap style={noMargin}>
+                <pre>
                   {`curl __WEBHOOK_URL__ \\
   -X POST \\
   -H 'Content-Type: application/json' \\
   -d \'{"version": "abcdefg"}\'`}
-                </PreWrap>
+                </pre>
               }
             />
           </PanelBody>
@@ -232,17 +212,17 @@ class ProjectReleaseTracking extends AsyncView {
         <Panel>
           <PanelHeader>{t('API')}</PanelHeader>
           <PanelBody disablePadding={false} flex>
-            <TextBlock>
+            <p>
               {t(
                 'You can notify Sentry when you release new versions of your application via our HTTP API.'
               )}
-            </TextBlock>
+            </p>
 
-            <TextBlock css={noMargin}>
+            <p>
               {tct('See the [link:Releases API documentation] for more information.', {
                 link: <a href="https://docs.sentry.io/hosted/api/releases/" />,
               })}
-            </TextBlock>
+            </p>
           </PanelBody>
         </Panel>
       </div>
diff --git a/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/csp.jsx b/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/csp.jsx
index c3fbfa1de4..3068ffb21a 100644
--- a/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/csp.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/csp.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import styled from 'react-emotion';
 
 import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
@@ -13,14 +12,8 @@ import ReportUri, {
 } from 'app/views/settings/projectSecurityHeaders/reportUri';
 import PreviewFeature from 'app/components/previewFeature';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
 import formGroups from 'app/data/forms/cspReports';
 
-const CodeBlock = styled.pre`
-  word-break: break-all;
-  white-space: pre-wrap;
-`;
-
 export default class ProjectCspReports extends AsyncView {
   static propTypes = {
     setProjectNavSection: PropTypes.func,
@@ -90,7 +83,7 @@ export default class ProjectCspReports extends AsyncView {
           <PanelHeader>{t('About')}</PanelHeader>
 
           <PanelBody disablePadding={false}>
-            <TextBlock>
+            <p>
               {tct(
                 `[link:Content Security Policy]
             (CSP) is a security standard which helps prevent cross-site scripting (XSS),
@@ -104,9 +97,9 @@ export default class ProjectCspReports extends AsyncView {
                   ),
                 }
               )}
-            </TextBlock>
+            </p>
 
-            <TextBlock>
+            <p>
               {tct(
                 `To configure [csp:CSP] reports
               in Sentry, you'll need to send a header from your server describing your
@@ -115,22 +108,22 @@ export default class ProjectCspReports extends AsyncView {
                   csp: <acronym title="Content Security Policy" />,
                 }
               )}
-            </TextBlock>
+            </p>
 
-            <TextBlock noMargin>
+            <p>
               {t(
                 'For example, in Python you might achieve this via a simple web middleware'
               )}
-            </TextBlock>
-            <CodeBlock>{this.getInstructions()}</CodeBlock>
+            </p>
+            <pre>{this.getInstructions()}</pre>
 
-            <TextBlock noMargin>
+            <p>
               {t(`Alternatively you can setup CSP reports to simply send reports rather than
               actually enforcing the policy`)}
-            </TextBlock>
-            <CodeBlock>{this.getReportOnlyInstructions()}</CodeBlock>
+            </p>
+            <pre>{this.getReportOnlyInstructions()}</pre>
 
-            <TextBlock noMargin css={{marginTop: 30}}>
+            <p>
               {tct(
                 `We recommend setting this up to only run on a percentage of requests, as
               otherwise you may find that you've quickly exhausted your quota. For more
@@ -141,7 +134,7 @@ export default class ProjectCspReports extends AsyncView {
                   ),
                 }
               )}
-            </TextBlock>
+            </p>
           </PanelBody>
         </Panel>
       </div>
diff --git a/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/expectCt.jsx b/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/expectCt.jsx
index 24094a8864..d657516709 100644
--- a/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/expectCt.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/expectCt.jsx
@@ -1,6 +1,5 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import styled from 'react-emotion';
 
 import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
@@ -11,12 +10,6 @@ import ReportUri, {
   getSecurityDsn,
 } from 'app/views/settings/projectSecurityHeaders/reportUri';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
-
-const CodeBlock = styled.pre`
-  word-break: break-all;
-  white-space: pre-wrap;
-`;
 
 export default class ProjectExpectCtReports extends AsyncView {
   static propTypes = {
@@ -49,7 +42,7 @@ export default class ProjectExpectCtReports extends AsyncView {
         <Panel>
           <PanelHeader>{'About'}</PanelHeader>
           <PanelBody disablePadding={false}>
-            <TextBlock>
+            <p>
               {tct(
                 `[link:Certificate Transparency]
       (CT) is a security standard which helps track and identify valid certificates, allowing identification of maliciously issued certificates`,
@@ -59,25 +52,25 @@ export default class ProjectExpectCtReports extends AsyncView {
                   ),
                 }
               )}
-            </TextBlock>
-            <TextBlock>
+            </p>
+            <p>
               {tct(
                 "To configure reports in Sentry, you'll need to configure the [header] a header from your server:",
                 {
                   header: <code>Expect-CT</code>,
                 }
               )}
-            </TextBlock>
+            </p>
 
-            <CodeBlock>{this.getInstructions()}</CodeBlock>
+            <pre>{this.getInstructions()}</pre>
 
-            <TextBlock noMargin>
+            <p>
               {tct('For more information, see [link:the article on MDN].', {
                 link: (
                   <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT" />
                 ),
               })}
-            </TextBlock>
+            </p>
           </PanelBody>
         </Panel>
       </div>
diff --git a/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/hpkp.jsx b/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/hpkp.jsx
index 460299664b..b133ee16eb 100644
--- a/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/hpkp.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectSecurityHeaders/hpkp.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import styled from 'react-emotion';
 
 import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
@@ -11,12 +10,6 @@ import ReportUri, {
 } from 'app/views/settings/projectSecurityHeaders/reportUri';
 import PreviewFeature from 'app/components/previewFeature';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
-
-const CodeBlock = styled.pre`
-  word-break: break-all;
-  white-space: pre-wrap;
-`;
 
 export default class ProjectHpkpReports extends AsyncView {
   static propTypes = {
@@ -73,7 +66,7 @@ export default class ProjectHpkpReports extends AsyncView {
           <PanelHeader>{t('About')}</PanelHeader>
 
           <PanelBody disablePadding={false}>
-            <TextBlock>
+            <p>
               {tct(
                 `[link:HTTP Public Key Pinning]
               (HPKP) is a security feature that tells a web client to associate a specific
@@ -86,30 +79,30 @@ export default class ProjectHpkpReports extends AsyncView {
                   ),
                 }
               )}
-            </TextBlock>
+            </p>
 
-            <TextBlock>
+            <p>
               {t(
                 `To configure HPKP reports
               in Sentry, you'll need to send a header from your server describing your
               policy, as well specifying the authenticated Sentry endpoint.`
               )}
-            </TextBlock>
+            </p>
 
-            <TextBlock noMargin>
+            <p>
               {t(
                 'For example, in Python you might achieve this via a simple web middleware'
               )}
-            </TextBlock>
-            <CodeBlock>{this.getInstructions()}</CodeBlock>
+            </p>
+            <pre>{this.getInstructions()}</pre>
 
-            <TextBlock noMargin>
+            <p>
               {t(`Alternatively you can setup HPKP reports to simply send reports rather than
               actually enforcing the policy`)}
-            </TextBlock>
-            <CodeBlock>{this.getReportOnlyInstructions()}</CodeBlock>
+            </p>
+            <pre>{this.getReportOnlyInstructions()}</pre>
 
-            <TextBlock noMargin css={{marginTop: 30}}>
+            <p>
               {tct(
                 `We recommend setting this up to only run on a percentage of requests, as
               otherwise you may find that you've quickly exhausted your quota. For more
@@ -120,7 +113,7 @@ export default class ProjectHpkpReports extends AsyncView {
                   ),
                 }
               )}
-            </TextBlock>
+            </p>
           </PanelBody>
         </Panel>
       </div>
diff --git a/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap b/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
index 3b3e89fde2..a3756c0ef6 100644
--- a/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
@@ -135,7 +135,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                   flex={false}
                 >
                   <div
-                    className=""
+                    className="css-9vq8an-textStyles"
                   >
                     <PanelItem
                       align="center"
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
index 92a0b3d50e..b93e1aa602 100644
--- a/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
@@ -402,7 +402,7 @@ exports[`OrganizationApiKeysList renders 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <PanelItem
                 align="center"
diff --git a/tests/js/spec/views/__snapshots__/organizationIntegrationConfig.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationIntegrationConfig.spec.jsx.snap
index b3fd75b865..9fea02303a 100644
--- a/tests/js/spec/views/__snapshots__/organizationIntegrationConfig.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationIntegrationConfig.spec.jsx.snap
@@ -214,7 +214,7 @@ exports[`OrganizationIntegrationConfig render() with one integration renders 1`]
               flex={false}
             >
               <div
-                className=""
+                className="css-9vq8an-textStyles"
               >
                 <PanelItem
                   key="1"
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index ef4d562906..2416959c60 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -225,7 +225,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
           flex={false}
         >
           <div
-            className=""
+            className="css-9vq8an-textStyles"
           >
             <StyledPanelItem
               key="2"
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap
index 9445a3ebb3..6585ae3640 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamsProjects.spec.jsx.snap
@@ -136,7 +136,7 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                     flex={false}
                   >
                     <div
-                      className=""
+                      className="css-9vq8an-textStyles"
                     >
                       <PanelItem
                         align="center"
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index 6984a13f37..9544deafb0 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -228,7 +228,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                   flex={false}
                 >
                   <div
-                    className="css-1pugmsu-padding"
+                    className="css-zhfi4l-padding-textStyles"
                   >
                     <h6>
                       Rule name
@@ -1332,7 +1332,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                   flex={false}
                 >
                   <div
-                    className="css-1pugmsu-padding"
+                    className="css-zhfi4l-padding-textStyles"
                   >
                     <h6>
                       Rule name
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
index e90b8baf56..a0bc601fc9 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
@@ -622,7 +622,7 @@ exports[`projectAlertRules renders 1`] = `
                   flex={false}
                 >
                   <div
-                    className=""
+                    className="css-9vq8an-textStyles"
                   >
                     <RuleDescriptionRow>
                       <div
diff --git a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
index 44cb4f460b..1da4ae8633 100644
--- a/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectDebugSymbols.spec.jsx.snap
@@ -124,7 +124,7 @@ exports[`ProjectDebugSymbols renders 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <PanelItem
                 direction="column"
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index 4f7f4ad07e..cd4d101684 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -196,7 +196,7 @@ exports[`ProjectEnvironments render active renders empty message 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <EmptyMessage>
                 <Wrapper>
@@ -416,7 +416,7 @@ exports[`ProjectEnvironments render active renders environment list and sets sta
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <EnvironmentRow
                 environment={
@@ -1091,7 +1091,7 @@ exports[`ProjectEnvironments render hidden renders empty message 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <EmptyMessage>
                 <Wrapper>
@@ -1311,7 +1311,7 @@ exports[`ProjectEnvironments render hidden renders environment list 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <EnvironmentRow
                 actionText="Show"
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index 5037ceb34b..9c3c500272 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -460,21 +460,21 @@ exports[`ProjectPluginDetails renders 1`] = `
                         wrap="wrap"
                       >
                         <Flex
-                          className=""
+                          className="css-9vq8an-textStyles"
                           direction="column"
                           pt={2}
                           px={2}
                           wrap="wrap"
                         >
                           <Base
-                            className="css-1amiuv8"
+                            className="css-eaujjw-textStyles"
                             direction="column"
                             pt={2}
                             px={2}
                             wrap="wrap"
                           >
                             <div
-                              className="css-1amiuv8"
+                              className="css-eaujjw-textStyles"
                               is={null}
                             >
                               <div
diff --git a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
index b20ac12aed..5e5e6b2535 100644
--- a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
@@ -184,7 +184,7 @@ exports[`ProjectSavedSearches renders 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <SavedSearchRow
                 access={
@@ -949,7 +949,7 @@ exports[`ProjectSavedSearches renders empty 1`] = `
             flex={false}
           >
             <div
-              className=""
+              className="css-9vq8an-textStyles"
             >
               <EmptyStateWarning>
                 <EmptyStreamWrapper
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index a1a216ad26..4584a99cd5 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -152,7 +152,7 @@ exports[`ProjectTags renders 1`] = `
                 flex={false}
               >
                 <div
-                  className=""
+                  className="css-9vq8an-textStyles"
                 >
                   <PanelItem
                     align="center"
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index 9d9817ef89..d8e47e6ee3 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -172,7 +172,7 @@ exports[`CreateProject render() should render roles when available and allowed,
                 flex={false}
               >
                 <div
-                  className=""
+                  className="css-9vq8an-textStyles"
                 >
                   <PanelItem
                     className="css-0"
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
index 8ba15493c4..5bc67cc754 100644
--- a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -330,7 +330,7 @@ exports[`Configure should render correctly render() should render platform docs
                                 flex={false}
                               >
                                 <div
-                                  className="css-1pugmsu-padding"
+                                  className="css-zhfi4l-padding-textStyles"
                                 >
                                   <TextBlock>
                                     <Component
diff --git a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap
index de0bfa0c7f..c57b32a5db 100644
--- a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap
+++ b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectCspReports.spec.jsx.snap
@@ -73,7 +73,7 @@ exports[`ProjectCspReports renders 1`] = `
         disablePadding={false}
         flex={false}
       >
-        <TextBlock>
+        <p>
           <span
             key="4"
           >
@@ -100,8 +100,8 @@ exports[`ProjectCspReports renders 1`] = `
             reporting hooks.
             </span>
           </span>
-        </TextBlock>
-        <TextBlock>
+        </p>
+        <p>
           <span
             key="5"
           >
@@ -128,13 +128,11 @@ exports[`ProjectCspReports renders 1`] = `
               policy, as well specifying the authenticated Sentry endpoint.
             </span>
           </span>
-        </TextBlock>
-        <TextBlock
-          noMargin={true}
-        >
+        </p>
+        <p>
           For example, in Python you might achieve this via a simple web middleware
-        </TextBlock>
-        <CodeBlock>
+        </p>
+        <pre>
           def middleware(request, response):
     response['Content-Security-Policy'] = \\
         "default-src *; " \\
@@ -144,25 +142,20 @@ exports[`ProjectCspReports renders 1`] = `
         "report-uri https://sentry.example.com/api/security-report/"
     return response
 
-        </CodeBlock>
-        <TextBlock
-          noMargin={true}
-        >
+        </pre>
+        <p>
           Alternatively you can setup CSP reports to simply send reports rather than
               actually enforcing the policy
-        </TextBlock>
-        <CodeBlock>
+        </p>
+        <pre>
           def middleware(request, response):
     response['Content-Security-Policy-Report-Only'] = \\
         "default-src 'self'; " \\
         "report-uri https://sentry.example.com/api/security-report/"
     return response
 
-        </CodeBlock>
-        <TextBlock
-          className="css-46b038"
-          noMargin={true}
-        >
+        </pre>
+        <p>
           <span
             key="5"
           >
@@ -189,7 +182,7 @@ exports[`ProjectCspReports renders 1`] = `
               .
             </span>
           </span>
-        </TextBlock>
+        </p>
       </PanelBody>
     </Panel>
   </div>
diff --git a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectExpectCtReports.spec.jsx.snap b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectExpectCtReports.spec.jsx.snap
index d511767733..189c3b1239 100644
--- a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectExpectCtReports.spec.jsx.snap
+++ b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectExpectCtReports.spec.jsx.snap
@@ -27,7 +27,7 @@ exports[`ProjectExpectCtReports renders 1`] = `
         disablePadding={false}
         flex={false}
       >
-        <TextBlock>
+        <p>
           <span
             key="4"
           >
@@ -50,8 +50,8 @@ exports[`ProjectExpectCtReports renders 1`] = `
       (CT) is a security standard which helps track and identify valid certificates, allowing identification of maliciously issued certificates
             </span>
           </span>
-        </TextBlock>
-        <TextBlock>
+        </p>
+        <p>
           <span
             key="4"
           >
@@ -71,13 +71,11 @@ exports[`ProjectExpectCtReports renders 1`] = `
                a header from your server:
             </span>
           </span>
-        </TextBlock>
-        <CodeBlock>
+        </p>
+        <pre>
           Expect-CT: report-uri="https://sentry.example.com/api/security-report/"
-        </CodeBlock>
-        <TextBlock
-          noMargin={true}
-        >
+        </pre>
+        <p>
           <span
             key="5"
           >
@@ -102,7 +100,7 @@ exports[`ProjectExpectCtReports renders 1`] = `
               .
             </span>
           </span>
-        </TextBlock>
+        </p>
       </PanelBody>
     </Panel>
   </div>
diff --git a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectHpkpReports.spec.jsx.snap b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectHpkpReports.spec.jsx.snap
index a03d8b7e9d..5b68020fbb 100644
--- a/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectHpkpReports.spec.jsx.snap
+++ b/tests/js/spec/views/projectSecurityHeaders/__snapshots__/projectHpkpReports.spec.jsx.snap
@@ -27,7 +27,7 @@ exports[`ProjectHpkpReports renders 1`] = `
         disablePadding={false}
         flex={false}
       >
-        <TextBlock>
+        <p>
           <span
             key="4"
           >
@@ -53,18 +53,16 @@ exports[`ProjectHpkpReports renders 1`] = `
               supports capturing violations using the standard reporting hooks.
             </span>
           </span>
-        </TextBlock>
-        <TextBlock>
+        </p>
+        <p>
           To configure HPKP reports
               in Sentry, you'll need to send a header from your server describing your
               policy, as well specifying the authenticated Sentry endpoint.
-        </TextBlock>
-        <TextBlock
-          noMargin={true}
-        >
+        </p>
+        <p>
           For example, in Python you might achieve this via a simple web middleware
-        </TextBlock>
-        <CodeBlock>
+        </p>
+        <pre>
           def middleware(request, response):
     response['Public-Key-Pins'] = \\
         'pin-sha256="cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs="; ' \\
@@ -73,14 +71,12 @@ exports[`ProjectHpkpReports renders 1`] = `
         'report-uri="https://sentry.example.com/api/security-report/"' 
     return response
 
-        </CodeBlock>
-        <TextBlock
-          noMargin={true}
-        >
+        </pre>
+        <p>
           Alternatively you can setup HPKP reports to simply send reports rather than
               actually enforcing the policy
-        </TextBlock>
-        <CodeBlock>
+        </p>
+        <pre>
           def middleware(request, response):
     response['Public-Key-Pins-Report-Only'] = \\
         'pin-sha256="cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs="; ' \\
@@ -89,11 +85,8 @@ exports[`ProjectHpkpReports renders 1`] = `
         'report-uri="https://sentry.example.com/api/security-report/"' 
     return response
 
-        </CodeBlock>
-        <TextBlock
-          className="css-46b038"
-          noMargin={true}
-        >
+        </pre>
+        <p>
           <span
             key="5"
           >
@@ -120,7 +113,7 @@ exports[`ProjectHpkpReports renders 1`] = `
               .
             </span>
           </span>
-        </TextBlock>
+        </p>
       </PanelBody>
     </Panel>
   </div>
diff --git a/tests/sentry/web/frontend/test_account_identity.py b/tests/sentry/web/frontend/test_account_identity.py
index f0c7343db0..44f520da07 100644
--- a/tests/sentry/web/frontend/test_account_identity.py
+++ b/tests/sentry/web/frontend/test_account_identity.py
@@ -28,7 +28,12 @@ class AccountIdentityTest(TestCase):
 
         self.login_as(user)
 
-        path = reverse('sentry-account-associate-identity', args=[organization.slug, 'dummy', '1234'])
+        path = reverse(
+            'sentry-account-associate-identity',
+            args=[
+                organization.slug,
+                'dummy',
+                '1234'])
         resp = self.client.get(path)
 
         assert resp.status_code == 200
