commit 890309d892c908686a8a36a02eb61a98e2bd6b96
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Nov 22 10:38:11 2016 -0800

    metrics: remove fake sampling for datadog (#4584)
    
    This is erronously 10x'ing all metrics before calls aren't actually
    being sampled, but we treat values as if they are.

diff --git a/src/sentry/metrics/datadog.py b/src/sentry/metrics/datadog.py
index 7e296d681f..e1601a4146 100644
--- a/src/sentry/metrics/datadog.py
+++ b/src/sentry/metrics/datadog.py
@@ -10,13 +10,6 @@ from sentry.utils.cache import memoize
 from .base import MetricsBackend
 
 
-# XXX(dcramer): copied from sentry.utils.metrics
-def _sampled_value(value, sample_rate):
-    if sample_rate < 1:
-        value = int(value * (1.0 / sample_rate))
-    return value
-
-
 class DatadogMetricsBackend(MetricsBackend):
     def __init__(self, prefix=None, **kwargs):
         # TODO(dcramer): it'd be nice if the initialize call wasn't a global
@@ -50,9 +43,8 @@ class DatadogMetricsBackend(MetricsBackend):
             tags['instance'] = instance
         if tags:
             tags = ['{}:{}'.format(*i) for i in tags.items()]
-        # datadog does not implement sampling here
-        amount = _sampled_value(amount, sample_rate)
         self.stats.increment(self._get_key(key), amount,
+                             sample_rate=sample_rate,
                              tags=tags,
                              host=self.host)
 
diff --git a/tests/sentry/metrics/test_datadog.py b/tests/sentry/metrics/test_datadog.py
index e45a1afd04..885ea724e3 100644
--- a/tests/sentry/metrics/test_datadog.py
+++ b/tests/sentry/metrics/test_datadog.py
@@ -17,6 +17,7 @@ class DatadogMetricsBackendTest(TestCase):
         self.backend.incr('foo', instance='bar')
         mock_incr.assert_called_once_with(
             'sentrytest.foo', 1,
+            sample_rate=1,
             tags=['instance:bar'],
             host=get_hostname(),
         )
