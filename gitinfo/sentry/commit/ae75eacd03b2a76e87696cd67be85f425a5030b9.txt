commit ae75eacd03b2a76e87696cd67be85f425a5030b9
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 15 21:33:47 2014 -0700

    Add broadcast list endpoint

diff --git a/src/sentry/api/endpoints/broadcast_index.py b/src/sentry/api/endpoints/broadcast_index.py
new file mode 100644
index 0000000000..35ae4cbda8
--- /dev/null
+++ b/src/sentry/api/endpoints/broadcast_index.py
@@ -0,0 +1,12 @@
+from rest_framework.response import Response
+
+from sentry.api.base import Endpoint
+from sentry.api.serializers import serialize
+from sentry.models import Broadcast
+
+
+class BroadcastIndexEndpoint(Endpoint):
+    def get(self, request):
+        broadcasts = list(Broadcast.objects.filter(is_active=True))
+
+        return Response(serialize(broadcasts, request.user))
diff --git a/src/sentry/api/serializers/models/broadcast.py b/src/sentry/api/serializers/models/broadcast.py
new file mode 100644
index 0000000000..b0f84e94cf
--- /dev/null
+++ b/src/sentry/api/serializers/models/broadcast.py
@@ -0,0 +1,14 @@
+from sentry.api.serializers import Serializer, register
+from sentry.models import Broadcast
+
+
+@register(Broadcast)
+class BroadcastSerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        return {
+            'id': str(obj.id),
+            'message': obj.message,
+            'badge': obj.badge,
+            'isActive': obj.is_active,
+            'dateCreated': obj.date_added,
+        }
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index e40f855e80..de3fe00c02 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from django.conf.urls import patterns, url
 
 from .endpoints.auth_index import AuthIndexEndpoint
+from .endpoints.broadcast_index import BroadcastIndexEndpoint
 from .endpoints.catchall import CatchallEndpoint
 from .endpoints.event_details import EventDetailsEndpoint
 from .endpoints.group_assign import GroupAssignEndpoint
@@ -40,6 +41,11 @@ urlpatterns = patterns(
         AuthIndexEndpoint.as_view(),
         name='sentry-api-0-auth'),
 
+    # Broadcasts
+    url(r'^broadcasts/$',
+        BroadcastIndexEndpoint.as_view(),
+        name='sentry-api-0-broadcast-index'),
+
     # Users
     url(r'^users/(?P<user_id>[^\/]+)/$',
         UserDetailsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_broadcast_index.py b/tests/sentry/api/endpoints/test_broadcast_index.py
new file mode 100644
index 0000000000..add8194f79
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_broadcast_index.py
@@ -0,0 +1,17 @@
+from django.core.urlresolvers import reverse
+
+from sentry.models import Broadcast
+from sentry.testutils import APITestCase
+
+
+class BroadcastIndexTest(APITestCase):
+    def test_simple(self):
+        broadcast1 = Broadcast.objects.create(message='bar', is_active=True)
+        broadcast2 = Broadcast.objects.create(message='foo', is_active=False)
+
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-broadcast-index')
+        response = self.client.get(url)
+        assert response.status_code == 200
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == str(broadcast1.id)
