commit b9f60c9086e17eb2ad00e672fb51e8243080181b
Author: Danny Lee <dlee@sentry.io>
Date:   Thu Aug 29 09:52:09 2019 -0700

     fix(ui): Fix Pill component creating bad links to Issues and Releases (#14524)
    
    - Extended TS typing for `Group`
    - Converted `Pills` and `Pill` component to TS
    - Fixed CSS issues reported by @jmanhart (Screenshots on PR: #14524)
      - Background is light green/red on positive/negative state
      - yes/no hides if there is a child ReactNode
    
    
    Ref SEN-936

diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 8dc649f045..ca6b8d2e4b 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -158,6 +158,7 @@ class EventEntries extends React.Component {
       event,
       orgId,
       showExampleCommit,
+      location,
     } = this.props;
 
     const features = organization ? new Set(organization.features) : new Set();
@@ -200,6 +201,7 @@ class EventEntries extends React.Component {
           event={event}
           orgId={orgId}
           projectId={project.slug}
+          location={location}
         />
         {this.renderEntries()}
         {hasContext && <EventContexts group={group} event={event} />}
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.jsx b/src/sentry/static/sentry/app/components/events/eventTags.jsx
deleted file mode 100644
index b6ac1ce26b..0000000000
--- a/src/sentry/static/sentry/app/components/events/eventTags.jsx
+++ /dev/null
@@ -1,100 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Link} from 'react-router';
-import _ from 'lodash';
-
-import SentryTypes from 'app/sentryTypes';
-
-import EventDataSection from 'app/components/events/eventDataSection';
-import DeviceName from 'app/components/deviceName';
-import {isUrl} from 'app/utils';
-import {t} from 'app/locale';
-import Pills from 'app/components/pills';
-import Pill from 'app/components/pill';
-import VersionHoverCard from 'app/components/versionHoverCard';
-import InlineSvg from 'app/components/inlineSvg';
-
-class EventTags extends React.Component {
-  static propTypes = {
-    group: SentryTypes.Group.isRequired,
-    event: SentryTypes.Event.isRequired,
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-    hideGuide: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    hideGuide: false,
-  };
-
-  render() {
-    const tags = this.props.event.tags;
-
-    if (_.isEmpty(tags)) {
-      return null;
-    }
-
-    const {event, group, orgId, projectId, hideGuide} = this.props;
-
-    const streamPath = `/organizations/${orgId}/issues/`;
-
-    const releasesPath = `/organizations/${orgId}/releases/`;
-
-    return (
-      <EventDataSection
-        group={group}
-        event={event}
-        title={t('Tags')}
-        type="tags"
-        className="p-b-1"
-        hideGuide={hideGuide}
-      >
-        <Pills className="no-margin">
-          {tags.map(tag => {
-            return (
-              <Pill key={tag.key} name={tag.key}>
-                <Link
-                  to={{
-                    pathname: streamPath,
-                    query: {
-                      query: `${tag.key}:"${tag.value}"`,
-                      project: group.project.id,
-                    },
-                  }}
-                >
-                  <DeviceName>{tag.value}</DeviceName>
-                </Link>
-                {isUrl(tag.value) && (
-                  <a href={tag.value} className="external-icon">
-                    <em className="icon-open" />
-                  </a>
-                )}
-                {tag.key === 'release' && (
-                  <VersionHoverCard
-                    containerClassName="pill-icon"
-                    version={tag.value}
-                    orgId={orgId}
-                    projectId={projectId}
-                  >
-                    <Link
-                      to={{
-                        pathname: `${releasesPath}${tag.value}/`,
-                        query: {
-                          project: group.project.id,
-                        },
-                      }}
-                    >
-                      <InlineSvg src="icon-circle-info" size="14px" />
-                    </Link>
-                  </VersionHoverCard>
-                )}
-              </Pill>
-            );
-          })}
-        </Pills>
-      </EventDataSection>
-    );
-  }
-}
-
-export default EventTags;
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags.tsx
new file mode 100644
index 0000000000..6ac2f96a5e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/eventTags.tsx
@@ -0,0 +1,114 @@
+import React from 'react';
+import {Link} from 'react-router';
+import _ from 'lodash';
+import queryString from 'query-string';
+
+import {Location} from 'history';
+import {Event, EventTag, Group} from 'app/types';
+
+import EventDataSection from 'app/components/events/eventDataSection';
+import DeviceName from 'app/components/deviceName';
+import {isUrl} from 'app/utils';
+import {t} from 'app/locale';
+import Pills from 'app/components/pills';
+import Pill from 'app/components/pill';
+import VersionHoverCard from 'app/components/versionHoverCard';
+import InlineSvg from 'app/components/inlineSvg';
+
+type EventTagsProps = {
+  group: Group;
+  event: Event;
+  orgId: string;
+  projectId: string;
+  hideGuide: boolean;
+
+  location: Location;
+};
+
+class EventTags extends React.Component<EventTagsProps> {
+  static defaultProps = {
+    hideGuide: false,
+  };
+
+  renderPill(tag: EventTag, streamPath: string, releasesPath: string) {
+    const {orgId, projectId, location} = this.props;
+    const query = {...location.query};
+
+    switch (tag.key) {
+      case 'environment':
+        query.environment = tag.value;
+        break;
+      case 'project':
+        query.project = tag.value;
+        break;
+      default:
+        query.query = `${query.query} ${tag.key}:${tag.value}`;
+    }
+
+    const locationSearch = `?${queryString.stringify(query)}`;
+
+    return (
+      <Pill key={tag.key} name={tag.key} value={tag.value}>
+        <Link
+          to={{
+            pathname: streamPath,
+            search: locationSearch,
+          }}
+        >
+          <DeviceName>{tag.value}</DeviceName>
+        </Link>
+        {isUrl(tag.value) && (
+          <a href={tag.value} className="external-icon">
+            <em className="icon-open" />
+          </a>
+        )}
+        {tag.key === 'release' && (
+          <VersionHoverCard
+            containerClassName="pill-icon"
+            version={tag.value}
+            orgId={orgId}
+            projectId={projectId}
+          >
+            <Link
+              to={{
+                pathname: `${releasesPath}${tag.value}/`,
+                search: locationSearch,
+              }}
+            >
+              <InlineSvg src="icon-circle-info" size="14px" />
+            </Link>
+          </VersionHoverCard>
+        )}
+      </Pill>
+    );
+  }
+
+  render() {
+    const {event, group, orgId, hideGuide} = this.props;
+    const {tags} = event;
+
+    if (_.isEmpty(tags)) {
+      return null;
+    }
+
+    const streamPath = `/organizations/${orgId}/issues/`;
+    const releasesPath = `/organizations/${orgId}/releases/`;
+
+    return (
+      <EventDataSection
+        group={group}
+        event={event}
+        title={t('Tags')}
+        type="tags"
+        className="p-b-1"
+        hideGuide={hideGuide}
+      >
+        <Pills className="no-margin">
+          {tags.map(tag => this.renderPill(tag, streamPath, releasesPath))}
+        </Pills>
+      </EventDataSection>
+    );
+  }
+}
+
+export default EventTags;
diff --git a/src/sentry/static/sentry/app/components/pill.jsx b/src/sentry/static/sentry/app/components/pill.jsx
deleted file mode 100644
index edb01cc0ff..0000000000
--- a/src/sentry/static/sentry/app/components/pill.jsx
+++ /dev/null
@@ -1,113 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from 'react-emotion';
-import space from 'app/styles/space';
-
-class Pill extends React.Component {
-  static propTypes = {
-    name: PropTypes.string,
-    value: PropTypes.any,
-  };
-
-  renderValue = () => {
-    const {value} = this.props;
-    if (value === undefined) {
-      return [null, null];
-    }
-    let extraClass = null;
-    let renderedValue;
-    if (value === true || value === false) {
-      extraClass = value ? 'true' : 'false';
-      renderedValue = value ? 'yes' : 'no';
-    } else if (value === null) {
-      extraClass = 'false';
-      renderedValue = 'n/a';
-    } else {
-      renderedValue = value.toString();
-    }
-    return [extraClass, renderedValue];
-  };
-
-  render() {
-    const {name, children, ...props} = this.props;
-    const [extraClass, renderedValue] = this.renderValue();
-    return (
-      <StyledPill {...props}>
-        <PillName>{name}</PillName>
-        <PillValue type={extraClass}>
-          {renderedValue}
-          {children}
-        </PillValue>
-      </StyledPill>
-    );
-  }
-}
-
-const StyledPill = styled('li')`
-  white-space: nowrap;
-  margin: 0 10px 10px 0;
-  display: flex;
-  border: 1px solid ${p => p.theme.gray1};
-  border-radius: ${p => p.theme.button.borderRadius};
-  box-shadow: ${p => p.theme.dropShadowLightest};
-  line-height: 1.2;
-  max-width: 100%;
-  &:last-child {
-    margin-right: 0;
-  }
-`;
-
-const PillName = styled('span')`
-  padding: ${space(0.5)} ${space(1)};
-  min-width: 0;
-  white-space: nowrap;
-`;
-
-const PillValue = styled(PillName)`
-  /* .true - good values */
-  ${p =>
-    p.type === 'true' &&
-    `
-    background: ${p.theme.greenLightest};
-    border: 1px solid ${p.theme.green};
-    margin: -1px;
-  `}
-
-  /* .false - error values */
-  ${p =>
-    p.type === 'false' &&
-    `
-    background: ${p.theme.redLightest};
-    border: 1px solid ${p.theme.red};
-    margin: -1px;
-  `}
-
-  background: ${p => p.theme.whiteDark};
-  border-left: 1px solid ${p => p.theme.gray1};
-  border-radius: 0 ${p => p.theme.button.borderRadius} ${p =>
-  p.theme.button.borderRadius} 0;
-  font-family: ${p => p.theme.text.familyMono};
-  max-width: 100%;
-
-  > a {
-    max-width: 100%;
-    text-overflow: ellipsis;
-    overflow: hidden;
-    white-space: nowrap;
-    display: inline-block;
-    vertical-align: text-bottom;
-  }
-
-  .pill-icon,
-  .external-icon {
-    display: inline;
-    margin: 0 0 0 ${space(1)};
-    color: ${p => p.theme.gray2};
-    line-height: 1.2;
-    &:hover {
-      color: ${p => p.theme.gray4};
-    }
-  }
-`;
-
-export default Pill;
diff --git a/src/sentry/static/sentry/app/components/pill.tsx b/src/sentry/static/sentry/app/components/pill.tsx
new file mode 100644
index 0000000000..a6412daeba
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/pill.tsx
@@ -0,0 +1,129 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+import space from 'app/styles/space';
+
+type PillProps = {
+  name: string;
+  value: string | boolean | undefined | null;
+};
+
+class Pill extends React.PureComponent<PillProps> {
+  getRenderTypeAndValue = () => {
+    const {value} = this.props;
+    if (value === undefined) {
+      return {};
+    }
+
+    let type: PillValueProps['type'];
+    let renderValue: string | undefined;
+
+    switch (value) {
+      case 'true':
+      case true:
+        type = 'positive';
+        renderValue = 'yes';
+        break;
+      case 'false':
+      case false:
+        type = 'negative';
+        renderValue = 'no';
+        break;
+      case null:
+      case undefined:
+        type = 'negative';
+        renderValue = 'n/a';
+        break;
+      default:
+        renderValue = value.toString();
+    }
+
+    return {type, renderValue};
+  };
+
+  render() {
+    const {name, children} = this.props;
+    const {type, renderValue} = this.getRenderTypeAndValue();
+
+    return (
+      <StyledPill>
+        <PillName>{name}</PillName>
+        <PillValue type={type}>{children || renderValue}</PillValue>
+      </StyledPill>
+    );
+  }
+}
+
+const StyledPill = styled('li')`
+  white-space: nowrap;
+  margin: 0 10px 10px 0;
+  display: flex;
+  border: 1px solid ${p => p.theme.gray1};
+  border-radius: ${p => p.theme.button.borderRadius};
+  box-shadow: ${p => p.theme.dropShadowLightest};
+  line-height: 1.2;
+  max-width: 100%;
+  &:last-child {
+    margin-right: 0;
+  }
+`;
+
+const PillName = styled('span')`
+  padding: ${space(0.5)} ${space(1)};
+  min-width: 0;
+  white-space: nowrap;
+`;
+
+type PillValueProps = {
+  type: 'positive' | 'negative' | undefined;
+};
+const PillValue = styled(PillName)<PillValueProps>`
+  ${p => {
+    switch (p.type) {
+      case 'positive':
+        return `
+          background: ${p.theme.greenLightest};
+          border: 1px solid ${p.theme.green};
+          margin: -1px;
+        `;
+      case 'negative':
+        return `
+          background: ${p.theme.redLightest};
+          border: 1px solid ${p.theme.red};
+          margin: -1px;
+        `;
+      default:
+        return `
+          background: ${p.theme.whiteDark};
+        `;
+    }
+  }}
+
+  border-left: 1px solid ${p => p.theme.gray1};
+  border-radius: ${p =>
+    `0 ${p.theme.button.borderRadius} ${p.theme.button.borderRadius} 0`};
+  font-family: ${p => p.theme.text.familyMono};
+  max-width: 100%;
+
+  > a {
+    max-width: 100%;
+    text-overflow: ellipsis;
+    overflow: hidden;
+    white-space: nowrap;
+    display: inline-block;
+    vertical-align: text-bottom;
+  }
+
+  .pill-icon,
+  .external-icon {
+    display: inline;
+    margin: 0 0 0 ${space(1)};
+    color: ${p => p.theme.gray2};
+    line-height: 1.2;
+    &:hover {
+      color: ${p => p.theme.gray4};
+    }
+  }
+`;
+
+export default Pill;
diff --git a/src/sentry/static/sentry/app/components/pills.jsx b/src/sentry/static/sentry/app/components/pills.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/pills.jsx
rename to src/sentry/static/sentry/app/components/pills.tsx
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 8b0e69756a..09f9931d0e 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -246,33 +246,41 @@ type EventOrGroupType = [
 // TODO(ts): incomplete
 export type Group = {
   id: string;
+  activity: any[]; // TODO(ts)
   annotations: string[];
   assignedTo: User;
   count: string;
   culprit: string;
+  currentRelease: any; // TODO(ts)
+  firstRelease: any; // TODO(ts)
   firstSeen: string;
   hasSeen: boolean;
   isBookmarked: boolean;
   isPublic: boolean;
   isSubscribed: boolean;
+  lastRelease: any; // TODO(ts)
   lastSeen: string;
   level: string;
   logger: string;
   metadata: Metadata;
   numComments: number;
+  participants: any[]; // TODO(ts)
   permalink: string;
-  project: {
-    name: string;
-    slug: string;
-  };
+  platform: string;
+  pluginActions: any[]; // TODO(ts)
+  pluginContexts: any[]; // TODO(ts)
+  pluginIssues: any[]; // TODO(ts)
+  project: Project;
+  seenBy: User[];
   shareId: string;
   shortId: string;
+  stats: any; // TODO(ts)
   status: string;
   statusDetails: {};
   title: string;
   type: EventOrGroupType;
   userCount: number;
-  seenBy: User[];
+  userReportCount: number;
 };
 
 export type EventViewv1 = {
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
index ea6b79cd55..c8ef2ff3c3 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
@@ -195,6 +195,7 @@ class GroupEventDetails extends React.Component {
                 event={evt}
                 orgId={organization.slug}
                 project={project}
+                location={location}
                 showExampleCommit={this.showExampleCommit}
               />
             )}
