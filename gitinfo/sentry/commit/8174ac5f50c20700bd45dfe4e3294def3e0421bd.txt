commit 8174ac5f50c20700bd45dfe4e3294def3e0421bd
Author: ted kaemming <ted@kaemming.com>
Date:   Mon Feb 12 14:20:25 2018 -0800

    fix: Correct casing of environment `isHidden` in API (#7181)

diff --git a/src/sentry/api/endpoints/project_environment_details.py b/src/sentry/api/endpoints/project_environment_details.py
index a4225d4789..fb95f912ab 100644
--- a/src/sentry/api/endpoints/project_environment_details.py
+++ b/src/sentry/api/endpoints/project_environment_details.py
@@ -10,7 +10,7 @@ from sentry.models import EnvironmentProject
 
 
 class ProjectEnvironmentSerializer(serializers.Serializer):
-    is_hidden = serializers.BooleanField()
+    isHidden = serializers.BooleanField()
 
 
 class ProjectEnvironmentDetailsEndpoint(ProjectEndpoint):
@@ -18,7 +18,7 @@ class ProjectEnvironmentDetailsEndpoint(ProjectEndpoint):
         try:
             instance = EnvironmentProject.objects.select_related('environment').get(
                 project=project,
-                environment__name=environment,
+                environment__name='' if environment == 'none' else environment,
             )
         except EnvironmentProject.DoesNotExist:
             raise ResourceDoesNotExist
@@ -29,7 +29,7 @@ class ProjectEnvironmentDetailsEndpoint(ProjectEndpoint):
         try:
             instance = EnvironmentProject.objects.select_related('environment').get(
                 project=project,
-                environment__name=environment,
+                environment__name='' if environment == 'none' else environment,
             )
         except EnvironmentProject.DoesNotExist:
             raise ResourceDoesNotExist
@@ -38,7 +38,13 @@ class ProjectEnvironmentDetailsEndpoint(ProjectEndpoint):
         if not serializer.is_valid():
             return Response(serializer.errors, status=400)
 
-        fields = serializer.object
+        data = serializer.object
+        fields = {}
+
+        if 'isHidden' in data:
+            fields['is_hidden'] = data['isHidden']
+
         if fields:
             instance.update(**fields)
+
         return Response(serialize(instance, request.user))
diff --git a/src/sentry/api/endpoints/project_environments.py b/src/sentry/api/endpoints/project_environments.py
index 753b019183..f71caea71c 100644
--- a/src/sentry/api/endpoints/project_environments.py
+++ b/src/sentry/api/endpoints/project_environments.py
@@ -4,22 +4,21 @@ from rest_framework.response import Response
 
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
-from sentry.models import Environment
+from sentry.models import EnvironmentProject
 
 
 environment_visibility_filter_options = {
     'all': lambda queryset: queryset,
-    'hidden': lambda queryset: queryset.filter(environmentproject__is_hidden=True),
-    'visible': lambda queryset: queryset.exclude(environmentproject__is_hidden=True),
+    'hidden': lambda queryset: queryset.filter(is_hidden=True),
+    'visible': lambda queryset: queryset.exclude(is_hidden=True),
 }
 
 
 class ProjectEnvironmentsEndpoint(ProjectEndpoint):
     def get(self, request, project):
-        queryset = Environment.objects.filter(
-            projects=project,
-            organization_id=project.organization_id,
-        ).order_by('name')
+        queryset = EnvironmentProject.objects.filter(
+            project=project,
+        ).select_related('environment').order_by('environment__name')
 
         visibility = request.GET.get('visibility', 'visible')
         if visibility not in environment_visibility_filter_options:
diff --git a/src/sentry/api/serializers/models/environment.py b/src/sentry/api/serializers/models/environment.py
index f29c4bffbb..9d0812b7ac 100644
--- a/src/sentry/api/serializers/models/environment.py
+++ b/src/sentry/api/serializers/models/environment.py
@@ -27,8 +27,9 @@ class EnvironmentSerializer(Serializer):
 class EnvironmentProjectSerializer(Serializer):
     def serialize(self, obj, attrs, user):
         return {
+            'id': six.text_type(obj.id),
             'name': obj.environment.name,
-            'is_hidden': obj.is_hidden is True,
+            'isHidden': obj.is_hidden is True,
         }
 
 
diff --git a/tests/sentry/api/endpoints/test_project_environment_details.py b/tests/sentry/api/endpoints/test_project_environment_details.py
index 63f69c1bab..5cc6ed66ee 100644
--- a/tests/sentry/api/endpoints/test_project_environment_details.py
+++ b/tests/sentry/api/endpoints/test_project_environment_details.py
@@ -30,8 +30,14 @@ class ProjectEnvironmentsTest(APITestCase):
         response = self.client.get(url, format='json')
         assert response.status_code == 200, response.content
         assert response.data == {
+            'id': u'{}'.format(
+                EnvironmentProject.objects.get(
+                    environment__name='production',
+                    project=project,
+                ).id,
+            ),
             'name': 'production',
-            'is_hidden': False,
+            'isHidden': False,
         }
 
         assert self.client.get(
@@ -66,7 +72,7 @@ class ProjectEnvironmentsTest(APITestCase):
                 'environment': 'production',
             }
         )
-        response = self.client.put(url, {'is_hidden': True}, format='json')
+        response = self.client.put(url, {'isHidden': True}, format='json')
         assert response.status_code == 200, response.content
 
         assert EnvironmentProject.objects.get(
@@ -83,6 +89,6 @@ class ProjectEnvironmentsTest(APITestCase):
                     'environment': 'invalid',
                 }
             ),
-            {'is_hidden': True},
+            {'isHidden': True},
             format='json',
         ).status_code == 404
