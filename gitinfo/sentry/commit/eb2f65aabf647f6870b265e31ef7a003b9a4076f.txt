commit eb2f65aabf647f6870b265e31ef7a003b9a4076f
Author: ted kaemming <ted@kaemming.com>
Date:   Fri Jun 22 11:11:12 2018 -0700

    ref(tagstore): Make Snuba implementation of `get_group_ids_for_users` mirror legacy (#8798)

diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index 72ef9495d9..706937af24 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -318,17 +318,13 @@ class SnubaTagStorage(TagStorage):
         filters = {
             'project_id': project_ids,
         }
-        or_conditions = [cond for cond in [
-            ('user_id', 'IN', [eu.ident for eu in event_users if eu.ident]),
-            ('email', 'IN', [eu.email for eu in event_users if eu.email]),
-            ('username', 'IN', [eu.username for eu in event_users if eu.username]),
-            ('ip_address', 'IN', [eu.ip_address for eu in event_users if eu.ip_address]),
-        ] if cond[2] != []]
-        conditions = [or_conditions]
-        aggregations = [['max', SEEN_COLUMN, 'seen']]
+        conditions = [
+            ['tags[sentry:user]', 'IN', filter(None, [eu.tag_value for eu in event_users])],
+        ]
+        aggregations = [['max', SEEN_COLUMN, 'last_seen']]
 
         result = snuba.query(start, end, ['issue'], conditions, filters,
-                             aggregations, limit=limit, orderby='-seen',
+                             aggregations, limit=limit, orderby='-last_seen',
                              referrer='tagstore.get_group_ids_for_users')
         return set(result.keys())
 
@@ -337,13 +333,9 @@ class SnubaTagStorage(TagStorage):
         filters = {
             'project_id': [eu.project_id for eu in event_users]
         }
-        or_conditions = [cond for cond in [
-            ('user_id', 'IN', [eu.ident for eu in event_users if eu.ident]),
-            ('email', 'IN', [eu.email for eu in event_users if eu.email]),
-            ('username', 'IN', [eu.username for eu in event_users if eu.username]),
-            ('ip_address', 'IN', [eu.ip_address for eu in event_users if eu.ip_address]),
-        ] if cond[2] != []]
-        conditions = [or_conditions]
+        conditions = [
+            ['tags[sentry:user]', 'IN', filter(None, [eu.tag_value for eu in event_users])]
+        ]
         aggregations = [
             ['count()', '', 'times_seen'],
             ['min', SEEN_COLUMN, 'first_seen'],
diff --git a/tests/snuba/tagstore/test_tagstore_backend.py b/tests/snuba/tagstore/test_tagstore_backend.py
index cf0acd4423..2aae341d66 100644
--- a/tests/snuba/tagstore/test_tagstore_backend.py
+++ b/tests/snuba/tagstore/test_tagstore_backend.py
@@ -273,19 +273,6 @@ class TagStorageTest(SnubaTestCase):
         assert result[0].value == 'user2'
         assert result[0].last_seen == self.now - timedelta(seconds=2)
 
-        # Test that users identified by different means are collected.
-        # (effectively tests OR conditions in snuba API)
-        result = self.ts.get_group_tag_values_for_users([
-            EventUser(project_id=self.proj1.id, email='user1@sentry.io'),
-            EventUser(project_id=self.proj1.id, ident='user2')
-        ])
-        assert len(result) == 2
-        result.sort(key=lambda x: x.value)
-        assert result[0].value == 'user1'
-        assert result[0].last_seen == self.now - timedelta(seconds=1)
-        assert result[1].value == 'user2'
-        assert result[1].last_seen == self.now - timedelta(seconds=2)
-
     def test_get_release_tags(self):
         tags = list(
             self.ts.get_release_tags(
