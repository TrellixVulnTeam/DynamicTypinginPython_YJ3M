commit 8385dedc0b3028936b42de01da382d249a55f6f2
Author: lauryndbrown <lauryndbrown@gmail.com>
Date:   Mon Nov 13 17:50:52 2017 -0800

    fix(api): Fixed api serializer
    
    Checked that an id exists in the table.
    
    FIXED SENTRY-552

diff --git a/src/sentry/api/serializers/models/release.py b/src/sentry/api/serializers/models/release.py
index 9fa8d56d4b..185704e1c0 100644
--- a/src/sentry/api/serializers/models/release.py
+++ b/src/sentry/api/serializers/models/release.py
@@ -120,7 +120,7 @@ class ReleaseSerializer(Serializer):
             item_authors = []
             seen_authors = set()
             for user in (users_by_author.get(a) for a in item.authors):
-                if user['email'] not in seen_authors:
+                if user and user['email'] not in seen_authors:
                     seen_authors.add(user['email'])
                     item_authors.append(user)
 
diff --git a/tests/sentry/api/serializers/test_release.py b/tests/sentry/api/serializers/test_release.py
index 121ee5187a..99c3c99267 100644
--- a/tests/sentry/api/serializers/test_release.py
+++ b/tests/sentry/api/serializers/test_release.py
@@ -403,6 +403,27 @@ class ReleaseSerializerTest(TestCase):
         assert result['deployCount'] == 1
         assert result['lastDeploy']['id'] == six.text_type(deploy.id)
 
+    def test_release_no_users(self):
+        """
+        Testing when a repo gets deleted leaving dangling last commit id and author_ids
+        Made the decision that the Serializer must handle the data even in the case that the
+        commit_id or the author_ids point to records that do not exist.
+        """
+        commit_id = 9999999
+        commit_author_id = 9999999
+
+        project = self.create_project()
+        release = Release.objects.create(
+            organization_id=project.organization_id, version=uuid4().hex,
+            authors=[
+                six.text_type(commit_author_id),
+            ],
+            commit_count=1,
+            last_commit_id=commit_id,
+        )
+        release.add_project(project)
+        serialize(release)
+
 
 class ReleaseRefsSerializerTest(TestCase):
     def test_simple(self):
