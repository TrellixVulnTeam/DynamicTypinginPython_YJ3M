commit e5bdacffd58bbce2f66615a11875a898a6e01ce4
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Nov 17 12:00:32 2016 -0800

    tooltips: fix 24h time display (#4530)

diff --git a/src/sentry/static/sentry/app/components/dateTime.jsx b/src/sentry/static/sentry/app/components/dateTime.jsx
index 9ed6fbbcc5..160f75b388 100644
--- a/src/sentry/static/sentry/app/components/dateTime.jsx
+++ b/src/sentry/static/sentry/app/components/dateTime.jsx
@@ -23,9 +23,7 @@ const DateTime = React.createClass({
     let date = this.props.date;
     let user = ConfigStore.get('user');
     let options = user ? user.options : {};
-    let format = (
-      options.clock24Hours ? 'MMMM D YYYY HH:mm:ss z' : this.getDefaultFormat()
-    );
+    let format = options.clock24Hours ? 'MMMM D YYYY HH:mm:ss z' : this.getDefaultFormat();
 
     if (_.isString(date) || _.isNumber(date)) {
       date = new Date(date);
diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index bfd9ba5fbf..a6751fabb7 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -2,6 +2,7 @@ import moment from 'moment';
 import React from 'react';
 import {intcomma, valueIsEqual} from '../utils';
 import TooltipMixin from '../mixins/tooltip';
+import ConfigStore from '../stores/configStore.jsx';
 
 const StackedBarChart = React.createClass({
   propTypes: {
@@ -93,6 +94,12 @@ const StackedBarChart = React.createClass({
     return !valueIsEqual(this.props, nextProps, true);
   },
 
+  use24Hours() {
+    let user = ConfigStore.get('user');
+    let options = user ? user.options : {};
+    return options.clock24Hours;
+  },
+
   floatFormat(number, places) {
     let multi = Math.pow(10, places);
     return parseInt(number * multi, 10) / multi;
@@ -101,11 +108,12 @@ const StackedBarChart = React.createClass({
   timeLabelAsHour(point) {
     let timeMoment = moment(point.x * 1000);
     let nextMoment = timeMoment.clone().add(59, 'minute');
+    let format = this.use24Hours() ? 'HH:mm' : 'LT';
 
     return (
       '<span>' +
         timeMoment.format('LL') + '<br />' +
-        timeMoment.format('LT') + '  &#8594; ' + nextMoment.format('LT') +
+        timeMoment.format(format) + '  &#8594; ' + nextMoment.format(format) +
       '</span>'
     );
   },
@@ -123,12 +131,13 @@ const StackedBarChart = React.createClass({
   timeLabelAsRange(interval, point) {
     let timeMoment = moment(point.x * 1000);
     let nextMoment = timeMoment.clone().add(interval - 1, 'second');
+    let format = this.use24Hours() ? 'MMM Do, HH:mm' : 'MMM Do, h:mm a';
 
     return (
       '<span>' +
         // e.g. Aug 23rd, 12:50 pm
-        timeMoment.format('MMM Do, h:mm a') +
-        ' &#8594 ' + nextMoment.format('MMM Do, h:mm a') +
+        timeMoment.format(format) +
+        ' &#8594 ' + nextMoment.format(format) +
       '</span>'
     );
   },
diff --git a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
index 83bf4c0f64..b0f57af797 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
@@ -53,9 +53,7 @@ let GroupEventToolbar  = React.createClass({
     let evt = this.props.event;
     let user = ConfigStore.get('user');
     let options = user ? user.options : {};
-    let format = (
-      options.clock24Hours ? 'HH:mm:ss z' : 'LTS z'
-    );
+    let format = options.clock24Hours ? 'HH:mm:ss z' : 'LTS z';
     let dateCreated = moment(evt.dateCreated);
     let resp = (
       '<dl class="flat" style="text-align:left;margin:0;min-width:200px">' +
