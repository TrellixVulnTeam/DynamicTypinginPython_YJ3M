commit 654acf0e513bc7bc6ce2d55695ba791c6f882376
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 14 16:49:03 2015 -0700

    Add release markers to dashboard chart

diff --git a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
index 0a7501f297..d6eab86507 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/chart.jsx
@@ -19,9 +19,9 @@ var ProjectChart = React.createClass({
 
   getInitialState() {
     return {
-      loading: true,
       error: false,
       stats: [],
+      releaseList: [],
       dateSince: (new Date().getTime() / 1000) - (3600 * 24 * 7)
     };
   },
@@ -29,9 +29,13 @@ var ProjectChart = React.createClass({
   getStatsEndpoint() {
     var org = this.getOrganization();
     var project = this.getProject();
-    if (org && project) {
-      return "/projects/" + org.slug + "/" + project.slug + "/stats/?resolution=1h";
-    }
+    return "/projects/" + org.slug + "/" + project.slug + "/stats/?resolution=1h";
+  },
+
+  getProjectReleasesEndpoint() {
+    var org = this.getOrganization();
+    var project = this.getProject();
+    return '/projects/' + org.slug + '/' + project.slug + '/releases/';
   },
 
   componentWillMount() {
@@ -47,41 +51,63 @@ var ProjectChart = React.createClass({
   },
 
   fetchData() {
-    var endpoint = this.getStatsEndpoint();
-    if (!endpoint) {
-      return;
-    }
-
     this.setState({
-      error: false,
-      loading: true
+      error: false
     });
 
-    api.request(endpoint, {
+    api.request(this.getStatsEndpoint(), {
       query: {
         since: this.state.dateSince
       },
       success: (data) => {
         this.setState({
           stats: data,
-          loading: false,
           error: false
         });
       },
       error: () => {
         this.setState({
-          loading: false,
           error: true
         });
       }
     });
+
+    api.request(this.getProjectReleasesEndpoint(), {
+      success: (data, _, jqXHR) => {
+        this.setState({
+          releaseList: data,
+        });
+      }
+    });
   },
 
-  render() {
+  renderChart() {
     var points = this.state.stats.map((point) => {
       return {x: point[0], y: point[1]};
     });
+    var startX = (new Date().getTime() / 1000) - 3600 * 24 * 7;
+    var markers = this.state.releaseList.filter((release) => {
+      var date = new Date(release.dateCreated).getTime() / 1000;
+      return date >= startX;
+    }).map((release) => {
+      return {
+        label: 'Version ' + release.shortVersion,
+        x: new Date(release.dateCreated).getTime() / 1000
+      };
+    });
+
+    return (
+      <div className="chart-wrapper">
+        <BarChart
+          points={points}
+          markers={markers}
+          className="sparkline" />
+        <small className="date-legend">{moment(this.state.dateSince * 1000).format("LL")}</small>
+      </div>
+    );
+  },
 
+  render() {
     return (
       <div className="box project-chart">
         <div className="box-content with-padding">
@@ -91,10 +117,7 @@ var ProjectChart = React.createClass({
             : (this.state.error ?
               <LoadingError onRetry={this.fetchData} />
             :
-              <div className="chart-wrapper">
-                <BarChart points={points} className="sparkline" />
-                <small className="date-legend">{moment(this.state.dateSince * 1000).format("LL")}</small>
-              </div>
+              this.renderChart()
             )}
           </div>
         </div>
