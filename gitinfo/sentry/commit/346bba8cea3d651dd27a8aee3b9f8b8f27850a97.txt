commit 346bba8cea3d651dd27a8aee3b9f8b8f27850a97
Author: Eric Feng <erichfeng@gmail.com>
Date:   Wed Jan 27 11:03:35 2016 -0800

    adding onboarding ui and endpoints

diff --git a/src/sentry/api/endpoints/organization_onboarding_tasks.py b/src/sentry/api/endpoints/organization_onboarding_tasks.py
new file mode 100644
index 0000000000..bb3f81ad9b
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_onboarding_tasks.py
@@ -0,0 +1,30 @@
+from __future__ import absolute_import
+
+from django.utils import timezone
+from rest_framework.response import Response
+
+from sentry.api.bases.organization import (
+    OrganizationEndpoint, OrganizationPermission
+)
+
+from sentry.models import OnboardingTaskStatus, OrganizationOnboardingTask
+
+
+class OrganizationOnboardingTaskEndpoint(OrganizationEndpoint):
+	permission_classes = [OrganizationPermission, ]
+
+	def post(self, request, organization):
+		print request.DATA
+		if request.DATA['status'] == 'Skipped':
+			print OrganizationOnboardingTask.objects.create_or_update(
+				organization=organization,
+				user=request.user,
+				task=request.DATA['task'],
+				values={
+					'status': OnboardingTaskStatus.SKIPPED,
+					'date_completed': timezone.now(),
+				}
+			)
+			return Response(status=204)
+
+		return "fuck"
diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index 3c4bf18785..fe891568b1 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -28,7 +28,7 @@ class OrganizationSerializer(Serializer):
 class OnboardingTasksSerializer(Serializer):
     def serialize(self, obj, attrs, user):
         return {
-            'task': dict(OrganizationOnboardingTask.TASK_CHOICES).get(obj.task),
+            'task': obj.task,
             'status': dict(OrganizationOnboardingTask.STATUS_CHOICES).get(obj.status),
             'user': obj.user.name,
             'date_completed': obj.date_completed,
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 23a0dd7bc7..d2a59d11bc 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -30,6 +30,7 @@ from .endpoints.organization_member_issues_assigned import OrganizationMemberIss
 from .endpoints.organization_member_issues_bookmarked import OrganizationMemberIssuesBookmarkedEndpoint
 from .endpoints.organization_member_issues_viewed import OrganizationMemberIssuesViewedEndpoint
 from .endpoints.organization_member_team_details import OrganizationMemberTeamDetailsEndpoint
+from .endpoints.organization_onboarding_tasks import OrganizationOnboardingTaskEndpoint
 from .endpoints.organization_index import OrganizationIndexEndpoint
 from .endpoints.organization_projects import OrganizationProjectsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
@@ -139,6 +140,9 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/teams/$',
         OrganizationTeamsEndpoint.as_view(),
         name='sentry-api-0-organization-teams'),
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/onboarding-tasks/$',
+        OrganizationOnboardingTaskEndpoint.as_view(),
+        name='sentry-api-0-organization-onboardingtasks'),
 
     # Teams
     url(r'^teams/(?P<organization_slug>[^\/]+)/(?P<team_slug>[^\/]+)/$',
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index f827c0dd49..a7805d93be 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -105,7 +105,7 @@ class OrganizationMember(Model):
             ).exists()
 
         if not oot:
-            OrganizationOnboardingTask.create_or_update(
+            OrganizationOnboardingTask.objects.create_or_update(
                 organization=self.organization,
                 user=self.user,
                 task=OnboardingTask.INVITE_MEMBER,
diff --git a/src/sentry/models/organizationonboardingtask.py b/src/sentry/models/organizationonboardingtask.py
index beb3daacc5..b888da30af 100644
--- a/src/sentry/models/organizationonboardingtask.py
+++ b/src/sentry/models/organizationonboardingtask.py
@@ -20,14 +20,14 @@ class OnboardingTask(object):
     INVITE_MEMBER = 2
     ISSUE_TRACKER = 3
     NOTIFICATION_SERVICE = 4
-    SECOND_PLATFORM = 5  # dependent on FIRST_EVENT
+    SECOND_PLATFORM = 5  # dependent on FIRST_EVENT.
     USER_CONTEXT = 6  # dependent on FIRST_EVENT
-    SOURCEMAPS = 7  # dependent on RELEASE_TRACKING
+    SOURCEMAPS = 7  # dependent on RELEASE_TRACKING and one of the platforms being javascript
     RELEASE_TRACKING = 8  # dependent on FIRST_EVENT
-    USER_REPORTS = 9
+    USER_REPORTS = 9  # Only for web frameworks
     ISSUE_ASSIGNMENT = 10  # dependent on INVITE_MEMBER
     RELEASE_RESOLVED = 11  # dependent on RELEASE_TRACKING
-    SAVED_SEARCHES = 12
+    SAVED_SEARCHES = 12  # dependent on FIRST_EVENT
     RULES = 13
 
 
@@ -64,7 +64,6 @@ class OrganizationOnboardingTask(Model):
         (OnboardingTask.SAVED_SEARCHES, 'Saved searches'),
         (OnboardingTask.RULES, 'Rules'),
     )
-    INTIAL_TASKS = ['FE', 'IM', 'UC', 'RT']
 
     STATUS_CHOICES = (
         (OnboardingTaskStatus.COMPLETE, 'Complete'),
diff --git a/src/sentry/static/sentry/app/components/todos.jsx b/src/sentry/static/sentry/app/components/todos.jsx
index 7cc10db248..7fd817c8aa 100644
--- a/src/sentry/static/sentry/app/components/todos.jsx
+++ b/src/sentry/static/sentry/app/components/todos.jsx
@@ -4,43 +4,86 @@ import ApiMixin from '../mixins/apiMixin';
 import ConfigStore from '../stores/configStore';
 import OrganizationState from '../mixins/organizationState';
 
-const Todos = React.createClass({
-  mixins: [ApiMixin, OrganizationState],
-
-  skip: function() {
-    let org = this.getOrganization();
-    this.api.request('/organizations/' + org.slug + '/onboarding-tasks/', {
-      method: 'POST',
-      data: {'a': 1}
-    });
-    this.getOnboardingTasks();
+const TASKS = [
+  {
+    'task': 1,
+    'title': 'Send your first event',
+    'description': 'Install Sentry\'s client to get started error logging',
+    'skippable': false,
+    'feature_location': 'project',
+    'location': 'settings/install/'
   },
-
-  render: function() {
-    return (
-        <div className="onboarding-wrapper">
-          <h3>Remaining Todos</h3>
-          <ul className="list-unstyled">
-            <TodoItem completed={true} />
-            <TodoItem skippable={true} />
-            <TodoItem />
-          </ul>
-        </div>
-    );
-  }
-});
+  {
+    'task': 2,
+    'title': 'Invite team member',
+    'description': 'Bring your team aboard',
+    'skippable': false,
+    'feature_location': 'organization',
+    'location': 'members/new/',
+  },
+  {
+    'task': 8,
+    'title': 'Set up release tracking',
+    'description': 'See what releases are generating errors.',
+    'skippable': false,
+    'feature_location': 'project',
+    'location': 'settings/release-tracking/',
+  },
+  {
+    'task': 3,
+    'title': 'Set up issue tracking',
+    'description': 'Integrate Sentry into your team\'s issue tracker',
+    'skippable': true,
+    'feature_location': 'project',
+    'location': 'settings/issue-tracking/',
+  },
+  {
+    'task': 4,
+    'title': 'Set up a notification service',
+    'description': 'Receive Sentry alerts in Slack or HipChat',
+    'skippable': true,
+    'feature_location': 'project',
+    'location': 'settings/notifications/',
+  },
+  {
+    'task': 5,
+    'title': 'Add a second platform',
+    'description': 'Add Sentry to a second platform',
+    'skippable': false,
+    'feature_location': 'organization',
+    'location': 'projects/new/',
+  },
+  {
+    'task': 6,
+    'title': 'Add user context to errors',
+    'description': 'Know what users are being affected by errors and crashes',
+    'skippable': false,
+    'feature_location': 'absolute',
+    'location': 'https://docs.getsentry.com/hosted/learn/context/#capturing-the-user',
+  },
+  // {
+  //   'task': 7,
+  //   'title': 'Deminify javascript with sourcemaps',
+  //   'description': 'Upload sourcemaps',
+  //   'skippable': false,
+  //   'feature_location': 'absolute',
+  //   'location': 'https://docs.getsentry.com/hosted/clients/javascript/sourcemaps/'
+  // },
+  // {
+  //   'task': 9,
+  //   'title': 'User crash reports',
+  //   'description': 'Collect user feedback when your application crashes',
+  //   'skippable': false,
+  //   'feature_location': 'project',
+  //   'location': 'settings/user-reports/'
+  // },
+]
 
 const TodoItem = React.createClass({
-  propTypes: {
-    completed: React.PropTypes.bool,
-    skippable: React.PropTypes.bool
-  },
+  mixins: [OrganizationState],
 
-  getDefaultProps: function() {
-    return {
-      completed: false,
-      skippable: false
-    };
+  propTypes: {
+    task: React.PropTypes.object,
   },
 
   getInitialState: function() {
@@ -49,50 +92,139 @@ const TodoItem = React.createClass({
     };
   },
 
-  toggleConfirmation() {
+  toggleConfirmation: function() {
     this.setState({showConfirmation: !this.state.showConfirmation});
   },
 
+  skip: function(task) {
+    this.props.onSkip(task);
+    this.setState({showConfirmation: false});
+  },
+
   render: function() {
+    let org = this.getOrganization();
 
     let classNames = '';
 
-    if (this.props.completed) {
+    if (this.props.task['status'] == 'Complete') {
       classNames += ' checked';
+    } else if (this.props.task['status'] == 'Pending') {
+      classNames += ' pending';
+    } else if (this.props.task['status'] == 'Skipped') {
+      classNames += ' skipped';
     }
 
     if (this.state.showConfirmation) {
       classNames += ' blur';
     }
 
+    var learn_more_url= '';
+    if (this.props.task['feature_location'] === 'project') {
+      learn_more_url = '/organizations/' + org.slug + '/projects/choose/?next=' + this.props.task['location'];
+    } else if (this.props.task['feature_location'] === 'organization') {
+      learn_more_url = '/organizations/' + org.slug + '/' + this.props.task['location'];
+    } else if (this.props.task['feature_location'] === 'absolute') {
+      learn_more_url = this.props.task['location'];
+    }
+
     return (
       <li className={classNames}>
         <div className="todo-content">
           <div className="ob-checkbox">
-            { this.props.completed ? <span className="icon-checkmark" /> : null }
+            { this.props.task['status'] == 'Complete' ? <span className="icon-checkmark" /> : null }
           </div>
-          <h4>Setup notification services</h4>
+          <h4>{ this.props.task['title'] }</h4>
           <p>
-            Be notified of Issues via Slack, HipChat, and More &middot; <a href="#">Learn More</a>
+            { this.props.task['description'] } &middot; <span><a href={learn_more_url}>Learn more</a></span>
           </p>
-
-          { this.props.skippable && !this.state.showConfirmation ? <a className="skip-btn btn btn-default" onClick={this.toggleConfirmation}>Skip</a> : null }
+          { this.props.task['skippable'] && this.props.task['status'] != 'Skipped' && this.props.task['status'] != 'Complete' && !this.state.showConfirmation ? <a className="skip-btn btn btn-default" onClick={this.toggleConfirmation}>Skip</a> : null }
         </div>
-        { this.state.showConfirmation ? <Confirmation /> : null }
+        { this.state.showConfirmation ? <Confirmation task={this.props.task['task']} onSkip={this.skip} dismiss={this.toggleConfirmation} /> : null }
       </li>
     );
   }
 });
 
 const Confirmation = React.createClass({
+  propTypes: {
+    task: React.PropTypes.string,
+  },
+
+  skip: function(e) {
+    e.preventDefault();
+    this.props.onSkip(this.props.task);
+  },
+
+  dismiss: function() {
+    this.props.dismiss();
+  },
+
   render: function() {
     return (
-      <div className="ob-confirmation">
+      <div className="ob-confirmation" onClick={this.dismiss}>
         <h3>Need help?</h3>
-        <p><a href="mailto:eric@getsentry.com?subject=:P">Ask us!</a> &middot; <a onClick={this.toggleConfirmation}>No Thanks</a></p>
+        <p><a href="mailto:eric@getsentry.com?subject=:P">Ask us!</a> &middot; <a onClick={this.skip}>Skip</a></p>
       </div>
     );
   }
 });
 
+const Todos = React.createClass({
+  mixins: [ApiMixin, OrganizationState],
+
+  getInitialState: function() {
+    return {tasks: []};
+  },
+
+  componentWillMount() {
+    let org = this.getOrganization();
+    let tasks = [];
+    for (var task of TASKS) {
+      task['status'] = '';
+      for (var server_task of org.onboardingTasks) {
+        if (server_task['task'] == task['task']) {
+          task['status'] = server_task['status'];
+          break;
+        }
+      }
+      tasks.push(task);
+    }
+    this.setState({tasks: tasks})
+  },
+
+  skipTask: function(skipped_task) {
+    let org = this.getOrganization();
+    this.api.request('/organizations/' + org.slug + '/onboarding-tasks/', {
+      method: 'POST',
+      data: {'task': skipped_task, 'status': 'Skipped'},
+      success: () => {
+        let new_state = this.state.tasks.map( (task) => {
+          if (task['task'] == skipped_task) { task['status'] = 'Skipped' };
+          return task;
+        });
+        this.setState({tasks: new_state});
+      },
+      error: () => {
+        console.log('Unable to skip this task');
+      }
+    });
+    this.getOnboardingTasks();
+  },
+
+  render: function() {
+    let todo_list = this.state.tasks.map(function(task) {
+      return (<TodoItem key={task['task']} task={task} onSkip={this.skipTask} />)
+    }, this);
+
+    return (
+        <div className="onboarding-wrapper">
+          <h3>Getting Started with Sentry</h3>
+          <ul className="list-unstyled">
+            {todo_list}
+          </ul>
+        </div>
+    );
+  }
+});
+
 export default Todos;
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 7df771e842..81d80583ac 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -371,6 +371,18 @@ table.project-list {
          }
        }
 
+       &.skipped {
+        .ob-checkbox {
+          border-color: grey;
+        }
+       }
+
+       &.pending {
+        .ob-checkbox {
+          border-color: yellow;
+        }
+       }
+
        &.blur .todo-content {
          -webkit-filter: ~"blur(3px)";
        }
@@ -408,7 +420,7 @@ table.project-list {
   .skip-btn {
 
     position: absolute;
-    z-index: 1000;
+    z-index: 100;
     right: 5px;
     top: 2px;
     .transition(opacity .1s);
@@ -422,7 +434,7 @@ table.project-list {
 
   .ob-confirmation {
     position: absolute;
-    z-index: 1000;
+    z-index: 100;
     background: rgba(255,255,255, .75);
     left: -20px;
     right: -20px;
diff --git a/src/sentry/templates/sentry/choose-project.html b/src/sentry/templates/sentry/choose-project.html
index 77b680dee8..a024b99bbb 100644
--- a/src/sentry/templates/sentry/choose-project.html
+++ b/src/sentry/templates/sentry/choose-project.html
@@ -16,7 +16,7 @@
 				{% for project in projects %}
 					<tr>
 						<td>
-							<a href="/{{ organization.slug }}/{{ project.slug }}{{ next }}">
+							<a href="/{{ organization.slug }}/{{ project.slug }}/{{ next }}">
 								<h5>{{ project.name }}</h5>
 							</a>
 						</td>
diff --git a/src/sentry/web/frontend/choose_project.py b/src/sentry/web/frontend/choose_project.py
index e687a8da36..64152d1df9 100644
--- a/src/sentry/web/frontend/choose_project.py
+++ b/src/sentry/web/frontend/choose_project.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from django import forms
 from django.contrib import messages
 from django.core.urlresolvers import reverse
+from django.shortcuts import redirect
 
 from sentry.models import Project, Team
 from sentry.web.frontend.base import OrganizationView
@@ -10,12 +11,8 @@ from sentry.utils.http import absolute_uri
 
 
 class OrganizationProjectChooser(OrganizationView):
-    # TODO(dcramer): I'm 95% certain the access is incorrect here as it would
-    # be probably validating against global org access, and all we care about is
-    # team admin
     required_scope = 'team:read'
 
-
     def handle(self, request, organization):
     	teams = Team.objects.get_for_user(
 			organization=organization,
@@ -23,10 +20,19 @@ class OrganizationProjectChooser(OrganizationView):
 			with_projects=True,
 			)
 
+        # next_url should have a trailing slash only: settings/install/
+        next_url = request.GET.get('next')
+        if next_url[0] == '/':
+            next_url = next_url[1:]
+        if next_url[-1] != '/':
+            next_url += '/'
+
         context = {
         	'organization': organization,
         	'teams': teams,
-        	'next': request.GET.get('next') if 'next' in request.GET else '',
+        	'next': next_url,
         }
+        if len(teams) == 1 and len(teams[0][1]) == 1:
+            return redirect('/' + organization.slug + '/' + teams[0][1][0].slug + '/' + next_url)
 
         return self.respond('sentry/choose-project.html', context)
