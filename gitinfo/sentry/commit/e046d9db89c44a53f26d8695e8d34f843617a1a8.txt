commit e046d9db89c44a53f26d8695e8d34f843617a1a8
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Jul 15 21:25:06 2016 +0500

    Added support for sdk_info from os context

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 35915ab21f..018a44088c 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -10,7 +10,7 @@ from sentry.models import Project, EventError
 from sentry.plugins import Plugin2
 from sentry.lang.native.symbolizer import Symbolizer, have_symsynd
 from sentry.lang.native.utils import find_all_stacktraces, \
-    find_apple_crash_report_referenced_images, \
+    find_apple_crash_report_referenced_images, get_sdk_from_event, \
     find_stacktrace_referenced_images, get_sdk_from_apple_system_info, \
     APPLE_SDK_MAPPING
 from sentry.utils.native import parse_addr
@@ -359,7 +359,9 @@ def resolve_frame_symbols(data):
         return
 
     debug_images = debug_meta['images']
-    sdk_info = debug_meta['sdk_info']
+    sdk_info = get_sdk_from_event(data)
+    if not sdk_info:
+        return
 
     stacktraces = find_all_stacktraces(data)
     if not stacktraces:
diff --git a/src/sentry/lang/native/utils.py b/src/sentry/lang/native/utils.py
index 8e982d758e..8ec33e7e35 100644
--- a/src/sentry/lang/native/utils.py
+++ b/src/sentry/lang/native/utils.py
@@ -10,6 +10,12 @@ APPLE_SDK_MAPPING = {
     'Mac OS': 'macOS',
 }
 
+KNOWN_DSYM_TYPES = {
+    'iOS': 'macho',
+    'tvOS': 'macho',
+    'macOS': 'macho'
+}
+
 
 def find_apple_crash_report_referenced_images(binary_images, threads):
     """Given some binary images from an apple crash report and a thread
@@ -72,6 +78,32 @@ def find_all_stacktraces(data):
     return rv
 
 
+def get_sdk_from_event(event):
+    sdk_info = (event.get('debug_meta') or {}).get('sdk_info')
+    if sdk_info:
+        return sdk_info
+    os = (event.get('contexts') or {}).get('os')
+    if os and os.get('type') == 'os':
+        return get_sdk_from_os(os)
+
+
+def get_sdk_from_os(data):
+    if 'name' not in data or 'version' not in data:
+        return
+    dsym_type = KNOWN_DSYM_TYPES.get(data['name'])
+    if dsym_type is None:
+        return
+    system_version = tuple(int(x) for x in (
+        data['version'] + '.0' * 3).split('.')[:3])
+    return {
+        'dsym_type': 'macho',
+        'sdk_name': data['name'],
+        'version_major': system_version[0],
+        'version_minor': system_version[1],
+        'version_patchlevel': system_version[2],
+    }
+
+
 def get_sdk_from_apple_system_info(info):
     if not info:
         return None
diff --git a/tests/sentry/lang/native/test_utils.py b/tests/sentry/lang/native/test_utils.py
new file mode 100644
index 0000000000..89d470f2a2
--- /dev/null
+++ b/tests/sentry/lang/native/test_utils.py
@@ -0,0 +1,36 @@
+from sentry.lang.native.utils import get_sdk_from_event
+
+
+def test_get_sdk_from_event():
+    sdk_info = get_sdk_from_event({
+        'debug_meta': {
+            'sdk_info': {
+                'dsym_type': 'macho',
+                'sdk_name': 'iOS',
+                'version_major': 9,
+                'version_minor': 3,
+                'version_patchlevel': 0,
+            }
+        }
+    })
+    assert sdk_info['dsym_type'] == 'macho'
+    assert sdk_info['sdk_name'] == 'iOS'
+    assert sdk_info['version_major'] == 9
+    assert sdk_info['version_minor'] == 3
+    assert sdk_info['version_patchlevel'] == 0
+
+    sdk_info = get_sdk_from_event({
+        'contexts': {
+            'os': {
+                'type': 'os',
+                'name': 'iOS',
+                'version': '9.3.1.1234',
+            }
+        }
+    })
+
+    assert sdk_info['dsym_type'] == 'macho'
+    assert sdk_info['sdk_name'] == 'iOS'
+    assert sdk_info['version_major'] == 9
+    assert sdk_info['version_minor'] == 3
+    assert sdk_info['version_patchlevel'] == 1
