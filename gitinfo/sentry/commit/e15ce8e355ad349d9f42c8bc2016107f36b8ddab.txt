commit e15ce8e355ad349d9f42c8bc2016107f36b8ddab
Author: Max Bittker <maxbittker@gmail.com>
Date:   Thu Mar 15 11:26:02 2018 -0700

    feat(ownership): show in navbar, update copy (#7640)
    
    * show project ownership in project settings navbar
    
    * misc fixups

diff --git a/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
index 1c10955df3..ad6172ce3b 100644
--- a/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/navigationConfiguration.jsx
@@ -46,7 +46,6 @@ export default function getConfiguration({project}) {
         {
           path: `${pathPrefix}/ownership/`,
           title: t('Issue Ownership'),
-          show: ({access}) => access.has('project:write'),
         },
         {
           path: `${pathPrefix}/data-forwarding/`,
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
index f85600e883..391facd1bb 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
@@ -54,10 +54,10 @@ class ProjectOwnership extends AsyncView {
           <PanelBody disablePadding={false}>
             <p>
               {t(
-                "To configure automated issue ownership in Sentry, you'll need to define rules here. "
+                'Define rules here to configure automated ownership for new issues and direct email alerts'
               )}
             </p>
-            <p>{t('Rules follow the pattern type:glob owner, owner')}</p>
+            <p>{t('Rules follow the pattern type:glob owner owner')}</p>
             <p>
               {t(
                 'Owners can be team identifiers starting with #, or user emails (use @ to input from list)'
@@ -65,9 +65,9 @@ class ProjectOwnership extends AsyncView {
             </p>
             Examples:
             <CodeBlock>
-              path:src/sentry/pipeline/* person@sentry.io #platform
+              path:src/example/pipeline/* person@sentry.io #infrastructure
               {'\n'}
-              url:http://sentry.io/settings/* #workflow
+              url:http://example.com/settings/* #product
             </CodeBlock>
             <OwnerInput {...this.props} initialText={ownership.raw || ''} />
           </PanelBody>
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
index 67361f5f8b..3448569111 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
@@ -49,7 +49,7 @@ class OwnerInput extends React.Component {
       `/projects/${organization.slug}/${project.slug}/ownership/`,
       {
         method: 'PUT',
-        data: {raw: this.state.text},
+        data: {raw: this.state.text || ''},
       }
     );
 
@@ -59,7 +59,7 @@ class OwnerInput extends React.Component {
       })
       .catch(error => {
         this.setState({error: error.responseJSON});
-        addErrorMessage(t('Error updating ownership rules'));
+        addErrorMessage(t('Unable to save ownership rules changes'));
       });
 
     return request;
@@ -107,11 +107,10 @@ class OwnerInput extends React.Component {
           <MentionsInput
             style={OwnerInputStyle}
             placeholder={
-              '#example usage\n\npath:src/sentry/pipeline/* person@sentry.io #platform\n\nurl:http://sentry.io/settings/* #workflow'
+              '#example usage\n\npath:src/example/pipeline/* person@sentry.io #infrastructure\n\nurl:http://example.com/settings/* #product'
             }
             onChange={this.onChange.bind(this)}
             onBlur={this.onBlur}
-            onKeyDown={this.onKeyDown}
             value={text}
             required={true}
             autoFocus={true}
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index a2a5381268..016b2b6daf 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -77,9 +77,9 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
       onChange={[Function]}
       placeholder="#example usage
 
-path:src/sentry/pipeline/* person@sentry.io #platform
+path:src/example/pipeline/* person@sentry.io #infrastructure
 
-url:http://sentry.io/settings/* #workflow"
+url:http://example.com/settings/* #product"
       required={true}
       spellCheck="false"
       style={
@@ -157,9 +157,9 @@ url:http://sentry.io/settings/* #workflow"
         onSelect={[Function]}
         placeholder="#example usage
 
-path:src/sentry/pipeline/* person@sentry.io #platform
+path:src/example/pipeline/* person@sentry.io #infrastructure
 
-url:http://sentry.io/settings/* #workflow"
+url:http://example.com/settings/* #product"
         required={true}
         singleLine={false}
         spellCheck="false"
@@ -309,9 +309,9 @@ url:http://sentry.io/settings/* #workflow"
               onSelect={[Function]}
               placeholder="#example usage
 
-path:src/sentry/pipeline/* person@sentry.io #platform
+path:src/example/pipeline/* person@sentry.io #infrastructure
 
-url:http://sentry.io/settings/* #workflow"
+url:http://example.com/settings/* #product"
               required={true}
               spellCheck="false"
               style={
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index 499d37d044..6852b70c51 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -24,20 +24,20 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
         flex={false}
       >
         <p>
-          To configure automated issue ownership in Sentry, you'll need to define rules here. 
+          Define rules here to configure automated ownership for new issues and direct email alerts
         </p>
         <p>
-          Rules follow the pattern type:glob owner, owner
+          Rules follow the pattern type:glob owner owner
         </p>
         <p>
           Owners can be team identifiers starting with #, or user emails (use @ to input from list)
         </p>
         Examples:
         <CodeBlock>
-          path:src/sentry/pipeline/* person@sentry.io #platform
+          path:src/example/pipeline/* person@sentry.io #infrastructure
           
 
-          url:http://sentry.io/settings/* #workflow
+          url:http://example.com/settings/* #product
         </CodeBlock>
         <OwnerInput
           initialText="url:src @dummy@example.com"
