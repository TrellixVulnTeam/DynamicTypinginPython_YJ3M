commit ccc2b14532291e958d7caa6b8c077580dc8335ac
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Tue Jan 29 12:04:02 2019 +0100

    fix: None ref in coreapi (#11760)
    
    * fix: None ref in coreapi
    
    * fix: More None refs in filters

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 88f142b50e..fbdee6bc0b 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -32,6 +32,7 @@ from sentry.utils import json
 from sentry.utils.auth import parse_auth_header
 from sentry.utils.http import origin_from_request
 from sentry.utils.strings import decompress
+from sentry.utils.safe import get_path
 from sentry.utils.sdk import configure_scope
 from sentry.utils.canonical import CANONICAL_TYPES
 
@@ -148,15 +149,17 @@ class ClientApiHelper(object):
         return self.project_key_from_auth(auth).project_id
 
     def ensure_does_not_have_ip(self, data):
-        if 'request' in data:
-            if 'env' in data['request']:
-                data['request']['env'].pop('REMOTE_ADDR', None)
+        env = get_path(data, 'request', 'env')
+        if env:
+            env.pop('REMOTE_ADDR', None)
 
-        if 'user' in data:
-            data['user'].pop('ip_address', None)
+        user = get_path(data, 'user')
+        if user:
+            user.pop('ip_address', None)
 
-        if 'sdk' in data:
-            data['sdk'].pop('client_ip', None)
+        sdk = get_path(data, 'sdk')
+        if sdk:
+            sdk.pop('client_ip', None)
 
     def insert_data_to_database(self, data, start_time=None,
                                 from_reprocessing=False, attachments=None):
diff --git a/src/sentry/filters/localhost.py b/src/sentry/filters/localhost.py
index 8db763e318..218e65e7fa 100644
--- a/src/sentry/filters/localhost.py
+++ b/src/sentry/filters/localhost.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from .base import Filter
 from six.moves.urllib.parse import urlparse
 from sentry.utils.data_filters import FilterStatKeys
+from sentry.utils.safe import get_path
 
 LOCAL_IPS = frozenset(['127.0.0.1', '::1'])
 LOCAL_DOMAINS = frozenset(['127.0.0.1', 'localhost'])
@@ -14,16 +15,10 @@ class LocalhostFilter(Filter):
     description = 'This applies to both IPv4 (``127.0.0.1``) and IPv6 (``::1``) addresses.'
 
     def get_ip_address(self, data):
-        try:
-            return data['user']['ip_address']
-        except KeyError:
-            return ''
+        return get_path(data, 'user', 'ip_address') or ''
 
     def get_url(self, data):
-        try:
-            return data['request']['url'] or ''
-        except KeyError:
-            return ''
+        return get_path(data, 'request', 'url') or ''
 
     def get_domain(self, data):
         return urlparse(self.get_url(data)).hostname
