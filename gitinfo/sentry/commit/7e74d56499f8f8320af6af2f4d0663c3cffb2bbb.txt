commit 7e74d56499f8f8320af6af2f4d0663c3cffb2bbb
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 4 14:11:59 2016 -0700

    [plugins] improvements to identity flows (#4247)
    
    - add success messages to associate/disassociate flows
    - redirect disconnect to identity list
    - redirect connect back to issue details

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index ddf93ef5c6..d659214903 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -329,6 +329,7 @@ SOCIAL_AUTH_PIPELINE = (
     'social_auth.backends.pipeline.user.update_user_details',
     'social_auth.backends.pipeline.misc.save_status_to_session',
 )
+SOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = True
 
 INITIAL_CUSTOM_USER_MIGRATION = '0108_fix_user'
 
diff --git a/src/sentry/static/sentry/app/plugins/components/issueActions.jsx b/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
index 35cf432207..b2fa6cec00 100644
--- a/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
+++ b/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
@@ -253,13 +253,19 @@ class IssueActions extends PluginComponentBase {
       return null;
     }
     if (error.error_type === 'auth') {
+      let authUrl = error.auth_url;
+      if (authUrl.indexOf('?') === -1) {
+        authUrl += '?next=' + encodeURIComponent(document.location.pathname);
+      } else {
+        authUrl += '&next=' + encodeURIComponent(document.location.pathname);
+      }
       return (
         <div>
           <div className="alert alert-warning m-b-1">
             {'You need to associate an identity with ' + error.title +
              ' before you can create issues with this service.'}
           </div>
-          <a className="btn btn-primary" href={error.auth_url}>
+          <a className="btn btn-primary" href={authUrl}>
             Associate Identity
           </a>
         </div>
diff --git a/src/sentry/templates/sentry/account/identities.html b/src/sentry/templates/sentry/account/identities.html
index c89fee1e7d..76cb3d8ab4 100644
--- a/src/sentry/templates/sentry/account/identities.html
+++ b/src/sentry/templates/sentry/account/identities.html
@@ -26,7 +26,8 @@
                     <tr>
                         <td>{{ identity.provider|auth_provider_label }}</td>
                         <td style="text-align: center;">
-                            <form method="post" action="{% url 'socialauth_disconnect_individual' identity.provider identity.id %}?next={% filter urlencode %}{% absolute_uri request.path %}{% endfilter %}">
+                            <form method="post"
+                                  action="{% url 'sentry-account-disconnect-identity' identity.provider identity.id %}">
                                 {% csrf_token %}
                                 <button type="submit" class="btn btn-default btn-sm">Disconnect</button>
                             </form>
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index bf0569ee1e..a75ed9dbf7 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -7,6 +7,7 @@ sentry.web.frontend.accounts
 """
 from __future__ import absolute_import
 
+from django.conf import settings
 from django.contrib import messages
 from django.contrib.auth import login as login_user, authenticate
 from django.core.context_processors import csrf
@@ -17,6 +18,8 @@ from django.views.decorators.cache import never_cache
 from django.views.decorators.csrf import csrf_protect
 from django.utils import timezone
 from django.utils.translation import ugettext as _
+from social_auth.decorators import dsa_view
+from social_auth.models import UserSocialAuth
 from sudo.decorators import sudo_required
 
 from sentry.models import (
@@ -153,7 +156,7 @@ def confirm_email(request, user_id, hash):
 @never_cache
 @login_required
 @transaction.atomic
-def settings(request):
+def account_settings(request):
     user = request.user
 
     form = AccountSettingsForm(
@@ -294,8 +297,6 @@ def email_unsubscribe_project(request, project_id):
 @never_cache
 @login_required
 def list_identities(request):
-    from social_auth.models import UserSocialAuth
-
     identity_list = list(UserSocialAuth.objects.filter(user=request.user))
 
     AUTH_PROVIDERS = auth.get_auth_providers()
@@ -309,6 +310,34 @@ def list_identities(request):
     return render_to_response('sentry/account/identities.html', context, request)
 
 
+@csrf_protect
+@never_cache
+@login_required
+@dsa_view()
+def disconnect_identity(request, backend, identity_id):
+    if request.method != 'POST':
+        raise NotImplementedError
+
+    backend.disconnect(request.user, identity_id)
+
+    # XXX(dcramer): we experienced an issue where the identity still existed,
+    # and given that this is a cheap query, lets error hard in that case
+    assert not UserSocialAuth.objects.filter(
+        user=request.user,
+        id=identity_id,
+    ).exists()
+
+    backend_name = backend.AUTH_BACKEND.name
+
+    messages.add_message(
+        request, messages.SUCCESS,
+        'Your {} association has been revoked.'.format(
+            settings.AUTH_PROVIDER_LABELS.get(backend_name, backend_name),
+        )
+    )
+    return HttpResponseRedirect(reverse('sentry-account-settings-identities'))
+
+
 @csrf_protect
 @never_cache
 @login_required
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index c17679ab85..b7b3c119bb 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -238,7 +238,7 @@ urlpatterns += patterns(
         name='sentry-account-recover'),
     url(r'^account/recover/confirm/(?P<user_id>[\d]+)/(?P<hash>[0-9a-zA-Z]+)/$', accounts.recover_confirm,
         name='sentry-account-recover-confirm'),
-    url(r'^account/settings/$', accounts.settings,
+    url(r'^account/settings/$', accounts.account_settings,
         name='sentry-account-settings'),
     url(r'^account/settings/2fa/$', accounts.twofactor_settings,
         name='sentry-account-settings-2fa'),
@@ -260,6 +260,9 @@ urlpatterns += patterns(
         name='sentry-account-settings-appearance'),
     url(r'^account/settings/identities/$', accounts.list_identities,
         name='sentry-account-settings-identities'),
+    url(r'^account/settings/identities/(?P<backend>[^\/]+)/(?P<identity_id>[^\/]+)/disconnect/$',
+        accounts.disconnect_identity,
+        name='sentry-account-disconnect-identity'),
     url(r'^account/settings/notifications/$', AccountNotificationView.as_view(),
         name='sentry-account-settings-notifications'),
     url(r'^account/settings/security/$', AccountSecurityView.as_view(),
diff --git a/src/social_auth/decorators.py b/src/social_auth/decorators.py
index e1bce4e57a..f7f0cd37e8 100644
--- a/src/social_auth/decorators.py
+++ b/src/social_auth/decorators.py
@@ -3,12 +3,9 @@ from __future__ import absolute_import
 from functools import wraps
 
 from django.core.urlresolvers import reverse
-from django.views.decorators.http import require_POST
-from django.views.decorators.csrf import csrf_protect
 
 from social_auth.backends import get_backend
 from social_auth.exceptions import WrongBackend
-from social_auth.utils import setting
 
 
 def dsa_view(redirect_name=None):
@@ -31,13 +28,3 @@ def dsa_view(redirect_name=None):
             return func(request, request.social_auth_backend, *args, **kwargs)
         return wrapper
     return dec
-
-
-def disconnect_view(func):
-    @wraps(func)
-    def wrapper(request, *args, **kwargs):
-        return func(request, *args, **kwargs)
-
-    if setting('SOCIAL_AUTH_FORCE_POST_DISCONNECT'):
-        wrapper = require_POST(csrf_protect(wrapper))
-    return wrapper
diff --git a/src/social_auth/urls.py b/src/social_auth/urls.py
index 67653b9a2f..346675f059 100644
--- a/src/social_auth/urls.py
+++ b/src/social_auth/urls.py
@@ -6,7 +6,7 @@ except ImportError:
     # for Django version less then 1.4
     from django.conf.urls.defaults import patterns, url
 
-from social_auth.views import auth, complete, disconnect
+from social_auth.views import auth, complete
 
 
 urlpatterns = patterns('',
@@ -15,10 +15,4 @@ urlpatterns = patterns('',
         name='socialauth_associate'),
     url(r'^associate/complete/(?P<backend>[^/]+)/$', complete,
         name='socialauth_associate_complete'),
-
-    # disconnection
-    url(r'^disconnect/(?P<backend>[^/]+)/$', disconnect,
-        name='socialauth_disconnect'),
-    url(r'^disconnect/(?P<backend>[^/]+)/(?P<association_id>[^/]+)/$',
-        disconnect, name='socialauth_disconnect_individual'),
 )
diff --git a/src/social_auth/views.py b/src/social_auth/views.py
index 5c5dc98e93..e77023f1dd 100644
--- a/src/social_auth/views.py
+++ b/src/social_auth/views.py
@@ -8,6 +8,7 @@ Notes:
 from __future__ import absolute_import
 
 from sudo.utils import is_safe_url
+from django.conf import settings
 from django.http import HttpResponseRedirect, HttpResponse
 from django.contrib.auth import login, REDIRECT_FIELD_NAME
 from django.contrib.auth.decorators import login_required
@@ -17,7 +18,7 @@ from six.moves.urllib.parse import quote
 
 from social_auth.utils import (
     setting, backend_setting, clean_partial_pipeline)
-from social_auth.decorators import dsa_view, disconnect_view
+from social_auth.decorators import dsa_view
 
 
 DEFAULT_REDIRECT = setting('SOCIAL_AUTH_LOGIN_REDIRECT_URL',
@@ -50,6 +51,15 @@ def associate_complete(request, backend, *args, **kwargs):
     redirect_value = request.session.get(REDIRECT_FIELD_NAME, '')
     user = auth_complete(request, backend, request.user, *args, **kwargs)
 
+    backend_name = backend.AUTH_BACKEND.name
+
+    messages.add_message(
+        request, messages.SUCCESS,
+        'You have linked your account with {}.'.format(
+            settings.AUTH_PROVIDER_LABELS.get(backend_name, backend_name),
+        )
+    )
+
     if not user:
         url = backend_setting(backend, 'LOGIN_ERROR_URL', LOGIN_ERROR_URL)
     elif isinstance(user, HttpResponse):
@@ -63,27 +73,6 @@ def associate_complete(request, backend, *args, **kwargs):
     return HttpResponseRedirect(url)
 
 
-@login_required
-@dsa_view()
-@disconnect_view
-def disconnect(request, backend, association_id=None):
-    """Disconnects given backend from current logged in user."""
-    backend.disconnect(request.user, association_id)
-    data = request.REQUEST
-    if REDIRECT_FIELD_NAME in data:
-        redirect = data[REDIRECT_FIELD_NAME]
-        # NOTE: django-sudo's `is_safe_url` is much better at catching bad
-        # redirections to different domains than social_auth's
-        # `sanitize_redirect` call.
-        if not is_safe_url(redirect, host=request.get_host()):
-            redirect = DEFAULT_REDIRECT
-    else:
-        redirect = backend_setting(backend, 'SOCIAL_AUTH_DISCONNECT_REDIRECT_URL')
-        if not redirect:
-            redirect = DEFAULT_REDIRECT
-    return HttpResponseRedirect(redirect)
-
-
 def auth_process(request, backend):
     """Authenticate using social backend"""
     data = request.POST if request.method == 'POST' else request.GET
