commit aa340d8571d400eff41792cebba7d71c3ac1fa43
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Fri Apr 19 09:50:14 2019 -0700

    use sentry-apps endpoint to get published apps (#12857)

diff --git a/src/sentry/models/sentryapp.py b/src/sentry/models/sentryapp.py
index 8982a645bb..35d068c6e0 100644
--- a/src/sentry/models/sentryapp.py
+++ b/src/sentry/models/sentryapp.py
@@ -6,7 +6,6 @@ import hmac
 import itertools
 
 from django.db import models
-from django.db.models import Q
 from django.utils import timezone
 from django.template.defaultfilters import slugify
 from hashlib import sha256
@@ -119,10 +118,7 @@ class SentryApp(ParanoidModel, HasApiScopes):
         if is_active_superuser(request):
             return cls.objects.all()
 
-        user = request.user
-        return cls.objects.filter(
-            Q(status=SentryAppStatus.PUBLISHED) | Q(owner__in=user.get_orgs()),
-        )
+        return cls.objects.filter(status=SentryAppStatus.PUBLISHED)
 
     @property
     def organizations(self):
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 9f4b5ea9ec..c573d7b34a 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -48,7 +48,8 @@ class OrganizationIntegrations extends AsyncComponent {
     }
     return [
       ...endpoints,
-      ['applications', `/organizations/${orgId}/sentry-apps/`],
+      ['orgOwnedApps', `/organizations/${orgId}/sentry-apps/`],
+      ['publishedApps', '/sentry-apps/'],
       ['appInstalls', `/organizations/${orgId}/sentry-app-installations/`],
     ];
   }
@@ -172,7 +173,8 @@ class OrganizationIntegrations extends AsyncComponent {
   }
 
   renderBody() {
-    const {reloading, applications, appInstalls} = this.state;
+    const {reloading, orgOwnedApps, publishedApps, appInstalls} = this.state;
+    const applications = (publishedApps || []).concat(orgOwnedApps || []);
 
     const installedProviders = this.providers
       .filter(p => p.isInstalled)
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index 5b5691ce84..8d12f22217 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -30,7 +30,8 @@ describe('OrganizationIntegrations', () => {
   let params;
   let routerContext;
 
-  let sentryAppsRequest;
+  let publishedSentryAppsRequest;
+  let orgOwnedSentryAppsRequest;
   let sentryInstallsRequest;
 
   let focus;
@@ -81,7 +82,12 @@ describe('OrganizationIntegrations', () => {
       body: [],
     });
 
-    sentryAppsRequest = Client.addMockResponse({
+    publishedSentryAppsRequest = Client.addMockResponse({
+      url: '/sentry-apps/',
+      body: [],
+    });
+
+    orgOwnedSentryAppsRequest = Client.addMockResponse({
       url: `/organizations/${org.slug}/sentry-apps/`,
       body: [],
     });
@@ -188,7 +194,7 @@ describe('OrganizationIntegrations', () => {
   describe('render()', () => {
     describe('without integrations', () => {
       it('renders with sentry-apps', () => {
-        sentryAppsRequest = Client.addMockResponse({
+        orgOwnedSentryAppsRequest = Client.addMockResponse({
           url: `/organizations/${org.slug}/sentry-apps/`,
           body: [sentryApp],
         });
@@ -200,12 +206,13 @@ describe('OrganizationIntegrations', () => {
           routerContext
         );
 
-        expect(sentryAppsRequest).toHaveBeenCalled();
+        expect(publishedSentryAppsRequest).toHaveBeenCalled();
+        expect(orgOwnedSentryAppsRequest).toHaveBeenCalled();
         expect(sentryInstallsRequest).toHaveBeenCalled();
       });
 
       it('renders a Learn More modal for Sentry Apps', () => {
-        sentryAppsRequest = Client.addMockResponse({
+        orgOwnedSentryAppsRequest = Client.addMockResponse({
           url: `/organizations/${org.slug}/sentry-apps/`,
           body: [sentryApp],
         });
@@ -228,7 +235,8 @@ describe('OrganizationIntegrations', () => {
       });
 
       it('Does`t hit sentry apps endpoints when sentry-apps isn`t present', () => {
-        expect(sentryAppsRequest).not.toHaveBeenCalled();
+        expect(orgOwnedSentryAppsRequest).not.toHaveBeenCalled();
+        expect(publishedSentryAppsRequest).not.toHaveBeenCalled();
         expect(sentryInstallsRequest).not.toHaveBeenCalled();
       });
 
diff --git a/tests/sentry/api/endpoints/test_sentry_apps.py b/tests/sentry/api/endpoints/test_sentry_apps.py
index 05a9dda81a..222bbefd19 100644
--- a/tests/sentry/api/endpoints/test_sentry_apps.py
+++ b/tests/sentry/api/endpoints/test_sentry_apps.py
@@ -79,32 +79,15 @@ class GetSentryAppsTest(SentryAppsTest):
         } in json.loads(response.content)
 
     @with_feature('organizations:sentry-apps')
-    def test_users_see_unpublished_apps_their_org_owns(self):
+    def test_users_dont_see_unpublished_apps_their_org_owns(self):
         self.login_as(user=self.user)
 
         response = self.client.get(self.url, format='json')
 
         assert response.status_code == 200
-        assert {
-            'name': self.unpublished_app.name,
-            'author': self.unpublished_app.author,
-            'slug': self.unpublished_app.slug,
-            'scopes': [],
-            'events': [],
-            'status': self.unpublished_app.get_status_display(),
-            'uuid': self.unpublished_app.uuid,
-            'webhookUrl': self.unpublished_app.webhook_url,
-            'redirectUrl': self.unpublished_app.redirect_url,
-            'isAlertable': self.unpublished_app.is_alertable,
-            'clientId': self.unpublished_app.application.client_id,
-            'clientSecret': self.unpublished_app.application.client_secret,
-            'overview': self.unpublished_app.overview,
-            'schema': {},
-            'owner': {
-                'id': self.org.id,
-                'slug': self.org.slug,
-            }
-        } in json.loads(response.content)
+        assert self.unpublished_app.uuid not in [
+            a['uuid'] for a in response.data
+        ]
 
     @with_feature('organizations:sentry-apps')
     def test_users_dont_see_unpublished_apps_outside_their_orgs(self):
