commit e692fe86048398975570ae78ca9b6d53f55a439a
Author: KKaempen <32143113+KKaempen@users.noreply.github.com>
Date:   Fri Jul 10 13:03:49 2020 -0500

    feat(msteams): Create better welcome message (#19792)
    
    Make the welcome message when a user installs to Microsoft Teams look a little prettier than before. Could still use a little bit of tweaking.
    
    Fixes API-1120

diff --git a/src/sentry/integrations/msteams/client.py b/src/sentry/integrations/msteams/client.py
index d5a0902cfd..52b549e8e8 100644
--- a/src/sentry/integrations/msteams/client.py
+++ b/src/sentry/integrations/msteams/client.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import
 
 from six.moves.urllib.parse import urlencode
 from sentry.integrations.client import ApiClient
+from sentry.utils.http import absolute_uri
+from sentry.utils.signing import sign
 
 
 class MsTeamsClient(ApiClient):
@@ -29,6 +31,67 @@ class MsTeamsClient(ApiClient):
     def send_message(self, conversation_id, data):
         return self.post(self.ACTIVITY_URL % conversation_id, data=data)
 
+    def send_welcome_message(self, conversation_id):
+        # sign the params so this can't be forged
+        signed_params = sign(team_id=conversation_id)
+        url = u"%s?signed_params=%s" % (
+            absolute_uri("/extensions/msteams/configure/"),
+            signed_params,
+        )
+        # TODO: Refactor message creation
+        # TODO: Tweak welcome message appearance to perfection
+        logo = {
+            "type": "Image",
+            "url": "https://sentry-brand.storage.googleapis.com/sentry-glyph-black.png",
+            "size": "Medium",
+        }
+        welcome = {
+            "type": "TextBlock",
+            "weight": "Bolder",
+            "size": "Large",
+            "text": "Welcome to Sentry for Teams!",
+            "wrap": True,
+        }
+        description = {
+            "type": "TextBlock",
+            "text": "The Sentry app for Teams allows you to be notified in real-time when an error pops up, using customizable alert rules.",
+            "wrap": True,
+        }
+        instruction = {
+            "type": "TextBlock",
+            "text": "Please click [here](%s) to get started with using Sentry for Microsoft Teams."
+            % url,
+            "wrap": True,
+        }
+        card = {
+            "type": "AdaptiveCard",
+            "body": [
+                {
+                    "type": "ColumnSet",
+                    "columns": [
+                        {"type": "Column", "items": [logo], "width": "auto"},
+                        {
+                            "type": "Column",
+                            "items": [welcome],
+                            "width": "stretch",
+                            "verticalContentAlignment": "Center",
+                        },
+                    ],
+                },
+                description,
+                instruction,
+            ],
+            "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
+            "version": "1.2",
+        }
+        payload = {
+            "type": "message",
+            "attachments": [
+                {"contentType": "application/vnd.microsoft.card.adaptive", "content": card}
+            ],
+        }
+        self.send_message(conversation_id, payload)
+
 
 class OauthMsTeamsClient(ApiClient):
     base_url = "https://login.microsoftonline.com/botframework.com"
diff --git a/src/sentry/integrations/msteams/webhook.py b/src/sentry/integrations/msteams/webhook.py
index dac21230a6..1fc5442067 100644
--- a/src/sentry/integrations/msteams/webhook.py
+++ b/src/sentry/integrations/msteams/webhook.py
@@ -5,8 +5,6 @@ import logging
 from django.views.decorators.csrf import csrf_exempt
 from sentry.api.base import Endpoint
 from sentry.utils.compat import filter
-from sentry.utils.http import absolute_uri
-from sentry.utils.signing import sign
 from sentry.web.decorators import transaction_start
 
 from .client import MsTeamsClient
@@ -46,17 +44,6 @@ class MsTeamsWebhookEndpoint(Endpoint):
                 # send welcome message to the team
                 team_id = channel_data["team"]["id"]
                 client = MsTeamsClient()
-                # sign the params so this can't be forged
-                signed_params = sign(team_id=team_id)
-                url = u"%s?signed_params=%s" % (
-                    absolute_uri("/extensions/msteams/configure/"),
-                    signed_params,
-                )
-                # TODO: Better message
-                payload = {
-                    "type": "message",
-                    "text": url,
-                }
-                client.send_message(team_id, payload)
+                client.send_welcome_message(team_id)
 
         return self.respond(status=200)
