commit 54a4c5b5684ddd7cb44e166bc0315d274c8d038d
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Dec 14 23:53:10 2014 -0800

    Correct ability to skip project creation

diff --git a/src/sentry/web/frontend/create_team.py b/src/sentry/web/frontend/create_team.py
index 6a25eb59f8..4b56679244 100644
--- a/src/sentry/web/frontend/create_team.py
+++ b/src/sentry/web/frontend/create_team.py
@@ -14,9 +14,10 @@ from sentry.web.frontend.generic import missing_perm
 
 
 class Step(object):
-    def __init__(self, form, template):
+    def __init__(self, form, template, can_skip=False):
         self.form = form
         self.template = template
+        self.can_skip = can_skip
 
     def __repr__(self):
         return '<%s: form=%s template=%s>' % (
@@ -33,7 +34,7 @@ class CreateTeamView(OrganizationView):
 
     steps = [
         Step(form=AddTeamForm, template='create-team-step-team.html'),
-        Step(form=AddProjectForm, template='create-team-step-project.html'),
+        Step(form=AddProjectForm, template='create-team-step-project.html', can_skip=True),
     ]
 
     # A lot of this logic is inspired by Django's FormWizard, but unfortunately
@@ -61,7 +62,12 @@ class CreateTeamView(OrganizationView):
             return self.render_validation_error(request, organization)
 
         op = request.POST.get('op')
-        form = self.get_step_form(current_step, request.POST or None)
+        if op != 'continue':
+            data = None
+        else:
+            data = request.POST or None
+
+        form = self.get_step_form(current_step, data)
         if op == 'continue' and form.is_valid():
             session_data['step%d' % current_step] = form.cleaned_data
             request.session[self.session_key] = session_data
@@ -137,7 +143,9 @@ class CreateTeamView(OrganizationView):
                     with_prefix=False,
                 )
 
-            if not form.is_valid():
+            if self.steps[index].can_skip and not form.data:
+                pass
+            elif not form.is_valid():
                 logging.warning('step %d (%s) did not validate; resetting create team wizard',
                               index, type(form).__name__)
                 return self.render_validation_error(request, organization)
@@ -152,8 +160,13 @@ class CreateTeamView(OrganizationView):
     def save(self, request, organization, all_forms):
         team = all_forms[0].save(request.user, organization, request.META['REMOTE_ADDR'])
 
-        project = all_forms[1].save(request.user, team, request.META['REMOTE_ADDR'])
+        if all_forms[1].is_valid():
+            project = all_forms[1].save(request.user, team, request.META['REMOTE_ADDR'])
+
+            url = reverse('sentry-stream', args=[organization.slug, project.slug]) + '?newinstall=1'
+        else:
+            messages.success(request, 'Your new team was created successfully.')
 
-        url = reverse('sentry-stream', args=[organization.slug, project.slug])
+            url = reverse('sentry-organization-home', args=[organization.slug])
 
-        return self.redirect(url + '?newinstall=1')
+        return self.redirect(url)
diff --git a/tests/sentry/web/frontend/test_create_team.py b/tests/sentry/web/frontend/test_create_team.py
index ba36e99806..17ad207eb5 100644
--- a/tests/sentry/web/frontend/test_create_team.py
+++ b/tests/sentry/web/frontend/test_create_team.py
@@ -53,7 +53,7 @@ class CreateTeamTest(TestCase):
         assert resp.context['form']
         assert type(resp.context['form']) == AddProjectForm
 
-    def test_step_2_valid_params(self):
+    def test_step_1_valid_params(self):
         organization = self.create_organization()
 
         path = reverse('sentry-create-team', args=[organization.slug])
@@ -85,3 +85,29 @@ class CreateTeamTest(TestCase):
         redirect_uri = reverse('sentry-stream', args=[organization.slug, project.slug])
 
         assert resp['Location'] == 'http://testserver%s?newinstall=1' % (redirect_uri,)
+
+    def test_step_1_skip(self):
+        organization = self.create_organization()
+
+        path = reverse('sentry-create-team', args=[organization.slug])
+
+        self.login_as(self.user)
+
+        self.session['ctwizard'] = {
+            'step0': {'name': 'bar'},
+        }
+        self.save_session()
+
+        resp = self.client.post(path, {
+            'op': 'skip',
+            'step': '1',
+        })
+        assert resp.status_code == 302
+
+        team = Team.objects.get(organization=organization)
+
+        assert team.name == 'bar'
+
+        redirect_uri = reverse('sentry-organization-home', args=[organization.slug])
+
+        assert resp['Location'] == 'http://testserver%s' % (redirect_uri,)
