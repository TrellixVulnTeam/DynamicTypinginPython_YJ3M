commit aba95002565cb4bff6228026696f28e3e29a3bf9
Author: Mark Story <mark@sentry.io>
Date:   Tue Oct 15 09:51:03 2019 -0400

    fix(discover2) Fix issue column not working in reference event (#15032)
    
    The issue column needs to be in the eventstore list in order to be used
    in a reference event. I've added a failing test for transaction
    properties that could end up in user queries. These don't work yet as
    eventstore.get_event_by_id() is not dataset aware yet.
    
    Fixes SENTRY-CZD
    Fixes SEN-1147

diff --git a/src/sentry/eventstore/base.py b/src/sentry/eventstore/base.py
index 6a71b13455..6fee32cb56 100644
--- a/src/sentry/eventstore/base.py
+++ b/src/sentry/eventstore/base.py
@@ -10,6 +10,7 @@ class Columns(Enum):
     # TODO add all the other columns.
     EVENT_ID = "event_id"
     GROUP_ID = "group_id"
+    ISSUE = "issue"
     PROJECT_ID = "project_id"
     TIMESTAMP = "timestamp"
     CULPRIT = "culprit"
diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 701a15a992..3ddbdc6539 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -130,16 +130,12 @@ TRANSACTIONS_SENTRY_SNUBA_MAP = {
     "title": "transaction_name",
     "message": "transaction_name",
     "transaction": "transaction_name",
-    "transaction.name": "transaction_name",
     "transaction.op": "transaction_op",
-    "transaction_op": "transaction_op",
     "platform.name": "platform",
     "environment": "environment",
     "release": "release",
     # Time related properties
     "transaction.duration": "duration",
-    "transaction.start_time": "start_ts",
-    "transaction.end_time": "finish_ts",
     # User
     "user": "user",
     "user.id": "user_id",
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index ee77665adb..267c72f0de 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -1342,3 +1342,30 @@ class GetReferenceEventConditionsTest(SnubaTestCase, TestCase):
             ["tags[gpu.name]", "=", "nvidia 8600"],
             ["tags[browser.name]", "=", "Firefox"],
         ]
+
+    def test_issue_field(self):
+        event = self.store_event(
+            data={
+                "message": "oh no!",
+                "timestamp": iso_format(before_now(seconds=1)),
+                "contexts": {
+                    "os": {"version": "10.14.6", "type": "os", "name": "Mac OS X"},
+                    "browser": {"type": "browser", "name": "Firefox", "version": "69"},
+                    "gpu": {"type": "gpu", "name": "nvidia 8600", "vendor": "nvidia"},
+                },
+            },
+            project_id=self.project.id,
+        )
+        self.conditions["groupby"] = ["issue.id"]
+        slug = "{}:{}".format(self.project.slug, event.event_id)
+        result = get_reference_event_conditions(self.conditions, slug)
+        assert result == [["issue", "=", event.group_id]]
+
+    @pytest.mark.xfail(reason="This requires eventstore.get_event_by_id to work with transactions")
+    def test_transcation_field(self):
+        data = load_data("transaction")
+        event = self.store_event(data=data, project_id=self.project.id)
+        self.conditions["groupby"] = ["transaction.op", "transaction.duration"]
+        slug = "{}:{}".format(self.project.slug, event.event_id)
+        result = get_reference_event_conditions(self.conditions, slug)
+        assert result == [["transaction_op", "=", "db"], ["duration", "=", 2]]
diff --git a/tests/sentry/utils/test_snuba.py b/tests/sentry/utils/test_snuba.py
index 3b13053a7d..ed2a66a99c 100644
--- a/tests/sentry/utils/test_snuba.py
+++ b/tests/sentry/utils/test_snuba.py
@@ -570,9 +570,6 @@ class DetectDatasetTest(TestCase):
         query = {"conditions": [["transaction", "=", "api.do_thing"]]}
         assert detect_dataset(query) == Dataset.Events
 
-        query = {"conditions": [["transaction.name", "=", "api.do_thing"]]}
-        assert detect_dataset(query) == Dataset.Transactions
-
         query = {"conditions": [["transaction.duration", ">", "3"]]}
         assert detect_dataset(query) == Dataset.Transactions
 
@@ -605,5 +602,5 @@ class DetectDatasetTest(TestCase):
         query = {"aggregations": [["quantileTiming(0.95)", "transaction.duration", "p95_duration"]]}
         assert detect_dataset(query) == Dataset.Transactions
 
-        query = {"aggregations": [["uniq", "transaction.name", "uniq_transaction"]]}
+        query = {"aggregations": [["uniq", "trace_id", "uniq_trace_id"]]}
         assert detect_dataset(query) == Dataset.Transactions
