commit 33a75e72ada499fcf82ff722ae218cb1cc494dc3
Author: ted kaemming <ted@kaemming.com>
Date:   Thu May 25 12:34:24 2017 -0600

    Fix query routing for TSDB distinct counter and frequency table delete operations. (#5451)
    
    This was an oversight as part of GH-5317, and wasn't caught in tests because the test suite didn't actually run the tests against multiple databases. The easiest way to test this (other than depending on the tests to have the correct behavior) is to cross-reference the routing logic in the other mutation commands and make sure it's consistent.

diff --git a/src/sentry/tsdb/redis.py b/src/sentry/tsdb/redis.py
index a5822e4f4c..34e8961fc7 100644
--- a/src/sentry/tsdb/redis.py
+++ b/src/sentry/tsdb/redis.py
@@ -506,12 +506,12 @@ class RedisTSDB(BaseTSDB):
     def delete_distinct_counts(self, models, keys, start=None, end=None, timestamp=None):
         rollups = self.get_active_series(start, end, timestamp)
 
-        with self.cluster.map() as client:
+        with self.cluster.fanout() as client:
             for rollup, series in rollups.items():
                 for timestamp in series:
                     for model in models:
                         for key in keys:
-                            client.delete(
+                            client.target_key(key).delete(
                                 self.make_key(
                                     model,
                                     rollup,
@@ -722,10 +722,11 @@ class RedisTSDB(BaseTSDB):
     def delete_frequencies(self, models, keys, start=None, end=None, timestamp=None):
         rollups = self.get_active_series(start, end, timestamp)
 
-        with self.cluster.map() as client:
+        with self.cluster.fanout() as client:
             for rollup, series in rollups.items():
                 for timestamp in series:
                     for model in models:
                         for key in keys:
+                            c = client.target_key(key)
                             for k in self.make_frequency_table_keys(model, rollup, to_timestamp(timestamp), key):
-                                client.delete(k)
+                                c.delete(k)
diff --git a/tests/sentry/tsdb/test_redis.py b/tests/sentry/tsdb/test_redis.py
index f0f44a3686..b8847720c4 100644
--- a/tests/sentry/tsdb/test_redis.py
+++ b/tests/sentry/tsdb/test_redis.py
@@ -25,8 +25,15 @@ class RedisTSDBTest(TestCase):
             ),
             vnodes=64,
             enable_frequency_sketches=True,
+            hosts={
+                i - 6: {'db': i} for i in xrange(6, 9)
+            },
         )
 
+    def tearDown(self):
+        with self.db.cluster.all() as client:
+            client.flushdb()
+
     def test_make_counter_key(self):
         result = self.db.make_counter_key(TSDBModel.project, 1368889980, 1)
         assert result == 'ts:1:1368889980:1'
