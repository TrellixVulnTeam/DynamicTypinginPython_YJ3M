commit c80749a376f990a7c8a0e944091206a3ba6ce4ae
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 2 15:27:33 2014 -0300

    Update project/team stats behavior to match group

diff --git a/src/sentry/api/endpoints/project_stats.py b/src/sentry/api/endpoints/project_stats.py
index db1c6dfa49..1976e493d0 100644
--- a/src/sentry/api/endpoints/project_stats.py
+++ b/src/sentry/api/endpoints/project_stats.py
@@ -1,15 +1,12 @@
-from datetime import timedelta
-from django.utils import timezone
 from rest_framework.response import Response
 
 from sentry.app import tsdb
-from sentry.api.base import Endpoint
+from sentry.api.base import BaseStatsEndpoint
 from sentry.api.permissions import assert_perm
 from sentry.models import Project
-from sentry.tsdb.base import TSDBModel
 
 
-class ProjectStatsEndpoint(Endpoint):
+class ProjectStatsEndpoint(BaseStatsEndpoint):
     def get(self, request, project_id):
         project = Project.objects.get(
             id=project_id,
@@ -17,11 +14,10 @@ class ProjectStatsEndpoint(Endpoint):
 
         assert_perm(project, request.user)
 
-        days = min(int(request.GET.get('days', 1)), 30)
-
-        end = timezone.now()
-        start = end - timedelta(days=1)
-
-        data = tsdb.get_range(TSDBModel.project, [project.id], start, end)[project.id]
+        data = tsdb.get_range(
+            model=tsdb.models.project,
+            keys=[project.id],
+            **self._parse_args(request)
+        )[project.id]
 
         return Response(data)
diff --git a/src/sentry/api/endpoints/team_stats.py b/src/sentry/api/endpoints/team_stats.py
index 9130f01a1f..7f2ca5464e 100644
--- a/src/sentry/api/endpoints/team_stats.py
+++ b/src/sentry/api/endpoints/team_stats.py
@@ -1,15 +1,12 @@
-from datetime import timedelta
-from django.utils import timezone
 from rest_framework.response import Response
 
 from sentry.app import tsdb
-from sentry.api.base import Endpoint
+from sentry.api.base import BaseStatsEndpoint
 from sentry.api.permissions import assert_perm
 from sentry.models import Team, Project
-from sentry.tsdb.base import TSDBModel
 
 
-class TeamStatsEndpoint(Endpoint):
+class TeamStatsEndpoint(BaseStatsEndpoint):
     def get(self, request, team_id):
         team = Team.objects.get(id=team_id)
 
@@ -19,9 +16,10 @@ class TeamStatsEndpoint(Endpoint):
 
         projects = Project.objects.get_for_user(request.user, team=team)
 
-        end = timezone.now()
-        start = end - timedelta(days=days)
-
-        data = tsdb.get_range(TSDBModel.project, [p.id for p in projects], start, end)
+        data = tsdb.get_range(
+            model=tsdb.models.project,
+            keys=[p.id for p in projects],
+            **self._parse_args(request)
+        )
 
         return Response(data)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 9a4133cb74..4ee929797c 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -69,7 +69,7 @@ urlpatterns = patterns(
     url(r'^projects/(?P<project_id>\d+)/groups/$',
         ProjectGroupIndexEndpoint.as_view(),
         name='sentry-api-0-project-group-index'),
-    url(r'^projects/(?P<project_id>\d+)/groups/$',
+    url(r'^projects/(?P<project_id>\d+)/stats/$',
         ProjectStatsEndpoint.as_view(),
         name='sentry-api-0-project-stats'),
 
diff --git a/tests/sentry/api/endpoints/test_group_stats.py b/tests/sentry/api/endpoints/test_group_stats.py
index 6298a720b5..59855a57ef 100644
--- a/tests/sentry/api/endpoints/test_group_stats.py
+++ b/tests/sentry/api/endpoints/test_group_stats.py
@@ -6,7 +6,6 @@ from sentry.testutils import APITestCase
 
 class GroupStatsTest(APITestCase):
     def test_simple(self):
-        # TODO: ensure this test checks data
         self.login_as(user=self.user)
 
         group1 = self.create_group()
diff --git a/tests/sentry/api/endpoints/test_project_stats.py b/tests/sentry/api/endpoints/test_project_stats.py
index 9752e42a56..0e76e2e697 100644
--- a/tests/sentry/api/endpoints/test_project_stats.py
+++ b/tests/sentry/api/endpoints/test_project_stats.py
@@ -1,18 +1,26 @@
 from django.core.urlresolvers import reverse
+
+from sentry.app import tsdb
 from sentry.testutils import APITestCase
 
 
 class ProjectStatsTest(APITestCase):
     def test_simple(self):
-        # TODO: ensure this test checks data
         self.login_as(user=self.user)
 
-        project = self.create_project(owner=self.user)
+        project1 = self.create_project(owner=self.user, name='foo')
+        project2 = self.create_project(owner=self.user, name='bar')
+
+        tsdb.incr(tsdb.models.project, project1.id, count=3)
+        tsdb.incr(tsdb.models.project, project2.id, count=5)
 
         url = reverse('sentry-api-0-project-stats', kwargs={
-            'project_id': project.id,
+            'project_id': project1.id,
         })
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
-        assert type(response.data) == list
+        assert response.data[-1][1] == 3, response.data
+        for point in response.data[:-1]:
+            assert point[1] == 0
+        assert len(response.data) == 24
diff --git a/tests/sentry/api/endpoints/test_team_stats.py b/tests/sentry/api/endpoints/test_team_stats.py
index 71c7dd9862..0174f9d5f5 100644
--- a/tests/sentry/api/endpoints/test_team_stats.py
+++ b/tests/sentry/api/endpoints/test_team_stats.py
@@ -1,15 +1,22 @@
 from django.core.urlresolvers import reverse
+
+from sentry.app import tsdb
 from sentry.testutils import APITestCase
 
 
 class TeamStatsTest(APITestCase):
     def test_simple(self):
-        # TODO: ensure this test checks data
         self.login_as(user=self.user)
 
-        team = self.create_team(owner=self.user)
-        project_1 = self.create_project(team=team, name='a')  # NOQA
-        project_2 = self.create_project(team=team, name='b')  # NOQA
+        team = self.create_team(owner=self.user, name='foo')
+        project_1 = self.create_project(team=team, name='a')
+        project_2 = self.create_project(team=team, name='b')
+        team_2 = self.create_team(owner=self.user, name='bar')
+        project_3 = self.create_project(team=team_2, name='b')
+
+        tsdb.incr(tsdb.models.project, project_1.id, count=3)
+        tsdb.incr(tsdb.models.project, project_2.id, count=5)
+        tsdb.incr(tsdb.models.project, project_3.id, count=10)
 
         url = reverse('sentry-api-0-team-stats', kwargs={
             'team_id': team.id,
@@ -18,4 +25,15 @@ class TeamStatsTest(APITestCase):
 
         assert response.status_code == 200, response.content
         assert project_1.id in response.data
+        assert response.data[project_1.id][-1][1] == 3, response.data
+        for point in response.data[project_1.id][:-1]:
+            assert point[1] == 0
+        assert len(response.data[project_1.id]) == 24
+
         assert project_2.id in response.data
+        assert response.data[project_2.id][-1][1] == 5, response.data
+        for point in response.data[project_2.id][:-1]:
+            assert point[1] == 0
+        assert len(response.data[project_2.id]) == 24
+
+        assert project_3.id not in response.data
