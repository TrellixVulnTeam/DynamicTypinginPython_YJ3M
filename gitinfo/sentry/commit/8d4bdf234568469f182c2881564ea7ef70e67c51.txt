commit 8d4bdf234568469f182c2881564ea7ef70e67c51
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Mar 12 15:40:02 2018 -0700

    perf(tagstore): Remove a bunch of queries and add caching

diff --git a/src/sentry/tagstore/v2/backend.py b/src/sentry/tagstore/v2/backend.py
index 8683b894bf..9124e6ba8f 100644
--- a/src/sentry/tagstore/v2/backend.py
+++ b/src/sentry/tagstore/v2/backend.py
@@ -151,7 +151,7 @@ class V2TagStorage(TagStorage):
     def get_or_create_tag_key(self, project_id, environment_id, key, **kwargs):
         assert environment_id is not None
 
-        return TagKey.objects.get_or_create(
+        return TagKey.get_or_create(
             project_id=project_id,
             environment_id=environment_id,
             key=key,
@@ -187,7 +187,7 @@ class V2TagStorage(TagStorage):
                 project_id, environment_id, key, **kwargs)
             key_id = tag_key.id
 
-        tv, created = TagValue.objects.get_or_create(
+        tv, created = TagValue.get_or_create(
             project_id=project_id,
             _key_id=key_id,
             value=value,
@@ -244,7 +244,7 @@ class V2TagStorage(TagStorage):
             project_id, environment_id, key, **other_kwargs)
 
         tag_value, _ = self.get_or_create_tag_value(
-            project_id, environment_id, key, value, **other_kwargs)
+            project_id, environment_id, key, value, key_id=tag_key.id, **other_kwargs)
 
         gtv = GroupTagValue.objects.create(
             project_id=project_id,
@@ -266,7 +266,7 @@ class V2TagStorage(TagStorage):
             project_id, environment_id, key, **kwargs)
 
         tag_value, _ = self.get_or_create_tag_value(
-            project_id, environment_id, key, value, **kwargs)
+            project_id, environment_id, key, value, key_id=tag_key.id, **kwargs)
 
         gtv, created = GroupTagValue.objects.get_or_create(
             project_id=project_id,
@@ -494,7 +494,8 @@ class V2TagStorage(TagStorage):
                                         key, value, extra=None, count=1):
         for env in [environment_id, AGGREGATE_ENVIRONMENT_ID]:
             tagkey, _ = self.get_or_create_tag_key(project_id, env, key)
-            tagvalue, _ = self.get_or_create_tag_value(project_id, env, key, value)
+            tagvalue, _ = self.get_or_create_tag_value(
+                project_id, env, key, value, key_id=tagkey.id)
 
             buffer.incr(GroupTagValue,
                         columns={
diff --git a/src/sentry/tagstore/v2/models/tagkey.py b/src/sentry/tagstore/v2/models/tagkey.py
index 151fdb16e7..f94edcd652 100644
--- a/src/sentry/tagstore/v2/models/tagkey.py
+++ b/src/sentry/tagstore/v2/models/tagkey.py
@@ -17,6 +17,8 @@ from sentry.api.serializers import Serializer, register
 from sentry.tagstore import TagKeyStatus
 from sentry.constants import MAX_TAG_KEY_LENGTH
 from sentry.db.models import (Model, BoundedPositiveIntegerField, BoundedBigIntegerField, sane_repr)
+from sentry.utils.cache import cache
+from sentry.utils.hashlib import md5_text
 
 
 class TagKey(Model):
@@ -54,6 +56,27 @@ class TagKey(Model):
             'key': self.key,
         }
 
+    @classmethod
+    def get_cache_key(cls, project_id, environment_id, key):
+        return 'tagkey:1:%s:%s:%s' % (project_id, environment_id, md5_text(key).hexdigest())
+
+    @classmethod
+    def get_or_create(cls, project_id, environment_id, key, **kwargs):
+        cache_key = cls.get_cache_key(project_id, environment_id, key)
+
+        rv = cache.get(cache_key)
+        created = False
+        if rv is None:
+            rv, created = cls.objects.get_or_create(
+                project_id=project_id,
+                environment_id=environment_id,
+                key=key,
+                **kwargs
+            )
+            cache.set(cache_key, rv, 3600)
+
+        return rv, created
+
 
 @register(TagKey)
 class TagKeySerializer(Serializer):
diff --git a/src/sentry/tagstore/v2/models/tagvalue.py b/src/sentry/tagstore/v2/models/tagvalue.py
index e12cfc89d8..ef285dd644 100644
--- a/src/sentry/tagstore/v2/models/tagvalue.py
+++ b/src/sentry/tagstore/v2/models/tagvalue.py
@@ -18,6 +18,8 @@ from sentry.db.models import (
     Model, BoundedPositiveIntegerField, BoundedBigIntegerField, GzippedDictField,
     BaseManager, FlexibleForeignKey, sane_repr
 )
+from sentry.utils.cache import cache
+from sentry.utils.hashlib import md5_text
 
 
 class TagValue(Model):
@@ -75,6 +77,27 @@ class TagValue(Model):
 
         return tagstore.get_tag_value_label(self.key, self.value)
 
+    @classmethod
+    def get_cache_key(cls, project_id, _key_id, value):
+        return 'tagvalue:1:%s:%s:%s' % (project_id, _key_id, md5_text(value).hexdigest())
+
+    @classmethod
+    def get_or_create(cls, project_id, _key_id, value, **kwargs):
+        cache_key = cls.get_cache_key(project_id, _key_id, value)
+
+        rv = cache.get(cache_key)
+        created = False
+        if rv is None:
+            rv, created = cls.objects.get_or_create(
+                project_id=project_id,
+                _key_id=_key_id,
+                value=value,
+                **kwargs
+            )
+            cache.set(cache_key, rv, 3600)
+
+        return rv, created
+
 
 @register(TagValue)
 class TagValueSerializer(Serializer):
