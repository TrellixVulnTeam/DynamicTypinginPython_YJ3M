commit e66278b9ce9493f96892ec6f7746d21d8fed6c82
Author: jeffkwoh <23180853+jeffkwoh@users.noreply.github.com>
Date:   Wed Mar 4 10:07:16 2020 -0800

    expt(workflow/ProjectCreation): Start AlertsDefaultExperiment (#17257)
    
    Experiment name is changed to the actual experiment's name where actual data would be collected.
    Variant names are also changed.
    Sister PR: https://github.com/getsentry/getsentry/pull/3591
    See: https://www.notion.so/sentry/Default-Alert-Options-450bbbc6f83b4ba29350fb9a59cf5746

diff --git a/src/sentry/api/endpoints/project_agnostic_rule_conditions.py b/src/sentry/api/endpoints/project_agnostic_rule_conditions.py
index 7cdc240e7f..2d9363de91 100644
--- a/src/sentry/api/endpoints/project_agnostic_rule_conditions.py
+++ b/src/sentry/api/endpoints/project_agnostic_rule_conditions.py
@@ -21,9 +21,9 @@ class ProjectAgnosticRuleConditionsEndpoint(OrganizationEndpoint):
             return context
 
         experiment_variant = experiments.get(
-            org=organization, experiment_name="AlertDefaultsExperimentTmp"
+            org=organization, experiment_name="AlertDefaultsExperiment"
         )
-        if experiment_variant == "test3Options":
+        if experiment_variant == "3OptionsV1":
             return Response(
                 [
                     info_extractor(rule_cls)
@@ -31,7 +31,7 @@ class ProjectAgnosticRuleConditionsEndpoint(OrganizationEndpoint):
                     if rule_type.startswith("condition/")
                 ]
             )
-        elif experiment_variant == "test2Options":
+        elif experiment_variant == "2OptionsV1":
             return Response(status=status.HTTP_200_OK)
 
         return Response(status=status.HTTP_404_NOT_FOUND)
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 21e92888f9..87be8f6408 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -829,7 +829,7 @@ export type SentryAppComponent = {
 export type ActiveExperiments = {
   TrialUpgradeV2Experiment: 'upgrade' | 'trial' | -1;
   IntegrationDirectoryExperiment: '1' | '0';
-  AlertDefaultsExperimentTmp: 'testControl' | 'test2Options' | 'test3Options';
+  AlertDefaultsExperiment: 'controlV1' | '2OptionsV1' | '3OptionsV1';
 };
 
 type SavedQueryVersions = 1 | 2;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
index 87aed69f31..f93d5da786 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
@@ -66,18 +66,34 @@ class CreateProject extends React.Component {
   }
 
   componentDidMount() {
-    logExperiment({
-      organization: this.props.organization,
-      key: 'AlertDefaultsExperimentTmp',
-      unitName: 'org_id',
-      unitId: parseInt(this.props.organization.id, 10),
-      param: 'variant',
-    });
-    trackAnalyticsEvent({
+    const {organization} = this.props;
+    const alertDefaultsExperimentVariant =
+      organization.experiments?.AlertDefaultsExperiment;
+    const isInAlertDefaultsExperiment = [
+      '2OptionsV1',
+      '3OptionsV1',
+      'controlV1',
+    ].includes(alertDefaultsExperimentVariant);
+
+    if (isInAlertDefaultsExperiment) {
+      logExperiment({
+        organization,
+        key: 'AlertDefaultsExperiment',
+        unitName: 'org_id',
+        unitId: parseInt(organization.id, 10),
+        param: 'variant',
+      });
+    }
+
+    const analyticsEventOptions = {
       eventKey: 'new_project.visited',
       eventName: 'New Project Page Visited',
       org_id: parseInt(this.props.organization.id, 10),
-    });
+    };
+    if (isInAlertDefaultsExperiment) {
+      analyticsEventOptions.alert_defaults_experiment_variant = alertDefaultsExperimentVariant;
+    }
+    trackAnalyticsEvent(analyticsEventOptions);
   }
 
   renderProjectForm = (
diff --git a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
index 2f5f013170..24e640f68b 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
@@ -13,9 +13,9 @@ const NewProject = ({organization}) => (
       <Content>
         <DocumentTitle title="Sentry" />
         <CreateProject
-          hasIssueAlertOptionsEnabled={['test2Options', 'test3Options'].includes(
-            organization.experiments?.AlertDefaultsExperimentTmp
-          )}
+          hasIssueAlertOptionsEnabled={['2Options', '3Options']
+            .map(variant => variant.concat('V1'))
+            .includes(organization.experiments?.AlertDefaultsExperiment)}
         />
       </Content>
     </div>
diff --git a/tests/sentry/api/endpoints/test_project_agnostic_rule_conditions.py b/tests/sentry/api/endpoints/test_project_agnostic_rule_conditions.py
index b6679cedc8..047de3edbe 100644
--- a/tests/sentry/api/endpoints/test_project_agnostic_rule_conditions.py
+++ b/tests/sentry/api/endpoints/test_project_agnostic_rule_conditions.py
@@ -7,7 +7,7 @@ from sentry.testutils import APITestCase
 
 
 class ProjectAgnosticRuleConditionsTest(APITestCase):
-    @patch("sentry.experiments.get", return_value="test3Options")
+    @patch("sentry.experiments.get", return_value="3OptionsV1")
     def test_simple(self, mocked_experiment):
         self.login_as(user=self.user)
         org = self.create_organization(owner=self.user, name="baz")
