commit be0b19ce6cb10a28d283e6c7360d7c31146a6493
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Apr 22 14:24:52 2016 -0700

    Move inbound email settings to optionsstore
    
    Fixes GH-3053

diff --git a/docs/inbound-mail.rst b/docs/inbound-mail.rst
index 4d56619406..f441f012b8 100644
--- a/docs/inbound-mail.rst
+++ b/docs/inbound-mail.rst
@@ -32,17 +32,17 @@ Create a new route in mailgun::
 
 Configure Sentry with the appropriate settings:
 
-.. code-block:: python
+.. code-block:: yaml
 
     # Your Mailgun API key (used to verify incoming webhooks)
-    MAILGUN_API_KEY = ''
+    mail.mailgun-api-key: ''
 
     # Set the SMTP hostname to your configured inbound domain
-    SENTRY_SMTP_HOSTNAME = 'inbound.sentry.example.com'
+    mail.reply-hostname: 'inbound.sentry.example.com'
 
     # Inform Sentry to send the appropriate mail headers to enable
     # incoming replies
-    SENTRY_ENABLE_EMAIL_REPLIES = True
+    mail.enable-replies: true
 
 
 That's it! You'll now be able to respond to activity notifications on
@@ -102,14 +102,14 @@ Configure an Nginx route as an SMTP mail proxy::
 
 And finally, update Sentry with the appropriate settings:
 
-.. code-block:: python
+.. code-block:: yaml
 
     # Set the SMTP hostname to your configured inbound domain
-    SENTRY_SMTP_HOSTNAME = 'inbound.sentry.example.com'
+    mail.reply-hostname: 'inbound.sentry.example.com'
 
     # Inform Sentry to send the appropriate mail headers to enable
     # incoming replies
-    SENTRY_ENABLE_EMAIL_REPLIES = True
+    mail.enable-replies: true
 
 That's it! You'll now be able to respond to activity notifications on
 errors via your email client.
diff --git a/docs/warnings.rst b/docs/warnings.rst
index fcfd262b57..512e5c15f8 100644
--- a/docs/warnings.rst
+++ b/docs/warnings.rst
@@ -108,6 +108,25 @@ Mail
 
         mail.subject-prefix: '[Sentry] '
 
+.. describe:: SENTRY_ENABLE_EMAIL_REPLIES
+
+    ::
+
+        mail.enable-replies: true
+
+.. describe:: SENTRY_SMTP_HOSTNAME
+
+    ::
+
+        mail.reply-hostname: 'inbound.example.com'
+
+.. describe:: MAILGUN_API_KEY
+
+    ::
+
+        mail.mailgun-api-key: 'abc123'
+
+
 Redis
 ~~~~~
 
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 1f81b47ccc..d42892e276 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -331,8 +331,6 @@ TRELLO_API_SECRET = ''
 BITBUCKET_CONSUMER_KEY = ''
 BITBUCKET_CONSUMER_SECRET = ''
 
-MAILGUN_API_KEY = ''
-
 SOCIAL_AUTH_PIPELINE = (
     'social_auth.backends.pipeline.user.get_username',
     'social_auth.backends.pipeline.social.social_auth_user',
@@ -679,8 +677,6 @@ SENTRY_WEB_PORT = 9000
 SENTRY_WEB_OPTIONS = {}
 
 # SMTP Service
-SENTRY_ENABLE_EMAIL_REPLIES = False
-SENTRY_SMTP_HOSTNAME = 'localhost'
 SENTRY_SMTP_HOST = 'localhost'
 SENTRY_SMTP_PORT = 1025
 
diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index f90781a17c..a8e513808e 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -58,5 +58,7 @@ register('mail.password', flags=FLAG_REQUIRED | FLAG_ALLOW_EMPTY | FLAG_PRIORITI
 register('mail.use-tls', default=False, flags=FLAG_REQUIRED | FLAG_PRIORITIZE_DISK)
 register('mail.subject-prefix', default='[Sentry] ', flags=FLAG_PRIORITIZE_DISK)
 register('mail.from', default='root@localhost', flags=FLAG_REQUIRED | FLAG_PRIORITIZE_DISK)
-# register('mail.enable-replies', default=False, flags=FLAG_PRIORITIZE_DISK)
 register('mail.list-namespace', type=String, default='localhost', flags=FLAG_NOSTORE)
+register('mail.enable-replies', default=False, flags=FLAG_PRIORITIZE_DISK)
+register('mail.reply-hostname', default='', flags=FLAG_ALLOW_EMPTY | FLAG_PRIORITIZE_DISK)
+register('mail.mailgun-api-key', default='', flags=FLAG_ALLOW_EMPTY | FLAG_PRIORITIZE_DISK)
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index d48aeb718a..aa17d62ae0 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -282,6 +282,9 @@ def apply_legacy_settings(settings):
         ('SENTRY_ADMIN_EMAIL', 'system.admin-email'),
         ('SENTRY_URL_PREFIX', 'system.url-prefix'),
         ('SENTRY_SYSTEM_MAX_EVENTS_PER_MINUTE', 'system.rate-limit'),
+        ('SENTRY_ENABLE_EMAIL_REPLIES', 'mail.enable-replies'),
+        ('SENTRY_SMTP_HOSTNAME', 'mail.reply-hostname'),
+        ('MAILGUN_API_KEY', 'mail.mailgun-api-key'),
     ):
         if new not in settings.SENTRY_OPTIONS and hasattr(settings, old):
             warnings.warn(
diff --git a/src/sentry/runner/settings.py b/src/sentry/runner/settings.py
index 04d94fb6e6..042d95c799 100644
--- a/src/sentry/runner/settings.py
+++ b/src/sentry/runner/settings.py
@@ -159,14 +159,6 @@ SENTRY_WEB_OPTIONS = {
     # 'workers': 3,  # the number of web workers
     # 'protocol': 'uwsgi',  # Enable uwsgi protocol instead of http
 }
-
-###############
-# Mail Server #
-###############
-
-# If you're using mailgun for inbound mail, set your API key and configure a
-# route to forward to /api/hooks/mailgun/inbound/
-MAILGUN_API_KEY = ''
 """
 YAML_CONFIG_TEMPLATE = u"""\
 # While a lot of configuration in Sentry can be changed via the UI, for all
@@ -187,6 +179,20 @@ YAML_CONFIG_TEMPLATE = u"""\
 # The email address to send on behalf of
 # mail.from: 'root@localhost'
 
+# If you'd like to configure email replies, enable this.
+# mail.enable-replies: false
+
+# When email-replies are enabled, this value is used in the Reply-To header
+# mail.reply-hostname: ''
+
+# If you're using mailgun for inbound mail, set your API key and configure a
+# route to forward to /api/hooks/mailgun/inbound/
+# mail.mailgun-api-key: ''
+
+###################
+# System Settings #
+###################
+
 # If this file ever becomes compromised, it's important to regenerate your a new key
 # Changing this value will result in all current sessions being invalidated.
 # A new key can be generated with `$ sentry config generate-secret-key`
diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index 47750b1297..131bbc1719 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -37,9 +37,6 @@ from sentry.web.helpers import render_to_string
 
 logger = logging.getLogger(__name__)
 
-SMTP_HOSTNAME = getattr(settings, 'SENTRY_SMTP_HOSTNAME', 'localhost')
-ENABLE_EMAIL_REPLIES = getattr(settings, 'SENTRY_ENABLE_EMAIL_REPLIES', False)
-
 
 class _CaseInsensitiveSigner(Signer):
     """
@@ -85,7 +82,10 @@ def email_to_group_id(address):
 
 def group_id_to_email(group_id):
     signed_data = signer.sign(str(group_id))
-    return '@'.join((signed_data.replace(':', '+'), SMTP_HOSTNAME))
+    return '@'.join((
+        signed_data.replace(':', '+'),
+        options.get('mail.reply-hostname') or get_from_email_domain(),
+    ))
 
 
 def domain_from_email(email):
@@ -283,7 +283,7 @@ class MessageBuilder(object):
         else:
             headers = self.headers.copy()
 
-        if ENABLE_EMAIL_REPLIES and 'X-Sentry-Reply-To' in headers:
+        if options.get('mail.enable-replies') and 'X-Sentry-Reply-To' in headers:
             reply_to = headers['X-Sentry-Reply-To']
         else:
             reply_to = set(reply_to or ())
diff --git a/src/sentry/utils/pytest.py b/src/sentry/utils/pytest.py
index cc8a49b245..a260ca0328 100644
--- a/src/sentry/utils/pytest.py
+++ b/src/sentry/utils/pytest.py
@@ -71,7 +71,7 @@ def pytest_configure(config):
     settings.MIDDLEWARE_CLASSES = tuple(middleware)
 
     # enable draft features
-    settings.SENTRY_ENABLE_EMAIL_REPLIES = True
+    settings.SENTRY_OPTIONS['mail.enable-replies'] = True
 
     settings.SENTRY_ALLOW_ORIGIN = '*'
 
diff --git a/src/sentry/web/frontend/mailgun_inbound_webhook.py b/src/sentry/web/frontend/mailgun_inbound_webhook.py
index 185a89a8bd..758118351b 100644
--- a/src/sentry/web/frontend/mailgun_inbound_webhook.py
+++ b/src/sentry/web/frontend/mailgun_inbound_webhook.py
@@ -4,7 +4,6 @@ from hashlib import sha256
 import hmac
 import logging
 
-from django.conf import settings
 from django.http import HttpResponse
 from django.views.decorators.csrf import csrf_exempt
 from django.views.generic import View
@@ -13,6 +12,7 @@ from django.utils.decorators import method_decorator
 from email_reply_parser import EmailReplyParser
 from email.utils import parseaddr
 
+from sentry import options
 from sentry.tasks.email import process_inbound_email
 from sentry.utils.email import email_to_group_id
 
@@ -34,11 +34,12 @@ class MailgunInboundWebhookView(View):
         signature = request.POST['signature']
         timestamp = request.POST['timestamp']
 
-        if not settings.MAILGUN_API_KEY:
-            logging.error('MAILGUN_API_KEY is not set')
+        key = options.get('mail.mailgun-api-key')
+        if not key:
+            logging.error('mail.mailgun-api-key is not set')
             return HttpResponse(status=500)
 
-        if not self.verify(settings.MAILGUN_API_KEY, token, timestamp, signature):
+        if not self.verify(key, token, timestamp, signature):
             logging.info('Unable to verify signature for mailgun request')
             return HttpResponse(status=403)
 
diff --git a/tests/sentry/runner/test_initializer.py b/tests/sentry/runner/test_initializer.py
index e4efac6a4a..5958b0d7a7 100644
--- a/tests/sentry/runner/test_initializer.py
+++ b/tests/sentry/runner/test_initializer.py
@@ -165,6 +165,9 @@ def test_apply_legacy_settings(settings):
     settings.SENTRY_URL_PREFIX = 'http://url-prefix'
     settings.SENTRY_SYSTEM_MAX_EVENTS_PER_MINUTE = 10
     settings.SENTRY_REDIS_OPTIONS = {'foo': 'bar'}
+    settings.SENTRY_ENABLE_EMAIL_REPLIES = True
+    settings.SENTRY_SMTP_HOSTNAME = 'reply-hostname'
+    settings.MAILGUN_API_KEY = 'mailgun-api-key'
     settings.SENTRY_OPTIONS = {
         'mail.from': 'mail-from',
     }
@@ -177,6 +180,9 @@ def test_apply_legacy_settings(settings):
         'system.rate-limit': 10,
         'redis.clusters': {'default': {'foo': 'bar'}},
         'mail.from': 'mail-from',
+        'mail.enable-replies': True,
+        'mail.reply-hostname': 'reply-hostname',
+        'mail.mailgun-api-key': 'mailgun-api-key',
     }
     assert settings.DEFAULT_FROM_EMAIL == 'mail-from'
 
diff --git a/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py b/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py
index 509cb7c59b..bb41b43563 100644
--- a/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py
+++ b/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py
@@ -18,7 +18,7 @@ class TestMailgunInboundWebhookView(TestCase):
 
     @mock.patch('sentry.web.frontend.mailgun_inbound_webhook.process_inbound_email')
     def test_invalid_signature(self, process_inbound_email):
-        with self.settings(MAILGUN_API_KEY='a' * 32):
+        with self.options({'mail.mailgun-api-key': 'a' * 32}):
             resp = self.client.post(reverse('sentry-mailgun-inbound-hook'), {
                 'To': 'Sentry <%s>' % (self.mailto,),
                 'From': 'David <%s>' % (self.user.email,),
@@ -47,7 +47,7 @@ class TestMailgunInboundWebhookView(TestCase):
         timestamp = '1422513193'
         signature = '414a4705e6c12a39905748549f9135fbe8b739a5b12b2349ee40f31d3ee12f83'
 
-        with self.settings(MAILGUN_API_KEY='a' * 32):
+        with self.options({'mail.mailgun-api-key': 'a' * 32}):
             resp = self.client.post(reverse('sentry-mailgun-inbound-hook'), {
                 'To': 'Sentry <%s>' % (self.mailto,),
                 'From': 'David <%s>' % (self.user.email,),
