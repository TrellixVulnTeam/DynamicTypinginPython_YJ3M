commit a105b5d046a21cd309d3cadf8b4d0ba5784314c1
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 3 17:27:34 2015 -0800

    Standardize responses

diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 77de087068..1e835083b4 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -61,17 +61,18 @@ class Client {
 
   assignTo(params) {
     var path = "/groups/" + params.id + "/";
+    var id = this.uniqueId();
 
-    AggregateListActions.assignTo(params);
+    AggregateListActions.assignTo(id, params.id, params.data);
 
     return this.request(path, {
       method: "PUT",
       data: params.data,
-      success: function(data){
-       AggregateListActions.assignToSuccess(params, data);
+      success: function(response){
+       AggregateListActions.assignToSuccess(id, params.id, response);
       },
       error: function(error){
-       AggregateListActions.assignToError(params, error);
+       AggregateListActions.assignToError(id, params.id, error);
       }
     });
   }
diff --git a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
index 4a444cf765..6c87687dad 100644
--- a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
+++ b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
@@ -137,17 +137,17 @@ var AggregateListStore = Reflux.createStore({
     this.trigger(this.getAllItems());
   },
 
-  onAssignTo(id, email) {
+  onAssignTo(changeId, itemId, data) {
     this.addStatus(itemId, 'assignTo');
   },
 
   // TODO(dcramer): This is not really the best place for this
-  onAssignToError(id, email) {
+  onAssignToError(changeId, itemId, error) {
     this.clearStatus(itemId, 'assignTo');
     AlertActions.addAlert(ERR_CHANGE_ASSIGNEE, 'error');
   },
 
-  onAssignToSuccess(id, email) {
+  onAssignToSuccess(changeId, itemId, response) {
     var item = this.items.get(id);
     if (!item) {
       return;
@@ -164,18 +164,20 @@ var AggregateListStore = Reflux.createStore({
     this.trigger(this.getAllItems());
   },
 
-  onDeleteCompleted(changeId, itemIds) {
+  onDeleteCompleted(changeId, itemIds, response) {
     itemIds.forEach(itemId => {
       this.clearStatus(itemId, 'delete');
     });
     AlertActions.addAlert(OK_SCHEDULE_DELETE, 'success');
+    this.trigger(this.getAllItems());
   },
 
-  onMergeCompleted(changeId, itemIds) {
+  onMergeCompleted(changeId, itemIds, response) {
     itemIds.forEach(itemId => {
       this.clearStatus(itemId, 'merge');
     });
     AlertActions.addAlert(OK_SCHEDULE_MERGE, 'success');
+    this.trigger(this.getAllItems());
   }
 });
 
