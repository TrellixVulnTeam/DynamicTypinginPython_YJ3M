commit 5f4e5548a0070c6e4386fe1b46ba34fff2a57ecf
Author: Scott Cooper <scttcper@gmail.com>
Date:   Mon Jun 29 09:31:28 2020 -0700

    chore(ts): convert sortOptions to typescript (#19538)

diff --git a/src/sentry/static/sentry/app/views/issueList/sortOptions.jsx b/src/sentry/static/sentry/app/views/issueList/sortOptions.jsx
deleted file mode 100644
index 8efa5959f3..0000000000
--- a/src/sentry/static/sentry/app/views/issueList/sortOptions.jsx
+++ /dev/null
@@ -1,83 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
-import {t} from 'app/locale';
-import space from 'app/styles/space';
-
-class IssueListSortOptions extends React.PureComponent {
-  static propTypes = {
-    sort: PropTypes.string,
-    onSelect: PropTypes.func,
-  };
-
-  constructor(...args) {
-    super(...args);
-    this.state = {
-      sortKey: this.props.sort || 'date',
-    };
-  }
-
-  UNSAFE_componentWillReceiveProps(nextProps) {
-    this.setState({
-      sortKey: nextProps.sort || 'date',
-    });
-  }
-
-  getMenuItem = key => (
-    <DropdownItem
-      onSelect={this.onSelect}
-      eventKey={key}
-      isActive={this.state.sortKey === key}
-    >
-      {this.getSortLabel(key)}
-    </DropdownItem>
-  );
-
-  onSelect = sort => {
-    this.setState({sortKey: sort});
-    if (this.props.onSelect) {
-      this.props.onSelect(sort);
-    }
-  };
-
-  getSortLabel = key => {
-    switch (key) {
-      case 'new':
-        return t('First Seen');
-      case 'priority':
-        return t('Priority');
-      case 'freq':
-        return t('Frequency');
-      case 'user':
-        return t('Users');
-      case 'date':
-      default:
-        return t('Last Seen');
-    }
-  };
-
-  render() {
-    return (
-      <Container>
-        <DropdownControl
-          buttonProps={{prefix: t('Sort by')}}
-          label={this.getSortLabel(this.state.sortKey)}
-        >
-          {this.getMenuItem('priority')}
-          {this.getMenuItem('date')}
-          {this.getMenuItem('new')}
-          {this.getMenuItem('freq')}
-          {this.getMenuItem('user')}
-        </DropdownControl>
-      </Container>
-    );
-  }
-}
-
-const Container = styled('div')`
-  margin-right: ${space(0.5)};
-`;
-
-export default IssueListSortOptions;
diff --git a/src/sentry/static/sentry/app/views/issueList/sortOptions.tsx b/src/sentry/static/sentry/app/views/issueList/sortOptions.tsx
new file mode 100644
index 0000000000..481bf0a836
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/issueList/sortOptions.tsx
@@ -0,0 +1,61 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from '@emotion/styled';
+
+import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+
+type Props = {
+  sort: string;
+  onSelect: (sort: string) => void;
+};
+
+const IssueListSortOptions = ({onSelect, sort}: Props) => {
+  const sortKey = sort || 'date';
+
+  const getSortLabel = (key: string) => {
+    switch (key) {
+      case 'new':
+        return t('First Seen');
+      case 'priority':
+        return t('Priority');
+      case 'freq':
+        return t('Frequency');
+      case 'user':
+        return t('Users');
+      case 'date':
+      default:
+        return t('Last Seen');
+    }
+  };
+
+  const getMenuItem = (key: string): React.ReactNode => (
+    <DropdownItem onSelect={onSelect} eventKey={key} isActive={sortKey === key}>
+      {getSortLabel(key)}
+    </DropdownItem>
+  );
+
+  return (
+    <Container>
+      <DropdownControl buttonProps={{prefix: t('Sort by')}} label={getSortLabel(sortKey)}>
+        {getMenuItem('priority')}
+        {getMenuItem('date')}
+        {getMenuItem('new')}
+        {getMenuItem('freq')}
+        {getMenuItem('user')}
+      </DropdownControl>
+    </Container>
+  );
+};
+
+IssueListSortOptions.propTypes = {
+  sort: PropTypes.string.isRequired,
+  onSelect: PropTypes.func.isRequired,
+};
+
+const Container = styled('div')`
+  margin-right: ${space(0.5)};
+`;
+
+export default IssueListSortOptions;
