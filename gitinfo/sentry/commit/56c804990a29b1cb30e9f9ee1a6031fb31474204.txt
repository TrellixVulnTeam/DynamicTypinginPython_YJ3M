commit 56c804990a29b1cb30e9f9ee1a6031fb31474204
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Sep 12 02:13:48 2012 -0700

    Add the ability to reset and disable plugins via the configuration page

diff --git a/src/sentry/plugins/base.py b/src/sentry/plugins/base.py
index e93f3b51fb..380e531edd 100644
--- a/src/sentry/plugins/base.py
+++ b/src/sentry/plugins/base.py
@@ -174,6 +174,10 @@ class IPlugin(local):
                 return False
         return True
 
+    def reset_options(self, project=None, user=None):
+        from .helpers import reset_options
+        return reset_options(self.get_conf_key(), project, user)
+
     def get_option(self, key, project=None, user=None):
         """
         Returns the value of an option in your plugins keyspace, or ``None`` if
diff --git a/src/sentry/plugins/helpers.py b/src/sentry/plugins/helpers.py
index 3dd37074c6..d6782e0afa 100644
--- a/src/sentry/plugins/helpers.py
+++ b/src/sentry/plugins/helpers.py
@@ -11,6 +11,18 @@ from sentry.models import ProjectOption, Option, UserOption
 __all__ = ('set_option', 'get_option', 'unset_option')
 
 
+def reset_options(prefix, project=None, user=None):
+    if user:
+        UserOption.objects.filter(key__startswith='%s:' % (prefix,), project=project, user=user).delete()
+        UserOption.objects.clear_cache()
+    elif project:
+        ProjectOption.objects.filter(key__startswith='%s:' % (prefix,), project=project).delete()
+        ProjectOption.objects.clear_cache()
+    else:
+        Option.objects.filter(key__startswith='%s:' % (prefix,)).delete()
+        Option.objects.clear_cache()
+
+
 def set_option(key, value, project=None, user=None):
     if user:
         result = UserOption.objects.set_value(user, project, key, value)
diff --git a/src/sentry/templates/sentry/plugins/project_configuration.html b/src/sentry/templates/sentry/plugins/project_configuration.html
index fbf033f642..a713ef8113 100644
--- a/src/sentry/templates/sentry/plugins/project_configuration.html
+++ b/src/sentry/templates/sentry/plugins/project_configuration.html
@@ -1,48 +1,3 @@
 {% load i18n %}
-{% load sentry_helpers %}
 
-<div class="row-fluid">
-    <div class="span8">
-        {% if request.GET.success %}
-            <div class="alert alert-success">
-                {% trans "Changes to your project were saved successfully." %}
-                <a class="close" data-dismiss="alert" href="javascript:void(0)">&times;</a>
-            </div>
-        {% endif %}
-
-        {% include form_template %}
-    </div>
-    <div class="span4">
-        <div class="well plugin-meta">
-            <h6>Plugin Information</h6>
-            <dl class="flat">
-                <dt>Name:</dt>
-                <dd>{{ plugin.get_title }}</dd>
-                <dt>Author</dt>
-                <dd>{{ plugin.author }}</dd>
-                {% if plugin.author_url %}
-                    <dt>URL</dt>
-                    <dd><a href="{{ plugin.author_url }}">{{ plugin.author_url|trim_schema }}</a></dd>
-                {% endif %}
-                <dt>Version</dt>
-                <dd>{{ plugin.version }}</dd>
-            </dl>
-            {% if plugin_description %}
-                <h6>Description</h6>
-                <div class="description">
-                    {{ plugin_description|linebreaks }}
-                </div>
-            {% endif %}
-            {% with plugin.get_resource_links as resource_links %}
-                {% if resource_links %}
-                    <ul class="nav nav-list" style="padding:0;">
-                        <li class="nav-header">Resources</li>
-                        {% for label, link in resource_links %}
-                            <li><a href="{{ link }}">{{ label }}</a></li>
-                        {% endfor %}
-                    </ul>
-                {% endif %}
-            {% endwith %}
-        </div>
-    </div>
-</div>
\ No newline at end of file
+{% include form_template %}
diff --git a/src/sentry/templates/sentry/projects/plugins/configure.html b/src/sentry/templates/sentry/projects/plugins/configure.html
index 02c4df3c94..5a203a6407 100644
--- a/src/sentry/templates/sentry/projects/plugins/configure.html
+++ b/src/sentry/templates/sentry/projects/plugins/configure.html
@@ -1,10 +1,59 @@
 {% extends "sentry/projects/manage.html" %}
 
 {% load i18n %}
+{% load sentry_helpers %}
 
 {% block inner %}
     <div class="page-header">
+        <div class="pull-right">
+            <a href="{% url sentry-disable-project-plugin project.slug plugin.slug %}" class="btn">{% trans "Disable Plugin" %}</a>
+            <a href="{% url sentry-reset-project-plugin project.slug plugin.slug %}" class="btn"
+                onclick="return confirm('{% trans "Are you sure you wish to reset all configuration for this plugin?" %}');">{% trans "Reset Configuration" %}</a>
+        </div>
         <h2>{% trans "Configure Plugin" %}</h2>
     </div>
-    {{ view }}
+    <div class="row-fluid">
+        <div class="span8">
+            {% if request.GET.success %}
+                <div class="alert alert-success">
+                    {% trans "Changes to your project were saved successfully." %}
+                    <a class="close" data-dismiss="alert" href="javascript:void(0)">&times;</a>
+                </div>
+            {% endif %}
+            {{ view }}
+        </div>
+        <div class="span4">
+            <div class="well plugin-meta">
+                <h6>Plugin Information</h6>
+                <dl class="flat">
+                    <dt>Name:</dt>
+                    <dd>{{ plugin.get_title }}</dd>
+                    <dt>Author</dt>
+                    <dd>{{ plugin.author }}</dd>
+                    {% if plugin.author_url %}
+                        <dt>URL</dt>
+                        <dd><a href="{{ plugin.author_url }}">{{ plugin.author_url|trim_schema }}</a></dd>
+                    {% endif %}
+                    <dt>Version</dt>
+                    <dd>{{ plugin.version }}</dd>
+                </dl>
+                {% if plugin_description %}
+                    <h6>Description</h6>
+                    <div class="description">
+                        {{ plugin_description|linebreaks }}
+                    </div>
+                {% endif %}
+                {% with plugin.get_resource_links as resource_links %}
+                    {% if resource_links %}
+                        <ul class="nav nav-list" style="padding:0;">
+                            <li class="nav-header">Resources</li>
+                            {% for label, link in resource_links %}
+                                <li><a href="{{ link }}">{{ label }}</a></li>
+                            {% endfor %}
+                        </ul>
+                    {% endif %}
+                {% endwith %}
+            </div>
+        </div>
+    </div>
 {% endblock %}
\ No newline at end of file
diff --git a/src/sentry/web/frontend/projects.py b/src/sentry/web/frontend/projects.py
index fe32f7ca3c..98af3eef21 100644
--- a/src/sentry/web/frontend/projects.py
+++ b/src/sentry/web/frontend/projects.py
@@ -228,6 +228,29 @@ def manage_project_tags(request, project):
     return render_to_response('sentry/projects/manage_tags.html', context, request)
 
 
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def manage_plugins(request, project):
+    result = plugins.first('has_perm', request.user, 'configure_project_plugin', project)
+    if result is False and not request.user.has_perm('sentry.can_change_project'):
+        return HttpResponseRedirect(reverse('sentry'))
+
+    if request.POST:
+        enabled = set(request.POST.getlist('plugin'))
+        for plugin in plugins.all():
+            if plugin.can_enable_for_projects():
+                plugin.set_option('enabled', plugin.slug in enabled, project)
+        return HttpResponseRedirect(request.path + '?success=1')
+
+    context = csrf(request)
+    context.update({
+        'page': 'plugins',
+        'project': project,
+    })
+
+    return render_to_response('sentry/projects/plugins/list.html', context, request)
+
+
 @has_access(MEMBER_OWNER)
 @csrf_protect
 def configure_project_plugin(request, project, slug):
@@ -265,22 +288,59 @@ def configure_project_plugin(request, project, slug):
 
 @has_access(MEMBER_OWNER)
 @csrf_protect
-def manage_plugins(request, project):
-    result = plugins.first('has_perm', request.user, 'configure_project_plugin', project)
-    if result is False and not request.user.has_perm('sentry.can_change_project'):
+def reset_project_plugin(request, project, slug):
+    try:
+        plugin = plugins.get(slug)
+    except KeyError:
+        return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+    if not plugin.is_enabled(project):
+        return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+    result = plugins.first('has_perm', request.user, 'configure_project_plugin', project, plugin)
+    if result is False and not request.user.is_superuser:
         return HttpResponseRedirect(reverse('sentry'))
 
-    if request.POST:
-        enabled = set(request.POST.getlist('plugin'))
-        for plugin in plugins.all():
-            if plugin.can_enable_for_projects():
-                plugin.set_option('enabled', plugin.slug in enabled, project)
-        return HttpResponseRedirect(request.path + '?success=1')
+    plugin.reset_options(project=project)
 
-    context = csrf(request)
-    context.update({
-        'page': 'plugins',
-        'project': project,
-    })
+    return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
 
-    return render_to_response('sentry/projects/plugins/list.html', context, request)
+
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def enable_project_plugin(request, project, slug):
+    try:
+        plugin = plugins.get(slug)
+    except KeyError:
+        return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+    if plugin.is_enabled(project) or not plugin.can_enable_for_projects():
+        return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+    result = plugins.first('has_perm', request.user, 'configure_project_plugin', project, plugin)
+    if result is False and not request.user.is_superuser:
+        return HttpResponseRedirect(reverse('sentry'))
+
+    plugin.set_option('enabled', True, project)
+
+    return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def disable_project_plugin(request, project, slug):
+    try:
+        plugin = plugins.get(slug)
+    except KeyError:
+        return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+    if not plugin.is_enabled(project) or not plugin.can_enable_for_projects():
+        return HttpResponseRedirect(reverse('sentry-configure-project-plugin', args=[project.slug, slug]))
+
+    result = plugins.first('has_perm', request.user, 'configure_project_plugin', project, plugin)
+    if result is False and not request.user.is_superuser:
+        return HttpResponseRedirect(reverse('sentry'))
+
+    plugin.set_option('enabled', False, project)
+
+    return HttpResponseRedirect(reverse('sentry-manage-project', args=[project.slug]))
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index fe3d867e7a..8db7898e1d 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -155,7 +155,7 @@ def plugin_config(plugin, project, request):
         template = plugin.project_conf_template
     else:
         form_class = plugin.site_conf_form
-        form_template =  "sentry/partial/_form.html"
+        form_template = "sentry/partial/_form.html"
         template = plugin.site_conf_template
 
     initials = plugin.get_form_initial(project)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index edfb63f2d7..94a757c542 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -95,6 +95,12 @@ urlpatterns = patterns('',
         name='sentry-manage-project-plugins'),
     url(r'^account/projects/(?P<project_id>[\w_-]+)/plugins/(?P<slug>[\w_-]+)/$', projects.configure_project_plugin,
         name='sentry-configure-project-plugin'),
+    url(r'^account/projects/(?P<project_id>[\w_-]+)/plugins/(?P<slug>[\w_-]+)/reset/$', projects.reset_project_plugin,
+        name='sentry-reset-project-plugin'),
+    url(r'^account/projects/(?P<project_id>[\w_-]+)/plugins/(?P<slug>[\w_-]+)/disable/$', projects.disable_project_plugin,
+        name='sentry-disable-project-plugin'),
+    url(r'^account/projects/(?P<project_id>[\w_-]+)/plugins/(?P<slug>[\w_-]+)/enable/$', projects.enable_project_plugin,
+        name='sentry-enable-project-plugin'),
     url(r'^account/projects/(?P<project_id>[\w_-]+)/remove/$', projects.remove_project,
         name='sentry-remove-project'),
 
