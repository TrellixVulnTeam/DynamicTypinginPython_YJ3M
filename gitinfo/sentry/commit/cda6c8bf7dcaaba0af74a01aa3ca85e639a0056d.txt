commit cda6c8bf7dcaaba0af74a01aa3ca85e639a0056d
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 15 18:35:07 2014 -0700

    Correct default stream params

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 58768df3fe..34adb7e130 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -8,15 +8,9 @@ from sentry.api.base import Endpoint
 from sentry.api.permissions import assert_perm
 from sentry.api.serializers import serialize
 from sentry.db.models.query import create_or_update
-from sentry.constants import STATUS_RESOLVED, STATUS_UNRESOLVED, STATUS_MUTED
+from sentry.constants import STATUS_CHOICES, STATUS_RESOLVED
 from sentry.models import Activity, Group, GroupBookmark, GroupSeen
 
-STATUS_CHOICES = {
-    'resolved': STATUS_RESOLVED,
-    'unresolved': STATUS_UNRESOLVED,
-    'muted': STATUS_MUTED,
-}
-
 
 class GroupSerializer(serializers.Serializer):
     status = serializers.ChoiceField(choices=zip(
diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 1bfa862bd8..46929f9724 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -6,7 +6,7 @@ from sentry.app import search
 from sentry.api.base import Endpoint
 from sentry.api.permissions import assert_perm
 from sentry.api.serializers import serialize
-from sentry.constants import DEFAULT_SORT_OPTION
+from sentry.constants import DEFAULT_SORT_OPTION, STATUS_CHOICES
 from sentry.models import TagKey, Project
 from sentry.utils.dates import parse_date
 
@@ -27,7 +27,10 @@ class ProjectGroupIndexEndpoint(Endpoint):
         }
 
         if request.GET.get('status'):
-            query_kwargs['status'] = int(request.GET['status'])
+            try:
+                query_kwargs['status'] = STATUS_CHOICES[request.GET['status']]
+            except KeyError:
+                return Response('{"error": "invalid status"}', status=400)
 
         if request.user.is_authenticated() and request.GET.get('bookmarks'):
             query_kwargs['bookmarked_by'] = request.user
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 49d6f647b4..8c2b7df834 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -58,6 +58,11 @@ STATUS_LEVELS = (
     (STATUS_RESOLVED, _('Resolved')),
     (STATUS_MUTED, _('Muted')),
 )
+STATUS_CHOICES = {
+    'resolved': STATUS_RESOLVED,
+    'unresolved': STATUS_UNRESOLVED,
+    'muted': STATUS_MUTED,
+}
 
 MEMBER_ADMIN = 0
 MEMBER_USER = 50
diff --git a/src/sentry/static/sentry/app/controllers/projectStream.js b/src/sentry/static/sentry/app/controllers/projectStream.js
index eb67184270..ff9dc8b988 100644
--- a/src/sentry/static/sentry/app/controllers/projectStream.js
+++ b/src/sentry/static/sentry/app/controllers/projectStream.js
@@ -3,6 +3,13 @@
 (function(){
   'use strict';
 
+  function getEndpoint(selectedProject, params) {
+    if (typeof(params.status) === "undefined") {
+      params.status = 'unresolved';
+    }
+    return '/api/0/projects/' + selectedProject.id + '/groups/?' + $.param(params);
+  }
+
   SentryApp.controller('ProjectStreamControlsCtrl', [
     '$scope', '$timeout',
     function($scope, $timeout){
@@ -43,7 +50,9 @@
     function($http, $scope, $timeout, Collection, GroupModel, selectedProject) {
       var timeoutId;
       var pollForChanges = function() {
-        $http.get('/api/0/projects/' + selectedProject.id + '/groups/')
+        var params = app.utils.getQueryParams();
+        var endpoint = getEndpoint(selectedProject, params);
+        $http.get(endpoint)
           .success(function(data){
             var duration = $scope.chartDuration;
             data = $.map(data, GroupModel);
