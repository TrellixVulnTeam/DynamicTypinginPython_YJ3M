commit 7fdcc5fd717b6691686504b1381711f52e541545
Author: Ben Vinegar <benvinegar@users.noreply.github.com>
Date:   Sun Jul 17 13:30:52 2016 -0700

    Upgrade to React 15.2.1 [try 2] (#3689) (#3734)

diff --git a/package.json b/package.json
index fb2766a024..a1bbe604cc 100644
--- a/package.json
+++ b/package.json
@@ -32,19 +32,19 @@
     "po-catalog-loader": "^1.2.0",
     "query-string": "2.4.2",
     "raven-js": "3.2.1",
-    "react": "0.14.7",
-    "react-addons-css-transition-group": "0.14.7",
-    "react-addons-pure-render-mixin": "0.14.7",
-    "react-addons-test-utils": "0.14.7",
-    "react-addons-update": "0.14.7",
-    "react-bootstrap": "0.28.3",
+    "react": "15.2.1",
+    "react-addons-css-transition-group": "15.2.1",
+    "react-addons-pure-render-mixin": "15.2.1",
+    "react-addons-test-utils": "15.2.1",
+    "react-addons-update": "15.2.1",
+    "react-bootstrap": "^0.29.5",
     "react-document-title": "1.0.4",
-    "react-dom": "0.14.7",
-    "react-lazy-load": "2.0.1",
+    "react-dom": "15.2.1",
+    "react-lazy-load": "3.0.10",
     "react-router": "1.0.0",
-    "react-sparklines": "1.5.0",
-    "react-sticky": "3.0.0",
-    "reflux": "0.3.0",
+    "react-sparklines": "1.6.0",
+    "react-sticky": "5.0.4",
+    "reflux": "0.4.1",
     "select2": "3.5.1",
     "sprintf-js": "^1.0.3",
     "style-loader": "0.12.4",
@@ -64,7 +64,7 @@
   "devDependencies": {
     "babel-eslint": "5.0.0-beta9",
     "chai": "3.4.1",
-    "enzyme": "2.1.0",
+    "enzyme": "2.4.1",
     "eslint": "1.9.0",
     "eslint-plugin-getsentry": "1.0.0",
     "eslint-plugin-react": "3.11.2",
diff --git a/src/sentry/static/sentry/app/components/dateTime.jsx b/src/sentry/static/sentry/app/components/dateTime.jsx
index 062f8eaf1c..9ed6fbbcc5 100644
--- a/src/sentry/static/sentry/app/components/dateTime.jsx
+++ b/src/sentry/static/sentry/app/components/dateTime.jsx
@@ -31,8 +31,9 @@ const DateTime = React.createClass({
       date = new Date(date);
     }
 
+    let carriedProps = _.omit(this.props, 'date', 'seconds');
     return (
-      <time {...this.props}>{moment(date).format(format)}</time>
+      <time {...carriedProps}>{moment(date).format(format)}</time>
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/components/letterAvatar.jsx b/src/sentry/static/sentry/app/components/letterAvatar.jsx
index f72d7507fe..7adf1b62ce 100644
--- a/src/sentry/static/sentry/app/components/letterAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/letterAvatar.jsx
@@ -58,7 +58,7 @@ const LetterAvatar = React.createClass({
 
   render() {
     return (
-      <svg viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg" className={this.props.className}>
+      <svg viewBox="0 0 120 120" className={this.props.className}>
         <rect x="0" y="0" width="120" height="120" rx="15" ry="15" fill={this.getColor()}/>
         <text x="50%" y="50%" fontSize="65" style={{'dominantBaseline': 'central'}}
               textAnchor="middle" fill="#FFFFFF">{this.getInitials()}</text>
diff --git a/src/sentry/static/sentry/app/components/listLink.jsx b/src/sentry/static/sentry/app/components/listLink.jsx
index 6243405019..5664586399 100644
--- a/src/sentry/static/sentry/app/components/listLink.jsx
+++ b/src/sentry/static/sentry/app/components/listLink.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import _ from 'underscore';
 import {Link, History} from 'react-router';
 import classNames from 'classnames';
 
@@ -46,9 +47,10 @@ const ListLink = React.createClass({
   },
 
   render() {
+    let carriedProps = _.omit(this.props, 'activeClassName', 'isActive');
     return (
       <li className={this.getClassName()}>
-        <Link {...this.props} onlyActiveOnIndex={this.props.index}>{this.props.children}</Link>
+        <Link {...carriedProps} onlyActiveOnIndex={this.props.index}>{this.props.children}</Link>
       </li>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/menuItem.jsx b/src/sentry/static/sentry/app/components/menuItem.jsx
index 9f858e90de..20420561e4 100644
--- a/src/sentry/static/sentry/app/components/menuItem.jsx
+++ b/src/sentry/static/sentry/app/components/menuItem.jsx
@@ -66,7 +66,7 @@ const MenuItem = React.createClass({
     }
 
     return (
-      <li {...this.props} role="presentation" title={null} href={null}
+      <li role="presentation" title={null} href={null}
         className={classNames(this.props.className, classes)}>
         {children}
       </li>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index b1d8bfc3e2..9a3fd14769 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -162,7 +162,7 @@ const GroupHeader = React.createClass({
                     <Count className="count" value={userCount} />
                   </Link>
                 :
-                  0
+                  <span>0</span>
                 }
               </div>
             </div>
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 20475a6104..01c4b3e5a4 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -3,7 +3,7 @@ import Reflux from 'reflux';
 import {History} from 'react-router';
 import {Link} from 'react-router';
 import Cookies from 'js-cookie';
-import Sticky from 'react-sticky';
+import {StickyContainer, Sticky} from 'react-sticky';
 import classNames from 'classnames';
 import _ from 'underscore';
 
@@ -568,52 +568,54 @@ const Stream = React.createClass({
     let access = this.getAccess();
 
     return (
-      <div className={classNames(classes)}>
-        <div className="stream-content">
-          <StreamFilters
-            access={access}
-            orgId={orgId}
-            projectId={projectId}
-            query={this.state.query}
-            sort={this.state.sort}
-            tags={this.state.tags}
-            searchId={searchId}
-            defaultQuery={this.props.defaultQuery}
-            onSortChange={this.onSortChange}
-            onSearch={this.onSearch}
-            onSavedSearchCreate={this.onSavedSearchCreate}
-            onSidebarToggle={this.onSidebarToggle}
-            isSearchDisabled={this.state.isSidebarVisible}
-            savedSearchList={this.state.savedSearchList}
-          />
-          <div className="group-header">
-            <Sticky onStickyStateChange={this.onStickyStateChange}>
-              <div className={this.state.isStickyHeader ? 'container' : null}>
-                <StreamActions
-                  orgId={params.orgId}
-                  projectId={params.projectId}
-                  query={this.state.query}
-                  onSelectStatsPeriod={this.onSelectStatsPeriod}
-                  onRealtimeChange={this.onRealtimeChange}
-                  realtimeActive={this.state.realtimeActive}
-                  statsPeriod={this.state.statsPeriod}
-                  groupIds={this.state.groupIds}
-                  allResultsVisible={this.allResultsVisible()}/>
-              </div>
-            </Sticky>
+      <StickyContainer>
+        <div className={classNames(classes)}>
+          <div className="stream-content">
+            <StreamFilters
+              access={access}
+              orgId={orgId}
+              projectId={projectId}
+              query={this.state.query}
+              sort={this.state.sort}
+              tags={this.state.tags}
+              searchId={searchId}
+              defaultQuery={this.props.defaultQuery}
+              onSortChange={this.onSortChange}
+              onSearch={this.onSearch}
+              onSavedSearchCreate={this.onSavedSearchCreate}
+              onSidebarToggle={this.onSidebarToggle}
+              isSearchDisabled={this.state.isSidebarVisible}
+              savedSearchList={this.state.savedSearchList}
+            />
+            <div className="group-header">
+              <Sticky onStickyStateChange={this.onStickyStateChange}>
+                <div className={this.state.isStickyHeader ? 'container' : null}>
+                  <StreamActions
+                    orgId={params.orgId}
+                    projectId={params.projectId}
+                    query={this.state.query}
+                    onSelectStatsPeriod={this.onSelectStatsPeriod}
+                    onRealtimeChange={this.onRealtimeChange}
+                    realtimeActive={this.state.realtimeActive}
+                    statsPeriod={this.state.statsPeriod}
+                    groupIds={this.state.groupIds}
+                    allResultsVisible={this.allResultsVisible()}/>
+                </div>
+              </Sticky>
+            </div>
+            {this.renderStreamBody()}
+            <Pagination pageLinks={this.state.pageLinks}/>
           </div>
-          {this.renderStreamBody()}
-          <Pagination pageLinks={this.state.pageLinks}/>
+          <StreamSidebar
+            loading={this.state.tagsLoading}
+            tags={this.state.tags}
+            query={this.state.query}
+            onQueryChange={this.onSearch}
+            orgId={params.orgId}
+            projectId={params.projectId}
+            />
         </div>
-        <StreamSidebar
-          loading={this.state.tagsLoading}
-          tags={this.state.tags}
-          query={this.state.query}
-          onQueryChange={this.onSearch}
-          orgId={params.orgId}
-          projectId={params.projectId}
-          />
-      </div>
+      </StickyContainer>
     );
   }
 
diff --git a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
index fcd3130f85..4904a5813f 100644
--- a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
@@ -23,7 +23,7 @@ const StreamTagFilter = React.createClass({
   getDefaultProps() {
     return {
       tag: {},
-      value: null
+      value: ''
     };
   },
 
@@ -31,7 +31,7 @@ const StreamTagFilter = React.createClass({
     return {
       query: '',
       loading: false,
-      value: this.props.value,
+      value: this.props.value
     };
   },
 
diff --git a/src/sentry/templates/sentry/admin-queue.html b/src/sentry/templates/sentry/admin-queue.html
index 35e82adfa8..3ed66e6cef 100644
--- a/src/sentry/templates/sentry/admin-queue.html
+++ b/src/sentry/templates/sentry/admin-queue.html
@@ -137,7 +137,7 @@
         }
       ];
 
-      React.render(React.createFactory(Sentry.FlotChart)({
+      ReactDOM.render(React.createFactory(Sentry.FlotChart)({
         className: "chart",
         plotData: points
       }), parent);
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 316263fa92..f7a6faa412 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -147,7 +147,7 @@
         <div id="blk_projectselect"></div>
         <script>
         $(function(){
-          React.render(React.createFactory(Sentry.ProjectSelector)({
+          ReactDOM.render(React.createFactory(Sentry.ProjectSelector)({
             organization: {% serialize_detailed_org organization %},
             projectId: {% if project %}'{{ project.slug }}'{% else %}null{% endif %},
           }), document.getElementById('blk_projectselect'));
diff --git a/src/sentry/templates/sentry/partial/alerts.html b/src/sentry/templates/sentry/partial/alerts.html
index 4a72851e4a..966367c807 100644
--- a/src/sentry/templates/sentry/partial/alerts.html
+++ b/src/sentry/templates/sentry/partial/alerts.html
@@ -2,7 +2,7 @@
 <div id="blk_alerts" class="messages-container"></div>
 <script>
 $(function(){
-  React.render(React.createFactory(Sentry.Alerts)({
+  ReactDOM.render(React.createFactory(Sentry.Alerts)({
      className: "alert-list"
   }), document.getElementById('blk_alerts'));
 });
@@ -10,7 +10,7 @@ $(function(){
 <div id="blk_indicators"></div>
 <script>
 $(function(){
-  React.render(React.createFactory(Sentry.Indicators)({
+  ReactDOM.render(React.createFactory(Sentry.Indicators)({
      className: "indicators-container"
   }), document.getElementById('blk_indicators'));
 });
diff --git a/src/sentry/templates/sentry/projects/rules/new.html b/src/sentry/templates/sentry/projects/rules/new.html
index fd0c2c2d5e..fb5307cc7b 100644
--- a/src/sentry/templates/sentry/projects/rules/new.html
+++ b/src/sentry/templates/sentry/projects/rules/new.html
@@ -10,7 +10,7 @@
   <div id="blk_rule_editor"></div>
   <script>
   $(function(){
-    React.render(React.createFactory(Sentry.RuleEditor)({
+    ReactDOM.render(React.createFactory(Sentry.RuleEditor)({
       rule: {% serialize rule %},
       actions: {{ action_list|safe }},
       conditions: {{ condition_list|safe }},
diff --git a/tests/js/spec/components/eventsPerHour.spec.jsx b/tests/js/spec/components/eventsPerHour.spec.jsx
index 8bf11bbae2..e836e6dd5f 100644
--- a/tests/js/spec/components/eventsPerHour.spec.jsx
+++ b/tests/js/spec/components/eventsPerHour.spec.jsx
@@ -1,17 +1,17 @@
 import React from 'react';
-import TestUtils from 'react-addons-test-utils';
+import {shallow} from 'enzyme';
 import EventsPerHour from 'app/components/events/eventsPerHour';
 
-
 describe('EventsPerHour', function() {
   const data = {
     received: [[1461099600, 31734], [1461103200, 36790]],
     blacklisted: [[1461099600, 0], [1461103200, 0]],
     rejected: [[1461099600, 2867], [1461103200, 2742]]
   };
-  describe('formatData()', function() {
-    sinon.stub(EventsPerHour.prototype.__reactAutoBindMap, 'fetchData').returns(null);
-    let eventsPerHour = TestUtils.renderIntoDocument(<EventsPerHour />);
+
+  it('should work', function () {
+    sinon.stub(EventsPerHour.prototype, 'fetchData');
+    let eventsPerHour = shallow(<EventsPerHour/>).instance();
     expect(eventsPerHour.formatData(data)).to.deep.equal([{x: 1461099600, y: [28867, 2867, 0]},
                                                           {x: 1461103200, y: [34048, 2742, 0]}]);
   });
diff --git a/tests/js/spec/views/stream/searchBar.spec.jsx b/tests/js/spec/views/stream/searchBar.spec.jsx
index 4dae6349ff..8e40489bf6 100644
--- a/tests/js/spec/views/stream/searchBar.spec.jsx
+++ b/tests/js/spec/views/stream/searchBar.spec.jsx
@@ -216,10 +216,8 @@ describe('SearchBar', function() {
       };
       let searchBar = mount(<SearchBar {...props} />).instance();
       searchBar.updateAutoCompleteItems();
-      expect(searchBar.state.searchTerm).to.eql('unresolved');
-      expect(searchBar.state.searchItems.length).to.eql(1);
-      expect(searchBar.state.searchItems[0].desc).to.eql('unresolved');
-      expect(searchBar.state.searchItems[0].value).to.eql('unresolved');
+      expect(searchBar.state.searchTerm).to.eql('fu');
+      expect(searchBar.state.searchItems.length).to.eql(0);
       expect(searchBar.state.activeSearchItem).to.eql(0);
     });
 
diff --git a/tests/karma.conf.js b/tests/karma.conf.js
index ea471997c6..7bcd445f64 100644
--- a/tests/karma.conf.js
+++ b/tests/karma.conf.js
@@ -74,7 +74,11 @@ module.exports = function(config) {
       externals: { // see [1] above
         'jsdom': 'window', // can't simulate jsdom in browser
         'cheerio': 'window',
-        'react/lib/ExecutionEnvironment': true
+
+        // for enzyme: https://github.com/airbnb/enzyme/issues/47
+        'react/addons': true,
+        'react/lib/ExecutionEnvironment': true,
+        'react/lib/ReactContext': true
       }
     },
 
