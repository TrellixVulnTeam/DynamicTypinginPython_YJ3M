commit c7eae5724c166af095833cf55eae1a25fd5b44a0
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 22 21:11:49 2011 -0800

    Pep8 cleanup

diff --git a/sentry/web/frontend/accounts.py b/sentry/web/frontend/accounts.py
index 2e0d22f9e0..06680a83aa 100644
--- a/sentry/web/frontend/accounts.py
+++ b/sentry/web/frontend/accounts.py
@@ -5,6 +5,7 @@ from django.views.decorators.csrf import csrf_protect
 
 from sentry.web.helpers import render_to_response
 
+
 @csrf_protect
 def login(request):
     from django.contrib.auth import login as login_
@@ -28,9 +29,10 @@ def login(request):
     })
     return render_to_response('sentry/login.html', context)
 
+
 def logout(request):
     from django.contrib.auth import logout
 
     logout(request)
 
-    return HttpResponseRedirect(reverse('sentry'))
\ No newline at end of file
+    return HttpResponseRedirect(reverse('sentry'))
diff --git a/sentry/web/frontend/generic.py b/sentry/web/frontend/generic.py
index cb7859fde8..77718ccb58 100644
--- a/sentry/web/frontend/generic.py
+++ b/sentry/web/frontend/generic.py
@@ -6,6 +6,7 @@ from sentry.conf import settings
 from sentry.web.decorators import login_required
 from sentry.web.helpers import get_project_list, render_to_response
 
+
 @login_required
 def dashboard(request):
     project_list = get_project_list(request.user)
@@ -17,6 +18,7 @@ def dashboard(request):
         'request': request,
     })
 
+
 def static_media(request, path):
     """
     Serve static files below a given point in the directory structure.
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index f71025a502..2be30fcc7a 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -30,6 +30,7 @@ from sentry.web.helpers import render_to_response, get_search_query_set, \
 uuid_re = re.compile(r'^[a-z0-9]{32}$', re.I)
 event_re = re.compile(r'^(?P<event_id>[a-z0-9]{32})\$(?P<checksum>[a-z0-9]{32})$', re.I)
 
+
 @login_required
 @csrf_exempt
 def ajax_handler(request):
@@ -158,6 +159,7 @@ def ajax_handler(request):
     else:
         return HttpResponseBadRequest()
 
+
 @login_required
 @can_manage('read_message')
 def search(request, project):
@@ -213,6 +215,7 @@ def search(request, project):
         'request': request,
     })
 
+
 @login_required
 @can_manage('read_message')
 def group_list(request, project):
@@ -225,9 +228,6 @@ def group_list(request, project):
     except (TypeError, ValueError):
         page = 1
 
-    offset = (page - 1) * settings.MESSAGES_PER_PAGE
-    limit = page * settings.MESSAGES_PER_PAGE
-
     event_list = Group.objects.filter(project=project)
 
     # Filters only apply if we're not searching
@@ -266,6 +266,7 @@ def group_list(request, project):
         'filters': filters,
     })
 
+
 @login_required
 @can_manage('read_message')
 def group_json(request, project, group_id):
@@ -283,6 +284,7 @@ def group_json(request, project, group_id):
 
     return HttpResponse(json.dumps(event.data), mimetype='application/json')
 
+
 @login_required
 @can_manage('read_message')
 def group(request, project, group_id):
@@ -308,6 +310,7 @@ def group(request, project, group_id):
         'request': request,
     })
 
+
 @login_required
 @can_manage('read_message')
 def group_event_list(request, project, group_id):
@@ -326,6 +329,7 @@ def group_event_list(request, project, group_id):
         'request': request
     })
 
+
 @login_required
 @can_manage('read_message')
 def group_event_details(request, project, group_id, event_id):
@@ -336,7 +340,6 @@ def group_event_details(request, project, group_id, event_id):
 
     event = get_object_or_404(group.event_set, pk=event_id)
 
-
     return render_to_response('sentry/groups/event.html', {
         'project': project,
         'page': 'event_list',
diff --git a/sentry/web/frontend/projects.py b/sentry/web/frontend/projects.py
index a6dc6f0a10..8e3fb28997 100644
--- a/sentry/web/frontend/projects.py
+++ b/sentry/web/frontend/projects.py
@@ -4,6 +4,7 @@ from sentry.web.decorators import login_required, can_manage
 from sentry.web.forms import EditProjectForm
 from sentry.web.helpers import render_to_response, get_project_list
 
+
 @login_required
 def project_list(request):
     return render_to_response('sentry/projects/list.html', {
@@ -11,6 +12,7 @@ def project_list(request):
         'request': request,
     })
 
+
 @login_required
 @can_manage
 def manage_project(request, project):
@@ -26,4 +28,4 @@ def manage_project(request, project):
         'request': request,
     })
 
-    return render_to_response('sentry/projects/manage.html', context)
\ No newline at end of file
+    return render_to_response('sentry/projects/manage.html', context)
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index c7ee920fd2..7f6a97207f 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -14,6 +14,7 @@ from sentry.web.frontend import accounts, generic, groups, events, projects
 
 handler404 = lambda x: page_not_found(x, template_name='sentry/404.html')
 
+
 def handler500(request):
     """
     500 error handler.
