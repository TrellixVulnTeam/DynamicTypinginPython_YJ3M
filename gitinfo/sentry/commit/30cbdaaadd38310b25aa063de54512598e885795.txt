commit 30cbdaaadd38310b25aa063de54512598e885795
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Sep 6 12:22:27 2018 -0700

    feat(discover): Add analytics event when discover query is run (#9630)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx
new file mode 100644
index 0000000000..ef8f9880d6
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/analytics.jsx
@@ -0,0 +1,18 @@
+import analytics from 'app/utils/analytics';
+
+export function trackQuery(organization, query) {
+  const data = {
+    org_id: parseInt(organization.id, 10),
+    projects: query.projects,
+    fields: query.fields,
+    conditions: query.conditions,
+    aggregations: query.aggregations,
+    orderby: query.orderby,
+  };
+
+  if (typeof query.limit === 'number') {
+    data.limit = query.limit;
+  }
+
+  analytics('discover.query', data);
+}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index 2e4ceaac00..f98cc8d7ad 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -27,6 +27,7 @@ import {isValidAggregation} from './aggregations/utils';
 import {Fieldset, PlaceholderText, ButtonSpinner, SidebarLabel} from './styles';
 
 import {getQueryStringFromQuery} from './utils';
+import {trackQuery} from './analytics';
 
 export default class OrganizationDiscover extends React.Component {
   static propTypes = {
@@ -71,6 +72,10 @@ export default class OrganizationDiscover extends React.Component {
 
   runQuery = () => {
     const {queryBuilder, organization} = this.props;
+
+    // Track query for analytics
+    trackQuery(organization, queryBuilder.getExternal());
+
     // Strip any invalid conditions and aggregations
     const {conditions, aggregations} = queryBuilder.getInternal();
     const filteredConditions = conditions.filter(condition =>
