commit a73931551911e9595bc65a1296ddb987a234d067
Author: stefanfoulis <stefan.foulis@gmail.com>
Date:   Wed Sep 29 00:42:19 2010 +0800

    Fixes #16: sentry.client exception with python 2.5

diff --git a/README.rst b/README.rst
index 8f8980e61e..9d4f84d028 100644
--- a/README.rst
+++ b/README.rst
@@ -95,7 +95,7 @@ And on each of your application servers, specify the URL of the Sentry server, a
 	
 	SENTRY_KEY = '0123456789abcde'
 
-You may also specify an alternative timeout to the default (which is 5 seconds) for all outgoing logging requests::
+You may also specify an alternative timeout to the default (which is 5 seconds) for all outgoing logging requests (only works with python 2.6 and above)::
 
 	SENTRY_REMOTE_TIMEOUT = 5
 
diff --git a/sentry/client/base.py b/sentry/client/base.py
index f842890e40..e88a16101e 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -54,7 +54,12 @@ class SentryClient(object):
                 req = urllib2.Request(url, urllib.urlencode(data))
 
                 try:
-                    response = urllib2.urlopen(req, None, settings.REMOTE_TIMEOUT).read()
+                    try:
+                        # this should work in python 2.6 and above
+                        response = urllib2.urlopen(req, None, settings.REMOTE_TIMEOUT).read()
+                    except TypeError:
+                        # fallback for python 2.5
+                        response = urllib2.urlopen(req, None).read()
                 except urllib2.URLError, e:
                     logger.error('Unable to reach Sentry log server: %s' % (e,), exc_info=sys.exc_info(), extra={'remote_url': url})
                     logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
