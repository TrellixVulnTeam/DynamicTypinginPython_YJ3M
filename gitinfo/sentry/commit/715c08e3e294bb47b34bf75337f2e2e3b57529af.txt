commit 715c08e3e294bb47b34bf75337f2e2e3b57529af
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 12 09:49:33 2014 -0800

    Fix/test User.merge_to

diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index 1c09002de2..3d39d3512f 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -76,14 +76,13 @@ class User(Model, AbstractBaseUser):
     def merge_to(from_user, to_user):
         # TODO: we could discover relations automatically and make this useful
         from sentry.models import (
-            GroupBookmark, Project, ProjectKey, Team, TeamMember, UserOption)
+            GroupBookmark, ProjectKey, Team, TeamMember, UserOption
+        )
 
         for obj in ProjectKey.objects.filter(user=from_user):
             obj.update(user=to_user)
         for obj in TeamMember.objects.filter(user=from_user):
             obj.update(user=to_user)
-        for obj in Project.objects.filter(owner=from_user):
-            obj.update(owner=to_user)
         for obj in Team.objects.filter(owner=from_user):
             obj.update(owner=to_user)
         for obj in GroupBookmark.objects.filter(user=from_user):
diff --git a/tests/sentry/models/test_user.py b/tests/sentry/models/test_user.py
new file mode 100644
index 0000000000..21f994151a
--- /dev/null
+++ b/tests/sentry/models/test_user.py
@@ -0,0 +1,18 @@
+from __future__ import absolute_import
+
+from sentry.models import Team
+from sentry.testutils import TestCase
+
+
+class UserTest(TestCase):
+    def test_merge_to(self):
+        from_user = self.create_user('foo@example.com')
+        from_team = self.create_team(name='foobar', owner=from_user)
+
+        to_user = self.create_user('bar@example.com')
+        to_team = self.create_team(name='foobaz', owner=to_user)
+
+        from_user.merge_to(to_user)
+
+        assert Team.objects.filter(owner=from_user).count() == 0
+        assert Team.objects.filter(owner=to_user).count() == 2
