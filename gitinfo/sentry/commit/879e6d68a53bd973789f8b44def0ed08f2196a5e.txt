commit 879e6d68a53bd973789f8b44def0ed08f2196a5e
Author: Mark Story <mark@sentry.io>
Date:   Mon Apr 6 10:22:34 2020 -0400

    feat(perf-views) Add metrics to user actions (#18090)
    
    Add analytics to what we think will be common actions in performance
    views so we can understand how folks are using it.
    
    Refs getsentry/reload#153

diff --git a/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx b/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx
index 7b07129c38..d494278ed8 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/sortLink.tsx
@@ -14,8 +14,9 @@ type Props = {
   align: Alignments;
   field: Field;
   eventView: EventView;
-  tableDataMeta?: MetaType; // Will not be defined if data is not loaded
   generateSortLink: () => LocationDescriptorObject | undefined;
+  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;
+  tableDataMeta?: MetaType; // Will not be defined if data is not loaded
 };
 
 class SortLink extends React.Component<Props> {
@@ -42,7 +43,7 @@ class SortLink extends React.Component<Props> {
   }
 
   render() {
-    const {align, field, tableDataMeta, generateSortLink} = this.props;
+    const {align, field, tableDataMeta, generateSortLink, onClick} = this.props;
 
     const target = generateSortLink();
 
@@ -51,7 +52,7 @@ class SortLink extends React.Component<Props> {
     }
 
     return (
-      <StyledLink align={align} to={target}>
+      <StyledLink align={align} to={target} onClick={onClick}>
         {field.field} {this.renderArrow()}
       </StyledLink>
     );
diff --git a/src/sentry/static/sentry/app/views/performance/table.tsx b/src/sentry/static/sentry/app/views/performance/table.tsx
index 308eec08e6..0f242c65ee 100644
--- a/src/sentry/static/sentry/app/views/performance/table.tsx
+++ b/src/sentry/static/sentry/app/views/performance/table.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {Location, LocationDescriptorObject} from 'history';
 import omit from 'lodash/omit';
 import styled from '@emotion/styled';
-import * as ReactRouter from 'react-router';
+import {browserHistory} from 'react-router';
 
 import space from 'app/styles/space';
 import {t} from 'app/locale';
@@ -19,8 +19,9 @@ import {TableDataRow, TableColumn} from 'app/views/eventsV2/table/types';
 import HeaderCell from 'app/views/eventsV2/table/headerCell';
 import {decodeScalar} from 'app/views/eventsV2/utils';
 import withProjects from 'app/utils/withProjects';
-import EventsV2 from 'app/utils/discover/eventsv2';
 import SearchBar from 'app/components/searchBar';
+import EventsV2 from 'app/utils/discover/eventsv2';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {getAggregateAlias} from 'app/utils/discover/fields';
 import {getFieldRenderer} from 'app/utils/discover/fieldRenderers';
 
@@ -136,7 +137,11 @@ class Table extends React.Component<Props> {
           projectID,
         });
 
-        rendered = <Link to={target}>{rendered}</Link>;
+        rendered = (
+          <Link to={target} onClick={this.handleSummaryClick}>
+            {rendered}
+          </Link>
+        );
       }
 
       const isNumeric = ['integer', 'number', 'duration'].includes(fieldType);
@@ -149,7 +154,7 @@ class Table extends React.Component<Props> {
   }
 
   renderHeader({tableData}) {
-    const {location, eventView} = this.props;
+    const {location, eventView, organization} = this.props;
 
     const tableDataMeta = tableData && tableData.meta ? tableData.meta : undefined;
 
@@ -174,6 +179,15 @@ class Table extends React.Component<Props> {
             };
           }
 
+          function handleClick() {
+            trackAnalyticsEvent({
+              eventKey: 'performance_views.overview.sort',
+              eventName: 'Performance Views: Sort Overview',
+              organization_id: parseInt(organization.id, 10),
+              field: field.field,
+            });
+          }
+
           return (
             <GridHeadCell>
               <SortLink
@@ -182,6 +196,7 @@ class Table extends React.Component<Props> {
                 eventView={eventView}
                 tableDataMeta={tableDataMeta}
                 generateSortLink={generateSortLink}
+                onClick={handleClick}
               />
             </GridHeadCell>
           );
@@ -196,10 +211,25 @@ class Table extends React.Component<Props> {
     return String(decodeScalar(location.query.query) || '').trim();
   }
 
+  handleSummaryClick = () => {
+    const {organization} = this.props;
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.overview.navigate.summary',
+      eventName: 'Performance Views: Overview view summary',
+      organization_id: parseInt(organization.id, 10),
+    });
+  };
+
   handleTransactionSearchQuery = (searchQuery: string) => {
-    const {location} = this.props;
+    const {location, organization} = this.props;
+
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.overview.search',
+      eventName: 'Performance Views: Transaction overview search',
+      organization_id: parseInt(organization.id, 10),
+    });
 
-    ReactRouter.browserHistory.push({
+    browserHistory.push({
       pathname: location.pathname,
       query: {
         ...location.query,
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx
index 6fe7aa17da..26c1550b7b 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx
@@ -20,6 +20,7 @@ import Tooltip from 'app/components/tooltip';
 import {OrganizationSummary} from 'app/types';
 import LoadingPanel from 'app/views/events/loadingPanel';
 import EventView from 'app/utils/discover/eventView';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import theme from 'app/utils/theme';
 import {getDuration} from 'app/utils/formatters';
 
@@ -114,7 +115,7 @@ class LatencyHistogram extends AsyncComponent<Props, State> {
     if (chartData === null) {
       return;
     }
-    const {location} = this.props;
+    const {location, organization} = this.props;
     const valueIndex = value.dataIndex;
 
     // If the active bar is clicked again we need to remove the constraints.
@@ -128,6 +129,12 @@ class LatencyHistogram extends AsyncComponent<Props, State> {
       return;
     }
 
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.latency_chart.zoom',
+      eventName: 'Performance Views: Transaction Summary Latency Chart Zoom',
+      organization_id: parseInt(organization.id, 10),
+    });
+
     const target = {
       pathname: location.pathname,
       query: {
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
index a258e2b7dd..77eff5b1e5 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
@@ -19,6 +19,7 @@ import {getFieldRenderer} from 'app/utils/discover/fieldRenderers';
 import {getAggregateAlias} from 'app/utils/discover/fields';
 import {generateEventSlug, eventDetailsRouteWithEventView} from 'app/utils/discover/urls';
 import {tokenizeSearch} from 'app/utils/tokenizeSearch';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 
 import {
   TableGrid,
@@ -42,6 +43,24 @@ type Props = {
 };
 
 class SummaryContentTable extends React.Component<Props> {
+  handleDiscoverViewClick = () => {
+    const {organization} = this.props;
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.summary.view_in_discover',
+      eventName: 'Performance Views: View in Discover from Transaction Summary',
+      organization_id: parseInt(organization.id, 10),
+    });
+  };
+
+  handleViewDetailsClick = () => {
+    const {organization} = this.props;
+    trackAnalyticsEvent({
+      eventKey: 'performance_views.summary.view_details',
+      eventName: 'Performance Views: View Details from Transaction Summary',
+      organization_id: parseInt(organization.id, 10),
+    });
+  };
+
   renderHeader() {
     const {eventView, tableData} = this.props;
 
@@ -143,7 +162,11 @@ class SummaryContentTable extends React.Component<Props> {
           eventView,
         });
 
-        rendered = <Link to={target}>{rendered}</Link>;
+        rendered = (
+          <Link to={target} onClick={this.handleViewDetailsClick}>
+            {rendered}
+          </Link>
+        );
       }
 
       const isNumeric = ['integer', 'number', 'duration'].includes(fieldType);
@@ -181,6 +204,7 @@ class SummaryContentTable extends React.Component<Props> {
           <HeaderTitle>{title}</HeaderTitle>
           <HeaderButtonContainer>
             <Button
+              onClick={this.handleDiscoverViewClick}
               to={eventView.getResultsViewUrlTarget(organization.slug)}
               size="small"
             >
