commit 7a07c7619c0e51c7a93da20e04adfe3328645586
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Jan 30 13:40:38 2020 +0100

    ref(ts): Convert <OrganizationRepositories>+<RepositoryRow> to typescript (#16688)

diff --git a/src/sentry/static/sentry/app/components/repositoryRow.jsx b/src/sentry/static/sentry/app/components/repositoryRow.tsx
similarity index 80%
rename from src/sentry/static/sentry/app/components/repositoryRow.jsx
rename to src/sentry/static/sentry/app/components/repositoryRow.tsx
index 7649b29deb..05c9429a5a 100644
--- a/src/sentry/static/sentry/app/components/repositoryRow.jsx
+++ b/src/sentry/static/sentry/app/components/repositoryRow.tsx
@@ -1,9 +1,9 @@
-import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
 
+import {Client} from 'app/api';
 import {PanelItem} from 'app/components/panels';
-import {Repository} from 'app/sentryTypes';
+import {Repository, RepositoryStatus} from 'app/types';
 import {deleteRepository, cancelDeleteRepository} from 'app/actionCreators/integrations';
 import {t} from 'app/locale';
 import Access from 'app/components/acl/access';
@@ -11,28 +11,28 @@ import Button from 'app/components/button';
 import Confirm from 'app/components/confirm';
 import space from 'app/styles/space';
 
-class RepositoryRow extends React.Component {
-  static propTypes = {
-    repository: Repository,
-    api: PropTypes.object.isRequired,
-    orgId: PropTypes.string.isRequired,
-    showProvider: PropTypes.bool,
-    onRepositoryChange: PropTypes.func,
-  };
+type Props = {
+  repository: Repository;
+  api: Client;
+  orgId: string;
+  showProvider?: boolean;
+  onRepositoryChange?: (data: {id: string; status: RepositoryStatus}) => void;
+};
 
+class RepositoryRow extends React.Component<Props> {
   static defaultProps = {
     showProvider: false,
   };
 
-  getStatusLabel(repo) {
+  getStatusLabel(repo: Repository) {
     switch (repo.status) {
-      case 'pending_deletion':
+      case RepositoryStatus.PENDING_DELETION:
         return 'Deletion Queued';
-      case 'deletion_in_progress':
+      case RepositoryStatus.DELETION_IN_PROGRESS:
         return 'Deletion in Progress';
-      case 'disabled':
+      case RepositoryStatus.DISABLED:
         return 'Disabled';
-      case 'hidden':
+      case RepositoryStatus.HIDDEN:
         return 'Disabled';
       default:
         return null;
@@ -64,7 +64,7 @@ class RepositoryRow extends React.Component {
   };
 
   get isActive() {
-    return this.props.repository.status === 'active';
+    return this.props.repository.status === RepositoryStatus.ACTIVE;
   }
 
   render() {
@@ -79,7 +79,7 @@ class RepositoryRow extends React.Component {
               <RepositoryTitle>
                 <strong>{repository.name}</strong>
                 {!isActive && <small> &mdash; {this.getStatusLabel(repository)}</small>}
-                {repository.status === 'pending_deletion' && (
+                {repository.status === RepositoryStatus.PENDING_DELETION && (
                   <StyledButton
                     size="xsmall"
                     onClick={this.cancelDelete}
@@ -102,7 +102,10 @@ class RepositoryRow extends React.Component {
             </RepositoryTitleAndUrl>
 
             <Confirm
-              disabled={!hasAccess || (!isActive && repository.status !== 'disabled')}
+              disabled={
+                !hasAccess ||
+                (!isActive && repository.status !== RepositoryStatus.DISABLED)
+              }
               onConfirm={this.deleteRepo}
               message={t(
                 'Are you sure you want to remove this repository? All associated commit data will be removed in addition to the repository.'
@@ -125,7 +128,7 @@ const StyledPanelItem = styled(PanelItem)`
   flex: 1;
 
   ${p =>
-    p.status === 'disabled' &&
+    p.status === RepositoryStatus.DISABLED &&
     `
     filter: grayscale(1);
     opacity: 0.4;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index caa75a77b5..702838735b 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -457,9 +457,16 @@ export type Repository = {
   integrationId: string;
   name: string;
   provider: {id: string; name: string};
-  status: string;
+  status: RepositoryStatus;
   url: string;
 };
+export enum RepositoryStatus {
+  ACTIVE = 'active',
+  DISABLED = 'disabled',
+  HIDDEN = 'hidden',
+  PENDING_DELETION = 'pending_deletion',
+  DELETION_IN_PROGRESS = 'deletion_in_progress',
+}
 
 export type IntegrationProvider = {
   key: string;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
deleted file mode 100644
index 20f824a1ca..0000000000
--- a/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
+++ /dev/null
@@ -1,95 +0,0 @@
-import {Box, Flex} from 'reflexbox';
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {t, tct} from 'app/locale';
-import AlertLink from 'app/components/alertLink';
-import Button from 'app/components/button';
-import HeroIcon from 'app/components/heroIcon';
-import RepositoryRow from 'app/components/repositoryRow';
-import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
-
-export default class OrganizationRepositories extends React.Component {
-  static propTypes = {
-    itemList: PropTypes.array,
-    api: PropTypes.object,
-    onRepositoryChange: PropTypes.func,
-  };
-
-  render() {
-    const {params, itemList, api, onRepositoryChange} = this.props;
-    const {orgId} = params;
-    const hasItemList = itemList && itemList.length > 0;
-
-    return (
-      <div>
-        <SettingsPageHeader title={t('Repositories')} />
-        <AlertLink to={`/settings/${orgId}/integrations/`}>
-          {t(
-            'Want to add a repository to start tracking commits? Install or configure your version control integration here.'
-          )}
-        </AlertLink>
-        {!hasItemList && (
-          <div className="m-b-2">
-            <TextBlock>
-              {t(
-                'Connecting a repository allows Sentry to capture commit data via webhooks. ' +
-                  'This enables features like suggested assignees and resolving issues via commit message. ' +
-                  "Once you've connected a repository, you can associate commits with releases via the API."
-              )}
-              &nbsp;
-              {tct('See our [link:documentation] for more details.', {
-                link: <a href="https://docs.sentry.io/learn/releases/" />,
-              })}
-            </TextBlock>
-          </div>
-        )}
-
-        {hasItemList ? (
-          <Panel>
-            <PanelHeader disablePadding>
-              <Flex>
-                <Box px={2}>{t('Added Repositories')}</Box>
-              </Flex>
-            </PanelHeader>
-            <PanelBody>
-              <Box>
-                {itemList.map(repo => {
-                  return (
-                    <RepositoryRow
-                      key={repo.id}
-                      repository={repo}
-                      api={api}
-                      showProvider
-                      orgId={orgId}
-                      onRepositoryChange={onRepositoryChange}
-                    />
-                  );
-                })}
-              </Box>
-            </PanelBody>
-          </Panel>
-        ) : (
-          <Panel className="align-center p-x-2 p-y-1">
-            <Box mb={1}>
-              <HeroIcon src="icon-commit" />
-            </Box>
-            <h3>{t('Sentry is better with commit data')}</h3>
-            <TextBlock>
-              {t(
-                'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'
-              )}
-            </TextBlock>
-            <Box mb={1}>
-              <Button href="https://docs.sentry.io/learn/releases/">
-                {t('Learn more')}
-              </Button>
-            </Box>
-          </Panel>
-        )}
-      </div>
-    );
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.tsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.tsx
new file mode 100644
index 0000000000..65765db413
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.tsx
@@ -0,0 +1,104 @@
+import {Box, Flex} from 'reflexbox';
+import PropTypes from 'prop-types';
+import React from 'react';
+import {Params} from 'react-router/lib/Router';
+
+import {Repository, RepositoryStatus} from 'app/types';
+import {Client} from 'app/api';
+import {t, tct} from 'app/locale';
+import AlertLink from 'app/components/alertLink';
+import Button from 'app/components/button';
+import HeroIcon from 'app/components/heroIcon';
+import RepositoryRow from 'app/components/repositoryRow';
+import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
+import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import TextBlock from 'app/views/settings/components/text/textBlock';
+
+type Props = {
+  itemList: Repository[];
+  onRepositoryChange: (data: {id: string; status: RepositoryStatus}) => void;
+  api: Client;
+  params: Params;
+};
+
+const OrganizationRepositories = ({itemList, onRepositoryChange, api, params}: Props) => {
+  const {orgId} = params;
+  const hasItemList = itemList && itemList.length > 0;
+
+  return (
+    <div>
+      <SettingsPageHeader title={t('Repositories')} />
+      <AlertLink to={`/settings/${orgId}/integrations/`}>
+        {t(
+          'Want to add a repository to start tracking commits? Install or configure your version control integration here.'
+        )}
+      </AlertLink>
+      {!hasItemList && (
+        <div className="m-b-2">
+          <TextBlock>
+            {t(
+              'Connecting a repository allows Sentry to capture commit data via webhooks. ' +
+                'This enables features like suggested assignees and resolving issues via commit message. ' +
+                "Once you've connected a repository, you can associate commits with releases via the API."
+            )}
+            &nbsp;
+            {tct('See our [link:documentation] for more details.', {
+              link: <a href="https://docs.sentry.io/learn/releases/" />,
+            })}
+          </TextBlock>
+        </div>
+      )}
+
+      {hasItemList ? (
+        <Panel>
+          <PanelHeader disablePadding>
+            <Flex>
+              <Box px={2}>{t('Added Repositories')}</Box>
+            </Flex>
+          </PanelHeader>
+          <PanelBody>
+            <Box>
+              {itemList.map(repo => {
+                return (
+                  <RepositoryRow
+                    key={repo.id}
+                    repository={repo}
+                    api={api}
+                    showProvider
+                    orgId={orgId}
+                    onRepositoryChange={onRepositoryChange}
+                  />
+                );
+              })}
+            </Box>
+          </PanelBody>
+        </Panel>
+      ) : (
+        <Panel className="align-center p-x-2 p-y-1">
+          <Box mb={1}>
+            <HeroIcon src="icon-commit" />
+          </Box>
+          <h3>{t('Sentry is better with commit data')}</h3>
+          <TextBlock>
+            {t(
+              'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'
+            )}
+          </TextBlock>
+          <Box mb={1}>
+            <Button href="https://docs.sentry.io/learn/releases/">
+              {t('Learn more')}
+            </Button>
+          </Box>
+        </Panel>
+      )}
+    </div>
+  );
+};
+
+OrganizationRepositories.propTypes = {
+  itemList: PropTypes.array,
+  api: PropTypes.object,
+  onRepositoryChange: PropTypes.func,
+};
+
+export default OrganizationRepositories;
