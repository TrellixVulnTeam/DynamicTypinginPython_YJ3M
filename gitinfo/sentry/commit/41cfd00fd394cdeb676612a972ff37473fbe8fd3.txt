commit 41cfd00fd394cdeb676612a972ff37473fbe8fd3
Author: Mark Story <mark@sentry.io>
Date:   Tue Nov 26 10:01:24 2019 -0500

    fix(api) Don't 500 on invalid statsPeriod values (#15813)
    
    Fixes SENTRY-DMF

diff --git a/src/sentry/api/endpoints/group_events.py b/src/sentry/api/endpoints/group_events.py
index e246df2790..506159cee0 100644
--- a/src/sentry/api/endpoints/group_events.py
+++ b/src/sentry/api/endpoints/group_events.py
@@ -17,7 +17,7 @@ from sentry.api.helpers.environments import get_environments
 from sentry.api.helpers.events import get_direct_hit_response
 from sentry.api.serializers import EventSerializer, serialize, SimpleEventSerializer
 from sentry.api.paginator import GenericOffsetPaginator
-from sentry.api.utils import get_date_range_from_params
+from sentry.api.utils import get_date_range_from_params, InvalidParams
 from sentry.models import Group
 from sentry.search.utils import InvalidQuery, parse_query
 from sentry.utils.apidocs import scenario, attach_scenarios
@@ -62,7 +62,10 @@ class GroupEventsEndpoint(GroupEndpoint, EnvironmentMixin):
         except (NoResults, ResourceDoesNotExist):
             return Response([])
 
-        start, end = get_date_range_from_params(request.GET, optional=True)
+        try:
+            start, end = get_date_range_from_params(request.GET, optional=True)
+        except InvalidParams as exc:
+            return Response({"detail": exc.message}, status=400)
 
         try:
             return self._get_events_snuba(request, group, environments, query, tags, start, end)
diff --git a/tests/snuba/api/endpoints/test_group_events.py b/tests/snuba/api/endpoints/test_group_events.py
index c2aa6f52ad..aec15c6cbe 100644
--- a/tests/snuba/api/endpoints/test_group_events.py
+++ b/tests/snuba/api/endpoints/test_group_events.py
@@ -261,6 +261,15 @@ class GroupEventsTest(APITestCase, SnubaTestCase):
         assert len(response.data) == 1
         assert response.data[0]["eventID"] == six.text_type(event_2.event_id)
 
+    def test_invalid_period(self):
+        self.login_as(user=self.user)
+        first_seen = timezone.now() - timedelta(days=5)
+        group = self.create_group(first_seen=first_seen)
+        response = self.client.get(
+            u"/api/0/issues/{}/events/".format(group.id), data={"statsPeriod": "lol"}
+        )
+        assert response.status_code == 400
+
     def test_multiple_group(self):
         self.login_as(user=self.user)
 
