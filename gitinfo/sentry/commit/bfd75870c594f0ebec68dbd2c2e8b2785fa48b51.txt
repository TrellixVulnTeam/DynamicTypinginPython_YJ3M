commit bfd75870c594f0ebec68dbd2c2e8b2785fa48b51
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue May 7 15:00:48 2019 -0700

    ref(mixins): Remove `getProjectFeatures` from `ProjectState` mixin (#13087)
    
    Replace this with `<Feature>`

diff --git a/src/sentry/static/sentry/app/mixins/projectState.jsx b/src/sentry/static/sentry/app/mixins/projectState.jsx
index 506921b631..39208111fc 100644
--- a/src/sentry/static/sentry/app/mixins/projectState.jsx
+++ b/src/sentry/static/sentry/app/mixins/projectState.jsx
@@ -8,10 +8,6 @@ const ProjectState = {
     project: SentryTypes.Project,
   },
 
-  getProjectFeatures() {
-    return new Set(this.context.project.features);
-  },
-
   getProject() {
     return this.context.project;
   },
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 06ce4dce6c..8d2f950fe1 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -1,27 +1,28 @@
 import {browserHistory} from 'react-router';
 import {omit, isEqual, sortBy} from 'lodash';
 import Cookies from 'js-cookie';
+import DocumentTitle from 'react-document-title';
 import PropTypes from 'prop-types';
 import React from 'react';
 import Reflux from 'reflux';
 import classNames from 'classnames';
 import createReactClass from 'create-react-class';
-import DocumentTitle from 'react-document-title';
 import qs from 'query-string';
 
 import {Panel, PanelBody} from 'app/components/panels';
 import {analytics} from 'app/utils/analytics';
+import {fetchProjectSavedSearches} from 'app/actionCreators/savedSearches';
+import {fetchProjectTagValues} from 'app/actionCreators/tags';
 import {
   setActiveEnvironment,
   setActiveEnvironmentName,
 } from 'app/actionCreators/environments';
 import {t, tct} from 'app/locale';
-import withApi from 'app/utils/withApi';
 import ConfigStore from 'app/stores/configStore';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
 import EnvironmentStore from 'app/stores/environmentStore';
 import ErrorRobot from 'app/components/errorRobot';
-import {fetchProjectSavedSearches} from 'app/actionCreators/savedSearches';
-import {fetchProjectTagValues} from 'app/actionCreators/tags';
+import Feature from 'app/components/acl/feature';
 import GroupStore from 'app/stores/groupStore';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
@@ -30,7 +31,6 @@ import ProcessingIssueList from 'app/components/stream/processingIssueList';
 import ProjectState from 'app/mixins/projectState';
 import SentryTypes from 'app/sentryTypes';
 import StreamActions from 'app/views/stream/actions';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
 import StreamFilters from 'app/views/stream/filters';
 import StreamGroup from 'app/components/stream/group';
 import StreamSidebar from 'app/views/stream/sidebar';
@@ -38,6 +38,7 @@ import parseApiError from 'app/utils/parseApiError';
 import parseLinkHeader from 'app/utils/parseLinkHeader';
 import queryString from 'app/utils/queryString';
 import utils from 'app/utils';
+import withApi from 'app/utils/withApi';
 
 const MAX_ITEMS = 25;
 const DEFAULT_SORT = 'date';
@@ -678,7 +679,6 @@ const Stream = createReactClass({
     const {organization} = this.context;
 
     const searchId = this.state.searchId;
-    const projectFeatures = this.getProjectFeatures();
     const project = this.getProject();
 
     // for compatibility with new filters/stream component
@@ -713,22 +713,30 @@ const Stream = createReactClass({
               tags={this.props.tags}
             />
             <Panel>
-              <StreamActions
-                orgId={organization.slug}
-                projectId={project.slug}
-                selection={selection}
-                hasReleases={projectFeatures.has('releases')}
-                latestRelease={this.context.project.latestRelease}
-                environment={this.state.environment}
-                query={this.state.query}
-                queryCount={this.state.queryCount}
-                onSelectStatsPeriod={this.onSelectStatsPeriod}
-                onRealtimeChange={this.onRealtimeChange}
-                realtimeActive={this.state.realtimeActive}
-                statsPeriod={this.state.statsPeriod}
-                groupIds={this.state.groupIds}
-                allResultsVisible={this.allResultsVisible()}
-              />
+              <Feature
+                features={['projects:releases']}
+                organization={organization}
+                project={project}
+              >
+                {({hasFeature}) => (
+                  <StreamActions
+                    orgId={organization.slug}
+                    projectId={project.slug}
+                    selection={selection}
+                    hasReleases={hasFeature}
+                    latestRelease={this.context.project.latestRelease}
+                    environment={this.state.environment}
+                    query={this.state.query}
+                    queryCount={this.state.queryCount}
+                    onSelectStatsPeriod={this.onSelectStatsPeriod}
+                    onRealtimeChange={this.onRealtimeChange}
+                    realtimeActive={this.state.realtimeActive}
+                    statsPeriod={this.state.statsPeriod}
+                    groupIds={this.state.groupIds}
+                    allResultsVisible={this.allResultsVisible()}
+                  />
+                )}
+              </Feature>
               <PanelBody>
                 <ProcessingIssueList
                   organization={organization}
diff --git a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
index 0f510bced6..8544319788 100644
--- a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
+++ b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
@@ -136,37 +136,82 @@ exports[`Stream render() displays the group list 1`] = `
         }
       />
       <Panel>
-        <withApi(StreamActions)
-          allResultsVisible={false}
-          groupIds={
+        <withConfig(FeatureContainer)
+          features={
             Array [
-              "1",
+              "projects:releases",
             ]
           }
-          hasReleases={false}
-          onRealtimeChange={[Function]}
-          onSelectStatsPeriod={[Function]}
-          orgId="org-slug"
-          projectId="project-slug"
-          query="is:unresolved"
-          queryCount={0}
-          realtimeActive={false}
-          selection={
+          organization={
             Object {
-              "datetime": Object {
-                "end": null,
-                "period": null,
-                "start": null,
-                "utc": null,
+              "access": Array [
+                "org:read",
+                "org:write",
+                "org:admin",
+                "org:integrations",
+                "project:read",
+                "project:write",
+                "project:admin",
+                "team:read",
+                "team:write",
+                "team:admin",
+              ],
+              "features": Array [],
+              "id": "1337",
+              "name": "Organization Name",
+              "onboardingTasks": Array [],
+              "projects": Array [],
+              "scrapeJavaScript": true,
+              "slug": "org-slug",
+              "status": Object {
+                "id": "active",
+                "name": "active",
               },
+              "teams": Array [],
+            }
+          }
+          project={
+            Object {
+              "allowedDomains": Array [
+                "example.com",
+                "https://example.com",
+              ],
+              "dataScrubber": false,
+              "dataScrubberDefaults": false,
+              "digestsMaxDelay": 60,
+              "digestsMinDelay": 5,
               "environments": Array [],
-              "projects": Array [
-                3559,
+              "features": Array [],
+              "firstEvent": true,
+              "hasAccess": true,
+              "id": 3559,
+              "isBookmarked": false,
+              "isMember": true,
+              "name": "Foo Project",
+              "resolveAge": 48,
+              "safeFields": Array [
+                "business-email",
+                "company",
               ],
+              "scrapeJavaScript": true,
+              "scrubIPAddresses": false,
+              "securityToken": "security-token",
+              "securityTokenHeader": "x-security-header",
+              "sensitiveFields": Array [
+                "creditcard",
+                "ssn",
+              ],
+              "slug": "project-slug",
+              "storeCrashReports": false,
+              "subjectPrefix": "[my-org]",
+              "subjectTemplate": "[$project] \${tag:level}: $title",
+              "teams": Array [],
+              "verifySSL": true,
             }
           }
-          statsPeriod="24h"
-        />
+        >
+          <Component />
+        </withConfig(FeatureContainer)>
         <PanelBody
           direction="column"
           disablePadding={true}
@@ -452,37 +497,82 @@ exports[`Stream toggles environment select all environments 1`] = `
         }
       />
       <Panel>
-        <withApi(StreamActions)
-          allResultsVisible={false}
-          groupIds={
+        <withConfig(FeatureContainer)
+          features={
             Array [
-              "1",
+              "projects:releases",
             ]
           }
-          hasReleases={false}
-          onRealtimeChange={[Function]}
-          onSelectStatsPeriod={[Function]}
-          orgId="org-slug"
-          projectId="project-slug"
-          query="is:unresolved"
-          queryCount={0}
-          realtimeActive={false}
-          selection={
+          organization={
             Object {
-              "datetime": Object {
-                "end": null,
-                "period": null,
-                "start": null,
-                "utc": null,
+              "access": Array [
+                "org:read",
+                "org:write",
+                "org:admin",
+                "org:integrations",
+                "project:read",
+                "project:write",
+                "project:admin",
+                "team:read",
+                "team:write",
+                "team:admin",
+              ],
+              "features": Array [],
+              "id": "1337",
+              "name": "Organization Name",
+              "onboardingTasks": Array [],
+              "projects": Array [],
+              "scrapeJavaScript": true,
+              "slug": "org-slug",
+              "status": Object {
+                "id": "active",
+                "name": "active",
               },
+              "teams": Array [],
+            }
+          }
+          project={
+            Object {
+              "allowedDomains": Array [
+                "example.com",
+                "https://example.com",
+              ],
+              "dataScrubber": false,
+              "dataScrubberDefaults": false,
+              "digestsMaxDelay": 60,
+              "digestsMinDelay": 5,
               "environments": Array [],
-              "projects": Array [
-                3559,
+              "features": Array [],
+              "firstEvent": true,
+              "hasAccess": true,
+              "id": 3559,
+              "isBookmarked": false,
+              "isMember": true,
+              "name": "Foo Project",
+              "resolveAge": 48,
+              "safeFields": Array [
+                "business-email",
+                "company",
               ],
+              "scrapeJavaScript": true,
+              "scrubIPAddresses": false,
+              "securityToken": "security-token",
+              "securityTokenHeader": "x-security-header",
+              "sensitiveFields": Array [
+                "creditcard",
+                "ssn",
+              ],
+              "slug": "project-slug",
+              "storeCrashReports": false,
+              "subjectPrefix": "[my-org]",
+              "subjectTemplate": "[$project] \${tag:level}: $title",
+              "teams": Array [],
+              "verifySSL": true,
             }
           }
-          statsPeriod="24h"
-        />
+        >
+          <Component />
+        </withConfig(FeatureContainer)>
         <PanelBody
           direction="column"
           disablePadding={true}
