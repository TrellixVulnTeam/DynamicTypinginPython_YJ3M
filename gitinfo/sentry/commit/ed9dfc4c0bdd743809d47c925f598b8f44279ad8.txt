commit ed9dfc4c0bdd743809d47c925f598b8f44279ad8
Author: Max Bittker <maxbittker@gmail.com>
Date:   Mon Jul 24 16:35:44 2017 -0700

    onboarding flow groundwork (#5489)
    
    This is the new and improved on-boarding flow that incorporates project creation and a new filter-able platform picker aggregated into one step. This route follows the organization creation step in the sign up flow.

diff --git a/package.json b/package.json
index e0fd77ae3d..e9a090f462 100644
--- a/package.json
+++ b/package.json
@@ -82,6 +82,9 @@
     "modulePaths": [
       "<rootDir>/src/sentry/static/sentry"
     ],
+    "moduleNameMapper": {
+      "integration-docs-platforms": "<rootDir>/tests/fixtures/_platforms.json"
+    },
     "setupFiles": [
       "<rootDir>/tests/js/setup.js"
     ],
@@ -94,7 +97,7 @@
     "babel-eslint": "7.1.1",
     "babel-jest": "^19.0.0",
     "chai": "3.4.1",
-    "enzyme": "2.4.1",
+    "enzyme": "2.9.1",
     "eslint": "3.19.0",
     "eslint-plugin-getsentry": "1.0.0",
     "eslint-plugin-react": "6.10.3",
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 9a339e5966..997adfd3ec 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -81,7 +81,7 @@ RESERVED_ORGANIZATION_SLUGS = frozenset(
         'remote', 'get-cli', 'blog', 'welcome', 'features', 'customers', 'integrations', 'signup',
         'pricing', 'subscribe', 'enterprise', 'about', 'jobs', 'thanks', 'guide', 'privacy',
         'security', 'terms', 'from', 'sponsorship', 'for', 'at', 'platforms', 'branding', 'vs',
-        'answers', '_admin', 'support', 'contact',
+        'answers', '_admin', 'support', 'contact', 'onboarding',
     )
 )
 
diff --git a/src/sentry/static/sentry/app/actions/projectActions.jsx b/src/sentry/static/sentry/app/actions/projectActions.jsx
index d9287e7f06..96cd2d1d31 100644
--- a/src/sentry/static/sentry/app/actions/projectActions.jsx
+++ b/src/sentry/static/sentry/app/actions/projectActions.jsx
@@ -1,6 +1,7 @@
 import Reflux from 'reflux';
 
 export default Reflux.createActions([
+  'createSuccess',
   'update',
   'updateError',
   'updateSuccess',
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 4332c99e77..292f757513 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -35,11 +35,16 @@ import OrganizationAuditLog from './views/organizationAuditLog';
 import OrganizationCreate from './views/organizationCreate';
 import OrganizationDashboard from './views/organizationDashboard';
 import OrganizationDetails from './views/organizationDetails';
+import OrganizationContext from './views/organizationContext';
 import OrganizationRateLimits from './views/organizationRateLimits';
 import OrganizationRepositories from './views/organizationRepositories';
 import OrganizationSettings from './views/organizationSettings';
 import OrganizationStats from './views/organizationStats';
 import OrganizationTeams from './views/organizationTeams';
+import OnboardingWizard from './views/onboarding/index';
+import OnboardingProject from './views/onboarding/project/index';
+import OnboardingConfigure from './views/onboarding/configure/index';
+
 import AllTeamsList from './views/organizationTeams/allTeamsList';
 import ProjectAlertSettings from './views/projectAlertSettings';
 import ProjectAlertRules from './views/projectAlertRules';
@@ -107,6 +112,7 @@ function routes() {
 
   return (
     <Route path="/" component={errorHandler(App)}>
+
       <Route path="/account/" component={errorHandler(AccountLayout)}>
         <Route path="authorizations/" component={errorHandler(AccountAuthorizations)} />
       </Route>
@@ -137,9 +143,19 @@ function routes() {
       <Route path="/share/issue/:shareId/" component={errorHandler(SharedGroupDetails)} />
 
       <Route path="/organizations/new/" component={errorHandler(OrganizationCreate)} />
+
+      <Route path="/onboarding/:orgId/" component={errorHandler(OrganizationContext)}>
+        <Route path="" component={errorHandler(OnboardingWizard)}>
+          <IndexRoute component={errorHandler(OnboardingProject)} />
+          <Route
+            path=":projectId/configure/(:platform)"
+            component={errorHandler(OnboardingConfigure)}
+          />
+        </Route>
+      </Route>
+
       <Route path="/:orgId/" component={errorHandler(OrganizationDetails)}>
         <IndexRoute component={errorHandler(OrganizationDashboard)} />
-
         <Route
           path="/organizations/:orgId/audit-log/"
           component={errorHandler(OrganizationAuditLog)}
diff --git a/src/sentry/static/sentry/app/stores/projectStore.jsx b/src/sentry/static/sentry/app/stores/projectStore.jsx
index bf2a7f32ed..1ccd9053df 100644
--- a/src/sentry/static/sentry/app/stores/projectStore.jsx
+++ b/src/sentry/static/sentry/app/stores/projectStore.jsx
@@ -6,7 +6,7 @@ import ProjectActions from '../actions/projectActions';
 const ProjectStore = Reflux.createStore({
   init() {
     this.reset();
-
+    this.listenTo(ProjectActions.createSuccess, this.onCreateSuccess);
     this.listenTo(ProjectActions.updateSuccess, this.onUpdateSuccess);
     this.listenTo(ProjectActions.loadStatsSuccess, this.onStatsLoadSuccess);
   },
@@ -25,6 +25,12 @@ const ProjectStore = Reflux.createStore({
     this.trigger(new Set(Object.keys(this.itemsById)));
   },
 
+  onCreateSuccess(project) {
+    this.items.push(project);
+    this.itemsById[project.id] = project;
+    this.trigger(new Set([project.id]));
+  },
+
   onUpdateSuccess(data) {
     let project = this.getById(data.id);
     Object.assign(project, data);
diff --git a/src/sentry/static/sentry/app/stores/teamStore.jsx b/src/sentry/static/sentry/app/stores/teamStore.jsx
index 7637627f87..791091fdec 100644
--- a/src/sentry/static/sentry/app/stores/teamStore.jsx
+++ b/src/sentry/static/sentry/app/stores/teamStore.jsx
@@ -42,8 +42,8 @@ const TeamStore = Reflux.createStore({
     let teamsChanged = new Set();
     projectIds.forEach((set, projectId) => {
       let teamId = this.projectMap[projectId];
+      if (teamId === undefined) return;
       let team = this.getById(teamId);
-
       // TODO: make copy of project? right now just assigning reference
       // to project form project store
       let project = ProjectStore.getById(projectId);
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
new file mode 100644
index 0000000000..0cf072346f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
@@ -0,0 +1,96 @@
+import React from 'react';
+import Waiting from './waiting';
+import {browserHistory} from 'react-router';
+import ApiMixin from '../../../mixins/apiMixin';
+
+import ProjectContext from '../../projects/projectContext';
+import ProjectDocsContext from '../../projectInstall/docsContext';
+import ProjectInstallPlatform from '../../projectInstall/platform';
+
+const Configure = React.createClass({
+  propTypes: {
+    next: React.PropTypes.func
+  },
+
+  mixins: [ApiMixin],
+
+  componentWillMount() {
+    let {platform} = this.props.params;
+    //redirect if platform is not known.
+    if (!platform || platform === 'other') {
+      this.redirectToNeutralDocs();
+    }
+  },
+
+  componentDidMount() {
+    this.timer = setInterval(() => {
+      this.fetchEventData();
+    }, 2000);
+  },
+
+  componentWillUnmount() {
+    clearInterval(this.timer);
+  },
+
+  redirectUrl() {
+    let {orgId, projectId} = this.props.params;
+
+    let url = `/${orgId}/${projectId}/#welcome`;
+    browserHistory.push(url);
+  },
+
+  fetchEventData() {
+    let {orgId, projectId} = this.props.params;
+
+    this.api.request(`/projects/${orgId}/${projectId}/events/`, {
+      method: 'GET',
+      success: data => {
+        // this indicates that a real event has been sent to the project (the first one is the sample event)
+        if (data.length > 1) {
+          this.redirectUrl();
+        }
+      },
+      error: () => {
+        this.setState({hasError: true});
+      }
+    });
+  },
+
+  submit() {
+    this.redirectUrl();
+  },
+
+  redirectToNeutralDocs() {
+    let {orgId, projectId} = this.props.params;
+    let url = `/${orgId}/${projectId}/getting-started`;
+
+    browserHistory.push(url);
+  },
+
+  render() {
+    let {orgId, projectId} = this.props.params;
+
+    return (
+      <div>
+        <div className="onboarding-Configure">
+          <h2 style={{marginBottom: 30}}>Configure your application</h2>
+          <ProjectContext projectId={projectId} orgId={orgId} style={{marginBottom: 30}}>
+            <ProjectDocsContext>
+              <ProjectInstallPlatform
+                platformData={{
+                  hack: 'actually set by ProjectDocsContext, this object is here to avoid proptypes warnings'
+                }}
+                params={this.props.params}
+                linkPath={(_orgId, _projectId, _platform) =>
+                  `/onboarding/${_orgId}/${_projectId}/configure/${_platform}/`}
+              />
+            </ProjectDocsContext>
+          </ProjectContext>
+          <Waiting skip={this.submit} />
+        </div>
+      </div>
+    );
+  }
+});
+
+export default Configure;
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/waiting.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/waiting.jsx
new file mode 100644
index 0000000000..159028378e
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/waiting.jsx
@@ -0,0 +1,28 @@
+import React from 'react';
+import {t} from '../../../locale';
+
+const Waiting = React.createClass({
+  propTypes: {
+    skip: React.PropTypes.func
+  },
+
+  render() {
+    return (
+      <div className="awaiting-event">
+        <div className="pull-right">
+          <div className="btn btn-primary" onClick={this.props.skip}>
+            {t('All done!')}
+          </div>
+        </div>
+        <div className="wrap waiting-text">
+          <h3 className="animated-ellipsis">{t('Waiting on events to devour')}</h3>
+          <div className="robot">
+            <span className="eye" />
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
+
+export default Waiting;
diff --git a/src/sentry/static/sentry/app/views/onboarding/index.jsx b/src/sentry/static/sentry/app/views/onboarding/index.jsx
new file mode 100644
index 0000000000..c362b09768
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/index.jsx
@@ -0,0 +1,112 @@
+import React from 'react';
+import DocumentTitle from 'react-document-title';
+import {browserHistory} from 'react-router';
+
+import ApiMixin from '../../mixins/apiMixin';
+import ProgressNodes from './progress';
+import ProjectActions from '../../actions/projectActions';
+
+import Raven from 'raven-js';
+
+const OnboardingWizard = React.createClass({
+  contextTypes: {
+    organization: React.PropTypes.object
+  },
+
+  mixins: [ApiMixin],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      platform: '',
+      projectName: ''
+    };
+  },
+
+  renderStep() {
+    const stepProps = {
+      next: this.next,
+      platform: this.state.platform,
+      setPlatform: p => {
+        if (!this.state.projectName || this.state.platform === this.state.projectName) {
+          this.setState({projectName: p});
+        }
+        this.setState({platform: p});
+      },
+      name: this.state.projectName,
+      setName: n => this.setState({projectName: n})
+    };
+    return React.cloneElement(this.props.children, stepProps);
+  },
+
+  getProjectUrlProps(project) {
+    let org = this.context.organization;
+    let path = `/onboarding/${org.slug}/${project.slug}/configure/${this.state.platform}`;
+    return path;
+  },
+
+  createProject() {
+    let {orgId} = this.props.params;
+    let {name} = this.context.organization;
+
+    // NOTE: in onboarding, team name matches org name so can
+    // make this assumption (But not the org slug, which may have an extra id attached!)
+    // orgs with multiple projects may not be able to make this assumption
+
+    this.api.request(`/teams/${orgId}/${name}/projects/`, {
+      method: 'POST',
+      data: {
+        name: this.state.projectName,
+        platform: this.state.platform
+      },
+      success: data => {
+        data = {
+          ...data,
+          orgId: orgId,
+          teamId: orgId
+        };
+
+        ProjectActions.createSuccess(data);
+
+        // navigate to new url _now_
+        const url = this.getProjectUrlProps(data);
+        browserHistory.push(url);
+      },
+      error: err => {
+        Raven.captureMessage('oboarding project creation failed', {
+          extra: err
+        });
+
+        this.setState({
+          loading: false,
+          error: true
+        });
+      }
+    });
+  },
+
+  next() {
+    if (this.context.organization) {
+      this.createProject();
+    } else {
+      browserHistory.push('another route');
+    }
+  },
+
+  render() {
+    return (
+      <div className="onboarding-container">
+        <DocumentTitle title={'Sentry'} />
+        <div className="step-container">
+          <ProgressNodes params={this.props.params} />
+          <div>
+            <this.renderStep />
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
+
+export default OnboardingWizard;
diff --git a/src/sentry/static/sentry/app/views/onboarding/onboarding.less b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
new file mode 100644
index 0000000000..7c1c9e07ee
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
@@ -0,0 +1,276 @@
+@onboarding-sidebar-width: 300px;
+
+.onboarding-container {
+  margin-left: @onboarding-sidebar-width - @sidebar-width;
+  @media(max-width: @screen-sm-max) {
+      margin-left: 0;
+  }
+
+  .step-container{
+    padding: 0 40px;
+  }
+
+  // Awaiting event
+
+  .awaiting-event {
+    background: rgba(255,255,255, .90);
+    box-shadow: 0 -1px 0 rgba(0,0,0, .1);
+    padding: 20px 0;
+    position: sticky;
+    bottom: 0;
+    .clearfix;
+  }
+
+  .wrap {
+    position: relative;
+  }
+
+  .waiting-text {
+    padding-right: 10px;
+    padding-left: 80px;
+    position: relative;
+    margin-right: 200px;
+
+    h3 {
+      margin: 5px 0 0;
+    }
+  }
+
+  .robot {
+    position: absolute;
+    left: 0;
+    top: -30px;
+    padding-bottom: 5px;
+    width: 70px;
+    height: 82px;
+    background: url(../../../images/sentry-robot.png);
+    background-size: cover;
+
+  .eye {
+    display: block;
+    .square(4px);
+    border-radius: 6px;
+    position: absolute;
+    top: 21px;
+    left: 26px;
+
+      -webkit-animation: blink-eye .6s infinite;
+      -moz-animation:    blink-eye .6s infinite;
+      -o-animation:      blink-eye .6s infinite;
+      animation:         blink-eye .6s infinite;
+    }
+  }
+
+  .onboarding-sidebar{
+    width: 300px;
+    height: 100%;
+    position: fixed;
+    z-index: 10000;
+    top: 0;
+    left:0;
+    color: whitesmoke;
+    background: url(../../../images/sentry-pattern-dark.png);
+    background-color: #3B3247;
+    background-size: 400px;
+
+    @media(max-width: @screen-sm-max) {
+      display: none;
+    }
+
+
+    .sentry-flag {
+      font-size: 24px;
+      line-height: 1;
+      width: 150px;
+      margin: 30px 0px;
+      background-color: #e03e2f;
+      padding: 14px 20px 11px;
+    }
+
+    .progress-nodes{
+      div.node{
+        width: 190px;
+        margin: auto;
+        margin-bottom: 30px;
+        display: flex;
+        color: @50;
+        position: relative;
+        padding-left: 26px;
+        border-color: @50;
+        line-height: 1.2;
+        text-shadow: 0 2px 5px rgba(0,0,0, .2);
+
+        &.active{
+          color: white;
+          font-weight: 600;
+
+            &::before{
+            border-color: white;
+          }
+        }
+
+        span.node {
+          &::before{
+            content:'';
+            position: absolute;
+            left: -10px;
+            border-radius: 100%;
+            width: 22px;
+            height: 22px;
+            margin: 1px 8px 0 0;
+            border: 3px solid;
+          }
+
+          &.done{
+            &::before{
+              font-size: 14px;
+              content: '●';
+              text-align: center;
+              line-height: 16px;
+            }
+          }
+        }
+      }
+    }
+    .stuck {
+      padding: 20px;
+      position: absolute;
+      bottom: 0px;
+    }
+  }
+
+  .platformicon-stack{
+    background-color: white;
+    position: absolute;
+  }
+
+  .platform-picker{
+    .nav-tabs {
+      border-bottom: 1px solid @trim;
+      margin: 0 0 15px;
+    }
+    .platform-filter-container {
+      .form-control;
+      border-radius: 22px;
+      padding: 0 8px;
+      position: relative;
+      top: -4px;
+
+      @media(max-width: @screen-sm-max) {
+        display: none;
+      }
+
+      .icon-search {
+        color: @30;
+        font-size: 12px;
+        margin-right: 4px;
+      }
+    }
+    .platform-filter {
+      background: transparent;
+      border: none;
+      font-size: 14px;
+      &:focus {
+        outline: none;
+      }
+
+      &::placeholder {
+        color: @50;
+      }
+    }
+    .platform-tiles{
+      margin: auto;
+      display: flex;
+      flex-wrap: wrap;
+      padding: 0 0 15px;
+
+      .platform-card {
+        display: flex;
+        flex-direction: column;
+        width: 120px;
+        padding: 0 0 14px;
+        cursor: pointer;
+        border-radius: 4px;
+
+        @media(max-width: @screen-sm-max) {
+          width: 70px;
+        }
+
+        &:hover {
+          background: #f7f5fa;
+        }
+
+        &.selected {
+          background: darken(@alert-info-bg-color, 2);
+      }
+      }
+
+      &.client-platform-list li {
+        margin: 0 auto;
+      }
+      &.client-platform-list.shade{
+        background-color: @40;
+        filter: brightness(0.4);
+      }
+    }
+
+    h5 {
+      text-align: center;
+      margin: 0;
+      font-size: 15px;
+      .truncate;
+      line-height: 1.2;
+    }
+  }
+
+  .project-name{
+    background: #fff;
+    box-shadow: 0 -1px 0 rgba(0,0,0, .1);
+    padding: 20px 0;
+    position: sticky;
+    bottom: 0;
+    .clearfix;
+
+    .platform-tile{
+      display: inline-block;
+      vertical-align: middle;
+    }
+
+    .project-name-wrapper {
+      .form-control;
+      position: relative;
+      padding-left: 44px;
+      width: 300px;
+      float: left;
+
+      input {
+        background: none;
+        border: 0;
+        display: block;
+        width: 100%;
+        font-weight: 600;
+
+        &:focus {
+          outline: none;
+        }
+
+        &::placeholder {
+          color: @50;
+        }
+      }
+
+      .platform-tile {
+        position: absolute;
+        left: 6px;
+        top: 3px;
+        .platformicon {
+          color: @40 !important;
+        }
+      }
+    }
+  }
+
+  .install .install-content {
+    padding-left: 15px; // Fix .row negative margin
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/onboarding/progress.jsx b/src/sentry/static/sentry/app/views/onboarding/progress.jsx
new file mode 100644
index 0000000000..aab25266de
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/progress.jsx
@@ -0,0 +1,52 @@
+import React from 'react';
+import classNames from 'classnames';
+import {onboardingSteps, stepDescriptions} from './utils';
+
+const ProgressNodes = React.createClass({
+  propTypes: {
+    params: React.PropTypes.object
+  },
+
+  steps: Object.keys(onboardingSteps),
+
+  inferStep() {
+    let {projectId} = this.props.params;
+    if (!projectId) return onboardingSteps.project;
+    return onboardingSteps.configure;
+  },
+
+  node(stepKey, stepIndex) {
+    let nodeClass = classNames('node', {
+      done: stepIndex < this.inferStep(),
+      active: stepIndex === this.inferStep()
+    });
+
+    return (
+      <div className={nodeClass} key={stepIndex}>
+        <span className={nodeClass} />
+        {stepDescriptions[stepKey]}
+      </div>
+    );
+  },
+
+  render() {
+    return (
+      <div className="onboarding-sidebar">
+        <div className="sentry-flag">
+          <span href="/" className="icon-sentry-logo-full" />
+        </div>
+        <div className="progress-nodes">
+          {this.steps.map(this.node)}
+        </div>
+        <div className="stuck">
+          {/*
+          <p> Stuck?</p>
+          <p> Chat with a real person</p>
+        */}
+        </div>
+      </div>
+    );
+  }
+});
+
+export default ProgressNodes;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
new file mode 100644
index 0000000000..3239a8bb8b
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
@@ -0,0 +1,46 @@
+import React from 'react';
+import PlatformPicker from './platformpicker';
+import PlatformiconTile from './platformiconTile';
+import {t} from '../../../locale';
+
+const Project = React.createClass({
+  propTypes: {
+    next: React.PropTypes.func,
+    setPlatform: React.PropTypes.func,
+    platform: React.PropTypes.string,
+    setName: React.PropTypes.func,
+    name: React.PropTypes.string
+  },
+
+  submit() {
+    this.props.next();
+  },
+
+  render() {
+    return (
+      <div className="onboarding-info">
+        <h2>{t('Choose a language or framework')}</h2>
+        <PlatformPicker {...this.props} />
+        <div className="project-name client-platform">
+          <h4>{t('Give your project a name') + ':'}</h4>
+          <div className="project-name-wrapper">
+            <PlatformiconTile platform={this.props.platform} />
+            <input
+              type="text"
+              name="name"
+              label="Project Name"
+              placeholder="Project name"
+              value={this.props.name}
+              onChange={e => this.props.setName(e.target.value)}
+            />
+          </div>
+          <div className="btn btn-primary pull-right" onClick={this.submit}>
+            {t('Continue')}
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
+
+export default Project;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
new file mode 100644
index 0000000000..1a515a6946
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
@@ -0,0 +1,25 @@
+import React from 'react';
+
+import {flattenedPlatforms} from '../utils';
+import PlatformiconTile from './platformiconTile';
+import classnames from 'classnames';
+
+const PlatformCard = React.createClass({
+  propTypes: {
+    platform: React.PropTypes.string,
+    onClick: React.PropTypes.func
+  },
+
+  render() {
+    let platform = flattenedPlatforms.find(p => p.id === this.props.platform);
+
+    return (
+      <span className={classnames('platform-card', this.props.className)}>
+        <PlatformiconTile {...this.props} />
+        <h5> {platform.name} </h5>
+      </span>
+    );
+  }
+});
+
+export default PlatformCard;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx
new file mode 100644
index 0000000000..4beb76217a
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx
@@ -0,0 +1,23 @@
+import React from 'react';
+
+const PlatformiconTile = React.createClass({
+  propTypes: {
+    platform: React.PropTypes.string,
+    onClick: React.PropTypes.func,
+    className: React.PropTypes.string
+  },
+
+  render() {
+    let {platform, className, onClick} = this.props;
+
+    return (
+      <li
+        className={`platform-tile list-unstyled ${platform} ${platform.split('-')[0]} ${className}`}
+        onClick={onClick}>
+        <span className={`platformicon platformicon-${platform}`} />
+      </li>
+    );
+  }
+});
+
+export default PlatformiconTile;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
new file mode 100644
index 0000000000..212ef98132
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -0,0 +1,106 @@
+import React from 'react';
+import ListLink from '../../../components/listLink';
+import classnames from 'classnames';
+
+import {flattenedPlatforms, categoryLists} from '../utils';
+import PlatformCard from './platformCard';
+import {t} from '../../../locale';
+
+const categoryList = Object.keys(categoryLists).concat('All');
+
+const PlatformPicker = React.createClass({
+  propTypes: {
+    setPlatform: React.PropTypes.func.isRequired,
+    platform: React.PropTypes.string
+  },
+
+  getInitialState() {
+    return {
+      tab: categoryList[0],
+      filter: ''
+    };
+  },
+
+  renderPlatformList() {
+    let {tab} = this.state;
+
+    const tabSubset = flattenedPlatforms.filter(
+      platform => tab === 'All' || categoryLists[tab].includes(platform.id)
+    );
+
+    let subsetMatch = ({id}) => id.includes(this.state.filter);
+
+    let filtered = tabSubset.filter(subsetMatch);
+
+    if (!filtered.length) {
+      filtered = flattenedPlatforms.filter(subsetMatch);
+    }
+
+    if (!filtered.length) {
+      return (
+        <p>
+          {t(
+            "Not finding your platform? There's a rich ecosystem of community supported SDKs as well (including Perl, CFML, Clojure, and ActionScript).\n Try searching for Sentry clients or contacting support."
+          )}
+        </p>
+      );
+    }
+
+    return (
+      <ul className="client-platform-list platform-tiles">
+        {filtered.map((platform, idx) => {
+          return (
+            <PlatformCard
+              platform={platform.id}
+              className={classnames({
+                selected: this.props.platform === platform.id
+              })}
+              key={platform.id}
+              onClick={() => {
+                this.props.setPlatform(platform.id);
+              }}
+            />
+          );
+        })}
+      </ul>
+    );
+  },
+
+  render() {
+    return (
+      <div className="platform-picker">
+        <ul className="nav nav-tabs">
+          <li style={{float: 'right', marginRight: 0}}>
+            <div className="platform-filter-container">
+              <span className="icon icon-search" />
+              <input
+                type="text"
+                className="platform-filter"
+                label="Filter"
+                placeholder="Filter"
+                onChange={e => this.setState({filter: e.target.value})}
+              />
+            </div>
+          </li>
+          {categoryList.map(categoryName => {
+            return (
+              <ListLink
+                key={categoryName}
+                onClick={e => {
+                  this.setState({tab: categoryName});
+                  e.preventDefault();
+                }}
+                to={''}
+                isActive={() => categoryName === this.state.tab}>
+                {categoryName}
+              </ListLink>
+            );
+          })}
+        </ul>
+        {this.renderPlatformList()}
+      </div>
+    );
+  }
+});
+
+export default PlatformPicker;
diff --git a/src/sentry/static/sentry/app/views/onboarding/utils.js b/src/sentry/static/sentry/app/views/onboarding/utils.js
new file mode 100644
index 0000000000..e16e68a47f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/onboarding/utils.js
@@ -0,0 +1,101 @@
+// import {platforms} from '../../../../../integration-docs/_platforms.json';
+import {platforms} from 'integration-docs-platforms';
+
+const Popular = [
+  'javascript',
+  'javascript-react',
+  'python-django',
+  'python',
+  'python-flask',
+  'ruby-rails',
+  'node-express',
+  'php-laravel',
+  'php-symfony2',
+  'java',
+  'csharp',
+  'exilir'
+];
+
+const Frontend = [
+  'javascript',
+  'javascript-react',
+  'javascript-angular',
+  'javascript-angularjs',
+  'javascript-backbone',
+  'javascript-ember',
+  'javascript-vue'
+];
+
+const Mobile = ['objc', 'swift', 'java-android', 'cocoa'];
+
+const Backend = [
+  'go',
+  'go-http',
+  'java-appengine',
+  'java',
+  'java-log4j',
+  'java-log4j2',
+  'java-logback',
+  'java-logging',
+  'node',
+  'node-express',
+  'node-koa',
+  'node-connect',
+  'csharp',
+  'php',
+  'php-laravel',
+  'php-monolog',
+  'php-symfony2',
+  'python',
+  'python-django',
+  'python-flask',
+  'python-celery',
+  'python-bottle',
+  'python-pylons',
+  'python-pyramid',
+  'python-tornado',
+  'python-rq',
+  'ruby',
+  'ruby-rails',
+  'ruby-rack',
+  'exilir'
+];
+
+const categoryLists = {
+  Popular,
+  Frontend,
+  Mobile,
+  Backend
+};
+
+const additional = platforms.concat({
+  integrations: [
+    {
+      link: 'https://docs.getsentry.com/hosted/clients/',
+      type: 'language',
+      id: 'other',
+      name: 'Other'
+    }
+  ],
+  id: 'other',
+  name: 'Other'
+});
+
+const flattenedPlatforms = [].concat(
+  [],
+  ...additional.map(language => {
+    return language.integrations.map(i => {
+      return {...i, language: language.id};
+    });
+  })
+);
+
+const onboardingSteps = {organization: 0, project: 1, configure: 2};
+
+const stepDescriptions = {
+  organization: 'Create an organization in Sentry',
+  project: 'Tell us about your project',
+  configure: 'Configure your application and send an event'
+};
+
+export {onboardingSteps, stepDescriptions, flattenedPlatforms, categoryLists};
diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
new file mode 100644
index 0000000000..0effdcd478
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -0,0 +1,199 @@
+import React from 'react';
+import Reflux from 'reflux';
+
+import ApiMixin from '../mixins/apiMixin';
+import DocumentTitle from 'react-document-title';
+import HookStore from '../stores/hookStore';
+import LoadingError from '../components/loadingError';
+import LoadingIndicator from '../components/loadingIndicator';
+import BroadcastModal from '../components/broadcastModal';
+import moment from 'moment';
+import PropTypes from '../proptypes';
+import TeamStore from '../stores/teamStore';
+import ProjectStore from '../stores/projectStore';
+import ProjectActions from '../actions/projectActions';
+import ConfigStore from '../stores/configStore';
+
+import OrganizationState from '../mixins/organizationState';
+
+import {t} from '../locale';
+
+let ERROR_TYPES = {
+  ORG_NOT_FOUND: 'ORG_NOT_FOUND'
+};
+
+function getRequiredAdminActions(org) {
+  return [];
+}
+
+const OrganizationContext = React.createClass({
+  childContextTypes: {
+    organization: PropTypes.Organization
+  },
+
+  mixins: [
+    ApiMixin,
+    OrganizationState,
+    Reflux.listenTo(ProjectActions.createSuccess, 'onProjectCreation')
+  ],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      errorType: null,
+      organization: null,
+      showBroadcast: false
+    };
+  },
+
+  getChildContext() {
+    return {
+      organization: this.state.organization
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    if (
+      nextProps.params.orgId !== this.props.params.orgId ||
+      nextProps.location.state === 'refresh'
+    ) {
+      this.remountComponent();
+    }
+  },
+
+  componentWillUnmount() {
+    TeamStore.reset();
+  },
+
+  remountComponent() {
+    this.setState(this.getInitialState(), this.fetchData);
+  },
+
+  onProjectCreation(project) {
+    // If a new project was created, we need to re-fetch the
+    // org details endpoint, which will propagate re-rendering
+    // for the entire component tree
+    this.remountComponent();
+  },
+
+  fetchData() {
+    this.api.request(this.getOrganizationDetailsEndpoint(), {
+      success: data => {
+        // Allow injection via getsentry et all
+        let hooks = [];
+        HookStore.get('organization:header').forEach(cb => {
+          hooks.push(cb(data));
+        });
+
+        data.requiredAdminActions = getRequiredAdminActions(data);
+        this.setState({
+          organization: data,
+          loading: false,
+          error: false,
+          errorType: null,
+          hooks: hooks,
+          showBroadcast: this.shouldShowBroadcast(data)
+        });
+
+        TeamStore.loadInitialData(data.teams);
+        ProjectStore.loadInitialData(
+          data.teams.reduce((out, team) => {
+            return out.concat(team.projects);
+          }, [])
+        );
+      },
+
+      error: (_, textStatus, errorThrown) => {
+        let errorType = null;
+        switch (errorThrown) {
+          case 'NOT FOUND':
+            errorType = ERROR_TYPES.ORG_NOT_FOUND;
+            break;
+          default:
+        }
+        this.setState({
+          loading: false,
+          error: true,
+          errorType: errorType
+        });
+      }
+    });
+  },
+
+  getOrganizationDetailsEndpoint() {
+    return '/organizations/' + this.props.params.orgId + '/';
+  },
+
+  getTitle() {
+    if (this.state.organization) return this.state.organization.name;
+    return 'Sentry';
+  },
+
+  shouldShowBroadcast(data) {
+    let user = ConfigStore.get('user');
+    let options = user ? user.options : {};
+    let seen = options.seenReleaseBroadcast;
+    let tasks = data.onboardingTasks;
+    // don't show broadcast they've seen it
+    if (seen) {
+      return false;
+    }
+
+    // also if they havn't sent their first event
+    let sentFirstEvent = tasks.find(
+      ({task, status}) => task == 2 && status == 'complete'
+    );
+
+    if (!sentFirstEvent) {
+      return false;
+    }
+
+    // show it if they sent their first event more than 2 days ago
+    return moment().diff(sentFirstEvent.dateCompleted, 'days') > 2;
+  },
+
+  closeBroadcast() {
+    this.setState({showBroadcast: false});
+  },
+
+  render() {
+    if (this.state.loading) {
+      return (
+        <LoadingIndicator triangle={true}>
+          {t('Loading data for your organization.')}
+        </LoadingIndicator>
+      );
+    } else if (this.state.error) {
+      switch (this.state.errorType) {
+        case ERROR_TYPES.ORG_NOT_FOUND:
+          return (
+            <div className="container">
+              <div className="alert alert-block">
+                {t('The organization you were looking for was not found.')}
+              </div>
+            </div>
+          );
+        default:
+          return <LoadingError onRetry={this.remountComponent} />;
+      }
+    }
+
+    return (
+      <DocumentTitle title={this.getTitle()}>
+        <div className="app">
+          {this.state.hooks}
+          {this.state.showBroadcast &&
+            <BroadcastModal closeBroadcast={this.closeBroadcast} />}
+          {this.props.children}
+        </div>
+      </DocumentTitle>
+    );
+  }
+});
+
+export default OrganizationContext;
diff --git a/src/sentry/static/sentry/app/views/organizationCreate.jsx b/src/sentry/static/sentry/app/views/organizationCreate.jsx
index 806c30370d..d51c948a9d 100644
--- a/src/sentry/static/sentry/app/views/organizationCreate.jsx
+++ b/src/sentry/static/sentry/app/views/organizationCreate.jsx
@@ -7,7 +7,7 @@ import {t} from '../locale';
 
 export default class OrganizationCreate extends AsyncView {
   onSubmitSuccess = data => {
-    // redirect to project creation
+    // redirect to project creation *(BYPASS REACT ROUTER AND FORCE PAGE REFRESH TO GRAB CSRF TOKEN)*
     // browserHistory.pushState(null, `/organizations/${data.slug}/projects/new/`);
     window.location.href = `/organizations/${data.slug}/projects/new/`;
   };
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index 137f737fd0..8cc4f170d0 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -1,187 +1,18 @@
 import React from 'react';
-import ApiMixin from '../mixins/apiMixin';
-import DocumentTitle from 'react-document-title';
-import Footer from '../components/footer';
-import Sidebar from '../components/sidebar';
-import HookStore from '../stores/hookStore';
-import LoadingError from '../components/loadingError';
-import LoadingIndicator from '../components/loadingIndicator';
-import BroadcastModal from '../components/broadcastModal';
-import moment from 'moment';
-import PropTypes from '../proptypes';
-import TeamStore from '../stores/teamStore';
-import ProjectStore from '../stores/projectStore';
-import ConfigStore from '../stores/configStore';
-
-import OrganizationState from '../mixins/organizationState';
-
-import {t} from '../locale';
 
-let ERROR_TYPES = {
-  ORG_NOT_FOUND: 'ORG_NOT_FOUND'
-};
+import OrganizationContext from './organizationContext';
 
-function getRequiredAdminActions(org) {
-  return [];
-}
+import Footer from '../components/footer';
+import Sidebar from '../components/sidebar';
 
 const OrganizationDetails = React.createClass({
-  childContextTypes: {
-    organization: PropTypes.Organization
-  },
-
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState() {
-    return {
-      loading: true,
-      error: false,
-      errorType: null,
-      organization: null,
-      showBroadcast: false
-    };
-  },
-
-  getChildContext() {
-    return {
-      organization: this.state.organization
-    };
-  },
-
-  componentWillMount() {
-    this.fetchData();
-  },
-
-  componentWillReceiveProps(nextProps) {
-    if (
-      nextProps.params.orgId !== this.props.params.orgId ||
-      nextProps.location.state === 'refresh'
-    ) {
-      this.remountComponent();
-    }
-  },
-
-  componentWillUnmount() {
-    TeamStore.reset();
-  },
-
-  remountComponent() {
-    this.setState(this.getInitialState(), this.fetchData);
-  },
-
-  fetchData() {
-    this.api.request(this.getOrganizationDetailsEndpoint(), {
-      success: data => {
-        // Allow injection via getsentry et all
-        let hooks = [];
-        HookStore.get('organization:header').forEach(cb => {
-          hooks.push(cb(data));
-        });
-
-        data.requiredAdminActions = getRequiredAdminActions(data);
-        this.setState({
-          organization: data,
-          loading: false,
-          error: false,
-          errorType: null,
-          hooks: hooks,
-          showBroadcast: this.shouldShowBroadcast(data)
-        });
-
-        TeamStore.loadInitialData(data.teams);
-        ProjectStore.loadInitialData(
-          data.teams.reduce((out, team) => {
-            return out.concat(team.projects);
-          }, [])
-        );
-      },
-
-      error: (_, textStatus, errorThrown) => {
-        let errorType = null;
-        switch (errorThrown) {
-          case 'NOT FOUND':
-            errorType = ERROR_TYPES.ORG_NOT_FOUND;
-            break;
-          default:
-        }
-        this.setState({
-          loading: false,
-          error: true,
-          errorType: errorType
-        });
-      }
-    });
-  },
-
-  getOrganizationDetailsEndpoint() {
-    return '/organizations/' + this.props.params.orgId + '/';
-  },
-
-  getTitle() {
-    if (this.state.organization) return this.state.organization.name;
-    return 'Sentry';
-  },
-
-  shouldShowBroadcast(data) {
-    let user = ConfigStore.get('user');
-    let options = user ? user.options : {};
-    let seen = options.seenReleaseBroadcast;
-    let tasks = data.onboardingTasks;
-    // don't show broadcast they've seen it
-    if (seen) {
-      return false;
-    }
-
-    // also if they havn't sent their first event
-    let sentFirstEvent = tasks.find(
-      ({task, status}) => task == 2 && status == 'complete'
-    );
-
-    if (!sentFirstEvent) {
-      return false;
-    }
-
-    // show it if they sent their first event more than 2 days ago
-    return moment().diff(sentFirstEvent.dateCompleted, 'days') > 2;
-  },
-
-  closeBroadcast() {
-    this.setState({showBroadcast: false});
-  },
-
   render() {
-    if (this.state.loading) {
-      return (
-        <LoadingIndicator triangle={true}>
-          {t('Loading data for your organization.')}
-        </LoadingIndicator>
-      );
-    } else if (this.state.error) {
-      switch (this.state.errorType) {
-        case ERROR_TYPES.ORG_NOT_FOUND:
-          return (
-            <div className="container">
-              <div className="alert alert-block">
-                {t('The organization you were looking for was not found.')}
-              </div>
-            </div>
-          );
-        default:
-          return <LoadingError onRetry={this.remountComponent} />;
-      }
-    }
-
     return (
-      <DocumentTitle title={this.getTitle()}>
-        <div className="app">
-          {this.state.hooks}
-          <Sidebar />
-          {this.state.showBroadcast &&
-            <BroadcastModal closeBroadcast={this.closeBroadcast} />}
-          {this.props.children}
-          <Footer />
-        </div>
-      </DocumentTitle>
+      <OrganizationContext {...this.props}>
+        <Sidebar />
+        {this.props.children}
+        <Footer />
+      </OrganizationContext>
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/views/organizationSettings.jsx b/src/sentry/static/sentry/app/views/organizationSettings.jsx
index d8232fd720..3b5eb27b24 100644
--- a/src/sentry/static/sentry/app/views/organizationSettings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationSettings.jsx
@@ -344,7 +344,7 @@ const OrganizationSettings = React.createClass({
   },
 
   onSave(data) {
-    // TODO(dcramer): this shoudl propag
+    // TODO(dcramer): this should propagate
     this.setState({data: data});
     OrganizationStore.add(data);
   },
diff --git a/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
index c93d127c01..1793029939 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/docsContext.jsx
@@ -47,7 +47,7 @@ const ProjectDocsContext = React.createClass({
 
     let data = this.state.data;
     return React.cloneElement(this.props.children, {
-      platformData: data // {...this.props}
+      platformData: data
     });
   }
 });
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 34c3df9364..f77fa4163b 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -10,11 +10,19 @@ import {t, tct} from '../../locale';
 
 const ProjectInstallPlatform = React.createClass({
   propTypes: {
-    platformData: React.PropTypes.object.isRequired
+    platformData: React.PropTypes.object.isRequired,
+    linkPath: React.PropTypes.func
   },
 
   mixins: [ApiMixin],
 
+  getDefaultProps() {
+    return {
+      linkPath: (orgId, projectId, platform) =>
+        `/${orgId}/${projectId}/settings/install/${platform}/`
+    };
+  },
+
   getInitialState(props) {
     props = props || this.props;
     let params = props.params;
@@ -80,11 +88,9 @@ const ProjectInstallPlatform = React.createClass({
 
   getPlatformLink(platform, display) {
     let {orgId, projectId} = this.props.params;
+    let path = this.props.linkPath(orgId, projectId, platform);
     return (
-      <Link
-        key={platform}
-        to={`/${orgId}/${projectId}/settings/install/${platform}/`}
-        className="list-group-item">
+      <Link key={platform} to={path} className="list-group-item">
         {display || platform}
       </Link>
     );
diff --git a/src/sentry/static/sentry/images/sentry-pattern-dark.png b/src/sentry/static/sentry/images/sentry-pattern-dark.png
new file mode 100644
index 0000000000..dad33f7743
Binary files /dev/null and b/src/sentry/static/sentry/images/sentry-pattern-dark.png differ
diff --git a/src/sentry/static/sentry/less/misc.less b/src/sentry/static/sentry/less/misc.less
index 558f012585..3a57110ca1 100644
--- a/src/sentry/static/sentry/less/misc.less
+++ b/src/sentry/static/sentry/less/misc.less
@@ -64,3 +64,27 @@ span.translation-wrapper {
 .horizontal-scroll {
 	overflow-x: auto;
 }
+
+// Animated ellipsis...
+
+.animated-ellipsis:after {
+  overflow: hidden;
+  display: inline-block;
+  vertical-align: bottom;
+  -webkit-animation: ellipsis steps(4,end) 1.5s infinite;
+  animation: ellipsis steps(4,end) 1.5s infinite;
+  content: "\2026"; /* ascii code for the ellipsis character */
+  width: 0px;
+}
+
+@keyframes ellipsis {
+  to {
+    width: 1em;
+  }
+}
+
+@-webkit-keyframes ellipsis {
+  to {
+    width: 1em;
+  }
+}
\ No newline at end of file
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index 76eada45a5..6fa34ecfb0 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -46,3 +46,4 @@
 @import url("./spacing.less");
 @import url("./stream.less");
 @import url("./QueryCount.less");
+@import url("../app/views/onboarding/onboarding.less");
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index d94d487c1c..9a92d919c5 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -3301,7 +3301,6 @@ ul.tag-list {
 * Client platform list
 * ============================================================================
 */
-
 .client-platform-list {
   .list-unstyled;
   .clearfix;
@@ -3348,14 +3347,16 @@ ul.tag-list {
     text-shadow: 0 2px 0 rgba(0,0,0, .06);
     background: @gray; // Default BG
   }
+}
 
-  // Colors
+.client-platform-list, .client-platform {
 
-  li {
+  li, span {
     &.python .platformicon {
       background: darken(@blue, 6);
     }
     &.python-pylons .platformicon:before { content: "\e602"; }
+    &.python-celery .platformicon:before { content: "\e602"; }
     &.python-pyramid .platformicon:before { content: "\e602"; }
     &.python-tornado .platformicon:before { content: "\e602"; }
     &.python-rq .platformicon:before { content: "\e602"; }
@@ -3409,6 +3410,11 @@ ul.tag-list {
     &.node-connect .platformicon:before { content: "\e609"; }
     &.node-koa .platformicon:before { content: "\e609"; }
 
+    &.other .platformicon:before {
+      // font-family: Menlo, Monaco, "Courier New", monospace;
+      // content: "\e60A";
+    }
+
     &.objc .platformicon,
     &.cocoa .platformicon, {
       background: @gray;
@@ -3449,6 +3455,15 @@ ul.tag-list {
   }
 }
 
+.client-platform {
+    li, span {
+      .platformicon {
+        color:black !important;
+        background: white !important;
+    }
+  }
+}
+
 /**
  * Reusable project label
  * ============================================================================
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 089ffad885..643882375d 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -256,6 +256,7 @@ urlpatterns += patterns(
     url(r'^account/remove/$', RemoveAccountView.as_view(), name='sentry-remove-account'),
     url(r'^account/settings/social/', include('social_auth.urls')),
     url(r'^account/', generic_react_page_view),
+    url(r'^onboarding/', generic_react_page_view),
 
     # Admin
     url(r'^manage/status/environment/$', admin.status_env, name='sentry-admin-status'),
diff --git a/tests/acceptance/test_organization_onboarding.py b/tests/acceptance/test_organization_onboarding.py
new file mode 100644
index 0000000000..412ddb20b9
--- /dev/null
+++ b/tests/acceptance/test_organization_onboarding.py
@@ -0,0 +1,18 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase
+
+
+class CreateOrganizationTest(AcceptanceTestCase):
+    def setUp(self):
+        super(CreateOrganizationTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            name='Rowdy Tiger',
+            owner=self.user,
+        )
+        self.login_as(self.user)
+
+    def test_simple(self):
+        self.browser.get('/onboarding/%s/' % self.org.slug)
+        self.browser.snapshot(name='organization onboarding')
diff --git a/tests/fixtures/_platforms.json b/tests/fixtures/_platforms.json
new file mode 100644
index 0000000000..9374bac209
--- /dev/null
+++ b/tests/fixtures/_platforms.json
@@ -0,0 +1,333 @@
+{
+  "platforms": [
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+          "type": "language",
+          "id": "csharp",
+          "name": "C#"
+        }
+      ],
+      "id": "csharp",
+      "name": "C#"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/elixir/",
+          "type": "language",
+          "id": "elixir",
+          "name": "Elixir"
+        }
+      ],
+      "id": "elixir",
+      "name": "Elixir"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/go/",
+          "type": "language",
+          "id": "go",
+          "name": "Go"
+        },
+        {
+          "link": null,
+          "type": "framework",
+          "id": "go-http",
+          "name": "net/http"
+        }
+      ],
+      "id": "go",
+      "name": "Go"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/android/",
+          "type": "framework",
+          "id": "java-android",
+          "name": "Android"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/appengine/",
+          "type": "framework",
+          "id": "java-appengine",
+          "name": "Google App Engine"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/",
+          "type": "language",
+          "id": "java",
+          "name": "Java"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j/",
+          "type": "framework",
+          "id": "java-log4j",
+          "name": "Log4j 1.x"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j2/",
+          "type": "framework",
+          "id": "java-log4j2",
+          "name": "Log4j 2.x"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/logback/",
+          "type": "framework",
+          "id": "java-logback",
+          "name": "Logback"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/jul/",
+          "type": "framework",
+          "id": "java-logging",
+          "name": "java.util.logging"
+        }
+      ],
+      "id": "java",
+      "name": "Java"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+          "type": "framework",
+          "id": "javascript-angular",
+          "name": "Angular"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angularjs/",
+          "type": "framework",
+          "id": "javascript-angularjs",
+          "name": "AngularJS"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/backbone/",
+          "type": "framework",
+          "id": "javascript-backbone",
+          "name": "Backbone"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/ember/",
+          "type": "framework",
+          "id": "javascript-ember",
+          "name": "Ember"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+          "type": "language",
+          "id": "javascript",
+          "name": "JavaScript"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+          "type": "framework",
+          "id": "javascript-react",
+          "name": "React"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/vue/",
+          "type": "framework",
+          "id": "javascript-vue",
+          "name": "Vue"
+        }
+      ],
+      "id": "javascript",
+      "name": "JavaScript"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/node/integrations/connect/",
+          "type": "framework",
+          "id": "node-connect",
+          "name": "Connect"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+          "type": "framework",
+          "id": "node-express",
+          "name": "Express"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/node/integrations/koa/",
+          "type": "framework",
+          "id": "node-koa",
+          "name": "Koa"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/node/",
+          "type": "language",
+          "id": "node",
+          "name": "Node.js"
+        }
+      ],
+      "id": "node",
+      "name": "Node.js"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+          "type": "language",
+          "id": "objc",
+          "name": "Objective-C"
+        }
+      ],
+      "id": "objc",
+      "name": "Objective-C"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+          "type": "framework",
+          "id": "php-laravel",
+          "name": "Laravel"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/php/integrations/monolog/",
+          "type": "framework",
+          "id": "php-monolog",
+          "name": "Monolog"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/php/",
+          "type": "language",
+          "id": "php",
+          "name": "PHP"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+          "type": "framework",
+          "id": "php-symfony2",
+          "name": "Symfony2"
+        }
+      ],
+      "id": "php",
+      "name": "PHP"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/bottle/",
+          "type": "framework",
+          "id": "python-bottle",
+          "name": "Bottle"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/celery/",
+          "type": "library",
+          "id": "python-celery",
+          "name": "Celery"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+          "type": "framework",
+          "id": "python-django",
+          "name": "Django"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+          "type": "framework",
+          "id": "python-flask",
+          "name": "Flask"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pylons/",
+          "type": "framework",
+          "id": "python-pylons",
+          "name": "Pylons"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pyramid/",
+          "type": "framework",
+          "id": "python-pyramid",
+          "name": "Pyramid"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/",
+          "type": "language",
+          "id": "python",
+          "name": "Python"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/rq/",
+          "type": "framework",
+          "id": "python-rq",
+          "name": "RQ"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/tornado/",
+          "type": "framework",
+          "id": "python-tornado",
+          "name": "Tornado"
+        }
+      ],
+      "id": "python",
+      "name": "Python"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+          "type": "language",
+          "id": "cocoa",
+          "name": "React-Native"
+        }
+      ],
+      "id": "cocoa",
+      "name": "React-Native"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
+          "type": "framework",
+          "id": "ruby-rack",
+          "name": "Rack"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+          "type": "framework",
+          "id": "ruby-rails",
+          "name": "Rails"
+        },
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+          "type": "language",
+          "id": "ruby",
+          "name": "Ruby"
+        }
+      ],
+      "id": "ruby",
+      "name": "Ruby"
+    },
+    {
+      "integrations": [
+        {
+          "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+          "type": "language",
+          "id": "swift",
+          "name": "Swift"
+        }
+      ],
+      "id": "swift",
+      "name": "Swift"
+    }, {
+      "integrations": [
+        {
+          "link": "",
+          "type": "language",
+          "id": "mock",
+          "name": "Mock Integration"
+        }
+      ],
+      "id": "mock",
+      "name": "Mock"
+    }
+  ]
+}
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 0d737bbd5c..1e3e2d049f 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -16,7 +16,8 @@ window.TestStubs = {
     goBack: sinon.spy(),
     goForward: sinon.spy(),
     setRouteLeaveHook: sinon.spy(),
-    isActive: sinon.spy()
+    isActive: sinon.spy(),
+    createHref: sinon.spy()
   }),
   Team: (...params) => {
     return {
diff --git a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
new file mode 100644
index 0000000000..44548c7c6f
--- /dev/null
+++ b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
@@ -0,0 +1,25 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OnboardingWizard render() should render NotFound if no matching organization 1`] = `
+<div
+  className="onboarding-container"
+>
+  <DocumentTitle
+    title="Sentry"
+  />
+  <div
+    className="step-container"
+  >
+    <ProgressNodes
+      params={
+        Object {
+          "orgId": "my-cool-org",
+        }
+      }
+    />
+    <div>
+      <bound renderStep />
+    </div>
+  </div>
+</div>
+`;
diff --git a/tests/js/spec/views/onboarding/__snapshots__/progress.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/progress.spec.jsx.snap
new file mode 100644
index 0000000000..9910761b0a
--- /dev/null
+++ b/tests/js/spec/views/onboarding/__snapshots__/progress.spec.jsx.snap
@@ -0,0 +1,93 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProgressNodes render() should render step 0 if no projectId 1`] = `
+<div
+  className="onboarding-sidebar"
+>
+  <div
+    className="sentry-flag"
+  >
+    <span
+      className="icon-sentry-logo-full"
+      href="/"
+    />
+  </div>
+  <div
+    className="progress-nodes"
+  >
+    <div
+      className="node done"
+    >
+      <span
+        className="node done"
+      />
+      Create an organization in Sentry
+    </div>
+    <div
+      className="node active"
+    >
+      <span
+        className="node active"
+      />
+      Tell us about your project
+    </div>
+    <div
+      className="node"
+    >
+      <span
+        className="node"
+      />
+      Configure your application and send an event
+    </div>
+  </div>
+  <div
+    className="stuck"
+  />
+</div>
+`;
+
+exports[`ProgressNodes render() should render step 1 if has projectId 1`] = `
+<div
+  className="onboarding-sidebar"
+>
+  <div
+    className="sentry-flag"
+  >
+    <span
+      className="icon-sentry-logo-full"
+      href="/"
+    />
+  </div>
+  <div
+    className="progress-nodes"
+  >
+    <div
+      className="node done"
+    >
+      <span
+        className="node done"
+      />
+      Create an organization in Sentry
+    </div>
+    <div
+      className="node done"
+    >
+      <span
+        className="node done"
+      />
+      Tell us about your project
+    </div>
+    <div
+      className="node active"
+    >
+      <span
+        className="node active"
+      />
+      Configure your application and send an event
+    </div>
+  </div>
+  <div
+    className="stuck"
+  />
+</div>
+`;
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
new file mode 100644
index 0000000000..8dfac244cf
--- /dev/null
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -0,0 +1,188 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Configure should render correctly render() should redirect to if no matching platform 1`] = `
+<div>
+  <div
+    className="onboarding-Configure"
+  >
+    <h2
+      style={
+        Object {
+          "marginBottom": 30,
+        }
+      }
+    >
+      Configure your application
+    </h2>
+    <ProjectContext
+      orgId="testOrg"
+      projectId="testProject"
+      style={
+        Object {
+          "marginBottom": 30,
+        }
+      }
+    >
+      <ProjectDocsContext>
+        <ProjectInstallPlatform
+          linkPath={[Function]}
+          params={
+            Object {
+              "orgId": "testOrg",
+              "platform": "other",
+              "projectId": "testProject",
+            }
+          }
+          platformData={
+            Object {
+              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
+            }
+          }
+        />
+      </ProjectDocsContext>
+    </ProjectContext>
+    <Waiting
+      skip={[Function]}
+    />
+  </div>
+</div>
+`;
+
+exports[`Configure should render correctly render() should render platform docs 1`] = `
+<Configure
+  next={[Function]}
+  params={
+    Object {
+      "orgId": "testOrg",
+      "platform": "node",
+      "projectId": "testProject",
+    }
+  }
+>
+  <div>
+    <div
+      className="onboarding-Configure"
+    >
+      <h2
+        style={
+          Object {
+            "marginBottom": 30,
+          }
+        }
+      >
+        Configure your application
+      </h2>
+      <ProjectContext
+        orgId="testOrg"
+        projectId="testProject"
+        style={
+          Object {
+            "marginBottom": 30,
+          }
+        }
+      >
+        <DocumentTitle
+          title="undefined / undefined"
+        >
+          <ProjectDocsContext>
+            <LoadingIndicator>
+              <div
+                className="loading"
+              >
+                <div
+                  className="loading-indicator"
+                />
+                <div
+                  className="loading-message"
+                />
+              </div>
+            </LoadingIndicator>
+          </ProjectDocsContext>
+        </DocumentTitle>
+      </ProjectContext>
+      <Waiting
+        skip={[Function]}
+      >
+        <div
+          className="awaiting-event"
+        >
+          <div
+            className="pull-right"
+          >
+            <div
+              className="btn btn-primary"
+              onClick={[Function]}
+            >
+              All done!
+            </div>
+          </div>
+          <div
+            className="wrap waiting-text"
+          >
+            <h3
+              className="animated-ellipsis"
+            >
+              Waiting on events to devour
+            </h3>
+            <div
+              className="robot"
+            >
+              <span
+                className="eye"
+              />
+            </div>
+          </div>
+        </div>
+      </Waiting>
+    </div>
+  </div>
+</Configure>
+`;
+
+exports[`Configure should render correctly render() shouldn't redirect for a found platform 1`] = `
+<div>
+  <div
+    className="onboarding-Configure"
+  >
+    <h2
+      style={
+        Object {
+          "marginBottom": 30,
+        }
+      }
+    >
+      Configure your application
+    </h2>
+    <ProjectContext
+      orgId="testOrg"
+      projectId="testProject"
+      style={
+        Object {
+          "marginBottom": 30,
+        }
+      }
+    >
+      <ProjectDocsContext>
+        <ProjectInstallPlatform
+          linkPath={[Function]}
+          params={
+            Object {
+              "orgId": "testOrg",
+              "platform": "node",
+              "projectId": "testProject",
+            }
+          }
+          platformData={
+            Object {
+              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
+            }
+          }
+        />
+      </ProjectDocsContext>
+    </ProjectContext>
+    <Waiting
+      skip={[Function]}
+    />
+  </div>
+</div>
+`;
diff --git a/tests/js/spec/views/onboarding/configure/index.spec.jsx b/tests/js/spec/views/onboarding/configure/index.spec.jsx
new file mode 100644
index 0000000000..60931bbb82
--- /dev/null
+++ b/tests/js/spec/views/onboarding/configure/index.spec.jsx
@@ -0,0 +1,113 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import {Client} from 'app/api';
+import Configure from 'app/views/onboarding/configure';
+import PropTypes from '../../../../../../src/sentry/static/sentry/app/proptypes';
+
+describe('Configure should render correctly', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+    this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  describe('render()', function() {
+    const baseProps = {
+      next: () => {},
+      params: {
+        projectId: 'testProject',
+        orgId: 'testOrg'
+      }
+    };
+
+    it("shouldn't redirect for a found platform", function() {
+      let props = {
+        ...baseProps
+      };
+      props.params.platform = 'node';
+
+      let wrapper = shallow(<Configure {...props} />, {
+        context: {organization: {id: '1337', slug: 'testOrg', teams: [['testProject']]}},
+        childContextTypes: {organization: PropTypes.Organization}
+      });
+
+      const component = wrapper.instance();
+
+      let handleSubmitStub = this.sandbox.stub(
+        component,
+        'redirectToNeutralDocs',
+        () => {}
+      );
+
+      wrapper.update();
+      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(handleSubmitStub.callCount).toEqual(0);
+    });
+
+    it('should redirect to if no matching platform', function() {
+      let props = {
+        ...baseProps
+      };
+      props.params.platform = 'other';
+
+      let handleSubmitStub = this.sandbox.stub(
+        Configure.prototype,
+        'redirectToNeutralDocs'
+      );
+
+      // 👺 ⚠️ this is a hack to defeat the method auto binding so we can fully stub the method. It would not be neccessary with es6 class components and it relies on react internals so it's fragile - maxbittker
+      const index =
+        Configure.prototype.__reactAutoBindPairs.indexOf('redirectToNeutralDocs') + 1;
+      Configure.prototype.__reactAutoBindPairs[index] = handleSubmitStub;
+
+      let wrapper = shallow(<Configure {...props} />, {
+        context: {
+          organization: {
+            id: '1337',
+            slug: 'testOrg',
+            teams: [['testProject']]
+          }
+        }
+      });
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(handleSubmitStub.callCount).toEqual(1);
+    });
+
+    it('should render platform docs', function() {
+      let props = {
+        ...baseProps
+      };
+      props.params.platform = 'node';
+
+      let wrapper = mount(<Configure {...props} />, {
+        context: {
+          organization: {
+            id: '1337',
+            slug: 'testOrg',
+            teams: [
+              {
+                id: 'coolteam',
+                hasAccess: true,
+                projects: [
+                  {
+                    slug: 'testProject',
+                    id: 'testProject'
+                  }
+                ]
+              }
+            ]
+          }
+        },
+        childContextTypes: {organization: PropTypes.Organization}
+      });
+      expect(toJson(wrapper)).toMatchSnapshot();
+      expect(this.stubbedApiRequest.callCount).toEqual(4);
+    });
+  });
+});
diff --git a/tests/js/spec/views/onboarding/index.spec.jsx b/tests/js/spec/views/onboarding/index.spec.jsx
new file mode 100644
index 0000000000..201eac4f49
--- /dev/null
+++ b/tests/js/spec/views/onboarding/index.spec.jsx
@@ -0,0 +1,41 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import {Client} from 'app/api';
+import OnboardingWizard from 'app/views/onboarding/';
+
+describe('OnboardingWizard', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+    this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  describe('render()', function() {
+    const baseProps = {
+      location: {query: {}},
+      params: {
+        projectId: '',
+        orgId: 'testOrg'
+      }
+    };
+
+    it('should render NotFound if no matching organization', function() {
+      let props = {
+        ...baseProps,
+        params: {
+          orgId: 'my-cool-org'
+        }
+      };
+
+      let wrapper = shallow(<OnboardingWizard {...props} />, {
+        organization: {id: '1337', slug: 'testOrg'}
+      });
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+  });
+});
diff --git a/tests/js/spec/views/onboarding/progress.spec.jsx b/tests/js/spec/views/onboarding/progress.spec.jsx
new file mode 100644
index 0000000000..85be6e883c
--- /dev/null
+++ b/tests/js/spec/views/onboarding/progress.spec.jsx
@@ -0,0 +1,50 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import ProgressNodes from 'app/views/onboarding/progress';
+
+describe('ProgressNodes', function() {
+  describe('render()', function() {
+    const baseProps = {
+      params: {
+        projectId: ''
+      }
+    };
+
+    it('should render step 0 if no projectId', function() {
+      let wrapper = shallow(<ProgressNodes {...baseProps} />);
+
+      expect(wrapper.find('.node')).toHaveLength(6);
+      expect(wrapper.find('.active')).toHaveLength(2);
+      expect(wrapper.find('.active').first().last().text()).toEqual(
+        'Tell us about your project'
+      );
+
+      expect(wrapper.find('.done')).toHaveLength(2);
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('should render step 1 if has projectId', function() {
+      let props = {
+        ...baseProps,
+        params: {
+          projectId: 'my-cool-project'
+        }
+      };
+
+      let wrapper = shallow(<ProgressNodes {...props} />);
+
+      expect(wrapper.find('.node')).toHaveLength(6);
+      expect(wrapper.find('.active')).toHaveLength(2);
+      expect(wrapper.find('.active').first().last().text()).toEqual(
+        'Configure your application and send an event'
+      );
+
+      expect(wrapper.find('.done')).toHaveLength(4);
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+  });
+});
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
new file mode 100644
index 0000000000..010ad7b796
--- /dev/null
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
@@ -0,0 +1,49 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Project render() should render NotFound if no matching organization 1`] = `
+<div
+  className="onboarding-info"
+>
+  <h2>
+    Choose a language or framework
+  </h2>
+  <PlatformPicker
+    location={
+      Object {
+        "query": Object {},
+      }
+    }
+    params={
+      Object {
+        "orgId": "my-cool-org",
+      }
+    }
+    setPlatform={[Function]}
+  />
+  <div
+    className="project-name client-platform"
+  >
+    <h4>
+      Give your project a name:
+    </h4>
+    <div
+      className="project-name-wrapper"
+    >
+      <PlatformiconTile />
+      <input
+        label="Project Name"
+        name="name"
+        onChange={[Function]}
+        placeholder="Project name"
+        type="text"
+      />
+    </div>
+    <div
+      className="btn btn-primary pull-right"
+      onClick={[Function]}
+    >
+      Continue
+    </div>
+  </div>
+</div>
+`;
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
new file mode 100644
index 0000000000..afa9cca181
--- /dev/null
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
@@ -0,0 +1,1741 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`PlatformPicker render() should only render Mobile platforms under Mobile tab 1`] = `
+<div
+  className="platform-picker"
+>
+  <ul
+    className="nav nav-tabs"
+  >
+    <li
+      style={
+        Object {
+          "float": "right",
+          "marginRight": 0,
+        }
+      }
+    >
+      <div
+        className="platform-filter-container"
+      >
+        <span
+          className="icon icon-search"
+        />
+        <input
+          className="platform-filter"
+          label="Filter"
+          onChange={[Function]}
+          placeholder="Filter"
+          type="text"
+        />
+      </div>
+    </li>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Popular
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Frontend
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Mobile
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Backend
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      All
+    </ListLink>
+  </ul>
+  <ul
+    className="client-platform-list platform-tiles"
+  >
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="java-android"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="objc"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="cocoa"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="swift"
+    />
+  </ul>
+</div>
+`;
+
+exports[`PlatformPicker render() should render renderPlatformList with Python when filtered with py 1`] = `
+<div
+  className="platform-picker"
+>
+  <ul
+    className="nav nav-tabs"
+  >
+    <li
+      style={
+        Object {
+          "float": "right",
+          "marginRight": 0,
+        }
+      }
+    >
+      <div
+        className="platform-filter-container"
+      >
+        <span
+          className="icon icon-search"
+        />
+        <input
+          className="platform-filter"
+          label="Filter"
+          onChange={[Function]}
+          placeholder="Filter"
+          type="text"
+        />
+      </div>
+    </li>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Popular
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Frontend
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Mobile
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Backend
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      All
+    </ListLink>
+  </ul>
+  <ul
+    className="client-platform-list platform-tiles"
+  >
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-bottle"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-celery"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-django"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-flask"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-pylons"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-pyramid"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-rq"
+    />
+    <PlatformCard
+      className=""
+      onClick={[Function]}
+      platform="python-tornado"
+    />
+  </ul>
+</div>
+`;
+
+exports[`PlatformPicker render() should render renderPlatformList with community SDKs message if platform not found 1`] = `
+<div
+  className="platform-picker"
+>
+  <ul
+    className="nav nav-tabs"
+  >
+    <li
+      style={
+        Object {
+          "float": "right",
+          "marginRight": 0,
+        }
+      }
+    >
+      <div
+        className="platform-filter-container"
+      >
+        <span
+          className="icon icon-search"
+        />
+        <input
+          className="platform-filter"
+          label="Filter"
+          onChange={[Function]}
+          placeholder="Filter"
+          type="text"
+        />
+      </div>
+    </li>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Popular
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Frontend
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Mobile
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      Backend
+    </ListLink>
+    <ListLink
+      activeClassName="active"
+      index={false}
+      isActive={[Function]}
+      onClick={[Function]}
+      to=""
+    >
+      All
+    </ListLink>
+  </ul>
+  <p>
+    Not finding your platform? There's a rich ecosystem of community supported SDKs as well (including Perl, CFML, Clojure, and ActionScript).
+     Try searching for Sentry clients or contacting support.
+  </p>
+</div>
+`;
+
+exports[`PlatformPicker render() should update State.tab onClick when particular tab is clicked 1`] = `
+<PlatformPicker
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "isActive": "",
+      "platform": "",
+      "setPlatform": "",
+    }
+  }
+  setPlatform={[Function]}
+>
+  <div
+    className="platform-picker"
+  >
+    <ul
+      className="nav nav-tabs"
+    >
+      <li
+        style={
+          Object {
+            "float": "right",
+            "marginRight": 0,
+          }
+        }
+      >
+        <div
+          className="platform-filter-container"
+        >
+          <span
+            className="icon icon-search"
+          />
+          <input
+            className="platform-filter"
+            label="Filter"
+            onChange={[Function]}
+            placeholder="Filter"
+            type="text"
+          />
+        </div>
+      </li>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        onClick={[Function]}
+        to=""
+      >
+        <li
+          className=""
+        >
+          <Link
+            onClick={[Function]}
+            onlyActiveOnIndex={false}
+            style={Object {}}
+            to=""
+          >
+            <a
+              onClick={[Function]}
+              style={Object {}}
+            >
+              Popular
+            </a>
+          </Link>
+        </li>
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        onClick={[Function]}
+        to=""
+      >
+        <li
+          className=""
+        >
+          <Link
+            onClick={[Function]}
+            onlyActiveOnIndex={false}
+            style={Object {}}
+            to=""
+          >
+            <a
+              onClick={[Function]}
+              style={Object {}}
+            >
+              Frontend
+            </a>
+          </Link>
+        </li>
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        onClick={[Function]}
+        to=""
+      >
+        <li
+          className=""
+        >
+          <Link
+            onClick={[Function]}
+            onlyActiveOnIndex={false}
+            style={Object {}}
+            to=""
+          >
+            <a
+              onClick={[Function]}
+              style={Object {}}
+            >
+              Mobile
+            </a>
+          </Link>
+        </li>
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        onClick={[Function]}
+        to=""
+      >
+        <li
+          className=""
+        >
+          <Link
+            onClick={[Function]}
+            onlyActiveOnIndex={false}
+            style={Object {}}
+            to=""
+          >
+            <a
+              onClick={[Function]}
+              style={Object {}}
+            >
+              Backend
+            </a>
+          </Link>
+        </li>
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        onClick={[Function]}
+        to=""
+      >
+        <li
+          className="active"
+        >
+          <Link
+            onClick={[Function]}
+            onlyActiveOnIndex={false}
+            style={Object {}}
+            to=""
+          >
+            <a
+              onClick={[Function]}
+              style={Object {}}
+            >
+              All
+            </a>
+          </Link>
+        </li>
+      </ListLink>
+    </ul>
+    <ul
+      className="client-platform-list platform-tiles"
+    >
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="csharp"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="csharp"
+          >
+            <li
+              className="platform-tile list-unstyled csharp csharp "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-csharp"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            C#
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="elixir"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="elixir"
+          >
+            <li
+              className="platform-tile list-unstyled elixir elixir "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-elixir"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Elixir
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="go"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="go"
+          >
+            <li
+              className="platform-tile list-unstyled go go "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-go"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Go
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="go-http"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="go-http"
+          >
+            <li
+              className="platform-tile list-unstyled go-http go "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-go-http"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            net/http
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java-android"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java-android"
+          >
+            <li
+              className="platform-tile list-unstyled java-android java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java-android"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Android
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java-appengine"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java-appengine"
+          >
+            <li
+              className="platform-tile list-unstyled java-appengine java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java-appengine"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Google App Engine
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java"
+          >
+            <li
+              className="platform-tile list-unstyled java java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Java
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java-log4j"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java-log4j"
+          >
+            <li
+              className="platform-tile list-unstyled java-log4j java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java-log4j"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Log4j 1.x
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java-log4j2"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java-log4j2"
+          >
+            <li
+              className="platform-tile list-unstyled java-log4j2 java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java-log4j2"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Log4j 2.x
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java-logback"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java-logback"
+          >
+            <li
+              className="platform-tile list-unstyled java-logback java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java-logback"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Logback
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="java-logging"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="java-logging"
+          >
+            <li
+              className="platform-tile list-unstyled java-logging java "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-java-logging"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            java.util.logging
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript-angular"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript-angular"
+          >
+            <li
+              className="platform-tile list-unstyled javascript-angular javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript-angular"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Angular
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript-angularjs"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript-angularjs"
+          >
+            <li
+              className="platform-tile list-unstyled javascript-angularjs javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript-angularjs"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            AngularJS
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript-backbone"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript-backbone"
+          >
+            <li
+              className="platform-tile list-unstyled javascript-backbone javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript-backbone"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Backbone
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript-ember"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript-ember"
+          >
+            <li
+              className="platform-tile list-unstyled javascript-ember javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript-ember"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Ember
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript"
+          >
+            <li
+              className="platform-tile list-unstyled javascript javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            JavaScript
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript-react"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript-react"
+          >
+            <li
+              className="platform-tile list-unstyled javascript-react javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript-react"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            React
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="javascript-vue"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="javascript-vue"
+          >
+            <li
+              className="platform-tile list-unstyled javascript-vue javascript "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-javascript-vue"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Vue
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="node-connect"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="node-connect"
+          >
+            <li
+              className="platform-tile list-unstyled node-connect node "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-node-connect"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Connect
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="node-express"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="node-express"
+          >
+            <li
+              className="platform-tile list-unstyled node-express node "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-node-express"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Express
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="node-koa"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="node-koa"
+          >
+            <li
+              className="platform-tile list-unstyled node-koa node "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-node-koa"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Koa
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="node"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="node"
+          >
+            <li
+              className="platform-tile list-unstyled node node "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-node"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Node.js
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="objc"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="objc"
+          >
+            <li
+              className="platform-tile list-unstyled objc objc "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-objc"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Objective-C
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="php-laravel"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="php-laravel"
+          >
+            <li
+              className="platform-tile list-unstyled php-laravel php "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-php-laravel"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Laravel
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="php-monolog"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="php-monolog"
+          >
+            <li
+              className="platform-tile list-unstyled php-monolog php "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-php-monolog"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Monolog
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="php"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="php"
+          >
+            <li
+              className="platform-tile list-unstyled php php "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-php"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            PHP
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="php-symfony2"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="php-symfony2"
+          >
+            <li
+              className="platform-tile list-unstyled php-symfony2 php "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-php-symfony2"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Symfony2
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-bottle"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-bottle"
+          >
+            <li
+              className="platform-tile list-unstyled python-bottle python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-bottle"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Bottle
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-celery"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-celery"
+          >
+            <li
+              className="platform-tile list-unstyled python-celery python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-celery"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Celery
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-django"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-django"
+          >
+            <li
+              className="platform-tile list-unstyled python-django python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-django"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Django
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-flask"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-flask"
+          >
+            <li
+              className="platform-tile list-unstyled python-flask python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-flask"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Flask
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-pylons"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-pylons"
+          >
+            <li
+              className="platform-tile list-unstyled python-pylons python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-pylons"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Pylons
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-pyramid"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-pyramid"
+          >
+            <li
+              className="platform-tile list-unstyled python-pyramid python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-pyramid"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Pyramid
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python"
+          >
+            <li
+              className="platform-tile list-unstyled python python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Python
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-rq"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-rq"
+          >
+            <li
+              className="platform-tile list-unstyled python-rq python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-rq"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            RQ
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="python-tornado"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="python-tornado"
+          >
+            <li
+              className="platform-tile list-unstyled python-tornado python "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-python-tornado"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Tornado
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="cocoa"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="cocoa"
+          >
+            <li
+              className="platform-tile list-unstyled cocoa cocoa "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-cocoa"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            React-Native
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="ruby-rack"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="ruby-rack"
+          >
+            <li
+              className="platform-tile list-unstyled ruby-rack ruby "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-ruby-rack"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Rack
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="ruby-rails"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="ruby-rails"
+          >
+            <li
+              className="platform-tile list-unstyled ruby-rails ruby "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-ruby-rails"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Rails
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="ruby"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="ruby"
+          >
+            <li
+              className="platform-tile list-unstyled ruby ruby "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-ruby"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Ruby
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="swift"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="swift"
+          >
+            <li
+              className="platform-tile list-unstyled swift swift "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-swift"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Swift
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="mock"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="mock"
+          >
+            <li
+              className="platform-tile list-unstyled mock mock "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-mock"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Mock Integration
+             
+          </h5>
+        </span>
+      </PlatformCard>
+      <PlatformCard
+        className=""
+        onClick={[Function]}
+        platform="other"
+      >
+        <span
+          className="platform-card"
+        >
+          <PlatformiconTile
+            className=""
+            onClick={[Function]}
+            platform="other"
+          >
+            <li
+              className="platform-tile list-unstyled other other "
+              onClick={[Function]}
+            >
+              <span
+                className="platformicon platformicon-other"
+              />
+            </li>
+          </PlatformiconTile>
+          <h5>
+             
+            Other
+             
+          </h5>
+        </span>
+      </PlatformCard>
+    </ul>
+  </div>
+</PlatformPicker>
+`;
diff --git a/tests/js/spec/views/onboarding/project/index.spec.jsx b/tests/js/spec/views/onboarding/project/index.spec.jsx
new file mode 100644
index 0000000000..03b69c28ff
--- /dev/null
+++ b/tests/js/spec/views/onboarding/project/index.spec.jsx
@@ -0,0 +1,42 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import {Client} from 'app/api';
+import Project from 'app/views/onboarding/project';
+
+describe('Project', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+    this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  describe('render()', function() {
+    const baseProps = {
+      location: {query: {}},
+      setPlatform: () => {},
+      params: {
+        projectId: '',
+        orgId: 'testOrg'
+      }
+    };
+
+    it('should render NotFound if no matching organization', function() {
+      let props = {
+        ...baseProps,
+        params: {
+          orgId: 'my-cool-org'
+        }
+      };
+
+      let wrapper = shallow(<Project {...props} />, {
+        organization: {id: '1337', slug: 'testOrg'}
+      });
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+  });
+});
diff --git a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
new file mode 100644
index 0000000000..fe8238dae8
--- /dev/null
+++ b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
@@ -0,0 +1,105 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import {Client} from 'app/api';
+import PlatformPicker from 'app/views/onboarding/project/platformpicker';
+import {categoryLists} from 'app/views/onboarding/utils';
+import sinon from 'sinon';
+
+describe('PlatformPicker', function() {
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+    this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  describe('render()', function() {
+    const baseProps = {
+      setPlatform: () => {},
+      location: {query: {}},
+      params: {
+        setPlatform: '',
+        platform: '',
+        isActive: ''
+      }
+    };
+
+    it('should only render Mobile platforms under Mobile tab', function() {
+      let props = {
+        ...baseProps
+      };
+
+      let wrapper = shallow(<PlatformPicker {...props} />);
+      wrapper.setState({tab: 'Mobile'});
+      let filteredPlatforms = wrapper
+        .find('PlatformCard')
+        .map(node => node.prop('platform'));
+
+      expect(filteredPlatforms).not.toContain('java');
+      expect(filteredPlatforms).toContain(categoryLists.Mobile[0]);
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('should render renderPlatformList with Python when filtered with py', function() {
+      let props = {
+        ...baseProps
+      };
+
+      let wrapper = shallow(<PlatformPicker {...props} />);
+
+      wrapper.setState({tab: 'All', filter: 'py'});
+
+      let filteredPlatforms = wrapper
+        .find('PlatformCard')
+        .map(node => node.prop('platform'));
+      expect(filteredPlatforms).not.toContain('java');
+      expect(filteredPlatforms).toContain('python-flask');
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('should render renderPlatformList with community SDKs message if platform not found', function() {
+      let props = {
+        ...baseProps
+      };
+
+      let wrapper = shallow(<PlatformPicker {...props} />);
+      wrapper.setState({filter: 'aaaaaa'});
+
+      expect(wrapper.text()).toContain('Not finding your platform?');
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('should update State.tab onClick when particular tab is clicked', function() {
+      let props = {
+        ...baseProps
+      };
+
+      let wrapper = mount(<PlatformPicker {...props} />, {
+        context: {
+          router: TestStubs.router()
+        },
+        childContextTypes: {
+          router: React.PropTypes.object
+        }
+      });
+
+      let testListLink = wrapper.find('ListLink').last().find('a');
+      expect(wrapper.state().tab).toBe('Popular');
+      expect(wrapper.state().tab).not.toBe('All');
+
+      testListLink.simulate('click');
+
+      expect(wrapper.state().tab).not.toBe('Popular');
+      expect(wrapper.state().tab).toBe('All');
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+  });
+});
diff --git a/webpack.config.js b/webpack.config.js
index e90d4843b2..a8be9b2450 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -14,6 +14,8 @@ if (process.env.SENTRY_STATIC_DIST_PATH) {
 }
 
 var IS_PRODUCTION = process.env.NODE_ENV === 'production';
+var IS_TEST = process.env.NODE_ENV === 'TEST' || process.env.TEST_SUITE;
+
 var REFRESH = process.env.WEBPACK_LIVERELOAD === '1';
 
 var babelConfig = JSON.parse(fs.readFileSync(path.join(__dirname, '.babelrc')));
@@ -166,7 +168,10 @@ var config = {
   ],
   resolve: {
     alias: {
-      'sentry-locale': path.join(__dirname, 'src', 'sentry', 'locale')
+      'sentry-locale': path.join(__dirname, 'src', 'sentry', 'locale'),
+      'integration-docs-platforms': IS_TEST
+        ? path.join(__dirname, 'tests/fixtures/_platforms.json')
+        : path.join(__dirname, 'src/sentry/integration-docs/_platforms.json')
     },
     modules: [path.join(__dirname, staticPrefix), 'node_modules'],
     extensions: ['*', '.jsx', '.js', '.json']
diff --git a/yarn.lock b/yarn.lock
index 51f1fc81c4..7ae16607b4 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -6,7 +6,7 @@ Base64@~0.2.0:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/Base64/-/Base64-0.2.1.tgz#ba3a4230708e186705065e66babdd4c35cf60028"
 
-abab@^1.0.0, abab@^1.0.3:
+abab@^1.0.3:
   version "1.0.3"
   resolved "https://registry.yarnpkg.com/abab/-/abab-1.0.3.tgz#b81de5f7274ec4e756d797cd834f303642724e5d"
 
@@ -20,12 +20,6 @@ acorn-dynamic-import@^2.0.0:
   dependencies:
     acorn "^4.0.3"
 
-acorn-globals@^1.0.4:
-  version "1.0.9"
-  resolved "https://registry.yarnpkg.com/acorn-globals/-/acorn-globals-1.0.9.tgz#55bb5e98691507b74579d0513413217c380c54cf"
-  dependencies:
-    acorn "^2.1.0"
-
 acorn-globals@^3.1.0:
   version "3.1.0"
   resolved "https://registry.yarnpkg.com/acorn-globals/-/acorn-globals-3.1.0.tgz#fd8270f71fbb4996b004fa880ee5d46573a731bf"
@@ -38,10 +32,6 @@ acorn-jsx@^3.0.0:
   dependencies:
     acorn "^3.0.4"
 
-acorn@^2.1.0, acorn@^2.4.0:
-  version "2.7.0"
-  resolved "https://registry.yarnpkg.com/acorn/-/acorn-2.7.0.tgz#ab6e7d9d886aaca8b085bc3312b79a198433f0e7"
-
 acorn@^3.0.4:
   version "3.3.0"
   resolved "https://registry.yarnpkg.com/acorn/-/acorn-3.3.0.tgz#45e37fb39e8da3f25baee3ff5369e2bb5f22017a"
@@ -1236,17 +1226,26 @@ chalk@1.1.3, chalk@^1.0.0, chalk@^1.1.0, chalk@^1.1.1, chalk@^1.1.3:
     strip-ansi "^3.0.0"
     supports-color "^2.0.0"
 
-cheerio@^0.20.0:
-  version "0.20.0"
-  resolved "https://registry.yarnpkg.com/cheerio/-/cheerio-0.20.0.tgz#5c710f2bab95653272842ba01c6ea61b3545ec35"
+cheerio@^0.22.0:
+  version "0.22.0"
+  resolved "https://registry.yarnpkg.com/cheerio/-/cheerio-0.22.0.tgz#a9baa860a3f9b595a6b81b1a86873121ed3a269e"
   dependencies:
     css-select "~1.2.0"
     dom-serializer "~0.1.0"
     entities "~1.1.1"
-    htmlparser2 "~3.8.1"
-    lodash "^4.1.0"
-  optionalDependencies:
-    jsdom "^7.0.2"
+    htmlparser2 "^3.9.1"
+    lodash.assignin "^4.0.9"
+    lodash.bind "^4.1.4"
+    lodash.defaults "^4.0.1"
+    lodash.filter "^4.4.0"
+    lodash.flatten "^4.2.0"
+    lodash.foreach "^4.3.0"
+    lodash.map "^4.4.0"
+    lodash.merge "^4.4.0"
+    lodash.pick "^4.2.1"
+    lodash.reduce "^4.4.0"
+    lodash.reject "^4.4.0"
+    lodash.some "^4.4.0"
 
 chokidar@^1.4.3:
   version "1.6.1"
@@ -1609,15 +1608,11 @@ csso@~2.3.1:
     clap "^1.0.9"
     source-map "^0.5.3"
 
-cssom@0.3.x, "cssom@>= 0.3.0 < 0.4.0":
-  version "0.3.1"
-  resolved "https://registry.yarnpkg.com/cssom/-/cssom-0.3.1.tgz#c9e37ef2490e64f6d1baa10fda852257082c25d3"
-
-"cssom@>= 0.3.2 < 0.4.0":
+cssom@0.3.x, "cssom@>= 0.3.2 < 0.4.0":
   version "0.3.2"
   resolved "https://registry.yarnpkg.com/cssom/-/cssom-0.3.2.tgz#b8036170c79f07a90ff2f16e22284027a243848b"
 
-"cssstyle@>= 0.2.29 < 0.3.0", "cssstyle@>= 0.2.37 < 0.3.0":
+"cssstyle@>= 0.2.37 < 0.3.0":
   version "0.2.37"
   resolved "https://registry.yarnpkg.com/cssstyle/-/cssstyle-0.2.37.tgz#541097234cb2513c83ceed3acddc27ff27987d54"
   dependencies:
@@ -1683,7 +1678,7 @@ defaults@^1.0.2:
   dependencies:
     clone "^1.0.2"
 
-define-properties@^1.1.1, define-properties@^1.1.2:
+define-properties@^1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/define-properties/-/define-properties-1.1.2.tgz#83a73f2fea569898fb737193c8f873caf6d45c94"
   dependencies:
@@ -1776,13 +1771,17 @@ domelementtype@1, domelementtype@~1.1.1:
   version "1.1.3"
   resolved "https://registry.yarnpkg.com/domelementtype/-/domelementtype-1.1.3.tgz#bd28773e2642881aec51544924299c5cd822185b"
 
-domhandler@2.3:
-  version "2.3.0"
-  resolved "https://registry.yarnpkg.com/domhandler/-/domhandler-2.3.0.tgz#2de59a0822d5027fabff6f032c2b25a2a8abe738"
+domelementtype@^1.3.0:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/domelementtype/-/domelementtype-1.3.0.tgz#b17aed82e8ab59e52dd9c19b1756e0fc187204c2"
+
+domhandler@^2.3.0:
+  version "2.4.1"
+  resolved "https://registry.yarnpkg.com/domhandler/-/domhandler-2.4.1.tgz#892e47000a99be55bbf3774ffea0561d8879c259"
   dependencies:
     domelementtype "1"
 
-domutils@1.5, domutils@1.5.1:
+domutils@1.5.1, domutils@^1.5.1:
   version "1.5.1"
   resolved "https://registry.yarnpkg.com/domutils/-/domutils-1.5.1.tgz#dcd8488a26f563d61079e48c9f7b7e32373682cf"
   dependencies:
@@ -1831,11 +1830,7 @@ enhanced-resolve@^3.0.0:
     object-assign "^4.0.1"
     tapable "^0.2.5"
 
-entities@1.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/entities/-/entities-1.0.0.tgz#b2987aa3821347fcde642b24fdfc9e4fb712bf26"
-
-entities@~1.1.1:
+entities@^1.1.1, entities@~1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/entities/-/entities-1.1.1.tgz#6e5c2d0a5621b5dadaecef80b90edfb5cd7772f0"
 
@@ -1851,16 +1846,20 @@ enzyme-to-json@^1.5.1:
     object-values "^1.0.0"
     object.entries "^1.0.3"
 
-enzyme@2.4.1:
-  version "2.4.1"
-  resolved "https://registry.yarnpkg.com/enzyme/-/enzyme-2.4.1.tgz#90fa9861d982d0ceb92a9fd57e38426a2f74d3b1"
+enzyme@2.9.1:
+  version "2.9.1"
+  resolved "https://registry.yarnpkg.com/enzyme/-/enzyme-2.9.1.tgz#07d5ce691241240fb817bf2c4b18d6e530240df6"
   dependencies:
-    cheerio "^0.20.0"
+    cheerio "^0.22.0"
+    function.prototype.name "^1.0.0"
     is-subset "^0.1.1"
-    lodash "^4.13.1"
+    lodash "^4.17.4"
     object-is "^1.0.1"
-    object.assign "^4.0.3"
-    object.values "^1.0.3"
+    object.assign "^4.0.4"
+    object.entries "^1.0.4"
+    object.values "^1.0.4"
+    prop-types "^15.5.10"
+    uuid "^3.0.1"
 
 "errno@>=0.1.1 <0.2.0-0", errno@^0.1.1, errno@^0.1.3:
   version "0.1.4"
@@ -1874,7 +1873,7 @@ error-ex@^1.2.0:
   dependencies:
     is-arrayish "^0.2.1"
 
-es-abstract@^1.3.2, es-abstract@^1.6.1, es-abstract@^1.7.0:
+es-abstract@^1.6.1, es-abstract@^1.7.0:
   version "1.7.0"
   resolved "https://registry.yarnpkg.com/es-abstract/-/es-abstract-1.7.0.tgz#dfade774e01bfcd97f96180298c449c8623fb94c"
   dependencies:
@@ -2370,6 +2369,14 @@ function-bind@^1.0.2, function-bind@^1.1.0:
   version "1.1.0"
   resolved "https://registry.yarnpkg.com/function-bind/-/function-bind-1.1.0.tgz#16176714c801798e4e8f2cf7f7529467bb4a5771"
 
+function.prototype.name@^1.0.0:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/function.prototype.name/-/function.prototype.name-1.0.2.tgz#b511a1a15d35fb4834cb35464b6b6b03f4e543ea"
+  dependencies:
+    define-properties "^1.1.2"
+    function-bind "^1.1.0"
+    is-callable "^1.1.3"
+
 gauge@~2.7.3:
   version "2.7.4"
   resolved "https://registry.yarnpkg.com/gauge/-/gauge-2.7.4.tgz#2c03405c7538c39d7eb37b317022e325fb018bf7"
@@ -2589,15 +2596,16 @@ html-encoding-sniffer@^1.0.1:
   dependencies:
     whatwg-encoding "^1.0.1"
 
-htmlparser2@~3.8.1:
-  version "3.8.3"
-  resolved "https://registry.yarnpkg.com/htmlparser2/-/htmlparser2-3.8.3.tgz#996c28b191516a8be86501a7d79757e5c70c1068"
+htmlparser2@^3.9.1:
+  version "3.9.2"
+  resolved "https://registry.yarnpkg.com/htmlparser2/-/htmlparser2-3.9.2.tgz#1bdf87acca0f3f9e53fa4fcceb0f4b4cbb00b338"
   dependencies:
-    domelementtype "1"
-    domhandler "2.3"
-    domutils "1.5"
-    entities "1.0"
-    readable-stream "1.1"
+    domelementtype "^1.3.0"
+    domhandler "^2.3.0"
+    domutils "^1.5.1"
+    entities "^1.1.1"
+    inherits "^2.0.1"
+    readable-stream "^2.0.2"
 
 http-browserify@^1.3.2:
   version "1.7.0"
@@ -3239,26 +3247,6 @@ jsbn@~0.1.0:
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/jsbn/-/jsbn-0.1.0.tgz#650987da0dd74f4ebf5a11377a2aa2d273e97dfd"
 
-jsdom@^7.0.2:
-  version "7.2.2"
-  resolved "https://registry.yarnpkg.com/jsdom/-/jsdom-7.2.2.tgz#40b402770c2bda23469096bee91ab675e3b1fc6e"
-  dependencies:
-    abab "^1.0.0"
-    acorn "^2.4.0"
-    acorn-globals "^1.0.4"
-    cssom ">= 0.3.0 < 0.4.0"
-    cssstyle ">= 0.2.29 < 0.3.0"
-    escodegen "^1.6.1"
-    nwmatcher ">= 1.3.7 < 2.0.0"
-    parse5 "^1.5.1"
-    request "^2.55.0"
-    sax "^1.1.4"
-    symbol-tree ">= 3.1.0 < 4.0.0"
-    tough-cookie "^2.2.0"
-    webidl-conversions "^2.0.0"
-    whatwg-url-compat "~0.6.5"
-    xml-name-validator ">= 2.0.1 < 3.0.0"
-
 jsdom@^9.11.0:
   version "9.12.0"
   resolved "https://registry.yarnpkg.com/jsdom/-/jsdom-9.12.0.tgz#e8c546fffcb06c00d4833ca84410fed7f8a097d4"
@@ -3465,6 +3453,14 @@ lodash-compat@^3.10.2:
   version "3.10.2"
   resolved "https://registry.yarnpkg.com/lodash-compat/-/lodash-compat-3.10.2.tgz#c6940128a9d30f8e902cd2cf99fd0cba4ecfc183"
 
+lodash.assignin@^4.0.9:
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/lodash.assignin/-/lodash.assignin-4.2.0.tgz#ba8df5fb841eb0a3e8044232b0e263a8dc6a28a2"
+
+lodash.bind@^4.1.4:
+  version "4.2.1"
+  resolved "https://registry.yarnpkg.com/lodash.bind/-/lodash.bind-4.2.1.tgz#7ae3017e939622ac31b7d7d7dcb1b34db1690d35"
+
 lodash.camelcase@^4.3.0:
   version "4.3.0"
   resolved "https://registry.yarnpkg.com/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz#b28aa6288a2b9fc651035c7711f65ab6190331a6"
@@ -3477,14 +3473,22 @@ lodash.debounce@^4.0.0:
   version "4.0.8"
   resolved "https://registry.yarnpkg.com/lodash.debounce/-/lodash.debounce-4.0.8.tgz#82d79bff30a67c4005ffd5e2515300ad9ca4d7af"
 
-lodash.filter@^4.6.0:
+lodash.defaults@^4.0.1:
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/lodash.defaults/-/lodash.defaults-4.2.0.tgz#d09178716ffea4dde9e5fb7b37f6f0802274580c"
+
+lodash.filter@^4.4.0, lodash.filter@^4.6.0:
   version "4.6.0"
   resolved "https://registry.yarnpkg.com/lodash.filter/-/lodash.filter-4.6.0.tgz#668b1d4981603ae1cc5a6fa760143e480b4c4ace"
 
-lodash.flatten@^4.4.0:
+lodash.flatten@^4.2.0, lodash.flatten@^4.4.0:
   version "4.4.0"
   resolved "https://registry.yarnpkg.com/lodash.flatten/-/lodash.flatten-4.4.0.tgz#f31c22225a9632d2bbf8e4addbef240aa765a61f"
 
+lodash.foreach@^4.3.0:
+  version "4.5.0"
+  resolved "https://registry.yarnpkg.com/lodash.foreach/-/lodash.foreach-4.5.0.tgz#1a6a35eace401280c7f06dddec35165ab27e3e53"
+
 lodash.isnil@^4.0.0:
   version "4.0.0"
   resolved "https://registry.yarnpkg.com/lodash.isnil/-/lodash.isnil-4.0.0.tgz#49e28cd559013458c814c5479d3c663a21bfaa6c"
@@ -3493,14 +3497,26 @@ lodash.isplainobject@^4.0.6:
   version "4.0.6"
   resolved "https://registry.yarnpkg.com/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz#7c526a52d89b45c45cc690b88163be0497f550cb"
 
+lodash.map@^4.4.0:
+  version "4.6.0"
+  resolved "https://registry.yarnpkg.com/lodash.map/-/lodash.map-4.6.0.tgz#771ec7839e3473d9c4cde28b19394c3562f4f6d3"
+
 lodash.memoize@^4.1.2:
   version "4.1.2"
   resolved "https://registry.yarnpkg.com/lodash.memoize/-/lodash.memoize-4.1.2.tgz#bcc6c49a42a2840ed997f323eada5ecd182e0bfe"
 
+lodash.merge@^4.4.0:
+  version "4.6.0"
+  resolved "https://registry.yarnpkg.com/lodash.merge/-/lodash.merge-4.6.0.tgz#69884ba144ac33fe699737a6086deffadd0f89c5"
+
 lodash.omitby@^4.5.0:
   version "4.6.0"
   resolved "https://registry.yarnpkg.com/lodash.omitby/-/lodash.omitby-4.6.0.tgz#5c15ff4754ad555016b53c041311e8f079204791"
 
+lodash.pick@^4.2.1:
+  version "4.4.0"
+  resolved "https://registry.yarnpkg.com/lodash.pick/-/lodash.pick-4.4.0.tgz#52f05610fff9ded422611441ed1fc123a03001b3"
+
 lodash.pickby@^4.6.0:
   version "4.6.0"
   resolved "https://registry.yarnpkg.com/lodash.pickby/-/lodash.pickby-4.6.0.tgz#7dea21d8c18d7703a27c704c15d3b84a67e33aff"
@@ -3509,6 +3525,18 @@ lodash.range@^3.2.0:
   version "3.2.0"
   resolved "https://registry.yarnpkg.com/lodash.range/-/lodash.range-3.2.0.tgz#f461e588f66683f7eadeade513e38a69a565a15d"
 
+lodash.reduce@^4.4.0:
+  version "4.6.0"
+  resolved "https://registry.yarnpkg.com/lodash.reduce/-/lodash.reduce-4.6.0.tgz#f1ab6b839299ad48f784abbf476596f03b914d3b"
+
+lodash.reject@^4.4.0:
+  version "4.6.0"
+  resolved "https://registry.yarnpkg.com/lodash.reject/-/lodash.reject-4.6.0.tgz#80d6492dc1470864bbf583533b651f42a9f52415"
+
+lodash.some@^4.4.0:
+  version "4.6.0"
+  resolved "https://registry.yarnpkg.com/lodash.some/-/lodash.some-4.6.0.tgz#1bb9f314ef6b8baded13b549169b2a945eb68e4d"
+
 lodash.throttle@^4.0.0:
   version "4.1.1"
   resolved "https://registry.yarnpkg.com/lodash.throttle/-/lodash.throttle-4.1.1.tgz#c23e91b710242ac70c37f1e1cda9274cc39bf2f4"
@@ -3521,10 +3549,14 @@ lodash@^3.8.0:
   version "3.10.1"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-3.10.1.tgz#5bf45e8e49ba4189e17d482789dfd15bd140b7b6"
 
-lodash@^4.0.0, lodash@^4.1.0, lodash@^4.13.1, lodash@^4.14.0, lodash@^4.2.0, lodash@^4.3.0, lodash@^4.5.1:
+lodash@^4.0.0, lodash@^4.14.0, lodash@^4.2.0, lodash@^4.3.0, lodash@^4.5.1:
   version "4.16.4"
   resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.16.4.tgz#01ce306b9bad1319f2a5528674f88297aeb70127"
 
+lodash@^4.17.4:
+  version "4.17.4"
+  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.4.tgz#78203a4d1c328ae1d86dca6460e369b57f4055ae"
+
 lolex@1.3.2:
   version "1.3.2"
   resolved "https://registry.yarnpkg.com/lolex/-/lolex-1.3.2.tgz#7c3da62ffcb30f0f5a80a2566ca24e45d8a01f31"
@@ -3539,6 +3571,12 @@ loose-envify@^1.0.0, loose-envify@^1.1.0, loose-envify@^1.2.0:
   dependencies:
     js-tokens "^1.0.1"
 
+loose-envify@^1.3.1:
+  version "1.3.1"
+  resolved "https://registry.yarnpkg.com/loose-envify/-/loose-envify-1.3.1.tgz#d1a8ad33fa9ce0e713d65fdd0ac8b748d478c848"
+  dependencies:
+    js-tokens "^3.0.0"
+
 macaddress@^0.2.8:
   version "0.2.8"
   resolved "https://registry.yarnpkg.com/macaddress/-/macaddress-0.2.8.tgz#5904dc537c39ec6dbefeae902327135fa8511f12"
@@ -3844,10 +3882,6 @@ number-is-nan@^1.0.0:
   version "1.0.1"
   resolved "https://registry.yarnpkg.com/number-is-nan/-/number-is-nan-1.0.1.tgz#097b602b53422a522c1afb8790318336941a011d"
 
-"nwmatcher@>= 1.3.7 < 2.0.0":
-  version "1.3.8"
-  resolved "https://registry.yarnpkg.com/nwmatcher/-/nwmatcher-1.3.8.tgz#34edb93de1aa6cb4448b573c9f2a059300241157"
-
 "nwmatcher@>= 1.3.9 < 2.0.0":
   version "1.3.9"
   resolved "https://registry.yarnpkg.com/nwmatcher/-/nwmatcher-1.3.9.tgz#8bab486ff7fa3dfd086656bbe8b17116d3692d2a"
@@ -3872,7 +3906,7 @@ object-values@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/object-values/-/object-values-1.0.0.tgz#72af839630119e5b98c3b02bb8c27e3237158105"
 
-object.assign@^4.0.3, object.assign@^4.0.4:
+object.assign@^4.0.4:
   version "4.0.4"
   resolved "https://registry.yarnpkg.com/object.assign/-/object.assign-4.0.4.tgz#b1c9cc044ef1b9fe63606fc141abbb32e14730cc"
   dependencies:
@@ -3880,7 +3914,7 @@ object.assign@^4.0.3, object.assign@^4.0.4:
     function-bind "^1.1.0"
     object-keys "^1.0.10"
 
-object.entries@^1.0.3:
+object.entries@^1.0.3, object.entries@^1.0.4:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/object.entries/-/object.entries-1.0.4.tgz#1bf9a4dd2288f5b33f3a993d257661f05d161a5f"
   dependencies:
@@ -3896,13 +3930,13 @@ object.omit@^2.0.0:
     for-own "^0.1.3"
     is-extendable "^0.1.1"
 
-object.values@^1.0.3:
-  version "1.0.3"
-  resolved "https://registry.yarnpkg.com/object.values/-/object.values-1.0.3.tgz#a7774ba050893fe6a5d5958acd05823e0f426bef"
+object.values@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/object.values/-/object.values-1.0.4.tgz#e524da09b4f66ff05df457546ec72ac99f13069a"
   dependencies:
-    define-properties "^1.1.1"
-    es-abstract "^1.3.2"
-    function-bind "^1.0.2"
+    define-properties "^1.1.2"
+    es-abstract "^1.6.1"
+    function-bind "^1.1.0"
     has "^1.0.1"
 
 on-finished@~2.3.0:
@@ -4422,6 +4456,13 @@ promise@^7.0.3, promise@^7.1.1:
   dependencies:
     asap "~2.0.3"
 
+prop-types@^15.5.10:
+  version "15.5.10"
+  resolved "https://registry.yarnpkg.com/prop-types/-/prop-types-15.5.10.tgz#2797dfc3126182e3a95e3dfbb2e893ddd7456154"
+  dependencies:
+    fbjs "^0.8.9"
+    loose-envify "^1.3.1"
+
 prop-types@^15.5.8:
   version "15.5.8"
   resolved "https://registry.yarnpkg.com/prop-types/-/prop-types-15.5.8.tgz#6b7b2e141083be38c8595aa51fc55775c7199394"
@@ -4683,7 +4724,7 @@ read-pkg@^1.0.0:
     normalize-package-data "^2.3.2"
     path-type "^1.0.0"
 
-readable-stream@1.1, readable-stream@^1.0.27-1, readable-stream@^1.1.13:
+readable-stream@^1.0.27-1, readable-stream@^1.1.13:
   version "1.1.14"
   resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-1.1.14.tgz#7cf4c54ef648e3813084c636dd2079e166c081d9"
   dependencies:
@@ -4872,7 +4913,7 @@ request@^2.51.0:
     tough-cookie "~2.3.0"
     tunnel-agent "~0.4.1"
 
-request@^2.55.0, request@^2.79.0, request@^2.81.0:
+request@^2.79.0, request@^2.81.0:
   version "2.81.0"
   resolved "https://registry.yarnpkg.com/request/-/request-2.81.0.tgz#c6928946a0e06c5f8d6f8a9333469ffda46298a0"
   dependencies:
@@ -5010,7 +5051,7 @@ sane@~1.5.0:
     walker "~1.0.5"
     watch "~0.10.0"
 
-sax@^1.1.4, sax@^1.2.1, sax@~1.2.1:
+sax@^1.2.1, sax@~1.2.1:
   version "1.2.1"
   resolved "https://registry.yarnpkg.com/sax/-/sax-1.2.1.tgz#7b8e656190b228e81a66aea748480d828cd2d37a"
 
@@ -5283,10 +5324,6 @@ svgo@^0.7.0:
     sax "~1.2.1"
     whet.extend "~0.9.9"
 
-"symbol-tree@>= 3.1.0 < 4.0.0":
-  version "3.1.4"
-  resolved "https://registry.yarnpkg.com/symbol-tree/-/symbol-tree-3.1.4.tgz#02b279348d337debc39694c5c95f882d448a312a"
-
 symbol-tree@^3.2.1:
   version "3.2.2"
   resolved "https://registry.yarnpkg.com/symbol-tree/-/symbol-tree-3.2.2.tgz#ae27db38f660a7ae2e1c3b7d1bc290819b8519e6"
@@ -5388,17 +5425,17 @@ to-fast-properties@^1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/to-fast-properties/-/to-fast-properties-1.0.2.tgz#f3f5c0c3ba7299a7ef99427e44633257ade43320"
 
-tough-cookie@^2.2.0, tough-cookie@~2.3.0:
-  version "2.3.1"
-  resolved "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-2.3.1.tgz#99c77dfbb7d804249e8a299d4cb0fd81fef083fd"
-
 tough-cookie@^2.3.2:
   version "2.3.2"
   resolved "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-2.3.2.tgz#f081f76e4c85720e6c37a5faced737150d84072a"
   dependencies:
     punycode "^1.4.1"
 
-tr46@~0.0.1, tr46@~0.0.3:
+tough-cookie@~2.3.0:
+  version "2.3.1"
+  resolved "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-2.3.1.tgz#99c77dfbb7d804249e8a299d4cb0fd81fef083fd"
+
+tr46@~0.0.3:
   version "0.0.3"
   resolved "https://registry.yarnpkg.com/tr46/-/tr46-0.0.3.tgz#8184fd347dac9cdc185992f3a6622e14b9d9ab6a"
 
@@ -5539,7 +5576,7 @@ util@0.10.3, "util@>=0.10.3 <1", util@^0.10.3, util@~0.10.3:
   dependencies:
     inherits "2.0.1"
 
-uuid@^3.0.0:
+uuid@^3.0.0, uuid@^3.0.1:
   version "3.0.1"
   resolved "https://registry.yarnpkg.com/uuid/-/uuid-3.0.1.tgz#6544bba2dfda8c1cf17e629a3a305e2bb1fee6c1"
 
@@ -5596,10 +5633,6 @@ watchpack@^1.2.0:
     chokidar "^1.4.3"
     graceful-fs "^4.1.2"
 
-webidl-conversions@^2.0.0:
-  version "2.0.1"
-  resolved "https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-2.0.1.tgz#3bf8258f7d318c7443c36f2e169402a1a6703506"
-
 webidl-conversions@^3.0.0:
   version "3.0.1"
   resolved "https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-3.0.1.tgz#24534275e2a7bc6be7bc86611cc16ae0a5654871"
@@ -5686,12 +5719,6 @@ whatwg-fetch@^0.9.0:
   version "0.9.0"
   resolved "https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-0.9.0.tgz#0e3684c6cb9995b43efc9df03e4c365d95fd9cc0"
 
-whatwg-url-compat@~0.6.5:
-  version "0.6.5"
-  resolved "https://registry.yarnpkg.com/whatwg-url-compat/-/whatwg-url-compat-0.6.5.tgz#00898111af689bb097541cd5a45ca6c8798445bf"
-  dependencies:
-    tr46 "~0.0.1"
-
 whatwg-url@^4.3.0:
   version "4.7.0"
   resolved "https://registry.yarnpkg.com/whatwg-url/-/whatwg-url-4.7.0.tgz#202035ac1955b087cdd20fa8b58ded3ab1cd2af5"
@@ -5755,7 +5782,7 @@ write@^0.2.1:
   dependencies:
     mkdirp "^0.5.1"
 
-"xml-name-validator@>= 2.0.1 < 3.0.0", xml-name-validator@^2.0.1:
+xml-name-validator@^2.0.1:
   version "2.0.1"
   resolved "https://registry.yarnpkg.com/xml-name-validator/-/xml-name-validator-2.0.1.tgz#4d8b8f1eccd3419aa362061becef515e1e559635"
 
