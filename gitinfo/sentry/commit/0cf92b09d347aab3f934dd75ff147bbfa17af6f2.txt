commit 0cf92b09d347aab3f934dd75ff147bbfa17af6f2
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri May 4 13:13:41 2018 -0700

    feat: Add backfill notice (#8296)
    
    * feat: Add backfill notice
    
    * style backfill notice
    
    * add dismissal ability
    
    * revert accidental change to flag
    
    * update design to be more chill
    
    * return null if shouldDisplayWarning is false

diff --git a/src/sentry/static/sentry/app/components/projectHeader/backfillNotice.jsx b/src/sentry/static/sentry/app/components/projectHeader/backfillNotice.jsx
new file mode 100644
index 0000000000..d73e50edd9
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/projectHeader/backfillNotice.jsx
@@ -0,0 +1,94 @@
+import React from 'react';
+import styled from 'react-emotion';
+import moment from 'moment';
+import Cookies from 'js-cookie';
+
+import {tct} from 'app/locale';
+import SentryTypes from 'app/proptypes';
+import space from '../../styles/space';
+import InlineSvg from '../inlineSvg';
+import {slideInRight} from '../../styles/animations';
+
+const BACKFILL_DATE = '2018-04-02';
+
+export default class BackfillNotice extends React.Component {
+  static propTypes = {
+    project: SentryTypes.Project,
+  };
+
+  constructor(...args) {
+    super(...args);
+
+    this.state = {
+      isDismissed: false,
+    };
+  }
+
+  onClose = () => {
+    Cookies.set('backfill_notification_closed', 'true');
+    this.setState({isDismissed: true});
+  };
+
+  render() {
+    const shouldDisplayWarning =
+      moment(BACKFILL_DATE).isAfter(moment(this.props.project.dateCreated)) &&
+      Cookies.get('backfill_notification_closed') !== 'true' &&
+      this.state.isDismissed == false;
+
+    return shouldDisplayWarning ? (
+      <StyledCallout>
+        <InfoIcon src="icon-circle-info" />
+        {tct(
+          `You can now filter by environment!
+          Some data before [backfillDate] may be temporarily unavailable.`,
+          {
+            backfillDate: moment(BACKFILL_DATE).format('MMM d'),
+          }
+        )}
+        <CloseButton src="icon-close-lg" onClick={this.onClose} />
+      </StyledCallout>
+    ) : null;
+  }
+}
+
+const StyledCallout = styled.div`
+  font-size: ${p => p.theme.fontSizeSmall};
+  color: ${p => p.theme.textColor};
+  background-color: ${p => p.theme.offWhite2};
+  border-radius: ${p => p.theme.borderRadius};
+  animation: 0.5s ${slideInRight};
+  width: 305px;
+  padding: ${space(1)};
+  position: absolute;
+  right: calc(100% + ${space(2)});
+  top: ${space(2)};
+  display: flex;
+  align-items: center;
+  z-index: ${p => p.theme.zIndex.dropdown};
+  &:before {
+    content: '';
+    border-style: solid;
+    border-width: ${space(1)} 0 ${space(1)} ${space(1)};
+    border-color: transparent transparent transparent ${p => p.theme.offWhite2};
+    position: absolute;
+    left: 100%;
+    top: 50%;
+    transform: translateY(-50%);
+  }
+`;
+
+const InfoIcon = styled(InlineSvg)`
+  fill: ${p => p.theme.textColor};
+  width: 20px;
+  height: 20px;
+  margin-right: ${space(1)};
+  flex-shrink: 0;
+`;
+
+const CloseButton = styled(InlineSvg)`
+  stroke: ${p => p.theme.gray4};
+  width: 16px;
+  height: 16px;
+  margin: 0 ${space(0.5)} 0 ${space(1)};
+  cursor: pointer;
+`;
diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index b6efb2cb57..f972d0236a 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -1,6 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import {Link} from 'react-router';
+import styled from 'react-emotion';
 
 import SentryTypes from 'app/proptypes';
 import ProjectLink from 'app/components/projectLink';
@@ -17,6 +18,8 @@ import {
   clearActiveEnvironment,
 } from 'app/actionCreators/environments';
 
+import BackfillNotice from './backfillNotice';
+
 class ProjectHeader extends React.Component {
   static propTypes = {
     project: PropTypes.object.isRequired,
@@ -108,45 +111,50 @@ class ProjectHeader extends React.Component {
             </ul>
           </div>
           {showEnvironmentsToggle && (
-            <div className="project-header-toggle">
-              <label>{t('Environment')}</label>
-              <DropdownLink
-                anchorRight={true}
-                title={activeEnvironmentTitle}
-                className="environment-selector-toggle"
-              >
-                <MenuItem
-                  onClick={clearActiveEnvironment}
-                  className={activeEnvironment === null && 'active'}
+            <EnvironmentsToggle>
+              <BackfillNotice project={project} />
+              <div className="project-header-toggle">
+                <label>{t('Environment')}</label>
+                <DropdownLink
+                  anchorRight={true}
+                  title={activeEnvironmentTitle}
+                  className="environment-selector-toggle"
                 >
-                  {allEnvironmentsLabel}
-                </MenuItem>
-                {environments.map(env => (
                   <MenuItem
-                    key={env.id}
-                    onClick={() => setActiveEnvironment(env)}
-                    className={
-                      activeEnvironment && activeEnvironment.name === env.name && 'active'
-                    }
+                    onClick={clearActiveEnvironment}
+                    className={activeEnvironment === null && 'active'}
                   >
-                    {env.displayName}
+                    {allEnvironmentsLabel}
                   </MenuItem>
-                ))}
-                <MenuItem divider={true} />
-                <div style={{textAlign: 'center', padding: '5px 0px'}}>
-                  <Button
-                    to={
-                      orgFeatures.has('new-settings')
-                        ? `/settings/${org.slug}/${project.slug}/environments/`
-                        : `/${org.slug}/${project.slug}/settings/`
-                    }
-                    size="small"
-                  >
-                    {t('Manage environments')}
-                  </Button>
-                </div>
-              </DropdownLink>
-            </div>
+                  {environments.map(env => (
+                    <MenuItem
+                      key={env.id}
+                      onClick={() => setActiveEnvironment(env)}
+                      className={
+                        activeEnvironment &&
+                        activeEnvironment.name === env.name &&
+                        'active'
+                      }
+                    >
+                      {env.displayName}
+                    </MenuItem>
+                  ))}
+                  <MenuItem divider={true} />
+                  <div style={{textAlign: 'center', padding: '5px 0px'}}>
+                    <Button
+                      to={
+                        orgFeatures.has('new-settings')
+                          ? `/settings/${org.slug}/${project.slug}/environments/`
+                          : `/${org.slug}/${project.slug}/settings/`
+                      }
+                      size="small"
+                    >
+                      {t('Manage environments')}
+                    </Button>
+                  </div>
+                </DropdownLink>
+              </div>
+            </EnvironmentsToggle>
           )}
         </div>
       </div>
@@ -154,4 +162,9 @@ class ProjectHeader extends React.Component {
   }
 }
 
+const EnvironmentsToggle = styled('div')`
+  display: flex;
+  position: relative;
+`;
+
 export default ProjectHeader;
diff --git a/src/sentry/static/sentry/app/styles/animations.jsx b/src/sentry/static/sentry/app/styles/animations.jsx
index dffcee395f..2cbed2f5ff 100644
--- a/src/sentry/static/sentry/app/styles/animations.jsx
+++ b/src/sentry/static/sentry/app/styles/animations.jsx
@@ -41,3 +41,15 @@ export const expandOut = keyframes`
     opacity: 0;
   }
 `;
+
+export const slideInRight = keyframes`
+  0% {
+    transform: translateX(20px);
+    opacity: 0;
+  }
+
+  100% {
+    transform: translateX(0);
+    opacity: 1;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index 4848acb0bc..04585c9323 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -2,6 +2,7 @@ const theme = {
   breakpoints: ['768px', '992px', '1200px'],
 
   offWhite: '#FAF9FB',
+  offWhite2: '#E7E1EC',
   whiteDark: '#fbfbfc',
   white: '#FFFFFF',
 
