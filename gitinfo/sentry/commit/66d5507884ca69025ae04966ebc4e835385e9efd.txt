commit 66d5507884ca69025ae04966ebc4e835385e9efd
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 20 13:43:49 2013 -0800

    Ensure state change (unresolved -> resolved) is atomic and only happens once

diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index 6e17a38e92..98d36ef266 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -569,12 +569,15 @@ class GroupManager(BaseManager, ChartMixin):
                 extra['message'] = message
 
             if group.status == STATUS_RESOLVED:
-                # Group has changed from resolved -> unresolved
-                is_new = True
-
-                # We have to perform this update inline, as waiting on buffers means
-                # this event could be treated as "new" several times
-                group.update(active_at=date, status=STATUS_UNRESOLVED)
+                # Makin things atomic
+                is_new = self.model.objects.filter(
+                    id=group.id,
+                ).exclude(
+                    status=STATUS_RESOLVED,
+                ).update(active_at=date, status=STATUS_UNRESOLVED)
+
+                group.active_at = date
+                group.status = STATUS_UNRESOLVED
 
             group.last_seen = extra['last_seen']
 
