commit 07f3c32e0ed02d1dade53b22c8a86b04a591adb2
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Oct 21 22:45:51 2015 -0700

    Optimizations to SentryLocaleMiddleware
    
    Skip all attempts to use locale for our store endpoint, and skip using a
    transaction with the call to ``safe_execute``.
    
    Related to: https://app.getsentry.com/sentry/sentry/group/56648683/
    
    Lots of these events are coming from ``load_user_conf``, and we don't
    need a transaction here. So this is also creating an unnecessary
    transaction on every /store/ call.

diff --git a/src/sentry/middleware/locale.py b/src/sentry/middleware/locale.py
index 50acc5d824..98b39c0664 100644
--- a/src/sentry/middleware/locale.py
+++ b/src/sentry/middleware/locale.py
@@ -22,17 +22,23 @@ class SentryLocaleMiddleware(LocaleMiddleware):
         if settings.MAINTENANCE:
             return
 
+        # We don't care about locale for API
         if '/api/0/' in request.path:
             return
 
-        safe_execute(self.load_user_conf, request)
-
-        super(SentryLocaleMiddleware, self).process_request(request)
+        # Or our store endpoint
+        if request.path[-7:] == '/store/':
+            return
 
-    def load_user_conf(self, request):
         if not request.user.is_authenticated():
             return
 
+        safe_execute(self.load_user_conf, request,
+                     _with_transaction=False)
+
+        super(SentryLocaleMiddleware, self).process_request(request)
+
+    def load_user_conf(self, request):
         language = UserOption.objects.get_value(
             user=request.user, project=None, key='language', default=None)
         if language:
