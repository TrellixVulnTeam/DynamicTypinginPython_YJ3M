commit 378e89fd74cfd383c3e1b21fc342194728f66bb7
Author: James Cunningham <cunninghamjt09@gmail.com>
Date:   Wed Apr 12 14:06:08 2017 -0700

    Add DogStatsd metrics backend. (#5230)

diff --git a/src/sentry/metrics/dogstatsd.py b/src/sentry/metrics/dogstatsd.py
new file mode 100644
index 0000000000..7ad7df2961
--- /dev/null
+++ b/src/sentry/metrics/dogstatsd.py
@@ -0,0 +1,47 @@
+from __future__ import absolute_import
+
+__all__ = ['DogStatsdMetricsBackend']
+
+from datadog import initialize, statsd
+
+from .base import MetricsBackend
+
+
+class DogStatsdMetricsBackend(MetricsBackend):
+    def __init__(self, prefix=None, **kwargs):
+        # TODO(dcramer): it'd be nice if the initialize call wasn't a global
+        self.tags = kwargs.pop('tags', None)
+        initialize(**kwargs)
+        super(DogStatsdMetricsBackend, self).__init__(prefix=prefix)
+
+    def incr(self, key, instance=None, tags=None, amount=1, sample_rate=1):
+        if tags is None:
+            tags = {}
+        if self.tags:
+            tags.update(self.tags)
+        if instance:
+            tags['instance'] = instance
+        if tags:
+            tags = ['{}:{}'.format(*i) for i in tags.items()]
+        statsd.increment(
+            self._get_key(key),
+            amount,
+            sample_rate=sample_rate,
+            tags=tags,
+        )
+
+    def timing(self, key, value, instance=None, tags=None, sample_rate=1):
+        if tags is None:
+            tags = {}
+        if self.tags:
+            tags.update(self.tags)
+        if instance:
+            tags['instance'] = instance
+        if tags:
+            tags = ['{}:{}'.format(*i) for i in tags.items()]
+        statsd.timing(
+            self._get_key(key),
+            value,
+            sample_rate=sample_rate,
+            tags=tags,
+        )
