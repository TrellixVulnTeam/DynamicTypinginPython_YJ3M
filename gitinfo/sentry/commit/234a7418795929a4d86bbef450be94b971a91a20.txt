commit 234a7418795929a4d86bbef450be94b971a91a20
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 31 14:04:41 2015 +0200

    Move header into shared component

diff --git a/src/sentry/static/sentry/app/components/header.jsx b/src/sentry/static/sentry/app/components/header.jsx
new file mode 100644
index 0000000000..40bc1310fd
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/header.jsx
@@ -0,0 +1,103 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+
+var AppState = require("../mixins/appState");
+var Breadcrumbs = require("./breadcrumbs");
+var ConfigStore = require("../stores/configStore");
+var DropdownLink = require("./dropdownLink");
+var Gravatar = require("./gravatar");
+var MenuItem = require("./menuItem");
+var OrganizationState = require("../mixins/organizationState");
+var UserInfo = require("./userInfo");
+
+var UserNav = React.createClass({
+  shouldComponentUpdate(nextProps, nextState) {
+    return false;
+  },
+
+  render() {
+    var urlPrefix = ConfigStore.get('urlPrefix');
+    var user = ConfigStore.get('user');
+
+    if (!user) {
+      // TODO
+      return <div />;
+    }
+
+    var title = (
+      <span>
+        <Gravatar email={user.email} className="avatar" />
+        <UserInfo user={user} className="user-name" />
+      </span>
+    );
+
+    return (
+      <DropdownLink
+          topLevelClasses={this.props.className}
+          menuClasses="dropdown-menu-right"
+          title={title}>
+        <MenuItem href={urlPrefix + '/account/settings/'}>Account</MenuItem>
+        <MenuItem href={urlPrefix + '/auth/logout/'}>Sign out</MenuItem>
+      </DropdownLink>
+    );
+  }
+});
+
+var OrganizationSelector = React.createClass({
+  mixins: [
+    AppState,
+    OrganizationState
+  ],
+
+  render() {
+    var activeOrg = this.getOrganization();
+    var urlPrefix = ConfigStore.get('urlPrefix');
+    var features = ConfigStore.get('features');
+
+    if (!activeOrg) {
+      // TODO
+      return <div />;
+    }
+
+    return (
+      <DropdownLink
+          title={activeOrg.name}>
+        {this.getOrganizationList().map((org) => {
+          var iconStyle = {
+            backgroundImage: 'url(https://github.com/getsentry.png)' //TODO(dcramer) use actual org avatar
+          };
+          return (
+            <MenuItem key={org.slug} to="organizationDetails" params={{orgId: org.slug}} iconUrl="http://github.com/getsentry.png">
+              <span className="org-avatar" style={iconStyle} />
+              {org.name}
+            </MenuItem>
+          );
+        })}
+        {features.has('organizations:create') &&
+          <div>
+            <div className="divider"></div>
+            <MenuItem href={urlPrefix + '/organizations/new/'}>New Organization</MenuItem>
+          </div>
+        }
+      </DropdownLink>
+    );
+  }
+});
+
+
+var Header = React.createClass({
+  render() {
+    return (
+      <header>
+        <div className="container">
+          <UserNav className="pull-right" />
+          <a href="/"><span className="icon-sentry-logo"></span></a>
+          <OrganizationSelector />
+        </div>
+      </header>
+    );
+  }
+});
+
+module.exports = Header;
diff --git a/src/sentry/static/sentry/app/components/organizationHeader.jsx b/src/sentry/static/sentry/app/components/organizationHeader.jsx
index 99bb07833c..458f551f01 100644
--- a/src/sentry/static/sentry/app/components/organizationHeader.jsx
+++ b/src/sentry/static/sentry/app/components/organizationHeader.jsx
@@ -2,35 +2,14 @@
 
 var React = require("react");
 
-var AppState = require("../mixins/appState");
 var Breadcrumbs = require("./breadcrumbs");
-var OrganizationState = require("../mixins/organizationState");
+var Header = require("../components/header");
 
 var OrganizationHeader = React.createClass({
-  mixins: [AppState, OrganizationState],
-
   render() {
     return (
       <div>
-        <header>
-          <div className="container">
-            <div className="pull-right">
-              <div className="dropdown user-nav">
-                <a className="dropdown-toggle" href="#">Dcramer <span className="icon-arrow-down"></span></a>
-              </div>
-            </div>
-            <a href="/"><span className="icon-sentry-logo"></span></a>
-            <div className="dropdown org-selector">
-              <a className="dropdown-toggle" href="#">Sentry <span className="icon-arrow-down"></span></a>
-              <ul className="dropdown-menu">
-                <li><a href="#">Default</a></li>
-                <li><a href="#">Sentry</a></li>
-                <li className="divider"></li>
-                <li><a href="#">New Organization</a></li>
-              </ul>
-            </div>
-          </div>
-        </header>
+        <Header />
         <div className="sub-header">
           <div className="container">
             <Breadcrumbs />
diff --git a/src/sentry/static/sentry/app/components/projectHeader.jsx b/src/sentry/static/sentry/app/components/projectHeader.jsx
index 4758b984de..4c61403738 100644
--- a/src/sentry/static/sentry/app/components/projectHeader.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader.jsx
@@ -3,13 +3,10 @@
 var React = require("react");
 var Router = require("react-router");
 
+var AppState = require("../mixins/appState");
 var Breadcrumbs = require("./breadcrumbs");
 var ConfigStore = require("../stores/configStore");
-var DropdownLink = require("./dropdownLink");
-var Gravatar = require("./gravatar");
-var MenuItem = require("./menuItem");
-var PropTypes = require("../proptypes");
-var UserInfo = require("./userInfo");
+var Header = require("../components/header");
 
 var DateRangePicker = React.createClass({
   render() {
@@ -24,39 +21,6 @@ var DateRangePicker = React.createClass({
   }
 });
 
-
-var UserNav = React.createClass({
-  propTypes: {
-    user: PropTypes.User.isRequired
-  },
-
-  shouldComponentUpdate(nextProps, nextState) {
-    return nextProps.user.id !== this.props.user.id;
-  },
-
-  render() {
-    var user = this.props.user;
-    var urlPrefix = ConfigStore.get('urlPrefix');
-
-    var title = (
-      <span>
-        <Gravatar email={user.email} className="avatar" />
-        <UserInfo user={user} className="user-name" />
-      </span>
-    );
-
-    return (
-      <DropdownLink
-          topLevelClasses={this.props.className}
-          menuClasses="dropdown-menu-right"
-          title={title}>
-        <MenuItem href={urlPrefix + '/account/settings/'}>Account</MenuItem>
-        <MenuItem href={urlPrefix + '/auth/logout/'}>Sign out</MenuItem>
-      </DropdownLink>
-    );
-  }
-});
-
 var ProjectHeader = React.createClass({
   contextTypes: {
     router: React.PropTypes.func
@@ -70,23 +34,7 @@ var ProjectHeader = React.createClass({
 
     return (
       <div>
-        <header>
-          <div className="container">
-            {user &&
-              <UserNav user={user} className="pull-right" />
-            }
-            <a href="/"><span className="icon-sentry-logo"></span></a>
-            <div className="dropdown org-selector">
-              <a className="dropdown-toggle" href="#">Sentry <span className="icon-arrow-down"></span></a>
-              <ul className="dropdown-menu">
-                <li><a href="#">Default</a></li>
-                <li><a href="#">Sentry</a></li>
-                <li className="divider"></li>
-                <li><a href="#">New Organization</a></li>
-              </ul>
-            </div>
-          </div>
-        </header>
+        <Header />
         <div className="sub-header">
           <div className="container">
             <div className="pull-right">
