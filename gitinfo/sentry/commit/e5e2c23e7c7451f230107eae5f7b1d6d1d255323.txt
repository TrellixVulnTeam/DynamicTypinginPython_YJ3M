commit e5e2c23e7c7451f230107eae5f7b1d6d1d255323
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 31 12:13:07 2015 -0800

    Add setting to disable default scrubbers

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 4d838f08c8..4d2c209cb3 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -115,6 +115,7 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             'sentry:origins': '\n'.join(project.get_option('sentry:origins', ['*']) or []),
             'sentry:resolve_age': int(project.get_option('sentry:resolve_age', 0)),
             'sentry:scrub_data': bool(project.get_option('sentry:scrub_data', True)),
+            'sentry:scrub_defaults': bool(project.get_option('sentry:scrub_defaults', True)),
             'sentry:sensitive_fields': project.get_option('sentry:sensitive_fields', []),
         }
         data['activePlugins'] = active_plugins
@@ -163,6 +164,8 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                 project.update_option('sentry:resolve_age', int(options['sentry:resolve_age']))
             if 'sentry:scrub_data' in options:
                 project.update_option('sentry:scrub_data', bool(options['sentry:scrub_data']))
+            if 'sentry:scrub_defaults' in options:
+                project.update_option('sentry:scrub_defaults', bool(options['sentry:scrub_defaults']))
             if 'sentry:sensitive_fields' in options:
                 project.update_option(
                     'sentry:sensitive_fields',
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index ecca436b1d..d704c39545 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -50,6 +50,7 @@
       <div class="box-content with-padding">
         {{ form.resolve_age|as_crispy_field }}
         {{ form.scrub_data|as_crispy_field }}
+        {{ form.scrub_defaults|as_crispy_field }}
         {{ form.sensitive_fields|as_crispy_field }}
         {{ form.scrub_ip_address|as_crispy_field }}
       </div>
diff --git a/src/sentry/utils/data_scrubber.py b/src/sentry/utils/data_scrubber.py
index ab15635bef..380f1f271f 100644
--- a/src/sentry/utils/data_scrubber.py
+++ b/src/sentry/utils/data_scrubber.py
@@ -49,11 +49,14 @@ class SensitiveDataFilter(object):
     VALUES_RE = re.compile(r'\b(?:\d[ -]*?){13,16}\b')
     URL_PASSWORD_RE = re.compile(r'\b((?:[a-z0-9]+:)?//[^:]+:)([^@]+)@')
 
-    def __init__(self, fields=None):
+    def __init__(self, fields=None, include_defaults=True):
         if fields:
-            self.fields = DEFAULT_SCRUBBED_FIELDS + tuple(fields)
+            fields = tuple(fields)
         else:
-            self.fields = DEFAULT_SCRUBBED_FIELDS
+            fields = ()
+        if include_defaults:
+            fields += DEFAULT_SCRUBBED_FIELDS
+        self.fields = fields
 
     def apply(self, data):
         # TODO(dcramer): move this into each interface
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 2452a82546..a0fd0a53a4 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -356,7 +356,10 @@ class StoreView(APIView):
 
         if project.get_option('sentry:scrub_data', True):
             # We filter data immediately before it ever gets into the queue
-            inst = SensitiveDataFilter(project.get_option('sentry:sensitive_fields', None))
+            inst = SensitiveDataFilter(
+                fields=project.get_option('sentry:sensitive_fields', None),
+                include_defaults=project.get_option('sentry:scrub_defaults', True),
+            )
             inst.apply(data)
 
         if scrub_ip_address:
diff --git a/src/sentry/web/frontend/project_settings.py b/src/sentry/web/frontend/project_settings.py
index 7ca36b3ded..63149709e1 100644
--- a/src/sentry/web/frontend/project_settings.py
+++ b/src/sentry/web/frontend/project_settings.py
@@ -37,7 +37,12 @@ class EditProjectForm(forms.ModelForm):
         help_text=_('Treat an event as resolved if it hasn\'t been seen for this amount of time.'))
     scrub_data = forms.BooleanField(
         label=_('Data Scrubber'),
-        help_text=_('Apply server-side data scrubbing to prevent things like passwords and credit cards from being stored.'),
+        help_text=_('Enable server-side data scrubbing.'),
+        required=False
+    )
+    scrub_defaults = forms.BooleanField(
+        label=_('Use Default Scrubbers'),
+        help_text=_('Apply default scrubbers to prevent things like passwords and credit cards from being stored.'),
         required=False
     )
     sensitive_fields = forms.CharField(
@@ -161,6 +166,7 @@ class ProjectSettingsView(ProjectView):
                 'token': security_token,
                 'resolve_age': int(project.get_option('sentry:resolve_age', 0)),
                 'scrub_data': bool(project.get_option('sentry:scrub_data', True)),
+                'scrub_defaults': bool(project.get_option('sentry:scrub_defaults', True)),
                 'sensitive_fields': '\n'.join(project.get_option('sentry:sensitive_fields', None) or []),
                 'scrub_ip_address': bool(project.get_option('sentry:scrub_ip_address', False)),
                 'scrape_javascript': bool(project.get_option('sentry:scrape_javascript', True)),
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 4038a713d5..a2c763e7c5 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -85,6 +85,7 @@ class ProjectUpdateTest(APITestCase):
             'sentry:origins': 'foo\nbar',
             'sentry:resolve_age': 1,
             'sentry:scrub_data': False,
+            'sentry:scrub_defaults': False,
             'sentry:sensitive_fields': ['foo', 'bar']
         }
         resp = self.client.put(url, data={
@@ -95,6 +96,7 @@ class ProjectUpdateTest(APITestCase):
         assert project.get_option('sentry:origins', []) == options['sentry:origins'].split('\n')
         assert project.get_option('sentry:resolve_age', 0) == options['sentry:resolve_age']
         assert project.get_option('sentry:scrub_data', True) == options['sentry:scrub_data']
+        assert project.get_option('sentry:scrub_defaults', True) == options['sentry:scrub_defaults']
         assert project.get_option('sentry:sensitive_fields', []) == options['sentry:sensitive_fields']
 
 
