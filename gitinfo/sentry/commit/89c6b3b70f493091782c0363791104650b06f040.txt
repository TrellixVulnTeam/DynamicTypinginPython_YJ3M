commit 89c6b3b70f493091782c0363791104650b06f040
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Jul 7 20:47:44 2016 +0500

    Convert to a two-stage cache for react error mapping

diff --git a/src/sentry/lang/javascript/errormapping.py b/src/sentry/lang/javascript/errormapping.py
index c85e72fdb8..f010114ad6 100644
--- a/src/sentry/lang/javascript/errormapping.py
+++ b/src/sentry/lang/javascript/errormapping.py
@@ -1,6 +1,7 @@
 import re
 import cgi
 import json
+import time
 import logging
 
 from django.conf import settings
@@ -12,6 +13,10 @@ from sentry import http
 logger = logging.getLogger(__name__)
 
 
+SOFT_TIMEOUT = 300
+HARD_TIMEOUT = 3600
+
+
 REACT_MAPPING_URL = ('https://raw.githubusercontent.com/facebook/'
                      'react/master/scripts/error-codes/codes.json')
 
@@ -19,6 +24,10 @@ REACT_MAPPING_URL = ('https://raw.githubusercontent.com/facebook/'
 error_processors = {}
 
 
+def is_expired(ts):
+    return ts > time.time() - SOFT_TIMEOUT
+
+
 class Processor(object):
 
     def __init__(self, vendor, mapping_url, regex, func):
@@ -30,17 +39,24 @@ class Processor(object):
     def load_mapping(self):
         key = 'javascript.errormapping:%s' % self.vendor
         mapping = cache.get(key)
+        cached_rv = None
         if mapping is not None:
-            return json.loads(mapping)
-
-        http_session = http.build_session()
-        response = http_session.get(self.mapping_url,
-            allow_redirects=True,
-            verify=False,
-            timeout=settings.SENTRY_SOURCE_FETCH_TIMEOUT,
-        )
-        data = response.json()
-        cache.set(key, json.dumps(data), 300)
+            ts, cached_rv = json.loads(mapping)
+            if not is_expired(ts):
+                return cached_rv
+
+        try:
+            http_session = http.build_session()
+            response = http_session.get(self.mapping_url,
+                allow_redirects=True,
+                timeout=settings.SENTRY_SOURCE_FETCH_TIMEOUT,
+            )
+            data = response.json()
+            cache.set(key, json.dumps([time.time(), data]), HARD_TIMEOUT)
+        except Exception:
+            if cached_rv is None:
+                raise
+            return cached_rv
         return data
 
     def try_process(self, exc):
diff --git a/tests/sentry/lang/javascript/test_processor.py b/tests/sentry/lang/javascript/test_processor.py
index d374dad707..f80aec4069 100644
--- a/tests/sentry/lang/javascript/test_processor.py
+++ b/tests/sentry/lang/javascript/test_processor.py
@@ -335,42 +335,43 @@ class ErrorMappingTest(TestCase):
         }
         ''', content_type='application/json')
 
-        data = {
-            'platform': 'javascript',
-            'sentry.interfaces.Exception': {
-                'values': [{
-                    'type': 'InvariantViolation',
-                    'value': (
-                        'Minified React error #109; visit http://facebook'
-                        '.github.io/react/docs/error-decoder.html?invariant='
-                        '109&args[]=Component for the full message or use '
-                        'the non-minified dev environment for full errors '
-                        'and additional helpful warnings.'
-                    ),
-                    'stacktrace': {
-                        'frames': [
-                            {
-                                'abs_path': 'http://example.com/foo.js',
-                                'filename': 'foo.js',
-                                'lineno': 4,
-                                'colno': 0,
-                            },
-                            {
-                                'abs_path': 'http://example.com/foo.js',
-                                'filename': 'foo.js',
-                                'lineno': 1,
-                                'colno': 0,
-                            },
-                        ],
-                    },
-                }],
+        for x in xrange(3):
+            data = {
+                'platform': 'javascript',
+                'sentry.interfaces.Exception': {
+                    'values': [{
+                        'type': 'InvariantViolation',
+                        'value': (
+                            'Minified React error #109; visit http://facebook'
+                            '.github.io/react/docs/error-decoder.html?invariant='
+                            '109&args[]=Component for the full message or use '
+                            'the non-minified dev environment for full errors '
+                            'and additional helpful warnings.'
+                        ),
+                        'stacktrace': {
+                            'frames': [
+                                {
+                                    'abs_path': 'http://example.com/foo.js',
+                                    'filename': 'foo.js',
+                                    'lineno': 4,
+                                    'colno': 0,
+                                },
+                                {
+                                    'abs_path': 'http://example.com/foo.js',
+                                    'filename': 'foo.js',
+                                    'lineno': 1,
+                                    'colno': 0,
+                                },
+                            ],
+                        },
+                    }],
+                }
             }
-        }
 
-        assert rewrite_exception(data)
+            assert rewrite_exception(data)
 
-        assert data['sentry.interfaces.Exception']['values'][0]['value'] == (
-            'Component.render(): A valid React element (or null) must be '
-            'returned. You may have returned undefined, an array or '
-            'some other invalid object.'
-        )
+            assert data['sentry.interfaces.Exception']['values'][0]['value'] == (
+                'Component.render(): A valid React element (or null) must be '
+                'returned. You may have returned undefined, an array or '
+                'some other invalid object.'
+            )
