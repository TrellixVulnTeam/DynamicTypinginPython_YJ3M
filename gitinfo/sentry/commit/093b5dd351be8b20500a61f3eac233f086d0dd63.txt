commit 093b5dd351be8b20500a61f3eac233f086d0dd63
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 10 19:47:39 2013 +0200

    Queue deletions on Group and Project

diff --git a/src/sentry/tasks/__init__.py b/src/sentry/tasks/__init__.py
index 443568cb70..49ce5e4b58 100644
--- a/src/sentry/tasks/__init__.py
+++ b/src/sentry/tasks/__init__.py
@@ -9,6 +9,7 @@ sentry.tasks
 import sentry.tasks.check_alerts  # NOQA
 import sentry.tasks.check_update  # NOQA
 import sentry.tasks.cleanup  # NOQA
+import sentry.tasks.deletion  # NOQA
 import sentry.tasks.fetch_source  # NOQA
 import sentry.tasks.index  # NOQA
 import sentry.tasks.store  # NOQA
diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
new file mode 100644
index 0000000000..b1a0c2ab7b
--- /dev/null
+++ b/src/sentry/tasks/deletion.py
@@ -0,0 +1,33 @@
+"""
+sentry.tasks.deletion
+~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from celery.task import task
+
+
+@task(name='sentry.tasks.deletion.delete_project', queue='cleanup')
+def delete_project(object_id, **kwargs):
+    from sentry.models import Project
+
+    try:
+        p = Project.objects.get(id=object_id)
+    except Project.DoesNotExist:
+        return
+
+    p.delete()
+
+
+@task(name='sentry.tasks.deletion.delete_group', queue='cleanup')
+def delete_group(object_id, **kwargs):
+    from sentry.models import Group
+
+    try:
+        g = Group.objects.get(id=object_id)
+    except Group.DoesNotExist:
+        return
+
+    g.delete()
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 3490c91546..623b1fcff0 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -9,15 +9,18 @@ import datetime
 import logging
 from functools import wraps
 
+from django.contrib import messages
 from django.contrib.auth.models import AnonymousUser
 from django.core.urlresolvers import reverse
 from django.db.models import Sum, Q
 from django.http import HttpResponse, HttpResponseForbidden, HttpResponseRedirect
 from django.utils import timezone
+from django.utils.translation import ugettext as _
 from django.views.decorators.cache import never_cache, cache_control
 from django.views.decorators.csrf import csrf_exempt
 from django.views.decorators.vary import vary_on_cookie
 from django.views.generic.base import View as BaseView
+
 from sentry.conf import settings
 from sentry.constants import (
     MEMBER_USER, STATUS_MUTED, STATUS_UNRESOLVED, STATUS_RESOLVED)
@@ -468,17 +471,21 @@ def unresolve_group(request, team, project, group_id):
 @has_access(MEMBER_USER)
 @never_cache
 def remove_group(request, team, project, group_id):
+    from sentry.tasks.deletion import delete_group
+
     try:
         group = Group.objects.get(pk=group_id)
     except Group.DoesNotExist:
         return HttpResponseForbidden()
 
-    group.delete()
+    delete_group.delay(object_id=group.id)
 
     if request.is_ajax():
         response = HttpResponse('{}')
         response['Content-Type'] = 'application/json'
     else:
+        messages.add_message(request, messages.SUCCESS,
+            _('Deletion has been queued and should occur shortly.'))
         response = HttpResponseRedirect(reverse('sentry-stream', args=[team.slug, project.slug]))
     return response
 
diff --git a/src/sentry/web/frontend/projects.py b/src/sentry/web/frontend/projects.py
index 7d725c2597..e9fe701d90 100644
--- a/src/sentry/web/frontend/projects.py
+++ b/src/sentry/web/frontend/projects.py
@@ -14,7 +14,7 @@ from django.views.decorators.http import require_http_methods
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.conf import settings
-from sentry.constants import MEMBER_OWNER
+from sentry.constants import MEMBER_OWNER, STATUS_HIDDEN
 from sentry.models import Project, ProjectKey, Team, TagKey
 from sentry.permissions import (
     can_remove_project, can_add_project_key, can_remove_project_key)
@@ -48,12 +48,18 @@ def remove_project(request, team, project):
     if form.is_valid():
         removal_type = form.cleaned_data['removal_type']
         if removal_type == '1':
-            project.delete()
+            from sentry.tasks.deletion import delete_project
+
+            delete_project.delay(object_id=project.id)
+            project.update(status=STATUS_HIDDEN)
+
+            messages.add_message(request, messages.SUCCESS,
+                _('Deletion has been queued and should occur shortly.'))
         elif removal_type == '2':
             new_project = form.cleaned_data['project']
             project.merge_to(new_project)
         elif removal_type == '3':
-            project.update(status=1)
+            project.update(status=STATUS_HIDDEN)
         else:
             raise ValueError(removal_type)
 
