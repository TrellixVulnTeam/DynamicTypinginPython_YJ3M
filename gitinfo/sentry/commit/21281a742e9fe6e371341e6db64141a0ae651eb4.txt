commit 21281a742e9fe6e371341e6db64141a0ae651eb4
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 7 15:06:42 2013 -0700

    Improve trim_dict efficiency and basic test

diff --git a/src/sentry/utils/safe.py b/src/sentry/utils/safe.py
index c4beeb09c3..f62531c927 100644
--- a/src/sentry/utils/safe.py
+++ b/src/sentry/utils/safe.py
@@ -78,7 +78,8 @@ def trim(value, max_size=MAX_VARIABLE_SIZE, max_depth=3, _depth=0, _size=0, **kw
 
 
 def trim_dict(value, max_items=MAX_DICTIONARY_ITEMS, **kwargs):
-    for idx, (k, v) in enumerate(value.items()):
-        value[k] = trim(v)
+    max_items -= 1
+    for idx, key in enumerate(value.keys()):
+        value[key] = trim(value[key])
         if idx > max_items:
-            del value[k]
+            del value[key]
diff --git a/tests/sentry/utils/safe/tests.py b/tests/sentry/utils/safe/tests.py
index 3e34ff5292..ee9ec7ddec 100644
--- a/tests/sentry/utils/safe/tests.py
+++ b/tests/sentry/utils/safe/tests.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from sentry.testutils import TestCase
-from sentry.utils.safe import trim
+from sentry.utils.safe import trim, trim_dict
 
 a_very_long_string = 'a' * 1024
 
@@ -14,3 +14,10 @@ class TrimTest(TestCase):
         assert trim([a_very_long_string, a_very_long_string]) == [
             a_very_long_string[:507] + '...',
         ]
+
+
+class TrimDictTest(TestCase):
+    def test_large_dict(self):
+        value = dict((k, k) for k in xrange(500))
+        trim_dict(value)
+        assert len(value) == 100
