commit 401535d60da018d3a308c44ef6f45a6146757431
Author: Matej Minar <matej.minar@sentry.io>
Date:   Wed Jun 24 10:25:45 2020 +0200

    perf(artifacts): Remove check for archives with at least one artifact (#19505)
    
    We are removing the filter for releases with at least one artifact because it was an expensive query causing major performance issues.

diff --git a/src/sentry/api/endpoints/debug_files.py b/src/sentry/api/endpoints/debug_files.py
index af0d2f457a..73cb0162d4 100644
--- a/src/sentry/api/endpoints/debug_files.py
+++ b/src/sentry/api/endpoints/debug_files.py
@@ -7,7 +7,7 @@ import logging
 import posixpath
 
 from django.db import transaction
-from django.db.models import Q, Count, Exists, OuterRef
+from django.db.models import Q, Count
 from django.http import StreamingHttpResponse, HttpResponse, Http404
 from rest_framework.response import Response
 from symbolic import normalize_debug_id, SymbolicError
@@ -380,16 +380,9 @@ class SourceMapsEndpoint(ProjectEndpoint):
         query = request.GET.get("query")
 
         try:
-            queryset = (
-                Release.objects.filter(projects=project, organization_id=project.organization_id)
-                .annotate(
-                    has_file=Exists(
-                        ReleaseFile.objects.filter(release=OuterRef("id")).values_list("id")
-                    )
-                )
-                .values("id", "version", "date_added")
-                .filter(has_file=True)
-            )
+            queryset = Release.objects.filter(
+                projects=project, organization_id=project.organization_id
+            ).values("id", "version", "date_added")
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
diff --git a/tests/sentry/api/endpoints/test_debug_files.py b/tests/sentry/api/endpoints/test_debug_files.py
index 9148448f7f..6852760696 100644
--- a/tests/sentry/api/endpoints/test_debug_files.py
+++ b/tests/sentry/api/endpoints/test_debug_files.py
@@ -273,8 +273,9 @@ class DebugFilesUploadTest(APITestCase):
         project = self.create_project(name="foo")
 
         release = Release.objects.create(organization_id=project.organization_id, version="1")
-        Release.objects.create(organization_id=project.organization_id, version="2")
+        release2 = Release.objects.create(organization_id=project.organization_id, version="2")
         release.add_project(project)
+        release2.add_project(project)
 
         ReleaseFile.objects.create(
             organization_id=project.organization_id,
@@ -299,9 +300,10 @@ class DebugFilesUploadTest(APITestCase):
         response = self.client.get(url)
 
         assert response.status_code == 200, response.content
-        assert len(response.data) == 1
-        assert response.data[0]["name"] == text_type(release.version)
-        assert response.data[0]["fileCount"] == 2
+        assert len(response.data) == 2
+        assert response.data[0]["name"] == text_type(release2.version)
+        assert response.data[0]["fileCount"] == 0
+        assert response.data[1]["fileCount"] == 2
 
     def test_source_maps_delete_archive(self):
         project = self.create_project(name="foo")
