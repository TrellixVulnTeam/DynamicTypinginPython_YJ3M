commit d0c1fb910f584f81fd69ce80472ca8a6b58b2919
Author: Eric Feng <erichfeng@gmail.com>
Date:   Wed Feb 3 14:26:15 2016 -0800

    attaching task user and time information to UI, fixing issue tracker pending status update

diff --git a/src/sentry/api/endpoints/organization_onboarding_tasks.py b/src/sentry/api/endpoints/organization_onboarding_tasks.py
index 786f440668..575f57fb44 100644
--- a/src/sentry/api/endpoints/organization_onboarding_tasks.py
+++ b/src/sentry/api/endpoints/organization_onboarding_tasks.py
@@ -15,7 +15,7 @@ class OrganizationOnboardingTaskEndpoint(OrganizationEndpoint):
 
 	def post(self, request, organization):
 		if request.DATA['status'] == 'Skipped':
-			print OrganizationOnboardingTask.objects.create_or_update(
+			OrganizationOnboardingTask.objects.create_or_update(
 				organization=organization,
 				user=request.user,
 				task=request.DATA['task'],
diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index fe891568b1..ce7f7c65c8 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -32,6 +32,7 @@ class OnboardingTasksSerializer(Serializer):
             'status': dict(OrganizationOnboardingTask.STATUS_CHOICES).get(obj.status),
             'user': obj.user.name,
             'date_completed': obj.date_completed,
+            'data': obj.data,
         }
 
 class DetailedOrganizationSerializer(OrganizationSerializer):
diff --git a/src/sentry/static/sentry/app/components/header/index.jsx b/src/sentry/static/sentry/app/components/header/index.jsx
index 711823bf4e..88e8d0a3da 100644
--- a/src/sentry/static/sentry/app/components/header/index.jsx
+++ b/src/sentry/static/sentry/app/components/header/index.jsx
@@ -9,7 +9,7 @@ import Broadcasts from './broadcasts';
 import StatusPage from './statuspage';
 import UserNav from './userNav';
 import OrganizationSelector from './organizationSelector';
-import Todos from '../todos';
+import TodoList from '../todos';
 
 const Header = React.createClass({
   mixins: [ApiMixin, OrganizationState],
@@ -37,7 +37,7 @@ const Header = React.createClass({
     }
 
     // NOTE: this.props.orgId not guaranteed to be specified
-    let percentage = Math.round((1 + this.getOrganization().onboardingTasks.length) / Todos.TASKS.length * 100).toString();
+    let percentage = Math.round((1 + this.getOrganization().onboardingTasks.length) / TodoList.TASKS.length * 100).toString();
     let style = {
       width: percentage + '%',
     };
@@ -57,7 +57,7 @@ const Header = React.createClass({
           <StatusPage className="pull-right" />
           <div className="onboarding-progress-bar" onClick={this.toggleTodos}>
             <div className="slider" style={style} ></div>
-            { this.state.showTodos ? <div className="dropdown-menu"><Todos /></div> : null }
+            { this.state.showTodos ? <div className="dropdown-menu"><TodoList /></div> : null }
           </div>
         </div>
       </header>
diff --git a/src/sentry/static/sentry/app/components/todos.jsx b/src/sentry/static/sentry/app/components/todos.jsx
index f90a7ed15e..8f38958103 100644
--- a/src/sentry/static/sentry/app/components/todos.jsx
+++ b/src/sentry/static/sentry/app/components/todos.jsx
@@ -32,22 +32,21 @@ const TodoItem = React.createClass({
     let classNames = '';
     let description = '';
     let doneDescription = "By being here, you've done it. Welcome to Sentry!";
-
     if (this.props.task['status'] == 'Complete') {
       classNames += ' checked';
 
       if (this.props.task.task == 0) {
         description = doneDescription;
       } else {
-        description = '[username] completed this 3 days ago';
+        description = this.props.task.user + ' completed this ' + moment(this.props.task.date_completed).fromNow();
       }
 
     } else if (this.props.task['status'] == 'Pending') {
       classNames += ' pending';
-      description = '[username] kicked this off just now';
+      description = this.props.task.user + ' kicked this off ' + moment(this.props.task.date_completed).fromNow();
     } else if (this.props.task['status'] == 'Skipped') {
       classNames += ' skipped';
-      description = '[username] skipped this a day ago';
+      description = this.props.task.user + ' skipped this ' + moment(this.props.task.date_completed).fromNow();
     } else {
       description = this.props.task.description;
     }
@@ -74,7 +73,7 @@ const TodoItem = React.createClass({
             { this.props.task['status'] == 'Skipped' ? <span className="icon-x" /> : null }
             { this.props.task['status'] == 'Pending' ? <span className="icon-ellipsis" /> : null }
           </div>
-          <h4>{ this.props.task['title'] }</h4>
+          <a href={learn_more_url} target="_blank"><h4>{ this.props.task['title'] }</h4></a>
           <p>
             { description }
           </p>
@@ -111,7 +110,7 @@ const Confirmation = React.createClass({
   }
 });
 
-const Todos = React.createClass({
+const TodoList = React.createClass({
   mixins: [ApiMixin, OrganizationState],
 
   getInitialState() {
@@ -127,6 +126,7 @@ const Todos = React.createClass({
         'title': 'Make a great decision',
         'description': 'By being here, you\'ve done it. Welcome to Sentry!',
         'skippable': false,
+        'prereq': [],
         'feature_location': 'project',
         'location': 'settings/install/',
         'status': 'Complete',
@@ -136,15 +136,16 @@ const Todos = React.createClass({
         'title': 'Send your first event',
         'description': 'Install Sentry\'s client to get started error logging',
         'skippable': false,
+        'prereq': [],
         'feature_location': 'project',
         'location': 'settings/install/',
-        'status': 'Pending'
       },
       {
         'task': 2,
         'title': 'Invite team member',
         'description': 'Bring your team aboard',
         'skippable': false,
+        'prereq': [],
         'feature_location': 'organization',
         'location': 'members/new/',
       },
@@ -153,6 +154,7 @@ const Todos = React.createClass({
         'title': 'Set up release tracking',
         'description': 'See what releases are generating errors.',
         'skippable': false,
+        'prereq': [1],
         'feature_location': 'project',
         'location': 'settings/release-tracking/',
       },
@@ -161,6 +163,7 @@ const Todos = React.createClass({
         'title': 'Add user context to errors',
         'description': 'Know what users are being affected by errors and crashes',
         'skippable': false,
+        'prereq': [1],
         'feature_location': 'absolute',
         'location': 'https://docs.getsentry.com/hosted/learn/context/#capturing-the-user',
       },
@@ -169,14 +172,16 @@ const Todos = React.createClass({
         'title': 'Add a second platform',
         'description': 'Add Sentry to a second platform',
         'skippable': false,
+        'prereq': [1],
         'feature_location': 'organization',
         'location': 'projects/new/',
       },
       {
         'task': 3,
         'title': 'Set up issue tracking',
-        'description': 'Integrate Sentry into your team\'s issue tracker',
+        'description': 'Link to Sentry issues within your team\'s issue tracker',
         'skippable': true,
+        'prereq': [1],
         'feature_location': 'project',
         'location': 'settings/issue-tracking/',
       },
@@ -185,17 +190,19 @@ const Todos = React.createClass({
         'title': 'Set up a notification service',
         'description': 'Receive Sentry alerts in Slack or HipChat',
         'skippable': true,
+        'prereq': [],
         'feature_location': 'project',
         'location': 'settings/notifications/',
       },
-      // {
-      //   'task': 7,
-      //   'title': 'Deminify javascript with sourcemaps',
-      //   'description': 'Upload sourcemaps',
-      //   'skippable': false,
-      //   'feature_location': 'absolute',
-      //   'location': 'https://docs.getsentry.com/hosted/clients/javascript/sourcemaps/'
-      // },
+      {
+        'task': 7,
+        'title': 'Deminify javascript with sourcemaps',
+        'description': 'Upload sourcemaps',
+        'skippable': false,
+        'prereq': [1, 8],
+        'feature_location': 'absolute',
+        'location': 'https://docs.getsentry.com/hosted/clients/javascript/sourcemaps/'
+      },
       // {
       //   'task': 9,
       //   'title': 'User crash reports',
@@ -211,14 +218,14 @@ const Todos = React.createClass({
     let org = this.getOrganization();
     let tasks = [];
 
-    for (var task of Todos.TASKS) {
+    for (var task of TodoList.TASKS) {
       task.status = '';
       if (task.task == '0') {
         task.status = 'Complete';
       }
       for (var server_task of org.onboardingTasks) {
         if (server_task['task'] == task['task']) {
-          task['status'] = server_task['status'];
+          task = $.extend(task, server_task);
           break;
         }
       }
@@ -249,7 +256,7 @@ const Todos = React.createClass({
   },
 
   click(e) {
-    e.preventDefault();
+    // e.preventDefault();
     e.stopPropagation();
   },
 
@@ -267,9 +274,10 @@ const Todos = React.createClass({
           return task;
         }
       }).slice(0,3);
-    }
-    if (location.hash == '#welcome') {
-      next_tasks.splice(0, 0, this.state.tasks[0]);
+
+      if (location.hash == '#welcome') {
+        next_tasks.splice(0, 0, this.state.tasks[0]);
+      }
     }
 
     let todo_list = next_tasks.map( (task) => {
@@ -288,4 +296,4 @@ const Todos = React.createClass({
   }
 });
 
-export default Todos;
+export default TodoList;
diff --git a/src/sentry/web/frontend/project_plugin_enable.py b/src/sentry/web/frontend/project_plugin_enable.py
index 1d4932b6bc..ae24e4fabe 100644
--- a/src/sentry/web/frontend/project_plugin_enable.py
+++ b/src/sentry/web/frontend/project_plugin_enable.py
@@ -1,7 +1,9 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
+from django.utils import timezone
 
+from sentry.models import OnboardingTask, OnboardingTaskStatus, OrganizationOnboardingTask
 from sentry.plugins import plugins
 from sentry.web.frontend.base import ProjectView
 
@@ -20,4 +22,16 @@ class ProjectPluginEnableView(ProjectView):
 
         plugin.enable(project=project)
 
+        if slug:
+            OrganizationOnboardingTask.objects.get_or_create(
+                organization=organization,
+                user=request.user,
+                task=OnboardingTask.ISSUE_TRACKER,
+                defaults={
+                    'status': OnboardingTaskStatus.PENDING,
+                    'date_completed': timezone.now(),
+                    'data': { 'plugin': slug },
+                }
+            )
+
         return self.redirect(reverse('sentry-configure-project-plugin', args=[project.organization.slug, project.slug, slug]))
