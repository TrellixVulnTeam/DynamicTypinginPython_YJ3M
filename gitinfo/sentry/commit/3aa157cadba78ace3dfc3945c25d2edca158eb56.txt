commit 3aa157cadba78ace3dfc3945c25d2edca158eb56
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Dec 14 11:45:52 2016 +0100

    Added timestamp for reprocessing

diff --git a/src/sentry/models/processingissue.py b/src/sentry/models/processingissue.py
index 9318e9fac4..117fc29222 100644
--- a/src/sentry/models/processingissue.py
+++ b/src/sentry/models/processingissue.py
@@ -10,6 +10,7 @@ from __future__ import absolute_import
 
 from django.db import models
 from django.db.models import Count
+from django.utils import timezone
 
 from sentry.db.models import FlexibleForeignKey, Model, GzippedDictField, \
     BaseManager
@@ -17,6 +18,24 @@ from sentry.db.models import FlexibleForeignKey, Model, GzippedDictField, \
 
 class ProcessingIssueManager(BaseManager):
 
+    def upsert(self, project, type, key=None, ts=None, data=None):
+        if ts is None:
+            ts = timezone.now()
+        try:
+            obj = self.get(project=project, type=type, key=key)
+        except self.model.DoesNotExist:
+            obj = self.objects.get_or_create(
+                project=project,
+                type=type,
+                key=key,
+                defaults={
+                    'data': data,
+                    'first_seen': ts,
+                })[0]
+        obj.last_seen = ts
+        obj.save()
+        return obj
+
     def with_num_groups(self):
         return self.annotate(num_groups=Count('processingissuegroup'))
 
@@ -27,6 +46,8 @@ class ProcessingIssue(Model):
     type = models.CharField(max_length=60)
     key = models.CharField(max_length=256)
     data = GzippedDictField()
+    first_seen = models.DateTimeField(default=timezone.now, db_index=True)
+    last_seen = models.DateTimeField(default=timezone.now, db_index=True)
 
     objects = ProcessingIssueManager()
 
diff --git a/src/sentry/reprocessing.py b/src/sentry/reprocessing.py
index 795c5ff54a..079691d876 100644
--- a/src/sentry/reprocessing.py
+++ b/src/sentry/reprocessing.py
@@ -58,12 +58,9 @@ def resolve_processing_issue(project, type, key=None):
 
 def store_processing_issues(issues, group, release=None):
     for d in issues:
-        issue = ProcessingIssue.objects.get_or_create(
-            project=group.project,
-            type=d['type'],
-            key=d['key'],
-            defaults={'data': d['issue_data']},
-        )[0]
+        issue = ProcessingIssue.objects.upsert(
+            group.project, d['type'], d['key'], ts=group.last_seen,
+            data=d['issue_data'])
         ProcessingIssueGroup.objects.get_or_create(
             group=group,
             release=release,
diff --git a/src/sentry/south_migrations/0279_auto__add_processingissuegroup__add_unique_processingissuegroup_group_.py b/src/sentry/south_migrations/0281_auto__add_processingissuegroup__add_unique_processingissuegroup_group_.py
similarity index 98%
rename from src/sentry/south_migrations/0279_auto__add_processingissuegroup__add_unique_processingissuegroup_group_.py
rename to src/sentry/south_migrations/0281_auto__add_processingissuegroup__add_unique_processingissuegroup_group_.py
index 7ef7f54156..6248509d08 100644
--- a/src/sentry/south_migrations/0279_auto__add_processingissuegroup__add_unique_processingissuegroup_group_.py
+++ b/src/sentry/south_migrations/0281_auto__add_processingissuegroup__add_unique_processingissuegroup_group_.py
@@ -28,6 +28,8 @@ class Migration(SchemaMigration):
             ('type', self.gf('django.db.models.fields.CharField')(max_length=60)),
             ('key', self.gf('django.db.models.fields.CharField')(max_length=256)),
             ('data', self.gf('sentry.db.models.fields.gzippeddict.GzippedDictField')()),
+            ('first_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, db_index=True)),
+            ('last_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, db_index=True)),
         ))
         db.send_create_signal('sentry', ['ProcessingIssue'])
 
@@ -132,7 +134,7 @@ class Migration(SchemaMigration):
         'sentry.broadcast': {
             'Meta': {'object_name': 'Broadcast'},
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
-            'date_expires': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2016, 12, 19, 0, 0)', 'null': 'True', 'blank': 'True'}),
+            'date_expires': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(2016, 12, 21, 0, 0)', 'null': 'True', 'blank': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True', 'db_index': 'True'}),
             'link': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
@@ -507,8 +509,10 @@ class Migration(SchemaMigration):
         'sentry.processingissue': {
             'Meta': {'unique_together': "[('project', 'type', 'key')]", 'object_name': 'ProcessingIssue'},
             'data': ('sentry.db.models.fields.gzippeddict.GzippedDictField', [], {}),
+            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'key': ('django.db.models.fields.CharField', [], {'max_length': '256'}),
+            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
             'project': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Project']"}),
             'type': ('django.db.models.fields.CharField', [], {'max_length': '60'})
         },
@@ -596,6 +600,7 @@ class Migration(SchemaMigration):
             'commit': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Commit']"}),
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'order': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {}),
+            'organization_id': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'null': 'True', 'db_index': 'True'}),
             'project_id': ('sentry.db.models.fields.bounded.BoundedPositiveIntegerField', [], {'db_index': 'True'}),
             'release': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'to': "orm['sentry.Release']"})
         },
@@ -721,7 +726,7 @@ class Migration(SchemaMigration):
             'id': ('sentry.db.models.fields.bounded.BoundedBigAutoField', [], {'primary_key': 'True'}),
             'is_verified': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
             'user': ('sentry.db.models.fields.foreignkey.FlexibleForeignKey', [], {'related_name': "'emails'", 'to': "orm['sentry.User']"}),
-            'validation_hash': ('django.db.models.fields.CharField', [], {'default': "u'CWi64GipkacSCCN79HZHKor0dhiI9Fl0'", 'max_length': '32'})
+            'validation_hash': ('django.db.models.fields.CharField', [], {'default': "u'YVqUhQSrfdANfG7HpnqKhmpHThOnlWpO'", 'max_length': '32'})
         },
         'sentry.useroption': {
             'Meta': {'unique_together': "(('user', 'project', 'key'),)", 'object_name': 'UserOption'},
