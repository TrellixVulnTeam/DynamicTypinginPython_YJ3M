commit f613850990a9d8236254d35926d0b125b18e34e0
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Feb 3 09:32:24 2020 +0100

    ref: Bump Relay to 0.5.1 (#16753)
    
    * ref: Update sentry-relay
    
    * fix: Fix EventManager tests after Relay update
    
    * wip on fixing snuba tests

diff --git a/requirements-base.txt b/requirements-base.txt
index e117940c8f..ef338b5251 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -66,7 +66,7 @@ redis>=2.10.3,<2.10.6
 requests-oauthlib==1.2.0
 requests[security]>=2.20.0,<2.21.0
 selenium==3.141.0
-sentry-relay>=0.5.0,<0.5.1
+sentry-relay>=0.5.1,<0.6.0
 sentry-sdk>=0.13.5
 setproctitle>=1.1.7,<1.2.0
 simplejson>=3.2.0,<3.9.0
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 3874087303..a596faa3dd 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -282,6 +282,7 @@ class EventManager(object):
         is_renormalize=False,
         remove_other=None,
         project_config=None,
+        sent_at=None,
     ):
         self._data = _decode_event(data, content_encoding=content_encoding)
         self.version = version
@@ -302,6 +303,7 @@ class EventManager(object):
         self._remove_other = remove_other
         self._normalized = False
         self.project_config = project_config
+        self.sent_at = sent_at
 
     def process_csp_report(self):
         """Only called from the CSP report endpoint."""
@@ -369,6 +371,7 @@ class EventManager(object):
             is_renormalize=self._is_renormalize,
             remove_other=self._remove_other,
             normalize_user_agent=True,
+            sent_at=self.sent_at.isoformat() if self.sent_at is not None else None,
             **DEFAULT_STORE_NORMALIZER_ARGS
         )
 
diff --git a/src/sentry/testutils/factories.py b/src/sentry/testutils/factories.py
index 2f071ea1c4..9001dbd245 100644
--- a/src/sentry/testutils/factories.py
+++ b/src/sentry/testutils/factories.py
@@ -466,10 +466,12 @@ class Factories(object):
         return useremail
 
     @staticmethod
-    def store_event(data, project_id, assert_no_errors=True):
+    def store_event(data, project_id, assert_no_errors=True, sent_at=None):
         # Like `create_event`, but closer to how events are actually
         # ingested. Prefer to use this method over `create_event`
-        manager = EventManager(data)
+        if sent_at is None:
+            sent_at = timezone.now()
+        manager = EventManager(data, sent_at=sent_at)
         manager.normalize()
         if assert_no_errors:
             errors = manager.get_data().get("errors")
diff --git a/tests/sentry/event_manager/test_event_manager.py b/tests/sentry/event_manager/test_event_manager.py
index adbb72898f..d680bd6b25 100644
--- a/tests/sentry/event_manager/test_event_manager.py
+++ b/tests/sentry/event_manager/test_event_manager.py
@@ -898,6 +898,7 @@ class EventManagerTest(TestCase):
                         }
                     },
                     "spans": [],
+                    "timestamp": "2019-06-14T14:01:40Z",
                     "start_timestamp": "2019-06-14T14:01:40Z",
                     "type": "transaction",
                 }
@@ -1119,6 +1120,7 @@ class EventManagerTest(TestCase):
                     }
                 },
                 spans=[],
+                timestamp="2019-06-14T14:01:40Z",
                 start_timestamp="2019-06-14T14:01:40Z",
                 type="transaction",
                 platform="python",
@@ -1153,6 +1155,7 @@ class EventManagerTest(TestCase):
                     }
                 },
                 spans=[],
+                timestamp="2019-06-14T14:01:40Z",
                 start_timestamp="2019-06-14T14:01:40Z",
                 type="transaction",
                 platform="python",
