commit b5aff10095980f5aba22385f6f0eb43c8df7942f
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 30 17:12:08 2012 -0800

    Graceful error handling and tokenization truncation

diff --git a/CHANGES b/CHANGES
index 5b7312f313..2cf030db8c 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,13 @@
+Version 2.1.3
+-------------
+
+* Ensure we truncate tokens to 128 characters for SearchDocument.
+* Gracefully handle errors with indexing.
+* Gracefully handle errors with post_process.
+* Gracefully handle errors with regression_signal.
+* Fixed priority sort option not activating.
+
+
 Version 2.1.2
 -------------
 
diff --git a/sentry/manager.py b/sentry/manager.py
index 46796403d9..c9c89cc3c6 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -350,10 +350,16 @@ class GroupManager(models.Manager, ChartMixin):
             event.save()
 
         if settings.USE_SEARCH:
-            SearchDocument.objects.index(event)
+            try:
+                SearchDocument.objects.index(event)
+            except Exception, e:
+                logger.exception(u'Error indexing document: %s', e)
 
         if is_new:
-            regression_signal.send(sender=self.model, instance=group)
+            try:
+                regression_signal.send(sender=self.model, instance=group)
+            except Exception, e:
+                logger.exception(u'Error sending regression signal: %s', e)
 
         send_group_processors(group=group, event=event, is_new=is_new, is_sample=is_sample)
 
@@ -621,7 +627,7 @@ class SearchDocumentManager(models.Manager):
 
         text = self.PUNCTUATION_CHARS.sub(' ', text)
 
-        words = [t for t in text.split() if len(t) >= self.MIN_WORD_LENGTH and t.lower() not in self.STOP_WORDS]
+        words = [t[:128] for t in text.split() if len(t) >= self.MIN_WORD_LENGTH and t.lower() not in self.STOP_WORDS]
 
         return words
 
diff --git a/sentry/processors/base.py b/sentry/processors/base.py
index 762deda752..0635086cf3 100644
--- a/sentry/processors/base.py
+++ b/sentry/processors/base.py
@@ -5,11 +5,18 @@ sentry.processors.base
 :copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+import logging
+
 from sentry.plugins import plugins
 
 __all__ = ('send_group_processors',)
 
 
 def send_group_processors(**kwargs):
-    for processor in plugins.all():
-        processor.post_process(**kwargs)
+    for inst in plugins.all():
+        try:
+            inst.post_process(**kwargs)
+        except:
+            logger = logging.getLogger('sentry.plugins')
+            logger.exception('Error processing post_process() on %r', inst.__class__)
+
diff --git a/setup.py b/setup.py
index db0ea00d49..97c9fe60d3 100755
--- a/setup.py
+++ b/setup.py
@@ -45,7 +45,7 @@ install_requires = [
 
 setup(
     name='sentry',
-    version='2.1.2',
+    version='2.1.3',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/sentry',
