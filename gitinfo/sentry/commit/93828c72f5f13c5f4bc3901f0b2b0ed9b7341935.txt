commit 93828c72f5f13c5f4bc3901f0b2b0ed9b7341935
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Mar 17 11:21:46 2020 -0700

    fix(eventstore): Ensure get_unfetched_events never hits nodestore (#17709)
    
    This came up in the ingest consumer where we want to avoid ever fetching
    data from nodestore. https://github.com/getsentry/sentry/blob/accb2706b32004350160a28ebe163e0669f6eb44/src/sentry/ingest/ingest_consumer.py#L228-L234

diff --git a/src/sentry/eventstore/snuba/backend.py b/src/sentry/eventstore/snuba/backend.py
index b9db0121d2..69de5fdb87 100644
--- a/src/sentry/eventstore/snuba/backend.py
+++ b/src/sentry/eventstore/snuba/backend.py
@@ -107,6 +107,7 @@ class SnubaEventStorage(EventStorage):
             and filter.project_ids
             and len(filter.event_ids) * len(filter.project_ids) < min(limit, NODESTORE_LIMIT)
             and offset == 0
+            and should_bind_nodes
         ):
             event_list = [
                 Event(project_id=project_id, event_id=event_id)
diff --git a/tests/sentry/eventstore/snuba/test_backend.py b/tests/sentry/eventstore/snuba/test_backend.py
index 645b198185..9abb6059c6 100644
--- a/tests/sentry/eventstore/snuba/test_backend.py
+++ b/tests/sentry/eventstore/snuba/test_backend.py
@@ -6,6 +6,7 @@ from sentry.testutils import TestCase, SnubaTestCase
 from sentry.testutils.helpers.datetime import iso_format, before_now
 from sentry.eventstore.snuba.backend import SnubaEventStorage
 from sentry.eventstore.base import Filter
+from sentry.utils.compat import mock
 from sentry.utils.samples import load_data
 
 
@@ -97,12 +98,19 @@ class SnubaEventStorageTest(TestCase, SnubaTestCase):
         assert events[1].event_id == "b" * 32
         assert events[2].event_id == "a" * 32
 
+    @mock.patch("sentry.nodestore.get_multi")
+    def test_get_unfetched_events(self, get_multi):
+        events = self.eventstore.get_unfetched_events(filter=Filter(project_ids=[self.project1.id]))
+        assert len(events) == 1
+        assert get_multi.call_count == 0
+
     def test_get_event_by_id(self):
         # Get valid event
         event = self.eventstore.get_event_by_id(self.project1.id, "a" * 32)
 
         assert event.event_id == "a" * 32
         assert event.project_id == self.project1.id
+        assert event.group_id == event.group.id
 
         # Get non existent event
         event = self.eventstore.get_event_by_id(self.project2.id, "f" * 32)
@@ -115,21 +123,6 @@ class SnubaEventStorageTest(TestCase, SnubaTestCase):
         assert event.get_event_type() == "transaction"
         assert event.project_id == self.project2.id
 
-    def test_get_event_by_id_nodestore(self):
-        event = self.eventstore.get_event_by_id(self.project1.id, "a" * 32)
-        assert event
-        assert event.group_id == event.group.id
-
-        # Transaction event
-        event = self.eventstore.get_event_by_id(self.project2.id, "d" * 32)
-        assert event
-        assert not event.group_id
-        assert not event.group
-
-        # Non existent event
-        event = self.eventstore.get_event_by_id(self.project.id, "f" * 32)
-        assert not event
-
     def test_get_next_prev_event_id(self):
         event = self.eventstore.get_event_by_id(self.project2.id, "b" * 32)
 
