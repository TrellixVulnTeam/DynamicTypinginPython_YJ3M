commit 26e3b51ea7ada9b3adbc24e117f199e73ec0fd32
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 22 15:04:48 2016 -0800

    Handle project/team/org deletion in base views

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index c208f3c7a4..79f19e4fc8 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -4,7 +4,7 @@ from sentry.auth import access
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
-from sentry.models import Organization
+from sentry.models import Organization, OrganizationStatus
 
 
 class OrganizationPermission(ScopedPermission):
@@ -37,6 +37,9 @@ class OrganizationEndpoint(Endpoint):
         except Organization.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if organization.status != OrganizationStatus.VISIBLE:
+            raise ResourceDoesNotExist
+
         self.check_object_permissions(request, organization)
 
         kwargs['organization'] = organization
diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 15f3bd1d07..c4516a9da1 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -4,7 +4,7 @@ from sentry.auth import access
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
-from sentry.models import Project
+from sentry.models import Project, ProjectStatus
 
 
 class ProjectPermission(ScopedPermission):
@@ -50,6 +50,9 @@ class ProjectEndpoint(Endpoint):
         except Project.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if project.status != ProjectStatus.VISIBLE:
+            raise ResourceDoesNotExist
+
         self.check_object_permissions(request, project)
 
         kwargs['project'] = project
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index 0a40690f3c..1c3dc918ed 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -4,7 +4,7 @@ from sentry.auth import access
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
-from sentry.models import Team
+from sentry.models import Team, TeamStatus
 
 
 class TeamPermission(ScopedPermission):
@@ -39,6 +39,9 @@ class TeamEndpoint(Endpoint):
         except Team.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if team.status != TeamStatus.VISIBLE:
+            raise ResourceDoesNotExist
+
         self.check_object_permissions(request, team)
 
         kwargs['team'] = team
diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index b27d0504cb..60576bb788 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -9,7 +9,7 @@ from django.utils.translation import ugettext_lazy as _
 from django.views.decorators.cache import never_cache
 
 from sentry import features
-from sentry.models import AuthProvider, Organization
+from sentry.models import AuthProvider, Organization, OrganizationStatus
 from sentry.web.forms.accounts import AuthenticationForm, RegistrationForm
 from sentry.web.frontend.base import BaseView
 from sentry.utils import auth
@@ -23,7 +23,8 @@ class AuthLoginView(BaseView):
     def get_auth_provider(self, organization_slug):
         try:
             organization = Organization.objects.get(
-                slug=organization_slug
+                slug=organization_slug,
+                status=OrganizationStatus.VISIBLE,
             )
         except Organization.DoesNotExist:
             return None
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index fe80ecc61d..67840b6939 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -14,7 +14,8 @@ from sudo.views import redirect_to_sudo
 
 from sentry.auth import access
 from sentry.models import (
-    Organization, OrganizationMember, OrganizationStatus, Project, Team
+    Organization, OrganizationMember, OrganizationStatus, Project, ProjectStatus,
+    Team, TeamStatus
 )
 from sentry.web.helpers import get_login_url, render_to_response
 
@@ -118,6 +119,9 @@ class OrganizationMixin(object):
         except Team.DoesNotExist:
             return None
 
+        if team.status != TeamStatus.VISIBLE:
+            return None
+
         return team
 
     def get_active_project(self, request, organization, project_slug):
@@ -129,6 +133,9 @@ class OrganizationMixin(object):
         except Project.DoesNotExist:
             return None
 
+        if project.status != ProjectStatus.VISIBLE:
+            return None
+
         return project
 
 
