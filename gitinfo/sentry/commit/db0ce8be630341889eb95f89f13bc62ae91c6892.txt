commit db0ce8be630341889eb95f89f13bc62ae91c6892
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Apr 4 18:21:34 2018 -0700

    feat(ui): Change accept project transfer to use org with new-teams feature

diff --git a/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx b/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
index d7a2557678..ed690ec524 100644
--- a/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
+++ b/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
@@ -18,25 +18,40 @@ class AcceptProjectTransfer extends AsyncView {
     return t('Accept Project Transfer');
   }
 
+  hasTeamsFeature() {
+    let {transferDetails} = this.state;
+    return transferDetails.organizations.every(org => {
+      let features = new Set(org.features);
+      return features.has('new-teams');
+    });
+  }
+
   handleSubmit = formData => {
-    let teamId = formData.team;
+    let hasTeamsFeature = this.hasTeamsFeature();
+    let kwargs = hasTeamsFeature
+      ? {organization: formData.organization}
+      : {team: formData.team};
     this.api.request('/accept-transfer/', {
       method: 'POST',
       data: {
         data: this.props.location.query.data,
-        team: teamId,
+        ...kwargs,
       },
       success: () => {
         let orgSlug;
-        this.state.transferDetails.organizations.forEach(o => {
-          if (!orgSlug) {
-            o.teams.forEach(team => {
-              if (team.id === teamId) {
-                orgSlug = o.slug;
-              }
-            });
-          }
-        });
+        if (hasTeamsFeature) {
+          orgSlug = formData.organization;
+        } else {
+          this.state.transferDetails.organizations.forEach(o => {
+            if (!orgSlug) {
+              o.teams.forEach(team => {
+                if (team.id === formData.team) {
+                  orgSlug = o.slug;
+                }
+              });
+            }
+          });
+        }
         this.props.router.push(`/${orgSlug}`);
         addSuccessMessage(t('Project successfully transferred'));
       },
@@ -49,41 +64,68 @@ class AcceptProjectTransfer extends AsyncView {
   renderBody() {
     let {transferDetails} = this.state;
     let choices = [];
+    let hasTeamsFeature = this.hasTeamsFeature();
+
     transferDetails.organizations.forEach(org => {
-      org.teams.forEach(team => {
-        choices.push([team.id, `#${team.slug} - ${org.slug}`]);
-      });
+      if (hasTeamsFeature) {
+        choices.push([org.slug, org.slug]);
+      } else {
+        org.teams.forEach(team => {
+          choices.push([team.id, `#${team.slug} - ${org.slug}`]);
+        });
+      }
     });
     return (
       <NarrowLayout>
         <SettingsPageHeader title={t('Approve Transfer Project Request')} />
         <p>
-          {tct(
-            'Projects must be transferred to a specific [team] in order to be moved over to another [organization]. ' +
-              'You can always change the team later under the [projectSettings].',
-            {
-              team: <strong>{t('Team')}</strong>,
-              organization: <strong>{t('Organization')}</strong>,
-              projectSettings: <strong>{t('Project Settings')}</strong>,
-            }
-          )}
+          {hasTeamsFeature
+            ? tct(
+                'Projects must be transferred to a specific [organization]. ' +
+                  'You can grant specific teams access to the project later under the [projectSettings].',
+                {
+                  organization: <strong>{t('Organization')}</strong>,
+                  projectSettings: <strong>{t('Project Settings')}</strong>,
+                }
+              )
+            : tct(
+                'Projects must be transferred to a specific [team] in order to be moved over to another [organization]. ' +
+                  'You can always change the team later under the [projectSettings].',
+                {
+                  team: <strong>{t('Team')}</strong>,
+                  organization: <strong>{t('Organization')}</strong>,
+                  projectSettings: <strong>{t('Project Settings')}</strong>,
+                }
+              )}
         </p>
         <p>
-          {tct('Please select which [team] you want for the project [project].', {
-            team: <strong>{t('Team')}</strong>,
-            project: transferDetails.project.slug,
-          })}
+          {hasTeamsFeature
+            ? tct(
+                'Please select which [organization] you want for the project [project].',
+                {
+                  organization: <strong>{t('Organization')}</strong>,
+                  project: transferDetails.project.slug,
+                }
+              )
+            : tct('Please select which [team] you want for the project [project].', {
+                team: <strong>{t('Team')}</strong>,
+                project: transferDetails.project.slug,
+              })}
         </p>
         <Form
           onSubmit={this.handleSubmit}
           submitLabel={t('Transfer Project')}
           submitPriority="danger"
-          initialData={{team: choices[0] && choices[0][0]}}
+          initialData={
+            hasTeamsFeature
+              ? {organization: choices[0] && choices[0][0]}
+              : {team: choices[0] && choices[0][0]}
+          }
         >
           <Select2Field
             choices={choices}
-            label={t('Team')}
-            name="team"
+            label={hasTeamsFeature ? t('Organization') : t('Team')}
+            name={hasTeamsFeature ? 'organization' : 'team'}
             style={{borderBottom: 'none'}}
           />
         </Form>
