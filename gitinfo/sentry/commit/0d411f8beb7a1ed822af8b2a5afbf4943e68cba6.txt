commit 0d411f8beb7a1ed822af8b2a5afbf4943e68cba6
Author: Ted Kaemming <ted@kaemming.com>
Date:   Tue Mar 8 17:17:49 2016 -0800

    Use statistics based on event occurred time for project list.
    
    This adds a `generated` statistic to the organization statistics
    endpoint, and updates the `OrganizationTeams` React component to use it
    rather than the `received` statistic. The difference between these two
    statistics is that the `generated` statistic is based on when the event
    was recorded by the client, and the `received` statistic is based on
    when the Sentry server recorded it. Examples of when these statistics
    can diverge significantly: mobile application that has been disconnected
    from the network and reports after reconnection; an incorrectly
    configured system timezone; a clock that is suffering from clock skew.
    
    Precedent for the statistic name is from GH-2705, although we've been
    referring to this as "occurred" internally lately. We should probably
    update that in the future, but I didn't want to introduce that
    inconsistency here.
    
    I didn't document this additional statistic, as it only works when the
    `group` parameter is set to `project`. (We don't track events by
    occurrence time by organization.)
    
    This fixes GH-2577.

diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index 0015e6fec3..42b357a8bb 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -48,8 +48,8 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
                                    values.
         :auth: required
         """
-        group = request.GET.get('group')
-        if not group:
+        group = request.GET.get('group', 'organization')
+        if group == 'organization':
             keys = [organization.id]
         elif group == 'project':
             team_list = Team.objects.get_for_user(
@@ -70,6 +70,7 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
         if not keys:
             return Response([])
 
+        stat_model = None
         stat = request.GET.get('stat', 'received')
         if stat == 'received':
             if group == 'project':
@@ -86,8 +87,12 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
                 stat_model = tsdb.models.project_total_blacklisted
             else:
                 stat_model = tsdb.models.organization_total_blacklisted
-        else:
-            raise ValueError('Invalid stat: %s' % stat)
+        elif stat == 'generated':
+            if group == 'project':
+                stat_model = tsdb.models.project
+
+        if stat_model is None:
+            raise ValueError('Invalid group: %s, stat: %s' % (group, stat))
 
         data = tsdb.get_range(
             model=stat_model,
@@ -95,7 +100,7 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
             **self._parse_args(request)
         )
 
-        if not group:
+        if group == 'organization':
             data = data[organization.id]
 
         return Response(data)
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
index 4c82d87b0d..ea1a7793be 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
@@ -41,7 +41,7 @@ const OrganizationTeams = React.createClass({
     this.api.request(this.getOrganizationStatsEndpoint(), {
       query: {
         since: new Date().getTime() / 1000 - 3600 * 24,
-        stat: 'received',
+        stat: 'generated',
         group: 'project'
       },
       success: (data) => {
