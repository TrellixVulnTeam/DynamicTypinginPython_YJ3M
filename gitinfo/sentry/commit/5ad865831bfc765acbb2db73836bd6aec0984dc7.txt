commit 5ad865831bfc765acbb2db73836bd6aec0984dc7
Author: Mark Story <mark@sentry.io>
Date:   Mon Jun 3 11:09:56 2019 -0400

    fix(owners) Fix failure when ownership rules have bad owners (#13482)
    
    Ownership rules have no relational links to actual users in an
    organization. This means they can reference teams/users that are no
    longer are assigned to the project or no longer exist in the
    organization.
    
    Fixes SENTRY-AXY

diff --git a/src/sentry/models/projectownership.py b/src/sentry/models/projectownership.py
index 22ab8af52e..03e31d6104 100644
--- a/src/sentry/models/projectownership.py
+++ b/src/sentry/models/projectownership.py
@@ -87,6 +87,11 @@ class ProjectOwnership(Model):
                 score = candidate
                 owners = rule.owners
         actors = filter(None, resolve_actors(owners, project_id).values())
+
+        # Can happen if the ownership rule references a user/team that no longer
+        # is assigned to the project or has been removed from the org.
+        if not actors:
+            return None
         return actors[0].resolve()
 
     @classmethod
diff --git a/tests/sentry/tasks/post_process/tests.py b/tests/sentry/tasks/post_process/tests.py
index 0f10c1b1a4..949635b360 100644
--- a/tests/sentry/tasks/post_process/tests.py
+++ b/tests/sentry/tasks/post_process/tests.py
@@ -191,7 +191,7 @@ class PostProcessGroupTest(TestCase):
         assert assignee.user == self.user
         assert assignee.team is None
 
-    def test_owner_assignment_ownership_does_not_exist(self):
+    def test_owner_assignment_ownership_no_matching_owners(self):
         event = self.store_event(
             data={
                 'message': 'oh no',
@@ -241,6 +241,33 @@ class PostProcessGroupTest(TestCase):
         assert assignee.user is None
         assert assignee.team == self.team
 
+    def test_owner_assignment_owner_is_gone(self):
+        self.make_ownership()
+        # Remove the team so the rule match will fail to resolve
+        self.team.delete()
+
+        event = self.store_event(
+            data={
+                'message': 'oh no',
+                'platform': 'python',
+                'stacktrace': {
+                    'frames': [
+                        {'filename': 'src/app/example.py'}
+                    ]
+                }
+            },
+            project_id=self.project.id
+        )
+        post_process_group(
+            event=event,
+            is_new=False,
+            is_regression=False,
+            is_sample=False,
+            is_new_group_environment=False,
+        )
+        assignee = event.group.assignee_set.first()
+        assert assignee is None
+
     @patch('sentry.tasks.servicehooks.process_service_hook')
     def test_service_hook_fires_on_new_event(self, mock_process_service_hook):
         group = self.create_group(project=self.project)
