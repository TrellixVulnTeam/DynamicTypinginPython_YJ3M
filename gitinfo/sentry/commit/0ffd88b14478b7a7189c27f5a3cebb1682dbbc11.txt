commit 0ffd88b14478b7a7189c27f5a3cebb1682dbbc11
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Apr 22 10:52:10 2015 -0700

    Correct scope handling for ApiKey

diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index be37539cf5..9c8dc16234 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -35,7 +35,7 @@ class ProjectPermission(ScopedPermission):
             return False
 
         allowed_scopes = set(self.scope_map[request.method])
-        current_scopes = om.scopes
+        current_scopes = om.get_scopes()
         return any(s in allowed_scopes for s in current_scopes)
 
 
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index e506699956..1adc457814 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -34,7 +34,7 @@ class TeamPermission(ScopedPermission):
             return False
 
         allowed_scopes = set(self.scope_map[request.method])
-        current_scopes = om.scopes
+        current_scopes = om.get_scopes()
         return any(s in allowed_scopes for s in current_scopes)
 
 
diff --git a/src/sentry/api/permissions.py b/src/sentry/api/permissions.py
index b7a75301ca..a2ab049c48 100644
--- a/src/sentry/api/permissions.py
+++ b/src/sentry/api/permissions.py
@@ -44,7 +44,7 @@ class ScopedPermission(permissions.BasePermission):
             return request.user.is_authenticated()
 
         allowed_scopes = set(self.scope_map[request.method])
-        current_scopes = request.auth.scopes
+        current_scopes = request.auth.get_scopes()
         return any(s in allowed_scopes for s in current_scopes)
 
     def has_object_permission(self, request, view, obj):
diff --git a/src/sentry/auth/access.py b/src/sentry/auth/access.py
index 2731142aa3..f9f1588631 100644
--- a/src/sentry/auth/access.py
+++ b/src/sentry/auth/access.py
@@ -115,7 +115,7 @@ def from_member(member):
         is_global=member.has_global_access,
         is_active=True,
         sso_is_valid=sso_is_valid,
-        scopes=member.scopes,
+        scopes=member.get_scopes(),
         teams=teams,
     )
 
diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index aa3accd747..55736d68fa 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -88,3 +88,6 @@ class ApiKey(Model):
             'scopes': int(self.scopes),
             'status': self.status,
         }
+
+    def get_scopes(self):
+        return self.scopes.keys()
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 2073613a90..9642e23f4c 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -82,8 +82,7 @@ class OrganizationMember(Model):
             checksum.update(x)
         return checksum.hexdigest()
 
-    @property
-    def scopes(self):
+    def get_scopes(self):
         scopes = []
         if self.type <= OrganizationMemberType.MEMBER:
             scopes.extend([
@@ -167,5 +166,4 @@ class OrganizationMember(Model):
             'has_global_access': self.has_global_access,
         }
 
-
 OrganizationMemberTeams = OrganizationMember.teams.through
diff --git a/src/sentry/models/projectkey.py b/src/sentry/models/projectkey.py
index 41deac89f0..f5a3cd8d1b 100644
--- a/src/sentry/models/projectkey.py
+++ b/src/sentry/models/projectkey.py
@@ -129,3 +129,6 @@ class ProjectKey(Model):
             'roles': int(self.roles),
             'status': self.status,
         }
+
+    def get_scopes(self):
+        return self.scopes
diff --git a/tests/sentry/auth/test_access.py b/tests/sentry/auth/test_access.py
index 36ae2e4853..1d9c292b93 100644
--- a/tests/sentry/auth/test_access.py
+++ b/tests/sentry/auth/test_access.py
@@ -30,7 +30,7 @@ class FromUserTest(TestCase):
         assert result.is_global
         assert result.is_active
         assert result.sso_is_valid
-        assert result.scopes == member.scopes
+        assert result.scopes == member.get_scopes()
         assert result.has_team(team)
 
     def test_team_restricted_org_member_access(self):
@@ -48,7 +48,7 @@ class FromUserTest(TestCase):
         assert not result.is_global
         assert result.is_active
         assert result.sso_is_valid
-        assert result.scopes == member.scopes
+        assert result.scopes == member.get_scopes()
         assert result.has_team(team)
 
     def test_unlinked_sso(self):
