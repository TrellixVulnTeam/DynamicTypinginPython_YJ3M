commit 5df9ffed056e3a961144396b40afb580c385c778
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Mar 6 22:47:17 2013 -0800

    Format individual frames by template per language

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index abbe565f26..e53b8d32d4 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -341,23 +341,17 @@ class Frame(object):
             })
         return frame_data
 
-    def to_string(self):
-        result = []
-        if self.filename:
-            pieces = ['  File "%s"' % (self.filename,)]
-        elif self.module:
-            pieces = ['  Module "%s"' % (self.module,)]
+    def to_string(self, event):
+        if event.platform is not None:
+            choices = [event.platform]
         else:
-            pieces = ['  ?']
-        if self.lineno is not None:
-            pieces.append(', line %d' % (self.lineno,))
-        if self.function:
-            pieces.append(', in %s' % (self.function,))
-
-        result = ''.join(pieces)
-        if self.context_line is not None:
-            result += '\n    %s' % (self.context_line.strip(),)
-        return result
+            choices = []
+        choices.append('default')
+        templates = ['sentry/partial/frames/%s.txt' % choice
+                      for choice in choices]
+        return render_to_string(templates, {
+            'frame': self
+        }).strip('\n')
 
 
 class Stacktrace(Interface):
@@ -562,7 +556,7 @@ class Stacktrace(Interface):
             result.extend(('(%d additional frame(s) were not displayed)' % (num_frames - visible_frames,), '...'))
 
         for frame in frames[start:stop]:
-            result.append(frame.to_string())
+            result.append(frame.to_string(event))
 
         if newest_first and visible_frames < num_frames:
             result.extend(('...', '(%d additional frame(s) were not displayed)' % (num_frames - visible_frames,)))
diff --git a/src/sentry/templates/sentry/partial/frames/default.txt b/src/sentry/templates/sentry/partial/frames/default.txt
new file mode 100644
index 0000000000..a84153070d
--- /dev/null
+++ b/src/sentry/templates/sentry/partial/frames/default.txt
@@ -0,0 +1,4 @@
+{% autoescape off %}
+{% if frame.filename %}  File "{{ frame.filename }}"{% elif frame.module %}  Module "{{ frame.module }}"{% else %}  ?{% endif %}{% if frame.lineno != None %}, line {{ frame.lineno }}{% endif %}{% if frame.function %}, in {{ frame.function }}{% endif %}{% if frame.context_line %}
+    {{ frame.context_line.strip }}{% endif %}
+{% endautoescape %}
diff --git a/src/sentry/templates/sentry/partial/frames/javascript.txt b/src/sentry/templates/sentry/partial/frames/javascript.txt
new file mode 100644
index 0000000000..fab48f6ccc
--- /dev/null
+++ b/src/sentry/templates/sentry/partial/frames/javascript.txt
@@ -0,0 +1,3 @@
+{% autoescape off %}
+  at {{ frame.function }} ({{ frame.filename }}{% if frame.lineno %}:{{ frame.lineno }}{% endif %}{% if frame.colno %}:{{ frame.colno }}{% endif %})
+{% endautoescape %}
