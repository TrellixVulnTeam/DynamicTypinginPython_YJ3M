commit 998bc8a17933e6205b50e2d6f9363383fec1be4e
Author: Mark Story <mark@sentry.io>
Date:   Mon Mar 23 09:10:52 2020 -0400

    fix(perf-views) Fix the transaction summary table (#17820)
    
    * Rename directories/files to use camelBack casing
    * Allow referrers from the front-end. This will allow us to better understand
      the performance of different kinds of queries we're creating.
    * Fix the transaction summary table. Including rpm() skews the results
       in a not good way. I've also removed some bound method that didn't need to be bound.

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index b310e9483d..47f092559f 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -148,7 +148,7 @@ class OrganizationEventsV2Endpoint(OrganizationEventsV2EndpointBase):
                 orderby=self.get_orderby(request),
                 offset=offset,
                 limit=limit,
-                referrer="api.organization-events-v2",
+                referrer=request.GET.get("referrer", "api.organization-events-v2"),
                 auto_fields=True,
                 use_aggregate_conditions=True,
             )
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index c4688a0c62..f80db8d0d7 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1498,7 +1498,7 @@ function routes() {
             <IndexRoute
               componentPromise={() =>
                 import(
-                  /* webpackChunkName: "PerformanceTransactionSummary" */ 'app/views/performance/transaction_summary'
+                  /* webpackChunkName: "PerformanceTransactionSummary" */ 'app/views/performance/transactionSummary'
                 )
               }
               component={errorHandler(LazyLoad)}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/utils.tsx b/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
index f04a83b58d..0204aa5c4e 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/utils.tsx
@@ -40,6 +40,7 @@ export type EventQuery = {
   sort?: string | string[];
   query: string;
   per_page?: number;
+  referrer?: string;
 };
 
 const AGGREGATE_PATTERN = /^([^\(]+)\((.*?)(?:\s*,\s*(.*))?\)$/;
diff --git a/src/sentry/static/sentry/app/views/performance/styles.tsx b/src/sentry/static/sentry/app/views/performance/styles.tsx
index a6a42784ff..9a78f71bdc 100644
--- a/src/sentry/static/sentry/app/views/performance/styles.tsx
+++ b/src/sentry/static/sentry/app/views/performance/styles.tsx
@@ -57,3 +57,8 @@ export const GridRow = styled('tr')<{numOfColumns: number}>`
     return 'auto 120px';
   }};
 `;
+
+export const SummaryGridRow = styled('tr')`
+  display: grid;
+  grid-template-columns: auto minmax(70px, 170px) minmax(70px, 230px);
+`;
diff --git a/src/sentry/static/sentry/app/views/performance/table.tsx b/src/sentry/static/sentry/app/views/performance/table.tsx
index 4fb312183c..d61a9be3ec 100644
--- a/src/sentry/static/sentry/app/views/performance/table.tsx
+++ b/src/sentry/static/sentry/app/views/performance/table.tsx
@@ -19,7 +19,7 @@ import {EventData} from 'app/views/eventsV2/data';
 import withProjects from 'app/utils/withProjects';
 import EventsV2 from 'app/utils/discover/eventsv2';
 
-import {transactionSummaryRouteWithEventView} from './transaction_summary/utils';
+import {transactionSummaryRouteWithEventView} from './transactionSummary/utils';
 import {
   TableGrid,
   GridHead,
@@ -60,7 +60,7 @@ type Props = {
 };
 
 class Table extends React.Component<Props> {
-  renderResults = ({isLoading, tableData}) => {
+  renderResults({isLoading, tableData}) {
     if (isLoading) {
       return (
         <tr>
@@ -94,20 +94,18 @@ class Table extends React.Component<Props> {
       assert(tableData.meta);
 
       return (
-        <React.Fragment key={index}>
-          <GridRow numOfColumns={columnOrder.length}>
-            {this.renderRowItem(row, columnOrder, tableData.meta)}
-          </GridRow>
-        </React.Fragment>
+        <GridRow key={index} numOfColumns={columnOrder.length}>
+          {this.renderRowItem(row, columnOrder, tableData.meta)}
+        </GridRow>
       );
     });
-  };
+  }
 
-  renderRowItem = (
+  renderRowItem(
     row: TableDataRow,
     columnOrder: TableColumn<React.ReactText>[],
     tableMeta: MetaType
-  ) => {
+  ) {
     const {organization, location, projects} = this.props;
 
     return columnOrder.map((column, index) => {
@@ -142,9 +140,9 @@ class Table extends React.Component<Props> {
 
       return <GridBodyCell key={column.key}>{rendered}</GridBodyCell>;
     });
-  };
+  }
 
-  renderHeader = ({tableData}) => {
+  renderHeader({tableData}) {
     const {location, eventView} = this.props;
 
     const tableDataMeta = tableData && tableData.meta ? tableData.meta : undefined;
@@ -184,7 +182,7 @@ class Table extends React.Component<Props> {
         }}
       </HeaderCell>
     ));
-  };
+  }
 
   render() {
     const {eventView, organization, location} = this.props;
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/breadcrumb.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/breadcrumb.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/breadcrumb.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/breadcrumb.tsx
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/content.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/content.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
index 19a8a1a3c1..40f2fb6c1c 100644
--- a/src/sentry/static/sentry/app/views/performance/transaction_summary/content.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
@@ -11,7 +11,7 @@ import EventsV2 from 'app/utils/discover/eventsv2';
 
 import SummaryContentTable from './table';
 import Breadcrumb from './breadcrumb';
-import UserStats from './user_stats';
+import UserStats from './userStats';
 
 const TOP_SLOWEST_TRANSACTIONS = 5;
 
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/index.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/index.tsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/index.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/index.tsx
index d08ed6f073..cef45e5228 100644
--- a/src/sentry/static/sentry/app/views/performance/transaction_summary/index.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/index.tsx
@@ -115,13 +115,11 @@ function generateSummaryEventView(
   transactionName: string | undefined
 ): EventView {
   let eventView = generatePerformanceEventView(location);
-
   if (typeof transactionName !== 'string') {
     return eventView;
   }
 
   // narrow the search conditions of the Performance event view
-
   eventView.name = transactionName;
 
   const searchConditions = {
@@ -129,7 +127,6 @@ function generateSummaryEventView(
     'event.type': ['transaction'],
     transaction: [transactionName],
   };
-
   eventView.query = stringifyQueryObject(searchConditions);
 
   eventView = eventView.withColumns([
@@ -137,17 +134,13 @@ function generateSummaryEventView(
       kind: 'field',
       field: 'transaction',
     },
-    {
-      kind: 'function',
-      function: ['rpm', '', undefined],
-    },
     {
       kind: 'field',
       field: 'transaction.duration',
     },
     {
-      kind: 'function',
-      function: ['last_seen', '', undefined],
+      kind: 'field',
+      field: 'timestamp',
     },
   ]);
 
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/latencyChart.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx
similarity index 93%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/latencyChart.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx
index ce991fae2b..24f978f01c 100644
--- a/src/sentry/static/sentry/app/views/performance/transaction_summary/latencyChart.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/latencyChart.tsx
@@ -21,6 +21,7 @@ import LoadingPanel from 'app/views/events/loadingPanel';
 import EventView from 'app/views/eventsV2/eventView';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
+import {getDuration} from 'app/utils/formatters';
 
 type ViewProps = Pick<
   EventView,
@@ -71,6 +72,7 @@ class LatencyChart extends AsyncComponent<Props, State> {
       end,
     });
     const apiPayload = eventView.getEventsAPIPayload(location);
+    apiPayload.referrer = 'api.performance.latencychart';
 
     return [
       ['chartData', `/organizations/${organization.slug}/eventsv2/`, {query: apiPayload}],
@@ -125,6 +127,11 @@ class LatencyChart extends AsyncComponent<Props, State> {
         alignWithLabel: true,
       },
     };
+    const tooltip = {
+      valueFormatter(value: number) {
+        return getDuration(value / 1000, 2);
+      },
+    };
 
     return (
       <BarChart
@@ -133,6 +140,7 @@ class LatencyChart extends AsyncComponent<Props, State> {
         yAxis={{type: 'value'}}
         series={transformData(chartData.data)}
         colors={['rgba(140, 79, 189, 0.3)']}
+        tooltip={tooltip}
       />
     );
   }
@@ -183,7 +191,7 @@ function transformData(data: ApiResult[]) {
   const seriesData = data.map(item => {
     const bucket = item.histogram_transaction_duration_15;
     const midPoint = previous + Math.ceil((bucket - previous) / 2);
-    const value = {value: item.count, name: `${midPoint}ms`};
+    const value = {value: item.count, name: getDuration(midPoint / 1000, 2)};
     previous = bucket + 1;
 
     return value;
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/table.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
similarity index 91%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/table.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
index 4f724ce7b3..f46b2e244e 100644
--- a/src/sentry/static/sentry/app/views/performance/transaction_summary/table.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
@@ -24,11 +24,11 @@ import {
 import {
   TableGrid,
   GridHead,
-  GridRow,
   GridBody,
   GridHeadCell,
   GridBodyCell,
   GridBodyCellNumber,
+  SummaryGridRow,
 } from '../styles';
 import LatencyChart from './latencyChart';
 
@@ -42,7 +42,7 @@ type Props = {
 };
 
 class SummaryContentTable extends React.Component<Props> {
-  renderHeader = () => {
+  renderHeader() {
     const {eventView, tableData} = this.props;
 
     const tableDataMeta = tableData && tableData.meta ? tableData.meta : undefined;
@@ -70,7 +70,7 @@ class SummaryContentTable extends React.Component<Props> {
         }}
       </HeaderCell>
     ));
-  };
+  }
 
   renderResults() {
     const {isLoading, tableData} = this.props;
@@ -108,20 +108,18 @@ class SummaryContentTable extends React.Component<Props> {
       assert(tableData.meta);
 
       return (
-        <React.Fragment key={index}>
-          <GridRow numOfColumns={columnOrder.length}>
-            {this.renderRowItem(row, columnOrder, tableData.meta)}
-          </GridRow>
-        </React.Fragment>
+        <SummaryGridRow key={index}>
+          {this.renderRowItem(row, columnOrder, tableData.meta)}
+        </SummaryGridRow>
       );
     });
   }
 
-  renderRowItem = (
+  renderRowItem(
     row: TableDataRow,
     columnOrder: TableColumn<React.ReactText>[],
     tableMeta: MetaType
-  ) => {
+  ) {
     const {organization, location, eventView} = this.props;
 
     return columnOrder.map((column, index) => {
@@ -156,11 +154,10 @@ class SummaryContentTable extends React.Component<Props> {
 
       return <GridBodyCell key={column.key}>{rendered}</GridBodyCell>;
     });
-  };
+  }
 
   render() {
     const {eventView, location, organization} = this.props;
-    const columnOrder = eventView.getColumns();
 
     return (
       <div>
@@ -188,7 +185,7 @@ class SummaryContentTable extends React.Component<Props> {
         <Panel>
           <TableGrid>
             <GridHead>
-              <GridRow numOfColumns={columnOrder.length}>{this.renderHeader()}</GridRow>
+              <SummaryGridRow>{this.renderHeader()}</SummaryGridRow>
             </GridHead>
             <GridBody>{this.renderResults()}</GridBody>
           </TableGrid>
@@ -214,12 +211,6 @@ export const Header = styled('div')`
 export const HeaderButtonContainer = styled('div')`
   display: flex;
   flex-direction: row;
-
-  /* Hovercard anchor element when features are disabled. */
-  & > span {
-    display: flex;
-    flex-direction: row;
-  }
 `;
 
 export default SummaryContentTable;
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/user_stats.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/userStats.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/user_stats.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/userStats.tsx
diff --git a/src/sentry/static/sentry/app/views/performance/transaction_summary/utils.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/utils.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/performance/transaction_summary/utils.tsx
rename to src/sentry/static/sentry/app/views/performance/transactionSummary/utils.tsx
