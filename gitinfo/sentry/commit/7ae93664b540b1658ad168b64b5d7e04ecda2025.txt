commit 7ae93664b540b1658ad168b64b5d7e04ecda2025
Author: David Wang <davidw1339@gmail.com>
Date:   Mon Nov 4 13:16:04 2019 -0800

    fix(ui): Async search component now validates results before changing state (#15333)
    
    The AsyncComponentSearchInput overrides the parent async component with new results from a search, but doesn't check to see if the fetched results are correct. This can result in unexpected behavior, because when a user types 'a', a search is fired off for projects with 'a', lets call that "request_a". Then the user types 'at' so another request is fired off, "request_at". If "request_at" finishes before "request_a" then the above image will be the result, as request_a will come later and override the list with outdated results. Typically this doesn't happen with smaller organizations because the queries happen faster than the debounce time inside of the async search component. However, with larger orgs, such as Square, this edge case often becomes the typical case.
    
    To fix this I check to see if the current state of the search input matches the query used to fetch the results that are coming in from a request.

diff --git a/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx b/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx
index d2abc6d58f..716294ef2a 100644
--- a/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponentSearchInput.jsx
@@ -50,7 +50,10 @@ class AsyncComponentSearchInput extends React.Component {
       },
       success: (data, _, jqXHR) => {
         this.setState({busy: false});
-        this.props.onSuccess(data, jqXHR);
+        // only update data if the request's query matches the current query
+        if (this.state.query === searchQuery) {
+          this.props.onSuccess(data, jqXHR);
+        }
       },
       error: () => {
         this.setState({busy: false});
