commit e46a5ab83bc9ac17392e20ba8dd7489b4af0f458
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Oct 17 13:36:09 2018 -0700

    ref(features): Normalize feature names with sentry.io plan features (#10156)

diff --git a/src/sentry/api/endpoints/organization_auth_provider_details.py b/src/sentry/api/endpoints/organization_auth_provider_details.py
index 496a711c6c..57e31ee482 100644
--- a/src/sentry/api/endpoints/organization_auth_provider_details.py
+++ b/src/sentry/api/endpoints/organization_auth_provider_details.py
@@ -24,7 +24,7 @@ class OrganizationAuthProviderDetailsEndpoint(OrganizationEndpoint):
         :pparam string organization_slug: the organization short name
         :auth: required
         """
-        if not features.has('organizations:sso', organization, actor=request.user):
+        if not features.has('organizations:sso-basic', organization, actor=request.user):
             return Response(ERR_NO_SSO, status=status.HTTP_403_FORBIDDEN)
 
         try:
diff --git a/src/sentry/api/endpoints/organization_auth_provider_send_reminders.py b/src/sentry/api/endpoints/organization_auth_provider_send_reminders.py
index fcb3b5c64d..32ea6be72e 100644
--- a/src/sentry/api/endpoints/organization_auth_provider_send_reminders.py
+++ b/src/sentry/api/endpoints/organization_auth_provider_send_reminders.py
@@ -16,7 +16,7 @@ class OrganizationAuthProviderSendRemindersEndpoint(OrganizationEndpoint):
     permission_classes = (OrganizationAdminPermission, )
 
     def post(self, request, organization):
-        if not features.has('organizations:sso', organization, actor=request.user):
+        if not features.has('organizations:sso-basic', organization, actor=request.user):
             return Response(ERR_NO_SSO, status=403)
 
         try:
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 92750f616a..022e545572 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -808,15 +808,15 @@ SENTRY_FEATURES = {
     'organizations:repos': True,
     # DEPCREATED: pending removal.
     'organizations:require-2fa': False,
-    # Enable SSO functionality, providing configurable single signon using
-    # services like GitHub / Google. This is *not* the same as the signup /
-    # login with Github / Azure DevOps that sentry.io provides.
-    'organizations:sso': True,
-    # Enable Rippling SSO functionality.
-    'organizations:sso-rippling': False,
+    # Enable basic SSO functionality, providing configurable single signon
+    # using services like GitHub / Google. This is *not* the same as the signup
+    # and login with Github / Azure DevOps that sentry.io provides.
+    'organizations:sso-basic': True,
     # Enable SAML2 based SSO functionality. getsentry/sentry-auth-saml2 plugin
     # must be installed to use this functionality.
     'organizations:sso-saml2': True,
+    # Enable Rippling SSO functionality.
+    'organizations:sso-rippling': False,
     # Enable suggested commits associated to a event group in the UI.
     'organizations:suggested-commits': True,
     # DEPCREATED: pending removal.
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index b3f0321190..751bdaf6e9 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -69,7 +69,7 @@ default_manager.add('organizations:relay', OrganizationFeature)  # NOQA
 default_manager.add('organizations:release-commits', OrganizationFeature)  # NOQA
 default_manager.add('organizations:repos', OrganizationFeature)  # NOQA
 default_manager.add('organizations:require-2fa', OrganizationFeature)  # NOQA
-default_manager.add('organizations:sso', OrganizationFeature)  # NOQA
+default_manager.add('organizations:sso-basic', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sso-rippling', OrganizationFeature)  # NOQA
 default_manager.add('organizations:sso-saml2', OrganizationFeature)  # NOQA
 default_manager.add('organizations:suggested-commits', OrganizationFeature)  # NOQA
diff --git a/src/sentry/integrations/base.py b/src/sentry/integrations/base.py
index 480d5122fc..996526c625 100644
--- a/src/sentry/integrations/base.py
+++ b/src/sentry/integrations/base.py
@@ -44,12 +44,22 @@ IntegrationMetadata = namedtuple('IntegrationMetadata', [
 
 
 class IntegrationMetadata(IntegrationMetadata):
+    @staticmethod
+    def feature_flag_name(f):
+        """
+        FeatureDescriptions are set using the IntegrationFeatures constants,
+        however we expose them here as mappings to organization feature flags, thus
+        we prefix them with `integration`.
+        """
+        if f is not None:
+            return u'integrations-{}'.format(f)
+
     def _asdict(self):
         metadata = super(IntegrationMetadata, self)._asdict()
         metadata['features'] = [
             {
                 'description': f.description.strip(),
-                'featureGate': None if f.featureGate is None else f.featureGate.value,
+                'featureGate': self.feature_flag_name(f.featureGate.value)
             }
             for f in metadata['features']
         ]
diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
index 9ae64a6009..2a330ef4a6 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.jsx
@@ -40,7 +40,7 @@ const organizationNavigation = [
         path: `${pathPrefix}/auth/`,
         title: t('Auth'),
         show: ({organization, access, features}) =>
-          (features.has('sso') ||
+          (features.has('sso-basic') ||
             (organization.experiments &&
               organization.experiments.SSOPaywallExperiment === 1)) &&
           access.has('org:admin'),
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index 04bd635ac6..6fd2bc6dd1 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -156,7 +156,7 @@ class OrganizationAuthSettingsView(OrganizationView):
 
     @transaction.atomic
     def handle(self, request, organization):
-        if not features.has('organizations:sso', organization, actor=request.user):
+        if not features.has('organizations:sso-basic', organization, actor=request.user):
             messages.add_message(
                 request,
                 messages.ERROR,
diff --git a/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx b/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
index aa57582986..4ac5b81c69 100644
--- a/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
+++ b/tests/js/spec/views/settings/organizationSettingsNavigation.spec.jsx
@@ -35,7 +35,7 @@ describe('OrganizationSettingsNavigation', function() {
       TestStubs.routerContext([
         {
           organization: TestStubs.Organization({
-            // features: ['sso'],
+            // features: ['sso-basic'],
             access: ['org:admin'],
             experiments: {SSOPaywallExperiment: 1},
           }),
@@ -54,7 +54,7 @@ describe('OrganizationSettingsNavigation', function() {
       TestStubs.routerContext([
         {
           organization: TestStubs.Organization({
-            features: ['sso'],
+            features: ['sso-basic'],
             access: ['org:admin'],
             experiments: {SSOPaywallExperiment: null},
           }),
diff --git a/tests/sentry/api/endpoints/test_organization_auth_provider_details.py b/tests/sentry/api/endpoints/test_organization_auth_provider_details.py
index d6a9722e9d..51e399754c 100644
--- a/tests/sentry/api/endpoints/test_organization_auth_provider_details.py
+++ b/tests/sentry/api/endpoints/test_organization_auth_provider_details.py
@@ -14,5 +14,5 @@ class OrganizationAuthProviderPermissionTest(PermissionTestCase):
         )
 
     def test_member_can_get(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_member_can_access(self.path)
diff --git a/tests/sentry/api/endpoints/test_organization_auth_providers.py b/tests/sentry/api/endpoints/test_organization_auth_providers.py
index c0635d47a6..15fbd0b044 100644
--- a/tests/sentry/api/endpoints/test_organization_auth_providers.py
+++ b/tests/sentry/api/endpoints/test_organization_auth_providers.py
@@ -14,19 +14,19 @@ class OrganizationAuthProvidersPermissionTest(PermissionTestCase):
         )
 
     def test_teamless_admin_cannot_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_teamless_admin_cannot_access(self.path)
 
     def test_team_admin_cannot_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_team_admin_cannot_access(self.path)
 
     def test_manager_cannot_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_role_cannot_access(self.path, 'manager')
 
     def test_owner_can_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_owner_can_access(self.path)
 
 
@@ -39,7 +39,7 @@ class OrganizationAuthProviders(APITestCase):
 
         self.login_as(self.user)
 
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             resp = self.client.get(path)
 
         assert resp.status_code == 200
diff --git a/tests/sentry/web/frontend/test_auth_saml2.py b/tests/sentry/web/frontend/test_auth_saml2.py
index 480d54bc7d..357af6287c 100644
--- a/tests/sentry/web/frontend/test_auth_saml2.py
+++ b/tests/sentry/web/frontend/test_auth_saml2.py
@@ -138,7 +138,7 @@ class AuthSAML2Test(AuthProviderTestCase):
 
         data = {'init': True, 'provider': self.provider_name}
 
-        with Feature(['organizations:sso', 'organizations:sso-saml2']):
+        with Feature(['organizations:sso-basic', 'organizations:sso-saml2']):
             setup = self.client.post(self.setup_path, data)
 
         assert setup.status_code == 302
diff --git a/tests/sentry/web/frontend/test_organization_auth_settings.py b/tests/sentry/web/frontend/test_organization_auth_settings.py
index a4d06e6a9c..943cc29c82 100644
--- a/tests/sentry/web/frontend/test_organization_auth_settings.py
+++ b/tests/sentry/web/frontend/test_organization_auth_settings.py
@@ -26,15 +26,15 @@ class OrganizationAuthSettingsPermissionTest(PermissionTestCase):
                 self.organization.slug])
 
     def test_teamless_admin_cannot_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_teamless_admin_cannot_access(self.path)
 
     def test_team_admin_cannot_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_team_admin_cannot_access(self.path)
 
     def test_manager_cannot_load(self):
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             self.assert_role_cannot_access(self.path, 'manager')
 
     def test_owner_can_load(self):
@@ -58,7 +58,7 @@ class OrganizationAuthSettingsPermissionTest(PermissionTestCase):
         om.save()
 
         self.login_as(user, organization_id=self.organization.id)
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             resp = self.client.get(self.path)
             assert resp.status_code == 200
 
@@ -71,7 +71,7 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
 
         self.login_as(self.user)
 
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             resp = self.client.post(path, {'provider': 'dummy', 'init': True})
 
         assert resp.status_code == 200
@@ -88,7 +88,7 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
 
         self.login_as(user)
 
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             resp = self.client.post(configure_path, {'provider': 'dummy', 'init': True})
 
             assert resp.status_code == 200
@@ -147,7 +147,7 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
 
         self.login_as(self.user, organization_id=organization.id)
 
-        with self.feature('organizations:sso'):
+        with self.feature('organizations:sso-basic'):
             resp = self.client.post(path, {'op': 'disable'})
 
         assert resp.status_code == 302
