commit 5a0c438a25b98a69930809ac4ec0ed751f73b377
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jan 30 16:28:55 2013 -0800

    Dont hard error when interfaces fail to load

diff --git a/src/sentry/models.py b/src/sentry/models.py
index 4617e6e1c3..e6c05f462b 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -44,6 +44,7 @@ from sentry.signals import buffer_incr_complete, regression_signal
 from sentry.utils import cached_property, MockDjangoRequest
 from sentry.utils.models import Model, GzippedDictField, update
 from sentry.utils.imports import import_string
+from sentry.utils.safe import safe_execute
 from sentry.utils.strings import truncatechars
 
 __all__ = ('Event', 'Group', 'Project', 'SearchDocument')
@@ -625,9 +626,12 @@ class Event(EventBase):
             try:
                 cls = import_string(key)
             except ImportError:
-                pass  # suppress invalid interfaces
+                continue  # suppress invalid interfaces
+
+            value = safe_execute(cls, **data)
+            if not value:
+                continue
 
-            value = cls(**data)
             result.append((key, value))
 
         return SortedDict((k, v) for k, v in sorted(result, key=lambda x: x[1].get_score(), reverse=True))
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index 9f1248cce0..b808b117fd 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -20,12 +20,12 @@ from sentry.constants import STATUS_MUTED
 from sentry.models import Group
 from sentry.utils.avatar import get_gravatar_url
 from sentry.utils.javascript import to_json
+from sentry.utils.safe import safe_execute
 from sentry.utils.strings import truncatechars
 from templatetag_sugar.register import tag
 from templatetag_sugar.parser import Name, Variable, Constant, Optional
 
 import datetime
-import logging
 
 register = template.Library()
 
@@ -340,14 +340,7 @@ def split(value, delim=''):
 def get_rendered_interfaces(event):
     interface_list = []
     for interface in event.interfaces.itervalues():
-        try:
-            html = interface.to_html(event)
-        except Exception:
-            logger = logging.getLogger('sentry.interfaces')
-            logger.error('Error rendering interface %r', interface.__class__, extra={
-                'event_id': event.id,
-            }, exc_info=True)
-            continue
+        html = safe_execute(interface.to_html, event)
         if not html:
             continue
         interface_list.append((interface, mark_safe(html)))
