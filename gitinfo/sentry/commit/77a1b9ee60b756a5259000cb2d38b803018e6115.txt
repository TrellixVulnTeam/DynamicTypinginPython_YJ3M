commit 77a1b9ee60b756a5259000cb2d38b803018e6115
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 11 11:12:11 2015 -0700

    Sample code for dynamic webpack components

diff --git a/package.json b/package.json
index 523f0c698c..00d6e2c36a 100644
--- a/package.json
+++ b/package.json
@@ -39,6 +39,7 @@
     "react-sticky": "^2.1.0",
     "reflux": "^0.2.2",
     "sinon": "^1.10.3",
+    "sync-exec": "^0.5.0",
     "webpack": "^1.9.10"
   },
   "private": true,
diff --git a/src/sentry/management/commands/dump_webpack_config.py b/src/sentry/management/commands/dump_webpack_config.py
new file mode 100644
index 0000000000..b952244a8f
--- /dev/null
+++ b/src/sentry/management/commands/dump_webpack_config.py
@@ -0,0 +1,15 @@
+from __future__ import absolute_import, print_function
+
+import json
+
+from django.core.management.base import BaseCommand
+
+
+class Command(BaseCommand):
+    help = 'Generates additional entry points and module paths for Webpack'
+
+    def handle(self, **options):
+        self.stdout.write(json.dumps({
+            "entry": {},
+            "paths": [],
+        }))
diff --git a/webpack.config.js b/webpack.config.js
index a6522e129f..7be61ff787 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -1,10 +1,22 @@
 var path = require("path"),
-    webpack = require("webpack");
+    webpack = require("webpack"),
+    exec = require("sync-exec");
 
 var staticPrefix = "src/sentry/static/sentry",
     distPath = staticPrefix + "/dist";
 
-module.exports = {
+var getExtensionData = function() {
+  // TODO(dcramer): runserver needs to enforce SENTRY_CONF
+  var result = exec("sentry dump_webpack_config");
+  if (result.status) {
+    console.error('Unable to generate dynamic webpack config:\n' + result.stderr);
+    process.exit(result.status);
+  }
+  return JSON.parse(result.stdout);
+}
+
+var extensionData = getExtensionData();
+var config = {
   context: path.join(__dirname, staticPrefix),
   entry: {
     "app": "app",
@@ -65,4 +77,11 @@ module.exports = {
     library: "exports"
   },
   devtool: 'source-map'
+};
+
+// TODO(dcramer): handle paths
+for (var key in extensionData.entry) {
+  config.entry[key] = extensionData.entry[key];
 }
+
+module.exports = config;
