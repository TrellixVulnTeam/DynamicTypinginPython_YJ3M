commit 28bb311b4915046ced6c1b1d3eb9c0392cffd1a4
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Apr 14 08:16:07 2017 -0700

    Added real upload command

diff --git a/src/sentry/api/endpoints/project_processingissues.py b/src/sentry/api/endpoints/project_processingissues.py
index 0d585979fc..70bc43e18b 100644
--- a/src/sentry/api/endpoints/project_processingissues.py
+++ b/src/sentry/api/endpoints/project_processingissues.py
@@ -1,22 +1,30 @@
 from __future__ import absolute_import
 
 from rest_framework.response import Response
-from django.http import HttpResponse
 
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
 from sentry.models import ProcessingIssue, ReprocessingReport
 from sentry.reprocessing import trigger_reprocessing
 from sentry.utils.linksign import generate_signed_link
+from sentry.web.helpers import render_to_response
+from sentry.models import ApiToken
 
 
 class ProjectProcessingIssuesFixEndpoint(ProjectEndpoint):
     def get(self, request, project):
-        rv = []
-        rv.append('#!/bin/bash')
-        rv.append('set -eu')
-        rv.append('echo "Thanks for helping us out, here is a"')
-        return HttpResponse('\n'.join(rv), mimetype="text/plain")
+        tokens = [x for x in ApiToken.objects.filter(
+            user=request.user
+        ).all() if 'project:releases' in x.get_scopes()]
+        resp = render_to_response('sentry/reprocessing-script.sh', {
+            'issues': ProcessingIssue.objects.filter(
+                project=project
+            ).all(),
+            'project': project,
+            'token': tokens and tokens[0] or None,
+        })
+        resp['Content-Type'] = 'text/plain'
+        return resp
 
 
 class ProjectProcessingIssuesEndpoint(ProjectEndpoint):
diff --git a/src/sentry/templates/sentry/reprocessing-script.sh b/src/sentry/templates/sentry/reprocessing-script.sh
new file mode 100644
index 0000000000..ce33650170
--- /dev/null
+++ b/src/sentry/templates/sentry/reprocessing-script.sh
@@ -0,0 +1,30 @@
+{% autoescape off %}#!/bin/sh
+set -eu
+
+DOWNLOAD_URL="https://github.com/getsentry/sentry-cli/releases/download/1.4.1/sentry-cli-Darwin-x86_64"
+
+if hash sentry-cli 2> /dev/null; then
+  CLI=sentry-cli
+else
+  if ! hash curl 2> /dev/null; then
+    echo "error: you do not have 'curl' installed which is required for this script."
+    exit 1
+  fi
+  TEMP_FILE=`mktemp "${TMPDIR:-/tmp}/.sentrycli.XXXXXXXX"`
+  cleanup() {
+    rm -f "$TEMP_FILE"
+  }
+  trap cleanup EXIT
+  echo "ðŸ”—  Downloading sentry-cli to upload"
+  curl -SL --progress-bar "$DOWNLOAD_URL" > "$TEMP_FILE"
+  chmod +x "$TEMP_FILE"
+  CLI="$TEMP_FILE"
+fi
+
+{% if token %}export SENTRY_AUTH_TOKEN="{{ token }}"{% endif %}
+export SENTRY_ORG="{{ project.organization.slug }}"
+export SENTRY_PROJECT="{{ project.slug }}"
+
+"$CLI" upload-dsym --derived-data --no-zips{% for issue in issues %} --uuid {{ issue.data.image_uuid }}{% endfor %}
+echo 'ðŸŒŸ  Done!'
+{% endautoescape %}
