commit 5f687d798e7571e8313fe20648dfc78e241b566a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Jan 3 13:41:09 2020 -0800

    ref(ts): Convert `<FieldWrapper>` to typescript (#16185)

diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
deleted file mode 100644
index 8efc141471..0000000000
--- a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.jsx
+++ /dev/null
@@ -1,79 +0,0 @@
-import React from 'react';
-import styled, {css} from 'react-emotion';
-import {Flex} from 'grid-emotion';
-import space from 'app/styles/space';
-
-const inlineStyle = p =>
-  p.inline
-    ? css`
-        align-items: center;
-      `
-    : css`
-        flex-direction: column;
-        align-items: stretch;
-      `;
-
-const highlightedStyle = p =>
-  p.highlighted
-    ? css`
-        position: relative;
-
-        &:after {
-          content: '';
-          display: block;
-          position: absolute;
-          top: -1px;
-          left: -1px;
-          right: -1px;
-          bottom: -1px;
-          border: 1px solid ${p.theme.purple};
-          pointer-events: none;
-        }
-      `
-    : '';
-
-const borderStyle = p =>
-  p.stacked
-    ? ''
-    : css`
-        border-bottom: 1px solid ${p.theme.borderLight};
-      `;
-
-const getPadding = p =>
-  p.stacked && !p.inline
-    ? css`
-        padding: 0 ${p.hasControlState ? 0 : space(2)} ${space(2)} 0;
-      `
-    : css`
-        padding: ${space(2)} ${p.hasControlState ? 0 : space(2)} ${space(2)} ${space(2)};
-      `;
-
-/**
- * `hasControlState` - adds padding to right if this is false
- */
-const FieldWrapper = styled(p => <Flex {...p} />, {
-  shouldForwardProp: prop =>
-    !['highlighted', 'inline', 'stacked', 'hasControlState', 'p'].includes(prop),
-})`
-  ${getPadding};
-  transition: background 0.15s;
-
-  ${borderStyle};
-  ${inlineStyle};
-  ${highlightedStyle};
-
-  /* Better padding with form inside of a modal */
-  ${p =>
-    !p.hasControlState
-      ? `.modal-content & {
-      padding-right: 0;
-    }`
-      : ''};
-
-  &:last-child {
-    border-bottom: none;
-    ${p => (p.stacked ? 'padding-bottom: 0' : '')};
-  }
-`;
-
-export default FieldWrapper;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.tsx
new file mode 100644
index 0000000000..b93fa7a438
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldWrapper.tsx
@@ -0,0 +1,79 @@
+import styled, {css} from 'react-emotion';
+import space from 'app/styles/space';
+
+type Props = {
+  stacked?: boolean;
+  inline?: boolean;
+  hasControlState?: boolean;
+  highlighted?: boolean;
+};
+
+const inlineStyle = (p: Props) =>
+  p.inline
+    ? css`
+        align-items: center;
+      `
+    : css`
+        flex-direction: column;
+        align-items: stretch;
+      `;
+
+const getPadding = (p: Props) =>
+  p.stacked && !p.inline
+    ? css`
+        padding: 0 ${p.hasControlState ? 0 : space(2)} ${space(2)} 0;
+      `
+    : css`
+        padding: ${space(2)} ${p.hasControlState ? 0 : space(2)} ${space(2)} ${space(2)};
+      `;
+
+/**
+ * `hasControlState` - adds padding to right if this is false
+ */
+const FieldWrapper = styled('div')<Props>`
+  ${getPadding}
+  ${inlineStyle}
+  display: flex;
+  transition: background 0.15s;
+
+  ${p =>
+    !p.stacked &&
+    css`
+      border-bottom: 1px solid ${p.theme.borderLight};
+    `}
+
+  ${p =>
+    p.highlighted &&
+    css`
+      position: relative;
+
+      &:after {
+        content: '';
+        display: block;
+        position: absolute;
+        top: -1px;
+        left: -1px;
+        right: -1px;
+        bottom: -1px;
+        border: 1px solid ${p.theme.purple};
+        pointer-events: none;
+      }
+    `}
+
+
+  /* Better padding with form inside of a modal */
+  ${p =>
+    !p.hasControlState &&
+    css`
+      .modal-content & {
+        padding-right: 0;
+      }
+    `}
+
+  &:last-child {
+    border-bottom: none;
+    ${p => (p.stacked ? 'padding-bottom: 0' : '')};
+  }
+`;
+
+export default FieldWrapper;
diff --git a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
index 334243bccd..4fd792c27e 100644
--- a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
@@ -74,101 +74,88 @@ exports[`ConfirmDelete renders 1`] = `
               hasControlState={false}
               inline={false}
             >
-              <Component
-                className="css-1iv7wxj-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+              <div
+                className="css-1de0hdf-FieldWrapper-getPadding-inlineStyle-FieldWrapper-FieldWrapper e2iyls20"
               >
-                <Flex
-                  className="css-1iv7wxj-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                <FieldDescription
+                  inline={false}
                 >
-                  <Base
-                    className="etqqcs20 css-k3lnij-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                  <label
+                    className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
                   >
-                    <div
-                      className="etqqcs20 css-k3lnij-FieldWrapper-getPadding-borderStyle-inlineStyle"
-                      is={null}
+                    <FieldLabel
+                      disabled={false}
                     >
-                      <FieldDescription
-                        inline={false}
+                      <div
+                        className="css-qzvhly-FieldLabel e16ushrl0"
                       >
-                        <label
-                          className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
+                        <div>
+                          Please enter 
+                          <code>
+                            CoolOrg
+                          </code>
+                           to confirm the deletion
+                        </div>
+                         
+                      </div>
+                    </FieldLabel>
+                  </label>
+                </FieldDescription>
+                <FieldControl
+                  alignRight={false}
+                  controlState={<ControlState />}
+                  disabled={false}
+                  errorState={null}
+                  flexibleControlStateSize={true}
+                  inline={false}
+                >
+                  <FieldControlErrorWrapper
+                    inline={false}
+                  >
+                    <div
+                      className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
+                    >
+                      <FieldControlWrapper>
+                        <div
+                          className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                         >
-                          <FieldLabel
-                            disabled={false}
+                          <FieldControlStyled
+                            alignRight={false}
                           >
                             <div
-                              className="css-qzvhly-FieldLabel e16ushrl0"
+                              className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
                             >
-                              <div>
-                                Please enter 
-                                <code>
-                                  CoolOrg
-                                </code>
-                                 to confirm the deletion
-                              </div>
-                               
+                              <Input
+                                onChange={[Function]}
+                                placeholder="CoolOrg"
+                                type="text"
+                                value=""
+                              >
+                                <input
+                                  className="css-1b7nva7-Input-inputStyles e1xej46s0"
+                                  onChange={[Function]}
+                                  placeholder="CoolOrg"
+                                  type="text"
+                                  value=""
+                                />
+                              </Input>
                             </div>
-                          </FieldLabel>
-                        </label>
-                      </FieldDescription>
-                      <FieldControl
-                        alignRight={false}
-                        controlState={<ControlState />}
-                        disabled={false}
-                        errorState={null}
-                        flexibleControlStateSize={true}
-                        inline={false}
-                      >
-                        <FieldControlErrorWrapper
-                          inline={false}
-                        >
-                          <div
-                            className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
+                          </FieldControlStyled>
+                          <FieldControlState
+                            flexibleControlStateSize={true}
                           >
-                            <FieldControlWrapper>
-                              <div
-                                className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                              >
-                                <FieldControlStyled
-                                  alignRight={false}
-                                >
-                                  <div
-                                    className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
-                                  >
-                                    <Input
-                                      onChange={[Function]}
-                                      placeholder="CoolOrg"
-                                      type="text"
-                                      value=""
-                                    >
-                                      <input
-                                        className="css-1b7nva7-Input-inputStyles e1xej46s0"
-                                        onChange={[Function]}
-                                        placeholder="CoolOrg"
-                                        type="text"
-                                        value=""
-                                      />
-                                    </Input>
-                                  </div>
-                                </FieldControlStyled>
-                                <FieldControlState
-                                  flexibleControlStateSize={true}
-                                >
-                                  <div
-                                    className="css-18vhbhh-FieldControlState ep9s0su0"
-                                  >
-                                    <ControlState />
-                                  </div>
-                                </FieldControlState>
-                              </div>
-                            </FieldControlWrapper>
-                          </div>
-                        </FieldControlErrorWrapper>
-                      </FieldControl>
+                            <div
+                              className="css-18vhbhh-FieldControlState ep9s0su0"
+                            >
+                              <ControlState />
+                            </div>
+                          </FieldControlState>
+                        </div>
+                      </FieldControlWrapper>
                     </div>
-                  </Base>
-                </Flex>
-              </Component>
+                  </FieldControlErrorWrapper>
+                </FieldControl>
+              </div>
             </FieldWrapper>
           </Field>
         </div>
diff --git a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
index 2576255edc..d0ca650e1c 100644
--- a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
@@ -88,192 +88,179 @@ exports[`FormField + model renders with Form 1`] = `
                 hasControlState={true}
                 inline={true}
               >
-                <Component
-                  className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                <div
+                  className="css-nlold9-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
                 >
-                  <Flex
-                    className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                  <FieldControl
+                    alignRight={false}
+                    controlState={
+                      <FormFieldControlState
+                        model={
+                          FormModel {
+                            "api": Client {
+                              "_chain": [Function],
+                              "_wrapRequest": [Function],
+                              "bulkUpdate": [Function],
+                              "handleRequestError": [Function],
+                              "hasProjectBeenRenamed": [Function],
+                            },
+                            "errors": Object {},
+                            "fieldDescriptor": Map {
+                              "fieldName" => Object {
+                                "children": [Function],
+                                "className": undefined,
+                                "field": [Function],
+                                "flexibleControlStateSize": false,
+                                "hideErrorMessage": false,
+                                "name": "fieldName",
+                                "type": "text",
+                              },
+                            },
+                            "fieldState": Object {},
+                            "fields": Object {},
+                            "formErrors": undefined,
+                            "formState": undefined,
+                            "initialData": Object {},
+                            "options": Object {
+                              "allowUndo": false,
+                              "apiEndpoint": undefined,
+                              "apiMethod": undefined,
+                              "onFieldChange": undefined,
+                              "onSubmitError": undefined,
+                              "onSubmitSuccess": undefined,
+                              "resetOnError": undefined,
+                              "saveOnBlur": false,
+                            },
+                            "snapshots": Array [
+                              Map {},
+                            ],
+                          }
+                        }
+                        name="fieldName"
+                      />
+                    }
+                    disabled={false}
+                    errorState={
+                      <Observer>
+                        [Function]
+                      </Observer>
+                    }
+                    flexibleControlStateSize={false}
+                    inline={true}
                   >
-                    <Base
-                      className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                    <FieldControlErrorWrapper
+                      inline={true}
                     >
                       <div
-                        className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
-                        is={null}
+                        className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
                       >
-                        <FieldControl
-                          alignRight={false}
-                          controlState={
-                            <FormFieldControlState
-                              model={
-                                FormModel {
-                                  "api": Client {
-                                    "_chain": [Function],
-                                    "_wrapRequest": [Function],
-                                    "bulkUpdate": [Function],
-                                    "handleRequestError": [Function],
-                                    "hasProjectBeenRenamed": [Function],
-                                  },
-                                  "errors": Object {},
-                                  "fieldDescriptor": Map {
-                                    "fieldName" => Object {
-                                      "children": [Function],
-                                      "className": undefined,
-                                      "field": [Function],
-                                      "flexibleControlStateSize": false,
-                                      "hideErrorMessage": false,
-                                      "name": "fieldName",
-                                      "type": "text",
-                                    },
-                                  },
-                                  "fieldState": Object {},
-                                  "fields": Object {},
-                                  "formErrors": undefined,
-                                  "formState": undefined,
-                                  "initialData": Object {},
-                                  "options": Object {
-                                    "allowUndo": false,
-                                    "apiEndpoint": undefined,
-                                    "apiMethod": undefined,
-                                    "onFieldChange": undefined,
-                                    "onSubmitError": undefined,
-                                    "onSubmitSuccess": undefined,
-                                    "resetOnError": undefined,
-                                    "saveOnBlur": false,
-                                  },
-                                  "snapshots": Array [
-                                    Map {},
-                                  ],
-                                }
-                              }
-                              name="fieldName"
-                            />
-                          }
-                          disabled={false}
-                          errorState={
-                            <Observer>
-                              [Function]
-                            </Observer>
-                          }
-                          flexibleControlStateSize={false}
-                          inline={true}
-                        >
-                          <FieldControlErrorWrapper
-                            inline={true}
+                        <FieldControlWrapper>
+                          <div
+                            className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                           >
-                            <div
-                              className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
+                            <FieldControlStyled
+                              alignRight={false}
                             >
-                              <FieldControlWrapper>
-                                <div
-                                  className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                                >
-                                  <FieldControlStyled
-                                    alignRight={false}
-                                  >
-                                    <div
-                                      className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
-                                    >
-                                      <Observer>
-                                        <Input
-                                          disabled={false}
-                                          error={false}
-                                          field={[Function]}
-                                          id="fieldName"
-                                          initialData={Object {}}
-                                          innerRef={[Function]}
-                                          name="fieldName"
-                                          onBlur={[Function]}
-                                          onChange={[Function]}
-                                          onKeyDown={[Function]}
-                                          type="text"
-                                          value=""
-                                        >
-                                          <input
-                                            className="css-1b7nva7-Input-inputStyles e1xej46s0"
-                                            disabled={false}
-                                            id="fieldName"
-                                            name="fieldName"
-                                            onBlur={[Function]}
-                                            onChange={[Function]}
-                                            onKeyDown={[Function]}
-                                            type="text"
-                                            value=""
-                                          />
-                                        </Input>
-                                      </Observer>
-                                    </div>
-                                  </FieldControlStyled>
-                                  <FieldControlState
-                                    flexibleControlStateSize={false}
+                              <div
+                                className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                              >
+                                <Observer>
+                                  <Input
+                                    disabled={false}
+                                    error={false}
+                                    field={[Function]}
+                                    id="fieldName"
+                                    initialData={Object {}}
+                                    innerRef={[Function]}
+                                    name="fieldName"
+                                    onBlur={[Function]}
+                                    onChange={[Function]}
+                                    onKeyDown={[Function]}
+                                    type="text"
+                                    value=""
                                   >
-                                    <div
-                                      className="css-oiazm4-FieldControlState ep9s0su0"
-                                    >
-                                      <FormFieldControlState
-                                        model={
-                                          FormModel {
-                                            "api": Client {
-                                              "_chain": [Function],
-                                              "_wrapRequest": [Function],
-                                              "bulkUpdate": [Function],
-                                              "handleRequestError": [Function],
-                                              "hasProjectBeenRenamed": [Function],
-                                            },
-                                            "errors": Object {},
-                                            "fieldDescriptor": Map {
-                                              "fieldName" => Object {
-                                                "children": [Function],
-                                                "className": undefined,
-                                                "field": [Function],
-                                                "flexibleControlStateSize": false,
-                                                "hideErrorMessage": false,
-                                                "name": "fieldName",
-                                                "type": "text",
-                                              },
-                                            },
-                                            "fieldState": Object {},
-                                            "fields": Object {},
-                                            "formErrors": undefined,
-                                            "formState": undefined,
-                                            "initialData": Object {},
-                                            "options": Object {
-                                              "allowUndo": false,
-                                              "apiEndpoint": undefined,
-                                              "apiMethod": undefined,
-                                              "onFieldChange": undefined,
-                                              "onSubmitError": undefined,
-                                              "onSubmitSuccess": undefined,
-                                              "resetOnError": undefined,
-                                              "saveOnBlur": false,
-                                            },
-                                            "snapshots": Array [
-                                              Map {},
-                                            ],
-                                          }
-                                        }
-                                        name="fieldName"
-                                      >
-                                        <Observer>
-                                          <ControlState
-                                            error={false}
-                                            isSaved={null}
-                                            isSaving={null}
-                                          />
-                                        </Observer>
-                                      </FormFieldControlState>
-                                    </div>
-                                  </FieldControlState>
-                                </div>
-                              </FieldControlWrapper>
-                              <Observer />
-                            </div>
-                          </FieldControlErrorWrapper>
-                        </FieldControl>
+                                    <input
+                                      className="css-1b7nva7-Input-inputStyles e1xej46s0"
+                                      disabled={false}
+                                      id="fieldName"
+                                      name="fieldName"
+                                      onBlur={[Function]}
+                                      onChange={[Function]}
+                                      onKeyDown={[Function]}
+                                      type="text"
+                                      value=""
+                                    />
+                                  </Input>
+                                </Observer>
+                              </div>
+                            </FieldControlStyled>
+                            <FieldControlState
+                              flexibleControlStateSize={false}
+                            >
+                              <div
+                                className="css-oiazm4-FieldControlState ep9s0su0"
+                              >
+                                <FormFieldControlState
+                                  model={
+                                    FormModel {
+                                      "api": Client {
+                                        "_chain": [Function],
+                                        "_wrapRequest": [Function],
+                                        "bulkUpdate": [Function],
+                                        "handleRequestError": [Function],
+                                        "hasProjectBeenRenamed": [Function],
+                                      },
+                                      "errors": Object {},
+                                      "fieldDescriptor": Map {
+                                        "fieldName" => Object {
+                                          "children": [Function],
+                                          "className": undefined,
+                                          "field": [Function],
+                                          "flexibleControlStateSize": false,
+                                          "hideErrorMessage": false,
+                                          "name": "fieldName",
+                                          "type": "text",
+                                        },
+                                      },
+                                      "fieldState": Object {},
+                                      "fields": Object {},
+                                      "formErrors": undefined,
+                                      "formState": undefined,
+                                      "initialData": Object {},
+                                      "options": Object {
+                                        "allowUndo": false,
+                                        "apiEndpoint": undefined,
+                                        "apiMethod": undefined,
+                                        "onFieldChange": undefined,
+                                        "onSubmitError": undefined,
+                                        "onSubmitSuccess": undefined,
+                                        "resetOnError": undefined,
+                                        "saveOnBlur": false,
+                                      },
+                                      "snapshots": Array [
+                                        Map {},
+                                      ],
+                                    }
+                                  }
+                                  name="fieldName"
+                                >
+                                  <Observer>
+                                    <ControlState
+                                      error={false}
+                                      isSaved={null}
+                                      isSaving={null}
+                                    />
+                                  </Observer>
+                                </FormFieldControlState>
+                              </div>
+                            </FieldControlState>
+                          </div>
+                        </FieldControlWrapper>
+                        <Observer />
                       </div>
-                    </Base>
-                  </Flex>
-                </Component>
+                    </FieldControlErrorWrapper>
+                  </FieldControl>
+                </div>
               </FieldWrapper>
             </Field>
           </FormField>
diff --git a/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
index f1c31f7381..19dd1a7ca8 100644
--- a/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/radioBooleanField.spec.jsx.snap
@@ -37,199 +37,186 @@ exports[`RadioBooleanField render() renders new field without form context 1`] =
           hasControlState={true}
           inline={true}
         >
-          <Component
-            className="css-r1j43b-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+          <div
+            className="css-165shxd-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
           >
-            <Flex
-              className="css-r1j43b-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+            <FieldControl
+              alignRight={false}
+              controlState={
+                <FormFieldControlState
+                  model={
+                    MockModel {
+                      "initialData": Object {
+                        "fieldName": undefined,
+                      },
+                      "props": Object {
+                        "children": [Function],
+                        "className": undefined,
+                        "field": [Function],
+                        "flexibleControlStateSize": false,
+                        "hideErrorMessage": false,
+                        "name": "fieldName",
+                        "noLabel": "No",
+                        "yesLabel": "Yes",
+                      },
+                    }
+                  }
+                  name="fieldName"
+                />
+              }
+              disabled={false}
+              errorState={
+                <Observer>
+                  [Function]
+                </Observer>
+              }
+              flexibleControlStateSize={false}
+              inline={true}
             >
-              <Base
-                className="etqqcs20 css-1sc8opd-FieldWrapper-getPadding-borderStyle-inlineStyle"
+              <FieldControlErrorWrapper
+                inline={true}
               >
                 <div
-                  className="etqqcs20 css-1sc8opd-FieldWrapper-getPadding-borderStyle-inlineStyle"
-                  is={null}
+                  className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
                 >
-                  <FieldControl
-                    alignRight={false}
-                    controlState={
-                      <FormFieldControlState
-                        model={
-                          MockModel {
-                            "initialData": Object {
-                              "fieldName": undefined,
-                            },
-                            "props": Object {
-                              "children": [Function],
-                              "className": undefined,
-                              "field": [Function],
-                              "flexibleControlStateSize": false,
-                              "hideErrorMessage": false,
-                              "name": "fieldName",
-                              "noLabel": "No",
-                              "yesLabel": "Yes",
-                            },
-                          }
-                        }
-                        name="fieldName"
-                      />
-                    }
-                    disabled={false}
-                    errorState={
-                      <Observer>
-                        [Function]
-                      </Observer>
-                    }
-                    flexibleControlStateSize={false}
-                    inline={true}
-                  >
-                    <FieldControlErrorWrapper
-                      inline={true}
+                  <FieldControlWrapper>
+                    <div
+                      className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                     >
-                      <div
-                        className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
+                      <FieldControlStyled
+                        alignRight={false}
                       >
-                        <FieldControlWrapper>
-                          <div
-                            className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                          >
-                            <FieldControlStyled
-                              alignRight={false}
+                        <div
+                          className="css-1e3k5jy-FieldControlStyled e12jpfuq1"
+                        >
+                          <Observer>
+                            <RadioBoolean
+                              disabled={false}
+                              field={[Function]}
+                              id="fieldName"
+                              initialData={
+                                Object {
+                                  "fieldName": undefined,
+                                }
+                              }
+                              innerRef={[Function]}
+                              name="fieldName"
+                              noLabel="No"
+                              onBlur={[Function]}
+                              onChange={[Function]}
+                              yesFirst={true}
+                              yesLabel="Yes"
                             >
-                              <div
-                                className="css-1e3k5jy-FieldControlStyled e12jpfuq1"
-                              >
-                                <Observer>
-                                  <RadioBoolean
-                                    disabled={false}
-                                    field={[Function]}
-                                    id="fieldName"
-                                    initialData={
-                                      Object {
-                                        "fieldName": undefined,
-                                      }
-                                    }
-                                    innerRef={[Function]}
-                                    name="fieldName"
-                                    noLabel="No"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    yesFirst={true}
-                                    yesLabel="Yes"
+                              <div>
+                                <Option
+                                  checked={false}
+                                  disabled={false}
+                                  label="Yes"
+                                  name="fieldName"
+                                  onChange={[Function]}
+                                  value="true"
+                                >
+                                  <div
+                                    className="radio"
                                   >
-                                    <div>
-                                      <Option
+                                    <label
+                                      style={
+                                        Object {
+                                          "fontWeight": "normal",
+                                        }
+                                      }
+                                    >
+                                      <input
                                         checked={false}
                                         disabled={false}
-                                        label="Yes"
                                         name="fieldName"
                                         onChange={[Function]}
+                                        type="radio"
                                         value="true"
-                                      >
-                                        <div
-                                          className="radio"
-                                        >
-                                          <label
-                                            style={
-                                              Object {
-                                                "fontWeight": "normal",
-                                              }
-                                            }
-                                          >
-                                            <input
-                                              checked={false}
-                                              disabled={false}
-                                              name="fieldName"
-                                              onChange={[Function]}
-                                              type="radio"
-                                              value="true"
-                                            />
-                                             
-                                            Yes
-                                          </label>
-                                        </div>
-                                      </Option>
-                                      <Option
+                                      />
+                                       
+                                      Yes
+                                    </label>
+                                  </div>
+                                </Option>
+                                <Option
+                                  checked={false}
+                                  disabled={false}
+                                  label="No"
+                                  name="fieldName"
+                                  onChange={[Function]}
+                                  value="false"
+                                >
+                                  <div
+                                    className="radio"
+                                  >
+                                    <label
+                                      style={
+                                        Object {
+                                          "fontWeight": "normal",
+                                        }
+                                      }
+                                    >
+                                      <input
                                         checked={false}
                                         disabled={false}
-                                        label="No"
                                         name="fieldName"
                                         onChange={[Function]}
+                                        type="radio"
                                         value="false"
-                                      >
-                                        <div
-                                          className="radio"
-                                        >
-                                          <label
-                                            style={
-                                              Object {
-                                                "fontWeight": "normal",
-                                              }
-                                            }
-                                          >
-                                            <input
-                                              checked={false}
-                                              disabled={false}
-                                              name="fieldName"
-                                              onChange={[Function]}
-                                              type="radio"
-                                              value="false"
-                                            />
-                                             
-                                            No
-                                          </label>
-                                        </div>
-                                      </Option>
-                                    </div>
-                                  </RadioBoolean>
-                                </Observer>
+                                      />
+                                       
+                                      No
+                                    </label>
+                                  </div>
+                                </Option>
                               </div>
-                            </FieldControlStyled>
-                            <FieldControlState
-                              flexibleControlStateSize={false}
-                            >
-                              <div
-                                className="css-oiazm4-FieldControlState ep9s0su0"
-                              >
-                                <FormFieldControlState
-                                  model={
-                                    MockModel {
-                                      "initialData": Object {
-                                        "fieldName": undefined,
-                                      },
-                                      "props": Object {
-                                        "children": [Function],
-                                        "className": undefined,
-                                        "field": [Function],
-                                        "flexibleControlStateSize": false,
-                                        "hideErrorMessage": false,
-                                        "name": "fieldName",
-                                        "noLabel": "No",
-                                        "yesLabel": "Yes",
-                                      },
-                                    }
-                                  }
-                                  name="fieldName"
-                                >
-                                  <Observer>
-                                    <ControlState
-                                      isSaved={false}
-                                      isSaving={false}
-                                    />
-                                  </Observer>
-                                </FormFieldControlState>
-                              </div>
-                            </FieldControlState>
-                          </div>
-                        </FieldControlWrapper>
-                        <Observer />
-                      </div>
-                    </FieldControlErrorWrapper>
-                  </FieldControl>
+                            </RadioBoolean>
+                          </Observer>
+                        </div>
+                      </FieldControlStyled>
+                      <FieldControlState
+                        flexibleControlStateSize={false}
+                      >
+                        <div
+                          className="css-oiazm4-FieldControlState ep9s0su0"
+                        >
+                          <FormFieldControlState
+                            model={
+                              MockModel {
+                                "initialData": Object {
+                                  "fieldName": undefined,
+                                },
+                                "props": Object {
+                                  "children": [Function],
+                                  "className": undefined,
+                                  "field": [Function],
+                                  "flexibleControlStateSize": false,
+                                  "hideErrorMessage": false,
+                                  "name": "fieldName",
+                                  "noLabel": "No",
+                                  "yesLabel": "Yes",
+                                },
+                              }
+                            }
+                            name="fieldName"
+                          >
+                            <Observer>
+                              <ControlState
+                                isSaved={false}
+                                isSaving={false}
+                              />
+                            </Observer>
+                          </FormFieldControlState>
+                        </div>
+                      </FieldControlState>
+                    </div>
+                  </FieldControlWrapper>
+                  <Observer />
                 </div>
-              </Base>
-            </Flex>
-          </Component>
+              </FieldControlErrorWrapper>
+            </FieldControl>
+          </div>
         </FieldWrapper>
       </Field>
     </FormField>
diff --git a/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap
index 5875cb4a7e..cb3d4115b2 100644
--- a/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/tableField.spec.jsx.snap
@@ -160,280 +160,267 @@ exports[`TableField renders renders with form context 1`] = `
                   hasControlState={true}
                   inline={true}
                 >
-                  <Component
-                    className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                  <div
+                    className="css-nlold9-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
                   >
-                    <Flex
-                      className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+                    <FieldControl
+                      alignRight={false}
+                      controlState={
+                        <FormFieldControlState
+                          model={
+                            FormModel {
+                              "api": Client {
+                                "_chain": [Function],
+                                "_wrapRequest": [Function],
+                                "bulkUpdate": [Function],
+                                "handleRequestError": [Function],
+                                "hasProjectBeenRenamed": [Function],
+                              },
+                              "errors": Object {},
+                              "fieldDescriptor": Map {
+                                "fieldName" => Object {
+                                  "addButtonText": "Add Thing",
+                                  "allowEmpty": false,
+                                  "children": [Function],
+                                  "className": undefined,
+                                  "columnKeys": Array [
+                                    "column1",
+                                    "column2",
+                                  ],
+                                  "columnLabels": Object {
+                                    "column1": "Column 1",
+                                    "column2": "Column 2",
+                                  },
+                                  "field": [Function],
+                                  "flexibleControlStateSize": false,
+                                  "formatMessageValue": false,
+                                  "hideErrorMessage": false,
+                                  "inline": [Function],
+                                  "name": "fieldName",
+                                },
+                              },
+                              "fieldState": Object {},
+                              "fields": Object {},
+                              "formErrors": undefined,
+                              "formState": undefined,
+                              "initialData": Object {},
+                              "options": Object {
+                                "allowUndo": false,
+                                "apiEndpoint": undefined,
+                                "apiMethod": undefined,
+                                "onFieldChange": undefined,
+                                "onSubmitError": undefined,
+                                "onSubmitSuccess": undefined,
+                                "resetOnError": undefined,
+                                "saveOnBlur": false,
+                              },
+                              "snapshots": Array [
+                                Map {},
+                              ],
+                            }
+                          }
+                          name="fieldName"
+                        />
+                      }
+                      disabled={false}
+                      errorState={
+                        <Observer>
+                          [Function]
+                        </Observer>
+                      }
+                      flexibleControlStateSize={false}
+                      inline={true}
                     >
-                      <Base
-                        className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                      <FieldControlErrorWrapper
+                        inline={true}
                       >
                         <div
-                          className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
-                          is={null}
+                          className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
                         >
-                          <FieldControl
-                            alignRight={false}
-                            controlState={
-                              <FormFieldControlState
-                                model={
-                                  FormModel {
-                                    "api": Client {
-                                      "_chain": [Function],
-                                      "_wrapRequest": [Function],
-                                      "bulkUpdate": [Function],
-                                      "handleRequestError": [Function],
-                                      "hasProjectBeenRenamed": [Function],
-                                    },
-                                    "errors": Object {},
-                                    "fieldDescriptor": Map {
-                                      "fieldName" => Object {
-                                        "addButtonText": "Add Thing",
-                                        "allowEmpty": false,
-                                        "children": [Function],
-                                        "className": undefined,
-                                        "columnKeys": Array [
-                                          "column1",
-                                          "column2",
-                                        ],
-                                        "columnLabels": Object {
-                                          "column1": "Column 1",
-                                          "column2": "Column 2",
-                                        },
-                                        "field": [Function],
-                                        "flexibleControlStateSize": false,
-                                        "formatMessageValue": false,
-                                        "hideErrorMessage": false,
-                                        "inline": [Function],
-                                        "name": "fieldName",
-                                      },
-                                    },
-                                    "fieldState": Object {},
-                                    "fields": Object {},
-                                    "formErrors": undefined,
-                                    "formState": undefined,
-                                    "initialData": Object {},
-                                    "options": Object {
-                                      "allowUndo": false,
-                                      "apiEndpoint": undefined,
-                                      "apiMethod": undefined,
-                                      "onFieldChange": undefined,
-                                      "onSubmitError": undefined,
-                                      "onSubmitSuccess": undefined,
-                                      "resetOnError": undefined,
-                                      "saveOnBlur": false,
-                                    },
-                                    "snapshots": Array [
-                                      Map {},
-                                    ],
-                                  }
-                                }
-                                name="fieldName"
-                              />
-                            }
-                            disabled={false}
-                            errorState={
-                              <Observer>
-                                [Function]
-                              </Observer>
-                            }
-                            flexibleControlStateSize={false}
-                            inline={true}
-                          >
-                            <FieldControlErrorWrapper
-                              inline={true}
+                          <FieldControlWrapper>
+                            <div
+                              className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                             >
-                              <div
-                                className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
+                              <FieldControlStyled
+                                alignRight={false}
                               >
-                                <FieldControlWrapper>
-                                  <div
-                                    className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                                  >
-                                    <FieldControlStyled
-                                      alignRight={false}
-                                    >
-                                      <div
-                                        className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                                <div
+                                  className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                                >
+                                  <Observer>
+                                    <div>
+                                      <Button
+                                        align="center"
+                                        disabled={false}
+                                        icon="icon-circle-add"
+                                        onClick={[Function]}
+                                        size="xsmall"
                                       >
-                                        <Observer>
-                                          <div>
-                                            <Button
-                                              align="center"
-                                              disabled={false}
-                                              icon="icon-circle-add"
+                                        <StyledButton
+                                          aria-disabled={false}
+                                          aria-label="Add Thing"
+                                          disabled={false}
+                                          onClick={[Function]}
+                                          role="button"
+                                          size="xsmall"
+                                        >
+                                          <ForwardRef
+                                            aria-disabled={false}
+                                            aria-label="Add Thing"
+                                            className="css-z6hjis-StyledButton-getColors edwq9my0"
+                                            disabled={false}
+                                            onClick={[Function]}
+                                            role="button"
+                                            size="xsmall"
+                                          >
+                                            <button
+                                              aria-disabled={false}
+                                              aria-label="Add Thing"
+                                              className="css-z6hjis-StyledButton-getColors edwq9my0"
                                               onClick={[Function]}
+                                              role="button"
                                               size="xsmall"
                                             >
-                                              <StyledButton
-                                                aria-disabled={false}
-                                                aria-label="Add Thing"
-                                                disabled={false}
-                                                onClick={[Function]}
-                                                role="button"
+                                              <ButtonLabel
+                                                align="center"
                                                 size="xsmall"
                                               >
-                                                <ForwardRef
-                                                  aria-disabled={false}
-                                                  aria-label="Add Thing"
-                                                  className="css-z6hjis-StyledButton-getColors edwq9my0"
-                                                  disabled={false}
-                                                  onClick={[Function]}
-                                                  role="button"
+                                                <Component
+                                                  align="center"
+                                                  className="css-1bqncjo-ButtonLabel edwq9my1"
                                                   size="xsmall"
                                                 >
-                                                  <button
-                                                    aria-disabled={false}
-                                                    aria-label="Add Thing"
-                                                    className="css-z6hjis-StyledButton-getColors edwq9my0"
-                                                    onClick={[Function]}
-                                                    role="button"
-                                                    size="xsmall"
+                                                  <span
+                                                    className="css-1bqncjo-ButtonLabel edwq9my1"
                                                   >
-                                                    <ButtonLabel
-                                                      align="center"
+                                                    <Icon
+                                                      hasChildren={true}
                                                       size="xsmall"
                                                     >
                                                       <Component
-                                                        align="center"
-                                                        className="css-1bqncjo-ButtonLabel edwq9my1"
+                                                        className="css-1vdnsie-Icon edwq9my2"
+                                                        hasChildren={true}
                                                         size="xsmall"
                                                       >
                                                         <span
-                                                          className="css-1bqncjo-ButtonLabel edwq9my1"
+                                                          className="css-1vdnsie-Icon edwq9my2"
+                                                          size="xsmall"
                                                         >
-                                                          <Icon
-                                                            hasChildren={true}
-                                                            size="xsmall"
+                                                          <StyledInlineSvg
+                                                            size="12px"
+                                                            src="icon-circle-add"
                                                           >
-                                                            <Component
-                                                              className="css-1vdnsie-Icon edwq9my2"
-                                                              hasChildren={true}
-                                                              size="xsmall"
+                                                            <ForwardRef
+                                                              className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                              size="12px"
+                                                              src="icon-circle-add"
                                                             >
-                                                              <span
-                                                                className="css-1vdnsie-Icon edwq9my2"
-                                                                size="xsmall"
+                                                              <svg
+                                                                className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                                height="12px"
+                                                                viewBox={Object {}}
+                                                                width="12px"
                                                               >
-                                                                <StyledInlineSvg
-                                                                  size="12px"
-                                                                  src="icon-circle-add"
-                                                                >
-                                                                  <ForwardRef
-                                                                    className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
-                                                                    size="12px"
-                                                                    src="icon-circle-add"
-                                                                  >
-                                                                    <svg
-                                                                      className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
-                                                                      height="12px"
-                                                                      viewBox={Object {}}
-                                                                      width="12px"
-                                                                    >
-                                                                      <use
-                                                                        href="#test"
-                                                                        xlinkHref="#test"
-                                                                      />
-                                                                    </svg>
-                                                                  </ForwardRef>
-                                                                </StyledInlineSvg>
-                                                              </span>
-                                                            </Component>
-                                                          </Icon>
-                                                          Add Thing
+                                                                <use
+                                                                  href="#test"
+                                                                  xlinkHref="#test"
+                                                                />
+                                                              </svg>
+                                                            </ForwardRef>
+                                                          </StyledInlineSvg>
                                                         </span>
                                                       </Component>
-                                                    </ButtonLabel>
-                                                  </button>
-                                                </ForwardRef>
-                                              </StyledButton>
-                                            </Button>
-                                          </div>
-                                        </Observer>
-                                      </div>
-                                    </FieldControlStyled>
-                                    <FieldControlState
-                                      flexibleControlStateSize={false}
-                                    >
-                                      <div
-                                        className="css-oiazm4-FieldControlState ep9s0su0"
-                                      >
-                                        <FormFieldControlState
-                                          model={
-                                            FormModel {
-                                              "api": Client {
-                                                "_chain": [Function],
-                                                "_wrapRequest": [Function],
-                                                "bulkUpdate": [Function],
-                                                "handleRequestError": [Function],
-                                                "hasProjectBeenRenamed": [Function],
-                                              },
-                                              "errors": Object {},
-                                              "fieldDescriptor": Map {
-                                                "fieldName" => Object {
-                                                  "addButtonText": "Add Thing",
-                                                  "allowEmpty": false,
-                                                  "children": [Function],
-                                                  "className": undefined,
-                                                  "columnKeys": Array [
-                                                    "column1",
-                                                    "column2",
-                                                  ],
-                                                  "columnLabels": Object {
-                                                    "column1": "Column 1",
-                                                    "column2": "Column 2",
-                                                  },
-                                                  "field": [Function],
-                                                  "flexibleControlStateSize": false,
-                                                  "formatMessageValue": false,
-                                                  "hideErrorMessage": false,
-                                                  "inline": [Function],
-                                                  "name": "fieldName",
-                                                },
-                                              },
-                                              "fieldState": Object {},
-                                              "fields": Object {},
-                                              "formErrors": undefined,
-                                              "formState": undefined,
-                                              "initialData": Object {},
-                                              "options": Object {
-                                                "allowUndo": false,
-                                                "apiEndpoint": undefined,
-                                                "apiMethod": undefined,
-                                                "onFieldChange": undefined,
-                                                "onSubmitError": undefined,
-                                                "onSubmitSuccess": undefined,
-                                                "resetOnError": undefined,
-                                                "saveOnBlur": false,
-                                              },
-                                              "snapshots": Array [
-                                                Map {},
-                                              ],
-                                            }
-                                          }
-                                          name="fieldName"
-                                        >
-                                          <Observer>
-                                            <ControlState
-                                              error={false}
-                                              isSaved={null}
-                                              isSaving={null}
-                                            />
-                                          </Observer>
-                                        </FormFieldControlState>
-                                      </div>
-                                    </FieldControlState>
-                                  </div>
-                                </FieldControlWrapper>
-                                <Observer />
-                              </div>
-                            </FieldControlErrorWrapper>
-                          </FieldControl>
+                                                    </Icon>
+                                                    Add Thing
+                                                  </span>
+                                                </Component>
+                                              </ButtonLabel>
+                                            </button>
+                                          </ForwardRef>
+                                        </StyledButton>
+                                      </Button>
+                                    </div>
+                                  </Observer>
+                                </div>
+                              </FieldControlStyled>
+                              <FieldControlState
+                                flexibleControlStateSize={false}
+                              >
+                                <div
+                                  className="css-oiazm4-FieldControlState ep9s0su0"
+                                >
+                                  <FormFieldControlState
+                                    model={
+                                      FormModel {
+                                        "api": Client {
+                                          "_chain": [Function],
+                                          "_wrapRequest": [Function],
+                                          "bulkUpdate": [Function],
+                                          "handleRequestError": [Function],
+                                          "hasProjectBeenRenamed": [Function],
+                                        },
+                                        "errors": Object {},
+                                        "fieldDescriptor": Map {
+                                          "fieldName" => Object {
+                                            "addButtonText": "Add Thing",
+                                            "allowEmpty": false,
+                                            "children": [Function],
+                                            "className": undefined,
+                                            "columnKeys": Array [
+                                              "column1",
+                                              "column2",
+                                            ],
+                                            "columnLabels": Object {
+                                              "column1": "Column 1",
+                                              "column2": "Column 2",
+                                            },
+                                            "field": [Function],
+                                            "flexibleControlStateSize": false,
+                                            "formatMessageValue": false,
+                                            "hideErrorMessage": false,
+                                            "inline": [Function],
+                                            "name": "fieldName",
+                                          },
+                                        },
+                                        "fieldState": Object {},
+                                        "fields": Object {},
+                                        "formErrors": undefined,
+                                        "formState": undefined,
+                                        "initialData": Object {},
+                                        "options": Object {
+                                          "allowUndo": false,
+                                          "apiEndpoint": undefined,
+                                          "apiMethod": undefined,
+                                          "onFieldChange": undefined,
+                                          "onSubmitError": undefined,
+                                          "onSubmitSuccess": undefined,
+                                          "resetOnError": undefined,
+                                          "saveOnBlur": false,
+                                        },
+                                        "snapshots": Array [
+                                          Map {},
+                                        ],
+                                      }
+                                    }
+                                    name="fieldName"
+                                  >
+                                    <Observer>
+                                      <ControlState
+                                        error={false}
+                                        isSaved={null}
+                                        isSaving={null}
+                                      />
+                                    </Observer>
+                                  </FormFieldControlState>
+                                </div>
+                              </FieldControlState>
+                            </div>
+                          </FieldControlWrapper>
+                          <Observer />
                         </div>
-                      </Base>
-                    </Flex>
-                  </Component>
+                      </FieldControlErrorWrapper>
+                    </FieldControl>
+                  </div>
                 </FieldWrapper>
               </Field>
             </Observer>
@@ -610,229 +597,216 @@ exports[`TableField renders renders without form context 1`] = `
             hasControlState={true}
             inline={true}
           >
-            <Component
-              className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+            <div
+              className="css-nlold9-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
             >
-              <Flex
-                className="css-1715a37-FieldWrapper-getPadding-borderStyle-inlineStyle etqqcs20"
+              <FieldControl
+                alignRight={false}
+                controlState={
+                  <FormFieldControlState
+                    model={
+                      MockModel {
+                        "initialData": Object {
+                          "fieldName": undefined,
+                        },
+                        "props": Object {
+                          "addButtonText": "Add Item",
+                          "allowEmpty": false,
+                          "children": [Function],
+                          "className": undefined,
+                          "columnKeys": Array [
+                            "column1",
+                            "column2",
+                          ],
+                          "columnLabels": Object {
+                            "column1": "Column 1",
+                            "column2": "Column 2",
+                          },
+                          "field": [Function],
+                          "flexibleControlStateSize": false,
+                          "formatMessageValue": false,
+                          "hideErrorMessage": false,
+                          "inline": [Function],
+                          "name": "fieldName",
+                        },
+                      }
+                    }
+                    name="fieldName"
+                  />
+                }
+                disabled={false}
+                errorState={
+                  <Observer>
+                    [Function]
+                  </Observer>
+                }
+                flexibleControlStateSize={false}
+                inline={true}
               >
-                <Base
-                  className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
+                <FieldControlErrorWrapper
+                  inline={true}
                 >
                   <div
-                    className="etqqcs20 css-2j8o10-FieldWrapper-getPadding-borderStyle-inlineStyle"
-                    is={null}
+                    className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
                   >
-                    <FieldControl
-                      alignRight={false}
-                      controlState={
-                        <FormFieldControlState
-                          model={
-                            MockModel {
-                              "initialData": Object {
-                                "fieldName": undefined,
-                              },
-                              "props": Object {
-                                "addButtonText": "Add Item",
-                                "allowEmpty": false,
-                                "children": [Function],
-                                "className": undefined,
-                                "columnKeys": Array [
-                                  "column1",
-                                  "column2",
-                                ],
-                                "columnLabels": Object {
-                                  "column1": "Column 1",
-                                  "column2": "Column 2",
-                                },
-                                "field": [Function],
-                                "flexibleControlStateSize": false,
-                                "formatMessageValue": false,
-                                "hideErrorMessage": false,
-                                "inline": [Function],
-                                "name": "fieldName",
-                              },
-                            }
-                          }
-                          name="fieldName"
-                        />
-                      }
-                      disabled={false}
-                      errorState={
-                        <Observer>
-                          [Function]
-                        </Observer>
-                      }
-                      flexibleControlStateSize={false}
-                      inline={true}
-                    >
-                      <FieldControlErrorWrapper
-                        inline={true}
+                    <FieldControlWrapper>
+                      <div
+                        className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                       >
-                        <div
-                          className="css-1xbxyck-FieldControlErrorWrapper e12jpfuq0"
+                        <FieldControlStyled
+                          alignRight={false}
                         >
-                          <FieldControlWrapper>
-                            <div
-                              className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                            >
-                              <FieldControlStyled
-                                alignRight={false}
-                              >
-                                <div
-                                  className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                          <div
+                            className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                          >
+                            <Observer>
+                              <div>
+                                <Button
+                                  align="center"
+                                  disabled={false}
+                                  icon="icon-circle-add"
+                                  onClick={[Function]}
+                                  size="xsmall"
                                 >
-                                  <Observer>
-                                    <div>
-                                      <Button
-                                        align="center"
-                                        disabled={false}
-                                        icon="icon-circle-add"
+                                  <StyledButton
+                                    aria-disabled={false}
+                                    aria-label="Add Item"
+                                    disabled={false}
+                                    onClick={[Function]}
+                                    role="button"
+                                    size="xsmall"
+                                  >
+                                    <ForwardRef
+                                      aria-disabled={false}
+                                      aria-label="Add Item"
+                                      className="css-z6hjis-StyledButton-getColors edwq9my0"
+                                      disabled={false}
+                                      onClick={[Function]}
+                                      role="button"
+                                      size="xsmall"
+                                    >
+                                      <button
+                                        aria-disabled={false}
+                                        aria-label="Add Item"
+                                        className="css-z6hjis-StyledButton-getColors edwq9my0"
                                         onClick={[Function]}
+                                        role="button"
                                         size="xsmall"
                                       >
-                                        <StyledButton
-                                          aria-disabled={false}
-                                          aria-label="Add Item"
-                                          disabled={false}
-                                          onClick={[Function]}
-                                          role="button"
+                                        <ButtonLabel
+                                          align="center"
                                           size="xsmall"
                                         >
-                                          <ForwardRef
-                                            aria-disabled={false}
-                                            aria-label="Add Item"
-                                            className="css-z6hjis-StyledButton-getColors edwq9my0"
-                                            disabled={false}
-                                            onClick={[Function]}
-                                            role="button"
+                                          <Component
+                                            align="center"
+                                            className="css-1bqncjo-ButtonLabel edwq9my1"
                                             size="xsmall"
                                           >
-                                            <button
-                                              aria-disabled={false}
-                                              aria-label="Add Item"
-                                              className="css-z6hjis-StyledButton-getColors edwq9my0"
-                                              onClick={[Function]}
-                                              role="button"
-                                              size="xsmall"
+                                            <span
+                                              className="css-1bqncjo-ButtonLabel edwq9my1"
                                             >
-                                              <ButtonLabel
-                                                align="center"
+                                              <Icon
+                                                hasChildren={true}
                                                 size="xsmall"
                                               >
                                                 <Component
-                                                  align="center"
-                                                  className="css-1bqncjo-ButtonLabel edwq9my1"
+                                                  className="css-1vdnsie-Icon edwq9my2"
+                                                  hasChildren={true}
                                                   size="xsmall"
                                                 >
                                                   <span
-                                                    className="css-1bqncjo-ButtonLabel edwq9my1"
+                                                    className="css-1vdnsie-Icon edwq9my2"
+                                                    size="xsmall"
                                                   >
-                                                    <Icon
-                                                      hasChildren={true}
-                                                      size="xsmall"
+                                                    <StyledInlineSvg
+                                                      size="12px"
+                                                      src="icon-circle-add"
                                                     >
-                                                      <Component
-                                                        className="css-1vdnsie-Icon edwq9my2"
-                                                        hasChildren={true}
-                                                        size="xsmall"
+                                                      <ForwardRef
+                                                        className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                        size="12px"
+                                                        src="icon-circle-add"
                                                       >
-                                                        <span
-                                                          className="css-1vdnsie-Icon edwq9my2"
-                                                          size="xsmall"
+                                                        <svg
+                                                          className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
+                                                          height="12px"
+                                                          viewBox={Object {}}
+                                                          width="12px"
                                                         >
-                                                          <StyledInlineSvg
-                                                            size="12px"
-                                                            src="icon-circle-add"
-                                                          >
-                                                            <ForwardRef
-                                                              className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
-                                                              size="12px"
-                                                              src="icon-circle-add"
-                                                            >
-                                                              <svg
-                                                                className="css-52zz4j-InlineSvg-StyledInlineSvg edwq9my3"
-                                                                height="12px"
-                                                                viewBox={Object {}}
-                                                                width="12px"
-                                                              >
-                                                                <use
-                                                                  href="#test"
-                                                                  xlinkHref="#test"
-                                                                />
-                                                              </svg>
-                                                            </ForwardRef>
-                                                          </StyledInlineSvg>
-                                                        </span>
-                                                      </Component>
-                                                    </Icon>
-                                                    Add Item
+                                                          <use
+                                                            href="#test"
+                                                            xlinkHref="#test"
+                                                          />
+                                                        </svg>
+                                                      </ForwardRef>
+                                                    </StyledInlineSvg>
                                                   </span>
                                                 </Component>
-                                              </ButtonLabel>
-                                            </button>
-                                          </ForwardRef>
-                                        </StyledButton>
-                                      </Button>
-                                    </div>
-                                  </Observer>
-                                </div>
-                              </FieldControlStyled>
-                              <FieldControlState
-                                flexibleControlStateSize={false}
-                              >
-                                <div
-                                  className="css-oiazm4-FieldControlState ep9s0su0"
-                                >
-                                  <FormFieldControlState
-                                    model={
-                                      MockModel {
-                                        "initialData": Object {
-                                          "fieldName": undefined,
-                                        },
-                                        "props": Object {
-                                          "addButtonText": "Add Item",
-                                          "allowEmpty": false,
-                                          "children": [Function],
-                                          "className": undefined,
-                                          "columnKeys": Array [
-                                            "column1",
-                                            "column2",
-                                          ],
-                                          "columnLabels": Object {
-                                            "column1": "Column 1",
-                                            "column2": "Column 2",
-                                          },
-                                          "field": [Function],
-                                          "flexibleControlStateSize": false,
-                                          "formatMessageValue": false,
-                                          "hideErrorMessage": false,
-                                          "inline": [Function],
-                                          "name": "fieldName",
-                                        },
-                                      }
-                                    }
-                                    name="fieldName"
-                                  >
-                                    <Observer>
-                                      <ControlState
-                                        isSaved={false}
-                                        isSaving={false}
-                                      />
-                                    </Observer>
-                                  </FormFieldControlState>
-                                </div>
-                              </FieldControlState>
-                            </div>
-                          </FieldControlWrapper>
-                          <Observer />
-                        </div>
-                      </FieldControlErrorWrapper>
-                    </FieldControl>
+                                              </Icon>
+                                              Add Item
+                                            </span>
+                                          </Component>
+                                        </ButtonLabel>
+                                      </button>
+                                    </ForwardRef>
+                                  </StyledButton>
+                                </Button>
+                              </div>
+                            </Observer>
+                          </div>
+                        </FieldControlStyled>
+                        <FieldControlState
+                          flexibleControlStateSize={false}
+                        >
+                          <div
+                            className="css-oiazm4-FieldControlState ep9s0su0"
+                          >
+                            <FormFieldControlState
+                              model={
+                                MockModel {
+                                  "initialData": Object {
+                                    "fieldName": undefined,
+                                  },
+                                  "props": Object {
+                                    "addButtonText": "Add Item",
+                                    "allowEmpty": false,
+                                    "children": [Function],
+                                    "className": undefined,
+                                    "columnKeys": Array [
+                                      "column1",
+                                      "column2",
+                                    ],
+                                    "columnLabels": Object {
+                                      "column1": "Column 1",
+                                      "column2": "Column 2",
+                                    },
+                                    "field": [Function],
+                                    "flexibleControlStateSize": false,
+                                    "formatMessageValue": false,
+                                    "hideErrorMessage": false,
+                                    "inline": [Function],
+                                    "name": "fieldName",
+                                  },
+                                }
+                              }
+                              name="fieldName"
+                            >
+                              <Observer>
+                                <ControlState
+                                  isSaved={false}
+                                  isSaving={false}
+                                />
+                              </Observer>
+                            </FormFieldControlState>
+                          </div>
+                        </FieldControlState>
+                      </div>
+                    </FieldControlWrapper>
+                    <Observer />
                   </div>
-                </Base>
-              </Flex>
-            </Component>
+                </FieldControlErrorWrapper>
+              </FieldControl>
+            </div>
           </FieldWrapper>
         </Field>
       </Observer>
diff --git a/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap
index ea82902182..15ed2113ba 100644
--- a/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap
@@ -511,67 +511,205 @@ exports[`ExternalIssueForm link renders 1`] = `
                     inline={false}
                     stacked={true}
                   >
-                    <Component
-                      className="css-1743ds7-FieldWrapper-getPadding-inlineStyle etqqcs20"
+                    <div
+                      className="css-4bhbmi-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
                     >
-                      <Flex
-                        className="css-1743ds7-FieldWrapper-getPadding-inlineStyle etqqcs20"
+                      <FieldDescription
+                        htmlFor="repo"
+                        inline={false}
                       >
-                        <Base
-                          className="etqqcs20 css-1i61chh-FieldWrapper-getPadding-inlineStyle"
+                        <label
+                          className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
+                          htmlFor="repo"
                         >
-                          <div
-                            className="etqqcs20 css-1i61chh-FieldWrapper-getPadding-inlineStyle"
-                            is={null}
+                          <FieldLabel
+                            disabled={false}
                           >
-                            <FieldDescription
-                              htmlFor="repo"
-                              inline={false}
+                            <div
+                              className="css-qzvhly-FieldLabel e16ushrl0"
                             >
-                              <label
-                                className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
-                                htmlFor="repo"
+                              GitHub Repository
+                               
+                              <FieldRequiredBadge>
+                                <div
+                                  className="css-x360nj-FieldRequiredBadge e1uclnuk0"
+                                />
+                              </FieldRequiredBadge>
+                            </div>
+                          </FieldLabel>
+                        </label>
+                      </FieldDescription>
+                      <FieldControl
+                        alignRight={false}
+                        controlState={
+                          <FormFieldControlState
+                            model={
+                              FormModel {
+                                "api": Client {
+                                  "_chain": [Function],
+                                  "_wrapRequest": [Function],
+                                  "bulkUpdate": [Function],
+                                  "handleRequestError": [Function],
+                                  "hasProjectBeenRenamed": [Function],
+                                },
+                                "errors": Object {},
+                                "fieldDescriptor": Map {
+                                  "repo" => Object {
+                                    "alignRight": false,
+                                    "allowEmpty": false,
+                                    "async": true,
+                                    "autoload": true,
+                                    "cache": false,
+                                    "children": [Function],
+                                    "choices": Array [
+                                      Array [
+                                        "scefali/test",
+                                        "test",
+                                      ],
+                                      Array [
+                                        "scefali/ZeldaBazaar",
+                                        "ZeldaBazaar",
+                                      ],
+                                    ],
+                                    "className": undefined,
+                                    "default": "scefali/test",
+                                    "disabled": false,
+                                    "escapeMarkup": true,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "formatMessageValue": [Function],
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "GitHub Repository",
+                                    "loadOptions": [Function],
+                                    "name": "repo",
+                                    "onBlurResetsInput": false,
+                                    "onCloseResetsInput": false,
+                                    "onSelectResetsInput": false,
+                                    "placeholder": "--",
+                                    "required": true,
+                                    "small": false,
+                                    "stacked": true,
+                                    "type": "select",
+                                    "updatesForm": true,
+                                    "url": "/search",
+                                  },
+                                  "externalIssue" => Object {
+                                    "alignRight": false,
+                                    "allowEmpty": false,
+                                    "async": true,
+                                    "autoload": true,
+                                    "cache": false,
+                                    "children": [Function],
+                                    "choices": Array [],
+                                    "className": undefined,
+                                    "default": "",
+                                    "disabled": false,
+                                    "escapeMarkup": true,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "formatMessageValue": [Function],
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "Issue",
+                                    "loadOptions": [Function],
+                                    "name": "externalIssue",
+                                    "onBlurResetsInput": false,
+                                    "onCloseResetsInput": false,
+                                    "onSelectResetsInput": false,
+                                    "placeholder": "--",
+                                    "required": true,
+                                    "small": false,
+                                    "stacked": true,
+                                    "type": "select",
+                                    "url": "/search",
+                                  },
+                                  "comment" => Object {
+                                    "children": [Function],
+                                    "className": undefined,
+                                    "default": "Default Value",
+                                    "disabled": false,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "Comment",
+                                    "name": "comment",
+                                    "required": false,
+                                    "stacked": true,
+                                    "type": "textarea",
+                                  },
+                                },
+                                "fieldState": Object {},
+                                "fields": Object {
+                                  "comment": "Default Value",
+                                  "externalIssue": "",
+                                  "repo": "scefali/test",
+                                },
+                                "formErrors": undefined,
+                                "formState": undefined,
+                                "initialData": Object {
+                                  "comment": "Default Value",
+                                  "externalIssue": "",
+                                  "repo": "scefali/test",
+                                },
+                                "options": Object {
+                                  "allowUndo": false,
+                                  "apiEndpoint": "/groups/1/integrations/1/",
+                                  "apiMethod": "PUT",
+                                  "onFieldChange": [Function],
+                                  "onSubmitError": undefined,
+                                  "onSubmitSuccess": [Function],
+                                  "resetOnError": undefined,
+                                  "saveOnBlur": false,
+                                },
+                                "snapshots": Array [
+                                  Map {
+                                    "repo" => "scefali/test",
+                                    "externalIssue" => "",
+                                    "comment" => "Default Value",
+                                  },
+                                ],
+                              }
+                            }
+                            name="repo"
+                          />
+                        }
+                        disabled={false}
+                        errorState={
+                          <Observer>
+                            [Function]
+                          </Observer>
+                        }
+                        flexibleControlStateSize={true}
+                        inline={false}
+                      >
+                        <FieldControlErrorWrapper
+                          inline={false}
+                        >
+                          <div
+                            className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
+                          >
+                            <FieldControlWrapper>
+                              <div
+                                className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                               >
-                                <FieldLabel
-                                  disabled={false}
+                                <FieldControlStyled
+                                  alignRight={false}
                                 >
                                   <div
-                                    className="css-qzvhly-FieldLabel e16ushrl0"
+                                    className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
                                   >
-                                    GitHub Repository
-                                     
-                                    <FieldRequiredBadge>
-                                      <div
-                                        className="css-x360nj-FieldRequiredBadge e1uclnuk0"
-                                      />
-                                    </FieldRequiredBadge>
-                                  </div>
-                                </FieldLabel>
-                              </label>
-                            </FieldDescription>
-                            <FieldControl
-                              alignRight={false}
-                              controlState={
-                                <FormFieldControlState
-                                  model={
-                                    FormModel {
-                                      "api": Client {
-                                        "_chain": [Function],
-                                        "_wrapRequest": [Function],
-                                        "bulkUpdate": [Function],
-                                        "handleRequestError": [Function],
-                                        "hasProjectBeenRenamed": [Function],
-                                      },
-                                      "errors": Object {},
-                                      "fieldDescriptor": Map {
-                                        "repo" => Object {
-                                          "alignRight": false,
-                                          "allowEmpty": false,
-                                          "async": true,
-                                          "autoload": true,
-                                          "cache": false,
-                                          "children": [Function],
-                                          "choices": Array [
+                                    <Observer>
+                                      <SelectControl
+                                        alignRight={false}
+                                        allowEmpty={false}
+                                        async={true}
+                                        autoload={true}
+                                        cache={false}
+                                        choices={
+                                          Array [
                                             Array [
                                               "scefali/test",
                                               "test",
@@ -580,163 +718,185 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               "scefali/ZeldaBazaar",
                                               "ZeldaBazaar",
                                             ],
-                                          ],
-                                          "className": undefined,
-                                          "default": "scefali/test",
-                                          "disabled": false,
-                                          "escapeMarkup": true,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "formatMessageValue": [Function],
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "GitHub Repository",
-                                          "loadOptions": [Function],
-                                          "name": "repo",
-                                          "onBlurResetsInput": false,
-                                          "onCloseResetsInput": false,
-                                          "onSelectResetsInput": false,
-                                          "placeholder": "--",
-                                          "required": true,
-                                          "small": false,
-                                          "stacked": true,
-                                          "type": "select",
-                                          "updatesForm": true,
-                                          "url": "/search",
-                                        },
-                                        "externalIssue" => Object {
-                                          "alignRight": false,
-                                          "allowEmpty": false,
-                                          "async": true,
-                                          "autoload": true,
-                                          "cache": false,
-                                          "children": [Function],
-                                          "choices": Array [],
-                                          "className": undefined,
-                                          "default": "",
-                                          "disabled": false,
-                                          "escapeMarkup": true,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "formatMessageValue": [Function],
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "Issue",
-                                          "loadOptions": [Function],
-                                          "name": "externalIssue",
-                                          "onBlurResetsInput": false,
-                                          "onCloseResetsInput": false,
-                                          "onSelectResetsInput": false,
-                                          "placeholder": "--",
-                                          "required": true,
-                                          "small": false,
-                                          "stacked": true,
-                                          "type": "select",
-                                          "url": "/search",
-                                        },
-                                        "comment" => Object {
-                                          "children": [Function],
-                                          "className": undefined,
-                                          "default": "Default Value",
-                                          "disabled": false,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "Comment",
-                                          "name": "comment",
-                                          "required": false,
-                                          "stacked": true,
-                                          "type": "textarea",
-                                        },
-                                      },
-                                      "fieldState": Object {},
-                                      "fields": Object {
-                                        "comment": "Default Value",
-                                        "externalIssue": "",
-                                        "repo": "scefali/test",
-                                      },
-                                      "formErrors": undefined,
-                                      "formState": undefined,
-                                      "initialData": Object {
-                                        "comment": "Default Value",
-                                        "externalIssue": "",
-                                        "repo": "scefali/test",
-                                      },
-                                      "options": Object {
-                                        "allowUndo": false,
-                                        "apiEndpoint": "/groups/1/integrations/1/",
-                                        "apiMethod": "PUT",
-                                        "onFieldChange": [Function],
-                                        "onSubmitError": undefined,
-                                        "onSubmitSuccess": [Function],
-                                        "resetOnError": undefined,
-                                        "saveOnBlur": false,
-                                      },
-                                      "snapshots": Array [
-                                        Map {
-                                          "repo" => "scefali/test",
-                                          "externalIssue" => "",
-                                          "comment" => "Default Value",
-                                        },
-                                      ],
-                                    }
-                                  }
-                                  name="repo"
-                                />
-                              }
-                              disabled={false}
-                              errorState={
-                                <Observer>
-                                  [Function]
-                                </Observer>
-                              }
-                              flexibleControlStateSize={true}
-                              inline={false}
-                            >
-                              <FieldControlErrorWrapper
-                                inline={false}
-                              >
-                                <div
-                                  className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
-                                >
-                                  <FieldControlWrapper>
-                                    <div
-                                      className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                                    >
-                                      <FieldControlStyled
-                                        alignRight={false}
+                                          ]
+                                        }
+                                        clearable={false}
+                                        default="scefali/test"
+                                        disabled={false}
+                                        error={false}
+                                        escapeMarkup={true}
+                                        field={[Function]}
+                                        formatMessageValue={[Function]}
+                                        height={36}
+                                        id="repo"
+                                        initialData={
+                                          Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          }
+                                        }
+                                        inline={false}
+                                        innerRef={[Function]}
+                                        label="GitHub Repository"
+                                        loadOptions={[Function]}
+                                        multiple={false}
+                                        name="repo"
+                                        onBlurResetsInput={false}
+                                        onChange={[Function]}
+                                        onCloseResetsInput={false}
+                                        onKeyDown={[Function]}
+                                        onSelectResetsInput={false}
+                                        options={
+                                          Array [
+                                            Object {
+                                              "label": "test",
+                                              "value": "scefali/test",
+                                            },
+                                            Object {
+                                              "label": "ZeldaBazaar",
+                                              "value": "scefali/ZeldaBazaar",
+                                            },
+                                          ]
+                                        }
+                                        placeholder="--"
+                                        small={false}
+                                        stacked={true}
+                                        type="select"
+                                        updatesForm={true}
+                                        url="/search"
+                                        value="scefali/test"
                                       >
-                                        <div
-                                          className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                                        <StyledSelect
+                                          alignRight={false}
+                                          allowEmpty={false}
+                                          arrowRenderer={[Function]}
+                                          async={true}
+                                          autoload={true}
+                                          backspaceRemoves={false}
+                                          cache={false}
+                                          clearable={false}
+                                          default="scefali/test"
+                                          deleteRemoves={false}
+                                          disabled={false}
+                                          error={false}
+                                          escapeMarkup={true}
+                                          field={[Function]}
+                                          formatMessageValue={[Function]}
+                                          height={36}
+                                          id="repo"
+                                          initialData={
+                                            Object {
+                                              "comment": "Default Value",
+                                              "externalIssue": "",
+                                              "repo": "scefali/test",
+                                            }
+                                          }
+                                          inline={false}
+                                          innerRef={[Function]}
+                                          label="GitHub Repository"
+                                          loadOptions={[Function]}
+                                          multiple={false}
+                                          name="repo"
+                                          onBlurResetsInput={false}
+                                          onChange={[Function]}
+                                          onCloseResetsInput={false}
+                                          onKeyDown={[Function]}
+                                          onSelectResetsInput={false}
+                                          options={
+                                            Array [
+                                              Object {
+                                                "label": "test",
+                                                "value": "scefali/test",
+                                              },
+                                              Object {
+                                                "label": "ZeldaBazaar",
+                                                "value": "scefali/ZeldaBazaar",
+                                              },
+                                            ]
+                                          }
+                                          placeholder="--"
+                                          small={false}
+                                          stacked={true}
+                                          type="select"
+                                          updatesForm={true}
+                                          url="/search"
+                                          value="scefali/test"
                                         >
-                                          <Observer>
-                                            <SelectControl
+                                          <ForwardRef(SelectPicker)
+                                            alignRight={false}
+                                            allowEmpty={false}
+                                            arrowRenderer={[Function]}
+                                            async={true}
+                                            autoload={true}
+                                            backspaceRemoves={false}
+                                            cache={false}
+                                            className="css-5srpa7-StyledSelect eho28m20"
+                                            clearable={false}
+                                            default="scefali/test"
+                                            deleteRemoves={false}
+                                            disabled={false}
+                                            error={false}
+                                            escapeMarkup={true}
+                                            field={[Function]}
+                                            formatMessageValue={[Function]}
+                                            height={36}
+                                            id="repo"
+                                            initialData={
+                                              Object {
+                                                "comment": "Default Value",
+                                                "externalIssue": "",
+                                                "repo": "scefali/test",
+                                              }
+                                            }
+                                            inline={false}
+                                            label="GitHub Repository"
+                                            loadOptions={[Function]}
+                                            multiple={false}
+                                            name="repo"
+                                            onBlurResetsInput={false}
+                                            onChange={[Function]}
+                                            onCloseResetsInput={false}
+                                            onKeyDown={[Function]}
+                                            onSelectResetsInput={false}
+                                            options={
+                                              Array [
+                                                Object {
+                                                  "label": "test",
+                                                  "value": "scefali/test",
+                                                },
+                                                Object {
+                                                  "label": "ZeldaBazaar",
+                                                  "value": "scefali/ZeldaBazaar",
+                                                },
+                                              ]
+                                            }
+                                            placeholder="--"
+                                            small={false}
+                                            stacked={true}
+                                            type="select"
+                                            updatesForm={true}
+                                            url="/search"
+                                            value="scefali/test"
+                                          >
+                                            <SelectPicker
                                               alignRight={false}
                                               allowEmpty={false}
+                                              arrowRenderer={[Function]}
                                               async={true}
                                               autoload={true}
+                                              backspaceRemoves={false}
                                               cache={false}
-                                              choices={
-                                                Array [
-                                                  Array [
-                                                    "scefali/test",
-                                                    "test",
-                                                  ],
-                                                  Array [
-                                                    "scefali/ZeldaBazaar",
-                                                    "ZeldaBazaar",
-                                                  ],
-                                                ]
-                                              }
+                                              className="css-5srpa7-StyledSelect eho28m20"
                                               clearable={false}
                                               default="scefali/test"
+                                              deleteRemoves={false}
                                               disabled={false}
                                               error={false}
                                               escapeMarkup={true}
                                               field={[Function]}
                                               formatMessageValue={[Function]}
+                                              forwardedRef={[Function]}
                                               height={36}
                                               id="repo"
                                               initialData={
@@ -747,7 +907,6 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 }
                                               }
                                               inline={false}
-                                              innerRef={[Function]}
                                               label="GitHub Repository"
                                               loadOptions={[Function]}
                                               multiple={false}
@@ -777,14 +936,14 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               url="/search"
                                               value="scefali/test"
                                             >
-                                              <StyledSelect
+                                              <Async
                                                 alignRight={false}
                                                 allowEmpty={false}
                                                 arrowRenderer={[Function]}
-                                                async={true}
                                                 autoload={true}
                                                 backspaceRemoves={false}
                                                 cache={false}
+                                                className="css-5srpa7-StyledSelect eho28m20"
                                                 clearable={false}
                                                 default="scefali/test"
                                                 deleteRemoves={false}
@@ -795,6 +954,8 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 formatMessageValue={[Function]}
                                                 height={36}
                                                 id="repo"
+                                                ignoreAccents={true}
+                                                ignoreCase={true}
                                                 initialData={
                                                   Object {
                                                     "comment": "Default Value",
@@ -803,9 +964,9 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                   }
                                                 }
                                                 inline={false}
-                                                innerRef={[Function]}
                                                 label="GitHub Repository"
                                                 loadOptions={[Function]}
+                                                loadingPlaceholder="Loading..."
                                                 multiple={false}
                                                 name="repo"
                                                 onBlurResetsInput={false}
@@ -826,6 +987,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                   ]
                                                 }
                                                 placeholder="--"
+                                                searchPromptText="Type to search"
                                                 small={false}
                                                 stacked={true}
                                                 type="select"
@@ -833,25 +995,35 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 url="/search"
                                                 value="scefali/test"
                                               >
-                                                <ForwardRef(SelectPicker)
+                                                <Select
                                                   alignRight={false}
                                                   allowEmpty={false}
                                                   arrowRenderer={[Function]}
-                                                  async={true}
                                                   autoload={true}
+                                                  autosize={true}
                                                   backspaceRemoves={false}
+                                                  backspaceToRemoveMessage="Press backspace to remove {label}"
                                                   cache={false}
                                                   className="css-5srpa7-StyledSelect eho28m20"
+                                                  clearAllText="Clear all"
+                                                  clearRenderer={[Function]}
+                                                  clearValueText="Clear value"
                                                   clearable={false}
+                                                  closeOnSelect={true}
                                                   default="scefali/test"
                                                   deleteRemoves={false}
+                                                  delimiter=","
                                                   disabled={false}
                                                   error={false}
+                                                  escapeClearsValue={true}
                                                   escapeMarkup={true}
                                                   field={[Function]}
+                                                  filterOptions={[Function]}
                                                   formatMessageValue={[Function]}
                                                   height={36}
                                                   id="repo"
+                                                  ignoreAccents={true}
+                                                  ignoreCase={true}
                                                   initialData={
                                                     Object {
                                                       "comment": "Default Value",
@@ -860,497 +1032,312 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                     }
                                                   }
                                                   inline={false}
+                                                  inputProps={Object {}}
+                                                  isLoading={true}
+                                                  joinValues={false}
                                                   label="GitHub Repository"
+                                                  labelKey="label"
                                                   loadOptions={[Function]}
+                                                  loadingPlaceholder="Loading..."
+                                                  matchPos="any"
+                                                  matchProp="any"
+                                                  menuBuffer={0}
+                                                  menuRenderer={[Function]}
+                                                  multi={false}
                                                   multiple={false}
                                                   name="repo"
+                                                  noResultsText="Loading..."
                                                   onBlurResetsInput={false}
                                                   onChange={[Function]}
                                                   onCloseResetsInput={false}
+                                                  onInputChange={[Function]}
                                                   onKeyDown={[Function]}
                                                   onSelectResetsInput={false}
-                                                  options={
-                                                    Array [
-                                                      Object {
-                                                        "label": "test",
-                                                        "value": "scefali/test",
-                                                      },
-                                                      Object {
-                                                        "label": "ZeldaBazaar",
-                                                        "value": "scefali/ZeldaBazaar",
-                                                      },
-                                                    ]
-                                                  }
-                                                  placeholder="--"
+                                                  openOnClick={true}
+                                                  optionComponent={[Function]}
+                                                  options={Array []}
+                                                  pageSize={5}
+                                                  placeholder="Loading..."
+                                                  removeSelected={true}
+                                                  required={false}
+                                                  rtl={false}
+                                                  scrollMenuIntoView={true}
+                                                  searchPromptText="Type to search"
+                                                  searchable={true}
+                                                  simpleValue={false}
                                                   small={false}
                                                   stacked={true}
+                                                  tabSelectsValue={true}
+                                                  trimFilter={true}
                                                   type="select"
                                                   updatesForm={true}
                                                   url="/search"
                                                   value="scefali/test"
+                                                  valueComponent={[Function]}
+                                                  valueKey="value"
                                                 >
-                                                  <SelectPicker
-                                                    alignRight={false}
-                                                    allowEmpty={false}
-                                                    arrowRenderer={[Function]}
-                                                    async={true}
-                                                    autoload={true}
-                                                    backspaceRemoves={false}
-                                                    cache={false}
-                                                    className="css-5srpa7-StyledSelect eho28m20"
-                                                    clearable={false}
-                                                    default="scefali/test"
-                                                    deleteRemoves={false}
-                                                    disabled={false}
-                                                    error={false}
-                                                    escapeMarkup={true}
-                                                    field={[Function]}
-                                                    formatMessageValue={[Function]}
-                                                    forwardedRef={[Function]}
-                                                    height={36}
-                                                    id="repo"
-                                                    initialData={
-                                                      Object {
-                                                        "comment": "Default Value",
-                                                        "externalIssue": "",
-                                                        "repo": "scefali/test",
-                                                      }
-                                                    }
-                                                    inline={false}
-                                                    label="GitHub Repository"
-                                                    loadOptions={[Function]}
-                                                    multiple={false}
-                                                    name="repo"
-                                                    onBlurResetsInput={false}
-                                                    onChange={[Function]}
-                                                    onCloseResetsInput={false}
-                                                    onKeyDown={[Function]}
-                                                    onSelectResetsInput={false}
-                                                    options={
-                                                      Array [
-                                                        Object {
-                                                          "label": "test",
-                                                          "value": "scefali/test",
-                                                        },
-                                                        Object {
-                                                          "label": "ZeldaBazaar",
-                                                          "value": "scefali/ZeldaBazaar",
-                                                        },
-                                                      ]
-                                                    }
-                                                    placeholder="--"
-                                                    small={false}
-                                                    stacked={true}
-                                                    type="select"
-                                                    updatesForm={true}
-                                                    url="/search"
-                                                    value="scefali/test"
+                                                  <div
+                                                    className="Select css-5srpa7-StyledSelect eho28m20 is-loading is-searchable Select--single"
                                                   >
-                                                    <Async
-                                                      alignRight={false}
-                                                      allowEmpty={false}
-                                                      arrowRenderer={[Function]}
-                                                      autoload={true}
-                                                      backspaceRemoves={false}
-                                                      cache={false}
-                                                      className="css-5srpa7-StyledSelect eho28m20"
-                                                      clearable={false}
-                                                      default="scefali/test"
-                                                      deleteRemoves={false}
-                                                      disabled={false}
-                                                      error={false}
-                                                      escapeMarkup={true}
-                                                      field={[Function]}
-                                                      formatMessageValue={[Function]}
-                                                      height={36}
-                                                      id="repo"
-                                                      ignoreAccents={true}
-                                                      ignoreCase={true}
-                                                      initialData={
-                                                        Object {
-                                                          "comment": "Default Value",
-                                                          "externalIssue": "",
-                                                          "repo": "scefali/test",
-                                                        }
-                                                      }
-                                                      inline={false}
-                                                      label="GitHub Repository"
-                                                      loadOptions={[Function]}
-                                                      loadingPlaceholder="Loading..."
-                                                      multiple={false}
-                                                      name="repo"
-                                                      onBlurResetsInput={false}
-                                                      onChange={[Function]}
-                                                      onCloseResetsInput={false}
+                                                    <div
+                                                      className="Select-control"
                                                       onKeyDown={[Function]}
-                                                      onSelectResetsInput={false}
-                                                      options={
-                                                        Array [
-                                                          Object {
-                                                            "label": "test",
-                                                            "value": "scefali/test",
-                                                          },
-                                                          Object {
-                                                            "label": "ZeldaBazaar",
-                                                            "value": "scefali/ZeldaBazaar",
-                                                          },
-                                                        ]
-                                                      }
-                                                      placeholder="--"
-                                                      searchPromptText="Type to search"
-                                                      small={false}
-                                                      stacked={true}
-                                                      type="select"
-                                                      updatesForm={true}
-                                                      url="/search"
-                                                      value="scefali/test"
+                                                      onMouseDown={[Function]}
+                                                      onTouchEnd={[Function]}
+                                                      onTouchMove={[Function]}
+                                                      onTouchStart={[Function]}
                                                     >
-                                                      <Select
-                                                        alignRight={false}
-                                                        allowEmpty={false}
-                                                        arrowRenderer={[Function]}
-                                                        autoload={true}
-                                                        autosize={true}
-                                                        backspaceRemoves={false}
-                                                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                                                        cache={false}
-                                                        className="css-5srpa7-StyledSelect eho28m20"
-                                                        clearAllText="Clear all"
-                                                        clearRenderer={[Function]}
-                                                        clearValueText="Clear value"
-                                                        clearable={false}
-                                                        closeOnSelect={true}
-                                                        default="scefali/test"
-                                                        deleteRemoves={false}
-                                                        delimiter=","
-                                                        disabled={false}
-                                                        error={false}
-                                                        escapeClearsValue={true}
-                                                        escapeMarkup={true}
-                                                        field={[Function]}
-                                                        filterOptions={[Function]}
-                                                        formatMessageValue={[Function]}
-                                                        height={36}
-                                                        id="repo"
-                                                        ignoreAccents={true}
-                                                        ignoreCase={true}
-                                                        initialData={
-                                                          Object {
-                                                            "comment": "Default Value",
-                                                            "externalIssue": "",
-                                                            "repo": "scefali/test",
-                                                          }
-                                                        }
-                                                        inline={false}
-                                                        inputProps={Object {}}
-                                                        isLoading={true}
-                                                        joinValues={false}
-                                                        label="GitHub Repository"
-                                                        labelKey="label"
-                                                        loadOptions={[Function]}
-                                                        loadingPlaceholder="Loading..."
-                                                        matchPos="any"
-                                                        matchProp="any"
-                                                        menuBuffer={0}
-                                                        menuRenderer={[Function]}
-                                                        multi={false}
-                                                        multiple={false}
-                                                        name="repo"
-                                                        noResultsText="Loading..."
-                                                        onBlurResetsInput={false}
-                                                        onChange={[Function]}
-                                                        onCloseResetsInput={false}
-                                                        onInputChange={[Function]}
-                                                        onKeyDown={[Function]}
-                                                        onSelectResetsInput={false}
-                                                        openOnClick={true}
-                                                        optionComponent={[Function]}
-                                                        options={Array []}
-                                                        pageSize={5}
-                                                        placeholder="Loading..."
-                                                        removeSelected={true}
-                                                        required={false}
-                                                        rtl={false}
-                                                        scrollMenuIntoView={true}
-                                                        searchPromptText="Type to search"
-                                                        searchable={true}
-                                                        simpleValue={false}
-                                                        small={false}
-                                                        stacked={true}
-                                                        tabSelectsValue={true}
-                                                        trimFilter={true}
-                                                        type="select"
-                                                        updatesForm={true}
-                                                        url="/search"
-                                                        value="scefali/test"
-                                                        valueComponent={[Function]}
-                                                        valueKey="value"
+                                                      <div
+                                                        className="Select-multi-value-wrapper"
+                                                        id="react-select-2--value"
                                                       >
                                                         <div
-                                                          className="Select css-5srpa7-StyledSelect eho28m20 is-loading is-searchable Select--single"
+                                                          className="Select-placeholder"
+                                                        >
+                                                          Loading...
+                                                        </div>
+                                                        <AutosizeInput
+                                                          aria-activedescendant="react-select-2--value"
+                                                          aria-expanded="false"
+                                                          aria-haspopup="false"
+                                                          aria-owns=""
+                                                          className="Select-input"
+                                                          id="repo"
+                                                          injectStyles={true}
+                                                          minWidth="5"
+                                                          onBlur={[Function]}
+                                                          onChange={[Function]}
+                                                          onFocus={[Function]}
+                                                          required={false}
+                                                          role="combobox"
+                                                          value=""
                                                         >
                                                           <div
-                                                            className="Select-control"
-                                                            onKeyDown={[Function]}
-                                                            onMouseDown={[Function]}
-                                                            onTouchEnd={[Function]}
-                                                            onTouchMove={[Function]}
-                                                            onTouchStart={[Function]}
+                                                            className="Select-input"
+                                                            style={
+                                                              Object {
+                                                                "display": "inline-block",
+                                                              }
+                                                            }
                                                           >
+                                                            <input
+                                                              aria-activedescendant="react-select-2--value"
+                                                              aria-expanded="false"
+                                                              aria-haspopup="false"
+                                                              aria-owns=""
+                                                              id="repo"
+                                                              onBlur={[Function]}
+                                                              onChange={[Function]}
+                                                              onFocus={[Function]}
+                                                              required={false}
+                                                              role="combobox"
+                                                              style={
+                                                                Object {
+                                                                  "boxSizing": "content-box",
+                                                                  "width": "5px",
+                                                                }
+                                                              }
+                                                              value=""
+                                                            />
                                                             <div
-                                                              className="Select-multi-value-wrapper"
-                                                              id="react-select-2--value"
-                                                            >
-                                                              <div
-                                                                className="Select-placeholder"
-                                                              >
-                                                                Loading...
-                                                              </div>
-                                                              <AutosizeInput
-                                                                aria-activedescendant="react-select-2--value"
-                                                                aria-expanded="false"
-                                                                aria-haspopup="false"
-                                                                aria-owns=""
-                                                                className="Select-input"
-                                                                id="repo"
-                                                                injectStyles={true}
-                                                                minWidth="5"
-                                                                onBlur={[Function]}
-                                                                onChange={[Function]}
-                                                                onFocus={[Function]}
-                                                                required={false}
-                                                                role="combobox"
-                                                                value=""
-                                                              >
-                                                                <div
-                                                                  className="Select-input"
-                                                                  style={
-                                                                    Object {
-                                                                      "display": "inline-block",
-                                                                    }
-                                                                  }
-                                                                >
-                                                                  <input
-                                                                    aria-activedescendant="react-select-2--value"
-                                                                    aria-expanded="false"
-                                                                    aria-haspopup="false"
-                                                                    aria-owns=""
-                                                                    id="repo"
-                                                                    onBlur={[Function]}
-                                                                    onChange={[Function]}
-                                                                    onFocus={[Function]}
-                                                                    required={false}
-                                                                    role="combobox"
-                                                                    style={
-                                                                      Object {
-                                                                        "boxSizing": "content-box",
-                                                                        "width": "5px",
-                                                                      }
-                                                                    }
-                                                                    value=""
-                                                                  />
-                                                                  <div
-                                                                    style={
-                                                                      Object {
-                                                                        "height": 0,
-                                                                        "left": 0,
-                                                                        "overflow": "scroll",
-                                                                        "position": "absolute",
-                                                                        "top": 0,
-                                                                        "visibility": "hidden",
-                                                                        "whiteSpace": "pre",
-                                                                      }
-                                                                    }
-                                                                  />
-                                                                </div>
-                                                              </AutosizeInput>
-                                                            </div>
-                                                            <span
-                                                              aria-hidden="true"
-                                                              className="Select-loading-zone"
-                                                            >
-                                                              <span
-                                                                className="Select-loading"
-                                                              />
-                                                            </span>
-                                                            <span
-                                                              className="Select-arrow-zone"
-                                                              onMouseDown={[Function]}
-                                                            >
-                                                              <span
-                                                                className="icon-arrow-down"
-                                                              />
-                                                            </span>
+                                                              style={
+                                                                Object {
+                                                                  "height": 0,
+                                                                  "left": 0,
+                                                                  "overflow": "scroll",
+                                                                  "position": "absolute",
+                                                                  "top": 0,
+                                                                  "visibility": "hidden",
+                                                                  "whiteSpace": "pre",
+                                                                }
+                                                              }
+                                                            />
                                                           </div>
-                                                        </div>
-                                                      </Select>
-                                                    </Async>
-                                                  </SelectPicker>
-                                                </ForwardRef(SelectPicker)>
-                                              </StyledSelect>
-                                            </SelectControl>
-                                          </Observer>
-                                        </div>
-                                      </FieldControlStyled>
-                                      <FieldControlState
-                                        flexibleControlStateSize={true}
-                                      >
-                                        <div
-                                          className="css-18vhbhh-FieldControlState ep9s0su0"
-                                        >
-                                          <FormFieldControlState
-                                            model={
-                                              FormModel {
-                                                "api": Client {
-                                                  "_chain": [Function],
-                                                  "_wrapRequest": [Function],
-                                                  "bulkUpdate": [Function],
-                                                  "handleRequestError": [Function],
-                                                  "hasProjectBeenRenamed": [Function],
-                                                },
-                                                "errors": Object {},
-                                                "fieldDescriptor": Map {
-                                                  "repo" => Object {
-                                                    "alignRight": false,
-                                                    "allowEmpty": false,
-                                                    "async": true,
-                                                    "autoload": true,
-                                                    "cache": false,
-                                                    "children": [Function],
-                                                    "choices": Array [
-                                                      Array [
-                                                        "scefali/test",
-                                                        "test",
-                                                      ],
-                                                      Array [
-                                                        "scefali/ZeldaBazaar",
-                                                        "ZeldaBazaar",
-                                                      ],
-                                                    ],
-                                                    "className": undefined,
-                                                    "default": "scefali/test",
-                                                    "disabled": false,
-                                                    "escapeMarkup": true,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "formatMessageValue": [Function],
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "GitHub Repository",
-                                                    "loadOptions": [Function],
-                                                    "name": "repo",
-                                                    "onBlurResetsInput": false,
-                                                    "onCloseResetsInput": false,
-                                                    "onSelectResetsInput": false,
-                                                    "placeholder": "--",
-                                                    "required": true,
-                                                    "small": false,
-                                                    "stacked": true,
-                                                    "type": "select",
-                                                    "updatesForm": true,
-                                                    "url": "/search",
-                                                  },
-                                                  "externalIssue" => Object {
-                                                    "alignRight": false,
-                                                    "allowEmpty": false,
-                                                    "async": true,
-                                                    "autoload": true,
-                                                    "cache": false,
-                                                    "children": [Function],
-                                                    "choices": Array [],
-                                                    "className": undefined,
-                                                    "default": "",
-                                                    "disabled": false,
-                                                    "escapeMarkup": true,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "formatMessageValue": [Function],
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "Issue",
-                                                    "loadOptions": [Function],
-                                                    "name": "externalIssue",
-                                                    "onBlurResetsInput": false,
-                                                    "onCloseResetsInput": false,
-                                                    "onSelectResetsInput": false,
-                                                    "placeholder": "--",
-                                                    "required": true,
-                                                    "small": false,
-                                                    "stacked": true,
-                                                    "type": "select",
-                                                    "url": "/search",
-                                                  },
-                                                  "comment" => Object {
-                                                    "children": [Function],
-                                                    "className": undefined,
-                                                    "default": "Default Value",
-                                                    "disabled": false,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "Comment",
-                                                    "name": "comment",
-                                                    "required": false,
-                                                    "stacked": true,
-                                                    "type": "textarea",
-                                                  },
-                                                },
-                                                "fieldState": Object {},
-                                                "fields": Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                },
-                                                "formErrors": undefined,
-                                                "formState": undefined,
-                                                "initialData": Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                },
-                                                "options": Object {
-                                                  "allowUndo": false,
-                                                  "apiEndpoint": "/groups/1/integrations/1/",
-                                                  "apiMethod": "PUT",
-                                                  "onFieldChange": [Function],
-                                                  "onSubmitError": undefined,
-                                                  "onSubmitSuccess": [Function],
-                                                  "resetOnError": undefined,
-                                                  "saveOnBlur": false,
-                                                },
-                                                "snapshots": Array [
-                                                  Map {
-                                                    "repo" => "scefali/test",
-                                                    "externalIssue" => "",
-                                                    "comment" => "Default Value",
-                                                  },
+                                                        </AutosizeInput>
+                                                      </div>
+                                                      <span
+                                                        aria-hidden="true"
+                                                        className="Select-loading-zone"
+                                                      >
+                                                        <span
+                                                          className="Select-loading"
+                                                        />
+                                                      </span>
+                                                      <span
+                                                        className="Select-arrow-zone"
+                                                        onMouseDown={[Function]}
+                                                      >
+                                                        <span
+                                                          className="icon-arrow-down"
+                                                        />
+                                                      </span>
+                                                    </div>
+                                                  </div>
+                                                </Select>
+                                              </Async>
+                                            </SelectPicker>
+                                          </ForwardRef(SelectPicker)>
+                                        </StyledSelect>
+                                      </SelectControl>
+                                    </Observer>
+                                  </div>
+                                </FieldControlStyled>
+                                <FieldControlState
+                                  flexibleControlStateSize={true}
+                                >
+                                  <div
+                                    className="css-18vhbhh-FieldControlState ep9s0su0"
+                                  >
+                                    <FormFieldControlState
+                                      model={
+                                        FormModel {
+                                          "api": Client {
+                                            "_chain": [Function],
+                                            "_wrapRequest": [Function],
+                                            "bulkUpdate": [Function],
+                                            "handleRequestError": [Function],
+                                            "hasProjectBeenRenamed": [Function],
+                                          },
+                                          "errors": Object {},
+                                          "fieldDescriptor": Map {
+                                            "repo" => Object {
+                                              "alignRight": false,
+                                              "allowEmpty": false,
+                                              "async": true,
+                                              "autoload": true,
+                                              "cache": false,
+                                              "children": [Function],
+                                              "choices": Array [
+                                                Array [
+                                                  "scefali/test",
+                                                  "test",
                                                 ],
-                                              }
-                                            }
-                                            name="repo"
-                                          >
-                                            <Observer>
-                                              <ControlState
-                                                error={false}
-                                                isSaved={null}
-                                                isSaving={null}
-                                              />
-                                            </Observer>
-                                          </FormFieldControlState>
-                                        </div>
-                                      </FieldControlState>
-                                    </div>
-                                  </FieldControlWrapper>
-                                  <Observer />
-                                </div>
-                              </FieldControlErrorWrapper>
-                            </FieldControl>
+                                                Array [
+                                                  "scefali/ZeldaBazaar",
+                                                  "ZeldaBazaar",
+                                                ],
+                                              ],
+                                              "className": undefined,
+                                              "default": "scefali/test",
+                                              "disabled": false,
+                                              "escapeMarkup": true,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "formatMessageValue": [Function],
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "GitHub Repository",
+                                              "loadOptions": [Function],
+                                              "name": "repo",
+                                              "onBlurResetsInput": false,
+                                              "onCloseResetsInput": false,
+                                              "onSelectResetsInput": false,
+                                              "placeholder": "--",
+                                              "required": true,
+                                              "small": false,
+                                              "stacked": true,
+                                              "type": "select",
+                                              "updatesForm": true,
+                                              "url": "/search",
+                                            },
+                                            "externalIssue" => Object {
+                                              "alignRight": false,
+                                              "allowEmpty": false,
+                                              "async": true,
+                                              "autoload": true,
+                                              "cache": false,
+                                              "children": [Function],
+                                              "choices": Array [],
+                                              "className": undefined,
+                                              "default": "",
+                                              "disabled": false,
+                                              "escapeMarkup": true,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "formatMessageValue": [Function],
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "Issue",
+                                              "loadOptions": [Function],
+                                              "name": "externalIssue",
+                                              "onBlurResetsInput": false,
+                                              "onCloseResetsInput": false,
+                                              "onSelectResetsInput": false,
+                                              "placeholder": "--",
+                                              "required": true,
+                                              "small": false,
+                                              "stacked": true,
+                                              "type": "select",
+                                              "url": "/search",
+                                            },
+                                            "comment" => Object {
+                                              "children": [Function],
+                                              "className": undefined,
+                                              "default": "Default Value",
+                                              "disabled": false,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "Comment",
+                                              "name": "comment",
+                                              "required": false,
+                                              "stacked": true,
+                                              "type": "textarea",
+                                            },
+                                          },
+                                          "fieldState": Object {},
+                                          "fields": Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          },
+                                          "formErrors": undefined,
+                                          "formState": undefined,
+                                          "initialData": Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          },
+                                          "options": Object {
+                                            "allowUndo": false,
+                                            "apiEndpoint": "/groups/1/integrations/1/",
+                                            "apiMethod": "PUT",
+                                            "onFieldChange": [Function],
+                                            "onSubmitError": undefined,
+                                            "onSubmitSuccess": [Function],
+                                            "resetOnError": undefined,
+                                            "saveOnBlur": false,
+                                          },
+                                          "snapshots": Array [
+                                            Map {
+                                              "repo" => "scefali/test",
+                                              "externalIssue" => "",
+                                              "comment" => "Default Value",
+                                            },
+                                          ],
+                                        }
+                                      }
+                                      name="repo"
+                                    >
+                                      <Observer>
+                                        <ControlState
+                                          error={false}
+                                          isSaved={null}
+                                          isSaving={null}
+                                        />
+                                      </Observer>
+                                    </FormFieldControlState>
+                                  </div>
+                                </FieldControlState>
+                              </div>
+                            </FieldControlWrapper>
+                            <Observer />
                           </div>
-                        </Base>
-                      </Flex>
-                    </Component>
+                        </FieldControlErrorWrapper>
+                      </FieldControl>
+                    </div>
                   </FieldWrapper>
                 </Field>
               </FormField>
@@ -1499,221 +1486,345 @@ exports[`ExternalIssueForm link renders 1`] = `
                     inline={false}
                     stacked={true}
                   >
-                    <Component
-                      className="css-1743ds7-FieldWrapper-getPadding-inlineStyle etqqcs20"
+                    <div
+                      className="css-4bhbmi-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
                     >
-                      <Flex
-                        className="css-1743ds7-FieldWrapper-getPadding-inlineStyle etqqcs20"
+                      <FieldDescription
+                        htmlFor="externalIssue"
+                        inline={false}
                       >
-                        <Base
-                          className="etqqcs20 css-1i61chh-FieldWrapper-getPadding-inlineStyle"
+                        <label
+                          className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
+                          htmlFor="externalIssue"
                         >
-                          <div
-                            className="etqqcs20 css-1i61chh-FieldWrapper-getPadding-inlineStyle"
-                            is={null}
+                          <FieldLabel
+                            disabled={false}
                           >
-                            <FieldDescription
-                              htmlFor="externalIssue"
-                              inline={false}
+                            <div
+                              className="css-qzvhly-FieldLabel e16ushrl0"
                             >
-                              <label
-                                className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
-                                htmlFor="externalIssue"
-                              >
-                                <FieldLabel
-                                  disabled={false}
-                                >
-                                  <div
-                                    className="css-qzvhly-FieldLabel e16ushrl0"
-                                  >
-                                    Issue
-                                     
-                                    <FieldRequiredBadge>
-                                      <div
-                                        className="css-x360nj-FieldRequiredBadge e1uclnuk0"
-                                      />
-                                    </FieldRequiredBadge>
-                                  </div>
-                                </FieldLabel>
-                              </label>
-                            </FieldDescription>
-                            <FieldControl
-                              alignRight={false}
-                              controlState={
-                                <FormFieldControlState
-                                  model={
-                                    FormModel {
-                                      "api": Client {
-                                        "_chain": [Function],
-                                        "_wrapRequest": [Function],
-                                        "bulkUpdate": [Function],
-                                        "handleRequestError": [Function],
-                                        "hasProjectBeenRenamed": [Function],
-                                      },
-                                      "errors": Object {},
-                                      "fieldDescriptor": Map {
-                                        "repo" => Object {
-                                          "alignRight": false,
-                                          "allowEmpty": false,
-                                          "async": true,
-                                          "autoload": true,
-                                          "cache": false,
-                                          "children": [Function],
-                                          "choices": Array [
-                                            Array [
-                                              "scefali/test",
-                                              "test",
-                                            ],
-                                            Array [
-                                              "scefali/ZeldaBazaar",
-                                              "ZeldaBazaar",
-                                            ],
-                                          ],
-                                          "className": undefined,
-                                          "default": "scefali/test",
-                                          "disabled": false,
-                                          "escapeMarkup": true,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "formatMessageValue": [Function],
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "GitHub Repository",
-                                          "loadOptions": [Function],
-                                          "name": "repo",
-                                          "onBlurResetsInput": false,
-                                          "onCloseResetsInput": false,
-                                          "onSelectResetsInput": false,
-                                          "placeholder": "--",
-                                          "required": true,
-                                          "small": false,
-                                          "stacked": true,
-                                          "type": "select",
-                                          "updatesForm": true,
-                                          "url": "/search",
-                                        },
-                                        "externalIssue" => Object {
-                                          "alignRight": false,
-                                          "allowEmpty": false,
-                                          "async": true,
-                                          "autoload": true,
-                                          "cache": false,
-                                          "children": [Function],
-                                          "choices": Array [],
-                                          "className": undefined,
-                                          "default": "",
-                                          "disabled": false,
-                                          "escapeMarkup": true,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "formatMessageValue": [Function],
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "Issue",
-                                          "loadOptions": [Function],
-                                          "name": "externalIssue",
-                                          "onBlurResetsInput": false,
-                                          "onCloseResetsInput": false,
-                                          "onSelectResetsInput": false,
-                                          "placeholder": "--",
-                                          "required": true,
-                                          "small": false,
-                                          "stacked": true,
-                                          "type": "select",
-                                          "url": "/search",
-                                        },
-                                        "comment" => Object {
-                                          "children": [Function],
-                                          "className": undefined,
-                                          "default": "Default Value",
-                                          "disabled": false,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "Comment",
-                                          "name": "comment",
-                                          "required": false,
-                                          "stacked": true,
-                                          "type": "textarea",
-                                        },
-                                      },
-                                      "fieldState": Object {},
-                                      "fields": Object {
-                                        "comment": "Default Value",
-                                        "externalIssue": "",
-                                        "repo": "scefali/test",
-                                      },
-                                      "formErrors": undefined,
-                                      "formState": undefined,
-                                      "initialData": Object {
-                                        "comment": "Default Value",
-                                        "externalIssue": "",
-                                        "repo": "scefali/test",
-                                      },
-                                      "options": Object {
-                                        "allowUndo": false,
-                                        "apiEndpoint": "/groups/1/integrations/1/",
-                                        "apiMethod": "PUT",
-                                        "onFieldChange": [Function],
-                                        "onSubmitError": undefined,
-                                        "onSubmitSuccess": [Function],
-                                        "resetOnError": undefined,
-                                        "saveOnBlur": false,
-                                      },
-                                      "snapshots": Array [
-                                        Map {
-                                          "repo" => "scefali/test",
-                                          "externalIssue" => "",
-                                          "comment" => "Default Value",
-                                        },
-                                      ],
-                                    }
-                                  }
-                                  name="externalIssue"
+                              Issue
+                               
+                              <FieldRequiredBadge>
+                                <div
+                                  className="css-x360nj-FieldRequiredBadge e1uclnuk0"
                                 />
+                              </FieldRequiredBadge>
+                            </div>
+                          </FieldLabel>
+                        </label>
+                      </FieldDescription>
+                      <FieldControl
+                        alignRight={false}
+                        controlState={
+                          <FormFieldControlState
+                            model={
+                              FormModel {
+                                "api": Client {
+                                  "_chain": [Function],
+                                  "_wrapRequest": [Function],
+                                  "bulkUpdate": [Function],
+                                  "handleRequestError": [Function],
+                                  "hasProjectBeenRenamed": [Function],
+                                },
+                                "errors": Object {},
+                                "fieldDescriptor": Map {
+                                  "repo" => Object {
+                                    "alignRight": false,
+                                    "allowEmpty": false,
+                                    "async": true,
+                                    "autoload": true,
+                                    "cache": false,
+                                    "children": [Function],
+                                    "choices": Array [
+                                      Array [
+                                        "scefali/test",
+                                        "test",
+                                      ],
+                                      Array [
+                                        "scefali/ZeldaBazaar",
+                                        "ZeldaBazaar",
+                                      ],
+                                    ],
+                                    "className": undefined,
+                                    "default": "scefali/test",
+                                    "disabled": false,
+                                    "escapeMarkup": true,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "formatMessageValue": [Function],
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "GitHub Repository",
+                                    "loadOptions": [Function],
+                                    "name": "repo",
+                                    "onBlurResetsInput": false,
+                                    "onCloseResetsInput": false,
+                                    "onSelectResetsInput": false,
+                                    "placeholder": "--",
+                                    "required": true,
+                                    "small": false,
+                                    "stacked": true,
+                                    "type": "select",
+                                    "updatesForm": true,
+                                    "url": "/search",
+                                  },
+                                  "externalIssue" => Object {
+                                    "alignRight": false,
+                                    "allowEmpty": false,
+                                    "async": true,
+                                    "autoload": true,
+                                    "cache": false,
+                                    "children": [Function],
+                                    "choices": Array [],
+                                    "className": undefined,
+                                    "default": "",
+                                    "disabled": false,
+                                    "escapeMarkup": true,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "formatMessageValue": [Function],
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "Issue",
+                                    "loadOptions": [Function],
+                                    "name": "externalIssue",
+                                    "onBlurResetsInput": false,
+                                    "onCloseResetsInput": false,
+                                    "onSelectResetsInput": false,
+                                    "placeholder": "--",
+                                    "required": true,
+                                    "small": false,
+                                    "stacked": true,
+                                    "type": "select",
+                                    "url": "/search",
+                                  },
+                                  "comment" => Object {
+                                    "children": [Function],
+                                    "className": undefined,
+                                    "default": "Default Value",
+                                    "disabled": false,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "Comment",
+                                    "name": "comment",
+                                    "required": false,
+                                    "stacked": true,
+                                    "type": "textarea",
+                                  },
+                                },
+                                "fieldState": Object {},
+                                "fields": Object {
+                                  "comment": "Default Value",
+                                  "externalIssue": "",
+                                  "repo": "scefali/test",
+                                },
+                                "formErrors": undefined,
+                                "formState": undefined,
+                                "initialData": Object {
+                                  "comment": "Default Value",
+                                  "externalIssue": "",
+                                  "repo": "scefali/test",
+                                },
+                                "options": Object {
+                                  "allowUndo": false,
+                                  "apiEndpoint": "/groups/1/integrations/1/",
+                                  "apiMethod": "PUT",
+                                  "onFieldChange": [Function],
+                                  "onSubmitError": undefined,
+                                  "onSubmitSuccess": [Function],
+                                  "resetOnError": undefined,
+                                  "saveOnBlur": false,
+                                },
+                                "snapshots": Array [
+                                  Map {
+                                    "repo" => "scefali/test",
+                                    "externalIssue" => "",
+                                    "comment" => "Default Value",
+                                  },
+                                ],
                               }
-                              disabled={false}
-                              errorState={
-                                <Observer>
-                                  [Function]
-                                </Observer>
-                              }
-                              flexibleControlStateSize={true}
-                              inline={false}
-                            >
-                              <FieldControlErrorWrapper
-                                inline={false}
+                            }
+                            name="externalIssue"
+                          />
+                        }
+                        disabled={false}
+                        errorState={
+                          <Observer>
+                            [Function]
+                          </Observer>
+                        }
+                        flexibleControlStateSize={true}
+                        inline={false}
+                      >
+                        <FieldControlErrorWrapper
+                          inline={false}
+                        >
+                          <div
+                            className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
+                          >
+                            <FieldControlWrapper>
+                              <div
+                                className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                               >
-                                <div
-                                  className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
+                                <FieldControlStyled
+                                  alignRight={false}
                                 >
-                                  <FieldControlWrapper>
-                                    <div
-                                      className="css-1muvdry-FieldControlWrapper e12jpfuq2"
-                                    >
-                                      <FieldControlStyled
+                                  <div
+                                    className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                                  >
+                                    <Observer>
+                                      <SelectControl
                                         alignRight={false}
+                                        allowEmpty={false}
+                                        async={true}
+                                        autoload={true}
+                                        cache={false}
+                                        choices={Array []}
+                                        clearable={false}
+                                        default=""
+                                        disabled={false}
+                                        error={false}
+                                        escapeMarkup={true}
+                                        field={[Function]}
+                                        formatMessageValue={[Function]}
+                                        height={36}
+                                        id="externalIssue"
+                                        initialData={
+                                          Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          }
+                                        }
+                                        inline={false}
+                                        innerRef={[Function]}
+                                        label="Issue"
+                                        loadOptions={[Function]}
+                                        multiple={false}
+                                        name="externalIssue"
+                                        onBlurResetsInput={false}
+                                        onChange={[Function]}
+                                        onCloseResetsInput={false}
+                                        onKeyDown={[Function]}
+                                        onSelectResetsInput={false}
+                                        options={Array []}
+                                        placeholder="--"
+                                        small={false}
+                                        stacked={true}
+                                        type="select"
+                                        url="/search"
+                                        value=""
                                       >
-                                        <div
-                                          className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
+                                        <StyledSelect
+                                          alignRight={false}
+                                          allowEmpty={false}
+                                          arrowRenderer={[Function]}
+                                          async={true}
+                                          autoload={true}
+                                          backspaceRemoves={false}
+                                          cache={false}
+                                          clearable={false}
+                                          default=""
+                                          deleteRemoves={false}
+                                          disabled={false}
+                                          error={false}
+                                          escapeMarkup={true}
+                                          field={[Function]}
+                                          formatMessageValue={[Function]}
+                                          height={36}
+                                          id="externalIssue"
+                                          initialData={
+                                            Object {
+                                              "comment": "Default Value",
+                                              "externalIssue": "",
+                                              "repo": "scefali/test",
+                                            }
+                                          }
+                                          inline={false}
+                                          innerRef={[Function]}
+                                          label="Issue"
+                                          loadOptions={[Function]}
+                                          multiple={false}
+                                          name="externalIssue"
+                                          onBlurResetsInput={false}
+                                          onChange={[Function]}
+                                          onCloseResetsInput={false}
+                                          onKeyDown={[Function]}
+                                          onSelectResetsInput={false}
+                                          options={Array []}
+                                          placeholder="--"
+                                          small={false}
+                                          stacked={true}
+                                          type="select"
+                                          url="/search"
+                                          value=""
                                         >
-                                          <Observer>
-                                            <SelectControl
+                                          <ForwardRef(SelectPicker)
+                                            alignRight={false}
+                                            allowEmpty={false}
+                                            arrowRenderer={[Function]}
+                                            async={true}
+                                            autoload={true}
+                                            backspaceRemoves={false}
+                                            cache={false}
+                                            className="css-5srpa7-StyledSelect eho28m20"
+                                            clearable={false}
+                                            default=""
+                                            deleteRemoves={false}
+                                            disabled={false}
+                                            error={false}
+                                            escapeMarkup={true}
+                                            field={[Function]}
+                                            formatMessageValue={[Function]}
+                                            height={36}
+                                            id="externalIssue"
+                                            initialData={
+                                              Object {
+                                                "comment": "Default Value",
+                                                "externalIssue": "",
+                                                "repo": "scefali/test",
+                                              }
+                                            }
+                                            inline={false}
+                                            label="Issue"
+                                            loadOptions={[Function]}
+                                            multiple={false}
+                                            name="externalIssue"
+                                            onBlurResetsInput={false}
+                                            onChange={[Function]}
+                                            onCloseResetsInput={false}
+                                            onKeyDown={[Function]}
+                                            onSelectResetsInput={false}
+                                            options={Array []}
+                                            placeholder="--"
+                                            small={false}
+                                            stacked={true}
+                                            type="select"
+                                            url="/search"
+                                            value=""
+                                          >
+                                            <SelectPicker
                                               alignRight={false}
                                               allowEmpty={false}
+                                              arrowRenderer={[Function]}
                                               async={true}
                                               autoload={true}
+                                              backspaceRemoves={false}
                                               cache={false}
-                                              choices={Array []}
+                                              className="css-5srpa7-StyledSelect eho28m20"
                                               clearable={false}
                                               default=""
+                                              deleteRemoves={false}
                                               disabled={false}
                                               error={false}
                                               escapeMarkup={true}
                                               field={[Function]}
                                               formatMessageValue={[Function]}
+                                              forwardedRef={[Function]}
                                               height={36}
                                               id="externalIssue"
                                               initialData={
@@ -1724,7 +1835,6 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 }
                                               }
                                               inline={false}
-                                              innerRef={[Function]}
                                               label="Issue"
                                               loadOptions={[Function]}
                                               multiple={false}
@@ -1742,14 +1852,14 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               url="/search"
                                               value=""
                                             >
-                                              <StyledSelect
+                                              <Async
                                                 alignRight={false}
                                                 allowEmpty={false}
                                                 arrowRenderer={[Function]}
-                                                async={true}
                                                 autoload={true}
                                                 backspaceRemoves={false}
                                                 cache={false}
+                                                className="css-5srpa7-StyledSelect eho28m20"
                                                 clearable={false}
                                                 default=""
                                                 deleteRemoves={false}
@@ -1760,6 +1870,8 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 formatMessageValue={[Function]}
                                                 height={36}
                                                 id="externalIssue"
+                                                ignoreAccents={true}
+                                                ignoreCase={true}
                                                 initialData={
                                                   Object {
                                                     "comment": "Default Value",
@@ -1768,9 +1880,9 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                   }
                                                 }
                                                 inline={false}
-                                                innerRef={[Function]}
                                                 label="Issue"
                                                 loadOptions={[Function]}
+                                                loadingPlaceholder="Loading..."
                                                 multiple={false}
                                                 name="externalIssue"
                                                 onBlurResetsInput={false}
@@ -1780,31 +1892,42 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 onSelectResetsInput={false}
                                                 options={Array []}
                                                 placeholder="--"
+                                                searchPromptText="Type to search"
                                                 small={false}
                                                 stacked={true}
                                                 type="select"
                                                 url="/search"
                                                 value=""
                                               >
-                                                <ForwardRef(SelectPicker)
+                                                <Select
                                                   alignRight={false}
                                                   allowEmpty={false}
                                                   arrowRenderer={[Function]}
-                                                  async={true}
                                                   autoload={true}
+                                                  autosize={true}
                                                   backspaceRemoves={false}
+                                                  backspaceToRemoveMessage="Press backspace to remove {label}"
                                                   cache={false}
                                                   className="css-5srpa7-StyledSelect eho28m20"
+                                                  clearAllText="Clear all"
+                                                  clearRenderer={[Function]}
+                                                  clearValueText="Clear value"
                                                   clearable={false}
+                                                  closeOnSelect={true}
                                                   default=""
                                                   deleteRemoves={false}
+                                                  delimiter=","
                                                   disabled={false}
                                                   error={false}
+                                                  escapeClearsValue={true}
                                                   escapeMarkup={true}
                                                   field={[Function]}
+                                                  filterOptions={[Function]}
                                                   formatMessageValue={[Function]}
                                                   height={36}
                                                   id="externalIssue"
+                                                  ignoreAccents={true}
+                                                  ignoreCase={true}
                                                   initialData={
                                                     Object {
                                                       "comment": "Default Value",
@@ -1813,460 +1936,311 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                     }
                                                   }
                                                   inline={false}
+                                                  inputProps={Object {}}
+                                                  isLoading={true}
+                                                  joinValues={false}
                                                   label="Issue"
+                                                  labelKey="label"
                                                   loadOptions={[Function]}
+                                                  loadingPlaceholder="Loading..."
+                                                  matchPos="any"
+                                                  matchProp="any"
+                                                  menuBuffer={0}
+                                                  menuRenderer={[Function]}
+                                                  multi={false}
                                                   multiple={false}
                                                   name="externalIssue"
+                                                  noResultsText="Loading..."
                                                   onBlurResetsInput={false}
                                                   onChange={[Function]}
                                                   onCloseResetsInput={false}
+                                                  onInputChange={[Function]}
                                                   onKeyDown={[Function]}
                                                   onSelectResetsInput={false}
+                                                  openOnClick={true}
+                                                  optionComponent={[Function]}
                                                   options={Array []}
-                                                  placeholder="--"
+                                                  pageSize={5}
+                                                  placeholder="Loading..."
+                                                  removeSelected={true}
+                                                  required={false}
+                                                  rtl={false}
+                                                  scrollMenuIntoView={true}
+                                                  searchPromptText="Type to search"
+                                                  searchable={true}
+                                                  simpleValue={false}
                                                   small={false}
                                                   stacked={true}
+                                                  tabSelectsValue={true}
+                                                  trimFilter={true}
                                                   type="select"
                                                   url="/search"
                                                   value=""
+                                                  valueComponent={[Function]}
+                                                  valueKey="value"
                                                 >
-                                                  <SelectPicker
-                                                    alignRight={false}
-                                                    allowEmpty={false}
-                                                    arrowRenderer={[Function]}
-                                                    async={true}
-                                                    autoload={true}
-                                                    backspaceRemoves={false}
-                                                    cache={false}
-                                                    className="css-5srpa7-StyledSelect eho28m20"
-                                                    clearable={false}
-                                                    default=""
-                                                    deleteRemoves={false}
-                                                    disabled={false}
-                                                    error={false}
-                                                    escapeMarkup={true}
-                                                    field={[Function]}
-                                                    formatMessageValue={[Function]}
-                                                    forwardedRef={[Function]}
-                                                    height={36}
-                                                    id="externalIssue"
-                                                    initialData={
-                                                      Object {
-                                                        "comment": "Default Value",
-                                                        "externalIssue": "",
-                                                        "repo": "scefali/test",
-                                                      }
-                                                    }
-                                                    inline={false}
-                                                    label="Issue"
-                                                    loadOptions={[Function]}
-                                                    multiple={false}
-                                                    name="externalIssue"
-                                                    onBlurResetsInput={false}
-                                                    onChange={[Function]}
-                                                    onCloseResetsInput={false}
-                                                    onKeyDown={[Function]}
-                                                    onSelectResetsInput={false}
-                                                    options={Array []}
-                                                    placeholder="--"
-                                                    small={false}
-                                                    stacked={true}
-                                                    type="select"
-                                                    url="/search"
-                                                    value=""
+                                                  <div
+                                                    className="Select css-5srpa7-StyledSelect eho28m20 is-loading is-searchable Select--single"
                                                   >
-                                                    <Async
-                                                      alignRight={false}
-                                                      allowEmpty={false}
-                                                      arrowRenderer={[Function]}
-                                                      autoload={true}
-                                                      backspaceRemoves={false}
-                                                      cache={false}
-                                                      className="css-5srpa7-StyledSelect eho28m20"
-                                                      clearable={false}
-                                                      default=""
-                                                      deleteRemoves={false}
-                                                      disabled={false}
-                                                      error={false}
-                                                      escapeMarkup={true}
-                                                      field={[Function]}
-                                                      formatMessageValue={[Function]}
-                                                      height={36}
-                                                      id="externalIssue"
-                                                      ignoreAccents={true}
-                                                      ignoreCase={true}
-                                                      initialData={
-                                                        Object {
-                                                          "comment": "Default Value",
-                                                          "externalIssue": "",
-                                                          "repo": "scefali/test",
-                                                        }
-                                                      }
-                                                      inline={false}
-                                                      label="Issue"
-                                                      loadOptions={[Function]}
-                                                      loadingPlaceholder="Loading..."
-                                                      multiple={false}
-                                                      name="externalIssue"
-                                                      onBlurResetsInput={false}
-                                                      onChange={[Function]}
-                                                      onCloseResetsInput={false}
+                                                    <div
+                                                      className="Select-control"
                                                       onKeyDown={[Function]}
-                                                      onSelectResetsInput={false}
-                                                      options={Array []}
-                                                      placeholder="--"
-                                                      searchPromptText="Type to search"
-                                                      small={false}
-                                                      stacked={true}
-                                                      type="select"
-                                                      url="/search"
-                                                      value=""
+                                                      onMouseDown={[Function]}
+                                                      onTouchEnd={[Function]}
+                                                      onTouchMove={[Function]}
+                                                      onTouchStart={[Function]}
                                                     >
-                                                      <Select
-                                                        alignRight={false}
-                                                        allowEmpty={false}
-                                                        arrowRenderer={[Function]}
-                                                        autoload={true}
-                                                        autosize={true}
-                                                        backspaceRemoves={false}
-                                                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                                                        cache={false}
-                                                        className="css-5srpa7-StyledSelect eho28m20"
-                                                        clearAllText="Clear all"
-                                                        clearRenderer={[Function]}
-                                                        clearValueText="Clear value"
-                                                        clearable={false}
-                                                        closeOnSelect={true}
-                                                        default=""
-                                                        deleteRemoves={false}
-                                                        delimiter=","
-                                                        disabled={false}
-                                                        error={false}
-                                                        escapeClearsValue={true}
-                                                        escapeMarkup={true}
-                                                        field={[Function]}
-                                                        filterOptions={[Function]}
-                                                        formatMessageValue={[Function]}
-                                                        height={36}
-                                                        id="externalIssue"
-                                                        ignoreAccents={true}
-                                                        ignoreCase={true}
-                                                        initialData={
-                                                          Object {
-                                                            "comment": "Default Value",
-                                                            "externalIssue": "",
-                                                            "repo": "scefali/test",
-                                                          }
-                                                        }
-                                                        inline={false}
-                                                        inputProps={Object {}}
-                                                        isLoading={true}
-                                                        joinValues={false}
-                                                        label="Issue"
-                                                        labelKey="label"
-                                                        loadOptions={[Function]}
-                                                        loadingPlaceholder="Loading..."
-                                                        matchPos="any"
-                                                        matchProp="any"
-                                                        menuBuffer={0}
-                                                        menuRenderer={[Function]}
-                                                        multi={false}
-                                                        multiple={false}
-                                                        name="externalIssue"
-                                                        noResultsText="Loading..."
-                                                        onBlurResetsInput={false}
-                                                        onChange={[Function]}
-                                                        onCloseResetsInput={false}
-                                                        onInputChange={[Function]}
-                                                        onKeyDown={[Function]}
-                                                        onSelectResetsInput={false}
-                                                        openOnClick={true}
-                                                        optionComponent={[Function]}
-                                                        options={Array []}
-                                                        pageSize={5}
-                                                        placeholder="Loading..."
-                                                        removeSelected={true}
-                                                        required={false}
-                                                        rtl={false}
-                                                        scrollMenuIntoView={true}
-                                                        searchPromptText="Type to search"
-                                                        searchable={true}
-                                                        simpleValue={false}
-                                                        small={false}
-                                                        stacked={true}
-                                                        tabSelectsValue={true}
-                                                        trimFilter={true}
-                                                        type="select"
-                                                        url="/search"
-                                                        value=""
-                                                        valueComponent={[Function]}
-                                                        valueKey="value"
+                                                      <div
+                                                        className="Select-multi-value-wrapper"
+                                                        id="react-select-3--value"
                                                       >
                                                         <div
-                                                          className="Select css-5srpa7-StyledSelect eho28m20 is-loading is-searchable Select--single"
+                                                          className="Select-placeholder"
+                                                        >
+                                                          Loading...
+                                                        </div>
+                                                        <AutosizeInput
+                                                          aria-activedescendant="react-select-3--value"
+                                                          aria-expanded="false"
+                                                          aria-haspopup="false"
+                                                          aria-owns=""
+                                                          className="Select-input"
+                                                          id="externalIssue"
+                                                          injectStyles={true}
+                                                          minWidth="5"
+                                                          onBlur={[Function]}
+                                                          onChange={[Function]}
+                                                          onFocus={[Function]}
+                                                          required={false}
+                                                          role="combobox"
+                                                          value=""
                                                         >
                                                           <div
-                                                            className="Select-control"
-                                                            onKeyDown={[Function]}
-                                                            onMouseDown={[Function]}
-                                                            onTouchEnd={[Function]}
-                                                            onTouchMove={[Function]}
-                                                            onTouchStart={[Function]}
+                                                            className="Select-input"
+                                                            style={
+                                                              Object {
+                                                                "display": "inline-block",
+                                                              }
+                                                            }
                                                           >
+                                                            <input
+                                                              aria-activedescendant="react-select-3--value"
+                                                              aria-expanded="false"
+                                                              aria-haspopup="false"
+                                                              aria-owns=""
+                                                              id="externalIssue"
+                                                              onBlur={[Function]}
+                                                              onChange={[Function]}
+                                                              onFocus={[Function]}
+                                                              required={false}
+                                                              role="combobox"
+                                                              style={
+                                                                Object {
+                                                                  "boxSizing": "content-box",
+                                                                  "width": "5px",
+                                                                }
+                                                              }
+                                                              value=""
+                                                            />
                                                             <div
-                                                              className="Select-multi-value-wrapper"
-                                                              id="react-select-3--value"
-                                                            >
-                                                              <div
-                                                                className="Select-placeholder"
-                                                              >
-                                                                Loading...
-                                                              </div>
-                                                              <AutosizeInput
-                                                                aria-activedescendant="react-select-3--value"
-                                                                aria-expanded="false"
-                                                                aria-haspopup="false"
-                                                                aria-owns=""
-                                                                className="Select-input"
-                                                                id="externalIssue"
-                                                                injectStyles={true}
-                                                                minWidth="5"
-                                                                onBlur={[Function]}
-                                                                onChange={[Function]}
-                                                                onFocus={[Function]}
-                                                                required={false}
-                                                                role="combobox"
-                                                                value=""
-                                                              >
-                                                                <div
-                                                                  className="Select-input"
-                                                                  style={
-                                                                    Object {
-                                                                      "display": "inline-block",
-                                                                    }
-                                                                  }
-                                                                >
-                                                                  <input
-                                                                    aria-activedescendant="react-select-3--value"
-                                                                    aria-expanded="false"
-                                                                    aria-haspopup="false"
-                                                                    aria-owns=""
-                                                                    id="externalIssue"
-                                                                    onBlur={[Function]}
-                                                                    onChange={[Function]}
-                                                                    onFocus={[Function]}
-                                                                    required={false}
-                                                                    role="combobox"
-                                                                    style={
-                                                                      Object {
-                                                                        "boxSizing": "content-box",
-                                                                        "width": "5px",
-                                                                      }
-                                                                    }
-                                                                    value=""
-                                                                  />
-                                                                  <div
-                                                                    style={
-                                                                      Object {
-                                                                        "height": 0,
-                                                                        "left": 0,
-                                                                        "overflow": "scroll",
-                                                                        "position": "absolute",
-                                                                        "top": 0,
-                                                                        "visibility": "hidden",
-                                                                        "whiteSpace": "pre",
-                                                                      }
-                                                                    }
-                                                                  />
-                                                                </div>
-                                                              </AutosizeInput>
-                                                            </div>
-                                                            <span
-                                                              aria-hidden="true"
-                                                              className="Select-loading-zone"
-                                                            >
-                                                              <span
-                                                                className="Select-loading"
-                                                              />
-                                                            </span>
-                                                            <span
-                                                              className="Select-arrow-zone"
-                                                              onMouseDown={[Function]}
-                                                            >
-                                                              <span
-                                                                className="icon-arrow-down"
-                                                              />
-                                                            </span>
+                                                              style={
+                                                                Object {
+                                                                  "height": 0,
+                                                                  "left": 0,
+                                                                  "overflow": "scroll",
+                                                                  "position": "absolute",
+                                                                  "top": 0,
+                                                                  "visibility": "hidden",
+                                                                  "whiteSpace": "pre",
+                                                                }
+                                                              }
+                                                            />
                                                           </div>
-                                                        </div>
-                                                      </Select>
-                                                    </Async>
-                                                  </SelectPicker>
-                                                </ForwardRef(SelectPicker)>
-                                              </StyledSelect>
-                                            </SelectControl>
-                                          </Observer>
-                                        </div>
-                                      </FieldControlStyled>
-                                      <FieldControlState
-                                        flexibleControlStateSize={true}
-                                      >
-                                        <div
-                                          className="css-18vhbhh-FieldControlState ep9s0su0"
-                                        >
-                                          <FormFieldControlState
-                                            model={
-                                              FormModel {
-                                                "api": Client {
-                                                  "_chain": [Function],
-                                                  "_wrapRequest": [Function],
-                                                  "bulkUpdate": [Function],
-                                                  "handleRequestError": [Function],
-                                                  "hasProjectBeenRenamed": [Function],
-                                                },
-                                                "errors": Object {},
-                                                "fieldDescriptor": Map {
-                                                  "repo" => Object {
-                                                    "alignRight": false,
-                                                    "allowEmpty": false,
-                                                    "async": true,
-                                                    "autoload": true,
-                                                    "cache": false,
-                                                    "children": [Function],
-                                                    "choices": Array [
-                                                      Array [
-                                                        "scefali/test",
-                                                        "test",
-                                                      ],
-                                                      Array [
-                                                        "scefali/ZeldaBazaar",
-                                                        "ZeldaBazaar",
-                                                      ],
-                                                    ],
-                                                    "className": undefined,
-                                                    "default": "scefali/test",
-                                                    "disabled": false,
-                                                    "escapeMarkup": true,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "formatMessageValue": [Function],
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "GitHub Repository",
-                                                    "loadOptions": [Function],
-                                                    "name": "repo",
-                                                    "onBlurResetsInput": false,
-                                                    "onCloseResetsInput": false,
-                                                    "onSelectResetsInput": false,
-                                                    "placeholder": "--",
-                                                    "required": true,
-                                                    "small": false,
-                                                    "stacked": true,
-                                                    "type": "select",
-                                                    "updatesForm": true,
-                                                    "url": "/search",
-                                                  },
-                                                  "externalIssue" => Object {
-                                                    "alignRight": false,
-                                                    "allowEmpty": false,
-                                                    "async": true,
-                                                    "autoload": true,
-                                                    "cache": false,
-                                                    "children": [Function],
-                                                    "choices": Array [],
-                                                    "className": undefined,
-                                                    "default": "",
-                                                    "disabled": false,
-                                                    "escapeMarkup": true,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "formatMessageValue": [Function],
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "Issue",
-                                                    "loadOptions": [Function],
-                                                    "name": "externalIssue",
-                                                    "onBlurResetsInput": false,
-                                                    "onCloseResetsInput": false,
-                                                    "onSelectResetsInput": false,
-                                                    "placeholder": "--",
-                                                    "required": true,
-                                                    "small": false,
-                                                    "stacked": true,
-                                                    "type": "select",
-                                                    "url": "/search",
-                                                  },
-                                                  "comment" => Object {
-                                                    "children": [Function],
-                                                    "className": undefined,
-                                                    "default": "Default Value",
-                                                    "disabled": false,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "Comment",
-                                                    "name": "comment",
-                                                    "required": false,
-                                                    "stacked": true,
-                                                    "type": "textarea",
-                                                  },
-                                                },
-                                                "fieldState": Object {},
-                                                "fields": Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                },
-                                                "formErrors": undefined,
-                                                "formState": undefined,
-                                                "initialData": Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                },
-                                                "options": Object {
-                                                  "allowUndo": false,
-                                                  "apiEndpoint": "/groups/1/integrations/1/",
-                                                  "apiMethod": "PUT",
-                                                  "onFieldChange": [Function],
-                                                  "onSubmitError": undefined,
-                                                  "onSubmitSuccess": [Function],
-                                                  "resetOnError": undefined,
-                                                  "saveOnBlur": false,
-                                                },
-                                                "snapshots": Array [
-                                                  Map {
-                                                    "repo" => "scefali/test",
-                                                    "externalIssue" => "",
-                                                    "comment" => "Default Value",
-                                                  },
+                                                        </AutosizeInput>
+                                                      </div>
+                                                      <span
+                                                        aria-hidden="true"
+                                                        className="Select-loading-zone"
+                                                      >
+                                                        <span
+                                                          className="Select-loading"
+                                                        />
+                                                      </span>
+                                                      <span
+                                                        className="Select-arrow-zone"
+                                                        onMouseDown={[Function]}
+                                                      >
+                                                        <span
+                                                          className="icon-arrow-down"
+                                                        />
+                                                      </span>
+                                                    </div>
+                                                  </div>
+                                                </Select>
+                                              </Async>
+                                            </SelectPicker>
+                                          </ForwardRef(SelectPicker)>
+                                        </StyledSelect>
+                                      </SelectControl>
+                                    </Observer>
+                                  </div>
+                                </FieldControlStyled>
+                                <FieldControlState
+                                  flexibleControlStateSize={true}
+                                >
+                                  <div
+                                    className="css-18vhbhh-FieldControlState ep9s0su0"
+                                  >
+                                    <FormFieldControlState
+                                      model={
+                                        FormModel {
+                                          "api": Client {
+                                            "_chain": [Function],
+                                            "_wrapRequest": [Function],
+                                            "bulkUpdate": [Function],
+                                            "handleRequestError": [Function],
+                                            "hasProjectBeenRenamed": [Function],
+                                          },
+                                          "errors": Object {},
+                                          "fieldDescriptor": Map {
+                                            "repo" => Object {
+                                              "alignRight": false,
+                                              "allowEmpty": false,
+                                              "async": true,
+                                              "autoload": true,
+                                              "cache": false,
+                                              "children": [Function],
+                                              "choices": Array [
+                                                Array [
+                                                  "scefali/test",
+                                                  "test",
                                                 ],
-                                              }
-                                            }
-                                            name="externalIssue"
-                                          >
-                                            <Observer>
-                                              <ControlState
-                                                error={false}
-                                                isSaved={null}
-                                                isSaving={null}
-                                              />
-                                            </Observer>
-                                          </FormFieldControlState>
-                                        </div>
-                                      </FieldControlState>
-                                    </div>
-                                  </FieldControlWrapper>
-                                  <Observer />
-                                </div>
-                              </FieldControlErrorWrapper>
-                            </FieldControl>
+                                                Array [
+                                                  "scefali/ZeldaBazaar",
+                                                  "ZeldaBazaar",
+                                                ],
+                                              ],
+                                              "className": undefined,
+                                              "default": "scefali/test",
+                                              "disabled": false,
+                                              "escapeMarkup": true,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "formatMessageValue": [Function],
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "GitHub Repository",
+                                              "loadOptions": [Function],
+                                              "name": "repo",
+                                              "onBlurResetsInput": false,
+                                              "onCloseResetsInput": false,
+                                              "onSelectResetsInput": false,
+                                              "placeholder": "--",
+                                              "required": true,
+                                              "small": false,
+                                              "stacked": true,
+                                              "type": "select",
+                                              "updatesForm": true,
+                                              "url": "/search",
+                                            },
+                                            "externalIssue" => Object {
+                                              "alignRight": false,
+                                              "allowEmpty": false,
+                                              "async": true,
+                                              "autoload": true,
+                                              "cache": false,
+                                              "children": [Function],
+                                              "choices": Array [],
+                                              "className": undefined,
+                                              "default": "",
+                                              "disabled": false,
+                                              "escapeMarkup": true,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "formatMessageValue": [Function],
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "Issue",
+                                              "loadOptions": [Function],
+                                              "name": "externalIssue",
+                                              "onBlurResetsInput": false,
+                                              "onCloseResetsInput": false,
+                                              "onSelectResetsInput": false,
+                                              "placeholder": "--",
+                                              "required": true,
+                                              "small": false,
+                                              "stacked": true,
+                                              "type": "select",
+                                              "url": "/search",
+                                            },
+                                            "comment" => Object {
+                                              "children": [Function],
+                                              "className": undefined,
+                                              "default": "Default Value",
+                                              "disabled": false,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "Comment",
+                                              "name": "comment",
+                                              "required": false,
+                                              "stacked": true,
+                                              "type": "textarea",
+                                            },
+                                          },
+                                          "fieldState": Object {},
+                                          "fields": Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          },
+                                          "formErrors": undefined,
+                                          "formState": undefined,
+                                          "initialData": Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          },
+                                          "options": Object {
+                                            "allowUndo": false,
+                                            "apiEndpoint": "/groups/1/integrations/1/",
+                                            "apiMethod": "PUT",
+                                            "onFieldChange": [Function],
+                                            "onSubmitError": undefined,
+                                            "onSubmitSuccess": [Function],
+                                            "resetOnError": undefined,
+                                            "saveOnBlur": false,
+                                          },
+                                          "snapshots": Array [
+                                            Map {
+                                              "repo" => "scefali/test",
+                                              "externalIssue" => "",
+                                              "comment" => "Default Value",
+                                            },
+                                          ],
+                                        }
+                                      }
+                                      name="externalIssue"
+                                    >
+                                      <Observer>
+                                        <ControlState
+                                          error={false}
+                                          isSaved={null}
+                                          isSaving={null}
+                                        />
+                                      </Observer>
+                                    </FormFieldControlState>
+                                  </div>
+                                </FieldControlState>
+                              </div>
+                            </FieldControlWrapper>
+                            <Observer />
                           </div>
-                        </Base>
-                      </Flex>
-                    </Component>
+                        </FieldControlErrorWrapper>
+                      </FieldControl>
+                    </div>
                   </FieldWrapper>
                 </Field>
               </FormField>
@@ -2350,427 +2324,414 @@ exports[`ExternalIssueForm link renders 1`] = `
                     inline={false}
                     stacked={true}
                   >
-                    <Component
-                      className="css-1743ds7-FieldWrapper-getPadding-inlineStyle etqqcs20"
+                    <div
+                      className="css-4bhbmi-FieldWrapper-getPadding-inlineStyle-FieldWrapper e2iyls20"
                     >
-                      <Flex
-                        className="css-1743ds7-FieldWrapper-getPadding-inlineStyle etqqcs20"
+                      <FieldDescription
+                        htmlFor="comment"
+                        inline={false}
                       >
-                        <Base
-                          className="etqqcs20 css-1i61chh-FieldWrapper-getPadding-inlineStyle"
+                        <label
+                          className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
+                          htmlFor="comment"
                         >
-                          <div
-                            className="etqqcs20 css-1i61chh-FieldWrapper-getPadding-inlineStyle"
-                            is={null}
+                          <FieldLabel
+                            disabled={false}
                           >
-                            <FieldDescription
-                              htmlFor="comment"
-                              inline={false}
+                            <div
+                              className="css-qzvhly-FieldLabel e16ushrl0"
                             >
-                              <label
-                                className="css-jq43rd-FieldDescription-inlineStyle e3z18c30"
-                                htmlFor="comment"
+                              Comment
+                               
+                            </div>
+                          </FieldLabel>
+                          <FieldHelp
+                            inline={false}
+                            stacked={true}
+                          >
+                            <div
+                              className="css-18eefdy-FieldHelp e54sr8f0"
+                            >
+                              Leave blank if you don't want to add a comment to the GitHub issue.
+                            </div>
+                          </FieldHelp>
+                        </label>
+                      </FieldDescription>
+                      <FieldControl
+                        alignRight={false}
+                        controlState={
+                          <FormFieldControlState
+                            model={
+                              FormModel {
+                                "api": Client {
+                                  "_chain": [Function],
+                                  "_wrapRequest": [Function],
+                                  "bulkUpdate": [Function],
+                                  "handleRequestError": [Function],
+                                  "hasProjectBeenRenamed": [Function],
+                                },
+                                "errors": Object {},
+                                "fieldDescriptor": Map {
+                                  "repo" => Object {
+                                    "alignRight": false,
+                                    "allowEmpty": false,
+                                    "async": true,
+                                    "autoload": true,
+                                    "cache": false,
+                                    "children": [Function],
+                                    "choices": Array [
+                                      Array [
+                                        "scefali/test",
+                                        "test",
+                                      ],
+                                      Array [
+                                        "scefali/ZeldaBazaar",
+                                        "ZeldaBazaar",
+                                      ],
+                                    ],
+                                    "className": undefined,
+                                    "default": "scefali/test",
+                                    "disabled": false,
+                                    "escapeMarkup": true,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "formatMessageValue": [Function],
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "GitHub Repository",
+                                    "loadOptions": [Function],
+                                    "name": "repo",
+                                    "onBlurResetsInput": false,
+                                    "onCloseResetsInput": false,
+                                    "onSelectResetsInput": false,
+                                    "placeholder": "--",
+                                    "required": true,
+                                    "small": false,
+                                    "stacked": true,
+                                    "type": "select",
+                                    "updatesForm": true,
+                                    "url": "/search",
+                                  },
+                                  "externalIssue" => Object {
+                                    "alignRight": false,
+                                    "allowEmpty": false,
+                                    "async": true,
+                                    "autoload": true,
+                                    "cache": false,
+                                    "children": [Function],
+                                    "choices": Array [],
+                                    "className": undefined,
+                                    "default": "",
+                                    "disabled": false,
+                                    "escapeMarkup": true,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "formatMessageValue": [Function],
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "Issue",
+                                    "loadOptions": [Function],
+                                    "name": "externalIssue",
+                                    "onBlurResetsInput": false,
+                                    "onCloseResetsInput": false,
+                                    "onSelectResetsInput": false,
+                                    "placeholder": "--",
+                                    "required": true,
+                                    "small": false,
+                                    "stacked": true,
+                                    "type": "select",
+                                    "url": "/search",
+                                  },
+                                  "comment" => Object {
+                                    "children": [Function],
+                                    "className": undefined,
+                                    "default": "Default Value",
+                                    "disabled": false,
+                                    "field": [Function],
+                                    "flexibleControlStateSize": true,
+                                    "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
+                                    "hideErrorMessage": false,
+                                    "inline": false,
+                                    "label": "Comment",
+                                    "name": "comment",
+                                    "required": false,
+                                    "stacked": true,
+                                    "type": "textarea",
+                                  },
+                                },
+                                "fieldState": Object {},
+                                "fields": Object {
+                                  "comment": "Default Value",
+                                  "externalIssue": "",
+                                  "repo": "scefali/test",
+                                },
+                                "formErrors": undefined,
+                                "formState": undefined,
+                                "initialData": Object {
+                                  "comment": "Default Value",
+                                  "externalIssue": "",
+                                  "repo": "scefali/test",
+                                },
+                                "options": Object {
+                                  "allowUndo": false,
+                                  "apiEndpoint": "/groups/1/integrations/1/",
+                                  "apiMethod": "PUT",
+                                  "onFieldChange": [Function],
+                                  "onSubmitError": undefined,
+                                  "onSubmitSuccess": [Function],
+                                  "resetOnError": undefined,
+                                  "saveOnBlur": false,
+                                },
+                                "snapshots": Array [
+                                  Map {
+                                    "repo" => "scefali/test",
+                                    "externalIssue" => "",
+                                    "comment" => "Default Value",
+                                  },
+                                ],
+                              }
+                            }
+                            name="comment"
+                          />
+                        }
+                        disabled={false}
+                        errorState={
+                          <Observer>
+                            [Function]
+                          </Observer>
+                        }
+                        flexibleControlStateSize={true}
+                        inline={false}
+                      >
+                        <FieldControlErrorWrapper
+                          inline={false}
+                        >
+                          <div
+                            className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
+                          >
+                            <FieldControlWrapper>
+                              <div
+                                className="css-1muvdry-FieldControlWrapper e12jpfuq2"
                               >
-                                <FieldLabel
-                                  disabled={false}
+                                <FieldControlStyled
+                                  alignRight={false}
                                 >
                                   <div
-                                    className="css-qzvhly-FieldLabel e16ushrl0"
+                                    className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
                                   >
-                                    Comment
-                                     
+                                    <Observer>
+                                      <TextArea
+                                        default="Default Value"
+                                        disabled={false}
+                                        error={false}
+                                        field={[Function]}
+                                        help="Leave blank if you don't want to add a comment to the GitHub issue."
+                                        id="comment"
+                                        initialData={
+                                          Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          }
+                                        }
+                                        inline={false}
+                                        innerRef={[Function]}
+                                        label="Comment"
+                                        name="comment"
+                                        onBlur={[Function]}
+                                        onChange={[Function]}
+                                        required={false}
+                                        stacked={true}
+                                        type="textarea"
+                                        value="Default Value"
+                                      >
+                                        <ForwardRef
+                                          className="css-11229su-TextArea-inputStyles e1oph3pe0"
+                                          default="Default Value"
+                                          disabled={false}
+                                          id="comment"
+                                          label="Comment"
+                                          name="comment"
+                                          onBlur={[Function]}
+                                          onChange={[Function]}
+                                          required={false}
+                                          type="textarea"
+                                          value="Default Value"
+                                        >
+                                          <textarea
+                                            className="css-11229su-TextArea-inputStyles e1oph3pe0"
+                                            default="Default Value"
+                                            disabled={false}
+                                            id="comment"
+                                            label="Comment"
+                                            name="comment"
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            required={false}
+                                            type="textarea"
+                                            value="Default Value"
+                                          />
+                                        </ForwardRef>
+                                      </TextArea>
+                                    </Observer>
                                   </div>
-                                </FieldLabel>
-                                <FieldHelp
-                                  inline={false}
-                                  stacked={true}
+                                </FieldControlStyled>
+                                <FieldControlState
+                                  flexibleControlStateSize={true}
                                 >
                                   <div
-                                    className="css-18eefdy-FieldHelp e54sr8f0"
+                                    className="css-18vhbhh-FieldControlState ep9s0su0"
                                   >
-                                    Leave blank if you don't want to add a comment to the GitHub issue.
-                                  </div>
-                                </FieldHelp>
-                              </label>
-                            </FieldDescription>
-                            <FieldControl
-                              alignRight={false}
-                              controlState={
-                                <FormFieldControlState
-                                  model={
-                                    FormModel {
-                                      "api": Client {
-                                        "_chain": [Function],
-                                        "_wrapRequest": [Function],
-                                        "bulkUpdate": [Function],
-                                        "handleRequestError": [Function],
-                                        "hasProjectBeenRenamed": [Function],
-                                      },
-                                      "errors": Object {},
-                                      "fieldDescriptor": Map {
-                                        "repo" => Object {
-                                          "alignRight": false,
-                                          "allowEmpty": false,
-                                          "async": true,
-                                          "autoload": true,
-                                          "cache": false,
-                                          "children": [Function],
-                                          "choices": Array [
-                                            Array [
-                                              "scefali/test",
-                                              "test",
-                                            ],
-                                            Array [
-                                              "scefali/ZeldaBazaar",
-                                              "ZeldaBazaar",
-                                            ],
+                                    <FormFieldControlState
+                                      model={
+                                        FormModel {
+                                          "api": Client {
+                                            "_chain": [Function],
+                                            "_wrapRequest": [Function],
+                                            "bulkUpdate": [Function],
+                                            "handleRequestError": [Function],
+                                            "hasProjectBeenRenamed": [Function],
+                                          },
+                                          "errors": Object {},
+                                          "fieldDescriptor": Map {
+                                            "repo" => Object {
+                                              "alignRight": false,
+                                              "allowEmpty": false,
+                                              "async": true,
+                                              "autoload": true,
+                                              "cache": false,
+                                              "children": [Function],
+                                              "choices": Array [
+                                                Array [
+                                                  "scefali/test",
+                                                  "test",
+                                                ],
+                                                Array [
+                                                  "scefali/ZeldaBazaar",
+                                                  "ZeldaBazaar",
+                                                ],
+                                              ],
+                                              "className": undefined,
+                                              "default": "scefali/test",
+                                              "disabled": false,
+                                              "escapeMarkup": true,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "formatMessageValue": [Function],
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "GitHub Repository",
+                                              "loadOptions": [Function],
+                                              "name": "repo",
+                                              "onBlurResetsInput": false,
+                                              "onCloseResetsInput": false,
+                                              "onSelectResetsInput": false,
+                                              "placeholder": "--",
+                                              "required": true,
+                                              "small": false,
+                                              "stacked": true,
+                                              "type": "select",
+                                              "updatesForm": true,
+                                              "url": "/search",
+                                            },
+                                            "externalIssue" => Object {
+                                              "alignRight": false,
+                                              "allowEmpty": false,
+                                              "async": true,
+                                              "autoload": true,
+                                              "cache": false,
+                                              "children": [Function],
+                                              "choices": Array [],
+                                              "className": undefined,
+                                              "default": "",
+                                              "disabled": false,
+                                              "escapeMarkup": true,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "formatMessageValue": [Function],
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "Issue",
+                                              "loadOptions": [Function],
+                                              "name": "externalIssue",
+                                              "onBlurResetsInput": false,
+                                              "onCloseResetsInput": false,
+                                              "onSelectResetsInput": false,
+                                              "placeholder": "--",
+                                              "required": true,
+                                              "small": false,
+                                              "stacked": true,
+                                              "type": "select",
+                                              "url": "/search",
+                                            },
+                                            "comment" => Object {
+                                              "children": [Function],
+                                              "className": undefined,
+                                              "default": "Default Value",
+                                              "disabled": false,
+                                              "field": [Function],
+                                              "flexibleControlStateSize": true,
+                                              "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
+                                              "hideErrorMessage": false,
+                                              "inline": false,
+                                              "label": "Comment",
+                                              "name": "comment",
+                                              "required": false,
+                                              "stacked": true,
+                                              "type": "textarea",
+                                            },
+                                          },
+                                          "fieldState": Object {},
+                                          "fields": Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          },
+                                          "formErrors": undefined,
+                                          "formState": undefined,
+                                          "initialData": Object {
+                                            "comment": "Default Value",
+                                            "externalIssue": "",
+                                            "repo": "scefali/test",
+                                          },
+                                          "options": Object {
+                                            "allowUndo": false,
+                                            "apiEndpoint": "/groups/1/integrations/1/",
+                                            "apiMethod": "PUT",
+                                            "onFieldChange": [Function],
+                                            "onSubmitError": undefined,
+                                            "onSubmitSuccess": [Function],
+                                            "resetOnError": undefined,
+                                            "saveOnBlur": false,
+                                          },
+                                          "snapshots": Array [
+                                            Map {
+                                              "repo" => "scefali/test",
+                                              "externalIssue" => "",
+                                              "comment" => "Default Value",
+                                            },
                                           ],
-                                          "className": undefined,
-                                          "default": "scefali/test",
-                                          "disabled": false,
-                                          "escapeMarkup": true,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "formatMessageValue": [Function],
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "GitHub Repository",
-                                          "loadOptions": [Function],
-                                          "name": "repo",
-                                          "onBlurResetsInput": false,
-                                          "onCloseResetsInput": false,
-                                          "onSelectResetsInput": false,
-                                          "placeholder": "--",
-                                          "required": true,
-                                          "small": false,
-                                          "stacked": true,
-                                          "type": "select",
-                                          "updatesForm": true,
-                                          "url": "/search",
-                                        },
-                                        "externalIssue" => Object {
-                                          "alignRight": false,
-                                          "allowEmpty": false,
-                                          "async": true,
-                                          "autoload": true,
-                                          "cache": false,
-                                          "children": [Function],
-                                          "choices": Array [],
-                                          "className": undefined,
-                                          "default": "",
-                                          "disabled": false,
-                                          "escapeMarkup": true,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "formatMessageValue": [Function],
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "Issue",
-                                          "loadOptions": [Function],
-                                          "name": "externalIssue",
-                                          "onBlurResetsInput": false,
-                                          "onCloseResetsInput": false,
-                                          "onSelectResetsInput": false,
-                                          "placeholder": "--",
-                                          "required": true,
-                                          "small": false,
-                                          "stacked": true,
-                                          "type": "select",
-                                          "url": "/search",
-                                        },
-                                        "comment" => Object {
-                                          "children": [Function],
-                                          "className": undefined,
-                                          "default": "Default Value",
-                                          "disabled": false,
-                                          "field": [Function],
-                                          "flexibleControlStateSize": true,
-                                          "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
-                                          "hideErrorMessage": false,
-                                          "inline": false,
-                                          "label": "Comment",
-                                          "name": "comment",
-                                          "required": false,
-                                          "stacked": true,
-                                          "type": "textarea",
-                                        },
-                                      },
-                                      "fieldState": Object {},
-                                      "fields": Object {
-                                        "comment": "Default Value",
-                                        "externalIssue": "",
-                                        "repo": "scefali/test",
-                                      },
-                                      "formErrors": undefined,
-                                      "formState": undefined,
-                                      "initialData": Object {
-                                        "comment": "Default Value",
-                                        "externalIssue": "",
-                                        "repo": "scefali/test",
-                                      },
-                                      "options": Object {
-                                        "allowUndo": false,
-                                        "apiEndpoint": "/groups/1/integrations/1/",
-                                        "apiMethod": "PUT",
-                                        "onFieldChange": [Function],
-                                        "onSubmitError": undefined,
-                                        "onSubmitSuccess": [Function],
-                                        "resetOnError": undefined,
-                                        "saveOnBlur": false,
-                                      },
-                                      "snapshots": Array [
-                                        Map {
-                                          "repo" => "scefali/test",
-                                          "externalIssue" => "",
-                                          "comment" => "Default Value",
-                                        },
-                                      ],
-                                    }
-                                  }
-                                  name="comment"
-                                />
-                              }
-                              disabled={false}
-                              errorState={
-                                <Observer>
-                                  [Function]
-                                </Observer>
-                              }
-                              flexibleControlStateSize={true}
-                              inline={false}
-                            >
-                              <FieldControlErrorWrapper
-                                inline={false}
-                              >
-                                <div
-                                  className="css-1ge7tqf-FieldControlErrorWrapper e12jpfuq0"
-                                >
-                                  <FieldControlWrapper>
-                                    <div
-                                      className="css-1muvdry-FieldControlWrapper e12jpfuq2"
+                                        }
+                                      }
+                                      name="comment"
                                     >
-                                      <FieldControlStyled
-                                        alignRight={false}
-                                      >
-                                        <div
-                                          className="css-1pkvhmy-FieldControlStyled e12jpfuq1"
-                                        >
-                                          <Observer>
-                                            <TextArea
-                                              default="Default Value"
-                                              disabled={false}
-                                              error={false}
-                                              field={[Function]}
-                                              help="Leave blank if you don't want to add a comment to the GitHub issue."
-                                              id="comment"
-                                              initialData={
-                                                Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                }
-                                              }
-                                              inline={false}
-                                              innerRef={[Function]}
-                                              label="Comment"
-                                              name="comment"
-                                              onBlur={[Function]}
-                                              onChange={[Function]}
-                                              required={false}
-                                              stacked={true}
-                                              type="textarea"
-                                              value="Default Value"
-                                            >
-                                              <ForwardRef
-                                                className="css-11229su-TextArea-inputStyles e1oph3pe0"
-                                                default="Default Value"
-                                                disabled={false}
-                                                id="comment"
-                                                label="Comment"
-                                                name="comment"
-                                                onBlur={[Function]}
-                                                onChange={[Function]}
-                                                required={false}
-                                                type="textarea"
-                                                value="Default Value"
-                                              >
-                                                <textarea
-                                                  className="css-11229su-TextArea-inputStyles e1oph3pe0"
-                                                  default="Default Value"
-                                                  disabled={false}
-                                                  id="comment"
-                                                  label="Comment"
-                                                  name="comment"
-                                                  onBlur={[Function]}
-                                                  onChange={[Function]}
-                                                  required={false}
-                                                  type="textarea"
-                                                  value="Default Value"
-                                                />
-                                              </ForwardRef>
-                                            </TextArea>
-                                          </Observer>
-                                        </div>
-                                      </FieldControlStyled>
-                                      <FieldControlState
-                                        flexibleControlStateSize={true}
-                                      >
-                                        <div
-                                          className="css-18vhbhh-FieldControlState ep9s0su0"
-                                        >
-                                          <FormFieldControlState
-                                            model={
-                                              FormModel {
-                                                "api": Client {
-                                                  "_chain": [Function],
-                                                  "_wrapRequest": [Function],
-                                                  "bulkUpdate": [Function],
-                                                  "handleRequestError": [Function],
-                                                  "hasProjectBeenRenamed": [Function],
-                                                },
-                                                "errors": Object {},
-                                                "fieldDescriptor": Map {
-                                                  "repo" => Object {
-                                                    "alignRight": false,
-                                                    "allowEmpty": false,
-                                                    "async": true,
-                                                    "autoload": true,
-                                                    "cache": false,
-                                                    "children": [Function],
-                                                    "choices": Array [
-                                                      Array [
-                                                        "scefali/test",
-                                                        "test",
-                                                      ],
-                                                      Array [
-                                                        "scefali/ZeldaBazaar",
-                                                        "ZeldaBazaar",
-                                                      ],
-                                                    ],
-                                                    "className": undefined,
-                                                    "default": "scefali/test",
-                                                    "disabled": false,
-                                                    "escapeMarkup": true,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "formatMessageValue": [Function],
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "GitHub Repository",
-                                                    "loadOptions": [Function],
-                                                    "name": "repo",
-                                                    "onBlurResetsInput": false,
-                                                    "onCloseResetsInput": false,
-                                                    "onSelectResetsInput": false,
-                                                    "placeholder": "--",
-                                                    "required": true,
-                                                    "small": false,
-                                                    "stacked": true,
-                                                    "type": "select",
-                                                    "updatesForm": true,
-                                                    "url": "/search",
-                                                  },
-                                                  "externalIssue" => Object {
-                                                    "alignRight": false,
-                                                    "allowEmpty": false,
-                                                    "async": true,
-                                                    "autoload": true,
-                                                    "cache": false,
-                                                    "children": [Function],
-                                                    "choices": Array [],
-                                                    "className": undefined,
-                                                    "default": "",
-                                                    "disabled": false,
-                                                    "escapeMarkup": true,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "formatMessageValue": [Function],
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "Issue",
-                                                    "loadOptions": [Function],
-                                                    "name": "externalIssue",
-                                                    "onBlurResetsInput": false,
-                                                    "onCloseResetsInput": false,
-                                                    "onSelectResetsInput": false,
-                                                    "placeholder": "--",
-                                                    "required": true,
-                                                    "small": false,
-                                                    "stacked": true,
-                                                    "type": "select",
-                                                    "url": "/search",
-                                                  },
-                                                  "comment" => Object {
-                                                    "children": [Function],
-                                                    "className": undefined,
-                                                    "default": "Default Value",
-                                                    "disabled": false,
-                                                    "field": [Function],
-                                                    "flexibleControlStateSize": true,
-                                                    "help": "Leave blank if you don't want to add a comment to the GitHub issue.",
-                                                    "hideErrorMessage": false,
-                                                    "inline": false,
-                                                    "label": "Comment",
-                                                    "name": "comment",
-                                                    "required": false,
-                                                    "stacked": true,
-                                                    "type": "textarea",
-                                                  },
-                                                },
-                                                "fieldState": Object {},
-                                                "fields": Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                },
-                                                "formErrors": undefined,
-                                                "formState": undefined,
-                                                "initialData": Object {
-                                                  "comment": "Default Value",
-                                                  "externalIssue": "",
-                                                  "repo": "scefali/test",
-                                                },
-                                                "options": Object {
-                                                  "allowUndo": false,
-                                                  "apiEndpoint": "/groups/1/integrations/1/",
-                                                  "apiMethod": "PUT",
-                                                  "onFieldChange": [Function],
-                                                  "onSubmitError": undefined,
-                                                  "onSubmitSuccess": [Function],
-                                                  "resetOnError": undefined,
-                                                  "saveOnBlur": false,
-                                                },
-                                                "snapshots": Array [
-                                                  Map {
-                                                    "repo" => "scefali/test",
-                                                    "externalIssue" => "",
-                                                    "comment" => "Default Value",
-                                                  },
-                                                ],
-                                              }
-                                            }
-                                            name="comment"
-                                          >
-                                            <Observer>
-                                              <ControlState
-                                                error={false}
-                                                isSaved={null}
-                                                isSaving={null}
-                                              />
-                                            </Observer>
-                                          </FormFieldControlState>
-                                        </div>
-                                      </FieldControlState>
-                                    </div>
-                                  </FieldControlWrapper>
-                                  <Observer />
-                                </div>
-                              </FieldControlErrorWrapper>
-                            </FieldControl>
+                                      <Observer>
+                                        <ControlState
+                                          error={false}
+                                          isSaved={null}
+                                          isSaving={null}
+                                        />
+                                      </Observer>
+                                    </FormFieldControlState>
+                                  </div>
+                                </FieldControlState>
+                              </div>
+                            </FieldControlWrapper>
+                            <Observer />
                           </div>
-                        </Base>
-                      </Flex>
-                    </Component>
+                        </FieldControlErrorWrapper>
+                      </FieldControl>
+                    </div>
                   </FieldWrapper>
                 </Field>
               </FormField>
