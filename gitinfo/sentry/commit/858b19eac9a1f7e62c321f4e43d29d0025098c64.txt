commit 858b19eac9a1f7e62c321f4e43d29d0025098c64
Author: Dora <dora.l.chan@gmail.com>
Date:   Tue Nov 26 08:40:47 2019 -0800

    fix(discoverv2): btn icon colors, changing related to linked and readding issue to detail page (#15829)
    
    * fixing star color and changing related to linked
    
    * adding linkedissue back in
    
    * update graph style

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 78b8b3cdce..845c6dca98 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -27,6 +27,7 @@ import Pagination from './pagination';
 import LineGraph from './lineGraph';
 import TagsTable from '../tagsTable';
 import EventInterfaces from './eventInterfaces';
+import LinkedIssue from './linkedIssue';
 import DiscoverBreadcrumb from '../breadcrumb';
 import {SectionHeading} from '../styles';
 
@@ -152,6 +153,9 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
               projectId={this.projectId}
             />
             <TagsTable tags={event.tags} />
+            {event.groupID && (
+              <LinkedIssue groupId={event.groupID} eventId={event.eventID} />
+            )}
           </Side>
         </ContentBox>
       </div>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
index a36afee7c7..3d45588a2c 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
@@ -15,7 +15,7 @@ import NavTabs from 'app/components/navTabs';
 import {objectIsEmpty, toTitleCase} from 'app/utils';
 import {Event, Organization} from 'app/types';
 
-import RelatedItems from './relatedItems';
+import LinkedEvents from './linkedEvents';
 
 const OTHER_SECTIONS = {
   contexts: EventContexts,
@@ -65,9 +65,9 @@ const ActiveTab = (props: ActiveTabProps) => {
   } else if (OTHER_SECTIONS[activeTab]) {
     const Component = OTHER_SECTIONS[activeTab];
     return <Component event={event} isShare={false} hideGuide />;
-  } else if (activeTab === 'related') {
+  } else if (activeTab === 'linked') {
     return (
-      <RelatedItems event={event} projectId={projectId} organization={organization} />
+      <LinkedEvents event={event} projectId={projectId} organization={organization} />
     );
   } else {
     /*eslint no-console:0*/
@@ -163,15 +163,15 @@ class EventInterfaces extends React.Component<
               </li>
             );
           })}
-          <li key="related" className={activeTab === 'related' ? 'active' : undefined}>
+          <li key="linked" className={activeTab === 'linked' ? 'active' : undefined}>
             <a
               href="#"
               onClick={evt => {
                 evt.preventDefault();
-                this.handleTabChange('related');
+                this.handleTabChange('linked');
               }}
             >
-              {t('Related')}
+              {t('Linked')}
             </a>
           </li>
         </NavTabs>
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
similarity index 87%
rename from src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx
rename to src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
index 2d7ca0a434..5405547ca8 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedEvents.tsx
@@ -35,10 +35,10 @@ type Props = {
 
 type State = {
   issue: Group;
-  relatedEvents: {data: DiscoverResult[]};
+  linkedEvents: {data: DiscoverResult[]};
 } & AsyncComponent['state'];
 
-class RelatedItems extends AsyncComponent<Props, State> {
+class LinkedEvents extends AsyncComponent<Props, State> {
   getEndpoints(): [string, string, any][] {
     const {event, organization} = this.props;
     const endpoints: any = [];
@@ -50,7 +50,7 @@ class RelatedItems extends AsyncComponent<Props, State> {
     const trace = event.tags.find(tag => tag.key === 'trace');
     if (trace) {
       endpoints.push([
-        'relatedEvents',
+        'linkedEvents',
         `/organizations/${organization.slug}/eventsv2/`,
         {
           query: {
@@ -72,14 +72,14 @@ class RelatedItems extends AsyncComponent<Props, State> {
     return endpoints;
   }
 
-  renderRelatedIssue() {
+  renderLinkedIssue() {
     const {event} = this.props;
     const {issue} = this.state;
     const issueUrl = `${issue.permalink}events/${event.eventID}/`;
 
     return (
       <Section>
-        <SectionHeading>{t('Related Issue')}</SectionHeading>
+        <SectionHeading>{t('Linked Issue')}</SectionHeading>
         <StyledCard>
           <StyledLink to={issueUrl} data-test-id="linked-issue">
             <StyledShortId
@@ -96,16 +96,16 @@ class RelatedItems extends AsyncComponent<Props, State> {
     );
   }
 
-  renderRelatedEvents() {
+  renderLinkedEvents() {
     const {event, organization, projects} = this.props;
-    const {relatedEvents} = this.state;
+    const {linkedEvents} = this.state;
     return (
       <Section>
-        <SectionHeading>{t('Related Trace Events')}</SectionHeading>
-        {relatedEvents.data.length < 1 ? (
-          <StyledCard>{t('No related events found.')}</StyledCard>
+        <SectionHeading>{t('Linked Trace Events')}</SectionHeading>
+        {linkedEvents.data.length < 1 ? (
+          <StyledCard>{t('No linked events found.')}</StyledCard>
         ) : (
-          relatedEvents.data.map((item: DiscoverResult) => {
+          linkedEvents.data.map((item: DiscoverResult) => {
             const eventSlug = generateEventSlug(item);
             const eventUrl = {
               pathname: generateEventDetailsRoute({eventSlug, organization}),
@@ -133,8 +133,8 @@ class RelatedItems extends AsyncComponent<Props, State> {
   renderBody() {
     return (
       <React.Fragment>
-        {this.state.issue && this.renderRelatedIssue()}
-        {this.state.relatedEvents && this.renderRelatedEvents()}
+        {this.state.issue && this.renderLinkedIssue()}
+        {this.state.linkedEvents && this.renderLinkedEvents()}
       </React.Fragment>
     );
   }
@@ -184,6 +184,7 @@ const StyledDate = styled('div')`
     white-space: nowrap;
   }
 `;
+
 const StyledShortId = styled(ShortId)`
   justify-content: flex-start;
   color: ${p => p.theme.gray4};
@@ -193,4 +194,4 @@ const StyledShortId = styled(ShortId)`
   }
 `;
 
-export default withProjects(RelatedItems);
+export default withProjects(LinkedEvents);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedIssue.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedIssue.tsx
new file mode 100644
index 0000000000..3c2d93aeb0
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/linkedIssue.tsx
@@ -0,0 +1,113 @@
+import React from 'react';
+import styled from 'react-emotion';
+import PropTypes from 'prop-types';
+
+import {t} from 'app/locale';
+import AsyncComponent from 'app/components/asyncComponent';
+import GroupChart from 'app/components/stream/groupChart';
+import Link from 'app/components/links/link';
+import Placeholder from 'app/components/placeholder';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+import SeenByList from 'app/components/seenByList';
+import ShortId from 'app/components/shortId';
+import Times from 'app/components/group/times';
+import space from 'app/styles/space';
+import {Group} from 'app/types';
+import {SectionHeading} from '../styles';
+
+type Props = {
+  groupId: string;
+  eventId: string;
+};
+
+type State = {
+  group: Group;
+};
+
+class LinkedIssue extends AsyncComponent<
+  Props & AsyncComponent['props'],
+  State & AsyncComponent['state']
+> {
+  static propTypes = {
+    groupId: PropTypes.string.isRequired,
+    eventId: PropTypes.string.isRequired,
+  };
+
+  getEndpoints(): Array<[string, string]> {
+    const {groupId} = this.props;
+    const groupUrl = `/issues/${groupId}/`;
+
+    return [['group', groupUrl]];
+  }
+
+  renderLoading() {
+    return <Placeholder height="120px" bottomGutter={2} />;
+  }
+
+  renderBody() {
+    const {eventId} = this.props;
+    const {group} = this.state;
+    const issueUrl = `${group.permalink}events/${eventId}/`;
+
+    return (
+      <div>
+        <SectionHeading>{t('Event Issue')}</SectionHeading>
+        <StyledIssueCard>
+          <IssueCardHeader>
+            <StyledLink to={issueUrl} data-test-id="linked-issue">
+              <StyledShortId
+                shortId={group.shortId}
+                avatar={<ProjectBadge project={group.project} avatarSize={16} hideName />}
+              />
+            </StyledLink>
+            <StyledSeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />
+          </IssueCardHeader>
+          <IssueCardBody>
+            <GroupChart id={group.id} statsPeriod="30d" data={group} height={56} />
+          </IssueCardBody>
+          <IssueCardFooter>
+            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />
+          </IssueCardFooter>
+        </StyledIssueCard>
+      </div>
+    );
+  }
+}
+
+const StyledIssueCard = styled('div')`
+  border: 1px solid ${p => p.theme.borderLight};
+  border-radius: ${p => p.theme.borderRadius};
+`;
+
+const IssueCardHeader = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  padding: ${space(1)};
+`;
+
+const StyledLink = styled(Link)`
+  justify-content: flex-start;
+`;
+
+const IssueCardBody = styled('div')`
+  background: ${p => p.theme.offWhiteLight};
+  padding-top: ${space(1)};
+`;
+
+const StyledSeenByList = styled(SeenByList)`
+  margin: 0;
+`;
+
+const StyledShortId = styled(ShortId)`
+  font-size: ${p => p.theme.fontSizeMedium};
+  color: ${p => p.theme.gray4};
+`;
+
+const IssueCardFooter = styled('div')`
+  color: ${p => p.theme.gray2};
+  font-size: ${p => p.theme.fontSizeSmall};
+  padding: ${space(0.5)} ${space(1)};
+`;
+
+export default LinkedIssue;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx b/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx
index 99e71b78b1..7df53ce908 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/savedQuery/index.tsx
@@ -318,7 +318,7 @@ const ButtonSaveIcon = styled(InlineSvg)<{isNewQuery?: boolean}>`
   margin-top: -3px; /* Align SVG vertically to text */
   margin-right: ${space(0.75)};
 
-  color: ${p => (p.isNewQuery ? p.theme.yellow : '#C4C4C4')};
+  color: ${p => (p.isNewQuery ? p.theme.gray1 : p.theme.yellow)};
 `;
 const ButtonSaveDropDown = styled('li')`
   padding: ${space(1)};
