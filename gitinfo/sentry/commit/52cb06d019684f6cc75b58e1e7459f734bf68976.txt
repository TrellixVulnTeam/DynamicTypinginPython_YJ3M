commit 52cb06d019684f6cc75b58e1e7459f734bf68976
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Nov 4 13:25:50 2019 -0700

    ref(ui): Remove `grid-emotion` from `<ApiTokens>` (#15425)
    
    * Remove `grid-emotion`
    * Use indicator action creators
    * Use await/async

diff --git a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
index d2536502e1..23f3ad1ccb 100644
--- a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
@@ -1,19 +1,22 @@
-import {Box, Flex} from 'grid-emotion';
 import React from 'react';
 
+import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
+import {
+  addErrorMessage,
+  addLoadingMessage,
+  addSuccessMessage,
+} from 'app/actionCreators/indicator';
 import {t, tct} from 'app/locale';
 import ApiTokenRow from 'app/views/settings/account/apiTokenRow';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
-import IndicatorStore from 'app/stores/indicatorStore';
-import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 
 class ApiTokens extends AsyncView {
   getTitle() {
-    return 'API Tokens';
+    return t('API Tokens');
   }
 
   getDefaultState() {
@@ -29,29 +32,28 @@ class ApiTokens extends AsyncView {
   }
 
   handleRemoveToken = token => {
-    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+    addLoadingMessage();
     const oldTokenList = this.state.tokenList;
 
     this.setState(
       state => ({
         tokenList: state.tokenList.filter(tk => tk.token !== token.token),
       }),
-      () =>
-        this.api.request('/api-tokens/', {
-          method: 'DELETE',
-          data: {token: token.token},
-          success: data => {
-            IndicatorStore.remove(loadingIndicator);
-            IndicatorStore.addSuccess(t('Removed token'));
-          },
-          error: () => {
-            IndicatorStore.remove(loadingIndicator);
-            IndicatorStore.addError(t('Unable to remove token. Please try again.'));
-            this.setState({
-              tokenList: oldTokenList,
-            });
-          },
-        })
+      async () => {
+        try {
+          await this.api.requestPromise('/api-tokens/', {
+            method: 'DELETE',
+            data: {token: token.token},
+          });
+
+          addSuccessMessage(t('Removed token'));
+        } catch (_err) {
+          addErrorMessage(t('Unable to remove token. Please try again.'));
+          this.setState({
+            tokenList: oldTokenList,
+          });
+        }
+      }
     );
   };
 
@@ -65,7 +67,7 @@ class ApiTokens extends AsyncView {
         priority="primary"
         size="small"
         to="/settings/account/api/auth-tokens/new-token/"
-        className="ref-create-token"
+        data-test-id="create-token"
       >
         {t('Create New Token')}
       </Button>
@@ -94,13 +96,7 @@ class ApiTokens extends AsyncView {
           </small>
         </TextBlock>
         <Panel>
-          <PanelHeader disablePadding>
-            <Flex align="center">
-              <Box px={2} flex="1">
-                {t('Auth Token')}
-              </Box>
-            </Flex>
-          </PanelHeader>
+          <PanelHeader>{t('Auth Token')}</PanelHeader>
 
           <PanelBody>
             {isEmpty && (
diff --git a/tests/acceptance/test_api.py b/tests/acceptance/test_api.py
index 6ef5b52608..b2f8ad1ad5 100644
--- a/tests/acceptance/test_api.py
+++ b/tests/acceptance/test_api.py
@@ -15,7 +15,7 @@ class ApiTokensTest(AcceptanceTestCase):
         self.browser.wait_until_not(".loading")
         self.browser.snapshot("api tokens - no tokens")
 
-        self.browser.click_when_visible(".ref-create-token")
+        self.browser.click_when_visible('[data-test-id="create-token"]')
         self.browser.wait_until_not(".loading")
         self.browser.snapshot("api tokens - new token")
 
diff --git a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
index 5a2998ebbf..39d42bfc82 100644
--- a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
@@ -9,7 +9,7 @@ exports[`ApiTokens renders empty result 1`] = `
       action={
         <Button
           align="center"
-          className="ref-create-token"
+          data-test-id="create-token"
           disabled={false}
           priority="primary"
           size="small"
@@ -65,19 +65,8 @@ exports[`ApiTokens renders empty result 1`] = `
       </small>
     </TextBlock>
     <Panel>
-      <PanelHeader
-        disablePadding={true}
-      >
-        <Flex
-          align="center"
-        >
-          <Box
-            flex="1"
-            px={2}
-          >
-            Auth Token
-          </Box>
-        </Flex>
+      <PanelHeader>
+        Auth Token
       </PanelHeader>
       <PanelBody
         direction="column"
@@ -102,7 +91,7 @@ exports[`ApiTokens renders with result 1`] = `
       action={
         <Button
           align="center"
-          className="ref-create-token"
+          data-test-id="create-token"
           disabled={false}
           priority="primary"
           size="small"
@@ -158,19 +147,8 @@ exports[`ApiTokens renders with result 1`] = `
       </small>
     </TextBlock>
     <Panel>
-      <PanelHeader
-        disablePadding={true}
-      >
-        <Flex
-          align="center"
-        >
-          <Box
-            flex="1"
-            px={2}
-          >
-            Auth Token
-          </Box>
-        </Flex>
+      <PanelHeader>
+        Auth Token
       </PanelHeader>
       <PanelBody
         direction="column"
