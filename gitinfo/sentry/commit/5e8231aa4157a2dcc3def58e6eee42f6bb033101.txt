commit 5e8231aa4157a2dcc3def58e6eee42f6bb033101
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Feb 13 19:21:56 2017 +0100

    Updated to new context style

diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index 4c95f6e696..e1ba19a886 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -416,17 +416,15 @@ class IPlugin2(local, PluginConfigMixin):
         return []
 
     def get_custom_contexts(self):
-        """Return a custom dictionary of context types.
+        """Return a list of of context types.
 
         from sentry.interfaces.contexts import ContextType
 
         class MyContextType(ContextType):
-            ...
+            type = 'my_type'
 
         def get_custom_contexts(self):
-            return {
-                'my_type': MyContextType,
-            }
+            return [MyContextType]
         """
 
     def configure(self, project, request):
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index ccc4afc5b4..a90953ce18 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -44,9 +44,8 @@ def init_plugin(plugin):
     # Register contexts from plugins if necessary
     if hasattr(plugin, 'get_custom_contexts'):
         from sentry.interfaces.contexts import contexttype
-        contexts = plugin.get_custom_contexts()
-        for key, cls in six.iteritems(contexts or {}):
-            contexttype(key)(cls)
+        for cls in plugin.get_custom_contexts() or ():
+            contexttype(cls)
 
 
 def initialize_receivers():
