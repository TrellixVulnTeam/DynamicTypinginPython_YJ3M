commit fb99c9691e5e5c419564378ddbdb79578df2fe2d
Author: David Wang <davidw1339@gmail.com>
Date:   Wed Dec 11 17:55:40 2019 -0800

    feat(backend): Add additional query params to sent_first_event endpoint (#16066)
    
    The issues page does a couple operations on organization.projects (all projects) just to check for the existence of projects that have sent a first event. In order to decouple issues from organization.projects I have added some additional query params to mimic the operations that the frontend does on the list of all projects. This modified endpoint will be used instead of fetching organization.projects.

diff --git a/src/sentry/api/endpoints/organization_projects_sent_first_event.py b/src/sentry/api/endpoints/organization_projects_sent_first_event.py
index b5fa1c9626..77748b38d7 100644
--- a/src/sentry/api/endpoints/organization_projects_sent_first_event.py
+++ b/src/sentry/api/endpoints/organization_projects_sent_first_event.py
@@ -22,7 +22,17 @@ class OrganizationProjectsSentFirstEventEndpoint(OrganizationEndpoint):
         :pparam string organization_slug: the slug of the organization
                                           containing the projects to check
                                           for a first event from.
+        :qparam boolean is_member:        An optional boolean to choose to filter on
+                                          projects which the user is a member of.
+        :qparam array[string] project:    An optional list of project ids to filter
         :auth: required
         """
+        is_member = request.GET.get("is_member")
+        project_ids = set(map(int, request.GET.getlist("project")))
         queryset = Project.objects.filter(organization=organization, first_event__isnull=False)
+        if is_member:
+            queryset = queryset.filter(teams__organizationmember__user=request.user)
+        if project_ids:
+            queryset = queryset.filter(id__in=project_ids)
+
         return Response(serialize({"sentFirstEvent": queryset.count() > 0}, request.user))
diff --git a/tests/sentry/api/endpoints/test_organization_projects_sent_first_event.py b/tests/sentry/api/endpoints/test_organization_projects_sent_first_event.py
index 656b520202..095ca53027 100644
--- a/tests/sentry/api/endpoints/test_organization_projects_sent_first_event.py
+++ b/tests/sentry/api/endpoints/test_organization_projects_sent_first_event.py
@@ -49,3 +49,25 @@ class OrganizationProjectsSentFirstEventEndpointTest(APITestCase):
         assert response.status_code == 200
 
         assert response.data["sentFirstEvent"]
+
+    def test_no_first_event_in_member_projects(self):
+        self.create_project(teams=[self.team], first_event=datetime.now())
+        self.create_member(organization=self.org, user=self.foo)
+
+        self.login_as(user=self.foo)
+
+        response = self.client.get(u"{}?is_member=true".format(self.url))
+        assert response.status_code == 200
+
+        assert not response.data["sentFirstEvent"]
+
+    def test_first_event_from_project_ids(self):
+        project = self.create_project(teams=[self.team], first_event=datetime.now())
+        self.create_member(organization=self.org, user=self.foo)
+
+        self.login_as(user=self.foo)
+
+        response = self.client.get(u"{}?project={}".format(self.url, project.id))
+        assert response.status_code == 200
+
+        assert response.data["sentFirstEvent"]
