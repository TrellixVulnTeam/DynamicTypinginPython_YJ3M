commit 577b7c9dc4e240fda1a2ffc0ab8bb2f27352a713
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 1 22:34:47 2012 -0800

    Clean up the realtime implementation so it correctly sorts (and keeps sorted) all non-trending views

diff --git a/sentry/static/scripts/global.js b/sentry/static/scripts/global.js
index 72050ab19c..40278c94c4 100644
--- a/sentry/static/scripts/global.js
+++ b/sentry/static/scripts/global.js
@@ -11,7 +11,8 @@ function varToggle(link, id) {
 function getQueryParams()
 {
     var vars = {}, hash;
-    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1, window.location.href.indexOf('#') || -1).split('&');
+    var href = window.location.href;
+    var hashes = href.slice(href.indexOf('?') + 1, (href.indexOf('#') !== -1 ? href.indexOf('#') : href.length)).split('&');
     for(var i = 0; i < hashes.length; i++)
     {
         hash = hashes[i].split('=');
@@ -192,7 +193,12 @@ if (Sentry === undefined) {
                 if (groups.length) {
                     $('#no_messages').remove();
                 }
-                $(groups.reverse()).each(function(i, el){
+                // highest score should be index 0
+                var sorted = [];
+                $('#event_list .event').each(function(i, el){
+                    sorted.push([el, $(el).attr('data-score')]);
+                });
+                $(groups).each(function(i, el){
                     var id = el[0];
                     var data = el[1];
                     var url = Sentry.options.urlPrefix + '/api/notification/?' + $.param({
@@ -202,15 +208,32 @@ if (Sentry === undefined) {
                         level: data.level,
                         logger: data.logger
                     });
-                    if ((row = $('#group_' + id))) {
-                        if (row.attr('data-sentry-count') == data.count) {
+                    var row, next;
+                    var is_new = !(row = $('#group_' + id)).length;
+                    if (!is_new) {
+                        if (row.attr('data-count') == data.count) {
                             return;
                         }
-                        row.remove();
                     } else {
-                        //Sentry.notifications.show({'type': 'html', 'url': url});
+                        row = $(data.html);
+                    }
+                    function getPosition(score, list) {
+                        for (var i=0; i<list.length; i++) {
+                            if (score > list[i][1]) {
+                                return i;
+                            }
+                        }
+                        return -1;
+                    }
+                    pos = getPosition(data.score, sorted);
+                    if (is_new) {
+                        sorted.splice(pos, 0, [data.score, row]);
+                    }
+                    if (pos === -1) {
+                        $('#event_list').append(row);
+                    } else {
+                        $($('#event_list .event')[pos]).before(row);
                     }
-                    $('#event_list').prepend(data.html);
                     $('#group_' + id).addClass('fresh');
                 });
 
diff --git a/sentry/templates/sentry/partial/_group.html b/sentry/templates/sentry/partial/_group.html
index d6aaf802b9..5f716f46f4 100644
--- a/sentry/templates/sentry/partial/_group.html
+++ b/sentry/templates/sentry/partial/_group.html
@@ -1,7 +1,7 @@
 {% load sentry_helpers %}
 
-<li class="event level-{{ group.level }}" id="group_{{ group.pk|safe }}" data-sentry-count="{{ group.times_seen }}">
-    <div class="count">{{ group.times_seen|small_count }}</div>
+<li class="event level-{{ group.level }}" id="group_{{ group.pk|safe }}" data-count="{{ group.times_seen }}" data-score="{{ group.sort_value }}">
+    <div class="count"><span>{{ group.times_seen|small_count }}</span></div>
     <div class="details">
         <h3>
             <a href="{% url sentry-group group.project_id group.pk %}">
diff --git a/sentry/web/api.py b/sentry/web/api.py
index 0ac3ac345d..1e0ff1c103 100644
--- a/sentry/web/api.py
+++ b/sentry/web/api.py
@@ -124,6 +124,7 @@ def poll(request, project):
             'level': m.get_level_display(),
             'logger': m.logger,
             'count': m.times_seen,
+            'score': getattr(m, 'sort_value', None),
         }) for m, b in as_bookmarks(event_list, request.user)]
 
     response = HttpResponse(json.dumps(data))
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index f9b3823c5f..7fdf486ebf 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -104,23 +104,34 @@ def _get_group_list(request, project, view=None):
         sort = settings.DEFAULT_SORT_OPTION
 
     if sort == 'date':
-        event_list = event_list.order_by('-last_seen')
+        event_list = event_list.extra(
+            select={'sort_value': 'EXTRACT(EPOCH FROM last_seen)'},
+        ).order_by('-sort_value')
     elif sort == 'new':
-        event_list = event_list.order_by('-first_seen')
+        event_list = event_list.extra(
+            select={'sort_value': 'EXTRACT(EPOCH FROM first_seen)'},
+        ).order_by('-sort_value')
     elif sort == 'freq':
-        event_list = event_list.order_by('-times_seen')
+        event_list = event_list.extra(
+            select={'sort_value': 'times_seen'},
+        ).order_by('-sort_value')
     elif sort == 'tottime':
-        event_list = event_list.filter(time_spent_count__gt=0)\
-                                .order_by('-time_spent_total')
+        event_list = event_list.extra(
+            select={'sort_value': 'time_spent_total'},
+        ).filter(time_spent_count__gt=0).order_by('-sort_value')
     elif sort == 'avgtime':
-        event_list = event_list.filter(time_spent_count__gt=0)\
-                               .extra(select={'avg_time_spent': 'time_spent_total / time_spent_count'})\
-                               .order_by('-avg_time_spent')
+        event_list = event_list.extra(
+            select={
+                'sort_value': '(time_spent_total / time_spent_count)'
+            }
+        ).filter(time_spent_count__gt=0).order_by('-sort_value')
     elif has_trending() and sort and sort.startswith('accel_'):
         event_list = Group.objects.get_accelerated(event_list, minutes=int(sort.split('_', 1)[1]))
     elif sort == 'priority':
         sort = 'priority'
-        event_list = event_list.order_by('-score', '-last_seen')
+        event_list = event_list.extra(
+            select={'sort_value': 'score'}
+        ).order_by('-sort_value', '-last_seen')
     else:
         raise NotImplementedError('Sort not implemented: %r' % sort)
 
