commit 6dcdac1deb9dc339192282fba526790428e39821
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 16 15:06:26 2018 -0700

    ref(js): Consistent organization settings view locations/naming (#8452)

diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index a53e64c293..8143d7d07d 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -135,7 +135,7 @@ export default {
     HookStore: require('app/stores/hookStore').default,
     Indicators: require('app/components/indicators').default,
     IndicatorStore: require('app/stores/indicatorStore').default,
-    InviteMember: require('app/views/inviteMember/inviteMember').default,
+    InviteMember: require('app/views/settings/organizationMembers/inviteMember').default,
     LoadingError: require('app/components/loadingError').default,
     LoadingIndicator: require('app/components/loadingIndicator').default,
     ListLink: require('app/components/listLink').default,
@@ -145,8 +145,7 @@ export default {
       .default,
     OrganizationsLoader: require('app/components/organizations/organizationsLoader')
       .default,
-    OrganizationMembersView: require('app/views/settings/organization/members/organizationMembersView')
-      .default,
+    OrganizationMembersView: require('app/views/settings/organizationMembers').default,
     Panel: require('app/components/panels/panel').default,
     PanelHeader: require('app/components/panels/panelHeader').default,
     PanelBody: require('app/components/panels/panelBody').default,
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 0d96f92498..6797bc8f10 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -19,7 +19,6 @@ import GroupTagValues from 'app/views/groupTagValues';
 import GroupTags from 'app/views/groupTags';
 import GroupUserReports from 'app/views/groupUserReports';
 import HookStore from 'app/stores/hookStore';
-import InviteMember from 'app/views/inviteMember/inviteMember';
 import LazyLoad from 'app/components/lazyLoad';
 import MyIssuesAssignedToMe from 'app/views/myIssues/assignedToMe';
 import MyIssuesBookmarked from 'app/views/myIssues/bookmarked';
@@ -28,20 +27,13 @@ import NewProject from 'app/views/projectInstall/newProject';
 import OnboardingConfigure from 'app/views/onboarding/configure/index';
 import OnboardingWizard from 'app/views/onboarding/index';
 import OrganizationActivity from 'app/views/organizationActivity';
-import OrganizationApiKeyDetailsView from 'app/views/settings/organization/apiKeys/organizationApiKeyDetailsView';
-import OrganizationApiKeysView from 'app/views/settings/organization/apiKeys/organizationApiKeysView';
-import OrganizationAuditLogView from 'app/views/settings/organization/auditLog/auditLogView';
 import OrganizationContext from 'app/views/organizationContext';
 import OrganizationCreate from 'app/views/organizationCreate';
 import OrganizationDashboard from 'app/views/organizationDashboard';
 import OrganizationDetails from 'app/views/organizationDetails';
 import OrganizationHomeContainer from 'app/components/organizations/homeContainer';
-import OrganizationMemberDetail from 'app/views/settings/organization/members/organizationMemberDetail';
-import OrganizationMembersView from 'app/views/settings/organization/members/organizationMembersView';
-import OrganizationProjectsView from 'app/views/settings/organization/projects/organizationProjectsView';
+import OrganizationMembers from 'app/views/settings/organizationMembers';
 import OrganizationRoot from 'app/views/organizationRoot';
-import OrganizationRepositoriesView from 'app/views/organizationRepositoriesView';
-import OrganizationGeneralSettingsView from 'app/views/settings/organization/general/organizationGeneralSettingsView';
 import OrganizationStats from 'app/views/organizationStats';
 import ProjectEnvironments from 'app/views/projectEnvironments';
 import ProjectTags from 'app/views/projectTags';
@@ -451,37 +443,48 @@ function routes() {
     <React.Fragment>
       <IndexRoute
         name="General"
-        component={errorHandler(OrganizationGeneralSettingsView)}
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationGeneralSettings*/ './views/settings/organizationGeneralSettings')}
+        component={errorHandler(LazyLoad)}
       />
 
       <Route
         path="projects/"
         name="Projects"
-        component={errorHandler(OrganizationProjectsView)}
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationProjects*/ './views/settings/organizationProjects')}
+        component={errorHandler(LazyLoad)}
       />
 
-      <Route
-        path="api-keys/"
-        name="API Key"
-        component={errorHandler(OrganizationApiKeysView)}
-      />
+      <Route path="api-keys/" name="API Key">
+        <IndexRoute
+          componentPromise={() =>
+            import(/*webpackChunkName: OrganizationApiKeys*/ './views/settings/organizationApiKeys')}
+          component={errorHandler(LazyLoad)}
+        />
 
-      <Route
-        path="api-keys/:apiKey/"
-        component={errorHandler(OrganizationApiKeyDetailsView)}
-      />
+        <Route
+          path=":apiKey/"
+          name="Details"
+          componentPromise={() =>
+            import(/*webpackChunkName: OrganizationApiKeyDetails*/ './views/settings/organizationApiKeys/organizationApiKeyDetails')}
+          component={errorHandler(LazyLoad)}
+        />
+      </Route>
 
       <Route
         path="audit-log/"
         name="Audit Log"
-        component={errorHandler(OrganizationAuditLogView)}
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationAuditLog*/ './views/settings/organizationAuditLog')}
+        component={errorHandler(LazyLoad)}
       />
 
       <Route
         path="auth/"
         name="Auth Providers"
         componentPromise={() =>
-          import(/*webpackChunkName: OrganizationAuthView*/ './views/settings/organization/auth/organizationAuthView')}
+          import(/*webpackChunkName: OrganizationAuth*/ './views/settings/organizationAuth')}
         component={errorHandler(LazyLoad)}
       />
 
@@ -490,14 +493,22 @@ function routes() {
           component={
             HookStore.get('component:org-members-view').length
               ? HookStore.get('component:org-members-view')[0]()
-              : OrganizationMembersView
+              : OrganizationMembers
           }
         />
-        <Route path="new/" name="Invite" component={errorHandler(InviteMember)} />
+        <Route
+          path="new/"
+          name="Invite"
+          componentPromise={() =>
+            import(/*webpackChunkName: InviteMember*/ './views/settings/organizationMembers/inviteMember')}
+          component={errorHandler(LazyLoad)}
+        />
         <Route
           path=":memberId/"
           name="Details"
-          component={errorHandler(OrganizationMemberDetail)}
+          componentPromise={() =>
+            import(/*webpackChunkName: OrganizationMemberDetail*/ './views/settings/organizationMembers/organizationMemberDetail')}
+          component={errorHandler(LazyLoad)}
         />
       </Route>
 
@@ -505,17 +516,24 @@ function routes() {
         path="rate-limits/"
         name="Rate Limits"
         componentPromise={() =>
-          import(/*webpackChunkName: OrganizationRateLimits*/ 'app/views/settings/organizationRateLimits')}
+          import(/*webpackChunkName: OrganizationRateLimits*/ './views/settings/organizationRateLimits')}
         component={errorHandler(LazyLoad)}
       />
 
       <Route
         path="repos/"
         name="Repositories"
-        component={errorHandler(OrganizationRepositoriesView)}
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationRepositories*/ './views/settings/organizationRepositories')}
+        component={errorHandler(LazyLoad)}
       />
 
-      <Route path="settings/" component={errorHandler(OrganizationGeneralSettingsView)} />
+      <Route
+        path="settings/"
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationGeneralSettings*/ './views/settings/organizationGeneralSettings')}
+        component={errorHandler(LazyLoad)}
+      />
 
       <Route name="Teams" path="teams/">
         <IndexRoute
diff --git a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysView.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx
similarity index 85%
rename from src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx
index 9bcff5463f..9ac8f10994 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx
@@ -4,12 +4,13 @@ import React from 'react';
 import {Client} from 'app/api';
 import {addSuccessMessage} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
-import LazyLoad from 'app/components/lazyLoad';
 import AsyncView from 'app/views/asyncView';
 import SentryTypes from 'app/proptypes';
 import recreateRoute from 'app/utils/recreateRoute';
 
-class OrganizationApiKeysView extends AsyncView {
+import OrganizationApiKeysList from './organizationApiKeysList';
+
+class OrganizationApiKeys extends AsyncView {
   static contextTypes = {
     organization: SentryTypes.Organization,
   };
@@ -65,11 +66,7 @@ class OrganizationApiKeysView extends AsyncView {
 
   renderBody() {
     return (
-      <LazyLoad
-        component={() =>
-          import(/*webpackChunkName: "organizationApiKeysList"*/ './organizationApiKeysList').then(
-            mod => mod.default
-          )}
+      <OrganizationApiKeysList
         busy={this.state.busy}
         keys={this.state.keys}
         organization={this.context.organization}
@@ -81,4 +78,4 @@ class OrganizationApiKeysView extends AsyncView {
   }
 }
 
-export default OrganizationApiKeysView;
+export default OrganizationApiKeys;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeyDetailsView.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
similarity index 94%
rename from src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeyDetailsView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
index 07e6847183..ec2aca3d15 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeyDetailsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
@@ -15,7 +15,7 @@ import recreateRoute from 'app/utils/recreateRoute';
 
 const API_CHOICES = API_SCOPES.map(s => [s, s]);
 
-class OrganizationApiKeyDetailsView extends AsyncView {
+class OrganizationApiKeyDetails extends AsyncView {
   static contextTypes = {
     organization: SentryTypes.Organization,
   };
@@ -56,7 +56,7 @@ class OrganizationApiKeyDetailsView extends AsyncView {
 
     // Go back to API list
     browserHistory.push(
-      recreateRoute('api-keys/', {
+      recreateRoute('', {
         stepBack: -1,
         routes: this.props.routes,
         params: this.props.params,
@@ -84,7 +84,7 @@ class OrganizationApiKeyDetailsView extends AsyncView {
           onSubmitError={this.handleSubmitError}
           onCancel={() =>
             browserHistory.push(
-              recreateRoute('api-keys/', {
+              recreateRoute('', {
                 stepBack: -1,
                 routes: this.props.routes,
                 params: this.props.params,
@@ -116,4 +116,4 @@ class OrganizationApiKeyDetailsView extends AsyncView {
   }
 }
 
-export default OrganizationApiKeyDetailsView;
+export default OrganizationApiKeyDetails;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysList.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeysList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysList.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeysList.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auditLog/auditLogList.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuditLog/auditLogList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/auditLog/auditLogList.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationAuditLog/auditLogList.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auditLog/auditLogView.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuditLog/index.jsx
similarity index 87%
rename from src/sentry/static/sentry/app/views/settings/organization/auditLog/auditLogView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationAuditLog/index.jsx
index 17fadd8fe5..f2522c0a61 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/auditLog/auditLogView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationAuditLog/index.jsx
@@ -2,10 +2,11 @@ import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import LazyLoad from 'app/components/lazyLoad';
 import AsyncView from 'app/views/asyncView';
 import SentryTypes from 'app/proptypes';
 
+import AuditLogList from './auditLogList';
+
 const EVENT_TYPES = [
   'member.invite',
   'member.add',
@@ -40,7 +41,7 @@ const EVENT_TYPES = [
   'api-key.remove',
 ].sort();
 
-class AuditLogView extends AsyncView {
+class OrganizationAuditLog extends AsyncView {
   static propTypes = {
     routes: PropTypes.array,
   };
@@ -82,11 +83,7 @@ class AuditLogView extends AsyncView {
     let currentEventType = this.props.location.query.event;
 
     return (
-      <LazyLoad
-        component={() =>
-          import(/*webpackChunkName: "auditLogList"*/ './auditLogList').then(
-            mod => mod.default
-          )}
+      <AuditLogList
         entries={this.state.entryList}
         pageLinks={this.state.pageLinks}
         eventType={currentEventType}
@@ -98,4 +95,4 @@ class AuditLogView extends AsyncView {
   }
 }
 
-export default AuditLogView;
+export default OrganizationAuditLog;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx
similarity index 94%
rename from src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx
index 8f367be432..8a4a4e1182 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationAuth/index.jsx
@@ -2,11 +2,12 @@ import React from 'react';
 
 import {t} from 'app/locale';
 import IndicatorStore from 'app/stores/indicatorStore';
-import OrganizationAuthList from 'app/views/settings/organization/auth/organizationAuthList';
 import AsyncView from 'app/views/asyncView';
 import SentryTypes from 'app/proptypes';
 
-class OrganizationAuthView extends AsyncView {
+import OrganizationAuthList from './organizationAuthList';
+
+class OrganizationAuth extends AsyncView {
   static contextTypes = {
     organization: SentryTypes.Organization,
   };
@@ -119,4 +120,4 @@ class OrganizationAuthView extends AsyncView {
   }
 }
 
-export default OrganizationAuthView;
+export default OrganizationAuth;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthList.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthList.jsx
index 84c8c321b1..f635de73f0 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthList.jsx
@@ -6,11 +6,12 @@ import {t, tct} from 'app/locale';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import ExternalLink from 'app/components/externalLink';
 import {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';
-import ProviderItem from 'app/views/settings/organization/auth/providerItem';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import getCookie from 'app/utils/getCookie';
 
+import ProviderItem from './providerItem';
+
 class OrganizationAuthList extends React.Component {
   static contextTypes = {
     organization: SentryTypes.Organization,
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthProvider.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthProvider.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthProvider.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationAuth/organizationAuthProvider.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/providerItem.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/providerItem.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/auth/providerItem.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationAuth/providerItem.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
similarity index 90%
rename from src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
index 4a1e06b78f..bc7faed2e1 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/general/organizationGeneralSettingsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
@@ -20,8 +20,10 @@ import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader
 import TextBlock from 'app/views/settings/components/text/textBlock';
 import recreateRoute from 'app/utils/recreateRoute';
 
-const OrganizationGeneralSettingsView = createReactClass({
-  displayName: 'OrganizationGeneralSettingsView',
+import OrganizationSettingsForm from './organizationSettingsForm';
+
+const OrganizationGeneralSettings = createReactClass({
+  displayName: 'OrganizationGeneralSettings',
 
   propTypes: {
     routes: PropTypes.arrayOf(PropTypes.object),
@@ -38,12 +40,8 @@ const OrganizationGeneralSettingsView = createReactClass({
   },
 
   componentDidMount() {
-    let fetchForm = import(/*webpackChunkName: "organizationSettingsForm"*/ './organizationSettingsForm').then(
-      mod => mod.default
-    );
-
-    Promise.all([this.fetchData(), fetchForm]).then(
-      ([data, Form]) => {
+    Promise.all([this.fetchData()]).then(
+      ([data]) => {
         // Redirect if can't write to org
         if (
           data &&
@@ -60,7 +58,7 @@ const OrganizationGeneralSettingsView = createReactClass({
           return;
         }
 
-        this.setState({data, loading: false, Form});
+        this.setState({data, loading: false});
       },
       () => {
         this.setState({error: true, loading: false});
@@ -107,7 +105,7 @@ const OrganizationGeneralSettingsView = createReactClass({
   },
 
   render() {
-    let {data, loading, error, Form} = this.state;
+    let {data, loading, error} = this.state;
     let orgId = this.props.params.orgId;
     let access = data && new Set(data.access);
 
@@ -115,15 +113,15 @@ const OrganizationGeneralSettingsView = createReactClass({
 
     return (
       <div>
-        {loading && <LoadingIndicator />}
         {error && <LoadingError />}
+        {loading && !error && <LoadingIndicator />}
 
-        {!loading &&
-          !error &&
-          Form && (
+        {data &&
+          !loading &&
+          !error && (
             <div>
               <SettingsPageHeader title={t('Organization Settings')} />
-              <Form
+              <OrganizationSettingsForm
                 {...this.props}
                 initialData={data}
                 orgId={orgId}
@@ -189,4 +187,4 @@ const OrganizationGeneralSettingsView = createReactClass({
   },
 });
 
-export default OrganizationGeneralSettingsView;
+export default OrganizationGeneralSettings;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/general/organizationSettingsForm.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
similarity index 93%
rename from src/sentry/static/sentry/app/views/settings/organization/general/organizationSettingsForm.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
index 78def8e320..a93ddf4be7 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/general/organizationSettingsForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
@@ -11,8 +11,8 @@ import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import organizationSettingsFields from 'app/data/forms/organizationGeneralSettings';
 import OrganizationState from 'app/mixins/organizationState';
 
-const NewOrganizationSettingsForm = createReactClass({
-  displayName: 'NewOrganizationSettingsForm',
+const OrganizationSettingsForm = createReactClass({
+  displayName: 'OrganizationSettingsForm',
 
   propTypes: {
     location: PropTypes.object,
@@ -63,4 +63,4 @@ const NewOrganizationSettingsForm = createReactClass({
   },
 });
 
-export default NewOrganizationSettingsForm;
+export default OrganizationSettingsForm;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
index 11e549e396..3096d09f7a 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMembersView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/index.jsx
@@ -12,13 +12,14 @@ import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import ConfigStore from 'app/stores/configStore';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
 import Input from 'app/views/settings/components/forms/controls/input';
-import OrganizationAccessRequests from 'app/views/settings/organization/members/organizationAccessRequests';
-import OrganizationMemberRow from 'app/views/settings/organization/members/organizationMemberRow';
 import Pagination from 'app/components/pagination';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import recreateRoute from 'app/utils/recreateRoute';
 
+import OrganizationAccessRequests from './organizationAccessRequests';
+import OrganizationMemberRow from './organizationMemberRow';
+
 class OrganizationMembersView extends AsyncView {
   static propTypes = {
     routes: PropTypes.array,
diff --git a/src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
index 8fac5ad51b..8394da9860 100644
--- a/src/sentry/static/sentry/app/views/inviteMember/inviteMember.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
@@ -11,13 +11,14 @@ import Button from 'app/components/buttons/button';
 import ConfigStore from 'app/stores/configStore';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import OrganizationState from 'app/mixins/organizationState';
-import RoleSelect from 'app/views/inviteMember/roleSelect';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TeamSelect from 'app/views/inviteMember/teamSelect';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 import TextField from 'app/components/forms/textField';
 import replaceRouterParams from 'app/utils/replaceRouterParams';
 
+import RoleSelect from './roleSelect';
+import TeamSelect from './teamSelect';
+
 // These don't have allowed and are only used for superusers. superceded by server result of allowed roles
 const STATIC_ROLE_LIST = [
   {
diff --git a/src/sentry/static/sentry/app/views/inviteMember/roleSelect.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/roleSelect.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/inviteMember/roleSelect.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/roleSelect.jsx
diff --git a/src/sentry/static/sentry/app/views/inviteMember/teamSelect.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/teamSelect.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/inviteMember/teamSelect.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/teamSelect.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationAccessRequests.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationAccessRequests.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/members/organizationAccessRequests.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/organizationAccessRequests.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx
index f93fe91632..e3f11c6e6a 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberDetail.jsx
@@ -10,12 +10,13 @@ import DateTime from 'app/components/dateTime';
 import IndicatorStore from 'app/stores/indicatorStore';
 import NotFound from 'app/components/errors/notFound';
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
-import RoleSelect from 'app/views/inviteMember/roleSelect';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TeamSelect from 'app/views/inviteMember/teamSelect';
 import recreateRoute from 'app/utils/recreateRoute';
 
+import RoleSelect from './inviteMember/roleSelect';
+import TeamSelect from './inviteMember/teamSelect';
+
 class OrganizationMemberDetail extends AsyncView {
   static contextTypes = {
     organization: SentryTypes.Organization,
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberRow.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
index 8a5a9319f5..2671ec96bb 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/projects/organizationProjectsView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationProjects/index.jsx
@@ -14,11 +14,12 @@ import AsyncView from 'app/views/asyncView';
 import Pagination from 'app/components/pagination';
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
 import ProjectListItem from 'app/views/settings/components/settingsProjectItem';
-import ProjectStatsGraph from 'app/views/settings/organization/projects/projectStatsGraph';
 import SentryTypes from 'app/proptypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 
-export default class OrganizationProjectsView extends AsyncView {
+import ProjectStatsGraph from './projectStatsGraph';
+
+export default class OrganizationProjects extends AsyncView {
   static contextTypes = {
     router: PropTypes.object.isRequired,
     organization: SentryTypes.Organization,
diff --git a/src/sentry/static/sentry/app/views/settings/organization/projects/projectStatsGraph.jsx b/src/sentry/static/sentry/app/views/settings/organizationProjects/projectStatsGraph.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/projects/projectStatsGraph.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationProjects/projectStatsGraph.jsx
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRateLimits/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationRateLimits/index.jsx
index be7c74a757..78f93aebd9 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationRateLimits/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationRateLimits/index.jsx
@@ -1,145 +1,16 @@
-import {Box} from 'grid-emotion';
-import createReactClass from 'create-react-class';
-import PropTypes from 'prop-types';
 import React from 'react';
+import PropTypes from 'prop-types';
+import createReactClass from 'create-react-class';
 
-import {t, tct} from 'app/locale';
-import Field from 'app/views/settings/components/forms/field';
-import Form from 'app/views/settings/components/forms/form';
-import {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';
 import OrganizationState from 'app/mixins/organizationState';
-import RangeField from 'app/views/settings/components/forms/rangeField';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
 
-const getRateLimitValues = () => {
-  let steps = [];
-  let i = 0;
-  while (i <= 1000000) {
-    steps.push(i);
-    if (i < 10000) {
-      i += 1000;
-    } else if (i < 100000) {
-      i += 10000;
-    } else {
-      i += 100000;
-    }
-  }
-  return steps;
-};
-
-// We can just generate this once
-const ACCOUNT_RATE_LIMIT_VALUES = getRateLimitValues();
-
-class OrganizationRateLimits extends React.Component {
-  static propTypes = {
-    organization: PropTypes.object.isRequired,
-  };
-
-  handleSubmitSucces = () => {
-    // TODO(billy): Update organization.quota in organizationStore with new values
-  };
-
-  render() {
-    let {organization} = this.props;
-    let {quota} = organization;
-    let {maxRate, maxRateInterval, projectLimit, accountLimit} = quota;
-    let initialData = {
-      projectRateLimit: projectLimit || 100,
-      accountRateLimit: accountLimit,
-    };
-
-    return (
-      <div>
-        <SettingsPageHeader title={t('Rate Limits')} />
-
-        <Panel>
-          <PanelHeader disablePadding>
-            <Box px={2} flex="1">
-              {t('Adjust Limits')}
-            </Box>
-          </PanelHeader>
-          <PanelBody>
-            <PanelAlert type="info">
-              {t(`Rate limits allow you to control how much data is stored for this
-                organization. When a rate is exceeded the system will begin discarding
-                data until the next interval.`)}
-            </PanelAlert>
-
-            <Form
-              className="ref-rate-limit-editor"
-              saveOnBlur
-              allowUndo
-              apiMethod="PUT"
-              apiEndpoint={`/organizations/${organization.slug}/`}
-              initialData={initialData}
-            >
-              {!maxRate ? (
-                <RangeField
-                  name="accountRateLimit"
-                  label={t('Account Limit')}
-                  min={0}
-                  max={1000000}
-                  allowedValues={ACCOUNT_RATE_LIMIT_VALUES}
-                  help={t(
-                    'The maximum number of events to accept across this entire organization.'
-                  )}
-                  placeholder="e.g. 500"
-                  formatLabel={value => {
-                    return !value
-                      ? t('No Limit')
-                      : tct('[number] per hour', {
-                          number: value.toLocaleString(),
-                        });
-                  }}
-                />
-              ) : (
-                <Field
-                  label={t('Account Limit')}
-                  help={t(
-                    'The maximum number of events to accept across this entire organization.'
-                  )}
-                >
-                  <TextBlock css={{marginBottom: 0}}>
-                    {tct(
-                      'Your account is limited to a maximum of [maxRate] events per [maxRateInterval] seconds.',
-                      {
-                        maxRate,
-                        maxRateInterval,
-                      }
-                    )}
-                  </TextBlock>
-                </Field>
-              )}
-              <RangeField
-                name="projectRateLimit"
-                label={t('Per-Project Limit')}
-                help={t(
-                  'The maximum percentage of your account limit an individual project can consume.'
-                )}
-                step={5}
-                min={50}
-                max={100}
-                formatLabel={value => {
-                  return value !== 100 ? (
-                    `${value}%`
-                  ) : (
-                    <span
-                      dangerouslySetInnerHTML={{__html: `${t('No Limit')} &mdash; 100%`}}
-                    />
-                  );
-                }}
-              />
-            </Form>
-          </PanelBody>
-        </Panel>
-      </div>
-    );
-  }
-}
+import OrganizationRateLimits from './organizationRateLimits';
 
 const OrganizationRateLimitsContainer = createReactClass({
   displayName: 'OrganizationRateLimits',
+  propTypes: {
+    routes: PropTypes.array,
+  },
   mixins: [OrganizationState],
 
   render() {
@@ -151,5 +22,4 @@ const OrganizationRateLimitsContainer = createReactClass({
   },
 });
 
-export {OrganizationRateLimits};
 export default OrganizationRateLimitsContainer;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRateLimits/organizationRateLimits.jsx b/src/sentry/static/sentry/app/views/settings/organizationRateLimits/organizationRateLimits.jsx
new file mode 100644
index 0000000000..92fff2f15f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organizationRateLimits/organizationRateLimits.jsx
@@ -0,0 +1,137 @@
+import {Box} from 'grid-emotion';
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {t, tct} from 'app/locale';
+import Field from 'app/views/settings/components/forms/field';
+import Form from 'app/views/settings/components/forms/form';
+import {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';
+import RangeField from 'app/views/settings/components/forms/rangeField';
+import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import TextBlock from 'app/views/settings/components/text/textBlock';
+
+const getRateLimitValues = () => {
+  let steps = [];
+  let i = 0;
+  while (i <= 1000000) {
+    steps.push(i);
+    if (i < 10000) {
+      i += 1000;
+    } else if (i < 100000) {
+      i += 10000;
+    } else {
+      i += 100000;
+    }
+  }
+  return steps;
+};
+
+// We can just generate this once
+const ACCOUNT_RATE_LIMIT_VALUES = getRateLimitValues();
+
+export default class OrganizationRateLimit extends React.Component {
+  static propTypes = {
+    organization: PropTypes.object.isRequired,
+  };
+
+  handleSubmitSucces = () => {
+    // TODO(billy): Update organization.quota in organizationStore with new values
+  };
+
+  render() {
+    let {organization} = this.props;
+    let {quota} = organization;
+    let {maxRate, maxRateInterval, projectLimit, accountLimit} = quota;
+    let initialData = {
+      projectRateLimit: projectLimit || 100,
+      accountRateLimit: accountLimit,
+    };
+
+    return (
+      <div>
+        <SettingsPageHeader title={t('Rate Limits')} />
+
+        <Panel>
+          <PanelHeader disablePadding>
+            <Box px={2} flex="1">
+              {t('Adjust Limits')}
+            </Box>
+          </PanelHeader>
+          <PanelBody>
+            <PanelAlert type="info">
+              {t(`Rate limits allow you to control how much data is stored for this
+                organization. When a rate is exceeded the system will begin discarding
+                data until the next interval.`)}
+            </PanelAlert>
+
+            <Form
+              className="ref-rate-limit-editor"
+              saveOnBlur
+              allowUndo
+              apiMethod="PUT"
+              apiEndpoint={`/organizations/${organization.slug}/`}
+              initialData={initialData}
+            >
+              {!maxRate ? (
+                <RangeField
+                  name="accountRateLimit"
+                  label={t('Account Limit')}
+                  min={0}
+                  max={1000000}
+                  allowedValues={ACCOUNT_RATE_LIMIT_VALUES}
+                  help={t(
+                    'The maximum number of events to accept across this entire organization.'
+                  )}
+                  placeholder="e.g. 500"
+                  formatLabel={value => {
+                    return !value
+                      ? t('No Limit')
+                      : tct('[number] per hour', {
+                          number: value.toLocaleString(),
+                        });
+                  }}
+                />
+              ) : (
+                <Field
+                  label={t('Account Limit')}
+                  help={t(
+                    'The maximum number of events to accept across this entire organization.'
+                  )}
+                >
+                  <TextBlock css={{marginBottom: 0}}>
+                    {tct(
+                      'Your account is limited to a maximum of [maxRate] events per [maxRateInterval] seconds.',
+                      {
+                        maxRate,
+                        maxRateInterval,
+                      }
+                    )}
+                  </TextBlock>
+                </Field>
+              )}
+              <RangeField
+                name="projectRateLimit"
+                label={t('Per-Project Limit')}
+                help={t(
+                  'The maximum percentage of your account limit an individual project can consume.'
+                )}
+                step={5}
+                min={50}
+                max={100}
+                formatLabel={value => {
+                  return value !== 100 ? (
+                    `${value}%`
+                  ) : (
+                    <span
+                      dangerouslySetInnerHTML={{__html: `${t('No Limit')} &mdash; 100%`}}
+                    />
+                  );
+                }}
+              />
+            </Form>
+          </PanelBody>
+        </Panel>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/organization/repositories/addRepositoryLink.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/addRepositoryLink.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/settings/organization/repositories/addRepositoryLink.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationRepositories/addRepositoryLink.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationRepositoriesView.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx
similarity index 85%
rename from src/sentry/static/sentry/app/views/organizationRepositoriesView.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx
index 56c58459fe..2be7adfc1f 100644
--- a/src/sentry/static/sentry/app/views/organizationRepositoriesView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationRepositories/index.jsx
@@ -4,9 +4,10 @@ import {sortArray} from 'app/utils';
 import {t} from 'app/locale';
 import IndicatorStore from 'app/stores/indicatorStore';
 import AsyncView from 'app/views/asyncView';
-import LazyLoad from 'app/components/lazyLoad';
 
-class OrganizationRepositoriesView extends AsyncView {
+import OrganizationRepositories from './organizationRepositories';
+
+export default class OrganizationRepositoriesContainer extends AsyncView {
   getEndpoints() {
     let {orgId} = this.props.params;
     return [
@@ -82,11 +83,7 @@ class OrganizationRepositoriesView extends AsyncView {
 
   renderBody() {
     return (
-      <LazyLoad
-        component={() =>
-          import(/*webpackChunkName: "organizationRepositories"*/ './settings/organization/repositories/organizationRepositories').then(
-            mod => mod.default
-          )}
+      <OrganizationRepositories
         {...this.props}
         {...this.state}
         onAddRepo={this.onAddRepo}
@@ -96,5 +93,3 @@ class OrganizationRepositoriesView extends AsyncView {
     );
   }
 }
-
-export default OrganizationRepositoriesView;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/repositories/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/settings/organization/repositories/organizationRepositories.jsx
rename to src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
index 1209a5c35f..4d16c3688c 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/repositories/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationRepositories/organizationRepositories.jsx
@@ -12,7 +12,8 @@ import SpreadLayout from 'app/components/spreadLayout';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
-import AddRepositoryLink from 'app/views/settings/organization/repositories/addRepositoryLink';
+
+import AddRepositoryLink from './addRepositoryLink';
 
 const RepoRow = styled(SpreadLayout)`
   border-bottom: 1px solid ${p => p.theme.borderLight};
@@ -22,7 +23,7 @@ const RepoRow = styled(SpreadLayout)`
   }
 `;
 
-class OrganizationRepositories extends React.Component {
+export default class OrganizationRepositories extends React.Component {
   static propTypes = {
     itemList: PropTypes.array,
     repoConfig: PropTypes.object,
@@ -180,5 +181,3 @@ class OrganizationRepositories extends React.Component {
     );
   }
 }
-
-export default OrganizationRepositories;
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index ac79cc9d54..7448faa123 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -197,7 +197,7 @@ exports[`CreateProject should render roles when available and allowed, and handl
                         >
                           <Label>
                             <label
-                              className="css-r8kahz-Label enzv8160"
+                              className="css-r8kahz-Label e1y9x5r70"
                             >
                               <Radio
                                 checked={false}
@@ -280,7 +280,7 @@ exports[`CreateProject should render roles when available and allowed, and handl
                         >
                           <Label>
                             <label
-                              className="css-r8kahz-Label enzv8160"
+                              className="css-r8kahz-Label e1y9x5r70"
                             >
                               <Radio
                                 checked={false}
@@ -434,7 +434,7 @@ exports[`CreateProject should render roles when available and allowed, and handl
                             key="bar"
                           >
                             <div
-                              className="css-16v1fbz-TeamItem e1r79plm0"
+                              className="css-16v1fbz-TeamItem e1tbg1m40"
                             >
                               <label
                                 className="checkbox"
@@ -554,7 +554,7 @@ exports[`CreateProject should render roles when available and allowed, and handl
                             key="foo"
                           >
                             <div
-                              className="css-16v1fbz-TeamItem e1r79plm0"
+                              className="css-16v1fbz-TeamItem e1tbg1m40"
                             >
                               <label
                                 className="checkbox"
diff --git a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
index 757fad3e67..cdb191e59f 100644
--- a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
+++ b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
 import _ from 'lodash';
-import {InviteMember} from 'app/views/inviteMember/inviteMember';
+import {InviteMember} from 'app/views/settings/organizationMembers/inviteMember';
 import ConfigStore from 'app/stores/configStore';
 
 jest.mock('app/api');
diff --git a/tests/js/spec/views/providerItem.spec.jsx b/tests/js/spec/views/providerItem.spec.jsx
index 4110be1bf9..b3f42ee60b 100644
--- a/tests/js/spec/views/providerItem.spec.jsx
+++ b/tests/js/spec/views/providerItem.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
 
-import ProviderItem from 'app/views/settings/organization/auth/providerItem';
+import ProviderItem from 'app/views/settings/organizationAuth/providerItem';
 
 describe('ProviderItem', function() {
   it('renders', function() {
diff --git a/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/auditLogView.spec.jsx.snap
similarity index 98%
rename from tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/auditLogView.spec.jsx.snap
index 56a6c11528..d40bb7a380 100644
--- a/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/auditLogView.spec.jsx.snap
@@ -1,11 +1,10 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`AuditLogView renders 1`] = `
+exports[`OrganizationAuditLog renders 1`] = `
 <SideEffect(DocumentTitle)
   title="Organization Name Audit Log - Sentry"
 >
-  <LazyLoad
-    component={[Function]}
+  <AuditLogList
     entries={
       Array [
         Object {
diff --git a/tests/js/spec/views/__snapshots__/organizationAccessRequests.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationAccessRequests.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationAccessRequests.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationAccessRequests.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
similarity index 99%
rename from tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
index 0fa2fa6a8f..a435f71eb9 100644
--- a/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`OrganizationApiKeyDetailsView renders 1`] = `
-<OrganizationApiKeyDetailsView
+exports[`OrganizationApiKeyDetails renders 1`] = `
+<OrganizationApiKeyDetails
   params={
     Object {
       "apiKey": 1,
@@ -513,5 +513,5 @@ exports[`OrganizationApiKeyDetailsView renders 1`] = `
       </div>
     </DocumentTitle>
   </SideEffect(DocumentTitle)>
-</OrganizationApiKeyDetailsView>
+</OrganizationApiKeyDetails>
 `;
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationApiKeysList.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationApiKeysList.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationApiKeysList.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationAuthList.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationAuthList.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationAuthList.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationAuthList.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationAuthProvider.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationAuthProvider.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationAuthProvider.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationAuthProvider.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationAuthView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationAuthView.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationAuthView.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationAuthView.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
similarity index 99%
rename from tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index 0b2530a2e8..97cc49f6bd 100644
--- a/tests/js/spec/views/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`OrganizationProjects Should render the projects in the store 1`] = `
-<OrganizationProjectsView
+<OrganizationProjects
   params={
     Object {
       "orgId": "org-slug",
@@ -637,5 +637,5 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
       </div>
     </DocumentTitle>
   </SideEffect(DocumentTitle)>
-</OrganizationProjectsView>
+</OrganizationProjects>
 `;
diff --git a/tests/js/spec/views/__snapshots__/organizationRateLimits.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationRateLimits.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationRateLimits.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationRateLimits.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationRepositories.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/__snapshots__/organizationRepositories.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationRepositories.spec.jsx.snap
diff --git a/tests/js/spec/views/__snapshots__/organizationRepositoriesView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap
similarity index 76%
rename from tests/js/spec/views/__snapshots__/organizationRepositoriesView.spec.jsx.snap
rename to tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap
index 97c2583ab1..e2b94a20ca 100644
--- a/tests/js/spec/views/__snapshots__/organizationRepositoriesView.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationRepositoriesContainer.spec.jsx.snap
@@ -1,11 +1,10 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`OrganizationRepositoriesView render() without any providers is loading when initially rendering 1`] = `
+exports[`OrganizationRepositoriesContainer render() without any providers is loading when initially rendering 1`] = `
 <SideEffect(DocumentTitle)
   title="Repositories - Sentry"
 >
-  <LazyLoad
-    component={[Function]}
+  <OrganizationRepositories
     error={false}
     errors={Object {}}
     itemList={Array []}
diff --git a/tests/js/spec/views/auditLogView.spec.jsx b/tests/js/spec/views/settings/auditLogView.spec.jsx
similarity index 76%
rename from tests/js/spec/views/auditLogView.spec.jsx
rename to tests/js/spec/views/settings/auditLogView.spec.jsx
index fc19cd48a9..13afebff5e 100644
--- a/tests/js/spec/views/auditLogView.spec.jsx
+++ b/tests/js/spec/views/settings/auditLogView.spec.jsx
@@ -2,11 +2,11 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import AuditLogView from 'app/views/settings/organization/auditLog/auditLogView';
+import OrganizationAuditLog from 'app/views/settings/organizationAuditLog';
 
 jest.mock('jquery');
 
-describe('AuditLogView', function() {
+describe('OrganizationAuditLog', function() {
   let org = TestStubs.Organization();
   const ENDPOINT = `/organizations/${org.slug}/audit-logs/`;
 
@@ -20,7 +20,7 @@ describe('AuditLogView', function() {
 
   it('renders', function(done) {
     let wrapper = shallow(
-      <AuditLogView location={{query: ''}} params={{orgId: org.slug}} />,
+      <OrganizationAuditLog location={{query: ''}} params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
 
diff --git a/tests/js/spec/views/organizationAccessRequests.spec.jsx b/tests/js/spec/views/settings/organizationAccessRequests.spec.jsx
similarity index 98%
rename from tests/js/spec/views/organizationAccessRequests.spec.jsx
rename to tests/js/spec/views/settings/organizationAccessRequests.spec.jsx
index d1e3dc6536..fe969f1fc1 100644
--- a/tests/js/spec/views/organizationAccessRequests.spec.jsx
+++ b/tests/js/spec/views/settings/organizationAccessRequests.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
 
-import OrganizationAccessRequests from 'app/views/settings/organization/members/organizationAccessRequests';
+import OrganizationAccessRequests from 'app/views/settings/organizationMembers/organizationAccessRequests';
 
 describe('OrganizationAccessRequests', function() {
   beforeEach(function() {});
diff --git a/tests/js/spec/views/organizationApiKeyDetailsView.spec.jsx b/tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx
similarity index 79%
rename from tests/js/spec/views/organizationApiKeyDetailsView.spec.jsx
rename to tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx
index 676a53043f..1b36b85ef7 100644
--- a/tests/js/spec/views/organizationApiKeyDetailsView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationApiKeyDetailsView from 'app/views/settings/organization/apiKeys/organizationApiKeyDetailsView';
+import OrganizationApiKeyDetails from 'app/views/settings/organizationApiKeys/organizationApiKeyDetails';
 
 jest.mock('jquery');
 
@@ -13,7 +13,7 @@ const childContextTypes = {
   location: PropTypes.object,
 };
 
-describe('OrganizationApiKeyDetailsView', function() {
+describe('OrganizationApiKeyDetails', function() {
   beforeEach(function() {
     Client.clearMockResponses();
     Client.addMockResponse({
@@ -30,7 +30,7 @@ describe('OrganizationApiKeyDetailsView', function() {
 
   it('renders', function() {
     let wrapper = mount(
-      <OrganizationApiKeyDetailsView params={{apiKey: 1, orgId: 'org-slug'}} />,
+      <OrganizationApiKeyDetails params={{apiKey: 1, orgId: 'org-slug'}} />,
       {
         context: {
           router: TestStubs.router(),
diff --git a/tests/js/spec/views/organizationApiKeysList.spec.jsx b/tests/js/spec/views/settings/organizationApiKeysList.spec.jsx
similarity index 96%
rename from tests/js/spec/views/organizationApiKeysList.spec.jsx
rename to tests/js/spec/views/settings/organizationApiKeysList.spec.jsx
index 939c952ea7..8fac625b55 100644
--- a/tests/js/spec/views/organizationApiKeysList.spec.jsx
+++ b/tests/js/spec/views/settings/organizationApiKeysList.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import OrganizationApiKeysList from 'app/views/settings/organization/apiKeys/organizationApiKeysList';
+import OrganizationApiKeysList from 'app/views/settings/organizationApiKeys/organizationApiKeysList';
 
 jest.unmock('app/utils/recreateRoute');
 
diff --git a/tests/js/spec/views/organizationApiKeysView.spec.jsx b/tests/js/spec/views/settings/organizationApiKeysView.spec.jsx
similarity index 79%
rename from tests/js/spec/views/organizationApiKeysView.spec.jsx
rename to tests/js/spec/views/settings/organizationApiKeysView.spec.jsx
index d1512d8a08..1c38a35e8c 100644
--- a/tests/js/spec/views/organizationApiKeysView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationApiKeysView.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationApiKeysView from 'app/views/settings/organization/apiKeys/organizationApiKeysView';
+import OrganizationApiKeys from 'app/views/settings/organizationApiKeys';
 
 const routes = [
   {path: '/'},
@@ -11,7 +11,7 @@ const routes = [
   {path: 'api-keys/', name: 'API Key'},
 ];
 
-describe('OrganizationApiKeysView', function() {
+describe('OrganizationApiKeys', function() {
   let routerContext = TestStubs.routerContext();
 
   beforeEach(function() {
@@ -34,7 +34,7 @@ describe('OrganizationApiKeysView', function() {
 
   it('fetches api keys', function() {
     let wrapper = mount(
-      <OrganizationApiKeysView
+      <OrganizationApiKeys
         location={TestStubs.location()}
         params={{orgId: 'org-slug'}}
         routes={routes}
@@ -47,15 +47,15 @@ describe('OrganizationApiKeysView', function() {
 
   it('can delete a key', function() {
     let wrapper = mount(
-      <OrganizationApiKeysView
+      <OrganizationApiKeys
         location={TestStubs.location()}
         params={{orgId: 'org-slug'}}
         routes={routes}
       />,
       routerContext
     );
-    // OrganizationApiKeysView.handleRemove = jest.fn();
-    // expect(OrganizationApiKeysView.handleRemove).not.toHaveBeenCalled();
+    // OrganizationApiKeys.handleRemove = jest.fn();
+    // expect(OrganizationApiKeys.handleRemove).not.toHaveBeenCalled();
 
     wrapper.instance().handleRemove(1);
 
diff --git a/tests/js/spec/views/organizationAuthList.spec.jsx b/tests/js/spec/views/settings/organizationAuthList.spec.jsx
similarity index 95%
rename from tests/js/spec/views/organizationAuthList.spec.jsx
rename to tests/js/spec/views/settings/organizationAuthList.spec.jsx
index 6adf0a2000..d37c6c3a88 100644
--- a/tests/js/spec/views/organizationAuthList.spec.jsx
+++ b/tests/js/spec/views/settings/organizationAuthList.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow} from 'enzyme';
 
-import OrganizationAuthList from 'app/views/settings/organization/auth/organizationAuthList';
+import OrganizationAuthList from 'app/views/settings/organizationAuth/organizationAuthList';
 
 jest.mock('jquery');
 
diff --git a/tests/js/spec/views/organizationAuthProvider.spec.jsx b/tests/js/spec/views/settings/organizationAuthProvider.spec.jsx
similarity index 98%
rename from tests/js/spec/views/organizationAuthProvider.spec.jsx
rename to tests/js/spec/views/settings/organizationAuthProvider.spec.jsx
index dab53ef2d3..21b9ea86c3 100644
--- a/tests/js/spec/views/organizationAuthProvider.spec.jsx
+++ b/tests/js/spec/views/settings/organizationAuthProvider.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationAuthProvider from 'app/views/settings/organization/auth/organizationAuthProvider';
+import OrganizationAuthProvider from 'app/views/settings/organizationAuth/organizationAuthProvider';
 
 jest.mock('jquery');
 
diff --git a/tests/js/spec/views/organizationAuthView.spec.jsx b/tests/js/spec/views/settings/organizationAuthView.spec.jsx
similarity index 76%
rename from tests/js/spec/views/organizationAuthView.spec.jsx
rename to tests/js/spec/views/settings/organizationAuthView.spec.jsx
index 267a599155..cb17a6e171 100644
--- a/tests/js/spec/views/organizationAuthView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationAuthView.spec.jsx
@@ -2,8 +2,7 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationAuthView
-  from 'app/views/settings/organization/auth/organizationAuthProvider';
+import OrganizationAuthView from 'app/views/settings/organizationAuth/organizationAuthProvider';
 
 describe('OrganizationAuthView', function() {
   beforeEach(function() {
@@ -11,12 +10,12 @@ describe('OrganizationAuthView', function() {
     Client.addMockResponse({
       url: '/organizations/org-slug/auth-provider/',
       method: 'GET',
-      body: TestStubs.AuthProvider()
+      body: TestStubs.AuthProvider(),
     });
     Client.addMockResponse({
       url: '/organizations/org-slug/auth-providers/',
       method: 'GET',
-      body: [TestStubs.AuthProvider()]
+      body: [TestStubs.AuthProvider()],
     });
   });
 
diff --git a/tests/js/spec/views/organizationGeneralSettingsView.spec.jsx b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
similarity index 90%
rename from tests/js/spec/views/organizationGeneralSettingsView.spec.jsx
rename to tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
index f4d1000ebc..c842626a03 100644
--- a/tests/js/spec/views/organizationGeneralSettingsView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
@@ -2,7 +2,7 @@ import {browserHistory} from 'react-router';
 import {mount} from 'enzyme';
 import React from 'react';
 
-import OrganizationGeneralSettingsView from 'app/views/settings/organization/general/organizationGeneralSettingsView';
+import OrganizationGeneralSettings from 'app/views/settings/organizationGeneralSettings';
 import recreateRoute from 'app/utils/recreateRoute';
 
 jest.mock('jquery');
@@ -16,7 +16,7 @@ jest.mock('react-router', () => {
   };
 });
 
-describe('OrganizationGeneralSettingsView', function() {
+describe('OrganizationGeneralSettings', function() {
   const org = TestStubs.Organization();
   const ENDPOINT = `/organizations/${org.slug}/`;
   beforeEach(function() {
@@ -37,7 +37,7 @@ describe('OrganizationGeneralSettingsView', function() {
       body: {},
     });
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
 
@@ -49,7 +49,7 @@ describe('OrganizationGeneralSettingsView', function() {
 
   it('can enable "early adopter"', async function() {
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
     let mock = MockApiClient.addMockResponse({
@@ -71,7 +71,7 @@ describe('OrganizationGeneralSettingsView', function() {
 
   it('changes org slug and redirects to new slug', async function() {
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
     let mock = MockApiClient.addMockResponse({
@@ -110,7 +110,7 @@ describe('OrganizationGeneralSettingsView', function() {
     });
     recreateRoute.mockReturnValueOnce('teams');
     let wrapper = mount(
-      <OrganizationGeneralSettingsView routes={[]} params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings routes={[]} params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
 
@@ -130,7 +130,7 @@ describe('OrganizationGeneralSettingsView', function() {
       }),
     });
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
 
@@ -150,7 +150,7 @@ describe('OrganizationGeneralSettingsView', function() {
       }),
     });
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
     let mock = MockApiClient.addMockResponse({
@@ -179,7 +179,7 @@ describe('OrganizationGeneralSettingsView', function() {
 
   it('shows require2fa switch w/ feature flag', async function() {
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext([
         {
           organization: TestStubs.Organization({
@@ -201,7 +201,7 @@ describe('OrganizationGeneralSettingsView', function() {
       method: 'PUT',
     });
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext([
         {
           organization: TestStubs.Organization({
@@ -235,7 +235,7 @@ describe('OrganizationGeneralSettingsView', function() {
     });
 
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext([
         {
           organization: TestStubs.Organization({
@@ -279,7 +279,7 @@ describe('OrganizationGeneralSettingsView', function() {
     });
 
     let wrapper = mount(
-      <OrganizationGeneralSettingsView params={{orgId: org.slug}} />,
+      <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext([
         {
           organization: TestStubs.Organization({
diff --git a/tests/js/spec/views/organizationMemberRow.spec.jsx b/tests/js/spec/views/settings/organizationMemberRow.spec.jsx
similarity index 99%
rename from tests/js/spec/views/organizationMemberRow.spec.jsx
rename to tests/js/spec/views/settings/organizationMemberRow.spec.jsx
index d55cbb6e1c..e93909ace5 100644
--- a/tests/js/spec/views/organizationMemberRow.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMemberRow.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow} from 'enzyme';
 
-import OrganizationMemberRow from 'app/views/settings/organization/members/organizationMemberRow';
+import OrganizationMemberRow from 'app/views/settings/organizationMembers/organizationMemberRow';
 
 const findWithText = (wrapper, text) =>
   wrapper.filterWhere(n => n.prop('children') && n.prop('children').includes(text));
diff --git a/tests/js/spec/views/organizationMembersView.spec.jsx b/tests/js/spec/views/settings/organizationMembersView.spec.jsx
similarity index 95%
rename from tests/js/spec/views/organizationMembersView.spec.jsx
rename to tests/js/spec/views/settings/organizationMembersView.spec.jsx
index a86b9392a0..5967a16017 100644
--- a/tests/js/spec/views/organizationMembersView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembersView.spec.jsx
@@ -3,13 +3,13 @@ import React from 'react';
 import {Client} from 'app/api';
 import {mount} from 'enzyme';
 import ConfigStore from 'app/stores/configStore';
-import OrganizationMembersView from 'app/views/settings/organization/members/organizationMembersView';
+import OrganizationMembers from 'app/views/settings/organizationMembers';
 import {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';
 
 jest.mock('app/api');
 jest.mock('app/actionCreators/indicator');
 
-describe('OrganizationMembersView', function() {
+describe('OrganizationMembers', function() {
   let members = TestStubs.Members();
   let currentUser = members[1];
   let defaultProps = {
@@ -83,7 +83,7 @@ describe('OrganizationMembersView', function() {
     });
 
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -115,7 +115,7 @@ describe('OrganizationMembersView', function() {
     });
 
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -146,7 +146,7 @@ describe('OrganizationMembersView', function() {
     });
 
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -178,7 +178,7 @@ describe('OrganizationMembersView', function() {
     });
 
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -211,7 +211,7 @@ describe('OrganizationMembersView', function() {
       },
     });
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -237,7 +237,7 @@ describe('OrganizationMembersView', function() {
       method: 'PUT',
     });
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -270,7 +270,7 @@ describe('OrganizationMembersView', function() {
       method: 'PUT',
     });
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         params={{
           orgId: 'org-id',
@@ -305,7 +305,7 @@ describe('OrganizationMembersView', function() {
     });
     let routerContext = TestStubs.routerContext();
     let wrapper = mount(
-      <OrganizationMembersView
+      <OrganizationMembers
         {...defaultProps}
         location={{}}
         params={{
diff --git a/tests/js/spec/views/organizationProjects.spec.jsx b/tests/js/spec/views/settings/organizationProjects.spec.jsx
similarity index 89%
rename from tests/js/spec/views/organizationProjects.spec.jsx
rename to tests/js/spec/views/settings/organizationProjects.spec.jsx
index 06c5353a0b..09c65b7835 100644
--- a/tests/js/spec/views/organizationProjects.spec.jsx
+++ b/tests/js/spec/views/settings/organizationProjects.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationProjectsViewContainer from 'app/views/settings/organization/projects/organizationProjectsView';
+import OrganizationProjectsContainer from 'app/views/settings/organizationProjects';
 
 describe('OrganizationProjects', function() {
   let org;
@@ -38,7 +38,7 @@ describe('OrganizationProjects', function() {
 
   it('Should render the projects in the store', function() {
     let wrapper = mount(
-      <OrganizationProjectsViewContainer params={{orgId: org.slug}} />,
+      <OrganizationProjectsContainer params={{orgId: org.slug}} />,
       routerContext
     );
     expect(wrapper).toMatchSnapshot();
@@ -62,7 +62,7 @@ describe('OrganizationProjects', function() {
       body: [],
     });
     let wrapper = mount(
-      <OrganizationProjectsViewContainer location={{}} params={{orgId: org.slug}} />,
+      <OrganizationProjectsContainer location={{}} params={{orgId: org.slug}} />,
       routerContext
     );
 
diff --git a/tests/js/spec/views/organizationRateLimits.spec.jsx b/tests/js/spec/views/settings/organizationRateLimits.spec.jsx
similarity index 96%
rename from tests/js/spec/views/organizationRateLimits.spec.jsx
rename to tests/js/spec/views/settings/organizationRateLimits.spec.jsx
index 7426bad9ea..2c00a85ec2 100644
--- a/tests/js/spec/views/organizationRateLimits.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRateLimits.spec.jsx
@@ -2,7 +2,7 @@ import {mount} from 'enzyme';
 import React from 'react';
 
 import {Client} from 'app/api';
-import {OrganizationRateLimits} from 'app/views/settings/organizationRateLimits';
+import OrganizationRateLimits from 'app/views/settings/organizationRateLimits/organizationRateLimits';
 
 const ENDPOINT = '/organizations/org-slug/';
 
diff --git a/tests/js/spec/views/organizationRepositories.spec.jsx b/tests/js/spec/views/settings/organizationRepositories.spec.jsx
similarity index 96%
rename from tests/js/spec/views/organizationRepositories.spec.jsx
rename to tests/js/spec/views/settings/organizationRepositories.spec.jsx
index 9c5d98ac26..2179c1dc61 100644
--- a/tests/js/spec/views/organizationRepositories.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRepositories.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationRepositories from 'app/views/settings/organization/repositories/organizationRepositories';
+import OrganizationRepositories from 'app/views/settings/organizationRepositories/organizationRepositories';
 
 describe('OrganizationRepositories', function() {
   it('renders without providers', function() {
diff --git a/tests/js/spec/views/organizationRepositoriesView.spec.jsx b/tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx
similarity index 61%
rename from tests/js/spec/views/organizationRepositoriesView.spec.jsx
rename to tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx
index b5e50e3cfa..6934605117 100644
--- a/tests/js/spec/views/organizationRepositoriesView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx
@@ -3,14 +3,14 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import OrganizationRepositories from 'app/views/organizationRepositoriesView';
+import OrganizationRepositoriesContainer from 'app/views/settings/organizationRepositories';
 
 const childContextTypes = {
   organization: PropTypes.object,
   location: PropTypes.object,
 };
 
-describe('OrganizationRepositoriesView', function() {
+describe('OrganizationRepositoriesContainer', function() {
   beforeEach(function() {
     Client.clearMockResponses();
   });
@@ -29,14 +29,17 @@ describe('OrganizationRepositoriesView', function() {
       });
 
       it('is loading when initially rendering', function() {
-        let wrapper = shallow(<OrganizationRepositories params={{orgId: 'org-slug'}} />, {
-          context: {
-            router: TestStubs.router(),
-            organization: TestStubs.Organization(),
-            location: TestStubs.location(),
-          },
-          childContextTypes,
-        });
+        let wrapper = shallow(
+          <OrganizationRepositoriesContainer params={{orgId: 'org-slug'}} />,
+          {
+            context: {
+              router: TestStubs.router(),
+              organization: TestStubs.Organization(),
+              location: TestStubs.location(),
+            },
+            childContextTypes,
+          }
+        );
         expect(wrapper).toMatchSnapshot();
       });
     });
diff --git a/tests/js/spec/views/organizationSettingsForm.spec.jsx b/tests/js/spec/views/settings/organizationSettingsForm.spec.jsx
similarity index 93%
rename from tests/js/spec/views/organizationSettingsForm.spec.jsx
rename to tests/js/spec/views/settings/organizationSettingsForm.spec.jsx
index 3bc840873c..0c13221885 100644
--- a/tests/js/spec/views/organizationSettingsForm.spec.jsx
+++ b/tests/js/spec/views/settings/organizationSettingsForm.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import {mount} from 'enzyme';
 import {saveOnBlurUndoMessage} from 'app/actionCreators/indicator';
-import NewOrganizationSettingsForm from 'app/views/settings/organization/general/organizationSettingsForm';
+import OrganizationSettingsForm from 'app/views/settings/organizationGeneralSettings/organizationSettingsForm';
 
 jest.mock('jquery');
 jest.mock('app/actionCreators/indicator');
@@ -27,7 +27,7 @@ describe('OrganizationSettingsForm', function() {
     });
 
     let wrapper = mount(
-      <NewOrganizationSettingsForm
+      <OrganizationSettingsForm
         location={TestStubs.location()}
         orgId={organization.id}
         access={new Set('org:admin')}
diff --git a/tests/js/spec/views/organizationTeams.spec.jsx b/tests/js/spec/views/settings/organizationTeams.spec.jsx
similarity index 100%
rename from tests/js/spec/views/organizationTeams.spec.jsx
rename to tests/js/spec/views/settings/organizationTeams.spec.jsx
