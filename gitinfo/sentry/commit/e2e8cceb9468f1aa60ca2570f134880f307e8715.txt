commit e2e8cceb9468f1aa60ca2570f134880f307e8715
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Wed May 8 12:47:15 2019 -0700

    fix: merge results for key_id and str(key_id) (#13130)
    
    To cover up a data collection bug in the outcomes tracking code.

diff --git a/src/sentry/api/endpoints/project_key_stats.py b/src/sentry/api/endpoints/project_key_stats.py
index e33046a74f..db8dfeff8e 100644
--- a/src/sentry/api/endpoints/project_key_stats.py
+++ b/src/sentry/api/endpoints/project_key_stats.py
@@ -32,9 +32,14 @@ class ProjectKeyStatsEndpoint(ProjectEndpoint, StatsMixin):
              'total'), (tsdb.models.key_total_blacklisted, 'filtered'),
             (tsdb.models.key_total_rejected, 'dropped'),
         ):
-            result = tsdb.get_range(model=model, keys=[key.id], **stat_args)[key.id]
-            for ts, count in result:
-                stats.setdefault(int(ts), {})[name] = count
+            # XXX (alex, 08/05/19) key stats were being stored under either key_id or str(key_id)
+            # so merge both of those back into one stats result.
+            result = tsdb.get_range(model=model, keys=[key.id, six.text_type(key.id)], **stat_args)
+            for key_id, points in six.iteritems(result):
+                for ts, count in points:
+                    bucket = stats.setdefault(int(ts), {})
+                    bucket.setdefault(name, 0)
+                    bucket[name] += count
 
         return Response(
             [
diff --git a/tests/sentry/api/endpoints/test_project_key_stats.py b/tests/sentry/api/endpoints/test_project_key_stats.py
index 3f3b5ae8b5..f9d5945bd7 100644
--- a/tests/sentry/api/endpoints/test_project_key_stats.py
+++ b/tests/sentry/api/endpoints/test_project_key_stats.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import six
+
 from sentry import tsdb
 from sentry.models import ProjectKey
 from sentry.testutils import APITestCase
@@ -29,3 +31,18 @@ class ProjectKeyStatsTest(APITestCase):
         for point in response.data[:-1]:
             assert point['total'] == 0
         assert len(response.data) == 24
+
+    # This test can be removed once the TSDB metrics that were stored
+    # under str(key_id) have expired out of redis.
+    def test_str_key_id(self):
+        tsdb.incr(tsdb.models.key_total_received, self.key.id, count=1)
+        tsdb.incr(tsdb.models.key_total_received, six.text_type(self.key.id), count=1)
+
+        response = self.client.get(self.path)
+        assert response.status_code == 200
+
+        assert response.status_code == 200, response.content
+        assert response.data[-1]['total'] == 2, response.data
+        for point in response.data[:-1]:
+            assert point['total'] == 0
+        assert len(response.data) == 24
