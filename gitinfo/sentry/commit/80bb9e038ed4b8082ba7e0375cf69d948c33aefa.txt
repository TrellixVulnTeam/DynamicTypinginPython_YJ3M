commit 80bb9e038ed4b8082ba7e0375cf69d948c33aefa
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 26 09:44:54 2018 -0700

    feat(api): Support security interfaces fully
    
    - Expose ExpectCT, ExpectStaple, and HPKP in UI
    - Correct hashing on ExpectCT, ExpectStaple, and HPKP to include type
    - Add support for ExpectCT and HPKP samples
    - Add bin/mock-event helper

diff --git a/bin/load-mocks b/bin/load-mocks
index c126015a3d..0aa631e230 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -584,7 +584,6 @@ def main(num_events=1, extra_events=False):
                     },
                 )[0]
 
-
             create_sample_event(
                 project=project,
                 environment=ENVIRONMENTS.next(),
diff --git a/bin/mock-event b/bin/mock-event
new file mode 100755
index 0000000000..4c30ecc289
--- /dev/null
+++ b/bin/mock-event
@@ -0,0 +1,51 @@
+#!/usr/bin/env python
+# isort:skip_file
+from sentry.runner import configure
+configure()
+
+import sys
+
+from django.utils import timezone
+
+from sentry.models import Project
+from sentry.utils.samples import create_sample_event
+
+
+import argparse
+
+
+def main(
+    project,
+    sample_type,
+):
+    org_slug, project_slug = project.split('/', 1)
+
+    project = Project.objects.get(
+        organization__slug=org_slug,
+        slug=project_slug,
+    )
+
+    event = create_sample_event(
+        project=project,
+        platform=sample_type,
+    )
+    if not event:
+        sys.stderr.write('ERR: No event created. Was the sample type valid?\n')
+        sys.exit(1)
+
+    if not project.first_event:
+        project.update(first_event=timezone.now())
+
+    print('> Created event {}'.format(event.event_id))
+
+
+if __name__ == '__main__':
+    parser = argparse.ArgumentParser()
+    parser.add_argument('project')
+    parser.add_argument('sample_type')
+    args = parser.parse_args()
+
+    main(
+        project=args.project,
+        sample_type=args.sample_type,
+    )
diff --git a/src/sentry/data/samples/expectct.json b/src/sentry/data/samples/expectct.json
new file mode 100644
index 0000000000..0b180cdcf2
--- /dev/null
+++ b/src/sentry/data/samples/expectct.json
@@ -0,0 +1,35 @@
+{
+    "message": "Expect-CT failed for 'example.com'",
+    "expectct": {
+        "date_time": "2014-04-06T13:00:50Z",
+        "hostname": "example.com",
+        "port": 443,
+        "effective_expiration_date": "2014-05-01T12:40:50Z",
+        "served_certificate_chain": ["-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"],
+        "validated_certificate_chain": ["-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"],
+        "scts": [
+            {
+                "version": 1,
+                "status": "invalid",
+                "source": "embedded",
+                "serialized_sct": "ABCD=="
+            }
+        ]
+    },
+    "sentry.interfaces.Http": {
+        "url": "https://example.com/welcome/",
+        "headers": [
+            [
+                "Referer",
+                "https://www.google.com/"
+            ],
+            [
+                "User-Agent",
+                "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) coc_coc_browser/51.2.109 Chrome/45.2.2454.109 Safari/537.36"
+            ]
+        ]
+    },
+    "sentry.interfaces.User": {
+        "ip_address": "127.0.0.1"
+    }
+}
diff --git a/src/sentry/data/samples/hpkp.json b/src/sentry/data/samples/hpkp.json
new file mode 100644
index 0000000000..d14f062e11
--- /dev/null
+++ b/src/sentry/data/samples/hpkp.json
@@ -0,0 +1,29 @@
+{
+    "message": "Public key pinning validation failed for 'example.com'",
+    "hpkp": {
+        "date_time": "2014-04-06T13:00:50Z",
+        "hostname": "example.com",
+        "port": 443,
+        "effective_expiration_date": "2014-05-01T12:40:50Z",
+        "include_subdomains": false,
+        "served_certificate_chain": ["-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"],
+        "validated_certificate_chain": ["-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"],
+        "known_pins": ["pin-sha256=\"E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=\""]
+    },
+    "sentry.interfaces.Http": {
+        "url": "https://example.com/welcome/",
+        "headers": [
+            [
+                "Referer",
+                "https://www.google.com/"
+            ],
+            [
+                "User-Agent",
+                "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) coc_coc_browser/51.2.109 Chrome/45.2.2454.109 Safari/537.36"
+            ]
+        ]
+    },
+    "sentry.interfaces.User": {
+        "ip_address": "127.0.0.1"
+    }
+}
diff --git a/src/sentry/interfaces/security.py b/src/sentry/interfaces/security.py
index 35afc4946d..a4869baa36 100644
--- a/src/sentry/interfaces/security.py
+++ b/src/sentry/interfaces/security.py
@@ -170,7 +170,7 @@ class Hpkp(SecurityReport):
         return None
 
     def get_hash(self, is_processed_data=True):
-        return [self.hostname]
+        return ['hpkp', self.hostname]
 
     def get_message(self):
         return "Public key pinning validation failed for '{self.hostname}'".format(self=self)
@@ -234,7 +234,7 @@ class ExpectStaple(SecurityReport):
         return self.hostname
 
     def get_hash(self, is_processed_data=True):
-        return [self.hostname]
+        return ['expect-staple', self.hostname]
 
     def get_message(self):
         return "Expect-Staple failed for '{self.hostname}'".format(self=self)
@@ -296,7 +296,7 @@ class ExpectCT(SecurityReport):
         return self.hostname
 
     def get_hash(self, is_processed_data=True):
-        return [self.hostname]
+        return ['expect-ct', self.hostname]
 
     def get_message(self):
         return "Expect-CT failed for '{self.hostname}'".format(self=self)
diff --git a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
index 7fbe7f915f..09cb57a213 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
@@ -20,7 +20,14 @@ class EventOrGroupHeader extends React.Component {
     data: PropTypes.shape({
       id: PropTypes.string,
       level: PropTypes.string,
-      type: PropTypes.oneOf(['error', 'csp', 'default']).isRequired,
+      type: PropTypes.oneOf([
+        'error',
+        'csp',
+        'hpkp',
+        'expectct',
+        'expectstaple',
+        'default',
+      ]).isRequired,
       title: PropTypes.string,
       metadata: Metadata,
       groupID: PropTypes.string,
@@ -45,6 +52,10 @@ class EventOrGroupHeader extends React.Component {
         return metadata.value;
       case 'csp':
         return metadata.message;
+      case 'expectct':
+      case 'expectstaple':
+      case 'hpkp':
+        return '';
       default:
         return culprit || '';
     }
diff --git a/src/sentry/static/sentry/app/components/eventOrGroupTitle.jsx b/src/sentry/static/sentry/app/components/eventOrGroupTitle.jsx
index 986199f18c..2313248c5a 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupTitle.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupTitle.jsx
@@ -5,7 +5,14 @@ import {Metadata} from '../proptypes';
 class EventOrGroupTitle extends React.Component {
   static propTypes = {
     data: PropTypes.shape({
-      type: PropTypes.oneOf(['error', 'csp', 'default']).isRequired,
+      type: PropTypes.oneOf([
+        'error',
+        'csp',
+        'hpkp',
+        'expectct',
+        'expectstaple',
+        'default',
+      ]).isRequired,
       title: PropTypes.string,
       metadata: Metadata.isRequired,
       culprit: PropTypes.string,
@@ -23,6 +30,9 @@ class EventOrGroupTitle extends React.Component {
     } else if (type == 'csp') {
       title = metadata.directive;
       subtitle = metadata.uri;
+    } else if (type === 'expectct' || type === 'expectstaple' || type === 'hpkp') {
+      title = metadata.message;
+      subtitle = metadata.origin;
     } else if (type == 'default') {
       title = metadata.title;
     }
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index db6ace3df4..4aae52e0d4 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -27,6 +27,7 @@ import StacktraceInterface from './interfaces/stacktrace';
 import TemplateInterface from './interfaces/template';
 import CspInterface from './interfaces/csp';
 import BreadcrumbsInterface from './interfaces/breadcrumbs';
+import GenericInterface from './interfaces/generic';
 import ThreadsInterface from './interfaces/threads';
 import DebugMetaInterface from './interfaces/debugmeta';
 
@@ -37,6 +38,9 @@ export const INTERFACES = {
   stacktrace: StacktraceInterface,
   template: TemplateInterface,
   csp: CspInterface,
+  expectct: GenericInterface,
+  expectstaple: GenericInterface,
+  hpkp: GenericInterface,
   breadcrumbs: BreadcrumbsInterface,
   threads: ThreadsInterface,
   debugmeta: DebugMetaInterface,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
index c2aa6e8478..5e9af517d9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
@@ -20,7 +20,7 @@ function getView(view, data) {
   }
 }
 
-class CSPInterface extends React.Component {
+export default class CspInterface extends React.Component {
   static propTypes = {
     group: SentryTypes.Group.isRequired,
     event: SentryTypes.Event.isRequired,
@@ -91,5 +91,3 @@ class CSPInterface extends React.Component {
     );
   }
 }
-
-export default CSPInterface;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx b/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
new file mode 100644
index 0000000000..a8b60f53eb
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
@@ -0,0 +1,81 @@
+import PropTypes from 'prop-types';
+import React, {Component} from 'react';
+import SentryTypes from '../../../proptypes';
+
+import GroupEventDataSection from '../eventDataSection';
+import KeyValueList from './keyValueList';
+import {t} from '../../../locale';
+import {objectToArray} from '../../../utils';
+
+function getView(view, data) {
+  switch (view) {
+    case 'report':
+      return <KeyValueList data={objectToArray(data)} isContextData={true} />;
+    case 'raw':
+      return <pre>{JSON.stringify({'csp-report': data}, null, 2)}</pre>;
+    default:
+      throw new TypeError(`Invalid view: ${view}`);
+  }
+}
+export default class GenericInterface extends Component {
+  static propTypes = {
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
+    type: PropTypes.string.isRequired,
+    data: PropTypes.object.isRequired,
+  };
+
+  constructor(props) {
+    super(props);
+    let {data} = props;
+    this.state = {
+      view: 'report',
+      data,
+    };
+  }
+
+  toggleView = value => {
+    this.setState({
+      view: value,
+    });
+  };
+
+  render() {
+    let {view, data} = this.state;
+    let {group, event, type} = this.props;
+
+    let title = (
+      <div>
+        <div className="btn-group">
+          <a
+            className={(view === 'report' ? 'active' : '') + ' btn btn-default btn-sm'}
+            onClick={this.toggleView.bind(this, 'report')}
+          >
+            {t('Report')}
+          </a>
+          <a
+            className={(view === 'raw' ? 'active' : '') + ' btn btn-default btn-sm'}
+            onClick={this.toggleView.bind(this, 'raw')}
+          >
+            {t('Raw')}
+          </a>
+        </div>
+        <h3>{t('Report')}</h3>
+      </div>
+    );
+
+    let children = getView(view, data);
+
+    return (
+      <GroupEventDataSection
+        group={group}
+        event={event}
+        type={type}
+        title={title}
+        wrapTitle={false}
+      >
+        {children}
+      </GroupEventDataSection>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index 32520380e1..606d8e187f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -167,6 +167,10 @@ const GroupDetails = createReactClass({
         return group.metadata.type || group.metadata.value;
       case 'csp':
         return group.metadata.message;
+      case 'expectct':
+      case 'expectstaple':
+      case 'hpkp':
+        return group.metadata.message;
       case 'default':
         return group.metadata.title;
       default:
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index 6596fbbe91..beb4c90226 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -112,16 +112,16 @@ def load_data(platform, default=None, timestamp=None, sample_name=None):
         if not platform:
             continue
 
-        try:
-            sample_name = sample_name or INTEGRATION_ID_TO_PLATFORM_DATA[platform]['name']
-        except KeyError:
-            continue
-
         json_path = os.path.join(DATA_ROOT, 'samples', '%s.json' % (platform.encode('utf-8'), ))
-
         if not os.path.exists(json_path):
             continue
 
+        if not sample_name:
+            try:
+                sample_name = INTEGRATION_ID_TO_PLATFORM_DATA[platform]['name']
+            except KeyError:
+                pass
+
         with open(json_path) as fp:
             data = json.loads(fp.read())
             break
@@ -129,11 +129,11 @@ def load_data(platform, default=None, timestamp=None, sample_name=None):
     if data is None:
         return
 
-    if platform == 'csp':
+    if platform in ('csp', 'hkpk', 'expectct', 'expectstaple'):
         return data
 
     data['platform'] = platform
-    data['message'] = 'This is an example %s exception' % (sample_name, )
+    data['message'] = 'This is an example %s exception' % (sample_name or platform, )
     data['sentry.interfaces.User'] = generate_user(
         ip_address='127.0.0.1',
         username='sentry',
diff --git a/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
index 7805dd0c53..a8719b22dd 100644
--- a/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
@@ -771,7 +771,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                           >
                             <Title>
                               <div
-                                className="css-1dqh62j-Title css-hv83ix0"
+                                className="css-1dqh62j-Title css-1yd4oy0"
                               >
                                 <ProjectLink
                                   style={null}
@@ -916,7 +916,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                             </Title>
                             <Message>
                               <div
-                                className="css-ogpcmq-Message css-hv83ix1"
+                                className="css-ogpcmq-Message css-1yd4oy1"
                               >
                                 Cannot read property 'assignedTo' of undefined
                               </div>
@@ -1220,7 +1220,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                           >
                             <Title>
                               <div
-                                className="css-1dqh62j-Title css-hv83ix0"
+                                className="css-1dqh62j-Title css-1yd4oy0"
                               >
                                 <ProjectLink
                                   style={null}
@@ -1365,7 +1365,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                             </Title>
                             <Message>
                               <div
-                                className="css-ogpcmq-Message css-hv83ix1"
+                                className="css-ogpcmq-Message css-1yd4oy1"
                               >
                                 Cannot read property 'assignedTo' of undefined
                               </div>
@@ -2144,7 +2144,7 @@ exports[`Issues -> Merged View renders with mocked data 2`] = `
                           >
                             <Title>
                               <div
-                                className="css-1dqh62j-Title css-hv83ix0"
+                                className="css-1dqh62j-Title css-1yd4oy0"
                               >
                                 <ProjectLink
                                   style={null}
@@ -2289,7 +2289,7 @@ exports[`Issues -> Merged View renders with mocked data 2`] = `
                             </Title>
                             <Message>
                               <div
-                                className="css-ogpcmq-Message css-hv83ix1"
+                                className="css-ogpcmq-Message css-1yd4oy1"
                               >
                                 Cannot read property 'assignedTo' of undefined
                               </div>
@@ -2593,7 +2593,7 @@ exports[`Issues -> Merged View renders with mocked data 2`] = `
                           >
                             <Title>
                               <div
-                                className="css-1dqh62j-Title css-hv83ix0"
+                                className="css-1dqh62j-Title css-1yd4oy0"
                               >
                                 <ProjectLink
                                   style={null}
@@ -2738,7 +2738,7 @@ exports[`Issues -> Merged View renders with mocked data 2`] = `
                             </Title>
                             <Message>
                               <div
-                                className="css-ogpcmq-Message css-hv83ix1"
+                                className="css-ogpcmq-Message css-1yd4oy1"
                               >
                                 Cannot read property 'assignedTo' of undefined
                               </div>
