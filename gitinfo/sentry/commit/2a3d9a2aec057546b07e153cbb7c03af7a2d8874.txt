commit 2a3d9a2aec057546b07e153cbb7c03af7a2d8874
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Mar 21 13:25:31 2018 -0700

    feat(ui): Move Auth Providers list to react (#7583)
    
    * change Auth Provider configuration to be in "modal" template

diff --git a/src/sentry/auth/helper.py b/src/sentry/auth/helper.py
index 88187d2934..0f4cebc2e0 100644
--- a/src/sentry/auth/helper.py
+++ b/src/sentry/auth/helper.py
@@ -749,7 +749,7 @@ class AuthHelper(object):
         self.clear_session()
 
         next_uri = reverse(
-            'sentry-organization-auth-settings', args=[
+            'sentry-organization-auth-provider-settings', args=[
                 self.organization.slug,
             ]
         )
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
index 4cb2fb5ff2..fc7a09a647 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
@@ -8,20 +8,6 @@ import OrganizationState from '../../mixins/organizationState';
 import HookStore from '../../stores/hookStore';
 import {t} from '../../locale';
 
-let RouterOrBrowserLink = ({isRouter, path, ...props}) =>
-  isRouter ? (
-    <ListLink to={path} {...props} />
-  ) : (
-    <li>
-      <a href={path} {...props} />
-    </li>
-  );
-
-RouterOrBrowserLink.propTypes = {
-  isRouter: PropTypes.bool,
-  path: PropTypes.string.isRequired,
-};
-
 const OrgSettingsMenu = ({access, org, features}) => {
   // Everything requires `org:write` or more permission except
   // "Members" which requires `member:read`
@@ -50,12 +36,7 @@ const OrgSettingsMenu = ({access, org, features}) => {
           )}
         {features.has('sso') &&
           access.has('org:admin') && (
-            <RouterOrBrowserLink
-              isRouter={false}
-              path={`/organizations/${org.slug}/auth/`}
-            >
-              {t('Auth')}
-            </RouterOrBrowserLink>
+            <ListLink to={`${pathPrefix}/auth/`}>{t('Auth')}</ListLink>
           )}
 
         {access.has('org:admin') &&
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index a8de45f590..4f122bddda 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -41,7 +41,6 @@ import OrganizationActivity from './views/organizationActivity';
 import OrganizationApiKeyDetailsView from './views/settings/organization/apiKeys/organizationApiKeyDetailsView';
 import OrganizationApiKeysView from './views/settings/organization/apiKeys/organizationApiKeysView';
 import OrganizationAuditLogView from './views/settings/organization/auditLog/auditLogView';
-import OrganizationAuthView from './views/settings/organization/auth/organizationAuthView';
 import OrganizationCommits from './views/organizationCommits';
 import OrganizationContext from './views/organizationContext';
 import OrganizationCreate from './views/organizationCreate';
@@ -379,7 +378,7 @@ const projectSettingsRoutes = (
       componentPromise={() =>
         import(/* webpackChunkName: "OrganizationIntegrationConfig" */ './views/organizationIntegrationConfig')}
       component={errorHandler(LazyLoad)}
-    />,
+    />
     <Route
       path="install/"
       name="Basic Configuration"
@@ -445,7 +444,9 @@ function routes() {
       <Route
         path="auth/"
         name="Auth Providers"
-        component={errorHandler(OrganizationAuthView)}
+        componentPromise={() =>
+          import(/*webpackChunkName: OrganizationAuthView*/ './views/settings/organization/auth/organizationAuthView')}
+        component={errorHandler(LazyLoad)}
       />
 
       <Route path="members/" name="Members">
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx b/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx
index afbb5969d5..2ed2f21acd 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthList.jsx
@@ -1,10 +1,18 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import {CSRF_COOKIE_NAME} from '../../../../constants';
 import {t, tct} from '../../../../locale';
+import EmptyMessage from '../../components/emptyMessage';
 import ExternalLink from '../../../../components/externalLink';
-import SentryTypes from '../../../../proptypes';
+import Panel from '../../components/panel';
+import PanelAlert from '../../components/panelAlert';
+import PanelBody from '../../components/panelBody';
+import PanelHeader from '../../components/panelHeader';
 import ProviderItem from './providerItem';
+import SentryTypes from '../../../../proptypes';
+import SettingsPageHeader from '../../components/settingsPageHeader';
+import getCookie from '../../../../utils/getCookie';
 
 class OrganizationAuthList extends React.Component {
   static contextTypes = {
@@ -12,24 +20,21 @@ class OrganizationAuthList extends React.Component {
   };
 
   static propTypes = {
-    onConfigure: PropTypes.func,
     providerList: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),
   };
 
   render() {
-    let {providerList, onConfigure} = this.props;
+    let {organization} = this.context;
+    let {providerList} = this.props;
     let hasProviderList = providerList && !!providerList.length;
 
     return (
       <div className="sso">
-        <h2>{t('Authentication')}</h2>
-
-        <div className="box">
-          <div className="box-header">
-            <h3>{t('Choose a provider')}</h3>
-          </div>
-          <div className="box-content with-padding">
-            <p>
+        <SettingsPageHeader title="Authentication" />
+        <Panel>
+          <PanelHeader>{t('Choose a provider')}</PanelHeader>
+          <PanelBody>
+            <PanelAlert m={0} mb={0} type="info">
               {tct(
                 `Get started with Single Sign-on for your organization by selecting a
               provider. For more information on SSO please see our [link:documentation]`,
@@ -37,28 +42,36 @@ class OrganizationAuthList extends React.Component {
                   link: <ExternalLink href="https://docs.sentry.io/learn/sso/" />,
                 }
               )}.
-            </p>
+            </PanelAlert>
 
-            {hasProviderList && (
-              <ul className="simple-list list-unstyled">
-                {providerList.map(([providerKey, providerName]) => (
+            <form
+              action={`/organizations/${organization.slug}/auth/configure/`}
+              method="POST"
+            >
+              <input
+                type="hidden"
+                name="csrfmiddlewaretoken"
+                value={getCookie(CSRF_COOKIE_NAME)}
+              />
+              <input type="hidden" name="init" value="1" />
+
+              {hasProviderList &&
+                providerList.map(([providerKey, providerName]) => (
                   <ProviderItem
                     key={providerKey}
                     providerKey={providerKey}
                     providerName={providerName}
-                    onConfigure={onConfigure}
                   />
                 ))}
-              </ul>
-            )}
+            </form>
 
             {!hasProviderList && (
-              <p style={{padding: 50, textAlign: 'center'}}>
+              <EmptyMessage style={{padding: 50, textAlign: 'center'}}>
                 {t('No authentication providers are available.')}
-              </p>
+              </EmptyMessage>
             )}
-          </div>
-        </div>
+          </PanelBody>
+        </Panel>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx b/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx
index 922e671061..3205076d49 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/auth/organizationAuthView.jsx
@@ -1,15 +1,9 @@
-import {Flex, Box} from 'grid-emotion';
 import React from 'react';
 
 import {t} from '../../../../locale';
 import IndicatorStore from '../../../../stores/indicatorStore';
-// import OrganizationAuthList from './organizationAuthList';
-// import OrganizationAuthProvider from './organizationAuthProvider';
+import OrganizationAuthList from './organizationAuthList';
 import OrganizationSettingsView from '../../../organizationSettingsView';
-import Panel from '../../components/panel';
-import PanelBody from '../../components/panelBody';
-import PanelHeader from '../../components/panelHeader';
-import SettingsPageHeader from '../../components/settingsPageHeader';
 import SentryTypes from '../../../../proptypes';
 
 class OrganizationAuthView extends OrganizationSettingsView {
@@ -17,6 +11,13 @@ class OrganizationAuthView extends OrganizationSettingsView {
     organization: SentryTypes.Organization,
   };
 
+  componentWillUpdate(nextProps, nextState) {
+    if (nextState.provider) {
+      // If SSO provider is configured, keep showing loading while we redirect to django configuration view
+      window.location.assign(`/organizations/${this.props.params.orgId}/auth/configure/`);
+    }
+  }
+
   getEndpoints() {
     return [
       ['providerList', `/organizations/${this.props.params.orgId}/auth-providers/`],
@@ -87,34 +88,21 @@ class OrganizationAuthView extends OrganizationSettingsView {
   };
 
   renderBody() {
-    let {params} = this.props;
-    let {orgId} = params;
-    // let {providerList, provider, disableBusy, sendRemindersBusy} = this.state;
-
-    return (
-      <div>
-        <SettingsPageHeader title="Authentication" />
-        <Panel>
-          <PanelHeader disablePadding>
-            <Flex>
-              <Box px={2} flex={1}>
-                {t('Providers')}
-              </Box>
-            </Flex>
-          </PanelHeader>
-          <PanelBody>
-            <Box p={2}>
-              Not ready yet, go to <a href={`/organizations/${orgId}/auth/`}>
-                old page
-              </a>{' '}
-              for now.
-            </Box>
-          </PanelBody>
-        </Panel>
-      </div>
-    );
+    let {providerList, provider} = this.state;
+
+    if (!provider) {
+      return (
+        <OrganizationAuthList
+          providerList={providerList}
+          onConfigure={this.handleConfigure}
+        />
+      );
+    }
 
-    /*
+    // If SSO provider is configured, keep showing loading while we redirect to django configuration view
+    return this.renderLoading();
+
+    /* For now this is in django
     if (provider) {
       return (
         <OrganizationAuthProvider
@@ -127,13 +115,6 @@ class OrganizationAuthView extends OrganizationSettingsView {
         />
       );
     }
-
-    return (
-      <OrganizationAuthList
-        providerList={providerList}
-        onConfigure={this.handleConfigure}
-      />
-    );
   */
   }
 }
diff --git a/src/sentry/static/sentry/app/views/settings/organization/auth/providerItem.jsx b/src/sentry/static/sentry/app/views/settings/organization/auth/providerItem.jsx
index 7e89d1a4bb..7cd5ec8150 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/auth/providerItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/auth/providerItem.jsx
@@ -1,8 +1,11 @@
+import {Box, Flex} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 
 import {t, tct} from '../../../../locale';
 import Button from '../../../../components/buttons/button';
+import PanelItem from '../../components/panelItem';
 
 export default class ProviderItem extends React.PureComponent {
   static propTypes = {
@@ -16,23 +19,48 @@ export default class ProviderItem extends React.PureComponent {
   };
 
   handleConfigure = e => {
-    this.props.onConfigure(this.props.providerKey, e);
+    if (typeof this.props.onConfigure === 'function') {
+      this.props.onConfigure(this.props.providerKey, e);
+    }
   };
 
   render() {
     let {providerKey, providerName} = this.props;
     return (
-      <li key={providerKey}>
-        <div className={`provider-logo ${providerName.toLowerCase()}`} />
-        <Button onClick={this.handleConfigure} className="pull-right">
+      <PanelItem align="center">
+        <Flex flex="1">
+          <ProviderLogo className={`provider-logo ${providerName.toLowerCase()}`} />
+          <Box flex="1">
+            <ProviderName>{providerName}</ProviderName>
+            <div>
+              {tct('Enable your organization to sign in with [providerName]', {
+                providerName,
+              })}
+              .
+            </div>
+          </Box>
+        </Flex>
+
+        <Button
+          type="submit"
+          name="provider"
+          value={providerKey}
+          onClick={this.handleConfigure}
+        >
           {t('Configure')}
         </Button>
-        <h4>{providerName}</h4>
-        <p>
-          {tct('Enable your organization to sign in with [providerName]', {providerName})}
-          .
-        </p>
-      </li>
+      </PanelItem>
     );
   }
 }
+
+const ProviderName = styled.div`
+  font-size: 22px;
+`;
+
+const ProviderLogo = styled.div`
+  height: 48px;
+  width: 48px;
+  border-radius: 3px;
+  top: auto;
+`;
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index f3e882c8aa..fa6016447d 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -55,7 +55,12 @@ body.narrow {
     max-width: 860px;
 
     .box-header {
-      padding: 15px 30px 10px;
+      padding: 15px 30px 12px;
+
+      .logo-with-action {
+        display: flex;
+        align-items: center;
+      }
 
       a {
         font-size: 20px;
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 558278a9b1..a0e1fa354e 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -375,79 +375,6 @@
   }
 }
 
-/**
-* SSO
-* ============================================================================
-*/
-
-.sso {
-  h3 {
-    margin: 0 0 20px;
-  }
-
-  h4 {
-    margin: 0 0 3px;
-    line-height: 1.2;
-  }
-
-  .simple-list {
-    margin-bottom: 0;
-
-    li {
-      position: relative;
-      border-top: 1px solid @trim;
-      padding: 18px 0 0 60px;
-
-      button {
-        margin-top: 8px;
-      }
-
-      .provider-logo {
-        position: absolute;
-        left: 0;
-        top: 20px;
-        .square(48px);
-        border-radius: 3px;
-      }
-    }
-  }
-}
-
-// Project list
-table.project-list {
-  border: 0;
-  margin-bottom: 0;
-  font-size: 16px;
-
-  h5 a {
-    color: @gray-darker;
-
-    &:hover {
-      color: @gray-darkest;
-    }
-  }
-
-  tbody tr {
-    td {
-      border: 0;
-      padding: 15px 20px !important;
-      height: 55px;
-      width: 150px;
-
-      &:first-child {
-        width: auto;
-      }
-
-      &.project-chart {
-        width: 210px;
-        .barchart {
-          height: 20px;
-        }
-      }
-    }
-  }
-}
-
 /**
 * API Keys
 * ============================================================================
diff --git a/src/sentry/templates/sentry/bases/modal.html b/src/sentry/templates/sentry/bases/modal.html
index 2025a1d066..cc6a0eb36c 100644
--- a/src/sentry/templates/sentry/bases/modal.html
+++ b/src/sentry/templates/sentry/bases/modal.html
@@ -19,7 +19,7 @@
             </div>
           {% endif %}
         {% endblock %}
-        <a href="{% block modal_header_link %}/{% endblock %}">
+        <a class="logo-with-action" href="{% block modal_header_link %}/{% endblock %}">
           {% if request.user.is_authenticated %}
             <span class="icon-sentry-logo"></span>
           {% else %}
diff --git a/src/sentry/templates/sentry/organization-auth-provider-settings.html b/src/sentry/templates/sentry/organization-auth-provider-settings.html
index 57d936233b..81ff82a149 100644
--- a/src/sentry/templates/sentry/organization-auth-provider-settings.html
+++ b/src/sentry/templates/sentry/organization-auth-provider-settings.html
@@ -1,9 +1,13 @@
-{% extends "sentry/bases/organization.html" %}
+{% extends "sentry/bases/modal.html" %}
 
 {% load crispy_forms_tags %}
 {% load i18n %}
 
-{% block org_auth_settings_nav %}active{% endblock %}
+{% block title %}{% trans "Auth" %} | {{ block.super }}{% endblock %}
+
+{% block modal_header_extra %}
+<span style="font-size: 16px;margin-left: 6px;"> Back to Organization</span>
+{% endblock %}
 
 {% block main %}
   <h3>{{ provider_name }} Authentication</h3>
diff --git a/src/sentry/templates/sentry/organization-auth-settings.html b/src/sentry/templates/sentry/organization-auth-settings.html
deleted file mode 100644
index f4da554eef..0000000000
--- a/src/sentry/templates/sentry/organization-auth-settings.html
+++ /dev/null
@@ -1,39 +0,0 @@
-{% extends "sentry/bases/organization.html" %}
-
-{% load i18n %}
-
-{% block title %}{% trans "Auth" %} | {{ block.super }}{% endblock %}
-
-{% block org_auth_settings_nav %}active{% endblock %}
-
-{% block main %}
-<div class="sso">
-  <h2>Authentication</h2>
-
-  <div class="box">
-    <div class="box-header"><h3>Choose a provider</h3></div>
-      <div class="box-content with-padding">
-
-      <p>Get started with Single Sign-on for your organization by selecting a provider. For more information on SSO please see our <a href="https://docs.sentry.io/learn/sso/">documentation</a>.</p>
-
-      {% if provider_list %}
-        <form method="POST">
-          {% csrf_token %}
-          <input type="hidden" name="init" value="1" />
-          <ul class="simple-list list-unstyled">
-            {% for provider_key, provider_name in provider_list %}
-              <li>
-                <div class="provider-logo {{ provider_name | lower }}"></div>
-                <button type="submit" name="provider" value="{{ provider_key }}" class="btn btn-default pull-right">Configure</button>
-                <h4>{{ provider_name }}</h4>
-                <p>Enable your organization to sign in with {{ provider_name }}.</p>
-              </li>
-            {% endfor %}
-          </ul>
-        </form>
-      {% else %}
-        <p style="padding: 50px; text-align: center;">No authentication providers are available.</p>
-      {% endif %}
-    </div>
-  </div>
-{% endblock %}
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index d26edb6fdd..25ae96046f 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -11,7 +11,6 @@ from django.utils.translation import ugettext_lazy as _
 from sentry import features, roles
 from sentry.auth import manager
 from sentry.auth.helper import AuthHelper
-from sentry.auth.providers.saml2 import SAML2Provider, HAS_SAML2
 from sentry.models import AuditLogEntryEvent, AuthProvider, OrganizationMember, User
 from sentry.plugins import Response
 from sentry.tasks.auth import email_missing_links, email_unlink_notifications
@@ -104,7 +103,10 @@ class OrganizationAuthSettingsView(OrganizationView):
                     OK_REMINDERS_SENT,
                 )
 
-                next_uri = reverse('sentry-organization-auth-settings', args=[organization.slug])
+                next_uri = reverse(
+                    'sentry-organization-auth-provider-settings',
+                    args=[
+                        organization.slug])
                 return self.redirect(next_uri)
 
         form = AuthProviderSettingsForm(
@@ -202,20 +204,7 @@ class OrganizationAuthSettingsView(OrganizationView):
             # render first time setup view
             return helper.current_step()
 
-        provider_list = []
-
-        for k, v in manager:
-            if issubclass(v, SAML2Provider) and not HAS_SAML2:
-                continue
-
-            feature = v.required_feature
-            if feature and not features.has(feature, organization, actor=request.user):
-                continue
-
-            provider_list.append((k, v.name))
-
-        context = {
-            'provider_list': provider_list,
-        }
-
-        return self.respond('sentry/organization-auth-settings.html', context)
+        # Otherwise user is in bad state since frontend/react should handle this case
+        return HttpResponseRedirect(
+            reverse('sentry-organization-home', args=[organization.slug])
+        )
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index bc05e06162..0bbe25bdb2 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -374,9 +374,14 @@ urlpatterns += patterns(
     ),
     url(
         r'^organizations/(?P<organization_slug>[\w_-]+)/auth/$',
-        OrganizationAuthSettingsView.as_view(),
+        react_page_view,
         name='sentry-organization-auth-settings'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[\w_-]+)/auth/configure/$',
+        OrganizationAuthSettingsView.as_view(),
+        name='sentry-organization-auth-provider-settings'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[\w_-]+)/integrations/(?P<provider_id>[\w_-]+)/setup/$',
         OrganizationIntegrationSetupView.as_view()
diff --git a/tests/js/spec/views/__snapshots__/organizationAuthList.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationAuthList.spec.jsx.snap
index 2b973646c7..8084a2a0ed 100644
--- a/tests/js/spec/views/__snapshots__/organizationAuthList.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationAuthList.spec.jsx.snap
@@ -4,23 +4,23 @@ exports[`OrganizationAuthList renders 1`] = `
 <div
   className="sso"
 >
-  <h2>
-    Authentication
-  </h2>
-  <div
-    className="box"
-  >
-    <div
-      className="box-header"
+  <SettingsPageHeading
+    title="Authentication"
+  />
+  <Panel>
+    <PanelHeader>
+      Choose a provider
+    </PanelHeader>
+    <PanelBody
+      direction="column"
+      disablePadding={true}
+      flex={false}
     >
-      <h3>
-        Choose a provider
-      </h3>
-    </div>
-    <div
-      className="box-content with-padding"
-    >
-      <p>
+      <WithTheme(PanelAlert)
+        m={0}
+        mb={0}
+        type="info"
+      >
         <span
           key="4"
         >
@@ -44,19 +44,30 @@ exports[`OrganizationAuthList renders 1`] = `
           </ExternalLink>
         </span>
         .
-      </p>
-      <ul
-        className="simple-list list-unstyled"
+      </WithTheme(PanelAlert)>
+      <form
+        action="/organizations/org-slug/auth/configure/"
+        method="POST"
       >
+        <input
+          name="csrfmiddlewaretoken"
+          type="hidden"
+          value={null}
+        />
+        <input
+          name="init"
+          type="hidden"
+          value="1"
+        />
         <ProviderItem
           key="dummy"
           onConfigure={[Function]}
           providerKey="dummy"
           providerName="Dummy"
         />
-      </ul>
-    </div>
-  </div>
+      </form>
+    </PanelBody>
+  </Panel>
 </div>
 `;
 
@@ -64,23 +75,23 @@ exports[`OrganizationAuthList renders with no providers 1`] = `
 <div
   className="sso"
 >
-  <h2>
-    Authentication
-  </h2>
-  <div
-    className="box"
-  >
-    <div
-      className="box-header"
-    >
-      <h3>
-        Choose a provider
-      </h3>
-    </div>
-    <div
-      className="box-content with-padding"
+  <SettingsPageHeading
+    title="Authentication"
+  />
+  <Panel>
+    <PanelHeader>
+      Choose a provider
+    </PanelHeader>
+    <PanelBody
+      direction="column"
+      disablePadding={true}
+      flex={false}
     >
-      <p>
+      <WithTheme(PanelAlert)
+        m={0}
+        mb={0}
+        type="info"
+      >
         <span
           key="4"
         >
@@ -104,8 +115,23 @@ exports[`OrganizationAuthList renders with no providers 1`] = `
           </ExternalLink>
         </span>
         .
-      </p>
-      <p
+      </WithTheme(PanelAlert)>
+      <form
+        action="/organizations/org-slug/auth/configure/"
+        method="POST"
+      >
+        <input
+          name="csrfmiddlewaretoken"
+          type="hidden"
+          value={null}
+        />
+        <input
+          name="init"
+          type="hidden"
+          value="1"
+        />
+      </form>
+      <EmptyMessage
         style={
           Object {
             "padding": 50,
@@ -114,8 +140,8 @@ exports[`OrganizationAuthList renders with no providers 1`] = `
         }
       >
         No authentication providers are available.
-      </p>
-    </div>
-  </div>
+      </EmptyMessage>
+    </PanelBody>
+  </Panel>
 </div>
 `;
diff --git a/tests/js/spec/views/organizationAuthList.spec.jsx b/tests/js/spec/views/organizationAuthList.spec.jsx
index 858769d8cd..6adf0a2000 100644
--- a/tests/js/spec/views/organizationAuthList.spec.jsx
+++ b/tests/js/spec/views/organizationAuthList.spec.jsx
@@ -1,14 +1,16 @@
 import React from 'react';
 import {shallow} from 'enzyme';
 
-import OrganizationAuthList
-  from 'app/views/settings/organization/auth/organizationAuthList';
+import OrganizationAuthList from 'app/views/settings/organization/auth/organizationAuthList';
 
 jest.mock('jquery');
 
 describe('OrganizationAuthList', function() {
   it('renders with no providers', function() {
-    let wrapper = shallow(<OrganizationAuthList providerList={[]} />);
+    let wrapper = shallow(
+      <OrganizationAuthList providerList={[]} />,
+      TestStubs.routerContext()
+    );
 
     expect(wrapper).toMatchSnapshot();
   });
@@ -19,7 +21,8 @@ describe('OrganizationAuthList', function() {
         orgId="org-slug"
         onSendReminders={() => {}}
         providerList={TestStubs.AuthProviders()}
-      />
+      />,
+      TestStubs.routerContext()
     );
 
     expect(wrapper).toMatchSnapshot();
diff --git a/tests/sentry/web/frontend/test_auth_saml2.py b/tests/sentry/web/frontend/test_auth_saml2.py
index 9b623112fb..dc06e7fcbd 100644
--- a/tests/sentry/web/frontend/test_auth_saml2.py
+++ b/tests/sentry/web/frontend/test_auth_saml2.py
@@ -83,7 +83,7 @@ class AuthSAML2Test(AuthProviderTestCase):
 
     @fixture
     def setup_path(self):
-        return reverse('sentry-organization-auth-settings', args=['saml2-org'])
+        return reverse('sentry-organization-auth-provider-settings', args=['saml2-org'])
 
     def test_redirects_to_idp(self):
         resp = self.client.post(self.login_path, {'init': True})
diff --git a/tests/sentry/web/frontend/test_organization_auth_settings.py b/tests/sentry/web/frontend/test_organization_auth_settings.py
index 08d6de6b8b..3d063aa982 100644
--- a/tests/sentry/web/frontend/test_organization_auth_settings.py
+++ b/tests/sentry/web/frontend/test_organization_auth_settings.py
@@ -10,7 +10,20 @@ from sentry.testutils import AuthProviderTestCase, PermissionTestCase
 class OrganizationAuthSettingsPermissionTest(PermissionTestCase):
     def setUp(self):
         super(OrganizationAuthSettingsPermissionTest, self).setUp()
-        self.path = reverse('sentry-organization-auth-settings', args=[self.organization.slug])
+        self.auth_provider = AuthProvider.objects.create(
+            organization=self.organization,
+            provider='dummy',
+        )
+        AuthIdentity.objects.create(
+            user=self.user,
+            ident='foo',
+            auth_provider=self.auth_provider,
+        )
+        self.login_as(self.user, organization_id=self.organization.id)
+        self.path = reverse(
+            'sentry-organization-auth-provider-settings',
+            args=[
+                self.organization.slug])
 
     def test_teamless_admin_cannot_load(self):
         with self.feature('organizations:sso'):
@@ -25,32 +38,36 @@ class OrganizationAuthSettingsPermissionTest(PermissionTestCase):
             self.assert_role_cannot_access(self.path, 'manager')
 
     def test_owner_can_load(self):
-        with self.feature('organizations:sso'):
-            self.assert_owner_can_access(self.path)
-
-
-class OrganizationAuthSettingsTest(AuthProviderTestCase):
-    def test_renders_with_context(self):
-        organization = self.create_organization(name='foo', owner=self.user)
-
-        path = reverse('sentry-organization-auth-settings', args=[organization.slug])
-
-        self.login_as(self.user)
+        user = self.create_user(is_superuser=False)
+        self.create_member(
+            user=user,
+            organization=self.organization,
+            role="owner",
+            teams=[self.team],
+        )
+        AuthIdentity.objects.create(
+            user=user,
+            ident='foo2',
+            auth_provider=self.auth_provider,
+        )
+        om = OrganizationMember.objects.get(
+            user=user,
+            organization=self.organization,
+        )
+        setattr(om.flags, 'sso:linked', True)
+        om.save()
 
+        self.login_as(user, organization_id=self.organization.id)
         with self.feature('organizations:sso'):
-            resp = self.client.get(path)
-
-        assert resp.status_code == 200
-
-        self.assertTemplateUsed(resp, 'sentry/organization-auth-settings.html')
+            resp = self.client.get(self.path)
+            assert resp.status_code == 200
 
-        assert resp.context['organization'] == organization
-        assert 'dummy' in [k for k, v in resp.context['provider_list']]
 
+class OrganizationAuthSettingsTest(AuthProviderTestCase):
     def test_can_start_auth_flow(self):
         organization = self.create_organization(name='foo', owner=self.user)
 
-        path = reverse('sentry-organization-auth-settings', args=[organization.slug])
+        path = reverse('sentry-organization-auth-provider-settings', args=[organization.slug])
 
         self.login_as(self.user)
 
@@ -64,12 +81,15 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
         user = self.create_user('bar@example.com')
         organization = self.create_organization(name='foo', owner=user)
 
-        base_path = reverse('sentry-organization-auth-settings', args=[organization.slug])
+        configure_path = reverse(
+            'sentry-organization-auth-provider-settings',
+            args=[
+                organization.slug])
 
         self.login_as(user)
 
         with self.feature('organizations:sso'):
-            resp = self.client.post(base_path, {'provider': 'dummy', 'init': True})
+            resp = self.client.post(configure_path, {'provider': 'dummy', 'init': True})
 
             assert resp.status_code == 200
             assert self.provider.TEMPLATE in resp.content.decode('utf-8')
@@ -79,7 +99,7 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
             resp = self.client.post(path, {'email': user.email})
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver{}'.format(base_path)
+        assert resp['Location'] == 'http://testserver{}'.format(configure_path)
 
         auth_provider = AuthProvider.objects.get(
             organization=organization,
@@ -123,7 +143,7 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
         setattr(om.flags, 'sso:linked', True)
         om.save()
 
-        path = reverse('sentry-organization-auth-settings', args=[organization.slug])
+        path = reverse('sentry-organization-auth-provider-settings', args=[organization.slug])
 
         self.login_as(self.user, organization_id=organization.id)
 
