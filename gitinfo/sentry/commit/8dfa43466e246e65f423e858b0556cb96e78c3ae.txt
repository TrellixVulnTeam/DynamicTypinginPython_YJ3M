commit 8dfa43466e246e65f423e858b0556cb96e78c3ae
Author: Mark Story <mark@mark-story.com>
Date:   Mon Nov 26 16:01:27 2018 -0500

    fix(plugins) Handle HTTP errors in notification plugins (#10715)
    
    Notification plugins frequently fail due to invalid credentials or
    expired accounts. We do not need to be alerted of these errors. Instead
    we can log them and use that to diagnose failures customers may be
    having.
    
    Fixes SENTRY-10V

diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 6409f0af89..2f6ca3b52f 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -8,6 +8,8 @@ sentry.plugins.bases.notify
 from __future__ import absolute_import, print_function
 
 import logging
+import requests
+import six
 from six.moves.urllib.parse import (
     urlparse,
     urlencode,
@@ -66,8 +68,15 @@ class NotificationPlugin(Plugin):
 
     def notify(self, notification):
         event = notification.event
-        return self.notify_users(event.group, event, triggering_rules=[
-                                 r.label for r in notification.rules])
+        try:
+            return self.notify_users(event.group, event, triggering_rules=[
+                                     r.label for r in notification.rules])
+        except requests.HTTPError as err:
+            self.logger.info('notification-plugin.notify-failed.', extra={
+                'error': six.text_type(err),
+                'plugin': self.slug
+            })
+            return False
 
     def rule_notify(self, event, futures):
         rules = []
diff --git a/tests/sentry/plugins/bases/notify/tests.py b/tests/sentry/plugins/bases/notify/tests.py
index 6a52775a72..4b38940f3f 100644
--- a/tests/sentry/plugins/bases/notify/tests.py
+++ b/tests/sentry/plugins/bases/notify/tests.py
@@ -1,7 +1,9 @@
 from __future__ import absolute_import
 
 from sentry.plugins import NotificationPlugin
+from sentry.plugins.base.structs import Notification
 from sentry.testutils import TestCase
+from requests import HTTPError
 
 
 class NotifyPlugin(TestCase):
@@ -22,3 +24,15 @@ class NotifyPlugin(TestCase):
         n.slug = ''
         url = 'https://sentry.io/'
         assert n.add_notification_referrer_param(url) == 'https://sentry.io/'
+
+    def test_notify_failure(self):
+        n = NotificationPlugin()
+        n.slug = 'slack'
+
+        def hook(*a, **kw):
+            raise HTTPError('401 Unauthorized')
+        event = self.create_event()
+        notification = Notification(event)
+
+        n.notify_users = hook
+        assert n.notify(notification) is False
