commit 031c2a6b29ed901a09f08d682735449a67a3705e
Author: Ted Kaemming <ted@kaemming.com>
Date:   Mon Nov 16 15:27:08 2015 -0800

    Fix feature check for short-circuited single issue digest sends.

diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 074bb5de90..3c402fd1b7 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -196,7 +196,9 @@ class MailPlugin(NotificationPlugin):
                 key=lambda record: record.timestamp,
             )
             notification = Notification(record.value.event, rules=record.value.rules)
-            return self.notify(notification)
+
+            if features.has('projects:digests:deliver', project):
+                return self.notify(notification)
 
         context = {
             'project': project,
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 57ce58b2cd..d54cc33cf8 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -250,7 +250,12 @@ class MailPluginTest(TestCase):
 
     @mock.patch.object(MailPlugin, 'notify', side_effect=MailPlugin.notify, autospec=True)
     @mock.patch.object(MessageBuilder, 'send', autospec=True)
-    def test_notify_digest_single_record(self, send, notify):
+    @mock.patch.object(features, 'has')
+    def test_notify_digest_single_record(self, has, send, notify):
+        has.side_effect = lambda label, *a, **k: {
+            'projects:digests:deliver': True,
+        }.get(label, False)
+
         project = self.event.project
         rule = project.rule_set.all()[0]
         digest = build_digest(
