commit e2325ac9219c30bc828e987a3d36a094a5b4fc31
Author: Mark Story <mark@sentry.io>
Date:   Mon May 27 12:50:02 2019 -0400

    Improve test coverage around github repository search
    
    Previously there were no tests and bugs in github:e implementation.

diff --git a/tests/sentry/integrations/github/test_integration.py b/tests/sentry/integrations/github/test_integration.py
index 24b13ddea8..6904242a10 100644
--- a/tests/sentry/integrations/github/test_integration.py
+++ b/tests/sentry/integrations/github/test_integration.py
@@ -23,6 +23,7 @@ from tests.sentry.plugins.testutils import (
 
 class GitHubIntegrationTest(IntegrationTestCase):
     provider = GitHubIntegrationProvider
+    base_url = 'https://api.github.com'
 
     def setUp(self):
         super(GitHubIntegrationTest, self).setUp()
@@ -58,7 +59,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         responses.add(
             responses.POST,
-            u'https://api.github.com/installations/{}/access_tokens'.format(
+            self.base_url + '/installations/{}/access_tokens'.format(
                 self.installation_id,
             ),
             json={
@@ -69,13 +70,13 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            'https://api.github.com/user',
+            self.base_url + '/user',
             json={'id': self.user_id}
         )
 
         responses.add(
             responses.GET,
-            u'https://api.github.com/installation/repositories',
+            self.base_url + '/installation/repositories',
             json={
                 'repositories': [
                     {
@@ -94,7 +95,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            u'https://api.github.com/app/installations/{}'.format(
+            self.base_url + '/app/installations/{}'.format(
                 self.installation_id,
             ),
             json={
@@ -111,7 +112,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            u'https://api.github.com/user/installations',
+            self.base_url + '/user/installations',
             json={
                 'installations': [{'id': self.installation_id}],
             }
@@ -119,7 +120,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            u'https://api.github.com/repos/Test-Organization/foo/hooks',
+            self.base_url + '/repos/Test-Organization/foo/hooks',
             json=[],
         )
 
@@ -405,3 +406,32 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         # Disabled after Integration installed
         assert 'github' not in [p.slug for p in plugins.for_project(project)]
+
+    @responses.activate
+    def test_get_repositories_search_param(self):
+        with self.tasks():
+            self.assert_setup_flow()
+
+        responses.add(
+            responses.GET,
+            self.base_url + '/search/repositories?q=org:test%20ex',
+            json={
+                'items': [
+                    {
+                        'name': 'example',
+                        'full_name': 'test/example',
+                    },
+                    {
+                        'name': 'exhaust',
+                        'full_name': 'test/exhaust',
+                    },
+                ]
+            }
+        )
+        integration = Integration.objects.get(provider=self.provider.key)
+        installation = integration.get_installation(self.organization)
+        result = installation.get_repositories('ex')
+        assert result == [
+            {'identifier': 'test/example', 'name': 'example'},
+            {'identifier': 'test/exhaust', 'name': 'exhaust'}
+        ]
diff --git a/tests/sentry/integrations/github_enterprise/test_integration.py b/tests/sentry/integrations/github_enterprise/test_integration.py
index 644e4571c1..4e0006d6b1 100644
--- a/tests/sentry/integrations/github_enterprise/test_integration.py
+++ b/tests/sentry/integrations/github_enterprise/test_integration.py
@@ -15,7 +15,7 @@ from sentry.testutils import IntegrationTestCase
 class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
     provider = GitHubEnterpriseIntegrationProvider
     config = {
-        'url': 'https://35.232.149.196',
+        'url': 'https://github.example.org',
         'id': 2,
         'name': 'test-app',
         'client_id': 'client_id',
@@ -24,6 +24,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         'private_key': 'private_key',
         'verify_ssl': True,
     }
+    base_url = 'https://github.example.org/api/v3'
 
     @patch('sentry.integrations.github_enterprise.integration.get_jwt', return_value='jwt_token_1')
     @patch('sentry.integrations.github.client.get_jwt', return_value='jwt_token_1')
@@ -36,7 +37,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         assert resp.status_code == 302
         redirect = urlparse(resp['Location'])
         assert redirect.scheme == 'https'
-        assert redirect.netloc == '35.232.149.196'
+        assert redirect.netloc == 'github.example.org'
         assert redirect.path == '/github-apps/test-app'
 
         # App installation ID is provided, mveo thr
@@ -48,7 +49,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         assert resp.status_code == 302
         redirect = urlparse(resp['Location'])
         assert redirect.scheme == 'https'
-        assert redirect.netloc == '35.232.149.196'
+        assert redirect.netloc == 'github.example.org'
         assert redirect.path == '/login/oauth/authorize'
 
         params = parse_qs(redirect.query)
@@ -63,42 +64,46 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         access_token = 'xxxxx-xxxxxxxxx-xxxxxxxxxx-xxxxxxxxxxxx'
 
         responses.add(
-            responses.POST, 'https://35.232.149.196/login/oauth/access_token',
+            responses.POST,
+            'https://github.example.org/login/oauth/access_token',
             json={'access_token': access_token}
         )
 
         responses.add(
-            responses.POST, u'https://35.232.149.196/api/v3/installations/{}/access_tokens'.format(
+            responses.POST,
+            self.base_url + '/installations/{}/access_tokens'.format(
                 installation_id,
             ),
             json={
                 'token': access_token,
-                'expires_at': '3000-01-01 00:00:00Z',
+                'expires_at': '3000-01-01T00:00:00Z',
             },
         )
 
         responses.add(
-            responses.GET, 'https://35.232.149.196/api/v3/user',
+            responses.GET,
+            self.base_url + '/user',
             json={'id': user_id}
         )
 
         responses.add(
             responses.GET,
-            u'https://35.232.149.196/api/v3/app/installations/{}'.format(installation_id),
+            self.base_url + '/app/installations/{}'.format(installation_id),
             json={
                 'id': installation_id,
                 'app_id': app_id,
                 'account': {
                     'login': 'Test Organization',
                     'type': 'Organization',
-                    'avatar_url': 'https://35.232.149.196/avatar.png',
-                    'html_url': 'https://35.232.149.196/Test-Organization',
+                    'avatar_url': 'https://github.example.org/avatar.png',
+                    'html_url': 'https://github.example.org/Test-Organization',
                 },
             }
         )
 
         responses.add(
-            responses.GET, u'https://35.232.149.196/api/v3/user/installations',
+            responses.GET,
+            self.base_url + '/user/installations',
             json={
                 'installations': [{'id': installation_id}],
             }
@@ -134,13 +139,13 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
 
         integration = Integration.objects.get(provider=self.provider.key)
 
-        assert integration.external_id == '35.232.149.196:install_id_1'
+        assert integration.external_id == 'github.example.org:install_id_1'
         assert integration.name == 'Test Organization'
         assert integration.metadata == {
             u'access_token': None,
             u'expires_at': None,
-            u'icon': u'https://35.232.149.196/avatar.png',
-            u'domain_name': u'35.232.149.196/Test-Organization',
+            u'icon': u'https://github.example.org/avatar.png',
+            u'domain_name': u'github.example.org/Test-Organization',
             u'account_type': u'Organization',
             u'installation_id': u'install_id_1',
             u'installation': {
@@ -149,7 +154,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
                 u'id': u'2',
                 u'name': u'test-app',
                 u'private_key': u'private_key',
-                u'url': u'35.232.149.196',
+                u'url': u'github.example.org',
                 u'webhook_secret': u'webhook_secret',
                 u'verify_ssl': True,
             }
@@ -170,3 +175,34 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         assert identity.data == {
             'access_token': 'xxxxx-xxxxxxxxx-xxxxxxxxxx-xxxxxxxxxxxx'
         }
+
+    @patch('sentry.integrations.github_enterprise.integration.get_jwt', return_value='jwt_token_1')
+    @patch('sentry.integrations.github_enterprise.client.get_jwt', return_value='jwt_token_1')
+    @responses.activate
+    def test_get_repositories_search_param(self, mock_jwtm, _):
+        with self.tasks():
+            self.assert_setup_flow()
+
+        responses.add(
+            responses.GET,
+            self.base_url + '/search/repositories?q=org:test%20ex',
+            json={
+                'items': [
+                    {
+                        'name': 'example',
+                        'full_name': 'test/example',
+                    },
+                    {
+                        'name': 'exhaust',
+                        'full_name': 'test/exhaust',
+                    },
+                ]
+            }
+        )
+        integration = Integration.objects.get(provider=self.provider.key)
+        installation = integration.get_installation(self.organization)
+        result = installation.get_repositories('ex')
+        assert result == [
+            {'identifier': 'test/example', 'name': 'example'},
+            {'identifier': 'test/exhaust', 'name': 'exhaust'}
+        ]
