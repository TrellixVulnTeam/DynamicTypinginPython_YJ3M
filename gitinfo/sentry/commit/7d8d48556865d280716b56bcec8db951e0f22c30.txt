commit 7d8d48556865d280716b56bcec8db951e0f22c30
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 5 18:37:24 2017 -0700

    pep8: fix lint violations

diff --git a/src/sentry/options/manager.py b/src/sentry/options/manager.py
index 8754a0e23f..3e2f627b10 100644
--- a/src/sentry/options/manager.py
+++ b/src/sentry/options/manager.py
@@ -203,7 +203,8 @@ class OptionsManager(object):
         if not callable(default):
             default_value = default
 
-            def default(): return default_value
+            def default():
+                return default_value
         else:
             default_value = default()
 
@@ -214,7 +215,8 @@ class OptionsManager(object):
             if default_value is None:
                 default_value = u''
 
-                def default(): return default_value
+                def default():
+                    return default_value
             type = type_from_value(default_value)
 
         # We disallow None as a value for options since this is ambiguous and doesn't
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index c1d638dea8..cae22cd5ce 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -79,10 +79,11 @@ class NotificationPlugin(Plugin):
         project = event.group.project
         extra['project_id'] = project.id
         if hasattr(self, 'notify_digest') and digests.enabled(project):
-            def get_digest_option(key): return ProjectOption.objects.get_value(
-                project,
-                get_digest_option_key(self.get_conf_key(), key),
-            )
+            def get_digest_option(key):
+                return ProjectOption.objects.get_value(
+                    project,
+                    get_digest_option_key(self.get_conf_key(), key),
+                )
             digest_key = unsplit_key(self, event.group.project)
             extra['digest_key'] = digest_key
             immediate_delivery = digests.add(
diff --git a/src/sentry/runner/commands/tsdb.py b/src/sentry/runner/commands/tsdb.py
index 373e37e785..3e891968f5 100644
--- a/src/sentry/runner/commands/tsdb.py
+++ b/src/sentry/runner/commands/tsdb.py
@@ -75,7 +75,8 @@ def organizations(metrics, since, until):
     stdout = click.get_text_stream('stdout')
     stderr = click.get_text_stream('stderr')
 
-    def aggregate(series): return sum(value for timestamp, value in series)
+    def aggregate(series):
+        return sum(value for timestamp, value in series)
 
     metrics = OrderedDict((name, getattr(tsdb.models, name)) for name in metrics)
     if not metrics:
diff --git a/src/sentry/utils/compat/__init__.py b/src/sentry/utils/compat/__init__.py
index 45705e1a5c..d89af73111 100644
--- a/src/sentry/utils/compat/__init__.py
+++ b/src/sentry/utils/compat/__init__.py
@@ -8,7 +8,8 @@ except ImportError:
     import pickle  # NOQA
 
 
-def _identity(x): return x
+def _identity(x):
+    return x
 
 if six.PY2:
     # https://github.com/pallets/werkzeug/blob/master/werkzeug/_compat.py
diff --git a/src/sentry/utils/hashlib.py b/src/sentry/utils/hashlib.py
index 67243a2155..f8caace8e3 100644
--- a/src/sentry/utils/hashlib.py
+++ b/src/sentry/utils/hashlib.py
@@ -13,7 +13,9 @@ from hashlib import sha1 as _sha1
 from django.utils.encoding import force_bytes
 
 
-def md5_text(x): return _md5(force_bytes(x, errors='replace'))
+def md5_text(x):
+    return _md5(force_bytes(x, errors='replace'))
 
 
-def sha1_text(x): return _sha1(force_bytes(x, errors='replace'))
+def sha1_text(x):
+    return _sha1(force_bytes(x, errors='replace'))
diff --git a/src/sentry/utils/retries.py b/src/sentry/utils/retries.py
index c772f02e68..0b72bcfefd 100644
--- a/src/sentry/utils/retries.py
+++ b/src/sentry/utils/retries.py
@@ -43,7 +43,8 @@ class TimedRetryPolicy(RetryPolicy):
     def __init__(self, timeout, delay=None, exceptions=(Exception,)):
         if delay is None:
             # 100ms +/- 50ms of randomized jitter
-            def delay(i): return 0.1 + ((random.random() - 0.5) / 10)
+            def delay(i):
+                return 0.1 + ((random.random() - 0.5) / 10)
 
         self.timeout = timeout
         self.delay = delay
diff --git a/tests/sentry/tasks/test_unmerge.py b/tests/sentry/tasks/test_unmerge.py
index 01108cfb03..a527d36bcd 100644
--- a/tests/sentry/tasks/test_unmerge.py
+++ b/tests/sentry/tasks/test_unmerge.py
@@ -509,9 +509,8 @@ class UnmergeTestCase(TestCase):
 
         def get_expected_series_values(rollup, events, function=None):
             if function is None:
-                def function(
-                    aggregate, event): return (
-                    aggregate if aggregate is not None else 0) + 1
+                def function(aggregate, event):
+                    return (aggregate if aggregate is not None else 0) + 1
 
             expected = {}
             for event in events:
