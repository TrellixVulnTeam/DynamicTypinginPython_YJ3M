commit b8c11e8650a0dadbf022f409996cf2e3dc5582a7
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Nov 12 10:39:59 2019 -0800

    ref: Remove duplicate checking code (#15541)
    
    Remove the option to check for duplicates before proceeding to save
    an event. Since this has now been set to False in production, this
    doesn't change current behavior.

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 0f49d01e2c..a5a3b27a7b 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -473,16 +473,8 @@ class EventManager(object):
         to eventstream these numbers may be larger than the total number of
         events if we receive duplicate event IDs that fall on the same day
         (that do not hit cache first).
-
-        Note that if "store.check-duplicates" is set to True, we instead check for
-        the event in Postgres first and do not proceed to update counters or
-        insert the event into the eventstream if the event ID is found in the
-        database. This option is intended to be temporary, whilst we move towards
-        the previously described last write wins approach.
         """
 
-        CHECK_DUPLICATES = options.get("store.check-duplicates")
-
         # Normalize if needed
         if not self._normalized:
             if not assume_normalized:
@@ -496,32 +488,6 @@ class EventManager(object):
             id=project.organization_id
         )
 
-        if CHECK_DUPLICATES:
-            # Check to make sure we're not about to do a bunch of work that's
-            # already been done if we've processed an event with this ID. (This
-            # isn't a perfect solution -- this doesn't handle ``EventMapping`` and
-            # there's a race condition between here and when the event is actually
-            # saved, but it's an improvement. See GH-7677.)
-            try:
-                event = Event.objects.get(project_id=project.id, event_id=data["event_id"])
-            except Event.DoesNotExist:
-                pass
-            else:
-                # Make sure we cache on the project before returning
-                event._project_cache = project
-                logger.info(
-                    "duplicate.found",
-                    exc_info=True,
-                    extra={
-                        "event_uuid": data["event_id"],
-                        "project_id": project.id,
-                        "group_id": event.group_id,
-                        "platform": data.get("platform"),
-                        "model": Event.__name__,
-                    },
-                )
-                return event
-
         # Pull out the culprit
         culprit = self.get_culprit()
 
@@ -771,9 +737,6 @@ class EventManager(object):
                 },
             )
 
-            if CHECK_DUPLICATES:
-                return event
-
         if event_user:
             counters = [
                 (tsdb.models.users_affected_by_project, project.id, (event_user.tag_value,))
