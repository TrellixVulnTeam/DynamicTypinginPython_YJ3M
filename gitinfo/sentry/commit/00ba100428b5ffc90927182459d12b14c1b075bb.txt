commit 00ba100428b5ffc90927182459d12b14c1b075bb
Author: Ben Vinegar <ben@benv.ca>
Date:   Thu Sep 17 16:46:03 2015 -0700

    WIP expand context button ...
    
    NOTE: This hardcodes `delete data.context` to create scenario where user has vars w/o context.

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index a41349c9b3..78281667d4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -2,6 +2,7 @@ import React from "react";
 import classNames from "classnames";
 import {defined, objectIsEmpty} from "../../../utils";
 
+import TooltipMixin from "../../../mixins/tooltip";
 import FrameVariables from "./frameVariables";
 
 var Frame = React.createClass({
@@ -9,6 +10,12 @@ var Frame = React.createClass({
     data: React.PropTypes.object.isRequired
   },
 
+  mixins: [
+    TooltipMixin({
+      selector: ".expand-button"
+    })
+  ],
+
   getInitialState() {
     // isExpanded can be initialized to true via parent component;
     // data synchronization is not important
@@ -25,7 +32,8 @@ var Frame = React.createClass({
     return filename.indexOf('http:') !== -1 || filename.indexOf('https:') !== -1;
   },
 
-  toggleContext() {
+  toggleContext(evt) {
+    evt && evt.preventDefault();
     this.setState({
       isExpanded: !this.state.isExpanded
     });
@@ -76,9 +84,14 @@ var Frame = React.createClass({
       outerClassName += " expanded";
     }
 
-    var context = '';
-    if (defined(data.context) && data.context.length) {
-      var startLineNo = data.context[0][0];
+    // delete data.context;
+
+    let context = '';
+
+    delete data.context;
+
+    if (defined(data.context) && data.context.length || !objectIsEmpty(data.vars)) {
+      var startLineNo = defined(data.context) ? data.context[0][0] : '';
       context = (
         <ol start={startLineNo} className={outerClassName}
             onClick={this.toggleContext}>
@@ -86,7 +99,7 @@ var Frame = React.createClass({
           <li className="expandable error"
               key="errors">{data.errors.join(", ")}</li>
           }
-          {data.context.map((line) => {
+          {(data.context || []).map((line) => {
             var liClassName = "expandable";
             if (line[0] === data.lineNo) {
               liClassName += " active";
@@ -108,17 +121,20 @@ var Frame = React.createClass({
               </li>
             );
           })}
+
           {!objectIsEmpty(data.vars) &&
             <FrameVariables data={data.vars} key="vars" />
           }
         </ol>
       );
     }
+
     // TODO(dcramer): implement popover annotations
     // TODO(dcramer): implement local vars
     return (
       <li className={className}>
-        <p>{title}</p>
+        <p>{title} <a onClick={(e) => { e.preventDefault(); this.toggleContext(); }} className="btn btn-sm btn-default btn-toggle"><span className="icon-plus"/></a>
+        </p>
         {context}
       </li>
     );
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index a72f0649f4..2e5f53d79c 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -877,6 +877,21 @@
     }
   }
 
+  .btn-toggle {
+    display: block;
+    float: right;
+    .square(18px);
+    padding: 0;
+    margin-top: 4px;
+    line-height: 18px;
+    font-size: 9px;
+    text-align: center;
+  }
+
+  .expand-button:hover {
+    cursor: pointer;
+  }
+
   &.expanded {
 
     > p {
