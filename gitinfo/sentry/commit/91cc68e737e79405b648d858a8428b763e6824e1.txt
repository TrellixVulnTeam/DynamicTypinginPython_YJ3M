commit 91cc68e737e79405b648d858a8428b763e6824e1
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Aug 13 17:58:21 2019 -0700

    ref(ui): replcae css-transition-group w/ pose (#14385)

diff --git a/package.json b/package.json
index 93adda6c87..27e56929cf 100644
--- a/package.json
+++ b/package.json
@@ -20,8 +20,8 @@
     "@babel/runtime": "^7.0.0",
     "@sentry/browser": "5.6.0-beta.4",
     "@sentry/integrations": "5.6.0-beta.4",
-    "@types/echarts": "^4.1.10",
     "@types/classnames": "^2.2.0",
+    "@types/echarts": "^4.1.10",
     "@types/jest": "^24.0.17",
     "@types/jquery": "^2.0.53",
     "@types/lodash": "^4.14.134",
@@ -83,7 +83,6 @@
     "prop-types": "^15.6.0",
     "query-string": "6.6.0",
     "react": "16.7.0",
-    "react-addons-css-transition-group": "15.6.2",
     "react-autosize-textarea": "^4.0.0",
     "react-bootstrap": "^0.32.0",
     "react-date-range": "^1.0.0-beta",
diff --git a/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx b/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx
index 9142922b28..db305f8f43 100644
--- a/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx
+++ b/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx
@@ -1,12 +1,33 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import posed from 'react-pose';
 import styled, {cx} from 'react-emotion';
 
 import {t} from 'app/locale';
 import InlineSvg from 'app/components/inlineSvg';
 import LoadingIndicator from 'app/components/loadingIndicator';
+import testablePose from 'app/utils/testablePose';
 
-const Toast = styled('div')`
+const transition = {
+  type: 'spring',
+  stiffness: 450,
+  damping: 25,
+};
+
+const toastAnimation = testablePose({
+  exit: {
+    transition,
+    opacity: 0,
+    y: 70,
+  },
+  enter: {
+    transition,
+    opacity: 1,
+    y: 0,
+  },
+});
+
+const Toast = styled(posed.div(toastAnimation))`
   display: flex;
   align-items: center;
   height: 40px;
@@ -16,29 +37,7 @@ const Toast = styled('div')`
   color: #fff;
   border-radius: 44px 7px 7px 44px;
   box-shadow: 0 4px 12px 0 rgba(47, 40, 55, 0.16);
-  transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55), opacity 0.4s linear;
   position: relative;
-  transform: translate3d(0, 0, 0);
-
-  &.toast-enter {
-    opacity: 0;
-    transform: translate3d(0, 70px, 0);
-  }
-
-  &.toast-enter-active {
-    opacity: 1;
-    transform: translate3d(0, 0, 0);
-  }
-
-  &.toast-leave {
-    opacity: 1;
-    transform: translate3d(0, 0, 0);
-  }
-
-  &.toast-leave-active {
-    opacity: 0;
-    transform: translate3d(0, 70px, 0);
-  }
 `;
 
 const Icon = styled('div')`
diff --git a/src/sentry/static/sentry/app/components/indicators.jsx b/src/sentry/static/sentry/app/components/indicators.jsx
index de33250075..1a94cb5a72 100644
--- a/src/sentry/static/sentry/app/components/indicators.jsx
+++ b/src/sentry/static/sentry/app/components/indicators.jsx
@@ -1,18 +1,18 @@
-import React from 'react';
+import {PoseGroup} from 'react-pose';
+import {ThemeProvider} from 'emotion-theming';
+import {cx} from 'emotion';
 import PropTypes from 'prop-types';
-import createReactClass from 'create-react-class';
+import React from 'react';
 import Reflux from 'reflux';
-import ReactCSSTransitionGroup from 'react-addons-css-transition-group';
+import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
-import {ThemeProvider} from 'emotion-theming';
-import {cx} from 'emotion';
 
-import ToastIndicator from 'app/components/alerts/toastIndicator';
+import {removeIndicator} from 'app/actionCreators/indicator';
 import IndicatorStore from 'app/stores/indicatorStore';
+import ToastIndicator from 'app/components/alerts/toastIndicator';
 import theme from 'app/utils/theme';
-import {removeIndicator} from 'app/actionCreators/indicator';
 
-const Toasts = styled('div')`
+const Toasts = styled(PoseGroup)`
   position: fixed;
   right: 30px;
   bottom: 30px;
@@ -44,25 +44,19 @@ class Indicators extends React.Component {
 
     return (
       <Toasts {...props} className={cx(className, 'ref-toasts')}>
-        <ReactCSSTransitionGroup
-          transitionName="toast"
-          transitionEnterTimeout={400}
-          transitionLeaveTimeout={400}
-        >
-          {items.map((indicator, i) => {
-            // We purposefully use `i` as key here because of transitions
-            // Toasts can now queue up, so when we change from [firstToast] -> [secondToast],
-            // we don't want to  animate `firstToast` out and `secondToast` in, rather we want
-            // to replace `firstToast` with `secondToast`
-            return (
-              <ToastIndicator
-                onDismiss={this.handleDismiss}
-                indicator={indicator}
-                key={i}
-              />
-            );
-          })}
-        </ReactCSSTransitionGroup>
+        {items.map((indicator, i) => {
+          // We purposefully use `i` as key here because of transitions
+          // Toasts can now queue up, so when we change from [firstToast] -> [secondToast],
+          // we don't want to  animate `firstToast` out and `secondToast` in, rather we want
+          // to replace `firstToast` with `secondToast`
+          return (
+            <ToastIndicator
+              onDismiss={this.handleDismiss}
+              indicator={indicator}
+              key={i}
+            />
+          );
+        })}
       </Toasts>
     );
   }
diff --git a/tests/js/spec/components/indicators.spec.jsx b/tests/js/spec/components/indicators.spec.jsx
index 9058eadc59..fc369e44b9 100644
--- a/tests/js/spec/components/indicators.spec.jsx
+++ b/tests/js/spec/components/indicators.spec.jsx
@@ -48,7 +48,7 @@ describe('Indicators', function() {
     IndicatorStore.remove(indicator);
     jest.runAllTimers();
     wrapper.update();
-    expect(wrapper.find('ToastIndicator')).toHaveLength(0);
+    expect(wrapper.find('ToastIndicator').prop('_pose')).toBe('exit');
   });
 
   // This is a common pattern used throughout the code for API calls
@@ -92,7 +92,7 @@ describe('Indicators', function() {
     clearIndicators();
     jest.runAllTimers();
     wrapper.update();
-    expect(wrapper.find('ToastIndicator')).toHaveLength(0);
+    expect(wrapper.find('ToastIndicator').prop('_pose')).toBe('exit');
   });
 
   it('adds and replaces toast by calling action creators', function() {
@@ -161,7 +161,7 @@ describe('Indicators', function() {
     clearIndicators();
     jest.runAllTimers();
     wrapper.update();
-    expect(wrapper.find('ToastIndicator')).toHaveLength(0);
+    expect(wrapper.find('ToastIndicator[_pose="exit"]')).toHaveLength(3);
   });
 
   it('dismisses on click', function() {
@@ -174,7 +174,7 @@ describe('Indicators', function() {
     wrapper.find('ToastIndicator').simulate('click');
     jest.runAllTimers();
     wrapper.update();
-    expect(wrapper.find('ToastIndicator')).toHaveLength(0);
+    expect(wrapper.find('ToastIndicator').prop('_pose')).toBe('exit');
   });
 
   it('hides after 10s', function() {
@@ -196,9 +196,7 @@ describe('Indicators', function() {
     wrapper.update();
     expect(wrapper.find('Indicators').prop('items')).toHaveLength(0);
 
-    // After animation timeout
-    jest.advanceTimersByTime(1000);
-    wrapper.update();
-    expect(wrapper.find('ToastIndicator')).toHaveLength(0);
+    // Animation is exiting
+    expect(wrapper.find('ToastIndicator').prop('_pose')).toBe('exit');
   });
 });
diff --git a/yarn.lock b/yarn.lock
index 7641a3dc16..4beb37e258 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -11436,13 +11436,6 @@ react-addons-create-fragment@^15.5.3:
     loose-envify "^1.3.1"
     object-assign "^4.1.0"
 
-react-addons-css-transition-group@15.6.2:
-  version "15.6.2"
-  resolved "https://registry.yarnpkg.com/react-addons-css-transition-group/-/react-addons-css-transition-group-15.6.2.tgz#9e4376bcf40b5217d14ec68553081cee4b08a6d6"
-  integrity sha1-nkN2vPQLUhfRTsaFUwgc7ksIptY=
-  dependencies:
-    react-transition-group "^1.2.0"
-
 react-autosize-textarea@^4.0.0:
   version "4.0.0"
   resolved "https://registry.yarnpkg.com/react-autosize-textarea/-/react-autosize-textarea-4.0.0.tgz#893d43606b1efe820c71476f25d141c6b25deaab"
@@ -11804,17 +11797,6 @@ react-textarea-autosize@^7.0.4:
     "@babel/runtime" "^7.1.2"
     prop-types "^15.6.0"
 
-react-transition-group@^1.2.0:
-  version "1.2.1"
-  resolved "https://registry.yarnpkg.com/react-transition-group/-/react-transition-group-1.2.1.tgz#e11f72b257f921b213229a774df46612346c7ca6"
-  integrity sha512-CWaL3laCmgAFdxdKbhhps+c0HRGF4c+hdM4H23+FI1QBNUyx/AMeIJGWorehPNSaKnQNOAxL7PQmqMu78CDj3Q==
-  dependencies:
-    chain-function "^1.0.0"
-    dom-helpers "^3.2.0"
-    loose-envify "^1.3.1"
-    prop-types "^15.5.6"
-    warning "^3.0.0"
-
 react-transition-group@^2.0.0, react-transition-group@^2.2.0:
   version "2.2.1"
   resolved "https://registry.yarnpkg.com/react-transition-group/-/react-transition-group-2.2.1.tgz#e9fb677b79e6455fd391b03823afe84849df4a10"
