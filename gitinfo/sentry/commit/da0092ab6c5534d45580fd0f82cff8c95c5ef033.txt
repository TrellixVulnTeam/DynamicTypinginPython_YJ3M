commit da0092ab6c5534d45580fd0f82cff8c95c5ef033
Author: ckj <chriskjennings@gmail.com>
Date:   Tue Oct 4 16:29:55 2016 -0700

    Hide sidebar on auth pages

diff --git a/src/sentry/templates/sentry/bases/auth.html b/src/sentry/templates/sentry/bases/auth.html
index 833069b781..fd93b04a72 100644
--- a/src/sentry/templates/sentry/bases/auth.html
+++ b/src/sentry/templates/sentry/bases/auth.html
@@ -3,6 +3,7 @@
 {% load crispy_forms_tags %}
 {% load i18n %}
 
+{% block global_sidebar %}{% endblock %}
 {% block sub-header %}{% endblock %}
 
 {% block wrapperclass %}narrow auth org-login{% endblock %}
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index fd18474e3f..dd09c98838 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -71,33 +71,35 @@
         {% show_system_status %}
     {% endif %}
 
-    {% if request.user.is_authenticated %}
-    <div id="blk_sidebar"></div>
-    <script>
-    $(function(){
-      var SidebarWrapper = React.createClass({
-        propTypes: {
-          organization: React.PropTypes.any.isRequired
-        },
-        getChildContext: function () {
-          return {
-            organization: this.props.organization,
-          }
-        },
-        render: function () {
-          return React.createElement(Sentry.OrganizationsLoader, {},
-            React.createElement(Sentry.Sidebar));
-        }
-      });
-      SidebarWrapper.childContextTypes = {
-        organization: React.PropTypes.any
-      };
-      ReactDOM.render(React.createFactory(SidebarWrapper)({
-        organization: {% serialize_detailed_org organization %},
-      }), document.getElementById('blk_sidebar'));
-    });
-    </script>
-    {% endif %}
+    {% block global_sidebar %}
+      {% if request.user.is_authenticated %}
+        <div id="blk_sidebar"></div>
+        <script>
+        $(function(){
+          var SidebarWrapper = React.createClass({
+            propTypes: {
+              organization: React.PropTypes.any.isRequired
+            },
+            getChildContext: function () {
+              return {
+                organization: this.props.organization,
+              }
+            },
+            render: function () {
+              return React.createElement(Sentry.OrganizationsLoader, {},
+                React.createElement(Sentry.Sidebar));
+            }
+          });
+          SidebarWrapper.childContextTypes = {
+            organization: React.PropTypes.any
+          };
+          ReactDOM.render(React.createFactory(SidebarWrapper)({
+            organization: {% serialize_detailed_org organization %},
+          }), document.getElementById('blk_sidebar'));
+        });
+        </script>
+      {% endif %}
+    {% endblock %}
 
     {% block alerts %}
     {% include "sentry/partial/alerts.html" %}
