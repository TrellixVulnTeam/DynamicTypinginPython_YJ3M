commit ae536c1f04c29e22689b2491de1d61df7b1a9ef0
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Nov 6 15:16:34 2015 -0800

    Set project_id context for potentially problematic tasks

diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 99358a7293..2de575f454 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -10,6 +10,7 @@ from __future__ import absolute_import, print_function
 
 from celery.utils.log import get_task_logger
 from django.db import IntegrityError, transaction
+from raven.contrib.django.models import client as Raven
 
 from sentry.plugins import plugins
 from sentry.tasks.base import instrumented_task
@@ -45,7 +46,12 @@ def post_process_group(event, is_new, is_regression, is_sample, **kwargs):
     from sentry.models import Project
     from sentry.rules.processor import RuleProcessor
 
-    project = Project.objects.get_from_cache(id=event.group.project_id)
+    project_id = event.group.project_id
+    Raven.tags_context({
+        'project': project_id,
+    })
+
+    project = Project.objects.get_from_cache(id=project_id)
 
     _capture_stats(event, is_new)
 
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index 7d702fee59..f380350bef 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -9,6 +9,7 @@ sentry.tasks.store
 from __future__ import absolute_import
 
 from celery.utils.log import get_task_logger
+from raven.contrib.django.models import client as Raven
 from time import time
 
 from sentry.cache import default_cache
@@ -37,6 +38,9 @@ def preprocess_event(cache_key=None, data=None, start_time=None, **kwargs):
         return
 
     project = data['project']
+    Raven.tags_context({
+        'project': project,
+    })
 
     # TODO(dcramer): ideally we would know if data changed by default
     has_changed = False
@@ -75,6 +79,9 @@ def save_event(cache_key=None, data=None, start_time=None, **kwargs):
         return
 
     project = data.pop('project')
+    Raven.tags_context({
+        'project': project,
+    })
 
     try:
         manager = EventManager(data)
