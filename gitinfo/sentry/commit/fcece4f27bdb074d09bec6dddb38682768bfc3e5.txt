commit fcece4f27bdb074d09bec6dddb38682768bfc3e5
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 15 10:55:42 2015 -0700

    use code blocks

diff --git a/docs/beacon.rst b/docs/beacon.rst
index d7e7f9e659..c3d28b5505 100644
--- a/docs/beacon.rst
+++ b/docs/beacon.rst
@@ -24,6 +24,8 @@ never be used outside of such.
 
 The data reported is minimal and it greatly helps the development team
 behind Sentry. With that said, you can disable the beacon with the
-following setting::
+following setting:
+
+.. code-block:: python
 
 	SENTRY_BEACON = False
diff --git a/docs/inbound-mail.rst b/docs/inbound-mail.rst
index c412d9c175..4d56619406 100644
--- a/docs/inbound-mail.rst
+++ b/docs/inbound-mail.rst
@@ -30,7 +30,9 @@ Create a new route in mailgun::
     Description:
       Sentry inbound handler
 
-Configure Sentry with the appropriate settings::
+Configure Sentry with the appropriate settings:
+
+.. code-block:: python
 
     # Your Mailgun API key (used to verify incoming webhooks)
     MAILGUN_API_KEY = ''
@@ -98,7 +100,9 @@ Configure an Nginx route as an SMTP mail proxy::
     }
 
 
-And finally, update Sentry with the appropriate settings::
+And finally, update Sentry with the appropriate settings:
+
+.. code-block:: python
 
     # Set the SMTP hostname to your configured inbound domain
     SENTRY_SMTP_HOSTNAME = 'inbound.sentry.example.com'
diff --git a/docs/nodestore.rst b/docs/nodestore.rst
index ed2714e974..74c64110af 100644
--- a/docs/nodestore.rst
+++ b/docs/nodestore.rst
@@ -16,7 +16,7 @@ the gzipped json blob-as-text pattern.
 The backend provides no options, so it should simply be set to an empty
 dict.
 
-::
+.. code-block:: python
 
     SENTRY_NODESTORE = 'sentry.nodestore.django.DjangoNodeStorage'
     SENTRY_NODESTORE_OPTIONS = {}
@@ -37,7 +37,7 @@ Some notes on your Riak installation:
 - We recommend ``n=2`` for replicas, but if the data isn't extremely
   important, ``n=1`` is fine.
 
-::
+.. code-block:: python
 
     SENTRY_NODESTORE = 'sentry.nodestore.riak.RiakNodeStorage'
     SENTRY_NODESTORE_OPTIONS = {
@@ -63,7 +63,7 @@ Riak.
 The Sentry Cassandra backend only operates over the native CQL interface,
 so requires Cassandra 1.2+.
 
-::
+.. code-block:: python
 
     CREATE KEYSPACE sentry WITH replication = {
       'class': 'SimpleStrategy',
@@ -81,7 +81,7 @@ so requires Cassandra 1.2+.
       compression={'sstable_compression': 'SnappyCompressor'};
 
 
-::
+.. code-block:: python
 
     SENTRY_NODESTORE = 'sentry.nodestore.cassandra.CassandraNodeStorage'
     SENTRY_NODESTORE_OPTIONS = {
diff --git a/docs/queue.rst b/docs/queue.rst
index 523c9725e2..d7133124fd 100644
--- a/docs/queue.rst
+++ b/docs/queue.rst
@@ -14,9 +14,9 @@ Running a Worker
 Workers can be run by using the Sentry CLI. Specifically, you call out to celery,
 which is the worker manager process of the Celery library.
 
-::
+.. code-block:: bash
 
-    sentry celery worker -B
+    $ sentry celery worker -B
 
 .. note:: You will need to run both celery workers and celerybeat. In our
           example, the -B flag runs a beat instance (in addition to the worker),
diff --git a/docs/tsdb.rst b/docs/tsdb.rst
index 2b04a9b4e3..684158a14c 100644
--- a/docs/tsdb.rst
+++ b/docs/tsdb.rst
@@ -9,7 +9,9 @@ Choosing a Backend
 ------------------
 
 To specify a backend, simply modify the ``SENTRY_TSDB`` and
-``SENTRY_TSDB_OPTIONS`` values in your configuration::
+``SENTRY_TSDB_OPTIONS`` values in your configuration:
+
+.. code-block:: python
 
     SENTRY_TSDB = 'sentry.tsdb.dummy.DummyTSDB'
     SENTRY_TSDB_OPTIONS = {}
@@ -18,7 +20,9 @@ To specify a backend, simply modify the ``SENTRY_TSDB`` and
 The Redis Backend
 -----------------
 
-Configuration is fairly straight forward::
+Configuration is fairly straight forward:
+
+.. code-block:: python
 
     SENTRY_TSDB = 'sentry.tsdb.redis.RedisTSDB'
     SENTRY_TSDB_OPTIONS = {
@@ -33,7 +37,9 @@ Configuration is fairly straight forward::
 Because the Redis buffer relies on the Nydus package, this gives you the
 ability to specify multiple nodes and have keys automatically distributed.
 It's unlikely that you'll need this functionality, but if you do, a simple
-configuration might look like this::
+configuration might look like this:
+
+.. code-block:: python
 
     SENTRY_TSDB_OPTIONS = {
         'hosts': {
