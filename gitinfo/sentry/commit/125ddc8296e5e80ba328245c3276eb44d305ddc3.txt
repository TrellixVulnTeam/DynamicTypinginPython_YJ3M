commit 125ddc8296e5e80ba328245c3276eb44d305ddc3
Author: David Cramer <dcramer@gmail.com>
Date:   Sat May 30 12:48:40 2015 +0200

    Improve BarChart async support

diff --git a/src/sentry/static/sentry/app/components/barChart.jsx b/src/sentry/static/sentry/app/components/barChart.jsx
index ef50d4f140..daba247296 100644
--- a/src/sentry/static/sentry/app/components/barChart.jsx
+++ b/src/sentry/static/sentry/app/components/barChart.jsx
@@ -28,11 +28,27 @@ var BarChart = React.createClass({
   },
 
   componentDidUpdate() {
-    window.setTimeout(this.renderChart);
+    if (this._asyncRender) return;
+    this._asyncRender = window.setTimeout(this.renderChart);
   },
 
   componentDidMount() {
-    window.setTimeout(this.renderChart);
+    this._asyncRender = window.setTimeout(this.renderChart);
+  },
+
+  componentWillUnmount() {
+    if (this._asyncRender) {
+      window.clearTimeout(this._asyncRender);
+    }
+  },
+
+  shouldComponentUpdate(nextProps, nextState) {
+    var curPoints = this.props.points || [];
+    var nextPoints = nextProps.points || [];
+    var equal = compareArrays(this.props.points, nextProps.points, (obj, other) => {
+      return (obj.x === other.x && obj.y === other.y);
+    });
+    return !equal;
   },
 
   floatFormat(number, places) {
@@ -80,16 +96,11 @@ var BarChart = React.createClass({
     return timeMoment.format("lll");
   },
 
-  shouldComponentUpdate(nextProps, nextState) {
-    var curPoints = this.props.points || [];
-    var nextPoints = nextProps.points || [];
-    var equal = compareArrays(this.props.points, nextProps.points, (obj, other) => {
-      return (obj.x === other.x && obj.y === other.y);
-    });
-    return !equal;
-  },
-
   renderChart() {
+    var ref = this.refs.chartPoints;
+    if (!ref) {
+      return;
+    }
     var points = this.props.points;
     var maxval = 10;
     points.forEach((point) => {
@@ -142,7 +153,7 @@ var BarChart = React.createClass({
       });
     });
 
-    jQuery(this.refs.chartPoints.getDOMNode()).html(children);
+    jQuery(ref.getDOMNode()).html(children);
   },
 
   render() {
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index ffd7c1887d..afed0b0ea8 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -17,7 +17,7 @@ var utils = require("../utils");
 
 var Stream = React.createClass({
   mixins: [
-    Reflux.listenTo(GroupStore, "onAggListChange"),
+    Reflux.listenTo(GroupStore, "onGroupChange"),
     RouteMixin
   ],
 
@@ -140,10 +140,13 @@ var Stream = React.createClass({
     this._streamManager.unshift(data);
   },
 
-  onAggListChange() {
-    this.setState({
-      groupIds: this._streamManager.getAllItems().map((item) => item.id)
-    });
+  onGroupChange() {
+    var groupIds = this._streamManager.getAllItems().map((item) => item.id);
+    if (!utils.valueIsEqual(groupIds, this.state.groupIds)) {
+      this.setState({
+        groupIds: groupIds
+      });
+    }
   },
 
   onPage(cursor) {
