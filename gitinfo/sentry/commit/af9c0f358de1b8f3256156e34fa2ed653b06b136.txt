commit af9c0f358de1b8f3256156e34fa2ed653b06b136
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Tue Mar 7 16:13:48 2017 -0800

    Add new issue data (#5041)

diff --git a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
index b8f92c21a3..04713d0a59 100644
--- a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
+++ b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
@@ -7,6 +7,8 @@ import Avatar from '../components/avatar';
 import TooltipMixin from '../mixins/tooltip';
 import ApiMixin from '../mixins/apiMixin';
 
+import {t} from '../locale';
+
 const CommitBar = React.createClass({
   propTypes: {
     totalCommits: React.PropTypes.number.isRequired,
@@ -66,6 +68,10 @@ const CommitAuthorStats = React.createClass({
     });
   },
 
+  renderEmpty() {
+    return <div className="box empty">{t('No authors in this release')}</div>;
+  },
+
   render() {
 
     if (this.state.loading)
@@ -100,6 +106,7 @@ const CommitAuthorStats = React.createClass({
     return (
       <div style={{marginTop: 5}}>
         <h6 className="nav-header m-b-1">Commits by Author</h6>
+        {!commitAuthorValues.length && this.renderEmpty()}
         <ul className="list-group">
         {commitAuthorValues.map(commitAuthor => {
           let {author, commitCount} = commitAuthor;
diff --git a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
index 57323980cf..ba4e4be558 100644
--- a/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
+++ b/src/sentry/static/sentry/app/components/releaseProjectStatSparkline.jsx
@@ -1,15 +1,19 @@
 import React from 'react';
+import {Link} from 'react-router';
+import {Sparklines, SparklinesLine} from 'react-sparklines';
+
 import LoadingIndicator from '../components/loadingIndicator';
 import LoadingError from '../components/loadingError';
 
-import {Sparklines, SparklinesLine} from 'react-sparklines';
-
 import ApiMixin from '../mixins/apiMixin';
 
+import {t} from '../locale';
+
 const ReleaseProjectStatSparkline = React.createClass({
   propTypes: {
     orgId: React.PropTypes.string,
-    projectId: React.PropTypes.string,
+    project: React.PropTypes.object,
+    version: React.PropTypes.string,
   },
 
   mixins: [ApiMixin],
@@ -19,11 +23,13 @@ const ReleaseProjectStatSparkline = React.createClass({
       loading: true,
       error: false,
       stats: [],
+      newIssueCount: null,
     };
   },
 
   componentDidMount() {
-    let {orgId, projectId} = this.props;
+    let {orgId} = this.props;
+    let projectId = this.props.project.slug;
     let path = `/projects/${orgId}/${projectId}/stats/`;
     this.api.request(path, {
       method: 'GET',
@@ -31,8 +37,27 @@ const ReleaseProjectStatSparkline = React.createClass({
       success: (data, _, jqXHR) => {
         this.setState({
           stats: data,
+        });
+        this.getNewIssuesCount();
+      },
+      error: () => {
+        this.setState({
+          error: true,
+        });
+      }
+    });
+  },
+
+  getNewIssuesCount() {
+    let {orgId, version} = this.props;
+    let projectId = this.props.project.slug;
+    let issuesPath = `/projects/${orgId}/${projectId}/releases/${version}/`;
+    this.api.request(issuesPath, {
+      method: 'GET',
+      success: (data, _, jqXHR) => {
+        this.setState({
+          newIssueCount: data.newGroups,
           loading: false,
-          error: false,
         });
       },
       error: () => {
@@ -44,6 +69,8 @@ const ReleaseProjectStatSparkline = React.createClass({
   },
 
   render() {
+    let {orgId, project} = this.props;
+    let newIssueCount = this.state.newIssueCount;
     let values = this.state.stats.map(tuple => tuple[1]);
     if (this.state.loading)
       return <LoadingIndicator/>;
@@ -51,11 +78,21 @@ const ReleaseProjectStatSparkline = React.createClass({
     if (this.state.error)
       return <LoadingError/>;
     return (
-      <div className="sparkline">
-        <Sparklines data={values} width={100} height={32}>
-          <SparklinesLine style={{stroke: '#8f85d4', fill: 'none', strokeWidth: 3}}/>
-        </Sparklines>
-      </div>
+      <li>
+        <div className="sparkline pull-right" style={{width: 96}}>
+          <Sparklines data={values} width={100} height={32}>
+            <SparklinesLine style={{stroke: '#8f85d4', fill: 'none', strokeWidth: 3}}/>
+          </Sparklines>
+        </div>
+        <Link to={`/${orgId}/${project.slug}/`}>
+          <h6 className="m-b-0">
+            {project.name}
+          </h6>
+          <p className="m-b-0">
+            {newIssueCount} {newIssueCount !== 1 ? t('New Issues') : t('New Issue')}
+          </p>
+        </Link>
+      </li>
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index fba78b81f8..d384450a1a 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import {Link} from 'react-router';
 
 import LoadingIndicator from '../../components/loadingIndicator';
 import LoadingError from '../../components/loadingError';
@@ -193,17 +192,12 @@ const ReleaseOverview = React.createClass({
                   return null;
                 }
                 return (
-                  <li key={project.id}>
-                    <div className="sparkline pull-right" style={{width: 96}}>
-                      <ReleaseProjectStatSparkline orgId={orgId} projectId={project.slug} />
-                    </div>
-                    <Link to={`/${orgId}/${project.slug}/`}>
-                      <h6 className="m-b-0">
-                        {project.name}
-                      </h6>
-                      <p className="m-b-0">12 events</p>
-                    </Link>
-                  </li>
+                  <ReleaseProjectStatSparkline
+                    key={project.id}
+                    orgId={orgId}
+                    project={project}
+                    version={version}
+                  />
                 );
               })
             }
