commit 8ca17bd10b287091eb616f6db7d61ac27d99018a
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Wed Jun 5 13:43:33 2019 -0700

    fix(saved-searches): line length limits (#13516)
    
    * line length limits for saved searches
    
    * use a tooltip
    
    * linter

diff --git a/src/sentry/static/sentry/app/components/tooltip.jsx b/src/sentry/static/sentry/app/components/tooltip.jsx
index a6542530a9..535005fdc0 100644
--- a/src/sentry/static/sentry/app/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/tooltip.jsx
@@ -43,6 +43,11 @@ class Tooltip extends React.Component {
      * Display mode for the container element
      */
     containerDisplayMode: PropTypes.oneOf(['block', 'inline-block', 'inline']),
+
+    /**
+     * Time to wait (in milliseconds) before showing the tooltip
+     */
+    delay: PropTypes.number,
   };
 
   static defaultProps = {
@@ -70,12 +75,27 @@ class Tooltip extends React.Component {
     this.tooltipId = domId('tooltip-');
   }
 
-  handleOpen = evt => {
+  setOpen = () => {
     this.setState({isOpen: true});
   };
 
+  handleOpen = evt => {
+    const {delay} = this.props;
+
+    if (delay) {
+      this.delayTimeout = window.setTimeout(this.setOpen, delay);
+    } else {
+      this.setOpen();
+    }
+  };
+
   handleClose = evt => {
     this.setState({isOpen: false});
+
+    if (this.delayTimeout) {
+      window.clearTimeout(this.delayTimeout);
+      this.delayTimeout = null;
+    }
   };
 
   renderTrigger(children, ref) {
diff --git a/src/sentry/static/sentry/app/views/stream/organizationSavedSearchSelector.jsx b/src/sentry/static/sentry/app/views/stream/organizationSavedSearchSelector.jsx
index 8b9d5bb98b..4938f4832a 100644
--- a/src/sentry/static/sentry/app/views/stream/organizationSavedSearchSelector.jsx
+++ b/src/sentry/static/sentry/app/views/stream/organizationSavedSearchSelector.jsx
@@ -8,6 +8,7 @@ import Button from 'app/components/button';
 import Confirm from 'app/components/confirm';
 import DropdownButton from 'app/components/dropdownButton';
 import DropdownControl from 'app/components/dropdownControl';
+import Tooltip from 'app/components/tooltip';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
@@ -47,33 +48,44 @@ export default class OrganizationSavedSearchSelector extends React.Component {
       return <EmptyItem>{t("There don't seem to be any saved searches yet.")}</EmptyItem>;
     }
 
-    return savedSearchList.map(search => (
-      <MenuItem key={search.id}>
-        <a tabIndex="-1" onClick={() => onSavedSearchSelect(search)}>
-          <SearchTitle>{search.name}</SearchTitle>
-          <SearchQuery>{search.query}</SearchQuery>
-        </a>
-        {search.isGlobal === false && search.isPinned === false && (
-          <Access
-            organization={organization}
-            access={['org:write']}
-            renderNoAccessMessage={false}
-          >
-            <Confirm
-              onConfirm={() => onSavedSearchDelete(search)}
-              message={t('Are you sure you want to delete this saved search?')}
-              stopPropagation
+    return savedSearchList.map((search, index) => (
+      <Tooltip
+        title={
+          <span>
+            {search.name} â€¢ <TooltipSearchQuery>{search.query}</TooltipSearchQuery>
+          </span>
+        }
+        containerDisplayMode="block"
+        delay={1000}
+        key={search.id}
+      >
+        <MenuItem last={index == savedSearchList.length - 1}>
+          <MenuItemLink tabIndex="-1" onClick={() => onSavedSearchSelect(search)}>
+            <SearchTitle>{search.name}</SearchTitle>
+            <SearchQuery>{search.query}</SearchQuery>
+          </MenuItemLink>
+          {search.isGlobal === false && search.isPinned === false && (
+            <Access
+              organization={organization}
+              access={['org:write']}
+              renderNoAccessMessage={false}
             >
-              <DeleteButton
-                borderless
-                title={t('Delete this saved search')}
-                icon="icon-trash"
-                size="zero"
-              />
-            </Confirm>
-          </Access>
-        )}
-      </MenuItem>
+              <Confirm
+                onConfirm={() => onSavedSearchDelete(search)}
+                message={t('Are you sure you want to delete this saved search?')}
+                stopPropagation
+              >
+                <DeleteButton
+                  borderless
+                  title={t('Delete this saved search')}
+                  icon="icon-trash"
+                  size="zero"
+                />
+              </Confirm>
+            </Access>
+          )}
+        </MenuItem>
+      </Tooltip>
     ));
   }
 
@@ -81,7 +93,7 @@ export default class OrganizationSavedSearchSelector extends React.Component {
     return (
       <Container>
         <DropdownControl
-          menuWidth="375px"
+          menuWidth="35vw"
           blendWithActor
           button={({isOpen, getActorProps}) => (
             <StyledDropdownButton {...getActorProps({isStyled: true})} isOpen={isOpen}>
@@ -139,6 +151,12 @@ const SearchQuery = styled('code')`
   background: inherit;
 `;
 
+const TooltipSearchQuery = styled('span')`
+  color: ${p => p.theme.gray1};
+  font-weight: normal;
+  font-family: ${p => p.theme.text.familyMono};
+`;
+
 const DeleteButton = styled(Button)`
   color: ${p => p.theme.gray1};
   background: transparent;
@@ -155,22 +173,21 @@ const MenuItem = styled('li')`
   display: flex;
 
   position: relative;
-  border-bottom: 1px solid ${p => p.theme.borderLight};
+  border-bottom: ${p => (!p.last ? `1px solid ${p.theme.borderLight}` : null)};
   font-size: ${p => p.theme.fontSizeMedium};
   padding: 0;
 
-  &:last-child {
-    border-bottom: 0;
-  }
   & :hover {
     background: ${p => p.theme.offWhite};
   }
+`;
 
-  & a {
-    display: block;
-    flex-grow: 1;
-    padding: ${space(1)} ${space(1.5)};
-  }
+const MenuItemLink = styled('a')`
+  display: block;
+  flex-grow: 1;
+  padding: ${space(1)} ${space(1.5)};
+
+  ${overflowEllipsis}
 `;
 
 const EmptyItem = styled('li')`
