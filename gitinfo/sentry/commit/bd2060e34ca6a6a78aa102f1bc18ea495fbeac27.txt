commit bd2060e34ca6a6a78aa102f1bc18ea495fbeac27
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Wed Apr 4 06:46:28 2018 +0200

    fix: Use queries instead of api requests for wizard (#7847)
    
    * fix: Use queries instead of api requests for wizard
    
    * fix: Add additional test
    
    * ref: Remove .all()

diff --git a/src/sentry/web/frontend/setup_wizard.py b/src/sentry/web/frontend/setup_wizard.py
index 7e106fb052..db268176a0 100644
--- a/src/sentry/web/frontend/setup_wizard.py
+++ b/src/sentry/web/frontend/setup_wizard.py
@@ -1,13 +1,14 @@
 from __future__ import absolute_import
 
 from sentry.cache import default_cache
-from django.core.urlresolvers import reverse
 
-from sentry.api import client
+from sentry import roles
 from sentry.models import ApiToken
 from sentry.api.serializers import serialize
 from sentry.web.frontend.base import BaseView
 from sentry.web.helpers import render_to_response
+from sentry.models import (Organization, OrganizationStatus, Project, ProjectKey,
+                           ProjectKeyStatus, ProjectStatus)
 from sentry.api.endpoints.setup_wizard import SETUP_WIZARD_CACHE_KEY, SETUP_WIZARD_CACHE_TIMEOUT
 
 
@@ -27,25 +28,28 @@ class SetupWizardView(BaseView):
         if wizard_data is None:
             return self.redirect_to_org(request)
 
-        orgs = client.get(
-            reverse('sentry-api-0-organizations'), request=request)
+        orgs = Organization.objects.filter(
+            member_set__role__in=[x.id for x in roles.with_scope('org:read')],
+            member_set__user=request.user,
+            status=OrganizationStatus.VISIBLE,
+        ).order_by('-date_added')[:50]
 
         filled_projects = []
 
-        for org in orgs.data:
-            projects = client.get(reverse('sentry-api-0-organization-projects', kwargs={
-                'organization_slug': org.get('slug')
-            }), request=request)
-            for project in projects.data:
-                if project.get('status') == 'deleted':
-                    continue  # skip if project has been deleted
-                enriched_project = project
-                enriched_project['organization'] = org
-                keys = client.get(reverse('sentry-api-0-project-keys', kwargs={
-                    'organization_slug': org.get('slug'),
-                    'project_slug': project.get('slug')
-                }), request=request)
-                enriched_project['keys'] = keys.data
+        for org in orgs:
+            projects = list(Project.objects.filter(
+                organization=org,
+                status=ProjectStatus.VISIBLE,
+            ).order_by('-date_added')[:50])
+            for project in projects:
+                enriched_project = serialize(project)
+                enriched_project['organization'] = serialize(org)
+                keys = list(ProjectKey.objects.filter(
+                    project=project,
+                    roles=ProjectKey.roles.store,
+                    status=ProjectKeyStatus.ACTIVE,
+                ))
+                enriched_project['keys'] = serialize(keys)
                 filled_projects.append(enriched_project)
 
         # Fetching or creating a token
diff --git a/tests/sentry/web/frontend/test_setup_wizard.py b/tests/sentry/web/frontend/test_setup_wizard.py
index 2380e8a106..95cf8cd278 100644
--- a/tests/sentry/web/frontend/test_setup_wizard.py
+++ b/tests/sentry/web/frontend/test_setup_wizard.py
@@ -47,3 +47,29 @@ class SetupWizard(PermissionTestCase):
         resp = self.client.get(url)
 
         assert resp.status_code == 302
+
+    def test_project(self):
+        self.org = self.create_organization(owner=self.user)
+        self.team = self.create_team(organization=self.org, name='Mariachi Band')
+        self.project = self.create_project(
+            organization=self.org,
+            teams=[self.team],
+            name='Bengal',
+        )
+        self.login_as(self.user)
+
+        key = '%s%s' % (SETUP_WIZARD_CACHE_KEY, 'abc')
+        cache.set(key, 'test')
+
+        url = reverse('sentry-project-wizard-fetch', kwargs={
+            'wizard_hash': 'abc'
+        })
+        resp = self.client.get(url)
+
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/setup-wizard.html')
+        cached = cache.get(key)
+        assert cached.get('apiKeys').get('scopes')[0] == 'project:releases'
+        assert cached.get('projects')[0].get('status') == 'active'
+        assert cached.get('projects')[0].get('keys')[0].get('isActive')
+        assert cached.get('projects')[0].get('organization').get('status').get('id') == 'active'
