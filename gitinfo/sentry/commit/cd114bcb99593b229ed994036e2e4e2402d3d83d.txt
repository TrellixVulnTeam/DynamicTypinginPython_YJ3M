commit cd114bcb99593b229ed994036e2e4e2402d3d83d
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 22 21:04:44 2012 -0800

    Gracefully handle events that are sent multiple times

diff --git a/sentry/manager.py b/sentry/manager.py
index 4c97a12c1a..906872a4fb 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -14,7 +14,7 @@ import logging
 import re
 import warnings
 
-from django.db import models, transaction
+from django.db import models, transaction, IntegrityError
 from django.db.models import Sum, F
 from django.utils.encoding import force_unicode
 
@@ -340,7 +340,11 @@ class GroupManager(models.Manager, ChartMixin):
 
         # save the event unless its been sampled
         if not is_sample:
-            event.save()
+            try:
+                event.save()
+            except IntegrityError:
+                transaction.rollback_unless_managed(using=group._state.db)
+                return event
 
         transaction.commit_unless_managed(using=group._state.db)
 
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 066bf4abb7..73522719fc 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -7,7 +7,7 @@ import mock
 
 from sentry.exceptions import InvalidInterface, InvalidData
 from sentry.interfaces import Interface
-from sentry.models import Group, Project
+from sentry.models import Event, Group, Project
 
 from tests.base import TestCase
 
@@ -276,3 +276,13 @@ class SentryManagerTest(TestCase):
         self.assertEquals(user['lineno'], 2)
         self.assertTrue('context_line' in user)
         self.assertEquals(user['context_line'], 'bar\n')
+
+    def test_dupe_message_id(self):
+        event = Group.objects.from_kwargs(1, event_id=1, message='foo')
+        self.assertEquals(event.message, 'foo')
+        self.assertEquals(event.project_id, 1)
+        self.assertEquals(Event.objects.count(), 1)
+
+        # ensure that calling it again doesnt raise a db error
+        Group.objects.from_kwargs(1, event_id=1, message='foo')
+        self.assertEquals(Event.objects.count(), 1)
