commit 91943c13ec0419009212f1e028584c8c621ab4ee
Author: evanh <evanh@users.noreply.github.com>
Date:   Thu Feb 13 10:51:10 2020 -0500

    fix(discover2) Handle case with empty count and results (#16980)
    
    There is a case where we get a result with an empty row, e.g. count = 0,
    project_id = 0. Since project_id 0 doesn't exist, handle that case to translate
    to an empty project name.

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index 01ad6a2556..59e682a90a 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -257,7 +257,11 @@ class OrganizationEventsV2Endpoint(OrganizationEventsEndpointBase):
         for result in results:
             for key in ("projectid", "project.id"):
                 if key in result:
-                    result["project.name"] = projects[result[key]]
+                    # Handle bizarre empty case
+                    if result[key] == 0:
+                        result["project.name"] = ""
+                    else:
+                        result["project.name"] = projects[result[key]]
                     if key not in fields:
                         del result[key]
 
diff --git a/tests/snuba/api/endpoints/test_organization_events_v2.py b/tests/snuba/api/endpoints/test_organization_events_v2.py
index dd25416d8e..edf19007f9 100644
--- a/tests/snuba/api/endpoints/test_organization_events_v2.py
+++ b/tests/snuba/api/endpoints/test_organization_events_v2.py
@@ -845,6 +845,39 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
         assert data[0]["count_id"] == 3
         assert data[1]["count_id"] == 1
 
+    def test_empty_count_query(self):
+        self.login_as(user=self.user)
+        project = self.create_project()
+
+        event = self.store_event(
+            data={
+                "event_id": "a" * 32,
+                "timestamp": iso_format(before_now(minutes=5)),
+                "fingerprint": ["1123581321"],
+                "user": {"email": "foo@example.com"},
+                "tags": {"language": "C++"},
+            },
+            project_id=project.id,
+        )
+
+        with self.feature("organizations:discover-basic"):
+            response = self.client.get(
+                self.url,
+                format="json",
+                data={
+                    "field": ["count()"],
+                    "query": "issue.id:%d timestamp:>%s" % (event.group_id, self.min_ago),
+                    "statsPeriod": "14d",
+                },
+            )
+
+        assert response.status_code == 200, response.content
+        data = response.data["data"]
+        assert len(data) == 1
+        assert data[0]["project.name"] == ""
+        assert data[0]["count"] == 0
+        assert data[0]["latest_event"] == ""
+
     def test_reference_event(self):
         self.login_as(user=self.user)
 
