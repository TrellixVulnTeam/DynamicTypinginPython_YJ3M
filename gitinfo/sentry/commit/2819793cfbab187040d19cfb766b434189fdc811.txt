commit 2819793cfbab187040d19cfb766b434189fdc811
Author: Meredith <meredith@getsentry.com>
Date:   Thu Jul 13 16:09:26 2017 -0700

    add test option for plugins

diff --git a/src/sentry/api/endpoints/project_plugin_details.py b/src/sentry/api/endpoints/project_plugin_details.py
index 0e5eddb35b..6b4cf5d8e0 100644
--- a/src/sentry/api/endpoints/project_plugin_details.py
+++ b/src/sentry/api/endpoints/project_plugin_details.py
@@ -1,11 +1,13 @@
 from __future__ import absolute_import
 
+import logging
 import six
 
 from django import forms
 from django.core.urlresolvers import reverse
 from rest_framework import serializers
 from rest_framework.response import Response
+from requests.exceptions import HTTPError
 
 from sentry.exceptions import PluginError, PluginIdentityRequired
 from sentry.plugins import plugins
@@ -48,6 +50,22 @@ class ProjectPluginDetailsEndpoint(ProjectEndpoint):
         """
         plugin = self._get_plugin(plugin_id)
 
+        if request.DATA['test'] and plugin.is_testable():
+            try:
+                test_results = plugin.test_configuration(project)
+            except Exception as exc:
+                if isinstance(exc, HTTPError):
+                    test_results = '%s\n%s' % (exc, exc.response.text[:256])
+                elif hasattr(exc, 'read') and callable(exc.read):
+                    test_results = '%s\n%s' % (exc, exc.read()[:256])
+                else:
+                    logging.exception('Plugin(%s) raised an error during test',
+                                      plugin_id)
+                    test_results = 'There was an internal error with the Plugin'
+            if not test_results:
+                test_results = 'No errors returned'
+            return Response({'detail': test_results}, status=200)
+
         if not plugin.can_disable:
             return Response({'detail': ERR_ALWAYS_ENABLED}, status=400)
 
diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 831d84aa01..914b47aee7 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -81,6 +81,23 @@ const PluginConfig = React.createClass({
     });
   },
 
+  testPlugin() {
+    let loadingIndicator = IndicatorStore.add(t('Sending test..'));
+    this.api.request(this.getPluginEndpoint(), {
+      method: 'POST',
+      data: {
+        test: true
+      },
+      success: data => {
+        IndicatorStore.remove(loadingIndicator);
+        IndicatorStore.add(t('Test Complete!'), 'success');
+      },
+      error: error => {
+        IndicatorStore.add(t('Something is wrong. Please try again.'), 'error');
+      }
+    });
+  },
+
   createMarkup() {
     return {__html: this.props.data.doc};
   },
@@ -94,6 +111,10 @@ const PluginConfig = React.createClass({
           {data.canDisable &&
             data.enabled &&
             <div className="pull-right">
+              {data.isTestable &&
+                <a onClick={this.testPlugin} className="btn btn-sm btn-default">
+                  Test Plugin
+                </a>}
               <a className="btn btn-sm btn-default" onClick={this.disablePlugin}>
                 {t('Disable')}
               </a>
