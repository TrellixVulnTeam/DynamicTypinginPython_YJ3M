commit dc952aa0924fe232d1e4f455c531ec395da6bb9e
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Mon Jun 1 15:09:09 2020 -0700

    fixes SENTRY-G92 (#19114)

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index b78cbdcd98..2a24d8f4df 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0082_alert_rules_threshold_float
+sentry: 0083_add_max_length_webhook_url
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0083_add_max_length_webhook_url.py b/src/sentry/migrations/0083_add_max_length_webhook_url.py
new file mode 100644
index 0000000000..92b4538c0b
--- /dev/null
+++ b/src/sentry/migrations/0083_add_max_length_webhook_url.py
@@ -0,0 +1,37 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.29 on 2020-06-01 20:07
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0082_alert_rules_threshold_float'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='sentryapp',
+            name='webhook_url',
+            field=models.URLField(max_length=512, null=True),
+        ),
+    ]
diff --git a/src/sentry/models/sentryapp.py b/src/sentry/models/sentryapp.py
index 673bc67499..12557361c0 100644
--- a/src/sentry/models/sentryapp.py
+++ b/src/sentry/models/sentryapp.py
@@ -100,7 +100,7 @@ class SentryApp(ParanoidModel, HasApiScopes):
     uuid = models.CharField(max_length=64, default=default_uuid)
 
     redirect_url = models.URLField(null=True)
-    webhook_url = models.URLField(null=True)
+    webhook_url = models.URLField(max_length=512, null=True)
     # does the application subscribe to `event.alert`,
     # meaning can it be used in alert rules as a {service} ?
     is_alertable = models.BooleanField(default=False)
