commit 47141ac3c6e20ee282910023b183d81e13d8e813
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Fri May 12 14:47:02 2017 -0700

    remove project release endpoints from api docs (#5389)

diff --git a/src/sentry/api/endpoints/project_release_details.py b/src/sentry/api/endpoints/project_release_details.py
index 76f32b4e06..4f577cfc85 100644
--- a/src/sentry/api/endpoints/project_release_details.py
+++ b/src/sentry/api/endpoints/project_release_details.py
@@ -3,57 +3,16 @@ from __future__ import absolute_import
 from rest_framework import serializers
 from rest_framework.response import Response
 
-from sentry.api.base import DocSection
 from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import CommitSerializer, ListField
 from sentry.models import Activity, Group, Release, ReleaseFile
 from sentry.plugins.interfaces.releasehook import ReleaseHook
-from sentry.utils.apidocs import scenario, attach_scenarios
 
 ERR_RELEASE_REFERENCED = "This release is referenced by active issues and cannot be removed."
 
 
-@scenario('RetrieveRelease')
-def retrieve_release_scenario(runner):
-    runner.request(
-        method='GET',
-        path='/projects/%s/%s/releases/%s/' % (
-            runner.org.slug, runner.default_project.slug,
-            runner.default_release.version)
-    )
-
-
-@scenario('UpdateRelease')
-def update_release_scenario(runner):
-    release = runner.utils.create_release(runner.default_project,
-                                          runner.me, version='3000')
-    runner.request(
-        method='PUT',
-        path='/projects/%s/%s/releases/%s/' % (
-            runner.org.slug, runner.default_project.slug,
-            release.version),
-        data={
-            'url': 'https://vcshub.invalid/user/project/refs/deadbeef1337',
-            'ref': 'deadbeef1337'
-        }
-    )
-
-# TODO(dcramer): this can't work with the current fixtures
-# as an existing Group references the Release
-# @scenario('DeleteRelease')
-# def delete_release_scenario(runner):
-#     release = runner.utils.create_release(runner.default_project,
-#                                           runner.me, version='4000')
-#     runner.request(
-#         method='DELETE',
-#         path='/projects/%s/%s/releases/%s/' % (
-#             runner.org.slug, runner.default_project.slug,
-#             release.version)
-#     )
-
-
 class ReleaseSerializer(serializers.Serializer):
     ref = serializers.CharField(max_length=64, required=False)
     url = serializers.URLField(required=False)
@@ -62,10 +21,8 @@ class ReleaseSerializer(serializers.Serializer):
 
 
 class ProjectReleaseDetailsEndpoint(ProjectEndpoint):
-    doc_section = DocSection.RELEASES
     permission_classes = (ProjectReleasePermission,)
 
-    @attach_scenarios([retrieve_release_scenario])
     def get(self, request, project, version):
         """
         Retrieve a Project's Release
@@ -91,7 +48,6 @@ class ProjectReleaseDetailsEndpoint(ProjectEndpoint):
 
         return Response(serialize(release, request.user, project=project))
 
-    @attach_scenarios([update_release_scenario])
     def put(self, request, project, version):
         """
         Update a Project's Release
@@ -161,7 +117,6 @@ class ProjectReleaseDetailsEndpoint(ProjectEndpoint):
 
         return Response(serialize(release, request.user))
 
-    # @attach_scenarios([delete_release_scenario])
     def delete(self, request, project, version):
         """
         Delete a Project's Release
diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
index d0046ff273..b2bdc75e19 100644
--- a/src/sentry/api/endpoints/project_releases.py
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -5,7 +5,6 @@ from django.db import IntegrityError, transaction
 from rest_framework import serializers
 from rest_framework.response import Response
 
-from sentry.api.base import DocSection
 from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.fields.user import UserField
@@ -13,37 +12,11 @@ from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import CommitSerializer, ListField
 from sentry.models import Activity, Release
 from sentry.plugins.interfaces.releasehook import ReleaseHook
-from sentry.utils.apidocs import scenario, attach_scenarios
 
 
 BAD_RELEASE_CHARS = '\n\f\t/'
 
 
-@scenario('CreateNewRelease')
-def create_new_release_scenario(runner):
-    runner.request(
-        method='POST',
-        path='/projects/%s/%s/releases/' % (
-            runner.org.slug, runner.default_project.slug),
-        data={
-            'version': '2.0rc2',
-            'ref': '6ba09a7c53235ee8a8fa5ee4c1ca8ca886e7fdbb',
-            # TODO(dcramer): once we improve fixtures we should show the
-            # commits attribute being used, as well as 'dateReleased'
-            # 'commits': [{'id': 'a' * 40}, {'id': 'b' * 40}],
-        }
-    )
-
-
-@scenario('ListReleases')
-def list_releases_scenario(runner):
-    runner.request(
-        method='GET',
-        path='/projects/%s/%s/releases/' % (
-            runner.org.slug, runner.default_project.slug)
-    )
-
-
 class ReleaseSerializer(serializers.Serializer):
     version = serializers.CharField(max_length=64, required=True)
     ref = serializers.CharField(max_length=64, required=False)
@@ -60,10 +33,8 @@ class ReleaseSerializer(serializers.Serializer):
 
 
 class ProjectReleasesEndpoint(ProjectEndpoint):
-    doc_section = DocSection.RELEASES
     permission_classes = (ProjectReleasePermission,)
 
-    @attach_scenarios([list_releases_scenario])
     def get(self, request, project):
         """
         List a Project's Releases
@@ -102,7 +73,6 @@ class ProjectReleasesEndpoint(ProjectEndpoint):
             on_results=lambda x: serialize(x, request.user, project=project),
         )
 
-    @attach_scenarios([create_new_release_scenario])
     def post(self, request, project):
         """
         Create a New Release for a Project
