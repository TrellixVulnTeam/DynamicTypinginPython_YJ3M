commit 221103e5dfd041dd26f61ee773ca154560d1ae01
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Oct 11 11:04:50 2017 -0700

    fix(http-interface): Mark KeyValueList with isContextData

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index fa8a76f493..97918622c4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -21,7 +21,9 @@ const RichHttpContent = React.createClass({
       case 'application/json':
         return <ContextData data={data.data} />;
       case 'application/x-www-form-urlencoded':
-        return <KeyValueList data={objectToSortedTupleArray(data.data)} />;
+        return <KeyValueList
+          data={objectToSortedTupleArray(data.data)}
+          isContextData={true} />;
       default:
         return <pre>{JSON.stringify(data.data, null, 2)}</pre>;
     }
@@ -31,7 +33,9 @@ const RichHttpContent = React.createClass({
     try {
       // Sentry API abbreviates long query string values, sometimes resulting in
       // an un-parsable querystring ... stay safe kids
-      return <KeyValueList data={objectToSortedTupleArray(queryString.parse(data))} />;
+      return <KeyValueList
+        data={objectToSortedTupleArray(queryString.parse(data))}
+        isContextData={true} />;
     } catch (e) {
       return <pre>{data}</pre>;
     }
