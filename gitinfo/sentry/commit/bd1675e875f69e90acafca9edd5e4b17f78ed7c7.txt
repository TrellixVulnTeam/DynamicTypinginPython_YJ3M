commit bd1675e875f69e90acafca9edd5e4b17f78ed7c7
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Oct 18 13:51:32 2019 -0700

    ref(ui): Refactor `<PluginConfig>` (#15130)
    
    * Update to ES6 class
    * Remove `grid-emotion`
    * Use `<PanelAlert>`
    * Remove `IndicatorStore`

diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 9d6200ad18..de27c98e9c 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -1,56 +1,54 @@
-import {Box, Flex} from 'grid-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
 import _ from 'lodash';
-import createReactClass from 'create-react-class';
-
+import styled from 'react-emotion';
+
+import {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';
+import {
+  addErrorMessage,
+  addLoadingMessage,
+  addSuccessMessage,
+} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
-import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
-import IndicatorStore from 'app/stores/indicatorStore';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import plugins from 'app/plugins';
+import space from 'app/styles/space';
+import withApi from 'app/utils/withApi';
 
-const PluginConfig = createReactClass({
-  displayName: 'PluginConfig',
-
-  propTypes: {
+class PluginConfig extends React.Component {
+  static propTypes = {
     api: PropTypes.object,
     organization: PropTypes.object.isRequired,
     project: PropTypes.object.isRequired,
     data: PropTypes.object.isRequired,
     onDisablePlugin: PropTypes.func,
     enabled: PropTypes.bool,
-  },
-
-  getDefaultProps() {
-    return {
-      onDisablePlugin: () => {},
-    };
-  },
-
-  getInitialState() {
-    return {
-      loading: !plugins.isLoaded(this.props.data),
-      testResults: '',
-    };
-  },
-
-  componentWillMount() {
+  };
+
+  static defaultProps = {
+    onDisablePlugin: () => {},
+  };
+
+  state = {
+    loading: !plugins.isLoaded(this.props.data),
+    testResults: '',
+  };
+
+  componentDidMount() {
     this.loadPlugin(this.props.data);
-  },
+  }
 
-  componentWillReceiveProps(nextProps) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     this.loadPlugin(nextProps.data);
-  },
+  }
 
   shouldComponentUpdate(nextProps, nextState) {
     return (
       !_.isEqual(nextState, this.state) || !_.isEqual(nextProps.data, this.props.data)
     );
-  },
+  }
 
   loadPlugin(data) {
     this.setState(
@@ -63,41 +61,40 @@ const PluginConfig = createReactClass({
         });
       }
     );
-  },
+  }
 
   getPluginEndpoint() {
     const {organization, project, data} = this.props;
     return `/projects/${organization.slug}/${project.slug}/plugins/${data.id}/`;
-  },
+  }
 
-  disablePlugin() {
+  handleDisablePlugin = () => {
     this.props.onDisablePlugin(this.props.data);
-  },
-
-  testPlugin() {
-    const loadingIndicator = IndicatorStore.add(t('Sending test..'));
-    this.props.api.request(this.getPluginEndpoint(), {
-      method: 'POST',
-      data: {
-        test: true,
-      },
-      success: data => {
-        this.setState({testResults: JSON.stringify(data.detail)});
-        IndicatorStore.remove(loadingIndicator);
-        IndicatorStore.add(t('Test Complete!'), 'success');
-      },
-      error: error => {
-        IndicatorStore.add(
-          t('An unexpected error occurred while testing your plugin. Please try again.'),
-          'error'
-        );
-      },
-    });
-  },
+  };
+
+  handleTestPlugin = async () => {
+    addLoadingMessage(t('Sending test...'));
+
+    try {
+      const data = await this.props.api.requestPromise(this.getPluginEndpoint(), {
+        method: 'POST',
+        data: {
+          test: true,
+        },
+      });
+
+      this.setState({testResults: JSON.stringify(data.detail)});
+      addSuccessMessage(t('Test Complete!'));
+    } catch (_err) {
+      addErrorMessage(
+        t('An unexpected error occurred while testing your plugin. Please try again.')
+      );
+    }
+  };
 
   createMarkup() {
     return {__html: this.props.data.doc};
-  },
+  }
 
   render() {
     const {data} = this.props;
@@ -108,43 +105,39 @@ const PluginConfig = createReactClass({
     return (
       <Panel className={`plugin-config ref-plugin-config-${data.id}`}>
         <PanelHeader hasButtons>
-          <Flex align="center" flex="1">
-            <Flex align="center" mr={1}>
-              <PluginIcon pluginId={data.id} />
-            </Flex>
+          <PluginName>
+            <StyledPluginIcon pluginId={data.id} />
             <span>{data.name}</span>
-          </Flex>
+          </PluginName>
+
           {data.canDisable && enabled && (
-            <Flex align="center">
-              <Box mr={1}>
-                {data.isTestable && (
-                  <Button onClick={this.testPlugin} size="small">
-                    {t('Test Plugin')}
-                  </Button>
-                )}
-              </Box>
-              <Box>
-                <Button size="small" onClick={this.disablePlugin}>
-                  {t('Disable')}
-                </Button>
-              </Box>
-            </Flex>
+            <Actions>
+              {data.isTestable && (
+                <TestPluginButton onClick={this.handleTestPlugin} size="small">
+                  {t('Test Plugin')}
+                </TestPluginButton>
+              )}
+              <Button size="small" onClick={this.handleDisablePlugin}>
+                {t('Disable')}
+              </Button>
+            </Actions>
           )}
         </PanelHeader>
-        <PanelBody px={2} pt={2} flex wrap="wrap">
-          {data.status === 'beta' ? (
-            <div className="alert alert-block alert-warning">
-              <strong>
-                {t('Note: This plugin is considered beta and may change in the future.')}
-              </strong>
-            </div>
-          ) : null}
-          {this.state.testResults !== '' ? (
-            <div className="alert alert-block alert-warning">
-              <strong>Test Results: </strong>
-              <p>{this.state.testResults}</p>
-            </div>
-          ) : null}
+
+        {data.status === 'beta' && (
+          <PanelAlert type="warning">
+            {t('This plugin is considered beta and may change in the future.')}
+          </PanelAlert>
+        )}
+
+        {this.state.testResults !== '' && (
+          <PanelAlert type="info">
+            <strong>Test Results</strong>
+            <div>{this.state.testResults}</div>
+          </PanelAlert>
+        )}
+
+        <StyledPanelBody>
           <div dangerouslySetInnerHTML={this.createMarkup()} />
           {this.state.loading ? (
             <LoadingIndicator />
@@ -154,12 +147,33 @@ const PluginConfig = createReactClass({
               project: this.props.project,
             })
           )}
-        </PanelBody>
+        </StyledPanelBody>
       </Panel>
     );
-  },
-});
+  }
+}
 
 export {PluginConfig};
-
 export default withApi(PluginConfig);
+
+const PluginName = styled('div')`
+  display: flex;
+  align-items: center;
+  flex: 1;
+`;
+
+const StyledPluginIcon = styled(PluginIcon)`
+  margin-right: ${space(1)};
+`;
+
+const Actions = styled('div')`
+  display: flex;
+`;
+const TestPluginButton = styled(Button)`
+  margin-right: ${space(1)};
+`;
+
+const StyledPanelBody = styled(PanelBody)`
+  padding: ${space(2)};
+  padding-bottom: 0;
+`;
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index 4442b7f080..94a4ea1d60 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -625,151 +625,112 @@ exports[`ProjectPluginDetails renders 1`] = `
                                       className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
                                       is={null}
                                     >
-                                      <Flex
-                                        align="center"
-                                        flex="1"
-                                      >
-                                        <Base
-                                          align="center"
-                                          className="css-1yrw3fm"
-                                          flex="1"
+                                      <PluginName>
+                                        <div
+                                          className="css-1uqkybv-PluginName e1ueudyh0"
                                         >
-                                          <div
-                                            className="css-1yrw3fm"
-                                            is={null}
+                                          <StyledPluginIcon
+                                            pluginId="amazon-sqs"
+                                            size={20}
                                           >
-                                            <Flex
-                                              align="center"
-                                              mr={1}
-                                            >
-                                              <Base
-                                                align="center"
-                                                className="css-fbx8di"
-                                                mr={1}
-                                              >
-                                                <div
-                                                  className="css-fbx8di"
-                                                  is={null}
-                                                >
-                                                  <PluginIcon
-                                                    pluginId="amazon-sqs"
-                                                    size={20}
-                                                  >
-                                                    <div
-                                                      className="css-1f9d6f6-PluginIcon e7e65lm0"
-                                                      size={20}
-                                                    />
-                                                  </PluginIcon>
-                                                </div>
-                                              </Base>
-                                            </Flex>
-                                            <span>
-                                              Amazon SQS
-                                            </span>
-                                          </div>
-                                        </Base>
-                                      </Flex>
+                                            <div
+                                              className="css-1o1r3vb-PluginIcon-StyledPluginIcon e1ueudyh1"
+                                              size={20}
+                                            />
+                                          </StyledPluginIcon>
+                                          <span>
+                                            Amazon SQS
+                                          </span>
+                                        </div>
+                                      </PluginName>
                                     </div>
                                   </Base>
                                 </Flex>
                               </Component>
                             </PanelHeader>
-                            <PanelBody
+                            <StyledPanelBody
                               direction="column"
                               disablePadding={true}
-                              flex={true}
-                              pt={2}
-                              px={2}
-                              wrap="wrap"
+                              flex={false}
                             >
-                              <Flex
-                                className="css-a4ya23-textStyles"
+                              <PanelBody
+                                className="css-1shq0zk-StyledPanelBody e1ueudyh4"
                                 direction="column"
-                                pt={2}
-                                px={2}
-                                wrap="wrap"
+                                disablePadding={true}
+                                flex={false}
                               >
-                                <Base
-                                  className="css-z9mjil-textStyles"
-                                  direction="column"
-                                  pt={2}
-                                  px={2}
-                                  wrap="wrap"
+                                <div
+                                  className="e1ueudyh4 css-sykvmd-textStyles-StyledPanelBody"
                                 >
                                   <div
-                                    className="css-z9mjil-textStyles"
-                                    is={null}
-                                  >
-                                    <div
-                                      dangerouslySetInnerHTML={
-                                        Object {
-                                          "__html": undefined,
-                                        }
+                                    dangerouslySetInnerHTML={
+                                      Object {
+                                        "__html": undefined,
                                       }
-                                    />
-                                    <PluginSettings
-                                      organization={
-                                        Object {
-                                          "access": Array [
-                                            "org:read",
-                                            "org:write",
-                                            "org:admin",
-                                            "org:integrations",
-                                            "project:read",
-                                            "project:write",
-                                            "project:admin",
-                                            "team:read",
-                                            "team:write",
-                                            "team:admin",
-                                          ],
-                                          "features": Array [],
-                                          "id": "3",
-                                          "name": "Organization Name",
-                                          "onboardingTasks": Array [],
-                                          "projects": Array [],
-                                          "scrapeJavaScript": true,
-                                          "slug": "org-slug",
-                                          "status": Object {
-                                            "id": "active",
-                                            "name": "active",
-                                          },
-                                          "teams": Array [],
-                                        }
+                                    }
+                                  />
+                                  <PluginSettings
+                                    organization={
+                                      Object {
+                                        "access": Array [
+                                          "org:read",
+                                          "org:write",
+                                          "org:admin",
+                                          "org:integrations",
+                                          "project:read",
+                                          "project:write",
+                                          "project:admin",
+                                          "team:read",
+                                          "team:write",
+                                          "team:admin",
+                                        ],
+                                        "features": Array [],
+                                        "id": "3",
+                                        "name": "Organization Name",
+                                        "onboardingTasks": Array [],
+                                        "projects": Array [],
+                                        "scrapeJavaScript": true,
+                                        "slug": "org-slug",
+                                        "status": Object {
+                                          "id": "active",
+                                          "name": "active",
+                                        },
+                                        "teams": Array [],
                                       }
-                                      plugin={
-                                        DefaultPlugin {
-                                          "assets": Array [],
-                                          "author": Object {
-                                            "name": "Sentry Team",
-                                            "url": "https://github.com/getsentry/sentry",
-                                          },
-                                          "canDisable": true,
-                                          "enabled": false,
-                                          "hasConfiguration": true,
-                                          "id": "amazon-sqs",
-                                          "isHidden": false,
-                                          "name": "Amazon SQS",
-                                          "slug": "amazon-sqs",
-                                          "version": "8.23.0.dev0",
-                                        }
+                                    }
+                                    plugin={
+                                      DefaultPlugin {
+                                        "assets": Array [],
+                                        "author": Object {
+                                          "name": "Sentry Team",
+                                          "url": "https://github.com/getsentry/sentry",
+                                        },
+                                        "canDisable": true,
+                                        "enabled": false,
+                                        "hasConfiguration": true,
+                                        "id": "amazon-sqs",
+                                        "isHidden": false,
+                                        "name": "Amazon SQS",
+                                        "slug": "amazon-sqs",
+                                        "version": "8.23.0.dev0",
                                       }
-                                      project={
-                                        Object {
-                                          "environments": Array [],
-                                          "hasAccess": true,
-                                          "id": "2",
-                                          "isBookmarked": false,
-                                          "isMember": true,
-                                          "name": "Project Name",
-                                          "slug": "project-slug",
-                                          "teams": Array [],
-                                        }
+                                    }
+                                    project={
+                                      Object {
+                                        "environments": Array [],
+                                        "hasAccess": true,
+                                        "id": "2",
+                                        "isBookmarked": false,
+                                        "isMember": true,
+                                        "name": "Project Name",
+                                        "slug": "project-slug",
+                                        "teams": Array [],
                                       }
-                                    />
-                                  </div>
-                                </Base>
-                              </Flex>
-                            </PanelBody>
+                                    }
+                                  />
+                                </div>
+                              </PanelBody>
+                            </StyledPanelBody>
                           </div>
                         </Component>
                       </Panel>
