commit 68b0d6aed0ba12d06267ed0609114ce4fc8531e3
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 26 09:52:29 2015 -0800

    Add ability to send bulk reminders

diff --git a/src/sentry/templates/sentry/organization-auth-provider-settings.html b/src/sentry/templates/sentry/organization-auth-provider-settings.html
index 69107817d8..8b6aa2e3aa 100644
--- a/src/sentry/templates/sentry/organization-auth-provider-settings.html
+++ b/src/sentry/templates/sentry/organization-auth-provider-settings.html
@@ -20,6 +20,18 @@
 
         <pre class="clippy" data-text="{{ login_url }}"><a href="{{ login_url }}">{{ login_url }}</a></pre>
 
+        {% if pending_links_count %}
+          <hr>
+
+          <h3>Non-SSO Members</h3>
+
+          <button class="btn btn-primary pull-right" name="op"
+                  value="reinvite" style="margin-left: 20px">Send Reminders</button>
+
+          <p>There are currently {{ pending_links_count }} member(s) who have not yet linked their account with {{ provider_name }}. Until this is done they will be unable to access the organization.</p>
+
+        {% endif %}
+
         {% if content %}
           <hr>
 
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index 39b59d3f66..60dfd80f7d 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -23,6 +23,8 @@ ERR_NO_SSO = _('The SSO feature is not enabled for this organization.')
 
 OK_PROVIDER_DISABLED = _('SSO authentication has been disabled.')
 
+OK_REMINDERS_SENT = _('A reminder email has been sent to members who have not yet linked their accounts.')
+
 
 class OrganizationAuthSettingsView(OrganizationView):
     required_access = OrganizationMemberType.OWNER
@@ -50,6 +52,14 @@ class OrganizationAuthSettingsView(OrganizationView):
 
         auth_provider.delete()
 
+    def _reinvite_members(self, request, organization):
+        member_list = OrganizationMember.objects.filter(
+            organization=organization,
+            flags=~getattr(OrganizationMember.flags, 'sso:linked'),
+        )
+        for member in member_list:
+            member.send_sso_link_email()
+
     def handle_existing_provider(self, request, organization, auth_provider):
         provider = auth_provider.get_provider()
         if request.method == 'POST':
@@ -62,6 +72,17 @@ class OrganizationAuthSettingsView(OrganizationView):
                     OK_PROVIDER_DISABLED,
                 )
 
+                next_uri = reverse('sentry-organization-auth-settings',
+                                   args=[organization.slug])
+                return self.redirect(next_uri)
+            elif op == 'reinvite':
+                self._reinvite_members(request, organization)
+
+                messages.add_message(
+                    request, messages.SUCCESS,
+                    OK_REMINDERS_SENT,
+                )
+
                 next_uri = reverse('sentry-organization-auth-settings',
                                    args=[organization.slug])
                 return self.redirect(next_uri)
@@ -77,7 +98,13 @@ class OrganizationAuthSettingsView(OrganizationView):
                 'provider': provider,
             })
 
+        pending_links_count = OrganizationMember.objects.filter(
+            organization=organization,
+            flags=getattr(OrganizationMember.flags, 'sso:linked'),
+        ).count()
+
         context = {
+            'pending_links_count': pending_links_count,
             'login_url': absolute_uri(reverse('sentry-organization-home', args=[organization.slug])),
             'auth_provider': auth_provider,
             'provider_name': provider.name,
