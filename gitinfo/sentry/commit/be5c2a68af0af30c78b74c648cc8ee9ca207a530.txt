commit be5c2a68af0af30c78b74c648cc8ee9ca207a530
Author: David Cramer <dcramer@David-Cramers-MacBook.local>
Date:   Fri Mar 5 17:49:20 2010 -0600

    Improve the overall visual appearance of the admin

diff --git a/djangodblog/admin.py b/djangodblog/admin.py
index 34e47d06e5..0da2fc8d7c 100644
--- a/djangodblog/admin.py
+++ b/djangodblog/admin.py
@@ -3,22 +3,22 @@ from django.contrib import admin
 from models import ErrorBatch, Error
 
 class ErrorBatchAdmin(admin.ModelAdmin):
-    list_display    = ('server_name', 'logger', 'status', 'error', 'last_seen', 'times_seen', 'url')
-    list_display_links = ('error',)
+    list_display    = ('shortened_url', 'logger', 'server_name', 'times_seen', 'last_seen')
+    #list_display_links = ('error',)
     list_filter     = ('logger', 'server_name', 'status', 'last_seen', 'class_name')
-    ordering        = ['-last_seen']
-    actions         = ['resolve_errorbatch']
+    ordering        = ('-last_seen',)
+    actions         = ('resolve_errorbatch',)
 
     def resolve_errorbatch(self, request, queryset):
         rows_updated = queryset.update(status=1)
         
         if rows_updated == 1:
-            message_bit = "1 error batch was"
+            message_bit = "1 error summary was"
         else:
-            message_bit = "%s error batches were" % rows_updated
+            message_bit = "%s error summaries were" % rows_updated
         self.message_user(request, "%s resolved." % message_bit)
         
-    resolve_errorbatch.short_description = 'Resolve selected error batches'
+    resolve_errorbatch.short_description = 'Resolve selected error summaries'
 
 class ErrorAdmin(admin.ModelAdmin):
     list_display    = ('logger', 'class_name', 'message', 'datetime', 'url', 'server_name')
diff --git a/djangodblog/models.py b/djangodblog/models.py
index d5aa7a782c..0a677e0982 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -1,6 +1,7 @@
 from django.db import models
 from django.conf import settings
 from django.utils.translation import ugettext_lazy as _
+from django.template.defaultfilters import urlizetrunc
 
 try:
     from idmapper.models import SharedMemoryModel as Model
@@ -46,16 +47,29 @@ class ErrorBatch(Model):
 
     objects         = DBLogManager()
 
-    def error(self):
-        return "%s: %s" % (self.class_name, self.message)
-    error.short_description = 'Error'
-
     class Meta:
         unique_together = (('logger', 'server_name', 'checksum'),)
-        verbose_name_plural = 'Error batches'
+        verbose_name_plural = 'Error summaries'
+        verbose_name = 'Error summary'
     
     def __unicode__(self):
-        return "(%s) %s: %s" % (self.times_seen, self.class_name, self.message)
+        return "(%s) %s: %s" % (self.times_seen, self.class_name, self.error())
+    
+    def shortened_url(self):
+        return urlizetrunc(self.url, 60)
+    shortened_url.allow_tags = True
+    shortened_url.short_description = "URL"
+    shortened_url.admin_order_field = 'url'
+
+    def error(self):
+        if len(self.message) > 100:
+            message = self.message[:97] + '...'
+        else:
+            message = self.message
+        return "%s: %s" % (self.class_name, message)
+    error.short_description = 'Error'
+
+
 
 class Error(Model):
     logger          = models.CharField(max_length=64, blank=True, default='root', db_index=True)
diff --git a/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html b/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html
new file mode 100644
index 0000000000..6c4fc9a03b
--- /dev/null
+++ b/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html
@@ -0,0 +1,23 @@
+{% extends "admin/change_list.html" %}
+
+{% load admin_list dblog_admin %}
+
+{% block extrastyle %}
+	{{ block.super }}
+	<style type="text/css">
+		#changelist .start-cell td, #changelist .start-cell th { border-bottom: 0 !important; }
+		#changelist td, #changelist th { padding-bottom: 3px; border-left: 0 !important; border: 0 !important; }
+		#changelist .end-cell td { border-top: 0; padding-top: 2px; }
+		#changelist .cell-status-0 { background: #FED; border-color: #E99; }
+		#changelist .cell-status-0.row2 { background: #FDC; border-color: #E88; }
+		#changelist td { border-color: inherit !important; }
+		#changelist .cell-status-1 { background: #dffee0; border-color: #99e999; }
+		#changelist .cell-status-1.row2 { background: #d1fdcf; border-color: #88e888; }
+	</style>
+{% endblock %}
+
+{% block result_list %}
+    {% if action_form and actions_on_top and cl.full_result_count %}{% admin_actions %}{% endif %}
+	{% result_list cl %}
+    {% if action_form and actions_on_bottom and cl.full_result_count %}{% admin_actions %}{% endif %}
+{% endblock %}
\ No newline at end of file
diff --git a/djangodblog/templates/admin/djangodblog/errorbatch/change_list_results.html b/djangodblog/templates/admin/djangodblog/errorbatch/change_list_results.html
new file mode 100644
index 0000000000..f0d087e827
--- /dev/null
+++ b/djangodblog/templates/admin/djangodblog/errorbatch/change_list_results.html
@@ -0,0 +1,18 @@
+{% if results %}
+	<table cellspacing="0">
+	<thead>
+	<tr>
+	{% for header in result_headers %}<th{{ header.class_attrib }}>
+	{% if header.sortable %}<a href="{{ header.url }}">{% endif %}
+	{{ header.text|capfirst }}
+	{% if header.sortable %}</a>{% endif %}</th>{% endfor %}
+	</tr>
+	</thead>
+	<tbody>
+	{% for result in results %}
+		<tr class="{% cycle 'row1' 'row2' %} start-cell cell-status-{{ result.instance.status }}">{% for item in result.cells %}{{ item }}{% endfor %}</tr>
+		<tr class="{% cycle 'row1' 'row2' %} end-cell cell-status-{{ result.instance.status }}"><td>&nbsp;</td><td style="color:#666;" colspan="{{ result.num_real_cells }}">{{ result.instance.error }}</tr>
+	{% endfor %}
+	</tbody>
+	</table>
+{% endif %}
\ No newline at end of file
diff --git a/djangodblog/templatetags/__init__.py b/djangodblog/templatetags/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/djangodblog/templatetags/dblog_admin.py b/djangodblog/templatetags/dblog_admin.py
new file mode 100644
index 0000000000..8d53129101
--- /dev/null
+++ b/djangodblog/templatetags/dblog_admin.py
@@ -0,0 +1,18 @@
+from django.contrib.admin.templatetags.admin_list import result_headers, items_for_result
+from django import template
+register = template.Library()
+
+def better_results(cl):
+    for res in cl.result_list:
+        cells = list(items_for_result(cl, res, None))
+        yield dict(
+            cells=cells,
+            instance=res,
+            num_real_cells=len(cells) - 1,
+        )
+
+def result_list(cl):
+    return {'cl': cl,
+            'result_headers': list(result_headers(cl)),
+            'results': list(better_results(cl))}
+result_list = register.inclusion_tag("admin/djangodblog/errorbatch/change_list_results.html")(result_list)
\ No newline at end of file
