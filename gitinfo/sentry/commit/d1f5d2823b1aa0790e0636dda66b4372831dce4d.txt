commit d1f5d2823b1aa0790e0636dda66b4372831dce4d
Author: Ayesha Omarali <ayesha.omarali@gmail.com>
Date:   Thu Sep 20 13:52:03 2018 -0700

    feat(Storybook): Adding Echarts Playground (#9779)

diff --git a/.storybook/config.js b/.storybook/config.js
index 879e82b40e..702094969b 100644
--- a/.storybook/config.js
+++ b/.storybook/config.js
@@ -5,6 +5,7 @@ import {configure, setAddon, getStorybook, addDecorator} from '@storybook/react'
 import infoAddon, {setDefaults} from '@storybook/addon-info';
 import {checkA11y} from '@storybook/addon-a11y';
 import {setOptions} from '@storybook/addon-options';
+import {withKnobs} from '@storybook/addon-knobs';
 
 import theme from '../src/sentry/static/sentry/app/utils/theme';
 import './storybook.less';
@@ -19,6 +20,7 @@ setDefaults({
 setAddon(infoAddon);
 addDecorator(checkA11y);
 addDecorator(withTheme);
+addDecorator(withKnobs);
 // Use webpack's require.context to load modules dynamically
 // From https://storybook.js.org/basics/writing-stories/
 const req = require.context('../docs-ui/components', true, /\.stories\.js$/);
diff --git a/docs-ui/components/charts.stories.js b/docs-ui/components/charts.stories.js
new file mode 100644
index 0000000000..93b45aa78c
--- /dev/null
+++ b/docs-ui/components/charts.stories.js
@@ -0,0 +1,144 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {number, boolean, text, array} from '@storybook/addon-knobs';
+
+import LineChart from 'app/components/charts/lineChart';
+import BarChart from 'app/components/charts/barChart';
+
+storiesOf('Charts|Playground')
+  .add(
+    'Line Chart',
+    withInfo('Description')(() => (
+      <div style={{backgroundColor: 'white', padding: 12}}>
+        <LineChart
+          series={[
+            {
+              seriesName: text('Line 1', 'sentry:user'),
+              data: [
+                {value: 18, name: 'Aug 15th'},
+                {value: 31, name: 'Aug 16th'},
+                {value: 9, name: 'Aug 22nd'},
+                {value: 100, name: 'Sep 5th'},
+                {value: 12, name: 'Sep 6th'},
+              ],
+            },
+            {
+              seriesName: text('Line 2', 'environment'),
+              data: [
+                {value: 84, name: 'Aug 15th'},
+                {value: 1, name: 'Aug 16th'},
+                {value: 28, name: 'Aug 22nd'},
+                {value: 1, name: 'Sep 5th'},
+                {value: 1, name: 'Sep 6th'},
+              ],
+            },
+            {
+              seriesName: text('Line 3', 'browser'),
+              data: [
+                {value: 108, name: 'Aug 15th'},
+                {value: 1, name: 'Aug 16th'},
+                {value: 36, name: 'Aug 22nd'},
+                {value: null, name: 'Se p 5th'},
+                {value: 1, name: 'Sep 6th'},
+              ],
+            },
+          ]}
+          tooltip={{
+            filter: value => value !== null,
+            truncate: 80,
+          }}
+          legend={{
+            data: [
+              text('Line 1 Legend (match Line 1)', 'sentry:user'),
+              text('Line 2 Legend (match Line 2)', 'environment'),
+              text('Line 3 Legend (match Line 3)', 'browser'),
+            ],
+            type: text('Legend Type', 'scroll'),
+          }}
+          height={number('height', 300)}
+          grid={{
+            top: text('grid:top', 40),
+            bottom: text('grid:bottom', 20),
+            left: text('grid:left', '10%'),
+            right: text('grid:right', '10%'),
+            containLabel: boolean('grid:containLabel', true),
+          }}
+        />
+      </div>
+    ))
+  )
+  .add(
+    'Bar Chart',
+    withInfo('Description: Note Scroll Legends does not work in storybook')(() => (
+      <div style={{backgroundColor: 'white', padding: 12}}>
+        <BarChart
+          stacked={boolean('stacked', true)}
+          renderer="canvas"
+          series={[
+            {
+              seriesName: text('Line 1', 'sentry:user'),
+              data: [
+                {value: 18, name: 'Aug 15th'},
+                {value: 31, name: 'Aug 16th'},
+                {value: 9, name: 'Aug 22nd'},
+                {value: 100, name: 'Sep 5th'},
+                {value: 12, name: 'Sep 6th'},
+              ],
+            },
+            {
+              seriesName: text('Line 2', 'environment'),
+              data: [
+                {value: 84, name: 'Aug 15th'},
+                {value: 1, name: 'Aug 16th'},
+                {value: 28, name: 'Aug 22nd'},
+                {value: 1, name: 'Sep 5th'},
+                {value: 1, name: 'Sep 6th'},
+              ],
+            },
+            {
+              seriesName: text('Line 3', 'browser'),
+              data: [
+                {value: 108, name: 'Aug 15th'},
+                {value: 1, name: 'Aug 16th'},
+                {value: 36, name: 'Aug 22nd'},
+                {value: null, name: 'Se p 5th'},
+                {value: 1, name: 'Sep 6th'},
+              ],
+            },
+          ]}
+          tooltip={{
+            filter: value => value !== null,
+            truncate: 50,
+          }}
+          legend={{
+            show: boolean('show legend', true),
+            data: [
+              text('Line 1 Legend (match Line 1)', 'sentry:user'),
+              text('Line 2 Legend (match Line 2)', 'environment'),
+              text('Line 3 Legend (match Line 3)', 'browser'),
+            ],
+            padding: number('legend: padding', 0),
+            type: text('legend: type', 'scroll'),
+            orient: text('legend: orient (vertical or horizontal)', 'horizontal'),
+            align: text('legend: align (left, right)', 'auto'),
+            left: text('legend: left (left, right, center)', 'center'),
+            right: text('legend: right (20 or 20%)', 'auto'),
+            top: text('legend: top (top, middle, bottom)', 'auto'),
+            bottom: text('legend: bottom (20 or 20%)', 'auto'),
+            width: text('legend: width (string or number)', 'auto'),
+            height: text('legend: height', 'auto'),
+
+          }}
+          height={number('height', 300)}
+          grid={{
+            top: text('grid: top', 40),
+            bottom: text('grid: bottom', 20),
+            left: text('grid: left', '10%'),
+            right: text('grid: right', '10%'),
+            containLabel: boolean('grid: containLabel', true),
+          }}
+        />
+      </div>
+    ))
+  );
