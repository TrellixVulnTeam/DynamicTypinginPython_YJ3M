commit c6cc7e6f4fd28df422c40c1559432dde1c881a91
Author: Matej Minar <matej.minar@sentry.io>
Date:   Fri Feb 21 09:01:42 2020 +0100

    feat(ui): Redesigned releasesV2 listing page (#17084)
    
    * feat(ui): Mocks wip
    
    * wip
    
    * feat(ui): Releases v2 mock, not yet responsive
    
    * changed wording
    
    * removed bang because of 'declaration-bang-space-after'
    
    * few media queries

diff --git a/docs-ui/components/circularProgressbar.stories.js b/docs-ui/components/circularProgressbar.stories.js
new file mode 100644
index 0000000000..492647f007
--- /dev/null
+++ b/docs-ui/components/circularProgressbar.stories.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import {number} from '@storybook/addon-knobs';
+
+import CircularProgressbar from 'app/components/circularProgressbar';
+
+storiesOf('UI|CircularProgressbar', module).add(
+  'default',
+  withInfo('Description')(() => {
+    const value = number('Value', 29);
+    const size = number('Size', 20);
+    const minValue = number('Min Value', 0);
+    const maxValue = number('Max Value', 100);
+    const strokeWidth = number('Stroke Width', 3);
+
+    return (
+      <React.Fragment>
+        <CircularProgressbar
+          value={value}
+          size={size}
+          minValue={minValue}
+          maxValue={maxValue}
+          strokeWidth={strokeWidth}
+        />
+        <CircularProgressbar value={61} />
+        <CircularProgressbar value={85} />
+      </React.Fragment>
+    );
+  })
+);
diff --git a/docs-ui/components/formatters.stories.js b/docs-ui/components/formatters.stories.js
index 3d3e438939..5050fa6269 100644
--- a/docs-ui/components/formatters.stories.js
+++ b/docs-ui/components/formatters.stories.js
@@ -107,20 +107,24 @@ storiesOf('Utility|Formatters', module)
     'Version',
     withInfo('Formats release version')(() => {
       const version = text('version', 'foo.bar.Baz@1.0.0+20200101');
-      const orgId = text('orgId', 'sentry');
       const anchor = boolean('anchor', true);
       const preserveGlobalSelection = boolean('preserveGlobalSelection', false);
       const tooltipRawVersion = boolean('tooltipRawVersion', true);
+      const withPackage = boolean('withPackage', false);
+      const truncate = boolean('truncate', false);
+      const projectId = text('projectId', '');
       const className = text('className', 'asdsad');
       return (
         <div>
           {version} =
           <Version
             version={version}
-            orgId={orgId}
             anchor={anchor}
             preserveGlobalSelection={preserveGlobalSelection}
             tooltipRawVersion={tooltipRawVersion}
+            withPackage={withPackage}
+            projectId={projectId}
+            truncate={truncate}
             className={className}
           />
         </div>
diff --git a/src/sentry/static/sentry/app/components/avatar/avatarList.tsx b/src/sentry/static/sentry/app/components/avatar/avatarList.tsx
index 4b98adf8f6..331f90ed7b 100644
--- a/src/sentry/static/sentry/app/components/avatar/avatarList.tsx
+++ b/src/sentry/static/sentry/app/components/avatar/avatarList.tsx
@@ -82,7 +82,8 @@ export default class AvatarList extends React.Component<Props> {
   }
 }
 
-const AvatarListWrapper = styled('div')`
+// used in releases list page to do some alignment
+export const AvatarListWrapper = styled('div')`
   display: flex;
   flex-direction: row-reverse;
 `;
diff --git a/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx b/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx
index 046aa1156a..4d1db7df7f 100644
--- a/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx
+++ b/src/sentry/static/sentry/app/components/avatar/projectAvatar.tsx
@@ -3,6 +3,7 @@ import React from 'react';
 
 import BaseAvatar from 'app/components/avatar/baseAvatar';
 import PlatformList from 'app/components/platformList';
+import Tooltip from 'app/components/tooltip';
 import SentryTypes from 'app/sentryTypes';
 import {AvatarProject} from 'app/types';
 
@@ -31,9 +32,13 @@ class ProjectAvatar extends React.Component<Props> {
   };
 
   render() {
-    const {project, ...props} = this.props;
+    const {project, hasTooltip, tooltip, ...props} = this.props;
 
-    return <PlatformList platforms={this.getPlatforms(project)} {...props} max={1} />;
+    return (
+      <Tooltip disabled={!hasTooltip} title={tooltip}>
+        <PlatformList platforms={this.getPlatforms(project)} {...props} max={1} />
+      </Tooltip>
+    );
   }
 }
 export default ProjectAvatar;
diff --git a/src/sentry/static/sentry/app/components/avatar/projectList.tsx b/src/sentry/static/sentry/app/components/avatar/projectList.tsx
new file mode 100644
index 0000000000..cf9d305e33
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/avatar/projectList.tsx
@@ -0,0 +1,97 @@
+// TODO(matej): needs a little bit of styles tinkering when avatarSize is huge
+// pretty similar to src/sentry/static/sentry/app/components/avatar/avatarList.tsx, does it make sense to merge into one reusable list?
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {tn} from 'app/locale';
+import {Project, AvatarProject} from 'app/types';
+import Tooltip from 'app/components/tooltip';
+import ProjectAvatar from 'app/components/avatar/projectAvatar';
+
+type Props = {
+  projects: Project[] | AvatarProject[];
+  maxVisibleProjects?: number;
+  avatarSize?: number;
+};
+
+const ProjectList = ({projects, maxVisibleProjects = 5, avatarSize = 20}: Props) => {
+  const visibleProjects = projects.slice(0, maxVisibleProjects);
+  const numberOfCollapsedProjects = projects.length - visibleProjects.length;
+
+  return (
+    <ProjectListWrapper>
+      {numberOfCollapsedProjects > 0 && (
+        <Tooltip
+          title={tn('%s other project', '%s other projects', numberOfCollapsedProjects)}
+        >
+          <CollapsedProjects size={avatarSize}>
+            {numberOfCollapsedProjects < 100 && <Plus size={avatarSize}>+</Plus>}
+            {numberOfCollapsedProjects}
+          </CollapsedProjects>
+        </Tooltip>
+      )}
+
+      {visibleProjects.map(project => {
+        return (
+          <StyledProjectAvatar
+            project={project}
+            key={project.slug}
+            tooltip={project.slug}
+            size={avatarSize}
+            hasTooltip
+          />
+        );
+      })}
+    </ProjectListWrapper>
+  );
+};
+
+const StyledProjectAvatar = styled(ProjectAvatar)<{size: number}>`
+  position: relative;
+  margin-left: -${p => Math.floor(p.size / 10)}px;
+  img {
+    box-shadow: 0 0 0 3px #fff;
+  }
+  &:hover {
+    z-index: 1;
+  }
+`;
+
+const ProjectListWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+  flex-direction: row-reverse;
+  justify-content: flex-end;
+  span:last-child ${StyledProjectAvatar} {
+    margin-left: 0;
+  }
+`;
+
+const CollapsedProjects = styled('div')<{size: number}>`
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  width: ${p => p.size}px;
+  height: ${p => p.size}px;
+  border-radius: 3px;
+  box-shadow: 0 0 0 3px #fff;
+  background-color: ${p => p.theme.borderLight};
+  color: ${p => p.theme.gray2};
+  position: relative;
+  margin-left: -${p => Math.floor(p.size / 10)}px;
+  font-size: ${p => Math.floor(p.size / 2)}px;
+  font-weight: 600;
+  cursor: default;
+  &:hover {
+    z-index: 1;
+  }
+`;
+
+const Plus = styled('span')<{size: number}>`
+  font-size: ${p => Math.floor(p.size / 2)}px;
+  font-weight: 600;
+  margin-left: 1px;
+  margin-right: -1px;
+`;
+
+export default ProjectList;
diff --git a/src/sentry/static/sentry/app/components/circularProgressbar.tsx b/src/sentry/static/sentry/app/components/circularProgressbar.tsx
new file mode 100644
index 0000000000..36aafc08cb
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/circularProgressbar.tsx
@@ -0,0 +1,113 @@
+import * as React from 'react';
+import styled from '@emotion/styled';
+
+import space from 'app/styles/space';
+
+type PathProps = {
+  dashRatio: number;
+  pathRadius: number;
+  strokeWidth: number;
+  size: number;
+  className?: string;
+};
+
+const Path = ({dashRatio, pathRadius, strokeWidth, size, className}: PathProps) => {
+  const diameter = Math.PI * 2 * pathRadius;
+  const gapLength = (1 - dashRatio) * diameter;
+
+  return (
+    <path
+      className={className}
+      style={{
+        strokeDasharray: `${diameter}px ${diameter}px`,
+        strokeDashoffset: `${gapLength}px`,
+      }}
+      d={`
+      M ${size / 2},${size / 2}
+      m 0,-${pathRadius}
+      a ${pathRadius},${pathRadius} 0 1 1 0,${2 * pathRadius}
+      a ${pathRadius},${pathRadius} 0 1 1 0,-${2 * pathRadius}
+    `}
+      strokeWidth={strokeWidth}
+      fillOpacity={0}
+    />
+  );
+};
+
+type Props = {
+  value: number;
+  size?: number;
+  maxValue?: number;
+  minValue?: number;
+  strokeWidth?: number;
+};
+
+const CircularProgressbar = ({
+  value,
+  size = 20,
+  maxValue = 100,
+  minValue = 0,
+  strokeWidth = 3,
+}: Props) => {
+  const pathRadius = size / 2 - strokeWidth / 2;
+  const boundedValue = Math.min(Math.max(value, minValue), maxValue);
+  const pathRatio = (boundedValue - minValue) / (maxValue - minValue);
+
+  return (
+    <ProgressbarWrapper>
+      <Progressbar viewBox={`0 0 ${size} ${size}`} size={size}>
+        <Trail
+          size={size}
+          dashRatio={1}
+          pathRadius={pathRadius}
+          strokeWidth={strokeWidth}
+        />
+
+        <Progress
+          value={value}
+          size={size}
+          dashRatio={pathRatio}
+          pathRadius={pathRadius}
+          strokeWidth={strokeWidth}
+        />
+      </Progressbar>
+    </ProgressbarWrapper>
+  );
+};
+
+// TODO(releasesv2): adjust thresholds once decided, probably pass as props
+const getColor = ({value, theme}) => {
+  if (value < 33) {
+    return theme.red;
+  }
+  if (value < 66) {
+    return theme.yellowOrange;
+  }
+  if (value >= 66) {
+    return theme.green;
+  }
+
+  return theme.gray3;
+};
+
+const ProgressbarWrapper = styled('div')`
+  display: inline-block;
+  position: relative;
+  bottom: ${space(0.25)};
+`;
+
+const Progressbar = styled('svg')<{size: number}>`
+  width: ${p => p.size}px;
+  vertical-align: middle;
+`;
+
+const Trail = styled(Path)`
+  stroke: ${p => p.theme.offWhite2};
+`;
+
+const Progress = styled(Path)<{value: number}>`
+  transition: stroke-dashoffset 0.5s ease 0s;
+  stroke: ${getColor};
+`;
+
+export default CircularProgressbar;
diff --git a/src/sentry/static/sentry/app/components/releaseStats.tsx b/src/sentry/static/sentry/app/components/releaseStats.tsx
index d0f21c145d..50def957a1 100644
--- a/src/sentry/static/sentry/app/components/releaseStats.tsx
+++ b/src/sentry/static/sentry/app/components/releaseStats.tsx
@@ -9,9 +9,10 @@ import space from 'app/styles/space';
 
 type Props = {
   release: Release;
+  withHeading: boolean;
 };
 
-const ReleaseStats = ({release}: Props) => {
+const ReleaseStats = ({release, withHeading = true}: Props) => {
   const commitCount = release.commitCount || 0;
   const authorCount = (release.authors && release.authors.length) || 0;
   if (commitCount === 0) {
@@ -26,7 +27,7 @@ const ReleaseStats = ({release}: Props) => {
 
   return (
     <div className="release-stats">
-      <ReleaseSummaryHeading>{releaseSummary}</ReleaseSummaryHeading>
+      {withHeading && <ReleaseSummaryHeading>{releaseSummary}</ReleaseSummaryHeading>}
       <span style={{display: 'inline-block'}}>
         <AvatarList users={release.authors} avatarSize={25} typeMembers="authors" />
       </span>
diff --git a/src/sentry/static/sentry/app/components/version.tsx b/src/sentry/static/sentry/app/components/version.tsx
index fadf48c2ed..2e18b8d5b0 100644
--- a/src/sentry/static/sentry/app/components/version.tsx
+++ b/src/sentry/static/sentry/app/components/version.tsx
@@ -73,18 +73,18 @@ const Version = ({
     if (projectId) {
       // if user specifically sets projectId and not preserveGlobalSelection, use that
       releaseDetailProjectId = projectId;
-    } else if (!new Set(organization.features).has('global-views')) {
+    } else if (!new Set(organization?.features).has('global-views')) {
       // we need this for users without global-views, otherwise they might get `This release may not be in your selected project`
-      releaseDetailProjectId = location.query.project;
+      releaseDetailProjectId = location?.query.project;
     }
   }
 
   const renderVersion = () => {
-    if (anchor && organization.slug) {
+    if (anchor && organization?.slug) {
       return (
         <LinkComponent
           to={{
-            pathname: `/organizations/${organization.slug}/releases/${encodeURIComponent(
+            pathname: `/organizations/${organization?.slug}/releases/${encodeURIComponent(
               version
             )}/`,
             query: releaseDetailProjectId ? {project: releaseDetailProjectId} : undefined,
diff --git a/src/sentry/static/sentry/app/views/releasesV2/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/index.tsx
index b4a88728cb..0df61f98bc 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/index.tsx
@@ -12,7 +12,7 @@ type Props = {
   organization: Organization;
 };
 
-class ReleasesV2Container extends React.Component<Props> {
+class ReleasesContainer extends React.Component<Props> {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
   };
@@ -40,4 +40,4 @@ class ReleasesV2Container extends React.Component<Props> {
   }
 }
 
-export default withOrganization(ReleasesV2Container);
+export default withOrganization(ReleasesContainer);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/commonLayout.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/commonLayout.tsx
deleted file mode 100644
index f0f86f882e..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/commonLayout.tsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import styled from '@emotion/styled';
-
-import space from 'app/styles/space';
-
-const BREAKPOINT_TO_HIDE_COLUMNS = '600px';
-
-const Layout = styled('div')`
-  display: grid;
-  grid-template-columns: 24px 3fr 1.7fr 2fr 1.2fr 2fr 1fr 1fr 1fr;
-  grid-column-gap: ${space(1.5)};
-  width: 100%;
-  align-items: center;
-  @media (max-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-columns: 24px 3fr 1fr 1fr 1fr 1fr 1fr;
-  }
-  @media (max-width: ${BREAKPOINT_TO_HIDE_COLUMNS}) {
-    grid-template-columns: 24px 3fr 1fr 1fr;
-  }
-`;
-
-const Column = styled('div')`
-  overflow: hidden;
-`;
-
-const CenterAlignedColumn = styled('div')`
-  text-align: center;
-`;
-
-const RightAlignedColumn = styled('div')`
-  text-align: right;
-  @media (max-width: ${BREAKPOINT_TO_HIDE_COLUMNS}) {
-    display: none;
-  }
-`;
-
-const ChartColumn = styled('div')`
-  margin-left: ${space(2)};
-  margin-right: ${space(2)};
-  @media (max-width: ${p => p.theme.breakpoints[2]}) {
-    display: none;
-  }
-`;
-
-export {Layout, Column, CenterAlignedColumn, RightAlignedColumn, ChartColumn};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/healthStatus.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/healthStatus.tsx
deleted file mode 100644
index a516f170d2..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/healthStatus.tsx
+++ /dev/null
@@ -1,22 +0,0 @@
-import styled from '@emotion/styled';
-
-// TODO(releasesv2): health status according to crash free percent will be calculated
-// elsewhere (if at all), this is just for demonstration purposes
-
-const HealthStatus = styled('span')<{crashFreePercent: number}>`
-  width: 16px;
-  height: 16px;
-  border-radius: 50%;
-  display: inline-block;
-  background-color: ${p => {
-    if (p.crashFreePercent < 33) {
-      return p.theme.red;
-    }
-    if (p.crashFreePercent < 66) {
-      return p.theme.yellowOrange;
-    }
-    return p.theme.green;
-  }};
-`;
-
-export default HealthStatus;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
index b46b5c1d89..afcacd19a1 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
@@ -2,28 +2,27 @@ import React from 'react';
 import {Location} from 'history';
 import * as ReactRouter from 'react-router';
 import {Params} from 'react-router/lib/Router';
+import uniq from 'lodash/uniq';
+import flatten from 'lodash/flatten';
 
 import {t} from 'app/locale';
-import {Organization} from 'app/types';
+import {Organization, Release} from 'app/types';
 import AsyncView from 'app/views/asyncView';
 import BetaTag from 'app/components/betaTag';
 import routeTitleGen from 'app/utils/routeTitle';
 import SearchBar from 'app/components/searchBar';
 import Pagination from 'app/components/pagination';
-import {mockData} from 'app/views/releasesV2/list/mock'; // TODO(releasesv2): temporary until api is finished
 import PageHeading from 'app/components/pageHeading';
 import {getQuery} from 'app/views/releases/list/utils';
 import withOrganization from 'app/utils/withOrganization';
-import {ReleasesV2RowData} from 'app/views/releasesV2/list/types';
-import IntroBanner from 'app/views/releasesV2/list/introBanner';
-import NoProjectMessage from 'app/components/noProjectMessage';
 import LoadingIndicator from 'app/components/loadingIndicator';
+import NoProjectMessage from 'app/components/noProjectMessage';
+import IntroBanner from 'app/views/releasesV2/list/introBanner';
 import {PageContent, PageHeader} from 'app/styles/organization';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
-import ReleasesV2TableRow from 'app/views/releasesV2/list/releasesV2TableRow';
-import ReleasesV2TableHead from 'app/views/releasesV2/list/releasesV2TableHead';
-import {Panel, PanelHeader, PanelBody} from 'app/components/panels';
+import ReleaseCard from 'app/views/releasesV2/list/releaseCard';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
+import Projects from 'app/utils/projects';
 
 type Props = {
   params: Params;
@@ -32,11 +31,9 @@ type Props = {
   router: ReactRouter.InjectedRouter;
 } & AsyncView['props'];
 
-type State = {
-  dummyReleasesV2List: ReleasesV2RowData[];
-} & AsyncView['state'];
+type State = AsyncView['state'];
 
-class ReleasesV2List extends AsyncView<Props, State> {
+class ReleasesList extends AsyncView<Props, State> {
   getTitle() {
     return routeTitleGen(t('Releases v2'), this.props.organization.slug, false);
   }
@@ -44,16 +41,14 @@ class ReleasesV2List extends AsyncView<Props, State> {
   getDefaultState() {
     return {
       ...super.getDefaultState(),
-      dummyReleasesV2List: mockData,
     };
   }
 
   getEndpoints(): [string, string, {}][] {
     const {organization, location} = this.props;
-    // TODO(releasesv2): different url once api is finished
     return [
       [
-        'releasesV2List',
+        'releases',
         `/organizations/${organization.slug}/releases/`,
         {query: getQuery(location.query)},
       ],
@@ -75,29 +70,35 @@ class ReleasesV2List extends AsyncView<Props, State> {
 
   renderInnerBody() {
     const {organization} = this.props;
-    const {loading, dummyReleasesV2List} = this.state;
+    const {loading, releases} = this.state;
 
     if (loading) {
       return <LoadingIndicator />;
     }
 
-    if (!dummyReleasesV2List.length) {
+    if (!releases.length) {
       return <EmptyStateWarning small>{t('There are no releases.')}</EmptyStateWarning>;
     }
 
-    return dummyReleasesV2List.map(h => (
-      <ReleasesV2TableRow
-        errors={h.errors}
-        crashes={h.crashes}
-        release={h.release}
-        key={h.release.name}
-        graphData={h.graphData}
-        activeUsers={h.activeUsers}
-        organizationId={organization.slug}
-        crashFreeUsersPercent={h.crashFreeUsersPercent}
-        releaseAdoptionPercent={h.releaseAdoptionPercent}
-      />
-    ));
+    const projectSlugs: string[] = uniq(
+      flatten(releases.map((r: Release) => r.projects.map(p => p.slug)))
+    );
+
+    return (
+      <Projects orgId={organization.slug} slugs={projectSlugs}>
+        {({projects}) =>
+          releases.map((release: Release) => (
+            <ReleaseCard
+              key={release.version}
+              release={release}
+              projects={projects.filter(project =>
+                release.projects.map(p => p.slug).includes(project.slug)
+              )}
+            />
+          ))
+        }
+      </Projects>
+    );
   }
 
   renderBody() {
@@ -124,15 +125,9 @@ class ReleasesV2List extends AsyncView<Props, State> {
 
             <IntroBanner />
 
-            <div>
-              <Panel>
-                <PanelHeader>
-                  <ReleasesV2TableHead />
-                </PanelHeader>
-                <PanelBody>{this.renderInnerBody()}</PanelBody>
-              </Panel>
-              <Pagination pageLinks={this.state.releasesV2ListPageLinks} />
-            </div>
+            {this.renderInnerBody()}
+
+            <Pagination pageLinks={this.state.releasesPageLinks} />
           </PageContent>
         </NoProjectMessage>
       </React.Fragment>
@@ -140,5 +135,5 @@ class ReleasesV2List extends AsyncView<Props, State> {
   }
 }
 
-export default withOrganization(ReleasesV2List);
-export {ReleasesV2List};
+export default withOrganization(ReleasesList);
+export {ReleasesList};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/mock.ts b/src/sentry/static/sentry/app/views/releasesV2/list/mock.ts
index 8d800c9c2b..4721c1654b 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/mock.ts
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/mock.ts
@@ -1,15 +1,9 @@
 const mock = () => ({
   crashFreeUsersPercent: Math.floor(Math.random() * 100),
-  activeUsers: Math.floor(Math.random() * 10000),
+  crashFreeUsersSessionsPercent: Math.floor(Math.random() * 100),
   crashes: Math.floor(Math.random() * 10000),
   errors: Math.floor(Math.random() * 10000),
-  releaseAdoptionPercent: Math.floor(Math.random() * 100),
-  release: {
-    name: Math.random()
-      .toString(10)
-      .substring(2),
-    dateCreated: new Date(),
-  },
+  dailyActiveUsers: Math.floor(Math.random() * 100),
   graphData: {
     '24h': [
       [1578996000, 2718],
@@ -37,7 +31,7 @@ const mock = () => ({
       [1579075200, 2218],
       [1579078800, 1136],
     ],
-  },
+  } as any,
 });
 
 export const mockData = [...Array(20)].map(mock);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
new file mode 100644
index 0000000000..5e45b0285d
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
@@ -0,0 +1,203 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import space from 'app/styles/space';
+import Count from 'app/components/count';
+import Version from 'app/components/version';
+import {Panel, PanelBody, PanelItem} from 'app/components/panels';
+import ReleaseStats from 'app/components/releaseStats';
+import {Project, AvatarProject, Release} from 'app/types';
+import TimeSince from 'app/components/timeSince';
+import {t, tn} from 'app/locale';
+import {AvatarListWrapper} from 'app/components/avatar/avatarList';
+import ProjectList from 'app/components/avatar/projectList';
+
+import ReleaseHealth from './releaseHealth';
+
+type Props = {
+  release: Release;
+  projects: Project[] | AvatarProject[];
+};
+
+const ReleaseCard = ({release, projects}: Props) => {
+  // TODO(releases-v2): probably makes sense at this point to split the header and data to different files (move styles to share layout file)
+  return (
+    <Panel>
+      <PanelBody>
+        <StyledPanelItem>
+          <HeaderLayout>
+            <VersionColumn>
+              <ColumnTitle>{t('Release')}</ColumnTitle>
+            </VersionColumn>
+            <ProjectsColumn>
+              <ColumnTitle>
+                {tn('%s project', '%s projects', projects.length)}
+              </ColumnTitle>
+            </ProjectsColumn>
+            <CommitsColumn>
+              {release.commitCount > 0 && (
+                <ColumnTitle>
+                  {[
+                    tn('%s commit', '%s commits', release.commitCount || 0),
+                    t('by'),
+                    tn('%s author', '%s authors', release.authors?.length || 0),
+                  ].join(' ')}
+                </ColumnTitle>
+              )}
+            </CommitsColumn>
+            <CreatedColumn>
+              <ColumnTitle>{t('Created')}</ColumnTitle>
+            </CreatedColumn>
+            <LastEventColumn>
+              <ColumnTitle>{t('Last event')}</ColumnTitle>
+            </LastEventColumn>
+            <NewIssuesColumn>
+              <ColumnTitle>{t('New issues')}</ColumnTitle>
+            </NewIssuesColumn>
+          </HeaderLayout>
+          <Layout>
+            <VersionColumn>
+              <Version
+                version={release.version}
+                preserveGlobalSelection
+                tooltipRawVersion
+                truncate
+              />
+              <TimeWithIcon date={release.dateReleased || release.dateCreated} />
+            </VersionColumn>
+
+            <ProjectsColumn>
+              <ProjectList projects={projects} />
+            </ProjectsColumn>
+
+            <CommitsColumn>
+              <ReleaseStats release={release} withHeading={false} />
+            </CommitsColumn>
+
+            <CreatedColumn>
+              {release.dateReleased || release.dateCreated ? (
+                <TimeSince date={release.dateReleased || release.dateCreated} />
+              ) : (
+                <span>-</span>
+              )}
+            </CreatedColumn>
+
+            <LastEventColumn>
+              {release.lastEvent ? (
+                <TimeSince date={release.lastEvent} />
+              ) : (
+                <span>—</span>
+              )}
+            </LastEventColumn>
+
+            <NewIssuesColumn>
+              <Count value={release.newGroups || 0} />
+            </NewIssuesColumn>
+          </Layout>
+        </StyledPanelItem>
+      </PanelBody>
+
+      {/*  TODO(releasesv2)if has release health data */}
+      {Math.random() > 0.6 && <ReleaseHealth release={release} />}
+    </Panel>
+  );
+};
+
+const StyledPanelItem = styled(PanelItem)`
+  flex-direction: column;
+`;
+
+const Layout = styled('div')`
+  display: grid;
+  grid-template-areas: 'version projects commits created last-event new-issues';
+  grid-template-columns: 1fr 1fr 1fr 200px 1fr 1fr;
+  grid-column-gap: ${space(1.5)};
+  width: 100%;
+  align-items: center;
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+    grid-template-areas: 'version projects created last-event new-issues';
+    grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
+  }
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    grid-template-areas: 'version projects new-issues';
+    grid-template-columns: 2fr 1fr 1fr;
+  }
+`;
+
+const HeaderLayout = styled(Layout)`
+  align-items: flex-start;
+`;
+
+const Column = styled('div')`
+  overflow: hidden;
+  ${AvatarListWrapper} {
+    padding-left: ${space(0.75)};
+  }
+`;
+
+const RightAlignedColumn = styled('div')`
+  overflow: hidden;
+  text-align: right;
+`;
+
+const VersionColumn = styled(Column)`
+  grid-area: version;
+`;
+
+const ProjectsColumn = styled(Column)`
+  grid-area: projects;
+`;
+
+const CommitsColumn = styled(Column)`
+  grid-area: commits;
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+    display: none;
+  }
+`;
+
+const CreatedColumn = styled(RightAlignedColumn)`
+  grid-area: created;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
+`;
+
+const LastEventColumn = styled(RightAlignedColumn)`
+  grid-area: last-event;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
+`;
+
+const NewIssuesColumn = styled(RightAlignedColumn)`
+  grid-area: new-issues;
+`;
+
+const ColumnTitle = styled('div')`
+  text-transform: uppercase;
+  color: ${p => p.theme.gray2};
+  font-size: ${p => p.theme.fontSizeSmall};
+  font-weight: 600;
+  margin-bottom: ${space(0.75)};
+  line-height: 1.2;
+`;
+
+const TimeWithIcon = styled(({date, ...props}) => (
+  <span {...props}>
+    <ClockIcon className="icon icon-clock" />
+    <TimeSince date={date} />
+  </span>
+))`
+  align-items: center;
+  color: ${p => p.theme.gray2};
+  font-size: ${p => p.theme.fontSizeSmall};
+  display: none;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: inline-flex;
+  }
+`;
+const ClockIcon = styled('span')`
+  margin-right: ${space(0.25)};
+`;
+
+export default ReleaseCard;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
new file mode 100644
index 0000000000..f562275b9f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
@@ -0,0 +1,162 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {Release} from 'app/types';
+import {PanelHeader, PanelBody, PanelItem} from 'app/components/panels';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+import CircleProgress from 'app/components/circularProgressbar';
+import Count from 'app/components/count';
+
+import UsersChart from './usersChart';
+import {mockData} from './mock';
+
+type Props = {
+  release: Release;
+};
+
+const ReleaseHealth = ({release}: Props) => {
+  return (
+    <React.Fragment>
+      <StyledPanelHeader>
+        <HeaderLayout>
+          <ProjectColumn>{t('Mobile Project')}</ProjectColumn>
+          <CrashFreeUsersColumn>{t('Crash free users')}</CrashFreeUsersColumn>
+          <CrashFreeSessionsColumn>{t('Crash free sessions')}</CrashFreeSessionsColumn>
+          <DailyUsersColumn>{t('Daily active users')}</DailyUsersColumn>
+          <CrashesColumn>{t('Mobile crashes')}</CrashesColumn>
+          <ErrorsColumn>{t('Mobile errors')}</ErrorsColumn>
+        </HeaderLayout>
+      </StyledPanelHeader>
+
+      <PanelBody>
+        {release.projects.map((project, index) => (
+          <PanelItem key={project.slug}>
+            <Layout>
+              <ProjectColumn>
+                <ProjectBadge project={project} avatarSize={14} />
+              </ProjectColumn>
+              {/* TODO(releasesv2): make dynamic once api is finished */}
+              <CrashFreeUsersColumn>
+                <CircleProgress value={mockData[index].crashFreeUsersPercent} />
+                <CircleProgressCaption>
+                  {mockData[index].crashFreeUsersPercent}%
+                </CircleProgressCaption>
+              </CrashFreeUsersColumn>
+              <CrashFreeSessionsColumn>
+                <CircleProgress value={mockData[index].crashFreeUsersSessionsPercent} />
+                <CircleProgressCaption>
+                  {mockData[index].crashFreeUsersSessionsPercent}%
+                </CircleProgressCaption>
+              </CrashFreeSessionsColumn>
+              <DailyUsersColumn>
+                <ChartWrapper>
+                  <UsersChart data={mockData[index].graphData} statsPeriod="24h" />
+                </ChartWrapper>
+                {mockData[index].dailyActiveUsers}%
+              </DailyUsersColumn>
+              <CrashesColumn>
+                <ColoredCount value={mockData[index].crashes} />
+              </CrashesColumn>
+              <ErrorsColumn>
+                <ColoredCount value={mockData[index].errors} />
+              </ErrorsColumn>
+            </Layout>
+          </PanelItem>
+        ))}
+      </PanelBody>
+    </React.Fragment>
+  );
+};
+
+const StyledPanelHeader = styled(PanelHeader)`
+  border-top: 1px solid ${p => p.theme.borderDark};
+  border-top-left-radius: 0;
+  border-top-right-radius: 0;
+  color: ${p => p.theme.gray2};
+  font-size: ${p => p.theme.fontSizeSmall};
+`;
+
+const Layout = styled('div')`
+  display: grid;
+  grid-template-areas: 'project crash-free-users crash-free-sessions daily-users crashes errors';
+  grid-template-columns: 1fr 1fr 1fr 200px 1fr 1fr;
+  grid-column-gap: ${space(1.5)};
+  width: 100%;
+  align-items: center;
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+    grid-template-areas: 'project crash-free-users crash-free-sessions crashes errors';
+    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
+  }
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    grid-template-areas: 'project crash-free-users crash-free-sessions';
+    grid-template-columns: 1fr 1fr 1fr;
+  }
+`;
+
+const HeaderLayout = styled(Layout)`
+  align-items: flex-end;
+`;
+
+const Column = styled('div')`
+  overflow: hidden;
+`;
+
+const RightColumn = styled('div')`
+  overflow: 'hidden';
+  text-align: right;
+`;
+
+const ProjectColumn = styled(Column)`
+  grid-area: project;
+`;
+const CrashFreeUsersColumn = styled(Column)`
+  grid-area: crash-free-users;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    text-align: right;
+  }
+`;
+const CrashFreeSessionsColumn = styled(Column)`
+  grid-area: crash-free-sessions;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    text-align: right;
+  }
+`;
+const DailyUsersColumn = styled(Column)`
+  grid-area: daily-users;
+  display: flex;
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+    display: none;
+  }
+`;
+const CrashesColumn = styled(RightColumn)`
+  grid-area: crashes;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
+`;
+const ErrorsColumn = styled(RightColumn)`
+  grid-area: errors;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
+`;
+
+const CircleProgressCaption = styled('span')`
+  margin-left: ${space(1)};
+`;
+
+const ChartWrapper = styled('div')`
+  width: 150px;
+  margin-right: ${space(2)};
+  position: relative;
+  bottom: 4px;
+`;
+
+const ColoredCount = styled(Count)`
+  /* TODO(releasesv2): decide on threshold, make dynamic */
+  ${p => p.value > 7000 && `color: ${p.theme.red};`}
+`;
+
+export default ReleaseHealth;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableHead.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableHead.tsx
deleted file mode 100644
index 9e5e46c291..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableHead.tsx
+++ /dev/null
@@ -1,70 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-
-import {t} from 'app/locale';
-import space from 'app/styles/space';
-import {
-  Layout,
-  Column,
-  CenterAlignedColumn,
-  RightAlignedColumn,
-  ChartColumn,
-} from 'app/views/releasesV2/list/commonLayout';
-
-const ReleasesV2TableHead = () => {
-  return (
-    <Layout>
-      <Column />
-      <Column>{t('Release')}</Column>
-      <CenterAlignedColumn>{t('Crash Free Users')}</CenterAlignedColumn>
-      <ChartColumn>
-        <ChartToggler>
-          <ChartTogglerTitle>{t('Graph:')}</ChartTogglerTitle>
-          <ChartToggle active onClick={() => {}}>
-            {t('24h')}
-          </ChartToggle>
-
-          <ChartToggle active={false} onClick={() => {}}>
-            {t('14d')}
-          </ChartToggle>
-        </ChartToggler>
-      </ChartColumn>
-      <CenterAlignedColumn>{t('Active Users')}</CenterAlignedColumn>
-      <ChartColumn>
-        <ChartToggler>
-          <ChartTogglerTitle>{t('Graph:')}</ChartTogglerTitle>
-          <ChartToggle active onClick={() => {}}>
-            {t('24h')}
-          </ChartToggle>
-
-          <ChartToggle active={false} onClick={() => {}}>
-            {t('14d')}
-          </ChartToggle>
-        </ChartToggler>
-      </ChartColumn>
-      <RightAlignedColumn>{t('Crashes')}</RightAlignedColumn>
-      <RightAlignedColumn>{t('Errors')}</RightAlignedColumn>
-      <RightAlignedColumn>{t('Adoption')}</RightAlignedColumn>
-    </Layout>
-  );
-};
-
-const ChartToggler = styled('div')`
-  display: flex;
-`;
-const ChartTogglerTitle = styled('div')`
-  flex: 1;
-`;
-const ChartToggle = styled('a')<{active: boolean}>`
-  padding-left: ${space(1)};
-  font-weight: 400;
-
-  &,
-  &:hover,
-  &:focus,
-  &:active {
-    color: ${p => (p.active ? p.theme.gray4 : p.theme.disabled)};
-  }
-`;
-
-export default ReleasesV2TableHead;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx
deleted file mode 100644
index 85a9cac668..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releasesV2TableRow.tsx
+++ /dev/null
@@ -1,116 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-
-import space from 'app/styles/space';
-import Count from 'app/components/count';
-import {
-  Layout,
-  Column,
-  CenterAlignedColumn,
-  RightAlignedColumn,
-  ChartColumn,
-} from 'app/views/releasesV2/list/commonLayout';
-import {PanelItem} from 'app/components/panels';
-import UsersChart from 'app/views/releasesV2/list/usersChart';
-import {ReleasesV2RowData} from 'app/views/releasesV2/list/types';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
-import HealthStatus from 'app/views/releasesV2/list/healthStatus';
-import LatestDeployOrReleaseTime from 'app/views/releases/list/latestDeployOrReleaseTime';
-import Version from 'app/components/version';
-
-type Props = ReleasesV2RowData & {
-  organizationId: string;
-};
-
-const ReleasesV2TableRow = ({
-  release,
-  crashFreeUsersPercent,
-  graphData,
-  activeUsers,
-  crashes,
-  errors,
-  releaseAdoptionPercent,
-}: Props) => {
-  return (
-    <StyledPanelItem key={release.name}>
-      <Layout>
-        <Column>
-          <HealthStatus crashFreePercent={crashFreeUsersPercent} />
-        </Column>
-
-        <Column>
-          <StyledVersion
-            version={release.name}
-            preserveGlobalSelection
-            tooltipRawVersion
-          />
-          <LatestDeployOrReleaseTime release={release} />
-        </Column>
-
-        <CenterAlignedColumn>
-          <CrashFreeUsers percent={crashFreeUsersPercent}>
-            {crashFreeUsersPercent}%
-          </CrashFreeUsers>
-        </CenterAlignedColumn>
-
-        <ChartColumn>
-          <UsersChart statsPeriod="24h" data={graphData} />
-        </ChartColumn>
-
-        <CenterAlignedColumn>
-          <StyledCount value={activeUsers || 0} />
-        </CenterAlignedColumn>
-
-        <ChartColumn>
-          <UsersChart statsPeriod="24h" data={graphData} />
-        </ChartColumn>
-
-        <RightAlignedColumn>
-          <Count value={crashes || 0} />
-        </RightAlignedColumn>
-
-        <RightAlignedColumn>
-          <Count value={errors || 0} />
-        </RightAlignedColumn>
-
-        <RightAlignedColumn>{releaseAdoptionPercent}%</RightAlignedColumn>
-      </Layout>
-    </StyledPanelItem>
-  );
-};
-
-const StyledPanelItem = styled(PanelItem)`
-  padding: ${space(1)} ${space(2)};
-`;
-
-const StyledVersion = styled(Version)`
-  font-weight: bold;
-  ${overflowEllipsis};
-`;
-
-const CrashFreeUsers = styled('span')<{percent: number}>`
-  font-size: ${p => p.theme.fontSizeExtraLarge};
-  color: ${p => p.theme.gray4};
-  /*  TODO(releasesv2): this color coated demonstration is turned off for now, waiting for decision
-  color: ${p => {
-    if (p.percent < 33) {
-      return p.theme.red;
-    }
-    if (p.percent < 66) {
-      return p.theme.yellowOrange;
-    }
-    if (p.percent >= 66) {
-      return p.theme.green;
-    }
-
-    return p.theme.gray3;
-  }};
-  */
-`;
-
-const StyledCount = styled(Count)`
-  font-size: ${p => p.theme.fontSizeExtraLarge};
-  color: ${p => p.theme.gray4};
-`;
-
-export default ReleasesV2TableRow;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/types.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/types.tsx
deleted file mode 100644
index 65ffccf659..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/types.tsx
+++ /dev/null
@@ -1,19 +0,0 @@
-export type ReleasesV2RowData = {
-  organizationId: string;
-  release: ReleasesV2Release;
-  crashFreeUsersPercent: number;
-  graphData: GraphData;
-  activeUsers: number;
-  crashes: number;
-  errors: number;
-  releaseAdoptionPercent: number;
-};
-
-type GraphData = {
-  [timePeriod: string]: [number, number][];
-};
-
-type ReleasesV2Release = {
-  name: string;
-  dateCreated: Date;
-};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/version.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/version.tsx
deleted file mode 100644
index 53bb2ffc68..0000000000
--- a/src/sentry/static/sentry/app/views/releasesV2/list/version.tsx
+++ /dev/null
@@ -1,56 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import GlobalSelectionLink from 'app/components/globalSelectionLink';
-import Link from 'app/components/links/link';
-
-type DefaultProps = {
-  anchor: boolean;
-};
-
-type Props = DefaultProps & {
-  version: string;
-  orgId: string;
-  preserveGlobalSelection?: boolean;
-  className?: string;
-};
-
-export default class Version extends React.Component<Props> {
-  static propTypes = {
-    anchor: PropTypes.bool,
-    version: PropTypes.string.isRequired,
-    orgId: PropTypes.string,
-
-    /**
-     * Should link to Release preserve user's global selection values
-     */
-    preserveGlobalSelection: PropTypes.bool,
-  };
-
-  static defaultProps: DefaultProps = {
-    anchor: true,
-  };
-
-  render() {
-    const {orgId, version, anchor, className, preserveGlobalSelection} = this.props;
-
-    const LinkComponent = preserveGlobalSelection ? GlobalSelectionLink : Link;
-
-    if (anchor && orgId) {
-      return (
-        <LinkComponent
-          to={`/organizations/${orgId}/releases-v2/${encodeURIComponent(version)}/`}
-          className={className}
-        >
-          <span title={version}>{version}</span>
-        </LinkComponent>
-      );
-    }
-
-    return (
-      <span title={version} className={className}>
-        {version}
-      </span>
-    );
-  }
-}
diff --git a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
index 4f16fc5936..8d3056a7fe 100644
--- a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
+++ b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
@@ -1435,62 +1435,67 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                                           }
                                                           size={14}
                                                         >
-                                                          <PlatformList
-                                                            className="css-7c3lwm-StyledAvatar e165dl3i1"
-                                                            consistentWidth={false}
-                                                            direction="right"
-                                                            hasTooltip={false}
-                                                            hideName={true}
-                                                            max={1}
-                                                            platforms={Array []}
-                                                            size={14}
+                                                          <Tooltip
+                                                            containerDisplayMode="inline-block"
+                                                            disabled={true}
+                                                            position="top"
                                                           >
-                                                            <PlatformIcons
+                                                            <PlatformList
                                                               className="css-7c3lwm-StyledAvatar e165dl3i1"
                                                               consistentWidth={false}
                                                               direction="right"
+                                                              hideName={true}
                                                               max={1}
+                                                              platforms={Array []}
                                                               size={14}
                                                             >
-                                                              <div
-                                                                className="e165dl3i1 css-dyodzz-PlatformIcons-StyledAvatar ezvce7z0"
+                                                              <PlatformIcons
+                                                                className="css-7c3lwm-StyledAvatar e165dl3i1"
+                                                                consistentWidth={false}
                                                                 direction="right"
                                                                 max={1}
                                                                 size={14}
                                                               >
-                                                                <StyledPlatformIcon
-                                                                  platform="default"
+                                                                <div
+                                                                  className="e165dl3i1 css-dyodzz-PlatformIcons-StyledAvatar ezvce7z0"
+                                                                  direction="right"
+                                                                  max={1}
                                                                   size={14}
                                                                 >
-                                                                  <Component
-                                                                    className="css-7okses-StyledPlatformIcon ezvce7z1"
+                                                                  <StyledPlatformIcon
                                                                     platform="default"
                                                                     size={14}
                                                                   >
-                                                                    <PlatformIcon
+                                                                    <Component
                                                                       className="css-7okses-StyledPlatformIcon ezvce7z1"
                                                                       platform="default"
-                                                                      size="14px"
+                                                                      size={14}
                                                                     >
-                                                                      <img
+                                                                      <PlatformIcon
                                                                         className="css-7okses-StyledPlatformIcon ezvce7z1"
-                                                                        height="14px"
-                                                                        src={
-                                                                          Object {
-                                                                            "default": Object {
-                                                                              "id": "test",
-                                                                              "viewBox": Object {},
-                                                                            },
+                                                                        platform="default"
+                                                                        size="14px"
+                                                                      >
+                                                                        <img
+                                                                          className="css-7okses-StyledPlatformIcon ezvce7z1"
+                                                                          height="14px"
+                                                                          src={
+                                                                            Object {
+                                                                              "default": Object {
+                                                                                "id": "test",
+                                                                                "viewBox": Object {},
+                                                                              },
+                                                                            }
                                                                           }
-                                                                        }
-                                                                        width="14px"
-                                                                      />
-                                                                    </PlatformIcon>
-                                                                  </Component>
-                                                                </StyledPlatformIcon>
-                                                              </div>
-                                                            </PlatformIcons>
-                                                          </PlatformList>
+                                                                          width="14px"
+                                                                        />
+                                                                      </PlatformIcon>
+                                                                    </Component>
+                                                                  </StyledPlatformIcon>
+                                                                </div>
+                                                              </PlatformIcons>
+                                                            </PlatformList>
+                                                          </Tooltip>
                                                         </ProjectAvatar>
                                                       </Avatar>
                                                     </StyledAvatar>
diff --git a/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
index f06884e22a..70ba27231e 100644
--- a/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -356,66 +356,71 @@ exports[`ProjectCard renders 1`] = `
                                       }
                                       size={18}
                                     >
-                                      <PlatformList
-                                        className="css-1neg7x4-StyledAvatar e165dl3i1"
-                                        consistentWidth={false}
-                                        direction="right"
-                                        hasTooltip={false}
-                                        max={1}
-                                        platforms={
-                                          Array [
-                                            "javascript",
-                                          ]
-                                        }
-                                        size={18}
+                                      <Tooltip
+                                        containerDisplayMode="inline-block"
+                                        disabled={true}
+                                        position="top"
                                       >
-                                        <PlatformIcons
+                                        <PlatformList
                                           className="css-1neg7x4-StyledAvatar e165dl3i1"
                                           consistentWidth={false}
                                           direction="right"
                                           max={1}
+                                          platforms={
+                                            Array [
+                                              "javascript",
+                                            ]
+                                          }
                                           size={18}
                                         >
-                                          <div
-                                            className="e165dl3i1 css-corue1-PlatformIcons-StyledAvatar ezvce7z0"
+                                          <PlatformIcons
+                                            className="css-1neg7x4-StyledAvatar e165dl3i1"
+                                            consistentWidth={false}
                                             direction="right"
                                             max={1}
                                             size={18}
                                           >
-                                            <StyledPlatformIcon
-                                              key="javascript"
-                                              platform="javascript"
+                                            <div
+                                              className="e165dl3i1 css-corue1-PlatformIcons-StyledAvatar ezvce7z0"
+                                              direction="right"
+                                              max={1}
                                               size={18}
                                             >
-                                              <Component
-                                                className="css-d510pr-StyledPlatformIcon ezvce7z1"
+                                              <StyledPlatformIcon
+                                                key="javascript"
                                                 platform="javascript"
                                                 size={18}
                                               >
-                                                <PlatformIcon
+                                                <Component
                                                   className="css-d510pr-StyledPlatformIcon ezvce7z1"
                                                   platform="javascript"
-                                                  size="18px"
+                                                  size={18}
                                                 >
-                                                  <img
+                                                  <PlatformIcon
                                                     className="css-d510pr-StyledPlatformIcon ezvce7z1"
-                                                    height="18px"
-                                                    src={
-                                                      Object {
-                                                        "default": Object {
-                                                          "id": "test",
-                                                          "viewBox": Object {},
-                                                        },
+                                                    platform="javascript"
+                                                    size="18px"
+                                                  >
+                                                    <img
+                                                      className="css-d510pr-StyledPlatformIcon ezvce7z1"
+                                                      height="18px"
+                                                      src={
+                                                        Object {
+                                                          "default": Object {
+                                                            "id": "test",
+                                                            "viewBox": Object {},
+                                                          },
+                                                        }
                                                       }
-                                                    }
-                                                    width="18px"
-                                                  />
-                                                </PlatformIcon>
-                                              </Component>
-                                            </StyledPlatformIcon>
-                                          </div>
-                                        </PlatformIcons>
-                                      </PlatformList>
+                                                      width="18px"
+                                                    />
+                                                  </PlatformIcon>
+                                                </Component>
+                                              </StyledPlatformIcon>
+                                            </div>
+                                          </PlatformIcons>
+                                        </PlatformList>
+                                      </Tooltip>
                                     </ProjectAvatar>
                                   </Avatar>
                                 </StyledAvatar>
