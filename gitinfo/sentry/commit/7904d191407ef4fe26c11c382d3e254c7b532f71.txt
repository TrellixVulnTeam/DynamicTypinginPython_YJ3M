commit 7904d191407ef4fe26c11c382d3e254c7b532f71
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sat Mar 5 20:31:21 2016 +0100

    Fix up broken code in call sign review action

diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index c3afe1c155..e4274581a1 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -62,7 +62,8 @@ const OrganizationDetails = React.createClass({
   },
 
   componentWillReceiveProps(nextProps) {
-    if (nextProps.params.orgId !== this.props.params.orgId) {
+    if (nextProps.params.orgId !== this.props.params.orgId ||
+        nextProps.location.state === 'refresh') {
       this.remountComponent();
     }
   },
diff --git a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
index edba7e68a6..8ddcd25184 100644
--- a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
+++ b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
@@ -1,8 +1,10 @@
 import React from 'react';
+import {History} from 'react-router';
 import ActionOverlay from '../../components/actionOverlay';
 import OrganizationState from '../../mixins/organizationState';
 import ApiMixin from '../../mixins/apiMixin';
 import {t} from '../../locale';
+import update from 'react-addons-update';
 
 function getProjectInfoForReview(org) {
   let projects = [];
@@ -49,15 +51,20 @@ function getProjectInfoForReview(org) {
 
 
 const SetCallsignsAction = React.createClass({
-  mixins: [ApiMixin, OrganizationState],
+  mixins: [ApiMixin, History, OrganizationState],
 
   getInitialState() {
     return {
-      isLoading: false,
-      shortIds: {}
+      isLoading: true,
+      info: {},
+      callsigns: {}
     };
   },
 
+  componentWillMount() {
+    this.fetchData();
+  },
+
   onSubmit(event) {
     this.setState({
       isLoading: true
@@ -66,10 +73,14 @@ const SetCallsignsAction = React.createClass({
     let orgId = this.getOrganization().slug;
     this.api.request(`/organizations/${orgId}/shortids/`, {
       method: 'PUT',
-      data: this.state.shortIds,
+      data: {'callsigns': this.state.callsigns},
       success: (data) => {
+        this.context.history.pushState('refresh', `/${orgId}/`);
       },
       error: (error) => {
+        /*eslint no-console:0*/
+        console.log('Failed to set callsigns:', error);
+        alert(t('Failed to set callsigns'));
       },
       complete: () => {
         this.setState({
@@ -81,14 +92,45 @@ const SetCallsignsAction = React.createClass({
 
   onSetShortName(projectId, event) {
     this.setState({
+      callsigns: update(this.state.callsigns, {
+        [projectId]: {$set: event.target.value.toUpperCase().trim()}
+      }),
+    });
+  },
 
+  fetchData() {
+    let info = getProjectInfoForReview(this.getOrganization());
+    let callsigns = {};
+    info.projects.forEach((project) => {
+      callsigns[project.projectId] = project.callSign;
+    });
+
+    this.setState({
+      info: info,
+      callsigns: callsigns,
+      isLoading: false,
     });
   },
 
+  isValidCallsign(callsign) {
+    let found = 0;
+
+    if (callsign.match(/^[A-Z]{2,6}$/) === null) {
+      return false;
+    }
+
+    for (let key in this.state.callsigns) {
+      if (this.state.callsigns[key] === callsign) {
+        found++;
+      }
+    }
+    return found <= 1;
+  },
+
   render() {
     let org = this.getOrganization();
-    let info = getProjectInfoForReview(this.getOrganization());
-    let projects = info.projects;
+    let info = this.state.info;
+    let canSubmit = true;
 
     return (
       <ActionOverlay actionId="SET_CALLSIGNS" isLoading={this.state.isLoading}>
@@ -98,16 +140,25 @@ const SetCallsignsAction = React.createClass({
           ? <p>{t('Projects of teams you are not a member of are shown grayed out.')}</p> : null}
         <p>{t('Projects which have been previously reviewed are shown in green.')}</p>
         <form className="form-horizontal">
-          {projects.map((project) => {
+          {info.projects.map((project) => {
             let inputId = 'input-' + project.projectId;
             let disabled = !project.canReview;
             let className = 'form-group short-id-form-group';
+            let callsign = this.state.callsigns[project.projectId] || '';
             if (disabled) {
               className += ' disabled';
             }
             if (!project.requiresReview) {
               className += ' reviewed';
             }
+            if (!this.isValidCallsign(callsign)) {
+              className += ' invalid';
+              canSubmit = false;
+            }
+            if (callsign == '') {
+              className += ' empty';
+              canSubmit = false;
+            }
 
             return (
               <div className={className} key={project.projectId}>
@@ -121,7 +172,7 @@ const SetCallsignsAction = React.createClass({
                     disabled={disabled}
                     className="form-control"
                     onChange={this.onSetShortName.bind(this, project.projectId)}
-                    value={project.callSign}/>
+                    value={callsign}/>
                 </div>
               </div>
             );
@@ -129,7 +180,8 @@ const SetCallsignsAction = React.createClass({
           <div className="actions">
             <button type="button"
               onClick={this.onSubmit}
-              className="btn btn-primary btn-lg">
+              className="btn btn-primary btn-lg"
+              disabled={!canSubmit}>
               {t('Set Call Signs')}
             </button>
           </div>
diff --git a/src/sentry/static/sentry/less/includes/animate.less b/src/sentry/static/sentry/less/includes/animate.less
index f376523205..4abffd921c 100644
--- a/src/sentry/static/sentry/less/includes/animate.less
+++ b/src/sentry/static/sentry/less/includes/animate.less
@@ -117,6 +117,31 @@ Copyright (c) 2015 Daniel Eden
   animation-name: flash;
 }
 
+@-webkit-keyframes flash-50 {
+  0%, 50%, 100% {
+    opacity: 1;
+  }
+
+  25%, 75% {
+    opacity: 0.5;
+  }
+}
+
+@keyframes flash-50 {
+  0%, 50%, 100% {
+    opacity: 1;
+  }
+
+  25%, 75% {
+    opacity: 0.5;
+  }
+}
+
+.flash-50 {
+  -webkit-animation-name: flash-50;
+  animation-name: flash-50;
+}
+
 /* originally authored by Nick Pettit - https://github.com/nickpettit/glide */
 
 @-webkit-keyframes pulse {
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index 3c568a11d0..b40de3e1b1 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -81,6 +81,10 @@ header {
     font-size: 13px;
     font-weight: bold;
     padding-right: 10px;
+    .animated;
+    .animated.infinite;
+    .animated.hinge;
+    .flash-50;
   }
 
   a {
diff --git a/src/sentry/static/sentry/less/required-admin-actions.less b/src/sentry/static/sentry/less/required-admin-actions.less
index 54abf3e25f..42d33e978c 100644
--- a/src/sentry/static/sentry/less/required-admin-actions.less
+++ b/src/sentry/static/sentry/less/required-admin-actions.less
@@ -102,6 +102,20 @@
       box-shadow: inset 0 0 4px @green;
     }
 
+    &.invalid input {
+      background: @red-light;
+      color: @red-dark;
+      text-shadow: none;
+      border-color: @red-dark;
+      box-shadow: inset 0 0 4px @red;
+    }
+
+    &.empty input {
+      background: @gray-lightest;
+      border-color: @gray-darker;
+      box-shadow: inset 0 0 4px @gray;
+    }
+
     label { text-align: left; }
     input {
       text-align: center;
