commit 7514cd65db8cf3b66c49f054d7e7e19766d1c519
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jun 2 12:07:25 2015 +0100

    Support SENTRY_SINGLE_ORGANIZATION in org migration

diff --git a/src/sentry/migrations/0132_add_default_orgs.py b/src/sentry/migrations/0132_add_default_orgs.py
index 0a0e8a0a64..aebeab9595 100644
--- a/src/sentry/migrations/0132_add_default_orgs.py
+++ b/src/sentry/migrations/0132_add_default_orgs.py
@@ -2,6 +2,7 @@
 import datetime
 from south.db import db
 from south.v2 import DataMigration
+from django.conf import settings
 from django.db import models, transaction
 
 class Migration(DataMigration):
@@ -11,20 +12,40 @@ class Migration(DataMigration):
 
         Organization = orm['sentry.Organization']
         Team = orm['sentry.Team']
+        User = orm['sentry.User']
 
         queryset = Team.objects.filter(
             organization__isnull=True,
         )
 
-        user_orgs = {}
-        for team in RangeQuerySetWrapperWithProgressBar(queryset):
-            if team.owner_id not in user_orgs:
-                user_orgs[team.owner_id] = Organization.objects.create(
-                    name=team.name.strip() or 'Default',
-                    owner_id=team.owner_id,
+        single_org = getattr(settings, 'SENTRY_SINGLE_ORGANIZATION', False)
+        if single_org:
+            try:
+                user = User.objects.filter(is_superuser=True)[0]
+            except IndexError:
+                user, _ = User.objects.get_or_create(
+                    username='sentry',
+                    defaults={
+                        'email': 'sentry@localhost',
+                    }
                 )
 
-            team.organization = user_orgs[team.owner_id]
+            org = Organization.objects.create(
+                name='Default',
+                owner=user,
+            )
+
+        user_orgs = {}
+        for team in RangeQuerySetWrapperWithProgressBar(queryset):
+            if single_org:
+                team.organization = org
+            else:
+                if team.owner_id not in user_orgs:
+                    user_orgs[team.owner_id] = Organization.objects.create(
+                        name=team.name.strip() or 'Default',
+                        owner_id=team.owner_id,
+                    )
+                team.organization = user_orgs[team.owner_id]
             team.save()
             transaction.commit()
 
