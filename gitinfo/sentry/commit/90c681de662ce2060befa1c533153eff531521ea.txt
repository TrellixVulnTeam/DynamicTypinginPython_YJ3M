commit 90c681de662ce2060befa1c533153eff531521ea
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Jan 23 11:29:25 2020 +0100

    fix(ngettext): toLocaleString wont run if %d is present, will warn instead (#16580)
    
    * fix(ngettext): toLocaleString wont run if %d is used, will warn instead
    
    * updated comment, added error object

diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
index 08ec9e765b..85a935e785 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
@@ -255,7 +255,7 @@ class InviteMembersModal extends AsyncComponent<Props, State> {
       const sentCount = statuses.filter(i => i.sent).length;
       const errorCount = statuses.filter(i => i.error).length;
 
-      const invites = <strong>{tn('%d invite', '%d invites', sentCount)}</strong>;
+      const invites = <strong>{tn('%s invite', '%s invites', sentCount)}</strong>;
       const tctComponents = {
         invites,
         failed: errorCount,
@@ -290,8 +290,8 @@ class InviteMembersModal extends AsyncComponent<Props, State> {
   get inviteButtonLabel() {
     if (this.invites.length > 0) {
       return this.willInvite
-        ? tn('Send invite', 'Send invites (%d)', this.invites.length)
-        : tn('Send invite request', 'Send invite requests (%d)', this.invites.length);
+        ? tn('Send invite', 'Send invites (%s)', this.invites.length)
+        : tn('Send invite request', 'Send invite requests (%s)', this.invites.length);
     }
 
     return this.willInvite ? t('Send invite') : t('Send invite request');
diff --git a/src/sentry/static/sentry/app/locale.tsx b/src/sentry/static/sentry/app/locale.tsx
index 51258636a5..97436aca82 100644
--- a/src/sentry/static/sentry/app/locale.tsx
+++ b/src/sentry/static/sentry/app/locale.tsx
@@ -321,7 +321,16 @@ export function ngettext(singular: string, plural: string, ...args: FormatArg[])
 
   if (args.length > 0) {
     countArg = (args[0] as number) || 0;
-    args = [countArg.toLocaleString(), ...args.slice(1)];
+
+    // `toLocaleString` will render `999` as `"999"` but `9999` as `"9,999"`. This means that any call with `tn` or `ngettext` cannot use `%d` in the codebase but has to use `%s`.
+    // This means a string is always being passed in as an argument, but `sprintf-js` implicitly coerces strings that can be parsed as integers into an integer.
+    // This would break under any locale that used different formatting and other undesirable behaviors.
+    if ((singular + plural).includes('%d')) {
+      // eslint-disable-next-line no-console
+      console.error(new Error('You should not use %d within tn(), use %s instead'));
+    } else {
+      args = [countArg.toLocaleString(), ...args.slice(1)];
+    }
   }
 
   // XXX(ts): See XXX in gettext.
