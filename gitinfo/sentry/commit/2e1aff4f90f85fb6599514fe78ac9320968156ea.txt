commit 2e1aff4f90f85fb6599514fe78ac9320968156ea
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 2 09:51:20 2018 -0700

    feat(ui): New Sidebar behind feature flag (#8263)

diff --git a/src/sentry/static/sentry/app/actionCreators/sidebar.jsx b/src/sentry/static/sentry/app/actionCreators/sidebar.jsx
new file mode 100644
index 0000000000..824229dcfc
--- /dev/null
+++ b/src/sentry/static/sentry/app/actionCreators/sidebar.jsx
@@ -0,0 +1,24 @@
+import Cookies from 'js-cookie';
+
+import SidebarActions from '../actions/sidebarActions';
+
+const SIDEBAR_COOKIE_KEY = 'sidebar_collapsed';
+const SIDEBAR_COOKIE_ENABLED = '1';
+const SIDEBAR_COOKIE_DISABLED = '0';
+
+export function hideSidebar() {
+  SidebarActions.hideSidebar();
+  Cookies.set(SIDEBAR_COOKIE_KEY, SIDEBAR_COOKIE_ENABLED);
+}
+
+export function showSidebar() {
+  SidebarActions.showSidebar();
+  Cookies.set(SIDEBAR_COOKIE_KEY, SIDEBAR_COOKIE_DISABLED);
+}
+
+export function loadSidebarState() {
+  // Set initial "collapsed" state to true or false
+  SidebarActions.loadInitialState(
+    Cookies.get(SIDEBAR_COOKIE_KEY) === SIDEBAR_COOKIE_ENABLED
+  );
+}
diff --git a/src/sentry/static/sentry/app/actions/sidebarActions.jsx b/src/sentry/static/sentry/app/actions/sidebarActions.jsx
new file mode 100644
index 0000000000..e18febf0d7
--- /dev/null
+++ b/src/sentry/static/sentry/app/actions/sidebarActions.jsx
@@ -0,0 +1,9 @@
+import Reflux from 'reflux';
+
+let SidebarActions = Reflux.createActions([
+  'loadInitialState',
+  'hideSidebar',
+  'showSidebar',
+]);
+
+export default SidebarActions;
diff --git a/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx
index ce90992003..77f04aec52 100644
--- a/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import classNames from 'classnames';
 import qs from 'query-string';
+import styled from 'react-emotion';
 
 import ConfigStore from 'app/stores/configStore';
 import LetterAvatar from 'app/components/letterAvatar';
@@ -114,7 +115,7 @@ class BaseAvatar extends React.Component {
   }
 
   render() {
-    let {hasTooltip, size, tooltip} = this.props;
+    let {className, hasTooltip, size, tooltip, style} = this.props;
     let sizeStyle = {};
 
     if (size) {
@@ -126,19 +127,23 @@ class BaseAvatar extends React.Component {
 
     return (
       <Tooltip title={tooltip} disabled={!hasTooltip}>
-        <span
-          className={classNames('avatar', this.props.className)}
+        <StyledBaseAvatar
+          className={classNames('avatar', className)}
           style={{
             ...sizeStyle,
-            ...this.props.style,
+            ...style,
           }}
         >
           {this.state.showBackupAvatar && this.renderLetterAvatar()}
           {this.renderImg()}
-        </span>
+        </StyledBaseAvatar>
       </Tooltip>
     );
   }
 }
 
 export default BaseAvatar;
+
+const StyledBaseAvatar = styled('span')`
+  flex-shrink: 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx
index 1bad113805..410549f7fe 100644
--- a/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx
@@ -15,9 +15,7 @@ class UserAvatar extends React.Component {
     gravatar: true,
   };
 
-  getType = () => {
-    let {user, gravatar} = this.props;
-
+  getType = (user, gravatar) => {
     if (user.avatar) {
       return user.avatar.avatarType;
     }
@@ -29,11 +27,11 @@ class UserAvatar extends React.Component {
   };
 
   render() {
-    let {user, ...props} = this.props;
+    let {user, gravatar, ...props} = this.props;
 
     if (!user) return null;
 
-    let type = this.getType();
+    let type = this.getType(user, gravatar);
 
     return (
       <BaseAvatar
diff --git a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
index 7f398af23d..27dad1444c 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
@@ -1,14 +1,12 @@
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {t} from 'app/locale';
+import Button from 'app/components/buttons/button';
 import OrganizationHomeSidebar from 'app/components/organizations/homeSidebar';
 import OrganizationState from 'app/mixins/organizationState';
 import ProjectSelector from 'app/components/projectHeader/projectSelector';
 import Tooltip from 'app/components/tooltip';
-import {t} from 'app/locale';
-
-import Button from 'app/components/buttons/button';
 
 const HomeContainer = createReactClass({
   displayName: 'HomeContainer',
@@ -18,6 +16,7 @@ const HomeContainer = createReactClass({
   render() {
     let org = this.getOrganization();
     let access = this.getAccess();
+    let hasNewDashboardFeature = this.getFeatures().has('dashboard');
 
     return (
       <div className={`${this.props.className || ''} organization-home`}>
@@ -49,30 +48,36 @@ const HomeContainer = createReactClass({
                 </Button>
               </Tooltip>
             )}
-            {access.has('team:write') ? (
-              <Button to={`/organizations/${org.slug}/teams/new/`} priority="primary">
-                {t('New Team')}
-              </Button>
-            ) : (
-              <Tooltip
-                title={t('You do not have enough permission to create new teams')}
-                tooltipOptions={{placement: 'bottom'}}
-              >
-                <Button priority="primary" disabled>
+            {!hasNewDashboardFeature ? (
+              access.has('team:write') ? (
+                <Button to={`/organizations/${org.slug}/teams/new/`} priority="primary">
                   {t('New Team')}
                 </Button>
-              </Tooltip>
-            )}
+              ) : (
+                <Tooltip
+                  title={t('You do not have enough permission to create new teams')}
+                  tooltipOptions={{placement: 'bottom'}}
+                >
+                  <Button priority="primary" disabled>
+                    {t('New Team')}
+                  </Button>
+                </Tooltip>
+              )
+            ) : null}
           </div>
         </div>
-        <div className="container">
-          <div className="content row">
-            <div className="col-md-2 org-sidebar">
-              <OrganizationHomeSidebar />
+        {!hasNewDashboardFeature ? (
+          <div className="container">
+            <div className="content row">
+              <div className="col-md-2 org-sidebar">
+                <OrganizationHomeSidebar />
+              </div>
+              <div className="col-md-10">{this.props.children}</div>
             </div>
-            <div className="col-md-10">{this.props.children}</div>
           </div>
-        </div>
+        ) : (
+          <div className="container">{this.props.children}</div>
+        )}
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index 96689cb092..ecb759363f 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -345,13 +345,17 @@ const ProjectSelector = createReactClass({
     const dropdownClassNames = classNames('project-dropdown', {
       'is-empty': !hasProjects,
     });
+    const hasNewDashboardFeature = features.has('dashboard');
 
     return (
       <div className="project-select">
         <h3>
-          <Link to={`/${org.slug}/`} className="home-crumb">
-            <span className="icon-home" />
-          </Link>
+          {!hasNewDashboardFeature && (
+            <Link to={`/${org.slug}/`} className="home-crumb">
+              <span className="icon-home" />
+            </Link>
+          )}
+
           {this.state.activeProject ? (
             this.getLinkNode(this.state.activeTeam, this.state.activeProject)
           ) : (
diff --git a/src/sentry/static/sentry/app/components/sidebar.old/broadcasts.jsx b/src/sentry/static/sentry/app/components/sidebar.old/broadcasts.jsx
new file mode 100644
index 0000000000..7af0becd78
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar.old/broadcasts.jsx
@@ -0,0 +1,158 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import createReactClass from 'create-react-class';
+
+import ApiMixin from 'app/mixins/apiMixin';
+import LoadingIndicator from 'app/components/loadingIndicator';
+import {t} from 'app/locale';
+
+import SidebarPanel from 'app/components/sidebar.old/sidebarPanel';
+import SidebarPanelItem from 'app/components/sidebar.old/sidebarPanelItem';
+
+const MARK_SEEN_DELAY = 1000;
+const POLLER_DELAY = 60000;
+
+const Broadcasts = createReactClass({
+  displayName: 'Broadcasts',
+
+  propTypes: {
+    showPanel: PropTypes.bool,
+    currentPanel: PropTypes.string,
+    hidePanel: PropTypes.func,
+    onShowPanel: PropTypes.func.isRequired,
+  },
+
+  mixins: [ApiMixin],
+
+  getInitialState() {
+    return {
+      broadcasts: [],
+      loading: true,
+      error: false,
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  componentWillUnmount() {
+    if (this.timer) {
+      window.clearTimeout(this.timer);
+      this.timer = null;
+    }
+    if (this.poller) {
+      window.clearTimeout(this.poller);
+      this.poller = null;
+    }
+  },
+
+  remountComponent() {
+    this.setState(this.getInitialState(), this.fetchData);
+  },
+
+  fetchData() {
+    if (this.poller) {
+      window.clearTimeout(this.poller);
+    }
+    this.api.request('/broadcasts/', {
+      method: 'GET',
+      success: data => {
+        this.setState({
+          broadcasts: data || [],
+          loading: false,
+        });
+        this.poller = window.setTimeout(this.fetchData, POLLER_DELAY);
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true,
+        });
+        this.poller = window.setTimeout(this.fetchData, POLLER_DELAY);
+      },
+    });
+  },
+
+  onShowPanel() {
+    this.timer = window.setTimeout(this.markSeen, MARK_SEEN_DELAY);
+    this.props.onShowPanel();
+  },
+
+  getUnseenIds() {
+    return this.state.broadcasts
+      .filter(item => {
+        return !item.hasSeen;
+      })
+      .map(item => {
+        return item.id;
+      });
+  },
+
+  markSeen() {
+    let unseenBroadcastIds = this.getUnseenIds();
+    if (unseenBroadcastIds.length === 0) return;
+
+    this.api.request('/broadcasts/', {
+      method: 'PUT',
+      query: {id: unseenBroadcastIds},
+      data: {
+        hasSeen: '1',
+      },
+      success: () => {
+        this.setState({
+          broadcasts: this.state.broadcasts.map(item => {
+            item.hasSeen = true;
+            return item;
+          }),
+        });
+      },
+    });
+  },
+
+  render() {
+    let {broadcasts, loading} = this.state;
+    return (
+      <li className={this.props.currentPanel == 'broadcasts' ? 'active' : null}>
+        <a
+          className="broadcasts-toggle"
+          onClick={this.onShowPanel}
+          title={t('Updates from Sentry')}
+        >
+          <span className="icon icon-globe" />
+          {this.getUnseenIds() > 0 && <span className="activity-indicator" />}
+        </a>
+        {this.props.showPanel &&
+          this.props.currentPanel == 'broadcasts' && (
+            <SidebarPanel
+              title={t('Recent updates from Sentry')}
+              hidePanel={this.props.hidePanel}
+            >
+              {loading ? (
+                <LoadingIndicator />
+              ) : broadcasts.length === 0 ? (
+                <div className="sidebar-panel-empty">
+                  {t('No recent updates from the Sentry team.')}
+                </div>
+              ) : (
+                broadcasts.map(item => {
+                  return (
+                    <SidebarPanelItem
+                      key={item.id}
+                      className={!item.hasSeen && 'unseen'}
+                      title={item.title}
+                      message={item.message}
+                      link={item.link}
+                    />
+                  );
+                })
+              )}
+            </SidebarPanel>
+          )}
+      </li>
+    );
+  },
+});
+
+export default Broadcasts;
diff --git a/src/sentry/static/sentry/app/components/sidebar.old/incidents.jsx b/src/sentry/static/sentry/app/components/sidebar.old/incidents.jsx
new file mode 100644
index 0000000000..b2b1718626
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar.old/incidents.jsx
@@ -0,0 +1,85 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import createReactClass from 'create-react-class';
+import Reflux from 'reflux';
+
+import SidebarPanel from 'app/components/sidebar.old/sidebarPanel';
+
+import IncidentStore from 'app/stores/incidentStore';
+import {t} from 'app/locale';
+
+const Incidents = createReactClass({
+  displayName: 'Incidents',
+
+  propTypes: {
+    showPanel: PropTypes.bool,
+    currentPanel: PropTypes.string,
+    hidePanel: PropTypes.func,
+    onShowPanel: PropTypes.func.isRequired,
+  },
+
+  mixins: [Reflux.listenTo(IncidentStore, 'onIncidentChange')],
+
+  getInitialState() {
+    return {
+      status: null,
+    };
+  },
+
+  onIncidentChange(status) {
+    this.setState({
+      status: {...status},
+    });
+  },
+
+  render() {
+    let {status} = this.state;
+    if (!status) return null;
+
+    return (
+      status &&
+      status.incidents.length > 0 && (
+        <li className={this.props.currentPanel == 'statusupdate' ? 'active' : null}>
+          <a onClick={this.props.onShowPanel}>
+            <span className="icon icon-alert animated pulse infinite" />
+          </a>
+          {this.props.showPanel &&
+            this.props.currentPanel == 'statusupdate' &&
+            status && (
+              <SidebarPanel
+                title={t('Recent status updates')}
+                hidePanel={this.props.hidePanel}
+              >
+                <ul className="incident-list list-unstyled">
+                  {status.incidents.map(incident => (
+                    <li className="incident-item" key={incident.id}>
+                      <h4>{incident.title}</h4>
+                      {incident.updates ? (
+                        <div>
+                          <h6>Latest updates:</h6>
+                          <ul className="status-list list-unstyled">
+                            {incident.updates.map((update, key) => (
+                              <li className="status-item" key={key}>
+                                <p>{update}</p>
+                              </li>
+                            ))}
+                          </ul>
+                        </div>
+                      ) : null}
+                      <p>
+                        <a href={incident.url} className="btn btn-default btn-sm">
+                          Learn more
+                        </a>
+                      </p>
+                    </li>
+                  ))}
+                </ul>
+              </SidebarPanel>
+            )}
+        </li>
+      )
+    );
+  },
+});
+
+export default Incidents;
diff --git a/src/sentry/static/sentry/app/components/sidebar.old/index.jsx b/src/sentry/static/sentry/app/components/sidebar.old/index.jsx
new file mode 100644
index 0000000000..1ebdb5b756
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar.old/index.jsx
@@ -0,0 +1,332 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import createReactClass from 'create-react-class';
+import $ from 'jquery';
+
+import ApiMixin from 'app/mixins/apiMixin';
+import OrganizationState from 'app/mixins/organizationState';
+import {load as loadIncidents} from 'app/actionCreators/incidents';
+
+import Broadcasts from 'app/components/sidebar.old/broadcasts';
+import Incidents from 'app/components/sidebar.old/incidents';
+import UserNav from 'app/components/sidebar.old/userNav';
+import OrganizationSelector from 'app/components/sidebar.old/organizationSelector';
+import SidebarPanel from 'app/components/sidebar.old/sidebarPanel';
+import TodoList from 'app/components/onboardingWizard/todos';
+import IssueList from 'app/components/issueList';
+import ConfigStore from 'app/stores/configStore';
+
+import {t} from 'app/locale';
+
+class OnboardingStatus extends React.Component {
+  static propTypes = {
+    org: PropTypes.object.isRequired,
+    currentPanel: PropTypes.string,
+    onShowPanel: PropTypes.func,
+    showPanel: PropTypes.bool,
+    hidePanel: PropTypes.func,
+  };
+
+  render() {
+    let org = this.props.org;
+    if (org.features.indexOf('onboarding') === -1) return null;
+
+    let doneTasks = (org.onboardingTasks || []).filter(
+      task => task.status === 'complete' || task.status === 'skipped'
+    );
+
+    let percentage = Math.round(
+      doneTasks.length / TodoList.TASKS.length * 100
+    ).toString();
+
+    let style = {
+      height: percentage + '%',
+    };
+
+    if (doneTasks.length >= TodoList.TASKS.filter(task => task.display).length) {
+      return null;
+    }
+
+    return (
+      <li
+        className={
+          this.props.currentPanel == 'todos' ? 'onboarding active' : 'onboarding'
+        }
+      >
+        <div className="onboarding-progress-bar" onClick={this.props.onShowPanel}>
+          <div className="slider" style={style} />
+        </div>
+        {this.props.showPanel &&
+          this.props.currentPanel == 'todos' && (
+            <SidebarPanel
+              title="Getting Started with Sentry"
+              hidePanel={this.props.hidePanel}
+            >
+              <TodoList />
+            </SidebarPanel>
+          )}
+      </li>
+    );
+  }
+}
+
+const Sidebar = createReactClass({
+  displayName: 'Sidebar',
+
+  contextTypes: {
+    location: PropTypes.object,
+  },
+
+  mixins: [ApiMixin, OrganizationState],
+
+  getInitialState: function() {
+    return {
+      showTodos: location.hash === '#welcome',
+    };
+  },
+
+  componentDidMount() {
+    $(window).on('hashchange', this.hashChangeHandler);
+    $(document).on('click', this.documentClickHandler);
+
+    loadIncidents();
+  },
+
+  componentWillReceiveProps(nextProps, nextContext) {
+    let {location} = this.context;
+    let nextLocation = nextContext.location;
+
+    // Close active panel if we navigated anywhere
+    if (location.pathname != nextLocation.pathname) {
+      this.hidePanel();
+    }
+  },
+
+  componentWillUnmount() {
+    $(window).off('hashchange', this.hashChangeHandler);
+    $(document).off('click', this.documentClickHandler);
+  },
+
+  documentClickHandler(evt) {
+    // If click occurs outside of sidebar, close any
+    // active panel
+    if (!this.refs.navbar.contains(evt.target)) {
+      this.hidePanel();
+    }
+  },
+
+  hashChangeHandler() {
+    if (location.hash == '#welcome') {
+      this.setState({showTodos: true});
+    }
+  },
+
+  toggleTodos(e) {
+    this.setState({showTodos: !this.state.showTodos});
+  },
+
+  hidePanel() {
+    this.setState({
+      showPanel: false,
+      currentPanel: '',
+    });
+  },
+
+  showPanel(panel) {
+    this.setState({
+      showPanel: true,
+      currentPanel: panel,
+    });
+  },
+
+  togglePanel(panel) {
+    if (this.state.currentPanel === panel) this.hidePanel();
+    else this.showPanel(panel);
+  },
+
+  renderBody() {
+    let org = this.getOrganization();
+    let config = ConfigStore.getConfig();
+
+    if (!org) {
+      // When no organization, just render Sentry logo at top
+      return (
+        <ul className="navbar-nav">
+          <li>
+            <a className="logo" href="/">
+              <span className="icon-sentry-logo" />
+            </a>
+          </li>
+        </ul>
+      );
+    }
+
+    return (
+      <div>
+        <OrganizationSelector
+          organization={org}
+          showPanel={this.state.showPanel}
+          currentPanel={this.state.currentPanel}
+          togglePanel={() => this.togglePanel('org-selector')}
+          hidePanel={() => this.hidePanel()}
+        />
+
+        {/* Top nav links */}
+        <ul className="navbar-nav divider-bottom">
+          <li className={this.state.currentPanel == 'assigned' ? 'active' : null}>
+            <a title="Assigned to me">
+              <span
+                className="icon icon-user"
+                onClick={() => this.togglePanel('assigned')}
+              />
+            </a>
+          </li>
+          <li className={this.state.currentPanel == 'bookmarks' ? 'active' : null}>
+            <a title="My Bookmarks">
+              <span
+                className="icon icon-star-solid"
+                onClick={() => this.togglePanel('bookmarks')}
+              />
+            </a>
+          </li>
+          <li className={this.state.currentPanel == 'history' ? 'active' : null}>
+            <a title="Recently Viewed">
+              <span
+                className="icon icon-av_timer"
+                onClick={() => this.togglePanel('history')}
+              />
+            </a>
+          </li>
+        </ul>
+        <ul className="navbar-nav">
+          <Broadcasts
+            showPanel={this.state.showPanel}
+            currentPanel={this.state.currentPanel}
+            onShowPanel={() => this.togglePanel('broadcasts')}
+            hidePanel={() => this.hidePanel()}
+          />
+          <Incidents
+            showPanel={this.state.showPanel}
+            currentPanel={this.state.currentPanel}
+            onShowPanel={() => this.togglePanel('statusupdate')}
+            hidePanel={() => this.hidePanel()}
+          />
+          <li>
+            <a
+              title="Support"
+              href={
+                !config.isOnPremise
+                  ? `/organizations/${org.slug}/support/`
+                  : 'https://forum.sentry.io/'
+              }
+            >
+              <span className="icon icon-support" />
+            </a>
+          </li>
+        </ul>
+
+        {/* Panel bodies */}
+        {this.state.showPanel &&
+          this.state.currentPanel == 'assigned' && (
+            <SidebarPanel title={t('Assigned to me')} hidePanel={() => this.hidePanel()}>
+              <IssueList
+                endpoint={`/organizations/${org.slug}/members/me/issues/assigned/`}
+                query={{
+                  statsPeriod: '24h',
+                  per_page: 10,
+                  status: 'unresolved',
+                }}
+                pagination={false}
+                renderEmpty={() => (
+                  <div className="sidebar-panel-empty" key="none">
+                    {t('No issues have been assigned to you.')}
+                  </div>
+                )}
+                ref="issueList"
+                showActions={false}
+                params={{orgId: org.slug}}
+              />
+            </SidebarPanel>
+          )}
+        {this.state.showPanel &&
+          this.state.currentPanel == 'bookmarks' && (
+            <SidebarPanel title={t('My Bookmarks')} hidePanel={() => this.hidePanel()}>
+              <IssueList
+                endpoint={`/organizations/${org.slug}/members/me/issues/bookmarked/`}
+                query={{
+                  statsPeriod: '24h',
+                  per_page: 10,
+                  status: 'unresolved',
+                }}
+                pagination={false}
+                renderEmpty={() => (
+                  <div className="sidebar-panel-empty" key="no">
+                    {t('You have no bookmarked issues.')}
+                  </div>
+                )}
+                ref="issueList"
+                showActions={false}
+                params={{orgId: org.slug}}
+                noBorder
+              />
+            </SidebarPanel>
+          )}
+        {this.state.showPanel &&
+          this.state.currentPanel == 'history' && (
+            <SidebarPanel title={t('Recently Viewed')} hidePanel={() => this.hidePanel()}>
+              <IssueList
+                endpoint={`/organizations/${org.slug}/members/me/issues/viewed/`}
+                query={{
+                  statsPeriod: '24h',
+                  per_page: 10,
+                  status: 'unresolved',
+                }}
+                pagination={false}
+                renderEmpty={() => (
+                  <div className="sidebar-panel-empty" key="none">
+                    {t('No recently viewed issues.')}
+                  </div>
+                )}
+                ref="issueList"
+                showActions={false}
+                params={{orgId: org.slug}}
+                noBorder
+              />
+            </SidebarPanel>
+          )}
+      </div>
+    );
+  },
+
+  render() {
+    let org = this.getOrganization();
+
+    // NOTE: this.props.orgId not guaranteed to be specified
+    return (
+      <nav className="navbar" role="navigation" ref="navbar">
+        <div className="anchor-top">{this.renderBody()}</div>
+
+        {/* Bottom nav links */}
+        <div className="anchor-bottom">
+          <ul className="navbar-nav">
+            {org && (
+              <OnboardingStatus
+                org={org}
+                showPanel={this.state.showPanel}
+                currentPanel={this.state.currentPanel}
+                onShowPanel={() => this.togglePanel('todos')}
+                hidePanel={() => this.hidePanel()}
+              />
+            )}
+
+            <li>
+              <UserNav className="user-settings" />
+            </li>
+          </ul>
+        </div>
+      </nav>
+    );
+  },
+});
+
+export default Sidebar;
diff --git a/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx b/src/sentry/static/sentry/app/components/sidebar.old/organizationSelector.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
rename to src/sentry/static/sentry/app/components/sidebar.old/organizationSelector.jsx
index 44ac32d939..ef3cb262bf 100644
--- a/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar.old/organizationSelector.jsx
@@ -8,7 +8,7 @@ import Avatar from 'app/components/avatar';
 import ConfigStore from 'app/stores/configStore';
 import Link from 'app/components/link';
 import OrganizationsStore from 'app/stores/organizationsStore';
-import SidebarPanel from 'app/components/sidebarPanel';
+import SidebarPanel from 'app/components/sidebar.old/sidebarPanel';
 
 let RouterOrBrowserLink = ({isRouter, path, ...props}) =>
   isRouter ? <Link to={path} {...props} /> : <a href={path} {...props} />;
diff --git a/src/sentry/static/sentry/app/components/sidebarPanel.jsx b/src/sentry/static/sentry/app/components/sidebar.old/sidebarPanel.jsx
similarity index 92%
rename from src/sentry/static/sentry/app/components/sidebarPanel.jsx
rename to src/sentry/static/sentry/app/components/sidebar.old/sidebarPanel.jsx
index ecffe700fc..052af862b8 100644
--- a/src/sentry/static/sentry/app/components/sidebarPanel.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar.old/sidebarPanel.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import SidebarPanelItem from 'app/components/sidebarPanelItem';
+import SidebarPanelItem from './sidebarPanelItem';
 
 class SidebarPanel extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/components/sidebarPanelItem.jsx b/src/sentry/static/sentry/app/components/sidebar.old/sidebarPanelItem.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/sidebarPanelItem.jsx
rename to src/sentry/static/sentry/app/components/sidebar.old/sidebarPanelItem.jsx
diff --git a/src/sentry/static/sentry/app/components/sidebar/userNav.jsx b/src/sentry/static/sentry/app/components/sidebar.old/userNav.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/sidebar/userNav.jsx
rename to src/sentry/static/sentry/app/components/sidebar.old/userNav.jsx
diff --git a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
index 6cd96f6810..837b7fa921 100644
--- a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
@@ -1,14 +1,15 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {t} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
+import InlineSvg from 'app/components/inlineSvg';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import {t} from 'app/locale';
-
-import SidebarPanel from 'app/components/sidebarPanel';
-import SidebarPanelItem from 'app/components/sidebarPanelItem';
+import SidebarItem from 'app/components/sidebar/sidebarItem';
+import SidebarPanel from 'app/components/sidebar/sidebarPanel';
+import SidebarPanelEmpty from 'app/components/sidebar/sidebarPanelEmpty';
+import SidebarPanelItem from 'app/components/sidebar/sidebarPanelItem';
 
 const MARK_SEEN_DELAY = 1000;
 const POLLER_DELAY = 60000;
@@ -17,6 +18,8 @@ const Broadcasts = createReactClass({
   displayName: 'Broadcasts',
 
   propTypes: {
+    orientation: PropTypes.oneOf(['top', 'left']),
+    collapsed: PropTypes.bool,
     showPanel: PropTypes.bool,
     currentPanel: PropTypes.string,
     hidePanel: PropTypes.func,
@@ -75,12 +78,14 @@ const Broadcasts = createReactClass({
     });
   },
 
-  onShowPanel() {
+  handleShowPanel() {
     this.timer = window.setTimeout(this.markSeen, MARK_SEEN_DELAY);
     this.props.onShowPanel();
   },
 
   getUnseenIds() {
+    if (!this.state.broadcasts) return [];
+
     return this.state.broadcasts
       .filter(item => {
         return !item.hasSeen;
@@ -112,35 +117,45 @@ const Broadcasts = createReactClass({
   },
 
   render() {
+    let {orientation, collapsed, currentPanel, showPanel, hidePanel} = this.props;
     let {broadcasts, loading} = this.state;
+
+    let unseenPosts = this.getUnseenIds();
+
     return (
-      <li className={this.props.currentPanel == 'broadcasts' ? 'active' : null}>
-        <a
-          className="broadcasts-toggle"
-          onClick={this.onShowPanel}
-          title={t('Updates from Sentry')}
-        >
-          <span className="icon icon-globe" />
-          {this.getUnseenIds() > 0 && <span className="activity-indicator" />}
-        </a>
-        {this.props.showPanel &&
-          this.props.currentPanel == 'broadcasts' && (
+      <React.Fragment>
+        <SidebarItem
+          data-test-id="sidebar-broadcasts"
+          orientation={orientation}
+          collapsed={collapsed}
+          active={currentPanel == 'broadcasts'}
+          badge={unseenPosts.length}
+          icon={<InlineSvg src="icon-broadcast" size="22px" />}
+          label={t("What's new")}
+          onClick={this.handleShowPanel}
+        />
+
+        {showPanel &&
+          currentPanel == 'broadcasts' && (
             <SidebarPanel
-              title={t('Recent updates from Sentry')}
-              hidePanel={this.props.hidePanel}
+              data-test-id="sidebar-broadcasts-panel"
+              orientation={orientation}
+              collapsed={collapsed}
+              title={t("What's new in Sentry")}
+              hidePanel={hidePanel}
             >
               {loading ? (
                 <LoadingIndicator />
               ) : broadcasts.length === 0 ? (
-                <div className="sidebar-panel-empty">
+                <SidebarPanelEmpty>
                   {t('No recent updates from the Sentry team.')}
-                </div>
+                </SidebarPanelEmpty>
               ) : (
                 broadcasts.map(item => {
                   return (
                     <SidebarPanelItem
                       key={item.id}
-                      className={!item.hasSeen && 'unseen'}
+                      hasSeen={item.hasSeen}
                       title={item.title}
                       message={item.message}
                       link={item.link}
@@ -150,7 +165,7 @@ const Broadcasts = createReactClass({
               )}
             </SidebarPanel>
           )}
-      </li>
+      </React.Fragment>
     );
   },
 });
diff --git a/src/sentry/static/sentry/app/components/sidebar/incidents.jsx b/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
index 7637c3a388..92751a4a8f 100644
--- a/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
@@ -1,17 +1,24 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
+import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
 
-import SidebarPanel from 'app/components/sidebarPanel';
-
-import IncidentStore from 'app/stores/incidentStore';
 import {t} from 'app/locale';
+import Button from 'app/components/buttons/button';
+import IncidentStore from 'app/stores/incidentStore';
+import InlineSvg from 'app/components/inlineSvg';
+
+import SidebarItem from './sidebarItem';
+import SidebarPanel from './sidebarPanel';
+import SidebarPanelEmpty from './sidebarPanelEmpty';
 
 const Incidents = createReactClass({
   displayName: 'Incidents',
 
   propTypes: {
+    orientation: PropTypes.oneOf(['top', 'left']),
+    collapsed: PropTypes.bool,
     showPanel: PropTypes.bool,
     currentPanel: PropTypes.string,
     hidePanel: PropTypes.func,
@@ -33,53 +40,114 @@ const Incidents = createReactClass({
   },
 
   render() {
+    let {
+      orientation,
+      collapsed,
+      currentPanel,
+      showPanel,
+      hidePanel,
+      onShowPanel,
+    } = this.props;
+
     let {status} = this.state;
     if (!status) return null;
 
+    let active = currentPanel === 'statusupdate';
+    let isEmpty = !status.incidents || status.incidents.length === 0;
+
+    if (isEmpty) return null;
+
     return (
-      status &&
-      status.incidents.length > 0 && (
-        <li className={this.props.currentPanel == 'statusupdate' ? 'active' : null}>
-          <a onClick={this.props.onShowPanel}>
-            <span className="icon icon-alert animated pulse infinite" />
-          </a>
-          {this.props.showPanel &&
-            this.props.currentPanel == 'statusupdate' &&
-            status && (
-              <SidebarPanel
-                title={t('Recent status updates')}
-                hidePanel={this.props.hidePanel}
-              >
-                <ul className="incident-list list-unstyled">
-                  {status.incidents.map(incident => (
-                    <li className="incident-item" key={incident.id}>
-                      <h4>{incident.title}</h4>
-                      {incident.updates ? (
-                        <div>
-                          <h6>Latest updates:</h6>
-                          <ul className="status-list list-unstyled">
-                            {incident.updates.map((update, key) => (
-                              <li className="status-item" key={key}>
-                                <p>{update}</p>
-                              </li>
-                            ))}
-                          </ul>
-                        </div>
-                      ) : null}
-                      <p>
-                        <a href={incident.url} className="btn btn-default btn-sm">
-                          Learn more
-                        </a>
-                      </p>
-                    </li>
-                  ))}
-                </ul>
-              </SidebarPanel>
-            )}
-        </li>
-      )
+      <React.Fragment>
+        <SidebarItem
+          id="statusupdate"
+          orientation={orientation}
+          collapsed={collapsed}
+          active={active}
+          icon={
+            <InlineSvg
+              src="icon-circle-exclamation"
+              className="animated pulse infinite"
+            />
+          }
+          label={t('Service status')}
+          onClick={onShowPanel}
+        />
+        {showPanel &&
+          active &&
+          status && (
+            <SidebarPanel
+              orientation={orientation}
+              title={t('Recent status updates')}
+              hidePanel={hidePanel}
+              collapsed={collapsed}
+            >
+              {isEmpty && (
+                <SidebarPanelEmpty>
+                  {t('There are no incidents to report')}
+                </SidebarPanelEmpty>
+              )}
+              <IncidentList className="incident-list">
+                {status.incidents.map(incident => (
+                  <IncidentItem key={incident.id}>
+                    <IncidentTitle>{incident.title}</IncidentTitle>
+                    {incident.updates ? (
+                      <div>
+                        <StatusHeader>{t('Latest updates:')}</StatusHeader>
+                        <StatusList>
+                          {incident.updates.map((update, key) => (
+                            <StatusItem key={key}>{update}</StatusItem>
+                          ))}
+                        </StatusList>
+                      </div>
+                    ) : null}
+                    <div>
+                      <Button href={incident.url} size="small" external>
+                        {t('Learn more')}
+                      </Button>
+                    </div>
+                  </IncidentItem>
+                ))}
+              </IncidentList>
+            </SidebarPanel>
+          )}
+      </React.Fragment>
     );
   },
 });
 
 export default Incidents;
+
+const IncidentList = styled('ul')`
+  list-style: none;
+  padding: 20px 20px 0;
+  font-size: 13px;
+`;
+
+const IncidentItem = styled('li')`
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  margin-bottom: 20px;
+  padding-bottom: 5px;
+`;
+
+const IncidentTitle = styled('div')`
+  font-size: 18px;
+  font-weight: 600;
+  line-height: 1.2;
+  margin-bottom: 15px;
+`;
+const StatusHeader = styled('div')`
+  color: #7c6a8e;
+  margin-bottom: 15px;
+  font-size: 14px;
+  font-weight: 600;
+  line-height: 1;
+`;
+const StatusList = styled('ul')`
+  list-style: none;
+  padding: 0;
+`;
+const StatusItem = styled('li')`
+  margin-bottom: 15px;
+  line-height: 1.5;
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index d7e85e1a26..16faa0c0a3 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -1,332 +1,376 @@
+import {withRouter, Link} from 'react-router';
+import $ from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
+import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
-import $ from 'jquery';
+import styled, {css, cx} from 'react-emotion';
 
-import ApiMixin from 'app/mixins/apiMixin';
-import OrganizationState from 'app/mixins/organizationState';
+import {hideSidebar, loadSidebarState, showSidebar} from 'app/actionCreators/sidebar';
 import {load as loadIncidents} from 'app/actionCreators/incidents';
-
-import Broadcasts from 'app/components/sidebar/broadcasts';
-import Incidents from 'app/components/sidebar/incidents';
-import UserNav from 'app/components/sidebar/userNav';
-import OrganizationSelector from 'app/components/sidebar/organizationSelector';
-import SidebarPanel from 'app/components/sidebarPanel';
-import TodoList from 'app/components/onboardingWizard/todos';
-import IssueList from 'app/components/issueList';
-import ConfigStore from 'app/stores/configStore';
-
 import {t} from 'app/locale';
-
-class OnboardingStatus extends React.Component {
+import ConfigStore from 'app/stores/configStore';
+import InlineSvg from 'app/components/inlineSvg';
+import SentryTypes from 'app/proptypes';
+import SidebarStore from 'app/stores/sidebarStore';
+import theme from 'app/utils/theme';
+import space from 'app/styles/space';
+import withLatestContext from 'app/utils/withLatestContext';
+
+import Broadcasts from './broadcasts';
+import Incidents from './incidents';
+import SidebarDropdown from './sidebarDropdown';
+import SidebarItem from './sidebarItem';
+import OnboardingStatus from './onboardingStatus';
+
+class Sidebar extends React.Component {
   static propTypes = {
-    org: PropTypes.object.isRequired,
-    currentPanel: PropTypes.string,
-    onShowPanel: PropTypes.func,
-    showPanel: PropTypes.bool,
-    hidePanel: PropTypes.func,
+    router: PropTypes.object,
+    organization: SentryTypes.Organization,
+    collapsed: PropTypes.bool,
+    location: PropTypes.object,
   };
 
-  render() {
-    let org = this.props.org;
-    if (org.features.indexOf('onboarding') === -1) return null;
-
-    let doneTasks = (org.onboardingTasks || []).filter(
-      task => task.status === 'complete' || task.status === 'skipped'
-    );
-
-    let percentage = Math.round(
-      doneTasks.length / TodoList.TASKS.length * 100
-    ).toString();
-
-    let style = {
-      height: percentage + '%',
+  constructor(props) {
+    super(props);
+    this.state = {
+      horizontal: false,
     };
 
-    if (doneTasks.length >= TodoList.TASKS.filter(task => task.display).length) {
-      return null;
-    }
-
-    return (
-      <li
-        className={
-          this.props.currentPanel == 'todos' ? 'onboarding active' : 'onboarding'
-        }
-      >
-        <div className="onboarding-progress-bar" onClick={this.props.onShowPanel}>
-          <div className="slider" style={style} />
-        </div>
-        {this.props.showPanel &&
-          this.props.currentPanel == 'todos' && (
-            <SidebarPanel
-              title="Getting Started with Sentry"
-              hidePanel={this.props.hidePanel}
-            >
-              <TodoList />
-            </SidebarPanel>
-          )}
-      </li>
-    );
+    if (!window.matchMedia) return;
+    // TODO(billy): We should consider moving this into a component
+    this.mq = window.matchMedia(`(max-width: ${theme.breakpoints[0]})`);
+    this.mq.addListener(this.handleMediaQueryChange);
+    this.state.horizontal = this.mq.matches;
   }
-}
-
-const Sidebar = createReactClass({
-  displayName: 'Sidebar',
-
-  contextTypes: {
-    location: PropTypes.object,
-  },
-
-  mixins: [ApiMixin, OrganizationState],
-
-  getInitialState: function() {
-    return {
-      showTodos: location.hash === '#welcome',
-    };
-  },
 
   componentDidMount() {
-    $(window).on('hashchange', this.hashChangeHandler);
-    $(document).on('click', this.documentClickHandler);
+    jQuery(document.body).addClass('body-sidebar');
+    jQuery(document).on('click', this.documentClickHandler);
 
     loadIncidents();
-  },
+    loadSidebarState();
 
-  componentWillReceiveProps(nextProps, nextContext) {
-    let {location} = this.context;
-    let nextLocation = nextContext.location;
+    // Otherwise when we change routes using collapsed sidebar, the tooltips will remain after
+    // route changes.
+    this.routerListener = this.props.router.listen(() => {
+      $('.tooltip').tooltip('hide');
+    });
+  }
+
+  componentWillReceiveProps(nextProps) {
+    let {collapsed, location} = this.props;
+    let nextLocation = nextProps.location;
 
     // Close active panel if we navigated anywhere
-    if (location.pathname != nextLocation.pathname) {
+    if (nextLocation && location && location.pathname !== nextLocation.pathname) {
       this.hidePanel();
     }
-  },
+
+    if (collapsed === nextProps.collapsed) return;
+
+    if (nextProps.collapsed) {
+      jQuery(document.body).addClass('collapsed');
+    } else {
+      jQuery(document.body).removeClass('collapsed');
+    }
+  }
 
   componentWillUnmount() {
-    $(window).off('hashchange', this.hashChangeHandler);
-    $(document).off('click', this.documentClickHandler);
-  },
-
-  documentClickHandler(evt) {
-    // If click occurs outside of sidebar, close any
-    // active panel
-    if (!this.refs.navbar.contains(evt.target)) {
-      this.hidePanel();
+    jQuery(document).off('click', this.documentClickHandler);
+    jQuery(document.body).removeClass('body-sidebar');
+
+    if (this.mq) {
+      this.mq.removeListener(this.handleMediaQueryChange);
+      this.mq = null;
+    }
+
+    // Unlisten to router changes
+    if (this.routerListener) {
+      this.routerListener();
+    }
+  }
+
+  toggleSidebar = () => {
+    let {collapsed} = this.props;
+
+    if (!collapsed) {
+      hideSidebar();
+    } else {
+      showSidebar();
     }
-  },
+  };
 
-  hashChangeHandler() {
-    if (location.hash == '#welcome') {
+  hashChangeHandler = () => {
+    if (window.location.hash == '#welcome') {
       this.setState({showTodos: true});
     }
-  },
+  };
 
-  toggleTodos(e) {
-    this.setState({showTodos: !this.state.showTodos});
-  },
+  handleMediaQueryChange = changed => {
+    this.setState({
+      horizontal: changed.matches,
+    });
+  };
+
+  // Hide slideout panel
+  hidePanel = () => {
+    if (!this.state.sidePanel && this.state.currentPanel === '') return;
 
-  hidePanel() {
     this.setState({
       showPanel: false,
       currentPanel: '',
     });
-  },
+  };
 
-  showPanel(panel) {
+  // Show slideout panel
+  showPanel = panel => {
     this.setState({
       showPanel: true,
       currentPanel: panel,
     });
-  },
+  };
 
-  togglePanel(panel) {
+  togglePanel = (panel, e) => {
     if (this.state.currentPanel === panel) this.hidePanel();
     else this.showPanel(panel);
-  },
+  };
+
+  documentClickHandler = evt => {
+    // If click occurs outside of sidebar, close any active panel
+    if (this.sidebar && !this.sidebar.contains(evt.target)) {
+      this.hidePanel();
+    }
+  };
 
-  renderBody() {
-    let org = this.getOrganization();
+  render() {
+    let {organization, collapsed} = this.props;
+    let {currentPanel, showPanel, horizontal} = this.state;
     let config = ConfigStore.getConfig();
+    let user = ConfigStore.get('user');
+    let hasPanel = !!currentPanel;
+    let orientation = horizontal ? 'top' : 'left';
+    let sidebarItemProps = {
+      orientation,
+      collapsed,
+      hasPanel,
+    };
 
-    if (!org) {
-      // When no organization, just render Sentry logo at top
+    if (!organization) {
       return (
-        <ul className="navbar-nav">
-          <li>
-            <a className="logo" href="/">
-              <span className="icon-sentry-logo" />
-            </a>
-          </li>
-        </ul>
+        <StyledSidebar innerRef={ref => (this.sidebar = ref)} collapsed>
+          <SidebarSectionGroup>
+            <SidebarSection>
+              <Link to="/">
+                <InlineSvg css={{fontSize: 32}} src="icon-sentry" />
+              </Link>
+            </SidebarSection>
+          </SidebarSectionGroup>
+        </StyledSidebar>
       );
     }
 
     return (
-      <div>
-        <OrganizationSelector
-          organization={org}
-          showPanel={this.state.showPanel}
-          currentPanel={this.state.currentPanel}
-          togglePanel={() => this.togglePanel('org-selector')}
-          hidePanel={() => this.hidePanel()}
-        />
-
-        {/* Top nav links */}
-        <ul className="navbar-nav divider-bottom">
-          <li className={this.state.currentPanel == 'assigned' ? 'active' : null}>
-            <a title="Assigned to me">
-              <span
-                className="icon icon-user"
-                onClick={() => this.togglePanel('assigned')}
-              />
-            </a>
-          </li>
-          <li className={this.state.currentPanel == 'bookmarks' ? 'active' : null}>
-            <a title="My Bookmarks">
-              <span
-                className="icon icon-star-solid"
-                onClick={() => this.togglePanel('bookmarks')}
-              />
-            </a>
-          </li>
-          <li className={this.state.currentPanel == 'history' ? 'active' : null}>
-            <a title="Recently Viewed">
-              <span
-                className="icon icon-av_timer"
-                onClick={() => this.togglePanel('history')}
-              />
-            </a>
-          </li>
-        </ul>
-        <ul className="navbar-nav">
-          <Broadcasts
-            showPanel={this.state.showPanel}
-            currentPanel={this.state.currentPanel}
-            onShowPanel={() => this.togglePanel('broadcasts')}
-            hidePanel={() => this.hidePanel()}
-          />
-          <Incidents
-            showPanel={this.state.showPanel}
-            currentPanel={this.state.currentPanel}
-            onShowPanel={() => this.togglePanel('statusupdate')}
-            hidePanel={() => this.hidePanel()}
-          />
-          <li>
-            <a
-              title="Support"
-              href={
-                !config.isOnPremise
-                  ? `/organizations/${org.slug}/support/`
-                  : 'https://forum.sentry.io/'
-              }
-            >
-              <span className="icon icon-support" />
-            </a>
-          </li>
-        </ul>
-
-        {/* Panel bodies */}
-        {this.state.showPanel &&
-          this.state.currentPanel == 'assigned' && (
-            <SidebarPanel title={t('Assigned to me')} hidePanel={() => this.hidePanel()}>
-              <IssueList
-                endpoint={`/organizations/${org.slug}/members/me/issues/assigned/`}
-                query={{
-                  statsPeriod: '24h',
-                  per_page: 10,
-                  status: 'unresolved',
-                }}
-                pagination={false}
-                renderEmpty={() => (
-                  <div className="sidebar-panel-empty" key="none">
-                    {t('No issues have been assigned to you.')}
-                  </div>
-                )}
-                ref="issueList"
-                showActions={false}
-                params={{orgId: org.slug}}
-              />
-            </SidebarPanel>
-          )}
-        {this.state.showPanel &&
-          this.state.currentPanel == 'bookmarks' && (
-            <SidebarPanel title={t('My Bookmarks')} hidePanel={() => this.hidePanel()}>
-              <IssueList
-                endpoint={`/organizations/${org.slug}/members/me/issues/bookmarked/`}
-                query={{
-                  statsPeriod: '24h',
-                  per_page: 10,
-                  status: 'unresolved',
-                }}
-                pagination={false}
-                renderEmpty={() => (
-                  <div className="sidebar-panel-empty" key="no">
-                    {t('You have no bookmarked issues.')}
-                  </div>
-                )}
-                ref="issueList"
-                showActions={false}
-                params={{orgId: org.slug}}
-                noBorder
+      <StyledSidebar innerRef={ref => (this.sidebar = ref)} collapsed={collapsed}>
+        <SidebarSectionGroup>
+          <SidebarSection>
+            <SidebarDropdown
+              onClick={this.hidePanel}
+              orientation={orientation}
+              collapsed={collapsed}
+              org={organization}
+              user={user}
+              config={config}
+            />
+          </SidebarSection>
+
+          <SidebarSection>
+            <SidebarItem
+              {...sidebarItemProps}
+              index
+              onClick={this.hidePanel}
+              icon={<InlineSvg src="icon-projects" />}
+              label={t('Projects')}
+              to={`/${organization.slug}/`}
+            />
+          </SidebarSection>
+
+          <SidebarSection>
+            <SidebarItem
+              {...sidebarItemProps}
+              onClick={this.hidePanel}
+              icon={<InlineSvg src="icon-user" />}
+              label={t('Assigned to me')}
+              to={`/organizations/${organization.slug}/issues/assigned/`}
+            />
+            <SidebarItem
+              {...sidebarItemProps}
+              onClick={this.hidePanel}
+              icon={<InlineSvg src="icon-star" />}
+              label={t('Starred issues')}
+              to={`/organizations/${organization.slug}/issues/bookmarks/`}
+            />
+            <SidebarItem
+              {...sidebarItemProps}
+              onClick={this.hidePanel}
+              icon={<InlineSvg src="icon-history" />}
+              label={t('Recently viewed')}
+              to={`/organizations/${organization.slug}/issues/history/`}
+            />
+          </SidebarSection>
+
+          <SidebarSection>
+            <SidebarItem
+              {...sidebarItemProps}
+              onClick={this.hidePanel}
+              icon={<InlineSvg src="icon-activity" />}
+              label={t('Activity')}
+              to={`/organizations/${organization.slug}/activity/`}
+            />
+            <SidebarItem
+              {...sidebarItemProps}
+              onClick={this.hidePanel}
+              icon={<InlineSvg src="icon-stats" />}
+              label={t('Stats')}
+              to={`/organizations/${organization.slug}/stats/`}
+            />
+          </SidebarSection>
+        </SidebarSectionGroup>
+
+        <SidebarSectionGroup>
+          <SidebarSection>
+            <Broadcasts
+              orientation={orientation}
+              collapsed={collapsed}
+              showPanel={showPanel}
+              currentPanel={currentPanel}
+              onShowPanel={() => this.togglePanel('broadcasts')}
+              hidePanel={this.hidePanel}
+            />
+            <Incidents
+              orientation={orientation}
+              collapsed={collapsed}
+              showPanel={showPanel}
+              currentPanel={currentPanel}
+              onShowPanel={() => this.togglePanel('statusupdate')}
+              hidePanel={this.hidePanel}
+            />
+          </SidebarSection>
+
+          {!horizontal && (
+            <SidebarSection noMargin>
+              <OnboardingStatus
+                org={organization}
+                currentPanel={currentPanel}
+                onShowPanel={() => this.togglePanel('todos')}
+                showPanel={showPanel}
+                hidePanel={this.hidePanel}
+                collapsed={collapsed}
               />
-            </SidebarPanel>
+            </SidebarSection>
           )}
-        {this.state.showPanel &&
-          this.state.currentPanel == 'history' && (
-            <SidebarPanel title={t('Recently Viewed')} hidePanel={() => this.hidePanel()}>
-              <IssueList
-                endpoint={`/organizations/${org.slug}/members/me/issues/viewed/`}
-                query={{
-                  statsPeriod: '24h',
-                  per_page: 10,
-                  status: 'unresolved',
-                }}
-                pagination={false}
-                renderEmpty={() => (
-                  <div className="sidebar-panel-empty" key="none">
-                    {t('No recently viewed issues.')}
-                  </div>
-                )}
-                ref="issueList"
-                showActions={false}
-                params={{orgId: org.slug}}
-                noBorder
+
+          {!horizontal && (
+            <SidebarSection>
+              <SidebarCollapseItem
+                data-test-id="sidebar-collapse"
+                {...sidebarItemProps}
+                icon={<StyledInlineSvg src="icon-collapse" collapsed={collapsed} />}
+                label={t('Collapse')}
+                onClick={this.toggleSidebar}
               />
-            </SidebarPanel>
+            </SidebarSection>
           )}
-      </div>
+        </SidebarSectionGroup>
+      </StyledSidebar>
     );
-  },
+  }
+}
 
-  render() {
-    let org = this.getOrganization();
+const SidebarContainer = withRouter(
+  createReactClass({
+    displayName: 'SidebarContainer',
+    mixins: [Reflux.connect(SidebarStore, 'sidebar')],
 
-    // NOTE: this.props.orgId not guaranteed to be specified
-    return (
-      <nav className="navbar" role="navigation" ref="navbar">
-        <div className="anchor-top">{this.renderBody()}</div>
+    render() {
+      return (
+        <Sidebar
+          {...this.props}
+          collapsed={this.state.sidebar && this.state.sidebar.collapsed}
+        />
+      );
+    },
+  })
+);
 
-        {/* Bottom nav links */}
-        <div className="anchor-bottom">
-          <ul className="navbar-nav">
-            {org && (
-              <OnboardingStatus
-                org={org}
-                showPanel={this.state.showPanel}
-                currentPanel={this.state.currentPanel}
-                onShowPanel={() => this.togglePanel('todos')}
-                hidePanel={() => this.hidePanel()}
-              />
-            )}
-
-            <li>
-              <UserNav className="user-settings" />
-            </li>
-          </ul>
-        </div>
-      </nav>
-    );
-  },
-});
+export {Sidebar};
+export default withLatestContext(SidebarContainer);
+
+const responsiveFlex = css`
+  display: flex;
+  flex-direction: column;
+
+  @media (max-width: ${theme.breakpoints[0]}) {
+    flex-direction: row;
+  }
+`;
+
+const StyledSidebar = styled('div')`
+  background: ${p => p.theme.sidebar.background};
+  background: linear-gradient(${p => p.theme.gray4}, ${p => p.theme.gray5});
+  color: ${p => p.theme.sidebar.color};
+  line-height: 1;
+  padding: 12px 19px 2px; /* Allows for 32px avatars  */
+  width: ${p => p.theme.sidebar.expandedWidth};
+  position: fixed;
+  top: 0;
+  left: 0;
+  bottom: 0;
+  justify-content: space-between;
+  z-index: ${p => p.theme.zIndex.sidebar};
+  ${responsiveFlex};
+  ${p => p.collapsed && `width: ${p.theme.sidebar.collapsedWidth};`};
+
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    top: 0;
+    left: 0;
+    right: 0;
+    height: ${p => p.theme.sidebar.mobileHeight};
+    bottom: auto;
+    width: auto;
+    padding: 0;
+    align-items: center;
+  }
+`;
+
+const SidebarSectionGroup = styled('div')`
+  ${responsiveFlex};
+  flex-shrink: 0;
+`;
 
-export default Sidebar;
+const SidebarSection = styled(SidebarSectionGroup)`
+  ${p => !p.noMargin && `margin: ${space(1)} 0`};
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    margin: 0 ${space(1)};
+  }
+`;
+
+const ExpandedIcon = css`
+  transition: 0.3s transform ease;
+  transform: rotate(0deg);
+`;
+const CollapsedIcon = css`
+  transform: rotate(180deg);
+`;
+const StyledInlineSvg = styled(({className, collapsed, ...props}) => (
+  <InlineSvg
+    className={cx(className, ExpandedIcon, collapsed && CollapsedIcon)}
+    {...props}
+  />
+))``;
+
+const SidebarCollapseItem = styled(SidebarItem)`
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
new file mode 100644
index 0000000000..a7b23a2ae0
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
@@ -0,0 +1,72 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {t} from '../../locale';
+import SidebarPanel from './sidebarPanel';
+import TodoList from '../onboardingWizard/todos';
+import Tooltip from '../tooltip';
+
+class OnboardingStatus extends React.Component {
+  static propTypes = {
+    org: PropTypes.object.isRequired,
+    currentPanel: PropTypes.string,
+    onShowPanel: PropTypes.func,
+    showPanel: PropTypes.bool,
+    hidePanel: PropTypes.func,
+    collapsed: PropTypes.bool,
+  };
+
+  render() {
+    let {collapsed, org, currentPanel, hidePanel, showPanel, onShowPanel} = this.props;
+    if (org.features && org.features.indexOf('onboarding') === -1) return null;
+
+    let doneTasks = (org.onboardingTasks || []).filter(
+      task => task.status === 'complete' || task.status === 'skipped'
+    );
+
+    let percentage = Math.round(
+      doneTasks.length / TodoList.TASKS.length * 100
+    ).toString();
+
+    let style = {
+      height: collapsed ? percentage + '%' : undefined,
+      width: collapsed ? undefined : percentage + '%',
+    };
+
+    if (doneTasks.length >= TodoList.TASKS.filter(task => task.display).length) {
+      return null;
+    }
+
+    return (
+      <div className={currentPanel === 'todos' ? 'onboarding active' : 'onboarding'}>
+        <Tooltip
+          title={t(
+            `Getting started with Sentry: <br />${doneTasks.length} / ${TodoList.TASKS
+              .length} tasks completed`
+          )}
+          tooltipOptions={{html: true}}
+        >
+          <div
+            data-test-id="onboarding-progress-bar"
+            className="onboarding-progress-bar"
+            onClick={onShowPanel}
+          >
+            <div className="slider" style={style} />
+          </div>
+        </Tooltip>
+        {showPanel &&
+          currentPanel === 'todos' && (
+            <SidebarPanel
+              collapsed={collapsed}
+              title="Getting Started with Sentry"
+              hidePanel={hidePanel}
+            >
+              <TodoList />
+            </SidebarPanel>
+          )}
+      </div>
+    );
+  }
+}
+
+export default OnboardingStatus;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/divider.styled.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/divider.styled.jsx
new file mode 100644
index 0000000000..97633f487a
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/divider.styled.jsx
@@ -0,0 +1,8 @@
+import styled from 'react-emotion';
+
+const Divider = styled('div')`
+  height: 0;
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  margin: 5px 0;
+`;
+export default Divider;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
new file mode 100644
index 0000000000..1930e5f722
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
@@ -0,0 +1,197 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {t} from 'app/locale';
+import Avatar from 'app/components/avatar';
+import DropdownMenu from 'app/components/dropdownMenu';
+import Hook from 'app/components/hook';
+import SentryTypes from 'app/proptypes';
+import TextOverflow from 'app/components/textOverflow';
+import UserBadge from 'app/components/userBadge';
+
+import SwitchOrganization from './switchOrganization';
+import SidebarOrgSummary from './sidebarOrgSummary';
+import SidebarMenuItem from './sidebarMenuItem';
+import Divider from './divider.styled';
+import SidebarDropdownMenu from './sidebarDropdownMenu.styled';
+
+class SidebarDropdown extends React.Component {
+  static propTypes = {
+    orientation: PropTypes.oneOf(['top', 'left']),
+    collapsed: PropTypes.bool,
+    org: SentryTypes.Organization,
+    user: SentryTypes.User,
+    config: SentryTypes.Config,
+    onClick: PropTypes.func,
+  };
+
+  static defaultProps = {
+    onClick: () => {},
+  };
+
+  render() {
+    let {org, orientation, collapsed, config, user, onClick} = this.props;
+    let hasOrgWrite = org.access.indexOf('org:write') > -1;
+    let hasMemberRead = org.access.indexOf('member:read') > -1;
+
+    return (
+      <DropdownMenu>
+        {({isOpen, getRootProps, getActorProps, getMenuProps}) => {
+          return (
+            <SidebarDropdownRoot {...getRootProps({isStyled: true})}>
+              <SidebarDropdownActor
+                data-test-id="sidebar-dropdown"
+                {...getActorProps({isStyled: true})}
+              >
+                <div style={{display: 'flex', alignItems: 'flex-start'}}>
+                  <StyledAvatar
+                    onClick={onClick}
+                    collapsed={collapsed}
+                    organization={org}
+                    size={32}
+                  />
+                  {!collapsed &&
+                    orientation !== 'top' && (
+                      <NameAndOrgWrapper>
+                        <DropdownOrgName>
+                          {org.name} <i className="icon-arrow-down" />
+                        </DropdownOrgName>
+                        <DropdownUserName>{user.name}</DropdownUserName>
+                      </NameAndOrgWrapper>
+                    )}
+                </div>
+              </SidebarDropdownActor>
+
+              {isOpen && (
+                <OrgAndUserMenu {...getMenuProps({isStyled: true, org})}>
+                  <SidebarOrgSummary organization={org} />
+                  {hasOrgWrite && (
+                    <SidebarMenuItem to={`/settings/${org.slug}/`}>
+                      {t('Organization settings')}
+                    </SidebarMenuItem>
+                  )}
+                  {hasMemberRead && (
+                    <SidebarMenuItem to={`/settings/${org.slug}/members/`}>
+                      {t('Members')}
+                    </SidebarMenuItem>
+                  )}
+
+                  <Hook
+                    name="sidebar:organization-dropdown-menu"
+                    organization={org}
+                    Components={{SidebarMenuItem}}
+                  />
+
+                  {config.isOnPremise && (
+                    <SidebarMenuItem href="https://forum.sentry.io/">
+                      {t('Support forum')}
+                    </SidebarMenuItem>
+                  )}
+
+                  <SidebarMenuItem>
+                    <SwitchOrganization canCreateOrganization={hasOrgWrite} />
+                  </SidebarMenuItem>
+
+                  <Divider />
+
+                  <SidebarUserSummary user={user} />
+
+                  <div>
+                    <SidebarMenuItem to="/settings/account/">
+                      {t('User settings')}
+                    </SidebarMenuItem>
+                    <SidebarMenuItem to={'/settings/account/api/'}>
+                      {t('API keys')}
+                    </SidebarMenuItem>
+                    {user.isSuperuser && (
+                      <SidebarMenuItem to={'/manage/'}>{t('Admin')}</SidebarMenuItem>
+                    )}
+                    <SidebarMenuItem href="/auth/logout/">
+                      {t('Sign out')}
+                    </SidebarMenuItem>
+                  </div>
+                </OrgAndUserMenu>
+              )}
+            </SidebarDropdownRoot>
+          );
+        }}
+      </DropdownMenu>
+    );
+  }
+}
+
+export default SidebarDropdown;
+
+class SidebarUserSummary extends React.Component {
+  static propTypes = {
+    user: SentryTypes.User,
+  };
+
+  render() {
+    let {user} = this.props;
+
+    return (
+      <UserSummary>
+        <UserBadgeNoOverflow user={user} avatarSize={24} />
+      </UserSummary>
+    );
+  }
+}
+const UserSummary = styled('div')`
+  display: flex;
+  padding: 10px 15px;
+`;
+
+const UserBadgeNoOverflow = styled(UserBadge)`
+  overflow: hidden;
+`;
+
+const SidebarDropdownRoot = styled('div')`
+  position: relative;
+`;
+
+// So that long org names and user names do not overflow
+const NameAndOrgWrapper = styled('div')`
+  overflow: hidden;
+`;
+const DropdownOrgName = styled(TextOverflow)`
+  font-size: 16px;
+  font-weight: bold;
+  color: ${p => p.theme.white};
+  text-shadow: 0 0 6px rgba(255, 255, 255, 0);
+  transition: 0.15s text-shadow linear;
+`;
+
+const DropdownUserName = styled(TextOverflow)`
+  font-size: 14px;
+  line-height: 16px;
+  transition: 0.15s color linear;
+`;
+
+const SidebarDropdownActor = styled('div')`
+  cursor: pointer;
+
+  &:hover {
+    /* stylelint-disable-next-line no-duplicate-selectors */
+    ${DropdownOrgName} {
+      text-shadow: 0 0 6px rgba(255, 255, 255, 0.1);
+    }
+    /* stylelint-disable-next-line no-duplicate-selectors */
+    ${DropdownUserName} {
+      color: ${p => p.theme.gray3};
+    }
+  }
+`;
+
+const StyledAvatar = styled(Avatar)`
+  margin-top: 1px;
+  margin-bottom: 1px;
+  margin-right: ${p => (p.collapsed ? '0' : '12px')};
+`;
+
+const OrgAndUserMenu = styled('div')`
+  ${SidebarDropdownMenu};
+  top: 42px;
+  min-width: 180px;
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarDropdownMenu.styled.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarDropdownMenu.styled.jsx
new file mode 100644
index 0000000000..a57dc6feff
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarDropdownMenu.styled.jsx
@@ -0,0 +1,14 @@
+import {css} from 'react-emotion';
+
+const SidebarDropdownMenu = p => css`
+  position: absolute;
+  background: ${p.theme.white};
+  color: ${p.theme.gray5};
+  border-radius: 4px;
+  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.08), 0 4px 20px 0 rgba(0, 0, 0, 0.3);
+  padding: 5px 0;
+  width: 250px;
+  z-index: 1000;
+`;
+
+export default SidebarDropdownMenu;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarMenuItem.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarMenuItem.jsx
new file mode 100644
index 0000000000..0193db9def
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarMenuItem.jsx
@@ -0,0 +1,68 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled, {css} from 'react-emotion';
+
+import Link from 'app/components/link';
+
+import {OrgSummary} from './sidebarOrgSummary';
+
+class SidebarMenuItem extends React.Component {
+  static propTypes = {
+    to: PropTypes.string,
+    href: PropTypes.string,
+  };
+  render() {
+    let {children, to, href, ...props} = this.props;
+    let hasMenu = !to && !href;
+
+    return (
+      <MenuItemLink to={to} href={href} {...props}>
+        <MenuItemLabel hasMenu={hasMenu}>{children}</MenuItemLabel>
+      </MenuItemLink>
+    );
+  }
+}
+export default SidebarMenuItem;
+
+const MenuItemLabel = styled('span')`
+  flex: 1;
+  ${p =>
+    p.hasMenu
+      ? css`
+          margin: 0 -15px;
+          padding: 0 15px;
+        `
+      : css`
+          overflow: hidden;
+        `};
+`;
+
+const MenuItemLink = styled(({to, href, ...props}) => {
+  if (to || href) {
+    return <Link to={to} href={href} {...props} />;
+  }
+
+  return <div {...props} />;
+})`
+  color: ${p => p.theme.gray5};
+  cursor: pointer;
+  display: flex;
+  font-size: 14px;
+  line-height: 32px;
+  padding: 0 ${p => p.theme.sidebar.menuSpacing};
+  position: relative;
+  transition: 0.1s all linear;
+  ${p => (!!p.to || !!p.href) && 'overflow: hidden'};
+
+  &:hover,
+  &:active {
+    background: ${p => p.theme.offWhite};
+    color: ${p => p.theme.gray5};
+  }
+
+  /* stylelint-disable-next-line no-duplicate-selectors */
+  ${OrgSummary} {
+    padding-left: 0;
+    padding-right: 0;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarOrgSummary.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarOrgSummary.jsx
new file mode 100644
index 0000000000..76ce9647b0
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/sidebarOrgSummary.jsx
@@ -0,0 +1,66 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+import Avatar from 'app/components/avatar';
+import SentryTypes from 'app/proptypes';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+
+class SidebarOrgSummary extends React.Component {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+  };
+
+  render() {
+    let {organization} = this.props;
+    let projects = organization.projects && organization.projects.length;
+    let extra = [];
+
+    if (projects) {
+      extra.push(`${projects} projects`);
+    }
+
+    return (
+      <OrgSummary>
+        <Avatar css={{flexShrink: 0}} organization={organization} size={36} />
+
+        <Details>
+          <SummaryOrgName>{organization.name}</SummaryOrgName>
+          {!!extra.length && <SummaryOrgDetails>{extra.join(', ')}</SummaryOrgDetails>}
+        </Details>
+      </OrgSummary>
+    );
+  }
+}
+
+export default SidebarOrgSummary;
+
+const OrgSummary = styled('div')`
+  display: flex;
+  padding: 10px 15px;
+  overflow: hidden;
+`;
+const SummaryOrgName = styled('div')`
+  color: ${p => p.theme.gray5};
+  font-size: 16px;
+  line-height: 1.1;
+  font-weight: bold;
+  margin-bottom: 4px;
+  ${overflowEllipsis};
+`;
+const SummaryOrgDetails = styled('div')`
+  color: ${p => p.theme.gray3};
+  font-size: 14px;
+  line-height: 1;
+  ${overflowEllipsis};
+`;
+const Details = styled('div')`
+  display: flex;
+  flex-direction: column;
+  justify-content: center;
+
+  padding-left: 10px;
+  overflow: hidden;
+`;
+
+// Needed for styling in SidebarMenuItem
+export {OrgSummary};
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
new file mode 100644
index 0000000000..8b602fb93b
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
@@ -0,0 +1,120 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {t} from 'app/locale';
+import DropdownMenu from 'app/components/dropdownMenu';
+import InlineSvg from 'app/components/inlineSvg';
+import SentryTypes from 'app/proptypes';
+import withOrganizations from 'app/utils/withOrganizations';
+
+import SidebarOrgSummary from './sidebarOrgSummary';
+import SidebarMenuItem from './sidebarMenuItem';
+import Divider from './divider.styled';
+import SidebarDropdownMenu from './sidebarDropdownMenu.styled';
+
+/**
+ * Switch Organization Menu Label + Sub Menu
+ */
+class SwitchOrganization extends React.Component {
+  static propTypes = {
+    organizations: PropTypes.arrayOf(SentryTypes.Organization),
+    canCreateOrganization: PropTypes.bool,
+  };
+
+  render() {
+    let {organizations, canCreateOrganization} = this.props;
+    let hasOrganizations = organizations && !!organizations.length;
+
+    return (
+      <DropdownMenu isNestedDropdown>
+        {({isOpen, getMenuProps, getActorProps}) => {
+          return (
+            <React.Fragment>
+              <SwitchOrganizationMenuActor
+                data-test-id="sidebar-switch-org"
+                {...getActorProps()}
+              >
+                {t('Switch organization')}
+
+                <SubMenuCaret>
+                  <i className="icon-arrow-right" />
+                </SubMenuCaret>
+              </SwitchOrganizationMenuActor>
+
+              {isOpen && (
+                <SwitchOrganizationMenu
+                  data-test-id="sidebar-switch-org-menu"
+                  {...getMenuProps({isStyled: true})}
+                >
+                  {organizations.map(organization => (
+                    <SidebarMenuItem
+                      key={organization.slug}
+                      to={`/${organization.slug}/`}
+                    >
+                      <SidebarOrgSummary organization={organization} />
+                    </SidebarMenuItem>
+                  ))}
+                  {hasOrganizations && canCreateOrganization && <Divider />}
+                  {canCreateOrganization && (
+                    <SidebarMenuItem
+                      to={'/organizations/new/'}
+                      style={{alignItems: 'center'}}
+                    >
+                      <MenuItemLabelWithIcon>
+                        <AddIcon src="icon-circle-add" />
+                        <span>{t('Create a new organization')}</span>
+                      </MenuItemLabelWithIcon>
+                    </SidebarMenuItem>
+                  )}
+                </SwitchOrganizationMenu>
+              )}
+            </React.Fragment>
+          );
+        }}
+      </DropdownMenu>
+    );
+  }
+}
+const SwitchOrganizationContainer = withOrganizations(SwitchOrganization);
+
+export default SwitchOrganizationContainer;
+
+const AddIcon = styled(InlineSvg)`
+  width: 15px;
+  height: 15px;
+  margin-right: 8px;
+  color: ${p => p.theme.gray2};
+`;
+
+const MenuItemLabelWithIcon = styled('span')`
+  line-height: 1;
+  display: flex;
+  align-items: center;
+  padding: 8px 0;
+`;
+
+const SubMenuCaret = styled('span')`
+  color: ${p => p.theme.gray2};
+  transition: 0.1s color linear;
+
+  &:hover,
+  &:active {
+    color: ${p => p.theme.gray3};
+  }
+`;
+
+// Menu Item in dropdown to "Switch organization"
+const SwitchOrganizationMenuActor = styled('span')`
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+  margin: 0 -${p => p.theme.sidebar.menuSpacing};
+  padding: 0 ${p => p.theme.sidebar.menuSpacing};
+`;
+
+const SwitchOrganizationMenu = styled('div')`
+  ${SidebarDropdownMenu};
+  top: 0;
+  left: 256px;
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx
new file mode 100644
index 0000000000..d335cc7684
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx
@@ -0,0 +1,230 @@
+import {withRouter} from 'react-router';
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled, {css} from 'react-emotion';
+
+import Link from '../link';
+import TextOverflow from '../textOverflow';
+import Tooltip from '../tooltip';
+
+class SidebarItem extends React.Component {
+  static propTypes = {
+    ...Link.propTypes,
+    router: PropTypes.object,
+    href: PropTypes.string,
+    id: PropTypes.string,
+    to: PropTypes.string,
+    onClick: PropTypes.func,
+
+    // Is sidebar item active
+    active: PropTypes.bool,
+
+    // Is sidebar in a collapsed state
+    collapsed: PropTypes.bool,
+
+    // Sidebar has a panel open
+    hasPanel: PropTypes.bool,
+
+    // Icon to display
+    icon: PropTypes.node,
+
+    // Label to display (only when expanded)
+    label: PropTypes.node,
+
+    // Additional badge to display after label
+    badge: PropTypes.number,
+
+    // Sidebar is at "top" or "left" of screen
+    orientation: PropTypes.oneOf(['top', 'left']),
+  };
+
+  handleClick = e => {
+    let {id, onClick} = this.props;
+
+    if (typeof onClick !== 'function') return;
+
+    onClick(id, e);
+  };
+
+  render() {
+    let {
+      router,
+      href,
+      index,
+      to,
+      icon,
+      label,
+      badge,
+      active,
+      hasPanel,
+      collapsed,
+      className,
+      orientation,
+    } = this.props;
+
+    // If there is no active panel open and if path is active according to react-router
+    let isActiveRouter =
+      !hasPanel &&
+      router &&
+      to &&
+      router.isActive(
+        {
+          pathname: to,
+        },
+        index
+      );
+    let isTop = orientation === 'top';
+    let placement = isTop ? 'bottom' : 'right';
+
+    return (
+      <Tooltip
+        disabled={!collapsed}
+        title={label}
+        tooltipOptions={{placement, html: true}}
+      >
+        <StyledSidebarItem
+          data-test-id={this.props['data-test-id']}
+          active={active || isActiveRouter}
+          href={href}
+          to={to}
+          className={className}
+          onClick={this.handleClick}
+        >
+          <SidebarItemWrapper>
+            <SidebarItemIcon>{icon}</SidebarItemIcon>
+            {!collapsed &&
+              !isTop && (
+                <SidebarItemLabel>
+                  <TextOverflow>{label}</TextOverflow>
+                </SidebarItemLabel>
+              )}
+            {badge > 0 && (
+              <SidebarItemBadge collapsed={collapsed}>{badge}</SidebarItemBadge>
+            )}
+          </SidebarItemWrapper>
+        </StyledSidebarItem>
+      </Tooltip>
+    );
+  }
+}
+
+export default withRouter(SidebarItem);
+
+const getActiveStyle = ({active, theme}) => {
+  if (!active) return '';
+  return css`
+    color: ${theme.white};
+
+    &:focus {
+      color: ${theme.white};
+    }
+
+    &:before {
+      background-color: ${theme.purple};
+    }
+  `;
+};
+
+const StyledSidebarItem = styled(({active, ...props}) => <Link {...props} />)`
+  display: flex;
+  color: inherit;
+  position: relative;
+  cursor: pointer;
+  font-size: 15px;
+  line-height: 32px;
+  height: 34px;
+  flex-shrink: 0;
+
+  transition: 0.15s color linear;
+
+  &:before {
+    display: block;
+    content: '';
+    position: absolute;
+    top: 5px;
+    left: -20px;
+    bottom: 5px;
+    width: 5px;
+    border-radius: 0 3px 3px 0;
+    background-color: transparent;
+    transition: 0.15s background-color linear;
+  }
+
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    margin: 0 4px;
+
+    &:before {
+      top: auto;
+      left: 5px;
+      bottom: -10px;
+      height: 5px;
+      width: auto;
+      right: 5px;
+      border-radius: 3px 3px 0 0;
+    }
+  }
+
+  &:hover,
+  &:focus {
+    color: ${p => p.theme.gray1};
+  }
+
+  ${getActiveStyle};
+`;
+
+const SidebarItemWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+  width: 100%;
+`;
+
+const SidebarItemIcon = styled('span')`
+  content: '';
+  display: inline-block;
+  width: 32px;
+  height: 22px;
+  font-size: 20px;
+
+  svg {
+    display: block;
+    margin: 0 auto;
+  }
+`;
+
+const SidebarItemLabel = styled('span')`
+  margin-left: 12px;
+  white-space: nowrap;
+  opacity: 1;
+  flex: 1;
+`;
+
+const getCollapsedBadgeStyle = ({collapsed, theme}) => {
+  if (!collapsed) return '';
+
+  return css`
+    text-indent: -99999em;
+    position: absolute;
+    right: 0;
+    top: 1px;
+    background: ${theme.red};
+    width: ${theme.sidebar.smallBadgeSize};
+    height: ${theme.sidebar.smallBadgeSize};
+    border-radius: ${theme.sidebar.smallBadgeSize};
+    line-height: ${theme.sidebar.smallBadgeSize};
+    box-shadow: 0 3px 3px ${theme.sidebar.background};
+  `;
+};
+
+const SidebarItemBadge = styled(({collapsed, ...props}) => <span {...props} />)`
+  display: block;
+  text-align: center;
+  color: ${p => p.theme.white};
+  font-size: 12px;
+  background: ${p => p.theme.red};
+  width: ${p => p.theme.sidebar.badgeSize};
+  height: ${p => p.theme.sidebar.badgeSize};
+  border-radius: ${p => p.theme.sidebar.badgeSize};
+  line-height: ${p => p.theme.sidebar.badgeSize};
+
+  ${getCollapsedBadgeStyle};
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.jsx
new file mode 100644
index 0000000000..c9937219f9
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.jsx
@@ -0,0 +1,95 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled, {css} from 'react-emotion';
+
+class SidebarPanel extends React.Component {
+  static propTypes = {
+    title: PropTypes.string,
+    collapsed: PropTypes.bool,
+    orientation: PropTypes.oneOf(['top', 'left']),
+    hidePanel: PropTypes.func,
+  };
+
+  render() {
+    let {orientation, collapsed, hidePanel, title, children, ...props} = this.props;
+    return (
+      <StyledSidebarPanel collapsed={collapsed} orientation={orientation} {...props}>
+        <SidebarPanelHeader>
+          <PanelClose onClick={hidePanel}>
+            <span className="icon-close" />
+          </PanelClose>
+          <Title>{title}</Title>
+        </SidebarPanelHeader>
+
+        <SidebarPanelBody>{children}</SidebarPanelBody>
+      </StyledSidebarPanel>
+    );
+  }
+}
+
+export default SidebarPanel;
+
+const getPositionForOrientation = p => {
+  if (p.orientation === 'top') {
+    return css`
+      top: ${p.theme.sidebar.mobileHeight};
+      left: 0;
+      right: 0;
+    `;
+  }
+
+  return css`
+    width: ${p.theme.sidebar.panel.width};
+    top: 0;
+    left: ${p.collapsed ? p.theme.sidebar.collapsedWidth : p.theme.sidebar.expandedWidth};
+  `;
+};
+const StyledSidebarPanel = styled(({collapsed, orientation, ...props}) => (
+  <div {...props} />
+))`
+  position: fixed;
+  bottom: 0;
+  background: ${p => p.theme.whiteDark};
+  z-index: ${p => p.theme.zIndex.sidebar};
+  color: #2f2936;
+  border-right: 1px solid ${p => p.theme.borderLight};
+  box-shadow: 1px 0 2px rgba(0, 0, 0, 0.06);
+  text-align: left;
+  line-height: 24px;
+
+  ${getPositionForOrientation};
+`;
+
+const SidebarPanelHeader = styled('div')`
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  padding: 20px;
+  background: ${p => p.theme.background};
+  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);
+  height: ${p => p.theme.sidebar.panel.headerHeight};
+`;
+const SidebarPanelBody = styled('div')`
+  position: absolute;
+  left: 0;
+  right: 0;
+  bottom: 0;
+  top: ${p => p.theme.sidebar.panel.headerHeight};
+  overflow: auto;
+`;
+
+const PanelClose = styled('a')`
+  float: right;
+  font-size: 22px;
+  position: relative;
+  top: 0;
+  right: -3px;
+  color: ${p => p.theme.gray3};
+
+  &:hover {
+    color: ${p => p.theme.gray5};
+  }
+`;
+
+const Title = styled('div')`
+  font-size: 18px;
+  margin: 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarPanelEmpty.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarPanelEmpty.jsx
new file mode 100644
index 0000000000..66a3c4658c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarPanelEmpty.jsx
@@ -0,0 +1,13 @@
+import styled from 'react-emotion';
+
+const SidebarPanelEmpty = styled('div')`
+  color: #9586a5;
+  text-align: center;
+  width: 100%;
+  position: absolute;
+  top: 50%;
+  padding: 0 60px;
+  margin-top: -23px; /* offset for sidebar-panel-header + font-size */
+`;
+
+export default SidebarPanelEmpty;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarPanelItem.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarPanelItem.jsx
new file mode 100644
index 0000000000..d719708d92
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarPanelItem.jsx
@@ -0,0 +1,72 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {t} from '../../locale';
+import ExternalLink from '../externalLink';
+
+class SidebarPanelItem extends React.Component {
+  static propTypes = {
+    title: PropTypes.string,
+    image: PropTypes.string,
+    message: PropTypes.any,
+    link: PropTypes.string,
+    hasSeen: PropTypes.bool,
+  };
+
+  render() {
+    let {hasSeen, title, image, message, link} = this.props;
+
+    return (
+      <SidebarPanelItemRoot>
+        {title && <Title hasSeen={hasSeen}>{title}</Title>}
+        {image && (
+          <div className="image">
+            <img src={image} />
+          </div>
+        )}
+        {message && <Message>{message}</Message>}
+
+        {link && (
+          <Text>
+            <ExternalLink href={link}>{t('Read More')}</ExternalLink>
+          </Text>
+        )}
+      </SidebarPanelItemRoot>
+    );
+  }
+}
+
+export default SidebarPanelItem;
+
+const SidebarPanelItemRoot = styled('div')`
+  padding: 15px 20px;
+  line-height: 1.2;
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  background: ${p => p.theme.white};
+  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);
+  font-size: 14px;
+`;
+
+const Title = styled(({hasSeen, ...props}) => <div {...props} />)`
+  font-size: 15px;
+  margin-bottom: 5px;
+  color: ${p => p.theme.gray5};
+  ${p => !p.hasSeen && 'font-weight: 600;'};
+
+  .culprit {
+    font-weight: normal;
+  }
+`;
+
+const Text = styled('div')`
+  margin-bottom: 5px;
+
+  &:last-child {
+    margin-bottom: 0;
+  }
+`;
+
+const Message = styled(Text)`
+  color: ${p => p.theme.gray3};
+`;
diff --git a/src/sentry/static/sentry/app/components/tooltip.jsx b/src/sentry/static/sentry/app/components/tooltip.jsx
index fefb7d4acb..2f4d1956ab 100644
--- a/src/sentry/static/sentry/app/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/tooltip.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 import ReactDOM from 'react-dom';
 import PropTypes from 'prop-types';
 import classNames from 'classnames';
+import {isEqual} from 'lodash';
 import 'bootstrap/js/tooltip';
 
 // Non-mixin way to get Tooltips
@@ -24,7 +25,11 @@ class Tooltip extends React.Component {
   }
 
   componentDidUpdate = prevProps => {
-    if (prevProps.title != this.props.title) {
+    // Reattach tooltip if options or tooltip message changes
+    if (
+      !isEqual(prevProps.tooltipOptions, this.props.tooltipOptions) ||
+      prevProps.title != this.props.title
+    ) {
       this.removeTooltips(this.ref);
       this.attachTooltips(this.ref);
     }
diff --git a/src/sentry/static/sentry/app/icons/icon-activity.svg b/src/sentry/static/sentry/app/icons/icon-activity.svg
new file mode 100644
index 0000000000..832535fffd
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-activity.svg
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg width="22px" height="22px" viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+	<path d="M1.1,10 L20.9,10 C21.5075132,10 22,10.4477153 22,11 C22,11.5522847 21.5075132,12 20.9,12 L1.1,12 C0.492486775,12 0,11.5522847 0,11 C0,10.4477153 0.492486775,10 1.1,10 Z M1.1,3 L20.9,3 C21.5075132,3 22,3.44771525 22,4 C22,4.55228475 21.5075132,5 20.9,5 L1.1,5 C0.492486775,5 0,4.55228475 0,4 C0,3.44771525 0.492486775,3 1.1,3 Z M1.1,17 L20.9,17 C21.5075132,17 22,17.4477153 22,18 C22,18.5522847 21.5075132,19 20.9,19 L1.1,19 C0.492486775,19 0,18.5522847 0,18 C0,17.4477153 0.492486775,17 1.1,17 Z" fill="currentColor">
+	</path>
+</svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-collapse.svg b/src/sentry/static/sentry/app/icons/icon-collapse.svg
new file mode 100644
index 0000000000..765a8b738c
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-collapse.svg
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg width="22px" height="22px" viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+	<path d="M11,22 C4.92486775,22 0,17.0751322 0,11 C0,4.92486775 4.92486775,0 11,0 C17.0751322,0 22,4.92486775 22,11 C22,17.0751322 17.0751322,22 11,22 Z M11,20.1666667 C16.0626102,20.1666667 20.1666667,16.0626102 20.1666667,11 C20.1666667,5.93738979 16.0626102,1.83333333 11,1.83333333 C5.93738979,1.83333333 1.83333333,5.93738979 1.83333333,11 C1.83333333,16.0626102 5.93738979,20.1666667 11,20.1666667 Z M13.0188522,14.0141852 C13.3792079,14.3697748 13.3830714,14.9501632 13.0274818,15.3105189 C12.6718921,15.6708745 12.0915037,15.6747381 11.7311481,15.3191484 L8.06448139,11.7009762 C7.70410344,11.3453646 7.70026495,10.7649323 8.05590814,10.4045854 L11.7225748,6.68942432 C12.078196,6.32909977 12.6585847,6.32528694 13.0189093,6.68090813 C13.3792338,7.03652933 13.3830466,7.61691804 13.0274254,7.97724259 L10.0047242,11.0399213 L13.0188522,14.0141852 Z" fill="currentColor" fill-rule="nonzero">
+	</path>
+</svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-history.svg b/src/sentry/static/sentry/app/icons/icon-history.svg
new file mode 100644
index 0000000000..652531e71e
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-history.svg
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg width="22px" height="22px" viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+	<path d="M12.588066,11.9166667 C12.271074,12.4646513 11.6785922,12.8333333 11,12.8333333 C9.98747796,12.8333333 9.16666667,12.012522 9.16666667,11 C9.16666667,10.7182557 9.23022092,10.4513553 9.34377529,10.2128529 L7.18665385,6.47660899 C6.92251767,6.0191117 7.07926782,5.43411218 7.53676511,5.169976 C7.9942624,4.90583981 8.57926192,5.06258996 8.8433981,5.52008725 L10.949151,9.16735822 C10.9660446,9.16689818 10.9829953,9.16666667 11,9.16666667 C11.6785922,9.16666667 12.271074,9.53534874 12.588066,10.0833333 L17.4166667,10.0833333 C17.9229277,10.0833333 18.3333333,10.493739 18.3333333,11 C18.3333333,11.506261 17.9229277,11.9166667 17.4166667,11.9166667 L12.588066,11.9166667 Z M11,22 C4.92486775,22 0,17.0751322 0,11 C0,4.92486775 4.92486775,0 11,0 C17.0751322,0 22,4.92486775 22,11 C22,17.0751322 17.0751322,22 11,22 Z M11,20.1666667 C16.0626102,20.1666667 20.1666667,16.0626102 20.1666667,11 C20.1666667,5.93738979 16.0626102,1.83333333 11,1.83333333 C5.93738979,1.83333333 1.83333333,5.93738979 1.83333333,11 C1.83333333,16.0626102 5.93738979,20.1666667 11,20.1666667 Z" fill="currentColor">
+	</path>
+</svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-projects.svg b/src/sentry/static/sentry/app/icons/icon-projects.svg
new file mode 100644
index 0000000000..a052a1b4b0
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-projects.svg
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg width="22px" height="22px" viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+	<path d="M4,0 L18,0 C20.209139,0 22,1.790861 22,4 L22,18 C22,20.209139 20.209139,22 18,22 L4,22 C1.790861,22 0,20.209139 0,18 L0,4 C0,1.790861 1.790861,0 4,0 Z M4,2 C2.8954305,2 2,2.8954305 2,4 L2,18 C2,19.1045695 2.8954305,20 4,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,4 C20,2.8954305 19.1045695,2 18,2 L4,2 Z M6,5 L8,5 C8.55228475,5 9,5.44771525 9,6 L9,8 C9,8.55228475 8.55228475,9 8,9 L6,9 C5.44771525,9 5,8.55228475 5,8 L5,6 C5,5.44771525 5.44771525,5 6,5 Z M6,13 L8,13 C8.55228475,13 9,13.4477153 9,14 L9,16 C9,16.5522847 8.55228475,17 8,17 L6,17 C5.44771525,17 5,16.5522847 5,16 L5,14 C5,13.4477153 5.44771525,13 6,13 Z M14,5 L16,5 C16.5522847,5 17,5.44771525 17,6 L17,8 C17,8.55228475 16.5522847,9 16,9 L14,9 C13.4477153,9 13,8.55228475 13,8 L13,6 C13,5.44771525 13.4477153,5 14,5 Z M14,13 L16,13 C16.5522847,13 17,13.4477153 17,14 L17,16 C17,16.5522847 16.5522847,17 16,17 L14,17 C13.4477153,17 13,16.5522847 13,16 L13,14 C13,13.4477153 13.4477153,13 14,13 Z" fill="currentColor" fill-rule="nonzero">
+	</path>
+</svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-star.svg b/src/sentry/static/sentry/app/icons/icon-star.svg
new file mode 100644
index 0000000000..e834fd6f56
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-star.svg
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 viewBox="0 0 22 22" style="enable-background:new 0 0 22 22;" xml:space="preserve">
+<path d="M19.9,6.2c1.3,0.1,2.2,1.3,2.1,2.6c-0.1,0.6-0.3,1.1-0.8,1.5l-3.5,3.2l1,4.6c0.3,1.3-0.6,2.5-1.8,2.8
+	c-0.6,0.1-1.1,0-1.6-0.3L11,18.3l-4.2,2.3c-1.1,0.6-2.6,0.2-3.2-0.9c-0.3-0.5-0.4-1.1-0.3-1.6l1-4.6l-3.5-3.2c-1-0.9-1-2.4-0.2-3.3
+	C1,6.6,1.5,6.3,2.1,6.2l4.8-0.5l2-4.3c0.5-1.2,2-1.7,3.1-1.2c0.5,0.2,0.9,0.7,1.2,1.2l2,4.3L19.9,6.2z M11.6,2.3
+	C11.6,2.1,11.4,2,11.3,2c-0.3-0.2-0.7,0-0.9,0.3L8.2,7C8.1,7.2,7.9,7.4,7.7,7.4L2.5,8C2.4,8,2.2,8.1,2.1,8.2c-0.3,0.3-0.2,0.7,0,1
+	L6,12.6c0.2,0.2,0.3,0.4,0.2,0.6l-1,5c0,0.2,0,0.3,0.1,0.5c0.2,0.3,0.6,0.4,0.9,0.3l4.5-2.5c0.2-0.1,0.5-0.1,0.7,0l4.5,2.5
+	c0.1,0.1,0.3,0.1,0.5,0.1c0.4-0.1,0.6-0.4,0.5-0.8l-1-5c0-0.2,0-0.5,0.2-0.6l3.8-3.5C20,9,20.1,8.9,20.1,8.7c0-0.4-0.2-0.7-0.6-0.7
+	l-5.2-0.6c-0.2,0-0.4-0.2-0.5-0.4L11.6,2.3z" fill="currentColor" />
+</svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-stats.svg b/src/sentry/static/sentry/app/icons/icon-stats.svg
new file mode 100644
index 0000000000..c589eed710
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-stats.svg
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<svg width="22px" height="22px" viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+	<path d="M16.0510204,19 L16.0510204,7.09302326 C16.0510204,6.52789467 16.5033042,6.06976744 17.0612245,6.06976744 C17.6191448,6.06976744 18.0714286,6.52789467 18.0714286,7.09302326 L18.0714286,19 L18.9897959,19 C19.5477162,19 20,18.5418728 20,17.9767442 L20,4.02325581 C20,3.45812723 19.5477162,3 18.9897959,3 L3.01020408,3 C2.45228377,3 2,3.45812723 2,4.02325581 L2,17.9767442 C2,18.5418728 2.45228377,19 3.01020408,19 L3.92857143,19 L3.92857143,13.2325581 C3.92857143,12.6674296 4.3808552,12.2093023 4.93877551,12.2093023 C5.49669582,12.2093023 5.94897959,12.6674296 5.94897959,13.2325581 L5.94897959,19 L7.96938776,19 L7.96938776,13.2325581 C7.96938776,12.6674296 8.42167153,12.2093023 8.97959184,12.2093023 C9.53751215,12.2093023 9.98979592,12.6674296 9.98979592,13.2325581 L9.98979592,19 L12.0102041,19 L12.0102041,11.1860465 C12.0102041,10.6209179 12.4624879,10.1627907 13.0204082,10.1627907 C13.5783285,10.1627907 14.0306122,10.6209179 14.0306122,11.1860465 L14.0306122,19 L16.0510204,19 Z M3.025,1 L18.975,1 C20.6456614,1 22,2.36801882 22,4.05555556 L22,17.9444444 C22,19.6319812 20.6456614,21 18.975,21 L3.025,21 C1.35433863,21 0,19.6319812 0,17.9444444 L0,4.05555556 C0,2.36801882 1.35433863,1 3.025,1 Z" id="Combined-Shape" fill="currentColor">
+	</path>
+</svg>
diff --git a/src/sentry/static/sentry/app/icons/icon-user.svg b/src/sentry/static/sentry/app/icons/icon-user.svg
index ac44a73e2a..220cdb37c4 100644
--- a/src/sentry/static/sentry/app/icons/icon-user.svg
+++ b/src/sentry/static/sentry/app/icons/icon-user.svg
@@ -1,5 +1,5 @@
-<svg viewBox="0 0 24 24">
-  <g fill="currentColor">
-    <path d="M4.57694084,15.0573642 C3.09845147,15.2679649 2,16.5339712 2,18.0273845 L2,20.5 C2,21.3284271 2.67157288,22 3.5,22 L20.5,22 C21.3284271,22 22,21.3284271 22,20.5 L22,18.0273845 C22,16.5339712 20.9015485,15.2679649 19.4230592,15.0573642 L15.9042257,14.5561303 C14.8548438,15.4562022 13.4909273,16 12,16 C10.5090727,16 9.14515623,15.4562022 8.0957743,14.5561303 L4.57694084,15.0573642 Z M4.2949014,13.0773506 L8.7103901,12.4483943 L9.39785869,13.0380473 C10.1184044,13.656071 11.0299588,14 12,14 C12.9700412,14 13.8815956,13.656071 14.6021413,13.0380473 L15.2896099,12.4483943 L19.7050986,13.0773506 C22.1692475,13.4283518 24,15.5383623 24,18.0273845 L24,20.5 C24,22.4329966 22.4329966,24 20.5,24 L3.5,24 C1.56700338,24 0,22.4329966 0,20.5 L8.8817842e-16,18.0273845 C8.8817842e-16,15.5383623 1.83075245,13.4283518 4.2949014,13.0773506 Z M12,2 C9.790861,2 8,3.790861 8,6 L8,10 C8,12.209139 9.790861,14 12,14 C14.209139,14 16,12.209139 16,10 L16,6 C16,3.790861 14.209139,2 12,2 Z M12,8.8817842e-16 C15.3137085,-1.11022302e-15 18,2.6862915 18,6 L18,10 C18,13.3137085 15.3137085,16 12,16 C8.6862915,16 6,13.3137085 6,10 L6,6 C6,2.6862915 8.6862915,6.66133815e-16 12,8.8817842e-16 Z" />
-  </g>
+<?xml version="1.0" encoding="UTF-8"?>
+<svg width="22px" height="22px" viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
+	<path d="M7.42112644,13.3431195 L4.1955291,13.8025838 C2.84024718,13.9956345 1.83333333,15.1561403 1.83333333,16.5251025 L1.83333333,18.7916667 C1.83333333,19.5510582 2.4489418,20.1666667 3.20833333,20.1666667 L18.7916667,20.1666667 C19.5510582,20.1666667 20.1666667,19.5510582 20.1666667,18.7916667 L20.1666667,16.5251025 C20.1666667,15.1561403 19.1597528,13.9956345 17.8044709,13.8025838 L14.5788736,13.3431195 C13.6169401,14.1681853 12.3666833,14.6666667 11,14.6666667 C9.63331666,14.6666667 8.38305987,14.1681853 7.42112644,13.3431195 Z M8.6147038,11.9515433 C9.27520408,12.5180651 10.1107955,12.8333333 11,12.8333333 C11.8892045,12.8333333 12.7247959,12.5180651 13.3852962,11.9515433 L14.0154757,11.4110281 L18.063007,11.9875714 C20.3218103,12.3093225 22,14.2434987 22,16.5251025 L22,18.7916667 C22,20.5635802 20.5635802,22 18.7916667,22 L3.20833333,22 C1.43641976,22 0,20.5635802 0,18.7916667 L0,16.5251025 C0,14.2434987 1.67818975,12.3093225 3.93699295,11.9875714 L7.98452426,11.4110281 L8.6147038,11.9515433 Z M11,1.83333333 C8.97495592,1.83333333 7.33333333,3.47495592 7.33333333,5.5 L7.33333333,9.16666667 C7.33333333,11.1917107 8.97495592,12.8333333 11,12.8333333 C13.0250441,12.8333333 14.6666667,11.1917107 14.6666667,9.16666667 L14.6666667,5.5 C14.6666667,3.47495592 13.0250441,1.83333333 11,1.83333333 Z M11,0 C14.0375661,0 16.5,2.46243388 16.5,5.5 L16.5,9.16666667 C16.5,12.2042328 14.0375661,14.6666667 11,14.6666667 C7.96243388,14.6666667 5.5,12.2042328 5.5,9.16666667 L5.5,5.5 C5.5,2.46243388 7.96243388,0 11,0 Z" fill="currentColor" fill-rule="nonzero">
+	</path>
 </svg>
diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index 973f792d4b..453cfff0cf 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -17,6 +17,30 @@ export const User = PropTypes.shape({
   id: PropTypes.string.isRequired,
 });
 
+export const Config = PropTypes.shape({
+  dsn: PropTypes.string,
+  features: PropTypes.instanceOf(Set),
+  gravatarBaseUrl: PropTypes.string,
+  invitesEnabled: PropTypes.bool,
+  isAuthenticated: PropTypes.bool,
+  isOnPremise: PropTypes.bool,
+  mediaUrl: PropTypes.string,
+  messages: PropTypes.array,
+  needsUpgrade: PropTypes.bool,
+  privacyUrl: PropTypes.string,
+  singleOrganization: PropTypes.bool,
+  supportEmail: PropTypes.string,
+  termsUrl: PropTypes.string,
+  urlPrefix: PropTypes.string,
+  user: User,
+  version: PropTypes.shape({
+    current: PropTypes.string,
+    build: PropTypes.string,
+    latest: PropTypes.string,
+    upgradeAvailable: PropTypes.bool,
+  }),
+});
+
 /**
  * A Member is someone that was invited to Sentry but may
  * not have registered for an account yet
@@ -236,6 +260,7 @@ let SentryTypes = {
     id: PropTypes.string.isRequired,
   }),
   Actor,
+  Config,
   Group,
   Environment,
   Event,
diff --git a/src/sentry/static/sentry/app/stores/hookStore.jsx b/src/sentry/static/sentry/app/stores/hookStore.jsx
index 3ed1350174..ba967a7069 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.jsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.jsx
@@ -19,6 +19,7 @@ let validHookNames = new Set([
   'issue:secondary-column',
   'analytics:onboarding-complete',
   'analytics:event',
+  'sidebar:organization-dropdown-menu',
 ]);
 
 const HookStore = Reflux.createStore({
diff --git a/src/sentry/static/sentry/app/stores/sidebarStore.jsx b/src/sentry/static/sentry/app/stores/sidebarStore.jsx
new file mode 100644
index 0000000000..5000995861
--- /dev/null
+++ b/src/sentry/static/sentry/app/stores/sidebarStore.jsx
@@ -0,0 +1,39 @@
+import Reflux from 'reflux';
+import SidebarActions from '../actions/sidebarActions';
+
+const SidebarStore = Reflux.createStore({
+  init() {
+    this.reset();
+
+    this.listenTo(SidebarActions.hideSidebar, this.onHideSidebar);
+    this.listenTo(SidebarActions.showSidebar, this.onShowSidebar);
+    this.listenTo(SidebarActions.loadInitialState, this.loadInitialState);
+  },
+
+  getInitialState() {
+    return this._state;
+  },
+
+  reset() {
+    this._state = {
+      collapsed: false,
+    };
+  },
+
+  loadInitialState(collapsed) {
+    this._state.collapsed = collapsed;
+    this.trigger(this._state);
+  },
+
+  onHideSidebar() {
+    this._state.collapsed = true;
+    this.trigger(this._state);
+  },
+
+  onShowSidebar() {
+    this._state.collapsed = false;
+    this.trigger(this._state);
+  },
+});
+
+export default SidebarStore;
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index 74d5f693c3..4848acb0bc 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -1,7 +1,9 @@
 const theme = {
-  white: '#FFFFFF',
+  breakpoints: ['768px', '992px', '1200px'],
+
   offWhite: '#FAF9FB',
   whiteDark: '#fbfbfc',
+  white: '#FFFFFF',
 
   gray1: '#BDB4C7',
   gray2: '#9585A3',
@@ -54,8 +56,10 @@ const theme = {
   dropShadowLight: '0 2px 0 rgba(37, 11, 54, 0.04)',
   dropShadowHeavy: '0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)',
 
+  background: '#fff',
+
   zIndex: {
-    sidebar: 100,
+    sidebar: 9999,
     header: 1000,
     dropdown: 1001,
     modal: 10000,
@@ -98,6 +102,22 @@ const theme = {
     sidebarWidth: '210px',
   },
 
+  sidebar: {
+    background: '#2f2936',
+    color: '#9586a5',
+    divider: '#493e54',
+    badgeSize: '22px',
+    smallBadgeSize: '11px',
+    collapsedWidth: '70px',
+    expandedWidth: '220px',
+    mobileHeight: '54px',
+    menuSpacing: '15px',
+    panel: {
+      width: '320px',
+      headerHeight: '62px',
+    },
+  },
+
   text: {
     family: '"Rubik", "Avenir Next", sans-serif',
     familyMono: 'Monaco, Consolas, "Courier New", monospace',
diff --git a/src/sentry/static/sentry/app/views/onboarding/onboarding.less b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
index 4348cd5603..7018c19353 100644
--- a/src/sentry/static/sentry/app/views/onboarding/onboarding.less
+++ b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
@@ -1,6 +1,7 @@
 @onboarding-sidebar-width: 300px;
 
 .onboarding-container {
+  margin-left: @onboarding-sidebar-width;
   margin-left: @onboarding-sidebar-width - @sidebar-width;
 
   max-width: 800px + @onboarding-sidebar-width;
diff --git a/src/sentry/static/sentry/app/views/organizationDetails.jsx b/src/sentry/static/sentry/app/views/organizationDetails.jsx
index 273f35c689..2bbaff0be9 100644
--- a/src/sentry/static/sentry/app/views/organizationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDetails.jsx
@@ -7,7 +7,8 @@ import {Client} from 'app/api';
 import OrganizationContext from 'app/views/organizationContext';
 import NarrowLayout from 'app/components/narrowLayout';
 import Footer from 'app/components/footer';
-import Sidebar from 'app/components/sidebar';
+import LazyLoad from 'app/components/lazyLoad';
+import OldSidebar from 'app/components/sidebar.old'; // #NEW-SETTINGS
 import {t, tct} from 'app/locale';
 
 class DeletionInProgress extends Component {
@@ -125,6 +126,9 @@ class OrganizationDetailsBody extends Component {
 
   render() {
     let {organization} = this.context;
+    let hasNewDashboardFeatures =
+      organization && organization.features.indexOf('dashboard') > -1;
+
     if (organization.status)
       if (organization.status.id === 'pending_deletion') {
         return <DeletionPending organization={organization} />;
@@ -133,7 +137,18 @@ class OrganizationDetailsBody extends Component {
       }
     return (
       <React.Fragment>
-        <Sidebar />
+        {hasNewDashboardFeatures ? (
+          <LazyLoad
+            component={() =>
+              import(/*webpackChunkName: "NewSidebar"*/ 'app/components/sidebar').then(
+                mod => mod.default
+              )}
+            {...this.props}
+            organization={organization}
+          />
+        ) : (
+          <OldSidebar />
+        )}
         {this.props.children}
         <Footer />
       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
index 04e48dfd8a..49cb2b15fc 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
@@ -6,12 +6,13 @@ import styled from 'react-emotion';
 
 import Alert from 'app/components/alert';
 import Footer from 'app/components/footer';
-import SettingsBackButton from 'app/views/settings/components/settingsBackButton';
-import SettingsBreadcrumb from 'app/views/settings/components/settingsBreadcrumb';
-import SettingsHeader from 'app/views/settings/components/settingsHeader';
-import SettingsSearch from 'app/views/settings/components/settingsSearch';
 import space from 'app/styles/space';
 
+import SettingsBackButton from './settingsBackButton';
+import SettingsBreadcrumb from './settingsBreadcrumb';
+import SettingsHeader from './settingsHeader';
+import SettingsSearch from './settingsSearch';
+
 let StyledAlert = styled(Alert)`
   margin: ${space(3)} 0;
 `;
diff --git a/src/sentry/static/sentry/images/sentry-avatar.png b/src/sentry/static/sentry/images/sentry-avatar.png
index b4f7acad83..9ba76d3309 100644
Binary files a/src/sentry/static/sentry/images/sentry-avatar.png and b/src/sentry/static/sentry/images/sentry-avatar.png differ
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index 970d06db93..1cd02251b1 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -36,6 +36,15 @@ body {
   &.org-dashboard {
     background-color: #fcfcfc;
   }
+
+  &.body-sidebar {
+    padding-left: @sidebar-expanded-width;
+    font-family: 'Rubik', 'Avenir Next', 'Helvetica Neue', sans-serif;
+
+    &.collapsed {
+      padding-left: @sidebar-collapsed-width;
+    }
+  }
 }
 
 #blk_router {
@@ -53,6 +62,14 @@ body.narrow {
 
   background: #fff;
 
+  &.body-sidebar {
+    padding-left: @sidebar-expanded-width;
+
+    &.collapsed {
+      padding-left: @sidebar-collapsed-width;
+    }
+  }
+
   &.dialog {
     padding-top: 0;
   }
@@ -149,6 +166,7 @@ body.auth {
 // Container around content in app.jsx
 .main-container {
   min-height: 100vh;
+  outline: none;
 }
 
 // So loader can take up full height so that footer is fixed to bottom of screen
@@ -444,6 +462,15 @@ footer {
 
     // Account for there being no footer on mobile
     padding-bottom: 20px;
+
+    &.body-sidebar {
+      padding-left: 0;
+      padding-top: @sidebar-mobile-height;
+
+      &.collapsed {
+        padding-left: 0;
+      }
+    }
   }
 
   .app {
@@ -502,7 +529,7 @@ footer {
       right: 0;
       top: 0;
       font-size: 20px;
-      background: @header-bg-color;
+      background: @sidebar-bg-color;
       padding-left: 30px;
     }
 
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index 9145e2af42..c131e346bf 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -703,6 +703,38 @@
   }
 }
 
+.body-sidebar {
+  .onboarding-progress-bar {
+    height: 16px;
+    width: 100%;
+    float: none;
+    margin-right: 0;
+    margin-top: 0;
+
+    .slider {
+      height: 16px;
+    }
+    &:before {
+      top: 0;
+      bottom: 0;
+      left: 0;
+      right: 0;
+    }
+  }
+
+  &.collapsed {
+    .onboarding-progress-bar {
+      width: 16px;
+      height: 150px;
+      margin-left: 8px;
+    }
+    .slider {
+      width: 16px;
+      height: auto;
+    }
+  }
+}
+
 .onboarding-progress-bar:hover,
 .active .onboarding-progress-bar,
 .onboarding-progress-bar.active {
diff --git a/src/sentry/static/sentry/less/palette.less b/src/sentry/static/sentry/less/palette.less
index e42925999f..1398576149 100644
--- a/src/sentry/static/sentry/less/palette.less
+++ b/src/sentry/static/sentry/less/palette.less
@@ -58,6 +58,7 @@
 
 @link-color: @blue;
 @link-color-hover: @blue-dark;
+@sidebar-bg-color: #2f2936;
 @header-bg-color: #342c3e;
 
 @trim: @gray-lightest;
diff --git a/src/sentry/static/sentry/less/sentry-avatar.less b/src/sentry/static/sentry/less/sentry-avatar.less
new file mode 100644
index 0000000000..3f03f5e1f5
--- /dev/null
+++ b/src/sentry/static/sentry/less/sentry-avatar.less
@@ -0,0 +1,6 @@
+.org-avatar {
+  .square(30px);
+  background: @red url(../images/sentry-avatar.png);
+  background-size: cover;
+  border-radius: 3px;
+}
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index ac1252d241..b88d3af2eb 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -15,6 +15,7 @@
 
 // App Components
 @import url('./shared-components.less');
+@import url('./sentry-avatar.less');
 @import url('./sentry-grid.less');
 @import url('./sentry-hovercard.less');
 @import url('./sentry-list-group.less');
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index fd6b0d2279..2dad9c89d4 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -67,7 +67,7 @@
 }
 
 .stream-select-all-notice {
-  background: @header-bg-color;
+  background: @sidebar-bg-color;
   border: 1px solid #e7d796;
   margin: 0 -1px -1px;
   position: relative;
diff --git a/src/sentry/static/sentry/less/variables.less b/src/sentry/static/sentry/less/variables.less
index 3f0dd0ed0b..734d6524d4 100644
--- a/src/sentry/static/sentry/less/variables.less
+++ b/src/sentry/static/sentry/less/variables.less
@@ -34,8 +34,13 @@
 //
 // Sets up sidebar offsets
 
-@sidebar-width: 60px;
+@sidebar-collapsed-width: 70px;
+@sidebar-expanded-width: 220px;
 @sidebar-panel-width: 320px;
+@sidebar-mobile-height: 54px;
+
+// deleteme: #NEW-SETTINGS
+@sidebar-width: 60px;
 @sidebar-panel-header-height: 62px;
 
 // Tables
diff --git a/src/sentry/utils/pytest/selenium.py b/src/sentry/utils/pytest/selenium.py
index e58589c45c..07458e3485 100644
--- a/src/sentry/utils/pytest/selenium.py
+++ b/src/sentry/utils/pytest/selenium.py
@@ -13,6 +13,7 @@ from selenium import webdriver
 from selenium.common.exceptions import NoSuchElementException
 from selenium.webdriver.support.ui import WebDriverWait
 from selenium.webdriver.support import expected_conditions
+from selenium.webdriver.common.action_chains import ActionChains
 from six.moves.urllib.parse import quote, urlparse
 
 # if we're not running in a PR, we kill the PERCY_TOKEN because its a push
@@ -87,6 +88,18 @@ class Browser(object):
 
         return self
 
+    def move_to(self, selector=None):
+        """
+        Mouse move to ``selector``
+        """
+        if selector:
+            actions = ActionChains(self.driver)
+            actions.move_to_element(self.element(selector)).perform()
+        else:
+            raise ValueError
+
+        return self
+
     def wait_until_clickable(self, selector=None, timeout=3):
         """
         Waits until ``selector`` is visible and enabled to be clicked, or until ``timeout``
diff --git a/tests/acceptance/test_sidebar.py b/tests/acceptance/test_sidebar.py
new file mode 100644
index 0000000000..ce4f1831b9
--- /dev/null
+++ b/tests/acceptance/test_sidebar.py
@@ -0,0 +1,29 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase
+
+
+class SidebarTest(AcceptanceTestCase):
+    def setUp(self):
+        super(SidebarTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.login_as(self.user)
+        self.create_organization(name="Foo Foo Foo Foo Foo Foo Foo", owner=self.user)
+        self.create_organization(name="Bar Bar Bar Bar Bar Bar Bar", owner=self.user)
+        self.path = '/'
+
+    def test_new_sidebar(self):
+        with self.feature('organizations:dashboard'):
+            self.browser.get(self.path)
+            self.browser.wait_until_not('.loading')
+            self.browser.click('[data-test-id="sidebar-dropdown"]')
+            self.browser.move_to('[data-test-id="sidebar-switch-org"]')
+            self.browser.wait_until('[data-test-id="sidebar-switch-org-menu"]')
+            self.browser.snapshot('sidebar - switch org expanded')
+            self.browser.click('[data-test-id="sidebar-collapse"]')
+            self.browser.snapshot('sidebar - collapsed')
+            self.browser.click('[data-test-id="sidebar-broadcasts"]')
+            self.browser.wait_until('[data-test-id="sidebar-broadcasts-panel"]')
+            self.browser.snapshot('sidebar - broadcasts panel')
+            self.browser.click('footer')
+            self.browser.wait_until_not('[data-test-id="sidebar-broadcasts-panel"]')
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 7646669ed5..6bd2f0b5ed 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -61,6 +61,7 @@ window.TestStubs = {
     go: jest.fn(),
     goBack: jest.fn(),
     goForward: jest.fn(),
+    listen: jest.fn(),
     setRouteLeaveHook: jest.fn(),
     isActive: jest.fn(),
     createHref: jest.fn(),
@@ -356,6 +357,20 @@ window.TestStubs = {
     ];
   },
 
+  Broadcast: params => ({
+    dateCreated: new Date(),
+    dateExpires: new Date(),
+    hasSeen: false,
+    id: '8',
+    isActive: true,
+    link:
+      'https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry',
+    message:
+      'Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.',
+    title: 'Learn about Source Maps',
+    ...params,
+  }),
+
   DebugSymbols: params => ({
     debugSymbols: [
       {
@@ -502,6 +517,13 @@ window.TestStubs = {
     };
   },
 
+  Incident: params => ({
+    id: '1',
+    title: 'Test Incident',
+    updates: ['First Update', 'Second Update'],
+    url: 'https://status.sentry.io',
+  }),
+
   Members: () => [
     {
       id: '1',
@@ -941,6 +963,14 @@ window.TestStubs = {
     username: 'foo@example.com',
     email: 'foo@example.com',
     name: 'Foo Bar',
+    isAuthenticated: true,
+    options: {
+      timezone: 'UTC',
+    },
+    hasPasswordAuth: true,
+    flags: {
+      newsletter_consent_prompt: false,
+    },
     ...params,
   }),
 
@@ -959,15 +989,5 @@ window.MockApiClient = require.requireMock('app/api').Client;
 // default configuration
 ConfigStore.loadInitialData({
   messages: [],
-  user: {
-    isAuthenticated: true,
-    email: 'foo@example.com',
-    options: {
-      timezone: 'UTC',
-    },
-    hasPasswordAuth: true,
-    flags: {
-      newsletter_consent_prompt: false,
-    },
-  },
+  user: TestStubs.User(),
 });
diff --git a/tests/js/spec/components/avatar.spec.jsx b/tests/js/spec/components/avatar.spec.jsx
index 685830e7ba..1d3eed8912 100644
--- a/tests/js/spec/components/avatar.spec.jsx
+++ b/tests/js/spec/components/avatar.spec.jsx
@@ -26,7 +26,7 @@ describe('Avatar', function() {
         },
       });
       let avatar = mount(<Avatar user={user} />);
-      expect(avatar.find('.avatar')).toHaveLength(1);
+      expect(avatar.find('span.avatar')).toHaveLength(1);
     });
 
     it('should show a gravatar when avatar type is gravatar', function() {
diff --git a/tests/js/spec/components/avatar/__snapshots__/avatarList.spec.jsx.snap b/tests/js/spec/components/avatar/__snapshots__/avatarList.spec.jsx.snap
index 7664284655..0d9600e140 100644
--- a/tests/js/spec/components/avatar/__snapshots__/avatarList.spec.jsx.snap
+++ b/tests/js/spec/components/avatar/__snapshots__/avatarList.spec.jsx.snap
@@ -8,38 +8,86 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
     Array [
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "1",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "2",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "3",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "4",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "5",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "6",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
     ]
@@ -62,8 +110,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "1",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -74,8 +130,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "1",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -87,8 +151,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "1",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -101,15 +173,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "1",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -123,7 +202,7 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -132,12 +211,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
@@ -150,8 +239,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "2",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -162,8 +259,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "2",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -175,8 +280,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "2",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -189,15 +302,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "2",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -211,7 +331,7 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -220,12 +340,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
@@ -238,8 +368,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "3",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -250,8 +388,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "3",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -263,8 +409,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "3",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -277,15 +431,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "3",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -299,7 +460,7 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -308,12 +469,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
@@ -326,8 +497,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "4",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -338,8 +517,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "4",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -351,8 +538,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "4",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -365,15 +560,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "4",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -387,7 +589,7 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -396,12 +598,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
@@ -414,8 +626,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "5",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -426,8 +646,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "5",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -439,8 +667,16 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "5",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -453,15 +689,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "5",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -475,7 +718,7 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -484,12 +727,22 @@ exports[`AvatarList renders with collapsed avatar count if > 5 users 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
@@ -520,14 +773,30 @@ exports[`AvatarList renders with user avatars 1`] = `
     Array [
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "1",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
       Object {
         "email": "foo@example.com",
+        "flags": Object {
+          "newsletter_consent_prompt": false,
+        },
+        "hasPasswordAuth": true,
         "id": "2",
+        "isAuthenticated": true,
         "name": "Foo Bar",
+        "options": Object {
+          "timezone": "UTC",
+        },
         "username": "foo@example.com",
       },
     ]
@@ -550,8 +819,16 @@ exports[`AvatarList renders with user avatars 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "1",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -562,8 +839,16 @@ exports[`AvatarList renders with user avatars 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "1",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -575,8 +860,16 @@ exports[`AvatarList renders with user avatars 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "1",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -589,15 +882,22 @@ exports[`AvatarList renders with user avatars 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "1",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -611,7 +911,7 @@ exports[`AvatarList renders with user avatars 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -620,12 +920,22 @@ exports[`AvatarList renders with user avatars 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
@@ -638,8 +948,16 @@ exports[`AvatarList renders with user avatars 1`] = `
           user={
             Object {
               "email": "foo@example.com",
+              "flags": Object {
+                "newsletter_consent_prompt": false,
+              },
+              "hasPasswordAuth": true,
               "id": "2",
+              "isAuthenticated": true,
               "name": "Foo Bar",
+              "options": Object {
+                "timezone": "UTC",
+              },
               "username": "foo@example.com",
             }
           }
@@ -650,8 +968,16 @@ exports[`AvatarList renders with user avatars 1`] = `
             user={
               Object {
                 "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
                 "id": "2",
+                "isAuthenticated": true,
                 "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
                 "username": "foo@example.com",
               }
             }
@@ -663,8 +989,16 @@ exports[`AvatarList renders with user avatars 1`] = `
               user={
                 Object {
                   "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
                   "id": "2",
+                  "isAuthenticated": true,
                   "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
                   "username": "foo@example.com",
                 }
               }
@@ -677,15 +1011,22 @@ exports[`AvatarList renders with user avatars 1`] = `
                 user={
                   Object {
                     "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
                     "id": "2",
+                    "isAuthenticated": true,
                     "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
                     "username": "foo@example.com",
                   }
                 }
               >
                 <BaseAvatar
                   className="css-5o5its-StyledAvatar e1axh4r50"
-                  gravatar={true}
                   gravatarId="foo@example.com"
                   hasTooltip={false}
                   letterId="foo@example.com"
@@ -699,7 +1040,7 @@ exports[`AvatarList renders with user avatars 1`] = `
                     disabled={true}
                     title="Foo Bar (foo@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar css-5o5its-StyledAvatar e1axh4r50"
                       style={
                         Object {
@@ -708,12 +1049,22 @@ exports[`AvatarList renders with user avatars 1`] = `
                         }
                       }
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                      />
-                    </span>
+                      <span
+                        className="avatar e1axh4r50 css-dnah9z-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                        style={
+                          Object {
+                            "height": "28px",
+                            "width": "28px",
+                          }
+                        }
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
diff --git a/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap
index db013af069..ba9806cd01 100644
--- a/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap
@@ -103,7 +103,6 @@ exports[`SuggestedOwners render() should show owners when enable 1`] = `
               >
                 <BaseAvatar
                   className="tip"
-                  gravatar={true}
                   gravatarId="janedoe@example.com"
                   hasTooltip={false}
                   letterId="janedoe@example.com"
@@ -116,16 +115,21 @@ exports[`SuggestedOwners render() should show owners when enable 1`] = `
                     disabled={true}
                     title="Jane Doe (janedoe@example.com)"
                   >
-                    <span
+                    <StyledBaseAvatar
                       className="avatar tip"
                       style={Object {}}
                     >
-                      <img
-                        onError={[Function]}
-                        onLoad={[Function]}
-                        src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=64"
-                      />
-                    </span>
+                      <span
+                        className="avatar tip css-15umz1j-StyledBaseAvatar e1z0ohzl0"
+                        style={Object {}}
+                      >
+                        <img
+                          onError={[Function]}
+                          onLoad={[Function]}
+                          src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=64"
+                        />
+                      </span>
+                    </StyledBaseAvatar>
                   </Tooltip>
                 </BaseAvatar>
               </UserAvatar>
diff --git a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
new file mode 100644
index 0000000000..cfba38ed6f
--- /dev/null
+++ b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
@@ -0,0 +1,1474 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Sidebar SidebarDropdown can open "Switch Organization" sub-menu 1`] = `
+<SwitchOrganizationMenu
+  data-test-id="sidebar-switch-org-menu"
+  innerRef={[Function]}
+  onClick={[Function]}
+  onMouseEnter={[Function]}
+  onMouseLeave={[Function]}
+>
+  <div
+    className="css-1t0ls5k-SwitchOrganizationMenu-SidebarDropdownMenu ejspo4a4"
+    data-test-id="sidebar-switch-org-menu"
+    onClick={[Function]}
+    onMouseEnter={[Function]}
+    onMouseLeave={[Function]}
+  >
+    <SidebarMenuItem
+      style={
+        Object {
+          "alignItems": "center",
+        }
+      }
+      to="/organizations/new/"
+    >
+      <MenuItemLink
+        style={
+          Object {
+            "alignItems": "center",
+          }
+        }
+        to="/organizations/new/"
+      >
+        <Component
+          className="css-1vsrn4x-MenuItemLink ebifsjx1"
+          style={
+            Object {
+              "alignItems": "center",
+            }
+          }
+          to="/organizations/new/"
+        >
+          <Link
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            style={
+              Object {
+                "alignItems": "center",
+              }
+            }
+            to="/organizations/new/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              onlyActiveOnIndex={false}
+              style={
+                Object {
+                  "alignItems": "center",
+                }
+              }
+              to="/organizations/new/"
+            >
+              <a
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                onClick={[Function]}
+                style={
+                  Object {
+                    "alignItems": "center",
+                  }
+                }
+              >
+                <MenuItemLabel
+                  hasMenu={false}
+                >
+                  <span
+                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                  >
+                    <MenuItemLabelWithIcon>
+                      <span
+                        className="css-186585d-MenuItemLabelWithIcon ejspo4a1"
+                      >
+                        <AddIcon
+                          src="icon-circle-add"
+                        >
+                          <InlineSvg
+                            className="css-1at8pqz-AddIcon ejspo4a0"
+                            src="icon-circle-add"
+                          >
+                            <StyledSvg
+                              className="css-1at8pqz-AddIcon ejspo4a0"
+                              height="1em"
+                              viewBox={Object {}}
+                              width="1em"
+                            >
+                              <svg
+                                className="ejspo4a0 css-pcaft6-StyledSvg-AddIcon e2idor0"
+                                height="1em"
+                                viewBox={Object {}}
+                                width="1em"
+                              >
+                                <use
+                                  href="#test"
+                                  xlinkHref="#test"
+                                />
+                              </svg>
+                            </StyledSvg>
+                          </InlineSvg>
+                        </AddIcon>
+                        <span>
+                          Create a new organization
+                        </span>
+                      </span>
+                    </MenuItemLabelWithIcon>
+                  </span>
+                </MenuItemLabel>
+              </a>
+            </Link>
+          </Link>
+        </Component>
+      </MenuItemLink>
+    </SidebarMenuItem>
+  </div>
+</SwitchOrganizationMenu>
+`;
+
+exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
+<OrgAndUserMenu
+  innerRef={[Function]}
+  onClick={[Function]}
+  onMouseEnter={[Function]}
+  onMouseLeave={[Function]}
+  org={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
+>
+  <div
+    className="css-1d11loe-OrgAndUserMenu-SidebarDropdownMenu e1fowdfw8"
+    onClick={[Function]}
+    onMouseEnter={[Function]}
+    onMouseLeave={[Function]}
+  >
+    <SidebarOrgSummary
+      organization={
+        Object {
+          "access": Array [
+            "org:read",
+            "org:write",
+            "org:admin",
+            "project:read",
+            "project:write",
+            "project:admin",
+            "team:read",
+            "team:write",
+            "team:admin",
+          ],
+          "features": Array [],
+          "id": "3",
+          "name": "Organization Name",
+          "onboardingTasks": Array [],
+          "projects": Array [],
+          "slug": "org-slug",
+          "status": Object {
+            "id": "active",
+            "name": "active",
+          },
+          "teams": Array [],
+        }
+      }
+    >
+      <OrgSummary>
+        <div
+          className="css-1d1he2f-OrgSummary e1n88pby0"
+        >
+          <Avatar
+            className="css-6su6fj"
+            hasTooltip={false}
+            organization={
+              Object {
+                "access": Array [
+                  "org:read",
+                  "org:write",
+                  "org:admin",
+                  "project:read",
+                  "project:write",
+                  "project:admin",
+                  "team:read",
+                  "team:write",
+                  "team:admin",
+                ],
+                "features": Array [],
+                "id": "3",
+                "name": "Organization Name",
+                "onboardingTasks": Array [],
+                "projects": Array [],
+                "slug": "org-slug",
+                "status": Object {
+                  "id": "active",
+                  "name": "active",
+                },
+                "teams": Array [],
+              }
+            }
+            size={36}
+          >
+            <SlugAvatar
+              className="css-6su6fj"
+              hasTooltip={false}
+              model={
+                Object {
+                  "access": Array [
+                    "org:read",
+                    "org:write",
+                    "org:admin",
+                    "project:read",
+                    "project:write",
+                    "project:admin",
+                    "team:read",
+                    "team:write",
+                    "team:admin",
+                  ],
+                  "features": Array [],
+                  "id": "3",
+                  "name": "Organization Name",
+                  "onboardingTasks": Array [],
+                  "projects": Array [],
+                  "slug": "org-slug",
+                  "status": Object {
+                    "id": "active",
+                    "name": "active",
+                  },
+                  "teams": Array [],
+                }
+              }
+              size={36}
+            >
+              <BaseAvatar
+                className="css-6su6fj"
+                hasTooltip={false}
+                letterId="org-slug"
+                size={36}
+                style={Object {}}
+                title="org slug"
+                tooltip="org-slug"
+                type="letter_avatar"
+              >
+                <Tooltip
+                  disabled={true}
+                  title="org-slug"
+                >
+                  <StyledBaseAvatar
+                    className="avatar css-6su6fj"
+                    style={
+                      Object {
+                        "height": "36px",
+                        "width": "36px",
+                      }
+                    }
+                  >
+                    <span
+                      className="avatar css-1m7k3tg-StyledBaseAvatar e1z0ohzl0"
+                      style={
+                        Object {
+                          "height": "36px",
+                          "width": "36px",
+                        }
+                      }
+                    >
+                      <LetterAvatar
+                        displayName="org slug"
+                        identifier="org-slug"
+                      >
+                        <svg
+                          viewBox="0 0 120 120"
+                        >
+                          <rect
+                            fill="#4674ca"
+                            height="120"
+                            rx="15"
+                            ry="15"
+                            width="120"
+                            x="0"
+                            y="0"
+                          />
+                          <text
+                            fill="#FFFFFF"
+                            fontSize="65"
+                            style={
+                              Object {
+                                "dominantBaseline": "central",
+                              }
+                            }
+                            textAnchor="middle"
+                            x="50%"
+                            y="50%"
+                          >
+                            OS
+                          </text>
+                        </svg>
+                      </LetterAvatar>
+                    </span>
+                  </StyledBaseAvatar>
+                </Tooltip>
+              </BaseAvatar>
+            </SlugAvatar>
+          </Avatar>
+          <Details>
+            <div
+              className="css-r07pll-Details e1n88pby3"
+            >
+              <SummaryOrgName>
+                <div
+                  className="css-18gl0tz-SummaryOrgName e1n88pby1"
+                >
+                  Organization Name
+                </div>
+              </SummaryOrgName>
+            </div>
+          </Details>
+        </div>
+      </OrgSummary>
+    </SidebarOrgSummary>
+    <SidebarMenuItem
+      to="/settings/org-slug/"
+    >
+      <MenuItemLink
+        to="/settings/org-slug/"
+      >
+        <Component
+          className="css-1vsrn4x-MenuItemLink ebifsjx1"
+          to="/settings/org-slug/"
+        >
+          <Link
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            to="/settings/org-slug/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              onlyActiveOnIndex={false}
+              style={Object {}}
+              to="/settings/org-slug/"
+            >
+              <a
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                onClick={[Function]}
+                style={Object {}}
+              >
+                <MenuItemLabel
+                  hasMenu={false}
+                >
+                  <span
+                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                  >
+                    Organization settings
+                  </span>
+                </MenuItemLabel>
+              </a>
+            </Link>
+          </Link>
+        </Component>
+      </MenuItemLink>
+    </SidebarMenuItem>
+    <Hook
+      Components={
+        Object {
+          "SidebarMenuItem": [Function],
+        }
+      }
+      name="sidebar:organization-dropdown-menu"
+      organization={
+        Object {
+          "access": Array [
+            "org:read",
+            "org:write",
+            "org:admin",
+            "project:read",
+            "project:write",
+            "project:admin",
+            "team:read",
+            "team:write",
+            "team:admin",
+          ],
+          "features": Array [],
+          "id": "3",
+          "name": "Organization Name",
+          "onboardingTasks": Array [],
+          "projects": Array [],
+          "slug": "org-slug",
+          "status": Object {
+            "id": "active",
+            "name": "active",
+          },
+          "teams": Array [],
+        }
+      }
+    />
+    <SidebarMenuItem>
+      <MenuItemLink>
+        <Component
+          className="css-kv4jq4-MenuItemLink ebifsjx1"
+        >
+          <div
+            className="css-kv4jq4-MenuItemLink ebifsjx1"
+          >
+            <MenuItemLabel
+              hasMenu={true}
+            >
+              <span
+                className="css-rkoh57-MenuItemLabel-MenuItemLabel ebifsjx0"
+              >
+                <withOrganizations
+                  canCreateOrganization={true}
+                >
+                  <SwitchOrganization
+                    canCreateOrganization={true}
+                    organizations={Array []}
+                  >
+                    <DropdownMenu
+                      isNestedDropdown={true}
+                      keepMenuOpen={false}
+                    >
+                      <SwitchOrganizationMenuActor
+                        data-test-id="sidebar-switch-org"
+                        onClick={[Function]}
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <span
+                          className="css-1lqnj07-SwitchOrganizationMenuActor ejspo4a3"
+                          data-test-id="sidebar-switch-org"
+                          onClick={[Function]}
+                          onMouseEnter={[Function]}
+                          onMouseLeave={[Function]}
+                        >
+                          Switch organization
+                          <SubMenuCaret>
+                            <span
+                              className="css-turth4-SubMenuCaret ejspo4a2"
+                            >
+                              <i
+                                className="icon-arrow-right"
+                              />
+                            </span>
+                          </SubMenuCaret>
+                        </span>
+                      </SwitchOrganizationMenuActor>
+                    </DropdownMenu>
+                  </SwitchOrganization>
+                </withOrganizations>
+              </span>
+            </MenuItemLabel>
+          </div>
+        </Component>
+      </MenuItemLink>
+    </SidebarMenuItem>
+    <Divider>
+      <div
+        className="css-19r16al-Divider ek5mfa70"
+      />
+    </Divider>
+    <SidebarUserSummary
+      user={
+        Object {
+          "email": "foo@example.com",
+          "flags": Object {
+            "newsletter_consent_prompt": false,
+          },
+          "hasPasswordAuth": true,
+          "id": "1",
+          "isAuthenticated": true,
+          "name": "Foo Bar",
+          "options": Object {
+            "timezone": "UTC",
+          },
+          "permissions": Set {},
+          "username": "foo@example.com",
+        }
+      }
+    >
+      <UserSummary>
+        <div
+          className="css-1fpw0f9-UserSummary e1fowdfw0"
+        >
+          <UserBadgeNoOverflow
+            avatarSize={24}
+            user={
+              Object {
+                "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
+                "id": "1",
+                "isAuthenticated": true,
+                "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
+                "permissions": Set {},
+                "username": "foo@example.com",
+              }
+            }
+          >
+            <UserBadge
+              avatarSize={24}
+              className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+              hideEmail={false}
+              useLink={true}
+              user={
+                Object {
+                  "email": "foo@example.com",
+                  "flags": Object {
+                    "newsletter_consent_prompt": false,
+                  },
+                  "hasPasswordAuth": true,
+                  "id": "1",
+                  "isAuthenticated": true,
+                  "name": "Foo Bar",
+                  "options": Object {
+                    "timezone": "UTC",
+                  },
+                  "permissions": Set {},
+                  "username": "foo@example.com",
+                }
+              }
+            >
+              <StyledUserBadge
+                className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+              >
+                <div
+                  className="e1fowdfw1 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ezs94r40"
+                >
+                  <StyledAvatar
+                    size={24}
+                    user={
+                      Object {
+                        "email": "foo@example.com",
+                        "flags": Object {
+                          "newsletter_consent_prompt": false,
+                        },
+                        "hasPasswordAuth": true,
+                        "id": "1",
+                        "isAuthenticated": true,
+                        "name": "Foo Bar",
+                        "options": Object {
+                          "timezone": "UTC",
+                        },
+                        "permissions": Set {},
+                        "username": "foo@example.com",
+                      }
+                    }
+                  >
+                    <Component
+                      className="css-1u6j7yz-StyledAvatar ezs94r44"
+                      size={24}
+                      user={
+                        Object {
+                          "email": "foo@example.com",
+                          "flags": Object {
+                            "newsletter_consent_prompt": false,
+                          },
+                          "hasPasswordAuth": true,
+                          "id": "1",
+                          "isAuthenticated": true,
+                          "name": "Foo Bar",
+                          "options": Object {
+                            "timezone": "UTC",
+                          },
+                          "permissions": Set {},
+                          "username": "foo@example.com",
+                        }
+                      }
+                    >
+                      <Avatar
+                        className="css-1u6j7yz-StyledAvatar ezs94r44"
+                        hasTooltip={false}
+                        size={24}
+                        user={
+                          Object {
+                            "email": "foo@example.com",
+                            "flags": Object {
+                              "newsletter_consent_prompt": false,
+                            },
+                            "hasPasswordAuth": true,
+                            "id": "1",
+                            "isAuthenticated": true,
+                            "name": "Foo Bar",
+                            "options": Object {
+                              "timezone": "UTC",
+                            },
+                            "permissions": Set {},
+                            "username": "foo@example.com",
+                          }
+                        }
+                      >
+                        <UserAvatar
+                          className="css-1u6j7yz-StyledAvatar ezs94r44"
+                          gravatar={true}
+                          hasTooltip={false}
+                          size={24}
+                          user={
+                            Object {
+                              "email": "foo@example.com",
+                              "flags": Object {
+                                "newsletter_consent_prompt": false,
+                              },
+                              "hasPasswordAuth": true,
+                              "id": "1",
+                              "isAuthenticated": true,
+                              "name": "Foo Bar",
+                              "options": Object {
+                                "timezone": "UTC",
+                              },
+                              "permissions": Set {},
+                              "username": "foo@example.com",
+                            }
+                          }
+                        >
+                          <BaseAvatar
+                            className="css-1u6j7yz-StyledAvatar ezs94r44"
+                            gravatarId="foo@example.com"
+                            hasTooltip={false}
+                            letterId="foo@example.com"
+                            size={24}
+                            style={Object {}}
+                            title="Foo Bar"
+                            tooltip="Foo Bar (foo@example.com)"
+                            type="gravatar"
+                          >
+                            <Tooltip
+                              disabled={true}
+                              title="Foo Bar (foo@example.com)"
+                            >
+                              <StyledBaseAvatar
+                                className="avatar css-1u6j7yz-StyledAvatar ezs94r44"
+                                style={
+                                  Object {
+                                    "height": "24px",
+                                    "width": "24px",
+                                  }
+                                }
+                              >
+                                <span
+                                  className="avatar ezs94r44 css-1dbvbxh-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                                  style={
+                                    Object {
+                                      "height": "24px",
+                                      "width": "24px",
+                                    }
+                                  }
+                                >
+                                  <img
+                                    onError={[Function]}
+                                    onLoad={[Function]}
+                                    src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                                  />
+                                </span>
+                              </StyledBaseAvatar>
+                            </Tooltip>
+                          </BaseAvatar>
+                        </UserAvatar>
+                      </Avatar>
+                    </Component>
+                  </StyledAvatar>
+                  <StyledNameAndEmail>
+                    <div
+                      className="css-9l6b2w-StyledNameAndEmail ezs94r41"
+                    >
+                      <StyledName
+                        hideEmail={false}
+                        to="/settings/undefined/members/1"
+                        useLink={true}
+                      >
+                        <Component
+                          className="css-1tgyp3k-StyledName ezs94r43"
+                          hideEmail={false}
+                          to="/settings/undefined/members/1"
+                          useLink={true}
+                        >
+                          <Link
+                            className="css-1tgyp3k-StyledName ezs94r43"
+                            to="/settings/undefined/members/1"
+                          >
+                            <Link
+                              className="css-1tgyp3k-StyledName ezs94r43"
+                              onlyActiveOnIndex={false}
+                              style={Object {}}
+                              to="/settings/undefined/members/1"
+                            >
+                              <a
+                                className="css-1tgyp3k-StyledName ezs94r43"
+                                onClick={[Function]}
+                                style={Object {}}
+                              >
+                                Foo Bar
+                              </a>
+                            </Link>
+                          </Link>
+                        </Component>
+                      </StyledName>
+                      <StyledEmail>
+                        <div
+                          className="css-g5deqf-StyledEmail ezs94r42"
+                        >
+                          foo@example.com
+                        </div>
+                      </StyledEmail>
+                    </div>
+                  </StyledNameAndEmail>
+                </div>
+              </StyledUserBadge>
+            </UserBadge>
+          </UserBadgeNoOverflow>
+        </div>
+      </UserSummary>
+    </SidebarUserSummary>
+    <div>
+      <SidebarMenuItem
+        to="/settings/account/"
+      >
+        <MenuItemLink
+          to="/settings/account/"
+        >
+          <Component
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            to="/settings/account/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              to="/settings/account/"
+            >
+              <Link
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                onlyActiveOnIndex={false}
+                style={Object {}}
+                to="/settings/account/"
+              >
+                <a
+                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                  onClick={[Function]}
+                  style={Object {}}
+                >
+                  <MenuItemLabel
+                    hasMenu={false}
+                  >
+                    <span
+                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                    >
+                      User settings
+                    </span>
+                  </MenuItemLabel>
+                </a>
+              </Link>
+            </Link>
+          </Component>
+        </MenuItemLink>
+      </SidebarMenuItem>
+      <SidebarMenuItem
+        to="/settings/account/api/"
+      >
+        <MenuItemLink
+          to="/settings/account/api/"
+        >
+          <Component
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            to="/settings/account/api/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              to="/settings/account/api/"
+            >
+              <Link
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                onlyActiveOnIndex={false}
+                style={Object {}}
+                to="/settings/account/api/"
+              >
+                <a
+                  className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                  onClick={[Function]}
+                  style={Object {}}
+                >
+                  <MenuItemLabel
+                    hasMenu={false}
+                  >
+                    <span
+                      className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                    >
+                      API keys
+                    </span>
+                  </MenuItemLabel>
+                </a>
+              </Link>
+            </Link>
+          </Component>
+        </MenuItemLink>
+      </SidebarMenuItem>
+      <SidebarMenuItem
+        href="/auth/logout/"
+      >
+        <MenuItemLink
+          href="/auth/logout/"
+        >
+          <Component
+            className="css-1vsrn4x-MenuItemLink ebifsjx1"
+            href="/auth/logout/"
+          >
+            <Link
+              className="css-1vsrn4x-MenuItemLink ebifsjx1"
+              href="/auth/logout/"
+            >
+              <a
+                className="css-1vsrn4x-MenuItemLink ebifsjx1"
+                href="/auth/logout/"
+              >
+                <MenuItemLabel
+                  hasMenu={false}
+                >
+                  <span
+                    className="css-3xcmix-MenuItemLabel-MenuItemLabel ebifsjx0"
+                  >
+                    Sign out
+                  </span>
+                </MenuItemLabel>
+              </a>
+            </Link>
+          </Component>
+        </MenuItemLink>
+      </SidebarMenuItem>
+    </div>
+  </div>
+</OrgAndUserMenu>
+`;
+
+exports[`Sidebar SidebarPanel can display Broadcasts panel and mark as seen 1`] = `
+<SidebarPanelItem
+  hasSeen={false}
+  key="8"
+  link="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
+  message="Source maps are JSON files that contain information on how to map your transpiled source code back to their original source."
+  title="Learn about Source Maps"
+>
+  <SidebarPanelItemRoot>
+    <div
+      className="css-11zw7jo-SidebarPanelItemRoot er110870"
+    >
+      <Title
+        hasSeen={false}
+      >
+        <Component
+          className="css-hs42c5-Title er110871"
+          hasSeen={false}
+        >
+          <div
+            className="css-hs42c5-Title er110871"
+          >
+            Learn about Source Maps
+          </div>
+        </Component>
+      </Title>
+      <Message>
+        <div
+          className="css-1rszf37-Text-Message er110873"
+        >
+          Source maps are JSON files that contain information on how to map your transpiled source code back to their original source.
+        </div>
+      </Message>
+      <Text>
+        <div
+          className="css-7bhqyd-Text er110872"
+        >
+          <ExternalLink
+            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
+            rel="noreferrer noopener"
+            target="_blank"
+          >
+            <a
+              href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/#uploading-source-maps-to-sentry"
+              rel="noreferrer noopener"
+              target="_blank"
+            >
+              Read More
+            </a>
+          </ExternalLink>
+        </div>
+      </Text>
+    </div>
+  </SidebarPanelItemRoot>
+</SidebarPanelItem>
+`;
+
+exports[`Sidebar SidebarPanel can show Incidents in Sidebar Panel 1`] = `
+<IncidentList
+  className="incident-list"
+>
+  <ul
+    className="incident-list css-9jctl-IncidentList e1teacth0"
+  >
+    <IncidentItem
+      key="1"
+    >
+      <li
+        className="css-14n5z5w-IncidentItem e1teacth1"
+      >
+        <IncidentTitle>
+          <div
+            className="css-5djkqu-IncidentTitle e1teacth2"
+          >
+            Test Incident
+          </div>
+        </IncidentTitle>
+        <div>
+          <StatusHeader>
+            <div
+              className="css-1x43ghi-StatusHeader e1teacth3"
+            >
+              Latest updates:
+            </div>
+          </StatusHeader>
+          <StatusList>
+            <ul
+              className="css-144h8i2-StatusList e1teacth4"
+            >
+              <StatusItem
+                key="0"
+              >
+                <li
+                  className="css-ykoqmj-StatusItem e1teacth5"
+                >
+                  First Update
+                </li>
+              </StatusItem>
+              <StatusItem
+                key="1"
+              >
+                <li
+                  className="css-ykoqmj-StatusItem e1teacth5"
+                >
+                  Second Update
+                </li>
+              </StatusItem>
+            </ul>
+          </StatusList>
+        </div>
+        <div>
+          <Button
+            disabled={false}
+            external={true}
+            href="https://status.sentry.io"
+            size="small"
+          >
+            <StyledButton
+              aria-label="Learn more"
+              disabled={false}
+              external={true}
+              href="https://status.sentry.io"
+              onClick={[Function]}
+              role="button"
+              size="small"
+            >
+              <Component
+                aria-label="Learn more"
+                className="css-dvpz5-StyledButton-getColors e17811v30"
+                disabled={false}
+                external={true}
+                href="https://status.sentry.io"
+                onClick={[Function]}
+                role="button"
+                size="small"
+              >
+                <ExternalLink
+                  aria-label="Learn more"
+                  className="css-dvpz5-StyledButton-getColors e17811v30"
+                  disabled={false}
+                  href="https://status.sentry.io"
+                  onClick={[Function]}
+                  rel="noreferrer noopener"
+                  role="button"
+                  size="small"
+                  target="_blank"
+                >
+                  <a
+                    aria-label="Learn more"
+                    className="css-dvpz5-StyledButton-getColors e17811v30"
+                    disabled={false}
+                    href="https://status.sentry.io"
+                    onClick={[Function]}
+                    rel="noreferrer noopener"
+                    role="button"
+                    size="small"
+                    target="_blank"
+                  >
+                    <ButtonLabel
+                      size="small"
+                    >
+                      <Component
+                        className="css-179w01k-ButtonLabel e17811v31"
+                        size="small"
+                      >
+                        <Flex
+                          align="center"
+                          className="css-179w01k-ButtonLabel e17811v31"
+                          size="small"
+                        >
+                          <Base
+                            align="center"
+                            className="e17811v31 css-8mahft-ButtonLabel"
+                            size="small"
+                          >
+                            <div
+                              className="e17811v31 css-8mahft-ButtonLabel"
+                              is={null}
+                              size="small"
+                            >
+                              Learn more
+                            </div>
+                          </Base>
+                        </Flex>
+                      </Component>
+                    </ButtonLabel>
+                  </a>
+                </ExternalLink>
+              </Component>
+            </StyledButton>
+          </Button>
+        </div>
+      </li>
+    </IncidentItem>
+  </ul>
+</IncidentList>
+`;
+
+exports[`Sidebar can have onboarding feature 1`] = `
+<SidebarPanel
+  collapsed={false}
+  hidePanel={[Function]}
+  title="Getting Started with Sentry"
+>
+  <StyledSidebarPanel
+    collapsed={false}
+  >
+    <Component
+      className="css-ucxvfn-StyledSidebarPanel-getPositionForOrientation e1cvaskl0"
+      collapsed={false}
+    >
+      <div
+        className="css-ucxvfn-StyledSidebarPanel-getPositionForOrientation e1cvaskl0"
+      >
+        <SidebarPanelHeader>
+          <div
+            className="css-13cwjk8-SidebarPanelHeader e1cvaskl1"
+          >
+            <PanelClose
+              onClick={[Function]}
+            >
+              <a
+                className="css-3guzl0-PanelClose e1cvaskl3"
+                onClick={[Function]}
+              >
+                <span
+                  className="icon-close"
+                />
+              </a>
+            </PanelClose>
+            <Title>
+              <div
+                className="css-87m5mp-Title e1cvaskl4"
+              >
+                Getting Started with Sentry
+              </div>
+            </Title>
+          </div>
+        </SidebarPanelHeader>
+        <SidebarPanelBody>
+          <div
+            className="css-1pl3kd6-SidebarPanelBody e1cvaskl2"
+          >
+            <TodoList>
+              <div>
+                <div
+                  className="onboarding-wrapper"
+                  onClick={[Function]}
+                >
+                  <ul
+                    className="list-unstyled"
+                  >
+                    <TodoItem
+                      key="1"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "Create your first Sentry project",
+                          "detailedDescription": "Follow our quick and easy steps to set up a project and start sending errors",
+                          "display": true,
+                          "featureLocation": "organization",
+                          "location": "projects/new/",
+                          "prereq": Array [],
+                          "skippable": false,
+                          "task": 1,
+                          "title": "Create a project",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="/organizations/org-slug/projects/new/"
+                          >
+                            <h4>
+                              Create a project
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              Create your first Sentry project
+                               
+                            </p>
+                          </div>
+                        </div>
+                      </li>
+                    </TodoItem>
+                    <TodoItem
+                      key="2"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "Install Sentry's client",
+                          "detailedDescription": "Choose your platform and send an event",
+                          "display": true,
+                          "featureLocation": "project",
+                          "location": "settings/install/",
+                          "prereq": Array [
+                            1,
+                          ],
+                          "skippable": false,
+                          "task": 2,
+                          "title": "Send your first event",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="/organizations/org-slug/projects/choose/?onboarding=1&task=2"
+                          >
+                            <h4>
+                              Send your first event
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              Install Sentry's client
+                               
+                            </p>
+                          </div>
+                        </div>
+                      </li>
+                    </TodoItem>
+                    <TodoItem
+                      key="3"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "Bring your team aboard",
+                          "detailedDescription": "Let Sentry help your team triage and assign issues. Improve your workflow
+          by unlocking suggested owners, mentions, and assignment",
+                          "display": true,
+                          "featureLocation": "organization",
+                          "location": "members/",
+                          "prereq": Array [],
+                          "skippable": true,
+                          "task": 3,
+                          "title": "Invite team member",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="/organizations/org-slug/members/"
+                          >
+                            <h4>
+                              Invite team member
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              Bring your team aboard
+                               
+                            </p>
+                          </div>
+                          <a
+                            className="skip-btn btn btn-default"
+                            onClick={[Function]}
+                          >
+                            Skip
+                          </a>
+                        </div>
+                      </li>
+                    </TodoItem>
+                    <TodoItem
+                      key="4"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "Add Sentry to a second platform",
+                          "detailedDescription": "Cross platform functionality to support both your frontend and backend.",
+                          "display": true,
+                          "featureLocation": "organization",
+                          "location": "projects/new/",
+                          "prereq": Array [
+                            1,
+                            2,
+                          ],
+                          "skippable": true,
+                          "task": 4,
+                          "title": "Add a second platform",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="/organizations/org-slug/projects/new/"
+                          >
+                            <h4>
+                              Add a second platform
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              Add Sentry to a second platform
+                               
+                            </p>
+                          </div>
+                          <a
+                            className="skip-btn btn btn-default"
+                            onClick={[Function]}
+                          >
+                            Skip
+                          </a>
+                        </div>
+                      </li>
+                    </TodoItem>
+                    <TodoItem
+                      key="5"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "Know who is being affected by crashes",
+                          "detailedDescription": "Unlock features that let you
+          drill down into the number of users affected by an issue as well as get a broader sense about the quality of the application.",
+                          "display": true,
+                          "featureLocation": "absolute",
+                          "location": "https://docs.sentry.io/hosted/learn/context/#capturing-the-user",
+                          "prereq": Array [
+                            1,
+                            2,
+                          ],
+                          "skippable": true,
+                          "task": 5,
+                          "title": "Add user context",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="https://docs.sentry.io/hosted/learn/context/#capturing-the-user"
+                          >
+                            <h4>
+                              Add user context
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              Know who is being affected by crashes
+                               
+                            </p>
+                          </div>
+                          <a
+                            className="skip-btn btn btn-default"
+                            onClick={[Function]}
+                          >
+                            Skip
+                          </a>
+                        </div>
+                      </li>
+                    </TodoItem>
+                    <TodoItem
+                      key="6"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "See what releases are generating errors",
+                          "detailedDescription": "Set up commits for additional context when determining the cause of an issue
+          e.g. suggested owners and resolve issues via commit messages",
+                          "display": true,
+                          "featureLocation": "project",
+                          "location": "settings/release-tracking/",
+                          "prereq": Array [
+                            1,
+                            2,
+                          ],
+                          "skippable": true,
+                          "task": 6,
+                          "title": "Set up release tracking",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="/organizations/org-slug/projects/choose/?onboarding=1&task=6"
+                          >
+                            <h4>
+                              Set up release tracking
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              See what releases are generating errors
+                               
+                            </p>
+                          </div>
+                          <a
+                            className="skip-btn btn btn-default"
+                            onClick={[Function]}
+                          >
+                            Skip
+                          </a>
+                        </div>
+                      </li>
+                    </TodoItem>
+                    <TodoItem
+                      key="7"
+                      onSkip={[Function]}
+                      task={
+                        Object {
+                          "description": "Deminify javascript stacktraces",
+                          "detailedDescription": "View source code context obtained from stack traces in their
+          original untransformed form, which is particularly useful for debugging minified code",
+                          "display": true,
+                          "featureLocation": "absolute",
+                          "location": "https://docs.sentry.io/hosted/clients/javascript/sourcemaps/",
+                          "prereq": Array [
+                            1,
+                            2,
+                          ],
+                          "skippable": true,
+                          "task": 7,
+                          "title": "Upload sourcemaps",
+                        }
+                      }
+                    >
+                      <li
+                        className=""
+                        onMouseOut={[Function]}
+                        onMouseOver={[Function]}
+                      >
+                        <div
+                          className="todo-content"
+                        >
+                          <div
+                            className="ob-checkbox"
+                          />
+                          <a
+                            href="https://docs.sentry.io/hosted/clients/javascript/sourcemaps/"
+                          >
+                            <h4>
+                              Upload sourcemaps
+                            </h4>
+                          </a>
+                          <div>
+                            <p>
+                              Deminify javascript stacktraces
+                               
+                            </p>
+                          </div>
+                          <a
+                            className="skip-btn btn btn-default"
+                            onClick={[Function]}
+                          >
+                            Skip
+                          </a>
+                        </div>
+                      </li>
+                    </TodoItem>
+                  </ul>
+                </div>
+              </div>
+            </TodoList>
+          </div>
+        </SidebarPanelBody>
+      </div>
+    </Component>
+  </StyledSidebarPanel>
+</SidebarPanel>
+`;
diff --git a/tests/js/spec/components/sidebar/index.spec.jsx b/tests/js/spec/components/sidebar/index.spec.jsx
new file mode 100644
index 0000000000..088f0faea9
--- /dev/null
+++ b/tests/js/spec/components/sidebar/index.spec.jsx
@@ -0,0 +1,235 @@
+import React from 'react';
+
+import {mount, shallow} from 'enzyme';
+import IncidentStore from 'app/stores/incidentStore';
+import SidebarContainer, {Sidebar} from 'app/components/sidebar';
+
+describe('Sidebar', function() {
+  let wrapper;
+  let routerContext = TestStubs.routerContext();
+  let {organization, router} = routerContext.context;
+  let user = TestStubs.User();
+  let apiMocks = {};
+
+  let createWrapper = props =>
+    mount(
+      <Sidebar
+        organization={organization}
+        user={user}
+        router={router}
+        location={router.location}
+        {...props}
+      />,
+      routerContext
+    );
+
+  beforeEach(function() {
+    apiMocks.broadcasts = MockApiClient.addMockResponse({
+      url: '/broadcasts/',
+      body: [TestStubs.Broadcast()],
+    });
+    apiMocks.broadcastsMarkAsSeen = MockApiClient.addMockResponse({
+      url: '/broadcasts/',
+      method: 'PUT',
+    });
+  });
+
+  it('renders', function() {
+    wrapper = shallow(
+      <Sidebar organization={organization} user={user} router={router} />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper.find('StyledSidebar')).toHaveLength(1);
+  });
+
+  it('can toggle collapsed state', async function() {
+    wrapper = mount(
+      <SidebarContainer organization={organization} user={user} router={router} />,
+      routerContext
+    );
+
+    wrapper.find('SidebarCollapseItem').simulate('click');
+    await tick();
+    wrapper.update();
+
+    // Because of HoCs, we can't access the collapsed prop
+    // Instead check for `SidebarItemLabel` which doesn't exist in collapsed state
+    expect(wrapper.find('SidebarItemLabel')).toHaveLength(0);
+
+    wrapper.find('SidebarCollapseItem').simulate('click');
+    await tick();
+    wrapper.update();
+    expect(wrapper.find('SidebarItemLabel').length).toBeGreaterThan(0);
+  });
+
+  it('can have onboarding feature', function() {
+    wrapper = mount(
+      <SidebarContainer
+        organization={{...organization, features: ['onboarding']}}
+        user={user}
+        router={router}
+      />,
+      routerContext
+    );
+
+    expect(wrapper.find('[data-test-id="onboarding-progress-bar"]')).toHaveLength(1);
+
+    wrapper.find('[data-test-id="onboarding-progress-bar"]').simulate('click');
+    wrapper.update();
+    expect(wrapper.find('OnboardingStatus SidebarPanel')).toMatchSnapshot();
+  });
+
+  describe('SidebarDropdown', function() {
+    it('can open Sidebar org/name dropdown menu', function() {
+      wrapper = createWrapper();
+      wrapper.find('SidebarDropdownActor').simulate('click');
+      expect(wrapper.find('OrgAndUserMenu')).toHaveLength(1);
+      expect(wrapper.find('OrgAndUserMenu')).toMatchSnapshot();
+    });
+
+    it('has link to Members settings with `member:write`', function() {
+      let org = TestStubs.Organization();
+      org = {
+        ...org,
+        access: [...org.access, 'member:read'],
+      };
+
+      wrapper = createWrapper({
+        organization: org,
+      });
+      wrapper.find('SidebarDropdownActor').simulate('click');
+      expect(wrapper.find('OrgAndUserMenu')).toHaveLength(1);
+      expect(
+        wrapper.find('SidebarMenuItem[to="/settings/org-slug/members/"]')
+      ).toHaveLength(1);
+    });
+
+    it('can open "Switch Organization" sub-menu', function() {
+      jest.useFakeTimers();
+      wrapper = createWrapper();
+      wrapper.find('SidebarDropdownActor').simulate('click');
+      wrapper.find('SwitchOrganizationMenuActor').simulate('mouseEnter');
+      jest.advanceTimersByTime(500);
+      wrapper.update();
+      expect(wrapper.find('SwitchOrganizationMenu')).toHaveLength(1);
+      expect(wrapper.find('SwitchOrganizationMenu')).toMatchSnapshot();
+      jest.useRealTimers();
+    });
+  });
+
+  describe('SidebarPanel', function() {
+    it('displays empty panel when there are no Broadcasts', function() {
+      MockApiClient.addMockResponse({
+        url: '/broadcasts/',
+        body: [],
+      });
+      wrapper = createWrapper();
+
+      wrapper.find('Broadcasts SidebarItem').simulate('click');
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(1);
+
+      expect(wrapper.find('SidebarPanelItem')).toHaveLength(0);
+      expect(wrapper.find('SidebarPanelEmpty')).toHaveLength(1);
+    });
+
+    it('can display Broadcasts panel and mark as seen', function() {
+      jest.useFakeTimers();
+      wrapper = createWrapper();
+      expect(apiMocks.broadcasts).toHaveBeenCalled();
+
+      wrapper.find('Broadcasts SidebarItem').simulate('click');
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(1);
+
+      expect(wrapper.find('SidebarPanelItem')).toHaveLength(1);
+      expect(wrapper.find('SidebarPanelItem').prop('hasSeen')).toBe(false);
+
+      expect(wrapper.find('SidebarPanelItem')).toMatchSnapshot();
+
+      // Should mark as seen after a delay
+      jest.advanceTimersByTime(2000);
+      expect(apiMocks.broadcastsMarkAsSeen).toHaveBeenCalledWith(
+        '/broadcasts/',
+        expect.objectContaining({
+          data: {
+            hasSeen: '1',
+          },
+          query: {
+            id: ['8'],
+          },
+        })
+      );
+      jest.useRealTimers();
+    });
+
+    it('can toggle display of Broadcasts SidebarPanel', function() {
+      wrapper = createWrapper();
+
+      // Show Broadcasts Panel
+      wrapper.find('Broadcasts SidebarItem').simulate('click');
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(1);
+
+      // Hide Broadcasts Panel
+      wrapper.find('Broadcasts SidebarItem').simulate('click');
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(0);
+    });
+
+    it('can unmount Sidebar (and Broadcasts) and kills Broadcast timers', function() {
+      jest.useFakeTimers();
+      wrapper = createWrapper();
+      let broadcasts = wrapper.find('Broadcasts').instance();
+
+      // This will start timer to mark as seen
+      wrapper.find('Broadcasts SidebarItem').simulate('click');
+      wrapper.update();
+
+      jest.advanceTimersByTime(500);
+      expect(broadcasts.poller).toBeDefined();
+      expect(broadcasts.timer).toBeDefined();
+
+      // Unmounting will cancel timers
+      wrapper.unmount();
+      expect(broadcasts.poller).toBe(null);
+      expect(broadcasts.timer).toBe(null);
+
+      // This advances timers enough so that mark as seen should be called if it wasn't unmounted
+      jest.advanceTimersByTime(600);
+      expect(apiMocks.broadcastsMarkAsSeen).not.toHaveBeenCalled();
+    });
+
+    it('can show Incidents in Sidebar Panel', async function() {
+      wrapper = createWrapper();
+      IncidentStore.onUpdateSuccess({
+        status: {incidents: [TestStubs.Incident()]},
+      });
+      wrapper.update();
+
+      wrapper.find('Incidents').simulate('click');
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(1);
+
+      expect(wrapper.find('IncidentList')).toMatchSnapshot();
+    });
+
+    it('hides when path changes', async function() {
+      wrapper = createWrapper();
+      wrapper.update();
+
+      wrapper.find('Broadcasts SidebarItem').simulate('click');
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(1);
+
+      wrapper.setProps({
+        location: {
+          pathname: 'new-path-name',
+        },
+      });
+      wrapper.update();
+      expect(wrapper.find('SidebarPanel')).toHaveLength(0);
+    });
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
index f623f7001a..68e8ae9122 100644
--- a/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
@@ -38,18 +38,1174 @@ exports[`Issues Similar View renders with mocked data 1`] = `
        
       This is an experimental feature. Data may not be immediately available while we process merges.
     </div>
-    <LoadingIndicator>
+    <SimilarList
+      filteredItems={
+        Array [
+          Object {
+            "aggregate": Object {
+              "exception": 0.375,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "2",
+              "culprit": "Constructor.onSimilarUpdate(app/views/groupSimilar/groupingMergedList)",
+              "firstSeen": "2017-07-25T02:21:52Z",
+              "hasSeen": false,
+              "id": "274",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T02:22:19Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "ReferenceError",
+                "value": "unmergedList is not defined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/274/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323734",
+              "shortId": "INTERNAL-4K",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "ReferenceError: unmergedList is not defined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.375,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.375,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.01264,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "1",
+              "culprit": "size(app/views/groupSimilar/groupingMergedList)",
+              "firstSeen": "2017-07-25T02:20:35Z",
+              "hasSeen": true,
+              "id": "275",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T02:20:35Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'size' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/275/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323735",
+              "shortId": "INTERNAL-4M",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "TypeError: Cannot read property 'size' of undefined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.01264,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.01264,
+                ],
+              ],
+            },
+          },
+          Object {
+            "aggregate": Object {
+              "exception": 0.0008615,
+            },
+            "isBelowThreshold": true,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": Object {
+                "avatar": Object {
+                  "avatarType": "letter_avatar",
+                  "avatarUuid": null,
+                },
+                "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                "dateJoined": "2017-06-26T21:02:13.264Z",
+                "email": "billy@sentry.io",
+                "emails": Array [
+                  Object {
+                    "email": "billy@sentry.io",
+                    "id": "1",
+                    "is_verified": false,
+                  },
+                ],
+                "has2fa": false,
+                "id": "1",
+                "identities": Array [],
+                "isActive": true,
+                "isManaged": false,
+                "lastActive": "2017-07-26T18:28:19.391Z",
+                "lastLogin": "2017-07-25T01:00:50.473Z",
+                "name": "billy@sentry.io",
+                "username": "billy@sentry.io",
+              },
+              "count": "15",
+              "culprit": "stale(app/views/groupDetails)",
+              "firstSeen": "2017-07-25T02:20:35Z",
+              "hasSeen": true,
+              "id": "216",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-25T23:21:19Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'stale' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/216/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323136",
+              "shortId": "INTERNAL-2S",
+              "status": "unresolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": Object {
+                "reason": "changed_status",
+              },
+              "title": "TypeError: Cannot read property 'stale' of undefined",
+              "type": "error",
+              "userCount": 1,
+            },
+            "score": Object {
+              "exception:stacktrace:application-chunks": 0.000235,
+              "exception:stacktrace:pairs": 0.001488,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:application-chunks",
+                  0.000235,
+                ],
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.001488,
+                ],
+              ],
+            },
+          },
+        ]
+      }
+      groupId="groupId"
+      items={
+        Array [
+          Object {
+            "aggregate": Object {
+              "exception": 0.875,
+            },
+            "isBelowThreshold": false,
+            "issue": Object {
+              "annotations": Array [],
+              "assignedTo": null,
+              "count": "90",
+              "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+              "firstSeen": "2017-07-10T18:32:43Z",
+              "hasSeen": false,
+              "id": "271",
+              "isBookmarked": false,
+              "isPublic": false,
+              "isSubscribed": true,
+              "lastSeen": "2017-07-24T23:41:44Z",
+              "level": "error",
+              "logger": "javascript",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'length' of undefined",
+              },
+              "numComments": 0,
+              "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+              "project": Object {
+                "name": "Internal",
+                "slug": "internal",
+              },
+              "shareId": "312e323731",
+              "shortId": "INTERNAL-4G",
+              "status": "resolved",
+              "statusDetails": Object {},
+              "subscriptionDetails": null,
+              "title": "TypeError: Cannot read property 'length' of undefined",
+              "type": "error",
+              "userCount": 3,
+            },
+            "score": Object {
+              "exception:stacktrace:pairs": 0.875,
+            },
+            "scoresByInterface": Object {
+              "exception": Array [
+                Array [
+                  "exception:stacktrace:pairs",
+                  0.875,
+                ],
+              ],
+            },
+          },
+        ]
+      }
+      onMerge={[Function]}
+      orgId="orgId"
+      projectId="projectId"
+    >
       <div
-        className="loading"
+        className="similar-list-container"
       >
+        <SpreadLayout
+          center={true}
+          className="similar-list-header"
+          responsive={false}
+        >
+          <div
+            className="spread-layout similar-list-header center"
+          >
+            <h2>
+              <span>
+                Similar Issues
+              </span>
+              <QueryCount
+                count={4}
+                hideIfEmpty={true}
+                inline={true}
+              >
+                <div
+                  className="query-count inline"
+                >
+                  <span>
+                    (
+                  </span>
+                  <span
+                    className="query-count-value"
+                  >
+                    4
+                  </span>
+                  <span>
+                    )
+                  </span>
+                </div>
+              </QueryCount>
+            </h2>
+            <SimilarSpectrum>
+              <div
+                className="similar-spectrum"
+              >
+                <span>
+                  Similar
+                </span>
+                <span
+                  className="similar-spectrum-box high"
+                />
+                <span
+                  className="similar-spectrum-box med-high"
+                />
+                <span
+                  className="similar-spectrum-box med"
+                />
+                <span
+                  className="similar-spectrum-box low-med"
+                />
+                <span
+                  className="similar-spectrum-box low"
+                />
+                <span>
+                  Not Similar
+                </span>
+              </div>
+            </SimilarSpectrum>
+          </div>
+        </SpreadLayout>
+        <SimilarToolbar
+          onMerge={[Function]}
+        >
+          <Toolbar
+            className="similar-toolbar"
+          >
+            <div
+              className="toolbar similar-toolbar"
+            >
+              <SpreadLayout
+                center={true}
+                responsive={true}
+              >
+                <div
+                  className="spread-layout center allow-responsive"
+                >
+                  <FlowLayout
+                    style={
+                      Object {
+                        "flex": 1,
+                      }
+                    }
+                    truncate={true}
+                  >
+                    <div
+                      className="flow-layout is-truncated"
+                      style={
+                        Object {
+                          "flex": 1,
+                        }
+                      }
+                    >
+                      <FlowLayout
+                        truncate={true}
+                      >
+                        <div
+                          className="flow-layout is-truncated"
+                        >
+                          <div
+                            className="similar-toolbar-actions"
+                          >
+                            <LinkWithConfirmation
+                              className="btn btn-sm btn-default"
+                              disabled={true}
+                              message="Are you sure you want to merge these issues?"
+                              onConfirm={[Function]}
+                              title="Merging 0 issues"
+                            >
+                              <Confirm
+                                cancelText="Cancel"
+                                confirmText="Confirm"
+                                disabled={true}
+                                message="Are you sure you want to merge these issues?"
+                                onConfirm={[Function]}
+                                priority="primary"
+                              >
+                                <a
+                                  className="btn btn-sm btn-default disabled"
+                                  disabled={true}
+                                  onClick={[Function]}
+                                  title="Merging 0 issues"
+                                >
+                                  Merge
+                                   (
+                                  0
+                                  )
+                                </a>
+                                <Modal
+                                  animation={false}
+                                  autoFocus={true}
+                                  backdrop={true}
+                                  bsClass="modal"
+                                  dialogComponentClass={[Function]}
+                                  enforceFocus={true}
+                                  keyboard={true}
+                                  manager={
+                                    ModalManager {
+                                      "add": [Function],
+                                      "containers": Array [],
+                                      "data": Array [],
+                                      "handleContainerOverflow": true,
+                                      "hideSiblingNodes": true,
+                                      "isTopModal": [Function],
+                                      "modals": Array [],
+                                      "remove": [Function],
+                                    }
+                                  }
+                                  onHide={[Function]}
+                                  renderBackdrop={[Function]}
+                                  restoreFocus={true}
+                                  show={false}
+                                >
+                                  <Modal
+                                    autoFocus={true}
+                                    backdrop={true}
+                                    backdropClassName="modal-backdrop"
+                                    containerClassName="modal-open"
+                                    enforceFocus={true}
+                                    keyboard={true}
+                                    manager={
+                                      ModalManager {
+                                        "add": [Function],
+                                        "containers": Array [],
+                                        "data": Array [],
+                                        "handleContainerOverflow": true,
+                                        "hideSiblingNodes": true,
+                                        "isTopModal": [Function],
+                                        "modals": Array [],
+                                        "remove": [Function],
+                                      }
+                                    }
+                                    onEntering={[Function]}
+                                    onExited={[Function]}
+                                    onHide={[Function]}
+                                    renderBackdrop={[Function]}
+                                    restoreFocus={true}
+                                    show={false}
+                                  />
+                                </Modal>
+                              </Confirm>
+                            </LinkWithConfirmation>
+                          </div>
+                        </div>
+                      </FlowLayout>
+                    </div>
+                  </FlowLayout>
+                  <div
+                    className="similar-score-columns"
+                  >
+                    <ToolbarHeader
+                      className="similar-score-column event-count-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-count-header"
+                      >
+                        Events
+                      </div>
+                    </ToolbarHeader>
+                    <ToolbarHeader
+                      className="similar-score-column event-similar-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-similar-header"
+                      >
+                        Exception
+                      </div>
+                    </ToolbarHeader>
+                    <ToolbarHeader
+                      className="similar-score-column event-similar-header"
+                    >
+                      <div
+                        className="toolbar-header similar-score-column event-similar-header"
+                      >
+                        Message
+                      </div>
+                    </ToolbarHeader>
+                  </div>
+                </div>
+              </SpreadLayout>
+            </div>
+          </Toolbar>
+        </SimilarToolbar>
         <div
-          className="loading-indicator"
-        />
-        <div
-          className="loading-message"
+          className="similar-list"
+        >
+          <SimilarIssueItem
+            aggregate={
+              Object {
+                "exception": 0.875,
+              }
+            }
+            groupId="groupId"
+            isBelowThreshold={false}
+            issue={
+              Object {
+                "annotations": Array [],
+                "assignedTo": null,
+                "count": "90",
+                "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+                "firstSeen": "2017-07-10T18:32:43Z",
+                "hasSeen": false,
+                "id": "271",
+                "isBookmarked": false,
+                "isPublic": false,
+                "isSubscribed": true,
+                "lastSeen": "2017-07-24T23:41:44Z",
+                "level": "error",
+                "logger": "javascript",
+                "metadata": Object {
+                  "type": "TypeError",
+                  "value": "Cannot read property 'length' of undefined",
+                },
+                "numComments": 0,
+                "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+                "project": Object {
+                  "name": "Internal",
+                  "slug": "internal",
+                },
+                "shareId": "312e323731",
+                "shortId": "INTERNAL-4G",
+                "status": "resolved",
+                "statusDetails": Object {},
+                "subscriptionDetails": null,
+                "title": "TypeError: Cannot read property 'length' of undefined",
+                "type": "error",
+                "userCount": 3,
+              }
+            }
+            key="271"
+            orgId="orgId"
+            projectId="projectId"
+            score={
+              Object {
+                "exception:stacktrace:pairs": 0.875,
+              }
+            }
+            scoresByInterface={
+              Object {
+                "exception": Array [
+                  Array [
+                    "exception:stacktrace:pairs",
+                    0.875,
+                  ],
+                ],
+              }
+            }
+          >
+            <SpreadLayout
+              center={true}
+              className="group similar-issue isResolved"
+              onClick={[Function]}
+              responsive={true}
+            >
+              <div
+                className="spread-layout group similar-issue isResolved center allow-responsive"
+                onClick={[Function]}
+              >
+                <FlowLayout
+                  truncate={true}
+                >
+                  <div
+                    className="flow-layout is-truncated"
+                  >
+                    <FlowLayout
+                      truncate={true}
+                    >
+                      <div
+                        className="flow-layout is-truncated"
+                      >
+                        <div
+                          className="action-column"
+                        >
+                          <Checkbox
+                            checked={false}
+                            id="271"
+                            value="271"
+                          >
+                            <input
+                              checked={false}
+                              className="chk-select"
+                              id="271"
+                              type="checkbox"
+                              value="271"
+                            />
+                          </Checkbox>
+                        </div>
+                        <div
+                          className="event-details level-error"
+                          style={
+                            Object {
+                              "flex": 1,
+                            }
+                          }
+                        >
+                          <EventOrGroupHeader
+                            data={
+                              Object {
+                                "annotations": Array [],
+                                "assignedTo": null,
+                                "count": "90",
+                                "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+                                "firstSeen": "2017-07-10T18:32:43Z",
+                                "hasSeen": false,
+                                "id": "271",
+                                "isBookmarked": false,
+                                "isPublic": false,
+                                "isSubscribed": true,
+                                "lastSeen": "2017-07-24T23:41:44Z",
+                                "level": "error",
+                                "logger": "javascript",
+                                "metadata": Object {
+                                  "type": "TypeError",
+                                  "value": "Cannot read property 'length' of undefined",
+                                },
+                                "numComments": 0,
+                                "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+                                "project": Object {
+                                  "name": "Internal",
+                                  "slug": "internal",
+                                },
+                                "shareId": "312e323731",
+                                "shortId": "INTERNAL-4G",
+                                "status": "resolved",
+                                "statusDetails": Object {},
+                                "subscriptionDetails": null,
+                                "title": "TypeError: Cannot read property 'length' of undefined",
+                                "type": "error",
+                                "userCount": 3,
+                              }
+                            }
+                            includeLink={true}
+                            orgId="orgId"
+                            projectId="projectId"
+                          >
+                            <div
+                              className="event-issue-header"
+                            >
+                              <Title>
+                                <div
+                                  className="css-leroxf-Title-truncateStyles eex8od0"
+                                >
+                                  <ProjectLink
+                                    style={
+                                      Object {
+                                        "textDecoration": "line-through",
+                                      }
+                                    }
+                                    to={
+                                      Object {
+                                        "pathname": "/orgId/projectId/issues/271/",
+                                        "search": "",
+                                      }
+                                    }
+                                  >
+                                    <Link
+                                      onlyActiveOnIndex={false}
+                                      style={
+                                        Object {
+                                          "textDecoration": "line-through",
+                                        }
+                                      }
+                                      to={
+                                        Object {
+                                          "pathname": "/orgId/projectId/issues/271/",
+                                          "search": "",
+                                        }
+                                      }
+                                    >
+                                      <a
+                                        onClick={[Function]}
+                                        style={
+                                          Object {
+                                            "textDecoration": "line-through",
+                                          }
+                                        }
+                                      >
+                                        <Tooltip
+                                          title="Error level: Error"
+                                        >
+                                          <GroupLevel
+                                            className="tip"
+                                            level="error"
+                                            title="Error level: Error"
+                                          >
+                                            <div
+                                              className="tip css-hpn2f3-GroupLevel eex8od4"
+                                              title="Error level: Error"
+                                            />
+                                          </GroupLevel>
+                                        </Tooltip>
+                                        <EventOrGroupTitle
+                                          data={
+                                            Object {
+                                              "annotations": Array [],
+                                              "assignedTo": null,
+                                              "count": "90",
+                                              "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+                                              "firstSeen": "2017-07-10T18:32:43Z",
+                                              "hasSeen": false,
+                                              "id": "271",
+                                              "isBookmarked": false,
+                                              "isPublic": false,
+                                              "isSubscribed": true,
+                                              "lastSeen": "2017-07-24T23:41:44Z",
+                                              "level": "error",
+                                              "logger": "javascript",
+                                              "metadata": Object {
+                                                "type": "TypeError",
+                                                "value": "Cannot read property 'length' of undefined",
+                                              },
+                                              "numComments": 0,
+                                              "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+                                              "project": Object {
+                                                "name": "Internal",
+                                                "slug": "internal",
+                                              },
+                                              "shareId": "312e323731",
+                                              "shortId": "INTERNAL-4G",
+                                              "status": "resolved",
+                                              "statusDetails": Object {},
+                                              "subscriptionDetails": null,
+                                              "title": "TypeError: Cannot read property 'length' of undefined",
+                                              "type": "error",
+                                              "userCount": 3,
+                                            }
+                                          }
+                                          includeLink={true}
+                                          orgId="orgId"
+                                          projectId="projectId"
+                                          style={
+                                            Object {
+                                              "fontWeight": 600,
+                                            }
+                                          }
+                                        >
+                                          <span
+                                            style={
+                                              Object {
+                                                "fontWeight": 600,
+                                              }
+                                            }
+                                          >
+                                            <span
+                                              style={
+                                                Object {
+                                                  "marginRight": 10,
+                                                }
+                                              }
+                                            >
+                                              TypeError
+                                            </span>
+                                            <em>
+                                              length(app/views/groupSimilar/groupSimilarView)
+                                            </em>
+                                            <br />
+                                          </span>
+                                        </EventOrGroupTitle>
+                                      </a>
+                                    </Link>
+                                  </ProjectLink>
+                                </div>
+                              </Title>
+                              <Message>
+                                <div
+                                  className="css-y5cfdn-Message-truncateStyles eex8od1"
+                                >
+                                  Cannot read property 'length' of undefined
+                                </div>
+                              </Message>
+                            </div>
+                          </EventOrGroupHeader>
+                          <EventOrGroupExtraDetails
+                            annotations={Array []}
+                            assignedTo={null}
+                            count="90"
+                            culprit="length(app/views/groupSimilar/groupSimilarView)"
+                            firstSeen="2017-07-10T18:32:43Z"
+                            group={true}
+                            groupId="271"
+                            hasSeen={false}
+                            id="271"
+                            isBookmarked={false}
+                            isPublic={false}
+                            isSubscribed={true}
+                            lastSeen={null}
+                            level="error"
+                            logger="javascript"
+                            metadata={
+                              Object {
+                                "type": "TypeError",
+                                "value": "Cannot read property 'length' of undefined",
+                              }
+                            }
+                            numComments={0}
+                            orgId="orgId"
+                            permalink="http://localhost:8000/sentry/internal/issues/271/"
+                            project={
+                              Object {
+                                "name": "Internal",
+                                "slug": "internal",
+                              }
+                            }
+                            projectId="projectId"
+                            shareId="312e323731"
+                            shortId="INTERNAL-4G"
+                            showAssignee={true}
+                            showStatus={true}
+                            status="resolved"
+                            statusDetails={Object {}}
+                            subscriptionDetails={null}
+                            title="TypeError: Cannot read property 'length' of undefined"
+                            type="error"
+                            userCount={3}
+                          >
+                            <GroupExtra
+                              align="center"
+                            >
+                              <Base
+                                align="center"
+                                className="css-1pyi24d-GroupExtra eec9orn0"
+                              >
+                                <div
+                                  className="css-1pyi24d-GroupExtra eec9orn0"
+                                  is={null}
+                                >
+                                  <Box
+                                    mr={2}
+                                  >
+                                    <Base
+                                      className="css-6htue9"
+                                      mr={2}
+                                    >
+                                      <div
+                                        className="css-6htue9"
+                                        is={null}
+                                      >
+                                        <GroupShortId
+                                          shortId="INTERNAL-4G"
+                                        >
+                                          <ShortId
+                                            className="css-cp85bv-GroupShortId eec9orn2"
+                                            shortId="INTERNAL-4G"
+                                          >
+                                            <StyledShortId
+                                              className="css-cp85bv-GroupShortId eec9orn2"
+                                              onClick={[Function]}
+                                              shortId="INTERNAL-4G"
+                                            >
+                                              <div
+                                                className="eec9orn2 css-gzzipm-StyledShortId-GroupShortId ebuncw00"
+                                                onClick={[Function]}
+                                              >
+                                                <AutoSelectText>
+                                                  <div
+                                                    className="auto-select-text"
+                                                    onClick={[Function]}
+                                                  >
+                                                    INTERNAL-4G
+                                                  </div>
+                                                </AutoSelectText>
+                                              </div>
+                                            </StyledShortId>
+                                          </ShortId>
+                                        </GroupShortId>
+                                      </div>
+                                    </Base>
+                                  </Box>
+                                  <Flex
+                                    align="center"
+                                    mr={2}
+                                  >
+                                    <Base
+                                      align="center"
+                                      className="css-1cjke39"
+                                      mr={2}
+                                    >
+                                      <div
+                                        className="css-1cjke39"
+                                        is={null}
+                                      >
+                                        <TimeSince
+                                          className="hidden-xs hidden-sm"
+                                          date="2017-07-10T18:32:43Z"
+                                          suffix="old"
+                                        >
+                                          <time
+                                            className="hidden-xs hidden-sm"
+                                            dateTime="2017-07-10T18:32:43.000Z"
+                                            title="July 10, 2017 6:32 PM UTC"
+                                          >
+                                            3 months old
+                                          </time>
+                                        </TimeSince>
+                                      </div>
+                                    </Base>
+                                  </Flex>
+                                  <GroupExtraCommentsAndLogger>
+                                    <Base
+                                      className="css-1ycmuq8-GroupExtraCommentsAndLogger eec9orn1"
+                                    >
+                                      <div
+                                        className="css-1ycmuq8-GroupExtraCommentsAndLogger eec9orn1"
+                                        is={null}
+                                      >
+                                        <Box
+                                          className="event-annotation"
+                                          mr={2}
+                                        >
+                                          <Base
+                                            className="event-annotation css-6htue9"
+                                            mr={2}
+                                          >
+                                            <div
+                                              className="event-annotation css-6htue9"
+                                              is={null}
+                                            >
+                                              <Link
+                                                onlyActiveOnIndex={false}
+                                                style={Object {}}
+                                                to={
+                                                  Object {
+                                                    "pathname": "/orgId/projectId/",
+                                                    "query": Object {
+                                                      "query": "logger:javascript",
+                                                    },
+                                                  }
+                                                }
+                                              >
+                                                <a
+                                                  onClick={[Function]}
+                                                  style={Object {}}
+                                                >
+                                                  javascript
+                                                </a>
+                                              </Link>
+                                            </div>
+                                          </Base>
+                                        </Box>
+                                      </div>
+                                    </Base>
+                                  </GroupExtraCommentsAndLogger>
+                                </div>
+                              </Base>
+                            </GroupExtra>
+                          </EventOrGroupExtraDetails>
+                        </div>
+                      </div>
+                    </FlowLayout>
+                    <button
+                      className="btn btn-default btn-xs"
+                      onClick={[Function]}
+                      style={
+                        Object {
+                          "marginRight": 2,
+                        }
+                      }
+                    >
+                      Diff
+                    </button>
+                  </div>
+                </FlowLayout>
+                <div
+                  className="similar-score-columns"
+                >
+                  <count
+                    className="similar-score-column"
+                    value="90"
+                  >
+                    <span
+                      className="similar-score-column"
+                    >
+                      90
+                    </span>
+                  </count>
+                  <div
+                    className="similar-score-column"
+                    key="exception"
+                  >
+                    <Hovercard
+                      body={
+                        <SimilarScoreCard
+                          scoreList={
+                            Array [
+                              Array [
+                                "exception:stacktrace:pairs",
+                                0.875,
+                              ],
+                            ]
+                          }
+                        />
+                      }
+                      displayTimeout={100}
+                    >
+                      <span
+                        className="hovercard-container"
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <ScoreBar
+                          palette={Array []}
+                          paletteClassNames={
+                            Array [
+                              "low",
+                              "low-med",
+                              "med",
+                              "med-high",
+                              "high",
+                            ]
+                          }
+                          score={4}
+                          vertical={true}
+                        >
+                          <div
+                            className="score-bar vertical"
+                          >
+                            <div
+                              className="score-bar-bar med-high"
+                              key="0"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar med-high"
+                              key="1"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar med-high"
+                              key="2"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar med-high"
+                              key="3"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar empty"
+                              key="empty-0"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                          </div>
+                        </ScoreBar>
+                      </span>
+                    </Hovercard>
+                  </div>
+                  <div
+                    className="similar-score-column"
+                    key="message"
+                  >
+                    <Hovercard
+                      body={0}
+                      displayTimeout={100}
+                    >
+                      <span
+                        className="hovercard-container"
+                        onMouseEnter={[Function]}
+                        onMouseLeave={[Function]}
+                      >
+                        <ScoreBar
+                          palette={Array []}
+                          paletteClassNames={
+                            Array [
+                              "low",
+                              "low-med",
+                              "med",
+                              "med-high",
+                              "high",
+                            ]
+                          }
+                          score={0}
+                          vertical={true}
+                        >
+                          <div
+                            className="score-bar vertical"
+                          >
+                            <div
+                              className="score-bar-bar empty"
+                              key="empty-0"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar empty"
+                              key="empty-1"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar empty"
+                              key="empty-2"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar empty"
+                              key="empty-3"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                            <div
+                              className="score-bar-bar empty"
+                              key="empty-4"
+                              style={
+                                Object {
+                                  "height": undefined,
+                                  "width": undefined,
+                                }
+                              }
+                            />
+                          </div>
+                        </ScoreBar>
+                      </span>
+                    </Hovercard>
+                  </div>
+                </div>
+              </div>
+            </SpreadLayout>
+          </SimilarIssueItem>
+          <div
+            className="similar-items-footer"
+          >
+            <button
+              className="btn btn-default btn-xl"
+              onClick={[Function]}
+            >
+              Show 
+              3
+               issues below threshold
+            </button>
+          </div>
+        </div>
+        <Pagination
+          onCursor={[Function]}
         />
       </div>
-    </LoadingIndicator>
+    </SimilarList>
   </div>
 </GroupGroupingView>
 `;
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index c59bc4e9b8..8e441333b9 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -1872,8 +1872,16 @@ exports[`RuleBuilder renders with suggestions renders 1`] = `
                                       user={
                                         Object {
                                           "email": "janedoe@example.com",
+                                          "flags": Object {
+                                            "newsletter_consent_prompt": false,
+                                          },
+                                          "hasPasswordAuth": true,
                                           "id": "1",
+                                          "isAuthenticated": true,
                                           "name": "Jane Doe",
+                                          "options": Object {
+                                            "timezone": "UTC",
+                                          },
                                           "username": "foo@example.com",
                                         }
                                       }
@@ -1885,14 +1893,21 @@ exports[`RuleBuilder renders with suggestions renders 1`] = `
                                         user={
                                           Object {
                                             "email": "janedoe@example.com",
+                                            "flags": Object {
+                                              "newsletter_consent_prompt": false,
+                                            },
+                                            "hasPasswordAuth": true,
                                             "id": "1",
+                                            "isAuthenticated": true,
                                             "name": "Jane Doe",
+                                            "options": Object {
+                                              "timezone": "UTC",
+                                            },
                                             "username": "foo@example.com",
                                           }
                                         }
                                       >
                                         <BaseAvatar
-                                          gravatar={true}
                                           gravatarId="janedoe@example.com"
                                           hasTooltip={true}
                                           letterId="janedoe@example.com"
@@ -1906,7 +1921,7 @@ exports[`RuleBuilder renders with suggestions renders 1`] = `
                                             disabled={false}
                                             title="Jane Doe (janedoe@example.com)"
                                           >
-                                            <span
+                                            <StyledBaseAvatar
                                               className="tip avatar"
                                               style={
                                                 Object {
@@ -1916,12 +1931,23 @@ exports[`RuleBuilder renders with suggestions renders 1`] = `
                                               }
                                               title="Jane Doe (janedoe@example.com)"
                                             >
-                                              <img
-                                                onError={[Function]}
-                                                onLoad={[Function]}
-                                                src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=32"
-                                              />
-                                            </span>
+                                              <span
+                                                className="tip avatar css-15umz1j-StyledBaseAvatar e1z0ohzl0"
+                                                style={
+                                                  Object {
+                                                    "height": "28px",
+                                                    "width": "28px",
+                                                  }
+                                                }
+                                                title="Jane Doe (janedoe@example.com)"
+                                              >
+                                                <img
+                                                  onError={[Function]}
+                                                  onLoad={[Function]}
+                                                  src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=32"
+                                                />
+                                              </span>
+                                            </StyledBaseAvatar>
                                           </Tooltip>
                                         </BaseAvatar>
                                       </UserAvatar>
diff --git a/tests/js/spec/views/groupSimilarView.spec.jsx b/tests/js/spec/views/groupSimilarView.spec.jsx
index 65bbf9287a..41d5dc051d 100644
--- a/tests/js/spec/views/groupSimilarView.spec.jsx
+++ b/tests/js/spec/views/groupSimilarView.spec.jsx
@@ -2,6 +2,7 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
 import GroupSimilarView from 'app/views/groupSimilar/groupSimilarView';
+
 import issues from '../../mocks/issues';
 
 jest.mock('app/mixins/projectState', () => {
@@ -52,7 +53,9 @@ describe('Issues Similar View', function() {
     );
 
     await tick();
+    await tick();
+    wrapper.update();
     expect(mock).toHaveBeenCalled();
-    expect(wrapper).toMatchSnapshot();
+    expect(wrapper.find('GroupGroupingView')).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
index 5bc67cc754..7940cd7220 100644
--- a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -151,6 +151,7 @@ exports[`Configure should render correctly render() should render platform docs
                 "goBack": [MockFunction],
                 "goForward": [MockFunction],
                 "isActive": [MockFunction],
+                "listen": [MockFunction],
                 "location": Object {
                   "query": Object {},
                 },
diff --git a/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap
index 4a869d75ec..a31d267718 100644
--- a/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap
@@ -56,11 +56,14 @@ exports[`SettingsIndex renders 1`] = `
                         "newsletter_consent_prompt": false,
                       },
                       "hasPasswordAuth": true,
+                      "id": "1",
                       "isAuthenticated": true,
+                      "name": "Foo Bar",
                       "options": Object {
                         "timezone": "UTC",
                       },
                       "permissions": Set {},
+                      "username": "foo@example.com",
                     }
                   }
                 />
