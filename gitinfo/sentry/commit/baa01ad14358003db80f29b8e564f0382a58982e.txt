commit baa01ad14358003db80f29b8e564f0382a58982e
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Oct 1 14:03:21 2018 -0700

    fix(ui): Fix GuideDrawer accessing projectStats (#9959)
    
    Fixes JAVASCRIPT-4CQ

diff --git a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
index 2eb32978bf..50126650c8 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
@@ -49,7 +49,7 @@ const GuideDrawer = createReactClass({
       messageVariables: {
         orgSlug: data.org && data.org.slug,
         projectSlug: data.project && data.project.slug,
-        numEvents: data.project && data.projectStats[parseInt(data.project.id, 10)],
+        numEvents: data.project && data.projectStats.get(parseInt(data.project.id, 10)),
       },
     });
   },
diff --git a/src/sentry/static/sentry/app/stores/guideStore.jsx b/src/sentry/static/sentry/app/stores/guideStore.jsx
index 28a27db9de..8a15ef04e1 100644
--- a/src/sentry/static/sentry/app/stores/guideStore.jsx
+++ b/src/sentry/static/sentry/app/stores/guideStore.jsx
@@ -29,13 +29,12 @@ const GuideStore = Reflux.createStore({
       forceShow: false,
       // The previously shown guide.
       prevGuide: null,
+      // Total events received in the project in the last 30 days. id (int) -> int.
+      projectStats: new Map(),
+      // Whether the project has customized alert rules. id (int) -> bool.
+      projectRules: new Map(),
     };
 
-    // Total events received in the project in the last 30 days. id (int) -> int.
-    this.projectStats = new Map();
-    // Whether the project has customized alert rules. id (int) -> bool.
-    this.projectRules = new Map();
-
     this.api = new Client();
     this.listenTo(GuideActions.fetchSucceeded, this.onFetchSucceeded);
     this.listenTo(GuideActions.closeGuide, this.onCloseGuide);
@@ -141,8 +140,7 @@ const GuideStore = Reflux.createStore({
   },
 
   async getProjectStats(projectId) {
-    let {projectStats} = this;
-    let {org, project} = this.state;
+    let {org, project, projectStats} = this.state;
 
     if (projectStats.has(projectId)) {
       return Promise.resolve(projectStats.get(projectId));
@@ -164,8 +162,7 @@ const GuideStore = Reflux.createStore({
   },
 
   async getProjectRules(projectId) {
-    let {projectRules} = this;
-    let {org, project} = this.state;
+    let {org, project, projectRules} = this.state;
 
     if (projectRules.has(projectId)) {
       return Promise.resolve(projectRules.get(projectId));
diff --git a/tests/js/spec/components/assistant/guideDrawer.spec.jsx b/tests/js/spec/components/assistant/guideDrawer.spec.jsx
index d25a8d834e..5bc1f02fbe 100644
--- a/tests/js/spec/components/assistant/guideDrawer.spec.jsx
+++ b/tests/js/spec/components/assistant/guideDrawer.spec.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+
 import {GuideDrawer} from 'app/components/assistant/guideDrawer';
+import {shallow} from 'enzyme';
 
 describe('GuideDrawer', function() {
   let guides = [
@@ -29,6 +30,7 @@ describe('GuideDrawer', function() {
   beforeEach(function() {
     MockApiClient.addMockResponse({
       url: '/assistant/',
+      body: guides,
     });
     closeMock = MockApiClient.addMockResponse({
       method: 'PUT',
@@ -57,12 +59,12 @@ describe('GuideDrawer', function() {
     MockApiClient.clearMockResponses();
   });
 
-  it('renders tip', function() {
+  it('renders tip', async function() {
     component.onGuideStateChange({
       currentGuide: guides[1],
       currentStep: 1,
       project: {id: '10', slug: 'testproj'},
-      projectStats: {10: 56},
+      projectStats: new Map([[10, 56]]),
       org: {slug: 'testorg'},
     });
     wrapper.update();
