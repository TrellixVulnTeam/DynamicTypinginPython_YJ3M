commit dee8045155d98f5815cfc6b7c7317ad11c63065c
Author: Mark Story <mark@sentry.io>
Date:   Wed May 6 12:01:16 2020 -0400

    feat(perf-views) Add related issues to transaction summary (#18630)
    
    Let users easily get to 5 newest issues for a transaction from its
    summary page. This is another part of improving the navigation stories
    between issues and performance data.
    
    I've pulled in components from releases, but plan on refactoring into
    a shared component in a follow up pull request.
    
    Fix layout and clipping of tooltips/dropdowns. The auto was causing overflows
    when overflow:visible was used. Going to minmax() enables the browser to shrink the content to prevent overflows better.

diff --git a/src/sentry/static/sentry/app/utils/discover/styles.tsx b/src/sentry/static/sentry/app/utils/discover/styles.tsx
index 3ad64e878c..f755424dc7 100644
--- a/src/sentry/static/sentry/app/utils/discover/styles.tsx
+++ b/src/sentry/static/sentry/app/utils/discover/styles.tsx
@@ -51,9 +51,17 @@ export const ContentBox = styled('div')`
   }
 
   @media (min-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-columns: auto 325px;
+    grid-template-columns: minmax(100px, auto) 325px;
   }
 `;
+export const Main = styled('div')`
+  grid-column: 1/2;
+  max-width: 100%;
+  overflow: hidden;
+`;
+export const Side = styled('div')`
+  grid-column: 2/3;
+`;
 
 export const HeaderBox = styled(ContentBox)`
   border-bottom: 1px solid ${p => p.theme.borderDark};
diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index e99dd03036..b35814bb99 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -22,7 +22,7 @@ import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import EventView, {isAPIPayloadSimilar} from 'app/utils/discover/eventView';
-import {ContentBox} from 'app/utils/discover/styles';
+import {ContentBox, Main, Side} from 'app/utils/discover/styles';
 import Alert from 'app/components/alert';
 
 import {DEFAULT_EVENT_VIEW} from './data';
@@ -250,7 +250,7 @@ class Results extends React.Component<Props, State> {
                     total={totalValues}
                   />
                 </Top>
-                <Main eventView={eventView}>
+                <Main>
                   <Table
                     organization={organization}
                     eventView={eventView}
@@ -259,7 +259,7 @@ class Results extends React.Component<Props, State> {
                     setError={this.setError}
                   />
                 </Main>
-                <Side eventView={eventView}>{this.renderTagsTable()}</Side>
+                <Side>{this.renderTagsTable()}</Side>
               </ContentBox>
             </LightWeightNoProjectMessage>
           </StyledPageContent>
@@ -284,13 +284,5 @@ export const Top = styled('div')`
   grid-column: 1/3;
   flex-grow: 0;
 `;
-export const Main = styled('div')<{eventView: EventView}>`
-  grid-column: 1/2;
-  max-width: 100%;
-  overflow: hidden;
-`;
-export const Side = styled('div')<{eventView: EventView}>`
-  grid-column: 2/3;
-`;
 
 export default withApi(withOrganization(withGlobalSelection(Results)));
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
index 4744062ee2..8d61021577 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/content.tsx
@@ -6,7 +6,7 @@ import {Organization} from 'app/types';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import EventView from 'app/utils/discover/eventView';
 import Tags from 'app/views/eventsV2/tags';
-import {ContentBox, HeaderBox} from 'app/utils/discover/styles';
+import {ContentBox, HeaderBox, Main, Side} from 'app/utils/discover/styles';
 import DiscoverQuery from 'app/utils/discover/discoverQuery';
 
 import SummaryContentTable from './table';
@@ -14,6 +14,7 @@ import Breadcrumb from './breadcrumb';
 import UserStats from './userStats';
 import KeyTransactionButton from './keyTransactionButton';
 import TransactionSummaryCharts from './charts';
+import RelatedIssues from './relatedIssues';
 
 const TOP_SLOWEST_TRANSACTIONS = 5;
 
@@ -58,7 +59,7 @@ class SummaryContent extends React.Component<Props> {
           <StyledTitleHeader>{transactionName}</StyledTitleHeader>
         </HeaderBox>
         <ContentBox>
-          <div>
+          <StyledMain>
             <TransactionSummaryCharts
               organization={organization}
               location={location}
@@ -83,7 +84,15 @@ class SummaryContent extends React.Component<Props> {
                 />
               )}
             </DiscoverQuery>
-          </div>
+            <RelatedIssues
+              organization={organization}
+              location={location}
+              transaction={transactionName}
+              start={eventView.start}
+              end={eventView.end}
+              statsPeriod={eventView.statsPeriod}
+            />
+          </StyledMain>
           <Side>
             <UserStats
               organization={organization}
@@ -112,8 +121,9 @@ const StyledTitleHeader = styled('span')`
   ${overflowEllipsis};
 `;
 
-const Side = styled('div')`
-  grid-column: 2/3;
+// Allow overflow so chart tooltip and assignee dropdown display.
+const StyledMain = styled(Main)`
+  overflow: visible;
 `;
 
 const KeyTransactionContainer = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx
new file mode 100644
index 0000000000..88c433e271
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/relatedIssues.tsx
@@ -0,0 +1,121 @@
+import React from 'react';
+import {Location} from 'history';
+import styled from '@emotion/styled';
+import pick from 'lodash/pick';
+
+import {t, tct} from 'app/locale';
+import {DEFAULT_RELATIVE_PERIODS} from 'app/constants';
+import {URL_PARAM} from 'app/constants/globalSelectionHeader';
+import {SectionHeading} from 'app/components/charts/styles';
+import Button from 'app/components/button';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
+import {Panel, PanelBody} from 'app/components/panels';
+import space from 'app/styles/space';
+import {OrganizationSummary} from 'app/types';
+import GroupList from 'app/views/releases/detail/groupList';
+import {stringifyQueryObject} from 'app/utils/tokenizeSearch';
+
+type Props = {
+  organization: OrganizationSummary;
+  location: Location;
+  transaction: string;
+  statsPeriod?: string;
+  start?: string;
+  end?: string;
+};
+
+class RelatedIssues extends React.Component<Props> {
+  getIssuesEndpoint() {
+    const {transaction, organization, start, end, statsPeriod, location} = this.props;
+    const queryParams = {
+      start,
+      end,
+      statsPeriod,
+      limit: 5,
+      sort: 'new',
+      ...pick(location.query, [...Object.values(URL_PARAM), 'cursor']),
+    };
+    return {
+      path: `/organizations/${organization.slug}/issues/`,
+      queryParams: {
+        ...queryParams,
+        query: stringifyQueryObject({
+          query: [],
+          is: ['unresolved'],
+          transaction: [transaction],
+        }),
+      },
+    };
+  }
+
+  renderEmptyMessage = () => {
+    const {statsPeriod} = this.props;
+
+    const selectedTimePeriod = statsPeriod && DEFAULT_RELATIVE_PERIODS[statsPeriod];
+    const displayedPeriod = selectedTimePeriod
+      ? selectedTimePeriod.toLowerCase()
+      : t('given timeframe');
+
+    return (
+      <Panel>
+        <PanelBody>
+          <EmptyStateWarning small withIcon={false}>
+            {tct('No new issues for this transaction for the [timePeriod].', {
+              timePeriod: displayedPeriod,
+            })}
+          </EmptyStateWarning>
+        </PanelBody>
+      </Panel>
+    );
+  };
+
+  render() {
+    const {organization} = this.props;
+    const {path, queryParams} = this.getIssuesEndpoint();
+    const issueSearch = {
+      pathname: `/organizations/${organization.slug}/issues/`,
+      query: queryParams,
+    };
+
+    return (
+      <React.Fragment>
+        <ControlsWrapper>
+          <SectionHeading>{t('Related Issues')}</SectionHeading>
+          <Button size="small" to={issueSearch}>
+            {t('Open in Issues')}
+          </Button>
+        </ControlsWrapper>
+
+        <TableWrapper>
+          <GroupList
+            orgId={organization.slug}
+            endpointPath={path}
+            queryParams={queryParams}
+            query=""
+            canSelectGroups={false}
+            renderEmptyMessage={this.renderEmptyMessage}
+            withChart={false}
+            withPagination={false}
+          />
+        </TableWrapper>
+      </React.Fragment>
+    );
+  }
+}
+
+const ControlsWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  margin-bottom: ${space(1)};
+`;
+
+const TableWrapper = styled('div')`
+  margin-bottom: ${space(4)};
+  ${Panel} {
+    /* smaller space between table and pagination */
+    margin-bottom: -${space(1)};
+  }
+`;
+
+export default RelatedIssues;
diff --git a/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx b/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
index 921703edc2..f1b2b08826 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/groupList.jsx
@@ -32,6 +32,7 @@ const GroupList = createReactClass({
     endpointPath: PropTypes.string,
     renderEmptyMessage: PropTypes.func,
     queryParams: PropTypes.object,
+    withPagination: PropTypes.bool,
   },
 
   contextTypes: {
@@ -44,6 +45,7 @@ const GroupList = createReactClass({
     return {
       canSelectGroups: true,
       withChart: true,
+      withPagination: true,
     };
   },
 
@@ -165,7 +167,13 @@ const GroupList = createReactClass({
   },
 
   render() {
-    const {orgId, canSelectGroups, withChart, renderEmptyMessage} = this.props;
+    const {
+      orgId,
+      canSelectGroups,
+      withChart,
+      renderEmptyMessage,
+      withPagination,
+    } = this.props;
     const {loading, error, groups, memberList, pageLinks} = this.state;
 
     if (loading) {
@@ -211,7 +219,9 @@ const GroupList = createReactClass({
             })}
           </PanelBody>
         </Panel>
-        <Pagination pageLinks={pageLinks} onCursor={this.onCursorChange} />
+        {withPagination && (
+          <Pagination pageLinks={pageLinks} onCursor={this.onCursorChange} />
+        )}
       </React.Fragment>
     );
   },
