commit e4fe29548468d1d618b53435e655acb755d00116
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 7 11:49:06 2015 -0800

    Allowing system configuration to be changed via admin

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 4259f08935..7b66ebaa98 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -4,6 +4,7 @@ import {Redirect, Route, IndexRoute} from 'react-router';
 import Admin from './views/admin';
 import AdminOrganizations from './views/adminOrganizations';
 import AdminOverview from './views/adminOverview';
+import AdminSettings from './views/adminSettings';
 import App from './views/app';
 import GroupActivity from './views/groupActivity';
 import GroupDetails from './views/groupDetails';
@@ -52,8 +53,9 @@ let routes = (
     </Route>
 
     <Route path="/manage/" component={Admin}>
-      <Route path="organizations/" component={AdminOrganizations} />
       <IndexRoute component={AdminOverview} />
+      <Route path="organizations/" component={AdminOrganizations} />
+      <Route path="settings/" component={AdminSettings} />
     </Route>
 
     <Redirect from="/share/group/:shareId/" to="/share/issue/:shareId/" />
diff --git a/src/sentry/static/sentry/app/views/admin/index.jsx b/src/sentry/static/sentry/app/views/admin/index.jsx
index ce30f002e9..3bc85b47cc 100644
--- a/src/sentry/static/sentry/app/views/admin/index.jsx
+++ b/src/sentry/static/sentry/app/views/admin/index.jsx
@@ -24,11 +24,12 @@ const Admin = React.createClass({
                 <div className="col-md-2">
                   <h6 className="nav-header">System</h6>
                   <ul className="nav nav-stacked">
-                    <ListLink to="/manage/">Overview</ListLink>
+                    <ListLink index={true} to="/manage/">Overview</ListLink>
                     <li><a href={`${urlPrefix}/manage/queue/`}>Queue</a></li>
                     <li><a href={`${urlPrefix}/manage/environment/`}>Environment</a></li>
                     <li><a href={`${urlPrefix}/manage/packages/`}>Packages</a></li>
                     <li><a href={`${urlPrefix}/manage/mail/`}>Mail</a></li>
+                    <ListLink to="/manage/settings/">Settings</ListLink>
                   </ul>
 
                   <h6 className="nav-header">Manage</h6>
diff --git a/src/sentry/static/sentry/app/views/adminSettings.jsx b/src/sentry/static/sentry/app/views/adminSettings.jsx
new file mode 100644
index 0000000000..15ec552815
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/adminSettings.jsx
@@ -0,0 +1,163 @@
+import React from 'react';
+import _ from 'underscore';
+
+import AlertActions from '../actions/alertActions';
+import ApiMixin from '../mixins/apiMixin';
+import IndicatorStore from '../stores/indicatorStore';
+import LoadingIndicator from '../components/loadingIndicator';
+import {t} from '../locale';
+import {getOption, getOptionField} from '../options';
+
+// TODO(dcramer): a lot of this is copied from InstallWizard
+const SettingsList = React.createClass({
+  getInitialState() {
+    let options = {...this.props.options};
+    let requiredOptions = Object.keys(_.pick(options, option => option.field.required));
+    let fields = [];
+    for (let option of Object.keys(options)) {
+      if (!options[option].value) {
+        options[option].value = getOption(option).defaultValue;
+      }
+      fields.push(getOptionField(option, this.onFieldChange.bind(this, option), options.value));
+    }
+
+    return {
+      options: options,
+      required: requiredOptions,
+      fields: fields,
+    };
+  },
+
+  onFieldChange(name, value) {
+    let options = {...this.state.options};
+    options[name].value = value;
+    this.setState({
+      options: options
+    });
+  },
+
+  onClick() {
+    this.props.onSubmit(this.state.options);
+  },
+
+  render() {
+    let {fields, required, options} = this.state;
+    let formValid = !required.filter(option => !options[option].value).length;
+    let disabled = !formValid || this.props.formDisabled;
+
+    return (
+      <div>
+        {fields}
+        <div className="form-actions" style={{marginTop: 25}}>
+          <button className="btn btn-primary"
+                  disabled={disabled} onClick={this.onClick}>{t('Save Changes')}</button>
+        </div>
+      </div>
+    );
+  }
+});
+
+const AdminSettings = React.createClass({
+  mixins: [
+    ApiMixin
+  ],
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      submitInProgress: false,
+      submitError: null,
+      options: {}
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  remountComponent() {
+    this.setState(this.getInitialState(), this.fetchData);
+  },
+
+  fetchData(callback) {
+    this.api.request('/internal/options/', {
+      method: 'GET',
+      success: (data) => {
+        this.setState({
+          options: data,
+          loading: false,
+          error: false
+        });
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+      }
+    });
+  },
+
+  onSubmit(options) {
+    this.setState({
+      submitInProgress: true,
+      submitError: false,
+    });
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+
+    let data = _.mapObject(options, option => option.value);
+    this.api.request('/internal/options/', {
+      method: 'PUT',
+      data: data,
+      success: () => {
+        this.setState({
+          submitInProgress: false,
+        });
+        AlertActions.addAlert(t('Your changes were saved, and will propagate to services shortly.'), 'success');
+      },
+      error: () => {
+        this.setState({
+          submitInProgress: false,
+          submitError: true,
+        });
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
+    });
+  },
+
+  render() {
+    let {error, loading, options, submitError, submitInProgress} = this.state;
+
+    return (
+      <div>
+        <h3>Settings</h3>
+
+        {loading ?
+          <LoadingIndicator>
+            Please wait while we load configuration.
+          </LoadingIndicator>
+        : (error ?
+          <div className="loading-error">
+            <span className="icon" />
+            {t('We were unable to load the required configuration from the Sentry server. Please take a look at the service logs.')}
+          </div>
+        :
+          <div>
+            {submitError &&
+              <p>{t('We were unable to submit your changes to the Sentry server. Please take a look at the service logs.')}</p>
+            }
+            <SettingsList
+                options={options}
+                onSubmit={this.onSubmit}
+                formDisabled={submitInProgress} />
+          </div>
+        )}
+      </div>
+    );
+  }
+});
+
+export default AdminSettings;
