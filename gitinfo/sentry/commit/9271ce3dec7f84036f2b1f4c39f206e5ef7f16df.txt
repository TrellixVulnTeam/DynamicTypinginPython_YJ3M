commit 9271ce3dec7f84036f2b1f4c39f206e5ef7f16df
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue May 17 22:42:30 2016 +0200

    Fixed and improved error handling for 2fa flows.

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index 831d8e463f..c2785dc23d 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -15,6 +15,8 @@ import hashlib
 from u2flib_server import u2f
 from u2flib_server import jsapi as u2f_jsapi
 
+from cryptography.exceptions import InvalidSignature, InvalidKey
+
 from django.db import models
 from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
@@ -433,10 +435,12 @@ class U2fInterface(AuthenticatorInterface):
         )
 
     def validate_response(self, request, challenge, response):
-        # XXX: handle error
-        counter, touch = u2f.verify_authenticate([self.get_u2f_device()],
-                                                 challenge, response,
-                                                 self.u2f_facets)
+        try:
+            counter, touch = u2f.verify_authenticate([self.get_u2f_device()],
+                                                     challenge, response,
+                                                     self.u2f_facets)
+        except (InvalidSignature, InvalidKey, StopIteration):
+            return False
         return True
 
 
diff --git a/src/sentry/templates/sentry/twofactor.html b/src/sentry/templates/sentry/twofactor.html
index 4f845313be..3d780a9702 100644
--- a/src/sentry/templates/sentry/twofactor.html
+++ b/src/sentry/templates/sentry/twofactor.html
@@ -22,9 +22,8 @@
       <form class="form-stacked" action="" method="post" autocomplete="off">
         {% csrf_token %}
 
+        {{ form|as_crispy_errors }}
         {% block twofactor_form_body %}
-          {{ form|as_crispy_errors }}
-
           {% for field in form %}
             {{ field|as_crispy_field }}
           {% endfor %}
diff --git a/src/sentry/web/frontend/twofactor.py b/src/sentry/web/frontend/twofactor.py
index 6d824a5985..7a122a6407 100644
--- a/src/sentry/web/frontend/twofactor.py
+++ b/src/sentry/web/frontend/twofactor.py
@@ -4,6 +4,7 @@ import time
 
 from django.http import HttpResponseRedirect
 from django.core.urlresolvers import reverse
+from django.utils.translation import ugettext as _
 
 from sentry.web.frontend.base import BaseView
 from sentry.web.forms.accounts import TwoFactorForm
@@ -19,10 +20,12 @@ class TwoFactorAuthView(BaseView):
         auth.login(request, user, passed_2fa=True)
         return HttpResponseRedirect(auth.get_login_redirect(request))
 
-    def fail_signin(self, request, user):
+    def fail_signin(self, request, user, form):
         # Ladies and gentlemen: he world's shittiest bruteforce
         # prevention.
         time.sleep(2.0)
+        form.errors['__all__'] = [
+            _('Invalid confirmation code. Try again.')]
 
     def negotiate_interface(self, request, interfaces):
         if len(interfaces) == 1:
@@ -62,14 +65,16 @@ class TwoFactorAuthView(BaseView):
             if activation is not None and activation.type == 'challenge':
                 challenge = activation.challenge
         elif 'challenge' in request.POST:
-            challenge = json.loads(request.POST.get('challenge'))
+            challenge = json.loads(request.POST['challenge'])
+
+        form = TwoFactorForm()
 
         # If an OTP response was supplied, we try to make it pass.
         otp = request.POST.get('otp')
         if otp:
             if Authenticator.objects.validate_otp(user, otp):
                 return self.perform_signin(request, user)
-            self.fail_signin(request, user)
+            self.fail_signin(request, user, form)
 
         # If a challenge and response exists, validate
         if challenge:
@@ -78,9 +83,8 @@ class TwoFactorAuthView(BaseView):
                 response = json.loads(response)
                 if interface.validate_response(request, challenge, response):
                     return self.perform_signin(request, user)
-                self.fail_signin(request, user)
+                self.fail_signin(request, user, form)
 
-        form = TwoFactorForm()
         return render_to_response(['sentry/twofactor_%s.html' %
                                    interface.interface_id,
                                    'sentry/twofactor.html'], {
