commit 8fb04f667360e19df7c8eacd91ff34646de76221
Author: Matej Minar <matej.minar@sentry.io>
Date:   Mon Feb 24 14:58:43 2020 +0100

    ref(ts): Convert <ConfirmDelete> to typescript (#17240)
    
    * ref(ts): Convert <ConfirmDelete> to typescript
    
    * removed div from label

diff --git a/src/sentry/static/sentry/app/components/confirmDelete.jsx b/src/sentry/static/sentry/app/components/confirmDelete.jsx
deleted file mode 100644
index c235be33ca..0000000000
--- a/src/sentry/static/sentry/app/components/confirmDelete.jsx
+++ /dev/null
@@ -1,88 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Confirm from 'app/components/confirm';
-import Alert from 'app/components/alert';
-import Input from 'app/views/settings/components/forms/controls/input';
-import Field from 'app/views/settings/components/forms/field';
-import {t} from 'app/locale';
-
-class ConfirmDelete extends React.PureComponent {
-  static propTypes = {
-    onConfirm: PropTypes.func.isRequired,
-    confirmText: PropTypes.string.isRequired,
-    confirmInput: PropTypes.string.isRequired,
-    cancelText: PropTypes.string.isRequired,
-    priority: PropTypes.oneOf(['primary', 'danger']).isRequired,
-    message: PropTypes.node,
-    /**
-     * Renderer that passes:
-     * `confirm`: Allows renderer to perform confirm action
-     * `close`: Allows renderer to toggle confirm modal
-     */
-    renderMessage: PropTypes.func,
-    disabled: PropTypes.bool,
-    onConfirming: PropTypes.func,
-    onCancel: PropTypes.func,
-  };
-
-  static defaultProps = {
-    priority: 'primary',
-    cancelText: t('Cancel'),
-    confirmText: t('Confirm'),
-  };
-
-  constructor(...args) {
-    super(...args);
-
-    this.state = {
-      disableConfirmButton: true,
-      confirmInput: '',
-    };
-  }
-
-  handleChange = evt => {
-    const input = evt.target.value;
-    if (input === this.props.confirmInput) {
-      this.setState({disableConfirmButton: false, confirmInput: input});
-    } else {
-      this.setState({disableConfirmButton: true, confirmInput: input});
-    }
-  };
-
-  render() {
-    const {confirmInput, message, ...props} = this.props;
-    const {disableConfirmButton} = this.state;
-
-    return (
-      <Confirm
-        {...props}
-        bypass={false}
-        disableConfirmButton={disableConfirmButton}
-        message={
-          <React.Fragment>
-            <Alert type="error">{message}</Alert>
-            <Field
-              p={0}
-              flexibleControlStateSize
-              inline={false}
-              label={
-                <div>
-                  Please enter <code>{confirmInput}</code> to confirm the deletion
-                </div>
-              }
-            >
-              <Input
-                type="text"
-                placeholder={confirmInput}
-                onChange={this.handleChange}
-                value={this.state.confirmInput}
-              />
-            </Field>
-          </React.Fragment>
-        }
-      />
-    );
-  }
-}
-
-export default ConfirmDelete;
diff --git a/src/sentry/static/sentry/app/components/confirmDelete.tsx b/src/sentry/static/sentry/app/components/confirmDelete.tsx
new file mode 100644
index 0000000000..ae7bc3abba
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/confirmDelete.tsx
@@ -0,0 +1,89 @@
+import React from 'react';
+
+import Confirm from 'app/components/confirm';
+import Alert from 'app/components/alert';
+import Input from 'app/views/settings/components/forms/controls/input';
+import Field from 'app/views/settings/components/forms/field';
+import {t} from 'app/locale';
+import Button from 'app/components/button';
+
+const defaultProps = {
+  priority: 'primary' as React.ComponentProps<typeof Button>['priority'],
+  cancelText: t('Cancel'),
+  confirmText: t('Confirm'),
+};
+
+type Props = {
+  onConfirm: () => void;
+  confirmInput: string;
+  message?: React.ReactNode;
+  renderMessage?: React.ComponentProps<typeof Confirm>['renderMessage'];
+  children?: React.ComponentProps<typeof Confirm>['children'];
+  disabled?: boolean;
+  onConfirming?: () => void;
+  onCancel?: () => void;
+} & typeof defaultProps;
+
+type State = {
+  disableConfirmButton: boolean;
+  confirmInput: string;
+};
+
+class ConfirmDelete extends React.PureComponent<Props, State> {
+  static defaultProps = defaultProps;
+
+  state = {
+    disableConfirmButton: true,
+    confirmInput: '',
+  };
+
+  handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {
+    const input = evt.target.value;
+    if (input === this.props.confirmInput) {
+      this.setState({disableConfirmButton: false, confirmInput: input});
+    } else {
+      this.setState({disableConfirmButton: true, confirmInput: input});
+    }
+  };
+
+  renderConfirmMessage = () => {
+    const {message, confirmInput} = this.props;
+
+    return (
+      <React.Fragment>
+        <Alert type="error">{message}</Alert>
+        <Field
+          p={0}
+          flexibleControlStateSize
+          inline={false}
+          label={t(
+            'Please enter %s to confirm the deletion',
+            <code>{confirmInput}</code>
+          )}
+        >
+          <Input
+            type="text"
+            placeholder={confirmInput}
+            onChange={this.handleChange}
+            value={this.state.confirmInput}
+          />
+        </Field>
+      </React.Fragment>
+    );
+  };
+
+  render() {
+    const {disableConfirmButton} = this.state;
+
+    return (
+      <Confirm
+        {...this.props}
+        bypass={false}
+        disableConfirmButton={disableConfirmButton}
+        message={this.renderConfirmMessage()}
+      />
+    );
+  }
+}
+
+export default ConfirmDelete;
diff --git a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
index 9745548b3a..04afba6267 100644
--- a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
@@ -58,13 +58,13 @@ exports[`ConfirmDelete renders 1`] = `
             flexibleControlStateSize={true}
             inline={false}
             label={
-              <div>
-                Please enter 
+              Array [
+                "Please enter ",
                 <code>
                   CoolOrg
-                </code>
-                 to confirm the deletion
-              </div>
+                </code>,
+                " to confirm the deletion",
+              ]
             }
             p={0}
             required={false}
@@ -89,13 +89,13 @@ exports[`ConfirmDelete renders 1`] = `
                       <div
                         className="css-1c18lg-FieldLabel e16ushrl0"
                       >
-                        <div>
-                          Please enter 
-                          <code>
-                            CoolOrg
-                          </code>
-                           to confirm the deletion
-                        </div>
+                        Please enter 
+                        <code
+                          key="1"
+                        >
+                          CoolOrg
+                        </code>
+                         to confirm the deletion
                          
                       </div>
                     </FieldLabel>
