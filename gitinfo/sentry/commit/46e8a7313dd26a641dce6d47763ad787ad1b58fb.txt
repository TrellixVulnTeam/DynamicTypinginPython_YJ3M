commit 46e8a7313dd26a641dce6d47763ad787ad1b58fb
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 16 11:56:23 2012 -0700

    Cover project key creation behavior in tests

diff --git a/sentry/models.py b/sentry/models.py
index ec6a96a2d5..ffd2db8208 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -745,7 +745,7 @@ def create_default_project(created_models, verbosity=2, **kwargs):
                 print 'done!'
 
 
-def create_team_for_project(instance, created, **kwargs):
+def create_team_and_keys_for_project(instance, created, **kwargs):
     if not created:
         return
 
@@ -819,9 +819,9 @@ post_syncdb.connect(
     weak=False,
 )
 post_save.connect(
-    create_team_for_project,
+    create_team_and_keys_for_project,
     sender=Project,
-    dispatch_uid="create_team_for_project",
+    dispatch_uid="create_team_and_keys_for_project",
     weak=False,
 )
 post_save.connect(
diff --git a/tests/sentry/models/tests.py b/tests/sentry/models/tests.py
index fa75ee2599..61ddc5befd 100644
--- a/tests/sentry/models/tests.py
+++ b/tests/sentry/models/tests.py
@@ -4,6 +4,7 @@ from __future__ import absolute_import
 
 
 from django.core import mail
+from django.contrib.auth.models import User
 from sentry.models import Project, ProjectKey, Group, Event, Team, \
   MessageFilterValue, MessageCountByMinute, FilterValue, PendingTeamMember
 
@@ -52,6 +53,17 @@ class ProjectKeyTest(TestCase):
         with self.Settings(SENTRY_URL_PREFIX='http://example.com:81'):
             self.assertEquals(key.get_dsn(), 'http://public:secret@example.com:81/default')
 
+    def test_key_is_created_for_project_with_existing_team(self):
+        user = User.objects.create(username='admin')
+        team = Team.objects.create(name='Test', slug='test', owner=user)
+        project = Project.objects.create(name='Test', slug='test', owner=user, team=team)
+        self.assertTrue(project.key_set.filter(user=user).exists())
+
+    def test_key_is_created_for_project_with_new_team(self):
+        user = User.objects.create(username='admin')
+        project = Project.objects.create(name='Test', slug='test', owner=user)
+        self.assertTrue(project.key_set.filter(user=user).exists())
+
 
 class PendingTeamMemberTest(TestCase):
     fixtures = ['tests/fixtures/views.json']
