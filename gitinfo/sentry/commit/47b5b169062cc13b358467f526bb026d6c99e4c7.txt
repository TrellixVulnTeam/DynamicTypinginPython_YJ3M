commit 47b5b169062cc13b358467f526bb026d6c99e4c7
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Tue Aug 13 20:35:43 2019 -0400

    chore(js): Replace all instances of objectToArray with Object.entries (#14380)

diff --git a/src/sentry/static/sentry/app/components/events/extraData.jsx b/src/sentry/static/sentry/app/components/events/extraData.jsx
index b818ea72b8..3b55ec67f2 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.jsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 
-import {objectToArray} from 'app/utils';
 import {t} from 'app/locale';
 import ErrorBoundary from 'app/components/errorBoundary';
 import EventDataSection from 'app/components/events/eventDataSection';
@@ -30,7 +29,7 @@ class EventExtraData extends React.Component {
   };
 
   render() {
-    const extraDataArray = objectToArray(this.props.event.context);
+    const extraDataArray = Object.entries(this.props.event.context);
     return (
       <div className="extra-data">
         <EventDataSection
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
index 1e46dec8d4..a0a153a730 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
@@ -1,7 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {objectToArray} from 'app/utils';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 
 class CSPContent extends React.Component {
@@ -16,7 +15,7 @@ class CSPContent extends React.Component {
         <h4>
           <span>{data.effective_directive}</span>
         </h4>
-        <KeyValueList data={objectToArray(data)} isContextData={true} />
+        <KeyValueList data={Object.entries(data)} isContextData={true} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frameRegisters.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frameRegisters.jsx
index 1b4d2df3e2..7b3e5f9100 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frameRegisters.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frameRegisters.jsx
@@ -5,7 +5,7 @@ import styled from 'react-emotion';
 
 import Tooltip from 'app/components/tooltip';
 import {t} from 'app/locale';
-import {defined, objectToArray} from 'app/utils';
+import {defined} from 'app/utils';
 
 const REGISTER_VIEWS = [t('Hexadecimal'), t('Numeric')];
 
@@ -68,7 +68,7 @@ class FrameRegisters extends React.Component {
   };
 
   render() {
-    const registers = objectToArray(this.props.data).filter(register =>
+    const registers = Object.entries(this.props.data).filter(register =>
       defined(register[1])
     );
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
index 8f87f6c546..343c0b18ea 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
@@ -1,7 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {objectToArray} from 'app/utils';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 
 class FrameVariables extends React.Component {
@@ -16,7 +15,7 @@ class FrameVariables extends React.Component {
   };
 
   render() {
-    const data = objectToArray(this.props.data);
+    const data = Object.entries(this.props.data);
 
     return (
       <KeyValueList data={data} isContextData={true} onClick={this.preventToggling} />
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx b/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
index 4272f8b180..7651cfc9c0 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
@@ -5,12 +5,11 @@ import SentryTypes from 'app/sentryTypes';
 import EventDataSection from 'app/components/events/eventDataSection';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 import {t} from 'app/locale';
-import {objectToArray} from 'app/utils';
 
 function getView(view, data) {
   switch (view) {
     case 'report':
-      return <KeyValueList data={objectToArray(data)} isContextData={true} />;
+      return <KeyValueList data={Object.entries(data)} isContextData={true} />;
     case 'raw':
       return <pre>{JSON.stringify({'csp-report': data}, null, 2)}</pre>;
     default:
diff --git a/src/sentry/static/sentry/app/components/events/packageData.jsx b/src/sentry/static/sentry/app/components/events/packageData.jsx
index eef7c4a610..07cfa53edc 100644
--- a/src/sentry/static/sentry/app/components/events/packageData.jsx
+++ b/src/sentry/static/sentry/app/components/events/packageData.jsx
@@ -1,6 +1,5 @@
 import React from 'react';
 
-import {objectToArray} from 'app/utils';
 import {t} from 'app/locale';
 import ClippedBox from 'app/components/clippedBox';
 import ErrorBoundary from 'app/components/errorBoundary';
@@ -18,7 +17,7 @@ class EventPackageData extends React.Component {
   }
 
   render() {
-    const packages = objectToArray(this.props.event.packages);
+    const packages = Object.entries(this.props.event.packages);
 
     return (
       <EventDataSection event={this.props.event} type="packages" title={t('Packages')}>
diff --git a/src/sentry/static/sentry/app/components/modals/debugFileSourceModal.jsx b/src/sentry/static/sentry/app/components/modals/debugFileSourceModal.jsx
index fa7911f793..7bc8e9bc52 100644
--- a/src/sentry/static/sentry/app/components/modals/debugFileSourceModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/debugFileSourceModal.jsx
@@ -3,7 +3,6 @@ import React from 'react';
 
 import {t, tct} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
-import {objectToArray} from 'app/utils';
 import {
   AWS_REGIONS,
   DEBUG_SOURCE_LAYOUTS,
@@ -15,7 +14,7 @@ import Form from 'app/views/settings/components/forms/form';
 import FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';
 
 function objectToChoices(obj) {
-  return objectToArray(obj).map(([key, value]) => [key, t(value)]);
+  return Object.entries(obj).map(([key, value]) => [key, t(value)]);
 }
 
 const commonFields = {
diff --git a/src/sentry/static/sentry/app/utils.tsx b/src/sentry/static/sentry/app/utils.tsx
index 0645d28be8..7eed2f0192 100644
--- a/src/sentry/static/sentry/app/utils.tsx
+++ b/src/sentry/static/sentry/app/utils.tsx
@@ -62,9 +62,6 @@ function objectMatchesSubset(obj?: object, other?: object, deep?: boolean): bool
   return true;
 }
 
-// TODO: instances of objectToArray should be refactored
-export const objectToArray = Object.entries;
-
 export function intcomma(x: number): string {
   return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
 }
diff --git a/tests/js/spec/components/toggleRawEventData.spec.jsx b/tests/js/spec/components/toggleRawEventData.spec.jsx
index 84d190bada..80256397d2 100644
--- a/tests/js/spec/components/toggleRawEventData.spec.jsx
+++ b/tests/js/spec/components/toggleRawEventData.spec.jsx
@@ -2,7 +2,6 @@ import React from 'react';
 import {shallow} from 'enzyme';
 import EventDataSection from 'app/components/events/eventDataSection';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
-import {objectToArray} from 'app/utils';
 
 const data = {
   metadata: {
@@ -63,7 +62,7 @@ describe('KeyValueList', function() {
     plussomeotherstuff: 'here',
     andthis: 0,
   };
-  const extraDataArray = objectToArray(context);
+  const extraDataArray = Object.entries(context);
 
   it('renders formatted', function() {
     const component = shallow(
