commit 713c727cf824ca28cb37def2c2faa6d786334472
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 29 13:15:42 2014 -0800

    More react basics

diff --git a/bower.json b/bower.json
index 97a268b610..eb2fc79a4c 100644
--- a/bower.json
+++ b/bower.json
@@ -23,7 +23,8 @@
     "platformicons": "1.0.2",
     "typeahead.js": "~0.10.5",
     "raven-js": "~1.1.16",
-    "react": "~0.12.2"
+    "react": "~0.12.2",
+    "react-router": "~0.11.6"
   },
   "resolutions": {
     "angular": "1.2.9",
diff --git a/gulpfile.js b/gulpfile.js
index 3ff0e04428..c03fdc9c58 100644
--- a/gulpfile.js
+++ b/gulpfile.js
@@ -45,10 +45,6 @@ var jsDistros = {
     file("app/models/group.js")
   ],
 
-  "react": [
-    vendorFile("react/react-with-addons.min.js")
-  ],
-
   "legacy-app": [
     file("app/init.js"),
     file("app/charts.js"),
@@ -124,37 +120,6 @@ function buildJsCompileTask(name, fileList) {
   };
 }
 
-function buildWebpackCompileTask(name, entryPoint) {
-  // TODO(dcramer): sourcemaps
-  return function(){
-    return gulp.src(entryPoint)
-      .pipe(gp_cached('js-' + name))
-      .pipe(gp_webpack({
-        entry: entryPoint,
-        module: {
-          loaders: [
-            {
-              test: /\.jsx$/,
-              loader: 'jsx-loader?insertPragma=React.DOM&harmony'
-            }
-          ]
-        },
-        externals: {
-          'react': 'React'
-        },
-        resolve: {
-          modulesDirectories: [distPath],
-          extensions: ['', '.jsx', '.js', '.json']
-        },
-        output: {
-          filename: name + '.js'
-        }
-      }))
-      .pipe(gulp.dest(distPath))
-      .on("error", gp_util.log);
-  };
-}
-
 function buildJsWatchTask(name, fileList) {
   return function(){
     return gulp.watch(fileList, ["dist:js:" + name]);
@@ -188,11 +153,6 @@ function buildJsDistroTasks() {
 
     jsDistroNames.push(distroName);
   }
-  // webpack app must be last
-  gulp.task("dist:js:app-react", buildWebpackCompileTask("app-react", file("app-react/main.jsx")));
-  gulp.task("watch:js:app-react", buildJsWatchTask("app-react", [file("app-react/main.jsx")]));
-
-  jsDistroNames.push("app-react")
 
   gulp.task("dist:js", jsDistroNames.map(function(n) { return "dist:js:" + n; }));
 
@@ -214,7 +174,11 @@ gulp.task("dist:css", ["dist:css:sentry", "dist:css:wall"]);
 
 buildJsDistroTasks();
 
-gulp.task("dist", ["dist:js", "dist:css"]);
+gulp.task("dist:webpack", function(){
+  return gp_webpack(require('./webpack.config.js'));
+});
+
+gulp.task("dist", ["dist:js", "dist:css", "dist:webpack"]);
 
 gulp.task("watch:css:sentry", function(){
   return gulp.watch(file("less/sentry.less"), ["dist:css:sentry"]);
@@ -226,7 +190,12 @@ gulp.task("watch:css:wall", function(){
 
 gulp.task("watch:css", ["watch:css:sentry", "watch:css:wall"]);
 
+gulp.task("watch:webpack", function(){
+  var config = require('./webpack.config.js');
+  config.watch = true;
+  return gp_webpack(config);
+});
 
-gulp.task("watch", ["watch:js", "watch:css"]);
+gulp.task("watch", ["watch:js", "watch:css", "watch:webpack"]);
 
 gulp.task("default", ["dist"]);
diff --git a/package.json b/package.json
index 69ff4c4871..3af3c59c0f 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
     "gulp-util": "^3.0.1",
     "gulp-watch": "^3.0.0",
     "gulp-webpack": "^1.1.2",
+    "jquery": "^2.1.3",
     "jshint": "~2.5.0",
     "jsx-loader": "^0.12.2",
     "karma": "^0.12.19",
@@ -28,8 +29,11 @@
     "karma-sinon": "^1.0.3",
     "less": "1.7.0",
     "mocha": "1.9.x",
+    "react": "^0.12.2",
+    "react-router": "^0.11.6",
     "sinon": "^1.10.3",
-    "uglify-js": "2.2.4"
+    "uglify-js": "2.2.4",
+    "webpack": "^1.4.15"
   },
   "private": true,
   "APIMethod": "stub",
diff --git a/src/sentry/management/commands/runserver.py b/src/sentry/management/commands/runserver.py
index 9c856442e4..c468e9630d 100644
--- a/src/sentry/management/commands/runserver.py
+++ b/src/sentry/management/commands/runserver.py
@@ -49,9 +49,8 @@ class Command(RunserverCommand):
             server = self.run_server()
             try:
                 server.wait()
-            except Exception:
-                server.terminate()
             finally:
+                server.terminate()
                 if watcher:
                     watcher.terminate()
         else:
diff --git a/src/sentry/static/sentry/app-react/components/header.jsx b/src/sentry/static/sentry/app-react/components/header.jsx
new file mode 100644
index 0000000000..8bf53bf418
--- /dev/null
+++ b/src/sentry/static/sentry/app-react/components/header.jsx
@@ -0,0 +1,14 @@
+/*** @jsx React.DOM */
+var React = require('react');
+
+var Header = React.createClass({
+  render: function() {
+    return (
+      <div>
+        Header!
+      </div>
+    );
+  }
+});
+
+module.exports = Header;
diff --git a/src/sentry/static/sentry/app-react/main.jsx b/src/sentry/static/sentry/app-react/main.jsx
index 819cb887e4..39e6bbe7ff 100644
--- a/src/sentry/static/sentry/app-react/main.jsx
+++ b/src/sentry/static/sentry/app-react/main.jsx
@@ -1,18 +1,44 @@
 /*** @jsx React.DOM */
 var React = require("react");
+var Router = require("react-router");
+var $ = require("jquery");
 
-var CommentBox = React.createClass({
+var Route = Router.Route;
+var NotFoundRoute = Router.NotFoundRoute;
+var DefaultRoute = Router.DefaultRoute;
+var Link = Router.Link;
+var RouteHandler = Router.RouteHandler;
+
+var App = React.createClass({
   render: function() {
     return (
-      <div className="commentBox">
-        Hello, world! I am a CommentBox.
+      <div>
+        Hello World!
+        <RouteHandler/>
       </div>
     );
   }
 });
 
+var Example = React.createClass({
+  render: function() {
+    return (
+      <div>
+        Test
+      </div>
+    );
+  }
+});
 
-React.renderComponent(
-  <CommentBox />,
-  document.getElementById('content')
+var routes = (
+  <Route handler={App}>
+    <Route name="example" handler={Example}/>
+    <DefaultRoute handler={Example}/>
+  </Route>
 );
+
+$(function(){
+  Router.run(routes, function (Handler) {
+    React.render(<Handler/>, document.body);
+  });
+});
diff --git a/src/sentry/templates/sentry/layout-react.html b/src/sentry/templates/sentry/layout-react.html
new file mode 100644
index 0000000000..c602409825
--- /dev/null
+++ b/src/sentry/templates/sentry/layout-react.html
@@ -0,0 +1,125 @@
+{% load i18n %}
+{% load sentry_api %}
+{% load sentry_dsn %}
+{% load sentry_helpers %}
+{% load sentry_permissions %}
+
+{% get_sentry_version %}
+
+<!DOCTYPE html>
+<html lang="en">
+    <head>
+        <meta http-equiv="content-type" content="text/html; charset=utf-8">
+        <meta name="robots" content="NONE,NOARCHIVE">
+        <meta name="viewport" content="width=device-width, initial-scale=1">
+
+        <link href="{% url 'sentry-media' "sentry" "images/favicon.ico" %}" rel="shortcut icon" type="image/png"/>
+
+        {% block css %}
+            <link href="{% url 'sentry-media' "sentry" "dist/sentry.css" %}" rel="stylesheet"/>
+            <link href="{% url 'sentry-media' 'sentry' 'vendor/platformicons/platformicons/platformicons.css' %}" type="text/css" rel="stylesheet">
+        {% endblock %}
+
+        <title>{% block title %}Sentry{% endblock %}</title>
+
+        <!--[if lt IE 9]>
+        <script type="text/javascript" src="{% url 'sentry-media' "sentry" "scripts/lib/html5shiv.js" %}"></script>
+        <![endif]-->
+        {% block scripts %}
+            <script>
+            // Legacy app object
+            window.app = {};
+
+            window.SentryConfig = {};
+            window.SentryConfig.popupCss = '{% url 'sentry-media' "sentry" 'styles/popup.css' %}';
+            window.SentryConfig.mediaUrl = '{% url 'sentry-media' "sentry" '' %}';
+            window.SentryConfig.urlPrefix = {{ URL_PREFIX|to_json|safe }};
+            window.SentryConfig.lang = {{ request.LANGUAGE_CODE|to_json|safe }};
+            {% if selectedProject %}
+                window.SentryConfig.selectedProject = {% convert_to_json selectedProject %}
+            {% else %}
+                window.SentryConfig.selectedProject = null;
+            {% endif %}
+            {% if selectedTeam %}
+                window.SentryConfig.selectedTeam = {% convert_to_json selectedTeam %}
+            {% else %}
+                window.SentryConfig.selectedTeam = null;
+            {% endif %}
+            {% if selectedOrganization %}
+                window.SentryConfig.selectedOrganization = {% convert_to_json selectedOrganization %}
+            {% else %}
+                window.SentryConfig.selectedOrganization = null;
+            {% endif %}
+            </script>
+<!--
+            <script src="{% url 'sentry-media' "sentry" "dist/vendor-jquery.min.js" %}"></script>
+            <script src="{% url 'sentry-media' "sentry" "dist/vendor-bootstrap.min.js" %}"></script>
+            <script src="{% url 'sentry-media' "sentry" "dist/vendor-misc.min.js" %}"></script>
+ -->
+            <script src="{% url 'sentry-media' "sentry" "dist/vendor.js" %}"></script>
+            <script src="{% url 'sentry-media' "sentry" "dist/app-react.js" %}"></script>
+
+            <script src="{% url 'sentry-media' "sentry" "dist/raven.min.js" %}"></script>
+
+            <script>
+            Raven.config('{% public_dsn %}', {
+                tags: {
+                    sentry_version: '{{ sentry_version.current }}'
+                },
+                whitelistUrls: {% convert_to_json ALLOWED_HOSTS %},
+                ignoreErrors: [
+                  // Random plugins/extensions
+                  'top.GLOBALS',
+                  // See: http://blog.errorception.com/2012/03/tale-of-unfindable-js-error. html
+                  'originalCreateNotification',
+                  'canvas.contentDocument',
+                  'MyApp_RemoveAllHighlights',
+                  'http://tt.epicplay.com',
+                  'Can\'t find variable: ZiteReader',
+                  'jigsaw is not defined',
+                  'ComboSearch is not defined',
+                  'http://loading.retry.widdit.com/',
+                  'atomicFindClose',
+                  // Facebook borked
+                  'fb_xd_fragment',
+                  // ISP "optimizing" proxy - `Cache-Control: no-transform` seems to reduce this. (thanks @acdha)
+                  // See http://stackoverflow.com/questions/4113268/how-to-stop-javascript-injection-from-vodafone-proxy
+                  'bmi_SafeAddOnload',
+                  'EBCallBackMessageReceived',
+                  // See http://toolbar.conduit.com/Developer/HtmlAndGadget/Methods/JSInjection.aspx
+                  'conduitPage'
+                ],
+                ignoreUrls: [
+                  // Facebook flakiness
+                  /graph\.facebook\.com/i,
+                  // Facebook blocked
+                  /connect\.facebook\.net\/en_US\/all\.js/i,
+                  // Woopra flakiness
+                  /eatdifferent\.com\.woopra-ns\.com/i,
+                  /static\.woopra\.com\/js\/woopra\.js/i,
+                  // Chrome extensions
+                  /extensions\//i,
+                  /^chrome:\/\//i,
+                  // Other plugins
+                  /127\.0\.0\.1:4001\/isrunning/i,  // Cacaoweb
+                  /webappstoolbarba\.texthelp\.com\//i,
+                  /metrics\.itunes\.apple\.com\.edgesuite\.net\//i
+                ]
+            }).install();
+
+            {% if request.user.is_authenticated %}
+            Raven.setUser({
+                email: '{{ request.user.email }}',
+                id: '{{ request.user.id }}',
+                ip_address: '{{ request.META.REMOTE_ADDR }}'
+            });
+            {% endif %}
+            </script>
+        {% endblock %}
+
+        {% block meta %}
+        {% endblock %}
+    </head>
+
+    <body></body>
+</html>
diff --git a/webpack.config.js b/webpack.config.js
new file mode 100644
index 0000000000..96636d937b
--- /dev/null
+++ b/webpack.config.js
@@ -0,0 +1,38 @@
+var path = require("path"),
+    webpack = require("webpack");
+
+var staticPrefix = "src/sentry/static/sentry",
+    distPath = staticPrefix + "/dist";
+
+function file(name) {
+  return path.join(__dirname, staticPrefix, name);
+}
+
+function vendorFile(name) {
+  return path.join(__dirname, staticPrefix, "vendor", name);
+}
+
+module.exports = {
+  entry: {
+    "app-react": file('app-react/main.jsx'),
+    "vendor": ["react", "react-router", "jquery"]
+  },
+  module: {
+    loaders: [
+      {
+        test: /\.jsx$/,
+        loader: 'jsx-loader?insertPragma=React.DOM&harmony'
+      }
+    ]
+  },
+  plugins: [
+    new webpack.optimize.CommonsChunkPlugin("vendor", distPath + "/vendor.js")
+  ],
+  resolve: {
+    modulesDirectories: [distPath, "node_modules"],
+    extensions: ['', '.jsx', '.js', '.json']
+  },
+  output: {
+    filename: distPath + '/[name].js'
+  }
+}
