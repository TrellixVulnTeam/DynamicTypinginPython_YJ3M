commit 9ab229067fade2c224adcc67735040462468136d
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Fri Jan 31 11:16:33 2020 -0800

    ref(ui): Upgrade react-select to v3 (#14965)
    
    Upgrades the SelectControl to use react-select v3. This is a breaking
    change for many of our components, so a deprecatedSelectControl prop is
    added to use the old v1 version of the SelectControl. This flag should
    be incrementally dropped.

diff --git a/package.json b/package.json
index 5aa01066ea..8f3c531b36 100644
--- a/package.json
+++ b/package.json
@@ -103,7 +103,8 @@
     "react-popper": "^1.3.3",
     "react-pose": "^4.0.8",
     "react-router": "3.2.0",
-    "react-select": "^1.2.1",
+    "react-select": "^3.0.8",
+    "react-select-legacy": "npm:react-select-legacy@1",
     "react-sparklines": "1.7.0",
     "react-virtualized": "^9.20.1",
     "reflexbox": "^4.0.6",
diff --git a/src/sentry/static/sentry/app/components/contextPickerModal.tsx b/src/sentry/static/sentry/app/components/contextPickerModal.tsx
index 2240e50c1b..1d0591b5fd 100644
--- a/src/sentry/static/sentry/app/components/contextPickerModal.tsx
+++ b/src/sentry/static/sentry/app/components/contextPickerModal.tsx
@@ -236,6 +236,7 @@ class ContextPickerModal extends React.Component<Props> {
           <div>{t('Select an organization/project to continue')}</div>
           {needOrg && (
             <StyledSelectControl
+              deprecatedSelectControl
               ref={ref => {
                 this.orgSelect = ref;
                 if (shouldShowProjectSelector) {
@@ -254,6 +255,7 @@ class ContextPickerModal extends React.Component<Props> {
 
           {organization && needProject && projects && (
             <StyledSelectControl
+              deprecatedSelectControl
               ref={ref => {
                 this.projectSelect = ref;
                 this.focusProjectSelector();
diff --git a/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx b/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx
index 3af0e63327..701f694cb8 100644
--- a/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx
+++ b/src/sentry/static/sentry/app/components/customIgnoreCountModal.tsx
@@ -79,6 +79,7 @@ export default class CustomIgnoreCountModal extends React.Component<Props, State
             placeholder={t('e.g. 100')}
           />
           <SelectField
+            deprecatedSelectControl
             inline={false}
             flexibleControlStateSize
             stacked
diff --git a/src/sentry/static/sentry/app/components/customResolutionModal.jsx b/src/sentry/static/sentry/app/components/customResolutionModal.jsx
index f8df72eb2c..89df322465 100644
--- a/src/sentry/static/sentry/app/components/customResolutionModal.jsx
+++ b/src/sentry/static/sentry/app/components/customResolutionModal.jsx
@@ -52,6 +52,7 @@ export default class CustomResolutionModal extends React.Component {
           <Header>{t('Resolved In')}</Header>
           <Body>
             <SelectAsyncField
+              deprecatedSelectControl
               label={t('Version')}
               id="version"
               name="version"
diff --git a/src/sentry/static/sentry/app/components/forms/genericField.jsx b/src/sentry/static/sentry/app/components/forms/genericField.jsx
index 23f06a2248..39ccdc88e1 100644
--- a/src/sentry/static/sentry/app/components/forms/genericField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/genericField.jsx
@@ -63,7 +63,7 @@ export default class GenericField extends React.Component {
       case 'text':
       case 'url':
         if (props.choices) {
-          return <SelectCreatableField {...props} />;
+          return <SelectCreatableField deprecatedSelectControl {...props} />;
         }
         return <TextField {...props} />;
       case 'number':
@@ -77,7 +77,7 @@ export default class GenericField extends React.Component {
         // it's required (with *) and rely on server validation
         delete props.required;
         if (props.has_autocomplete) {
-          return <SelectAsyncField {...props} />;
+          return <SelectAsyncField deprecatedSelectControl {...props} />;
         }
         return <SelectField {...props} />;
       default:
diff --git a/src/sentry/static/sentry/app/components/forms/selectControl.jsx b/src/sentry/static/sentry/app/components/forms/selectControl.jsx
index 08a8f623cd..a63bcc57e3 100644
--- a/src/sentry/static/sentry/app/components/forms/selectControl.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectControl.jsx
@@ -1,87 +1,212 @@
-import PropTypes from 'prop-types';
 import React from 'react';
-import ReactSelect, {Async, Creatable, AsyncCreatable} from 'react-select';
-import styled from '@emotion/styled';
-import {css} from '@emotion/core';
+import ReactSelect, {components as selectComponents} from 'react-select';
+import Async from 'react-select/async';
+import Creatable from 'react-select/creatable';
+import AsyncCreatable from 'react-select/async-creatable';
 
+import theme from 'app/utils/theme';
+import InlineSvg from 'app/components/inlineSvg';
 import convertFromSelect2Choices from 'app/utils/convertFromSelect2Choices';
 
-/**
- * The library has `value` defined as `PropTypes.object`, but this
- * is not the case when `multiple` is true :/
- */
-ReactSelect.Value.propTypes = {
-  ...ReactSelect.Value.propTypes,
-  value: PropTypes.any,
+import SelectControlLegacy from './selectControlLegacy';
+
+const ClearIndicator = props => (
+  <selectComponents.ClearIndicator {...props}>
+    <InlineSvg src="icon-close" size="10px" />
+  </selectComponents.ClearIndicator>
+);
+
+const DropdownIndicator = props => (
+  <selectComponents.DropdownIndicator {...props}>
+    <InlineSvg src="icon-chevron-down" size="14px" />
+  </selectComponents.DropdownIndicator>
+);
+
+const MultiValueRemove = props => (
+  <selectComponents.MultiValueRemove {...props}>
+    <InlineSvg src="icon-close" size="8px" />
+  </selectComponents.MultiValueRemove>
+);
+
+// TODO(epurkhiser): The loading indicator should probably also be our loading
+// indicator.
+
+// Unfortunately we cannot use emotions `css` helper here, since react-select
+// *requires* object styles, which the css helper cannot produce.
+
+const indicatorStyles = ({padding: _padding, ...provided}) => ({
+  ...provided,
+  padding: '4px',
+  alignItems: 'center',
+  cursor: 'pointer',
+});
+
+const defaultStyles = {
+  control: (_, state) => ({
+    fontSize: '15px',
+    color: theme.gray5,
+    display: 'flex',
+    background: '#fff',
+    border: `1px solid ${theme.borderDark}`,
+    borderRadius: theme.borderRadius,
+    boxShadow: `inset ${theme.dropShadowLight}`,
+    transition: 'border 0.1s linear',
+    alignItems: 'center',
+    minHeight: '36px',
+    '&:hover': {
+      borderColor: theme.gray1,
+    },
+    ...(state.isFocused && {
+      border: `1px solid ${theme.gray1}`,
+      boxShadow: 'rgba(209, 202, 216, 0.5) 0 0 0 3px',
+    }),
+    ...(state.menuIsOpen && {
+      borderBottomLeftRadius: '0',
+      borderBottomRightRadius: '0',
+      boxShadow: 'none',
+    }),
+    ...(state.isDisabled && {
+      borderColor: theme.borderDark,
+      background: theme.whiteDark,
+      color: theme.gray2,
+      cursor: 'not-allowed',
+    }),
+  }),
+
+  menu: provided => ({
+    ...provided,
+    zIndex: theme.zIndex.dropdown,
+    marginTop: '-1px',
+    background: '#fff',
+    border: `1px solid ${theme.borderDark}`,
+    borderRadius: `0 0 ${theme.borderRadius} ${theme.borderRadius}`,
+    borderTop: `1px solid ${theme.borderLight}`,
+    boxShadow: theme.dropShadowLight,
+  }),
+  option: (provided, state) => ({
+    ...provided,
+    lineHeight: '1.5',
+    fontSize: theme.fontSizeMedium,
+    color: state.isSelected || state.isFocused ? theme.white : theme.textColor,
+    backgroundColor: state.isSelected
+      ? theme.purpleLightest
+      : state.isFocused
+      ? theme.purpleLight
+      : 'none',
+  }),
+  valueContainer: provided => ({
+    ...provided,
+    alignItems: 'flex-start',
+  }),
+  multiValue: () => ({
+    color: '#007eff',
+    backgroundColor: '#ebf5ff',
+    borderRadius: '2px',
+    border: '1px solid #c2e0ff',
+    display: 'flex',
+    marginTop: '4px',
+    marginRight: '4px',
+  }),
+  multiValueLabel: provided => ({
+    ...provided,
+    color: '#007eff',
+    padding: '0',
+    paddingLeft: '6px',
+    lineHeight: '1.8',
+  }),
+  multiValueRemove: () => ({
+    cursor: 'pointer',
+    alignItems: 'center',
+    borderLeft: '1px solid #c2e0ff',
+    borderRadius: '0 2px 2px 0',
+    display: 'flex',
+    padding: '0 4px',
+    marginLeft: '4px',
+
+    '&:hover': {
+      color: '#6284b9',
+      background: '#cce5ff',
+    },
+  }),
+  indicatorsContainer: () => ({
+    display: 'grid',
+    gridAutoFlow: 'column',
+    gridGap: '2px',
+    marginRight: '6px',
+  }),
+  clearIndicator: indicatorStyles,
+  dropdownIndicator: indicatorStyles,
+  loadingIndicator: indicatorStyles,
 };
 
-class SelectControl extends React.Component {
-  static propTypes = {
-    ...ReactSelect.propTypes,
-    options: PropTypes.arrayOf(
-      PropTypes.shape({
-        label: PropTypes.node,
-        value: PropTypes.any,
-      })
-    ),
-    // react-select knows this as multi, but for standardization
-    // and compatibility we use multiple
-    multiple: PropTypes.bool,
-    // multi is supported for compatibility
-    multi: PropTypes.bool,
-    // disable rendering a menu
-    noMenu: PropTypes.bool,
-    choices: PropTypes.oneOfType([
-      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.array])),
-      PropTypes.func,
-    ]),
-  };
+const SelectControl = props => {
+  // TODO(epurkhiser): We should remove all SelectControls (and SelectFields,
+  // SelectAsyncFields, etc) that are using this prop, before we can remove the
+  // v1 react-select component.
+  if (props.deprecatedSelectControl) {
+    const {deprecatedSelectControl: _, ...legacyProps} = props;
+    return <SelectControlLegacy {...legacyProps} />;
+  }
 
-  static defaultProps = {
-    clearable: false,
-    multiple: false,
-    height: 36,
+  const {
+    async,
+    creatable,
+    options,
+    choices,
+    clearable,
+    components,
+    styles,
+    value,
+    ...rest
+  } = props;
+
+  // Compatibility with old select2 API
+  const choicesOrOptions =
+    convertFromSelect2Choices(typeof choices === 'function' ? choices(props) : choices) ||
+    options;
+
+  // Value is expected to be object like the options list, we map it back from
+  // the options list
+  const mappedValue = choicesOrOptions.find(opt => opt.value === value);
+
+  // Allow the provided `styles` prop to override default styles using the same
+  // function interface provided by react-styled. This ensures the `provided`
+  // styles include our overridden default styles
+  const mappedStyles = Object.keys(styles || {}).reduce((computedStyles, key) => {
+    const styleFunc = (provided, state) =>
+      styles[key](
+        computedStyles[key] === undefined
+          ? provided
+          : computedStyles[key](provided, state),
+        state
+      );
+    return {...computedStyles, [key]: styleFunc};
+  }, defaultStyles);
+
+  const replacedComponents = {
+    ClearIndicator,
+    DropdownIndicator,
+    MultiValueRemove,
+    IndicatorSeparator: null,
   };
 
-  renderArrow = () => {
-    return <span className="icon-arrow-down" />;
-  };
+  return (
+    <SelectPicker
+      styles={mappedStyles}
+      components={{...replacedComponents, ...components}}
+      async={async}
+      creatable={creatable}
+      clearable={clearable}
+      backspaceRemovesValue={clearable}
+      value={mappedValue}
+      isMulti={props.multiple || props.multi}
+      options={choicesOrOptions}
+      {...rest}
+    />
+  );
+};
 
-  render() {
-    const {async, creatable, options, choices, clearable, noMenu, ...props} = this.props;
-
-    // Compatibility with old select2 API
-    const choicesOrOptions =
-      convertFromSelect2Choices(
-        typeof choices === 'function' ? choices(this.props) : choices
-      ) || options;
-
-    const noMenuProps = {
-      arrowRenderer: () => null,
-      menuRenderer: () => null,
-      openOnClick: false,
-      menuContainerStyle: {display: 'none'},
-    };
-
-    // "-Removes" props should match `clearable` unless explicitly defined in props
-    // rest props should be after "-Removes" so that it can be overridden
-    return (
-      <StyledSelect
-        arrowRenderer={this.renderArrow}
-        async={async}
-        creatable={creatable}
-        clearable={clearable}
-        backspaceRemoves={clearable}
-        deleteRemoves={clearable}
-        noMenu={noMenu}
-        {...(noMenu ? noMenuProps : {})}
-        {...props}
-        multi={this.props.multiple || this.props.multi}
-        options={choicesOrOptions}
-      />
-    );
-  }
-}
+SelectControl.propTypes = SelectControlLegacy.propTypes;
 
 const SelectPicker = ({async, creatable, forwardedRef, ...props}) => {
   // Pick the right component to use
@@ -98,83 +223,8 @@ const SelectPicker = ({async, creatable, forwardedRef, ...props}) => {
 
   return <Component ref={forwardedRef} {...props} />;
 };
-SelectPicker.propTypes = {
-  async: PropTypes.bool,
-  creatable: PropTypes.bool,
-  forwardedRef: PropTypes.any,
-};
-
-const StyledSelect = styled(SelectPicker)`
-  font-size: 15px;
-
-  .Select-control {
-    border: 1px solid ${p => p.theme.borderDark};
-    height: ${p => p.height}px;
-    overflow: visible;
-  }
-
-  &.Select.is-focused > .Select-control {
-    border: 1px solid ${p => p.theme.borderDark};
-    border-color: ${p => p.theme.gray};
-    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;
-  }
-
-  &.Select.is-focused:not(.is-open) > .Select-control {
-    height: ${p => p.height}px;
-    overflow: visible;
-  }
-
-  .Select-input {
-    height: ${p => p.height}px;
-    input {
-      line-height: ${p => p.height}px;
-      padding: 0 0;
-    }
-  }
-
-  &.Select--multi .Select-value {
-    margin-top: 6px;
-  }
-
-  .Select-placeholder,
-  &.Select--single > .Select-control .Select-value {
-    height: ${p => p.height}px;
-    line-height: ${p => p.height}px;
-    &:focus {
-      border: 1px solid ${p => p.theme.gray};
-    }
-  }
-
-  &.Select--single.is-disabled .Select-control .Select-value .Select-value-label {
-    color: ${p => p.theme.disabled};
-  }
-
-  .Select-option.is-focused {
-    color: white;
-    background-color: ${p => p.theme.purple};
-  }
-  .Select-multi-value-wrapper {
-    > a {
-      margin-left: 4px;
-    }
-  }
-
-  .Select-clear {
-    vertical-align: middle;
-  }
-
-  .Select-menu-outer {
-    z-index: ${p => p.theme.zIndex.dropdown};
-  }
 
-  ${({noMenu}) =>
-    noMenu &&
-    css`
-      &.Select.is-focused.is-open > .Select-control {
-        border-radius: 4px;
-      }
-    `}
-`;
+SelectPicker.propTypes = SelectControl.propTypes;
 
 const forwardRef = (props, ref) => <SelectControl forwardedRef={ref} {...props} />;
 forwardRef.displayName = 'RefForwardedSelectControl';
diff --git a/src/sentry/static/sentry/app/components/forms/selectControlLegacy.jsx b/src/sentry/static/sentry/app/components/forms/selectControlLegacy.jsx
new file mode 100644
index 0000000000..c65f7b535a
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/forms/selectControlLegacy.jsx
@@ -0,0 +1,187 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import ReactSelect, {Async, Creatable, AsyncCreatable} from 'react-select-legacy';
+import styled from '@emotion/styled';
+import {css} from '@emotion/core';
+
+import convertFromSelect2Choices from 'app/utils/convertFromSelect2Choices';
+
+/**
+ * The library has `value` defined as `PropTypes.object`, but this
+ * is not the case when `multiple` is true :/
+ */
+ReactSelect.Value.propTypes = {
+  ...ReactSelect.Value.propTypes,
+  value: PropTypes.any,
+};
+
+class SelectControlLegacy extends React.Component {
+  static propTypes = {
+    ...ReactSelect.propTypes,
+    options: PropTypes.arrayOf(
+      PropTypes.shape({
+        label: PropTypes.node,
+        value: PropTypes.any,
+      })
+    ),
+    // react-select knows this as multi, but for standardization
+    // and compatibility we use multiple
+    multiple: PropTypes.bool,
+    // multi is supported for compatibility
+    multi: PropTypes.bool,
+    // disable rendering a menu
+    noMenu: PropTypes.bool,
+    choices: PropTypes.oneOfType([
+      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.array])),
+      PropTypes.func,
+    ]),
+  };
+
+  static defaultProps = {
+    clearable: false,
+    multiple: false,
+    height: 36,
+  };
+
+  renderArrow = () => {
+    return <span className="icon-arrow-down" />;
+  };
+
+  render() {
+    const {async, creatable, options, choices, clearable, noMenu, ...props} = this.props;
+
+    // Compatibility with old select2 API
+    const choicesOrOptions =
+      convertFromSelect2Choices(
+        typeof choices === 'function' ? choices(this.props) : choices
+      ) || options;
+
+    const noMenuProps = {
+      arrowRenderer: () => null,
+      menuRenderer: () => null,
+      openOnClick: false,
+      menuContainerStyle: {display: 'none'},
+    };
+
+    // "-Removes" props should match `clearable` unless explicitly defined in props
+    // rest props should be after "-Removes" so that it can be overridden
+    return (
+      <StyledSelect
+        arrowRenderer={this.renderArrow}
+        async={async}
+        creatable={creatable}
+        clearable={clearable}
+        backspaceRemoves={clearable}
+        deleteRemoves={clearable}
+        noMenu={noMenu}
+        {...(noMenu ? noMenuProps : {})}
+        {...props}
+        multi={this.props.multiple || this.props.multi}
+        options={choicesOrOptions}
+      />
+    );
+  }
+}
+
+const SelectPicker = ({async, creatable, forwardedRef, ...props}) => {
+  // Pick the right component to use
+  let Component;
+  if (async && creatable) {
+    Component = AsyncCreatable;
+  } else if (async && !creatable) {
+    Component = Async;
+  } else if (creatable) {
+    Component = Creatable;
+  } else {
+    Component = ReactSelect;
+  }
+
+  return <Component ref={forwardedRef} {...props} />;
+};
+SelectPicker.propTypes = {
+  async: PropTypes.bool,
+  creatable: PropTypes.bool,
+  forwardedRef: PropTypes.any,
+};
+
+const StyledSelect = styled(SelectPicker)`
+  font-size: 15px;
+
+  .Select-control {
+    border: 1px solid ${p => p.theme.borderDark};
+    height: ${p => p.height}px;
+    overflow: visible;
+  }
+
+  &.Select.is-focused > .Select-control {
+    border: 1px solid ${p => p.theme.borderDark};
+    border-color: ${p => p.theme.gray};
+    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;
+  }
+
+  &.Select.is-focused:not(.is-open) > .Select-control {
+    height: ${p => p.height}px;
+    overflow: visible;
+  }
+
+  .Select-input {
+    height: ${p => p.height}px;
+    input {
+      line-height: ${p => p.height}px;
+      padding: 0 0;
+    }
+  }
+
+  &.Select--multi .Select-value {
+    margin-top: 6px;
+  }
+
+  .Select-placeholder,
+  &.Select--single > .Select-control .Select-value {
+    height: ${p => p.height}px;
+    line-height: ${p => p.height}px;
+    &:focus {
+      border: 1px solid ${p => p.theme.gray};
+    }
+  }
+
+  &.Select--single.is-disabled .Select-control .Select-value .Select-value-label {
+    color: ${p => p.theme.disabled};
+  }
+
+  .Select-option.is-focused {
+    color: white;
+    background-color: ${p => p.theme.purple};
+  }
+  .Select-multi-value-wrapper {
+    > a {
+      margin-left: 4px;
+    }
+  }
+
+  .Select-clear {
+    vertical-align: middle;
+  }
+
+  .Select-menu-outer {
+    z-index: ${p => p.theme.zIndex.dropdown};
+  }
+
+  ${({noMenu}) =>
+    noMenu &&
+    css`
+      &.Select.is-focused.is-open > .Select-control {
+        border-radius: 4px;
+      }
+    `}
+`;
+
+const forwardRef = (props, ref) => <SelectControlLegacy forwardedRef={ref} {...props} />;
+forwardRef.displayName = 'RefForwardedSelectControl';
+
+const RefForwardedSelectControl = React.forwardRef(forwardRef);
+
+// TODO(ts): Needed because <SelectField> uses this
+RefForwardedSelectControl.propTypes = SelectControlLegacy.propTypes;
+
+export default RefForwardedSelectControl;
diff --git a/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx b/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
index 16d4b6fd82..47389efdbb 100644
--- a/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectCreatableField.jsx
@@ -66,10 +66,18 @@ export default class SelectCreatableField extends SelectField {
   }
 
   getField() {
-    const {placeholder, disabled, required, clearable, name} = this.props;
+    const {
+      deprecatedSelectControl,
+      placeholder,
+      disabled,
+      required,
+      clearable,
+      name,
+    } = this.props;
 
     return (
       <StyledSelectControl
+        deprecatedSelectControl={deprecatedSelectControl}
         creatable
         id={this.getId()}
         options={this.options}
diff --git a/src/sentry/static/sentry/app/components/forms/selectField.jsx b/src/sentry/static/sentry/app/components/forms/selectField.jsx
index cede20c22b..f7afe60d11 100644
--- a/src/sentry/static/sentry/app/components/forms/selectField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/selectField.jsx
@@ -103,6 +103,7 @@ export default class SelectField extends FormField {
 
   getField() {
     const {
+      deprecatedSelectControl,
       options,
       clearable,
       creatable,
@@ -116,6 +117,7 @@ export default class SelectField extends FormField {
 
     return (
       <StyledSelectControl
+        deprecatedSelectControl={deprecatedSelectControl}
         creatable={creatable}
         id={this.getId()}
         choices={choices}
diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx
index 53a573fa60..47f229569d 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/inviteRowControl.tsx
@@ -47,6 +47,7 @@ const InviteRowControl = ({
   <div className={className}>
     <div>
       <SelectControl
+        deprecatedSelectControl
         data-test-id="select-emails"
         disabled={disabled}
         placeholder={t('Enter one or more email')}
@@ -75,6 +76,7 @@ const InviteRowControl = ({
     </div>
     <div>
       <RoleSelectControl
+        deprecatedSelectControl
         data-test-id="select-role"
         disabled={disabled}
         value={role}
@@ -85,6 +87,7 @@ const InviteRowControl = ({
     </div>
     <div>
       <SelectControl
+        deprecatedSelectControl
         data-test-id="select-teams"
         disabled={disabled}
         placeholder={t('Add to teams...')}
diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/renderEmailValue.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/renderEmailValue.tsx
index 4f49402de9..80dc85b4e4 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/renderEmailValue.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/renderEmailValue.tsx
@@ -1,8 +1,7 @@
 import React from 'react';
 import styled from '@emotion/styled';
 import {css} from '@emotion/core';
-
-import {Value} from 'react-select';
+import {Value} from 'react-select-legacy';
 
 import InlineSvg from 'app/components/inlineSvg';
 import space from 'app/styles/space';
diff --git a/src/sentry/static/sentry/app/components/roleSelectControl.tsx b/src/sentry/static/sentry/app/components/roleSelectControl.tsx
index c4471b59e0..5a891cee58 100644
--- a/src/sentry/static/sentry/app/components/roleSelectControl.tsx
+++ b/src/sentry/static/sentry/app/components/roleSelectControl.tsx
@@ -12,6 +12,7 @@ type Props = SelectControl['props'] & {
 
 const RoleSelector = ({roles, disableUnallowed, ...props}: Props) => (
   <RoleSelectControl
+    deprecatedSelectControl
     options={
       roles &&
       roles.map(r => ({
diff --git a/src/sentry/static/sentry/app/components/selectMembers/index.tsx b/src/sentry/static/sentry/app/components/selectMembers/index.tsx
index 028068fc76..fa37468fe9 100644
--- a/src/sentry/static/sentry/app/components/selectMembers/index.tsx
+++ b/src/sentry/static/sentry/app/components/selectMembers/index.tsx
@@ -317,6 +317,7 @@ class SelectMembers extends React.Component<Props> {
 
     return (
       <StyledSelectControl
+        deprecatedSelectControl
         ref={this.selectRef}
         filterOptions={(options, filterText) =>
           options.filter(({searchKey}) => searchKey.indexOf(filterText) > -1)
diff --git a/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx b/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
index 68e4834229..da61351d0c 100644
--- a/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
+++ b/src/sentry/static/sentry/app/views/acceptProjectTransfer.jsx
@@ -91,6 +91,7 @@ class AcceptProjectTransfer extends AsyncView {
           initialData={{organization: choices[0] && choices[0][0]}}
         >
           <SelectField
+            deprecatedSelectControl
             choices={choices}
             label={t('Organization')}
             name="organization"
diff --git a/src/sentry/static/sentry/app/views/admin/adminQueue.jsx b/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
index a1e78dc2a8..43b1b79bb1 100644
--- a/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
@@ -81,6 +81,7 @@ export default class AdminQueue extends AsyncView {
           <div>
             <label>Show details for task:</label>
             <SelectField
+              deprecatedSelectControl
               name="task"
               onChange={this.changeTask}
               value={activeTask}
diff --git a/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx b/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx
index 10650eece5..069acc0725 100644
--- a/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx
+++ b/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {Value} from 'react-select';
+import {Value} from 'react-select-legacy';
 
 import {t} from 'app/locale';
 import SelectControl from 'app/components/forms/selectControl';
@@ -144,6 +144,7 @@ export default class AggregationRow extends React.Component<
     return (
       <div>
         <SelectControl
+          deprecatedSelectControl
           ref={(ref: any) => (this.select = ref)}
           value={getInternal(this.props.value)}
           placeholder={
diff --git a/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx b/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx
index 33f2ecff8c..58d6da4206 100644
--- a/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx
+++ b/src/sentry/static/sentry/app/views/discover/conditions/condition.tsx
@@ -1,6 +1,6 @@
 import React from 'react';
-import {Value} from 'react-select';
 import styled from '@emotion/styled';
+import {Value} from 'react-select-legacy';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
 
@@ -213,6 +213,7 @@ export default class ConditionRow extends React.Component<
     return (
       <Box>
         <SelectControl
+          deprecatedSelectControl
           ref={(ref: any) => (this.select = ref)}
           value={getInternal(this.props.value)}
           placeholder={<PlaceholderText>{t('Add condition...')}</PlaceholderText>}
diff --git a/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx b/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx
index be06cf29c7..d80d30de9e 100644
--- a/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx
+++ b/src/sentry/static/sentry/app/views/discover/sidebar/orderby.tsx
@@ -62,6 +62,7 @@ export default class Orderby extends React.Component<OrderbyProps> {
         <Container>
           <OrderbyField>
             <SelectControl
+              deprecatedSelectControl
               name="orderbyField"
               options={columns}
               value={field}
@@ -71,6 +72,7 @@ export default class Orderby extends React.Component<OrderbyProps> {
           </OrderbyField>
           <OrderbyValue>
             <SelectControl
+              deprecatedSelectControl
               name="orderbyDirection"
               options={[
                 {value: 'asc', label: 'asc'},
diff --git a/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx b/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx
index 843ccb7739..29b4e0961a 100644
--- a/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx
+++ b/src/sentry/static/sentry/app/views/discover/sidebar/queryFields.tsx
@@ -104,6 +104,7 @@ export default class QueryFields extends React.Component<QueryFieldsProps> {
             {t('Summarize')}
           </SidebarLabel>
           <SelectControl
+            deprecatedSelectControl
             name="fields"
             multiple
             placeholder={this.getSummarizePlaceholder()}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
index e6b31b87b2..a683f434cf 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
@@ -168,6 +168,7 @@ class TableModalEditColumnBodyForm extends React.Component<
         >
           <FormRow>
             <SelectField
+              deprecatedSelectControl
               name="aggregation"
               label={t('Aggregate')}
               placeholder="Select Aggregate"
@@ -175,6 +176,7 @@ class TableModalEditColumnBodyForm extends React.Component<
               onChange={this.onChangeAggregation}
             />
             <SelectField
+              deprecatedSelectControl
               required
               name="field"
               label={t('Column Type')}
diff --git a/src/sentry/static/sentry/app/views/integrationInstallation.tsx b/src/sentry/static/sentry/app/views/integrationInstallation.tsx
index ca90b5d2b1..7c72171577 100644
--- a/src/sentry/static/sentry/app/views/integrationInstallation.tsx
+++ b/src/sentry/static/sentry/app/views/integrationInstallation.tsx
@@ -185,6 +185,7 @@ export default class IntegrationInstallation extends AsyncView<Props, State> {
         <Field label={t('Organization')} inline={false} stacked required>
           {() => (
             <SelectControl
+              deprecatedSelectControl
               onChange={this.onSelectOrg}
               value={selectedOrg}
               placeholder={t('Select an organization')}
diff --git a/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
index df062cb943..276537c23f 100644
--- a/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
@@ -156,6 +156,7 @@ class IssueListTagFilter extends React.Component {
 
         {!tag.isInput && (
           <SelectControl
+            deprecatedSelectControl
             clearable
             filterOptions={(options, filter, currentValues) => options}
             placeholder="--"
diff --git a/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx b/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx
index 65a9170e20..038e7ef785 100644
--- a/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx
+++ b/src/sentry/static/sentry/app/views/monitors/monitorForm.jsx
@@ -212,6 +212,7 @@ class MonitorForm extends Component {
                               required
                             />
                             <SelectField
+                              deprecatedSelectControl
                               name="config.schedule.interval"
                               label={t('Interval')}
                               disabled={!hasAccess}
diff --git a/src/sentry/static/sentry/app/views/onboarding/projectSetup/inviteMembers.jsx b/src/sentry/static/sentry/app/views/onboarding/projectSetup/inviteMembers.jsx
index 22cf1a4e2a..e5dabceddb 100644
--- a/src/sentry/static/sentry/app/views/onboarding/projectSetup/inviteMembers.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/projectSetup/inviteMembers.jsx
@@ -102,6 +102,7 @@ class InviteMembers extends React.Component {
               )}
             />
             <SelectField
+              deprecatedSelectControl
               name="role"
               label={t('Member Role')}
               required
diff --git a/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
index a62da4d078..4845546077 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/createProject.jsx
@@ -152,6 +152,7 @@ class CreateProject extends React.Component {
               <FormLabel>{t('Assign a Team')}</FormLabel>
               <TeamSelectInput>
                 <SelectControl
+                  deprecatedSelectControl
                   name="select-team"
                   clearable={false}
                   value={team}
diff --git a/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.tsx b/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.tsx
index 21b6308612..7d016c6eed 100644
--- a/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.tsx
+++ b/src/sentry/static/sentry/app/views/sentryAppExternalInstallation.tsx
@@ -253,6 +253,7 @@ export default class SentryAppExternalInstallation extends AsyncView<Props, Stat
         <Field label={t('Organization')} inline={false} stacked required>
           {() => (
             <SelectControl
+              deprecatedSelectControl
               onChange={({value}) => this.onSelectOrg(value)}
               value={selectedOrgSlug}
               placeholder={t('Select an organization')}
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
index c6f9ec524b..083859f542 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
@@ -149,6 +149,7 @@ class AccountNotificationsByProject extends React.Component {
             return (
               <PanelBodyLineItem key={field.name}>
                 <SelectField
+                  deprecatedSelectControl
                   defaultValue={field.defaultValue}
                   name={field.name}
                   choices={field.choices}
@@ -195,6 +196,7 @@ class AccountNotificationsByOrganization extends React.Component {
           return (
             <PanelBodyLineItem key={field.name}>
               <SelectField
+                deprecatedSelectControl
                 defaultValue={field.defaultValue}
                 name={field.name}
                 choices={field.choices}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx
index b9185d9530..108f28a26d 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx
@@ -190,6 +190,7 @@ export default class ChoiceMapper extends React.Component {
               <Flex key={fieldKey} alignItems="center" ml={1} flex="1 0 0">
                 <Box flex={1}>
                   <SelectControl
+                    deprecatedSelectControl
                     {...(perItemMapping
                       ? mappedSelectors[itemKey][fieldKey]
                       : mappedSelectors[fieldKey])}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx
index 9418f9b941..658bb55918 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx
@@ -127,7 +127,7 @@ export default class FieldFromConfig extends React.Component<Props> {
         // return <SelectAsyncField {...props} />;
         // }
 
-        return <SelectField {...props} />;
+        return <SelectField deprecatedSelectControl {...props} />;
       case 'choice_mapper':
         return <ChoiceMapperField {...props} />;
       case 'radio':
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/actionsPanel/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/actionsPanel/index.tsx
index 1544f406e3..d0632a7393 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/actionsPanel/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/actionsPanel/index.tsx
@@ -135,6 +135,7 @@ class ActionsPanel extends React.PureComponent<Props> {
 
                   {availableAction && availableAction.allowedTargetTypes.length > 1 ? (
                     <SelectControl
+                      deprecatedSelectControl
                       disabled={disabled || loading}
                       value={action.targetType}
                       options={
@@ -179,6 +180,7 @@ class ActionsPanel extends React.PureComponent<Props> {
             })}
           <PanelItem>
             <StyledSelectControl
+              deprecatedSelectControl
               name="add-action"
               aria-label={t('Add an Action')}
               disabled={disabled || loading}
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/thresholdControl.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/thresholdControl.tsx
index fc55aef577..1e973894ff 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/thresholdControl.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/thresholdControl.tsx
@@ -52,6 +52,7 @@ function ThresholdControl({
   return (
     <div {...props}>
       <SelectControl
+        deprecatedSelectControl
         disabled={disabled}
         name={`${thresholdName}ThresholdType`}
         value={getThresholdTypeForThreshold(type, thresholdType)}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationAuditLog/auditLogList.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuditLog/auditLogList.jsx
index c40bd0e2e9..c8ee597e52 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationAuditLog/auditLogList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationAuditLog/auditLogList.jsx
@@ -80,6 +80,7 @@ class AuditLogList extends React.Component {
     const action = (
       <form>
         <SelectField
+          deprecatedSelectControl
           name="event"
           onChange={onEventSelect}
           value={eventType}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx
index 474bdf5a08..56a3ba6cd6 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/permissionSelection.tsx
@@ -148,6 +148,7 @@ export default class PermissionSelection extends React.Component<Props, State> {
 
           return (
             <SelectField
+              deprecatedSelectControl
               // These are not real fields we want submitted, so we use
               // `--permission` as a suffix here, then filter these
               // fields out when submitting the form in
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteRequestRow.tsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteRequestRow.tsx
index 6a7c70b304..640b298fbc 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteRequestRow.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteRequestRow.tsx
@@ -83,6 +83,7 @@ const InviteRequestRow = ({
       />
 
       <TeamSelectControl
+        deprecatedSelectControl
         name="teams"
         placeholder={t('Add to teams...')}
         onChange={teams => onUpdate({teams: teams.map(team => team.value)})}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/details/keySettings.tsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/details/keySettings.tsx
index 36d1d05968..37cf64b1a0 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/details/keySettings.tsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/details/keySettings.tsx
@@ -153,6 +153,7 @@ class KeySettings extends React.Component<Props, State> {
                     </TextCopyInput>
                   </Field>
                   <SelectField
+                    deprecatedSelectControl
                     name="browserSdkVersion"
                     choices={data.browserSdk ? data.browserSdk.choices : []}
                     placeholder={t('4.x')}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
index 533df6e2da..a7383e77d3 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
@@ -117,6 +117,7 @@ class RuleBuilder extends React.Component {
         )}
         <BuilderBar>
           <BuilderSelect
+            deprecatedSelectControl
             name="select-type"
             value={type}
             showSearch={false}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
index e885f39b75..9c9e48c15f 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/selectOwners.jsx
@@ -306,6 +306,7 @@ export default class SelectOwners extends React.Component {
   render() {
     return (
       <MultiSelectControl
+        deprecatedSelectControl
         filterOptions={(options, filterText) => {
           return options.filter(({searchKey}) => searchKey.indexOf(filterText) > -1);
         }}
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
index 136898635c..aa407cdc81 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNode.tsx
@@ -50,6 +50,7 @@ class RuleNode extends React.Component<Props> {
     return (
       <SelectWrapper>
         <SelectControl
+          deprecatedSelectControl
           clearable={false}
           placeholder={t('Select integration')}
           noResultsText={t('No integrations available')}
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx
index fbac127db9..56fb7488e2 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/issueEditor/ruleNodeList.tsx
@@ -79,6 +79,7 @@ class RuleNodeList extends React.Component<Props> {
           </RuleNodes>
         )}
         <StyledSelectControl
+          deprecatedSelectControl
           placeholder={placeholder}
           onChange={obj => onAddRow(obj ? obj.value : obj)}
           options={options}
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
index e45ac663cc..e38d2faa19 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/index.jsx
@@ -251,6 +251,7 @@ const RuleEditor = createReactClass({
               {t(
                 'Every time %s of these conditions are met:',
                 <SelectField
+                  deprecatedSelectControl
                   clearable={false}
                   className={this.hasError('actionMatch') ? ' error' : ''}
                   style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 100}}
@@ -280,6 +281,7 @@ const RuleEditor = createReactClass({
 
             <h6>{t('In this environment')}:</h6>
             <SelectField
+              deprecatedSelectControl
               clearable={false}
               className={this.hasError('environment') ? ' error' : ''}
               style={{marginBottom: 0, marginLeft: 5, marginRight: 5}}
@@ -312,6 +314,7 @@ const RuleEditor = createReactClass({
               {t(
                 'Perform these actions at most once every %s for an issue.',
                 <SelectField
+                  deprecatedSelectControl
                   clearable={false}
                   name="frequency"
                   className={this.hasError('frequency') ? ' error' : ''}
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
index 8a71f1c3f3..9ab3b75f52 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx
@@ -35,6 +35,7 @@ class RuleNode extends React.Component {
 
     return (
       <SelectField
+        deprecatedSelectControl
         clearable={false}
         placeholder={t('Select integration')}
         noResultsText={t('No integrations available')}
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
index 439eb22052..eafad6dbd4 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
@@ -36,6 +36,7 @@ class RuleNodeList extends React.Component {
         </RuleNodes>
         <fieldset>
           <SelectControl
+            deprecatedSelectControl
             onChange={obj => this.props.handleAddRow(obj ? obj.value : obj)}
             style={{width: '100%'}}
             options={this.props.nodes
diff --git a/src/sentry/static/sentry/app/views/vstsOrganizationLink.jsx b/src/sentry/static/sentry/app/views/vstsOrganizationLink.jsx
index f042d6b62a..a81d527fdb 100644
--- a/src/sentry/static/sentry/app/views/vstsOrganizationLink.jsx
+++ b/src/sentry/static/sentry/app/views/vstsOrganizationLink.jsx
@@ -65,6 +65,7 @@ export default class VSTSOrganizationLink extends AsyncView {
           <input type="hidden" name="vsts_name" value={this.targetName} />
 
           <SelectField
+            deprecatedSelectControl
             choices={this.organizations}
             clearable={false}
             value={this.defaultChoice}
diff --git a/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
index d52b7b52af..dbf72c97a8 100644
--- a/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/genericField.spec.jsx.snap
@@ -18,6 +18,7 @@ exports[`GenericField renders text with choices as SelectCreatableField 1`] = `
 <SelectCreatableField
   choices={Array []}
   clearable={true}
+  deprecatedSelectControl={true}
   disabled={false}
   formState="Ready"
   help={null}
diff --git a/tests/js/spec/components/forms/__snapshots__/selectControlLegacy.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/selectControlLegacy.spec.jsx.snap
new file mode 100644
index 0000000000..5da74f7247
--- /dev/null
+++ b/tests/js/spec/components/forms/__snapshots__/selectControlLegacy.spec.jsx.snap
@@ -0,0 +1,486 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`SelectField deprecatedSelectControl renders with flat choices 1`] = `
+<div
+  className=""
+>
+  <div
+    className="controls"
+  >
+    <StyledSelectControl
+      choices={
+        Array [
+          "a",
+          "b",
+          "c",
+        ]
+      }
+      clearable={true}
+      deprecatedSelectControl={true}
+      disabled={false}
+      id="id-fieldName"
+      multiple={false}
+      name="fieldName"
+      onChange={[Function]}
+      required={false}
+      value="fieldValue"
+    />
+  </div>
+</div>
+`;
+
+exports[`SelectField deprecatedSelectControl renders with paired choices 1`] = `
+<div
+  className=""
+>
+  <div
+    className="controls"
+  >
+    <StyledSelectControl
+      choices={
+        Array [
+          Array [
+            "a",
+            "abc",
+          ],
+          Array [
+            "b",
+            "bcd",
+          ],
+          Array [
+            "c",
+            "cde",
+          ],
+        ]
+      }
+      clearable={true}
+      deprecatedSelectControl={true}
+      disabled={false}
+      id="id-fieldName"
+      multiple={false}
+      name="fieldName"
+      onChange={[Function]}
+      required={false}
+      value="fieldValue"
+    />
+  </div>
+</div>
+`;
+
+exports[`SelectField deprecatedSelectControl renders without form context 1`] = `
+<SelectField
+  clearable={true}
+  deprecatedSelectControl={true}
+  disabled={false}
+  hideErrorMessage={false}
+  multiple={false}
+  name="fieldName"
+  options={
+    Array [
+      Object {
+        "label": "a",
+        "value": "a",
+      },
+      Object {
+        "label": "b",
+        "value": "b",
+      },
+    ]
+  }
+  required={false}
+  value="a"
+>
+  <div
+    className=""
+  >
+    <div
+      className="controls"
+    >
+      <StyledSelectControl
+        clearable={true}
+        deprecatedSelectControl={true}
+        disabled={false}
+        id="id-fieldName"
+        multiple={false}
+        name="fieldName"
+        onChange={[Function]}
+        options={
+          Array [
+            Object {
+              "label": "a",
+              "value": "a",
+            },
+            Object {
+              "label": "b",
+              "value": "b",
+            },
+          ]
+        }
+        required={false}
+        value="a"
+      >
+        <ForwardRef(RefForwardedSelectControl)
+          className="css-9gm53a-StyledSelectControl e1qrhqd00"
+          clearable={true}
+          deprecatedSelectControl={true}
+          disabled={false}
+          id="id-fieldName"
+          multiple={false}
+          name="fieldName"
+          onChange={[Function]}
+          options={
+            Array [
+              Object {
+                "label": "a",
+                "value": "a",
+              },
+              Object {
+                "label": "b",
+                "value": "b",
+              },
+            ]
+          }
+          required={false}
+          value="a"
+        >
+          <SelectControl
+            className="css-9gm53a-StyledSelectControl e1qrhqd00"
+            clearable={true}
+            deprecatedSelectControl={true}
+            disabled={false}
+            forwardedRef={null}
+            id="id-fieldName"
+            multiple={false}
+            name="fieldName"
+            onChange={[Function]}
+            options={
+              Array [
+                Object {
+                  "label": "a",
+                  "value": "a",
+                },
+                Object {
+                  "label": "b",
+                  "value": "b",
+                },
+              ]
+            }
+            required={false}
+            value="a"
+          >
+            <ForwardRef(RefForwardedSelectControl)
+              className="css-9gm53a-StyledSelectControl e1qrhqd00"
+              clearable={true}
+              disabled={false}
+              forwardedRef={null}
+              id="id-fieldName"
+              multiple={false}
+              name="fieldName"
+              onChange={[Function]}
+              options={
+                Array [
+                  Object {
+                    "label": "a",
+                    "value": "a",
+                  },
+                  Object {
+                    "label": "b",
+                    "value": "b",
+                  },
+                ]
+              }
+              required={false}
+              value="a"
+            >
+              <SelectControlLegacy
+                className="css-9gm53a-StyledSelectControl e1qrhqd00"
+                clearable={true}
+                disabled={false}
+                forwardedRef={null}
+                height={36}
+                id="id-fieldName"
+                multiple={false}
+                name="fieldName"
+                onChange={[Function]}
+                options={
+                  Array [
+                    Object {
+                      "label": "a",
+                      "value": "a",
+                    },
+                    Object {
+                      "label": "b",
+                      "value": "b",
+                    },
+                  ]
+                }
+                required={false}
+                value="a"
+              >
+                <StyledSelect
+                  arrowRenderer={[Function]}
+                  backspaceRemoves={true}
+                  className="css-9gm53a-StyledSelectControl e1qrhqd00"
+                  clearable={true}
+                  deleteRemoves={true}
+                  disabled={false}
+                  forwardedRef={null}
+                  height={36}
+                  id="id-fieldName"
+                  multiple={false}
+                  name="fieldName"
+                  onChange={[Function]}
+                  options={
+                    Array [
+                      Object {
+                        "label": "a",
+                        "value": "a",
+                      },
+                      Object {
+                        "label": "b",
+                        "value": "b",
+                      },
+                    ]
+                  }
+                  required={false}
+                  value="a"
+                >
+                  <SelectPicker
+                    arrowRenderer={[Function]}
+                    backspaceRemoves={true}
+                    className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                    clearable={true}
+                    deleteRemoves={true}
+                    disabled={false}
+                    forwardedRef={null}
+                    height={36}
+                    id="id-fieldName"
+                    multiple={false}
+                    name="fieldName"
+                    onChange={[Function]}
+                    options={
+                      Array [
+                        Object {
+                          "label": "a",
+                          "value": "a",
+                        },
+                        Object {
+                          "label": "b",
+                          "value": "b",
+                        },
+                      ]
+                    }
+                    required={false}
+                    value="a"
+                  >
+                    <Select
+                      arrowRenderer={[Function]}
+                      autosize={true}
+                      backspaceRemoves={true}
+                      backspaceToRemoveMessage="Press backspace to remove {label}"
+                      className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                      clearAllText="Clear all"
+                      clearRenderer={[Function]}
+                      clearValueText="Clear value"
+                      clearable={true}
+                      closeOnSelect={true}
+                      deleteRemoves={true}
+                      delimiter=","
+                      disabled={false}
+                      escapeClearsValue={true}
+                      filterOptions={[Function]}
+                      height={36}
+                      id="id-fieldName"
+                      ignoreAccents={true}
+                      ignoreCase={true}
+                      inputProps={Object {}}
+                      isLoading={false}
+                      joinValues={false}
+                      labelKey="label"
+                      matchPos="any"
+                      matchProp="any"
+                      menuBuffer={0}
+                      menuRenderer={[Function]}
+                      multi={false}
+                      multiple={false}
+                      name="fieldName"
+                      noResultsText="No results found"
+                      onBlurResetsInput={true}
+                      onChange={[Function]}
+                      onCloseResetsInput={true}
+                      onSelectResetsInput={true}
+                      openOnClick={true}
+                      optionComponent={[Function]}
+                      options={
+                        Array [
+                          Object {
+                            "label": "a",
+                            "value": "a",
+                          },
+                          Object {
+                            "label": "b",
+                            "value": "b",
+                          },
+                        ]
+                      }
+                      pageSize={5}
+                      placeholder="Select..."
+                      removeSelected={true}
+                      required={false}
+                      rtl={false}
+                      scrollMenuIntoView={true}
+                      searchable={true}
+                      simpleValue={false}
+                      tabSelectsValue={true}
+                      trimFilter={true}
+                      value="a"
+                      valueComponent={[Function]}
+                      valueKey="value"
+                    >
+                      <div
+                        className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0 has-value is-clearable is-searchable Select--single"
+                      >
+                        <input
+                          disabled={false}
+                          key="hidden.0"
+                          name="fieldName"
+                          type="hidden"
+                          value="a"
+                        />
+                        <div
+                          className="Select-control"
+                          onKeyDown={[Function]}
+                          onMouseDown={[Function]}
+                          onTouchEnd={[Function]}
+                          onTouchMove={[Function]}
+                          onTouchStart={[Function]}
+                        >
+                          <div
+                            className="Select-multi-value-wrapper"
+                            id="react-select-2--value"
+                          >
+                            <Value
+                              disabled={false}
+                              id="react-select-2--value-item"
+                              instancePrefix="react-select-2-"
+                              onClick={null}
+                              placeholder="Select..."
+                              value={
+                                Object {
+                                  "label": "a",
+                                  "value": "a",
+                                }
+                              }
+                            >
+                              <div
+                                className="Select-value"
+                              >
+                                <span
+                                  aria-selected="true"
+                                  className="Select-value-label"
+                                  id="react-select-2--value-item"
+                                  role="option"
+                                >
+                                  a
+                                </span>
+                              </div>
+                            </Value>
+                            <AutosizeInput
+                              aria-activedescendant="react-select-2--value"
+                              aria-expanded="false"
+                              aria-haspopup="false"
+                              aria-owns=""
+                              className="Select-input"
+                              id="id-fieldName"
+                              injectStyles={true}
+                              minWidth="5"
+                              onBlur={[Function]}
+                              onChange={[Function]}
+                              onFocus={[Function]}
+                              required={false}
+                              role="combobox"
+                              value=""
+                            >
+                              <div
+                                className="Select-input"
+                                style={
+                                  Object {
+                                    "display": "inline-block",
+                                  }
+                                }
+                              >
+                                <input
+                                  aria-activedescendant="react-select-2--value"
+                                  aria-expanded="false"
+                                  aria-haspopup="false"
+                                  aria-owns=""
+                                  id="id-fieldName"
+                                  onBlur={[Function]}
+                                  onChange={[Function]}
+                                  onFocus={[Function]}
+                                  required={false}
+                                  role="combobox"
+                                  style={
+                                    Object {
+                                      "boxSizing": "content-box",
+                                      "width": "5px",
+                                    }
+                                  }
+                                  value=""
+                                />
+                                <div
+                                  style={
+                                    Object {
+                                      "height": 0,
+                                      "left": 0,
+                                      "overflow": "scroll",
+                                      "position": "absolute",
+                                      "top": 0,
+                                      "visibility": "hidden",
+                                      "whiteSpace": "pre",
+                                    }
+                                  }
+                                />
+                              </div>
+                            </AutosizeInput>
+                          </div>
+                          <span
+                            aria-label="Clear value"
+                            className="Select-clear-zone"
+                            onMouseDown={[Function]}
+                            onTouchEnd={[Function]}
+                            onTouchMove={[Function]}
+                            onTouchStart={[Function]}
+                            title="Clear value"
+                          >
+                            <span
+                              className="Select-clear"
+                              dangerouslySetInnerHTML={
+                                Object {
+                                  "__html": "&times;",
+                                }
+                              }
+                            />
+                          </span>
+                          <span
+                            className="Select-arrow-zone"
+                            onMouseDown={[Function]}
+                          >
+                            <span
+                              className="icon-arrow-down"
+                            />
+                          </span>
+                        </div>
+                      </div>
+                    </Select>
+                  </SelectPicker>
+                </StyledSelect>
+              </SelectControlLegacy>
+            </ForwardRef(RefForwardedSelectControl)>
+          </SelectControl>
+        </ForwardRef(RefForwardedSelectControl)>
+      </StyledSelectControl>
+    </div>
+  </div>
+</SelectField>
+`;
diff --git a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
index ed441e51b1..5da74f7247 100644
--- a/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/selectField.spec.jsx.snap
@@ -1,6 +1,6 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`SelectField renders with flat choices 1`] = `
+exports[`SelectField deprecatedSelectControl renders with flat choices 1`] = `
 <div
   className=""
 >
@@ -16,6 +16,7 @@ exports[`SelectField renders with flat choices 1`] = `
         ]
       }
       clearable={true}
+      deprecatedSelectControl={true}
       disabled={false}
       id="id-fieldName"
       multiple={false}
@@ -28,7 +29,7 @@ exports[`SelectField renders with flat choices 1`] = `
 </div>
 `;
 
-exports[`SelectField renders with paired choices 1`] = `
+exports[`SelectField deprecatedSelectControl renders with paired choices 1`] = `
 <div
   className=""
 >
@@ -53,6 +54,7 @@ exports[`SelectField renders with paired choices 1`] = `
         ]
       }
       clearable={true}
+      deprecatedSelectControl={true}
       disabled={false}
       id="id-fieldName"
       multiple={false}
@@ -65,9 +67,10 @@ exports[`SelectField renders with paired choices 1`] = `
 </div>
 `;
 
-exports[`SelectField renders without form context 1`] = `
+exports[`SelectField deprecatedSelectControl renders without form context 1`] = `
 <SelectField
   clearable={true}
+  deprecatedSelectControl={true}
   disabled={false}
   hideErrorMessage={false}
   multiple={false}
@@ -95,6 +98,7 @@ exports[`SelectField renders without form context 1`] = `
     >
       <StyledSelectControl
         clearable={true}
+        deprecatedSelectControl={true}
         disabled={false}
         id="id-fieldName"
         multiple={false}
@@ -118,6 +122,7 @@ exports[`SelectField renders without form context 1`] = `
         <ForwardRef(RefForwardedSelectControl)
           className="css-9gm53a-StyledSelectControl e1qrhqd00"
           clearable={true}
+          deprecatedSelectControl={true}
           disabled={false}
           id="id-fieldName"
           multiple={false}
@@ -141,9 +146,9 @@ exports[`SelectField renders without form context 1`] = `
           <SelectControl
             className="css-9gm53a-StyledSelectControl e1qrhqd00"
             clearable={true}
+            deprecatedSelectControl={true}
             disabled={false}
             forwardedRef={null}
-            height={36}
             id="id-fieldName"
             multiple={false}
             name="fieldName"
@@ -163,15 +168,11 @@ exports[`SelectField renders without form context 1`] = `
             required={false}
             value="a"
           >
-            <StyledSelect
-              arrowRenderer={[Function]}
-              backspaceRemoves={true}
+            <ForwardRef(RefForwardedSelectControl)
               className="css-9gm53a-StyledSelectControl e1qrhqd00"
               clearable={true}
-              deleteRemoves={true}
               disabled={false}
               forwardedRef={null}
-              height={36}
               id="id-fieldName"
               multiple={false}
               name="fieldName"
@@ -191,12 +192,9 @@ exports[`SelectField renders without form context 1`] = `
               required={false}
               value="a"
             >
-              <SelectPicker
-                arrowRenderer={[Function]}
-                backspaceRemoves={true}
-                className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
+              <SelectControlLegacy
+                className="css-9gm53a-StyledSelectControl e1qrhqd00"
                 clearable={true}
-                deleteRemoves={true}
                 disabled={false}
                 forwardedRef={null}
                 height={36}
@@ -219,44 +217,19 @@ exports[`SelectField renders without form context 1`] = `
                 required={false}
                 value="a"
               >
-                <Select
+                <StyledSelect
                   arrowRenderer={[Function]}
-                  autosize={true}
                   backspaceRemoves={true}
-                  backspaceToRemoveMessage="Press backspace to remove {label}"
-                  className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
-                  clearAllText="Clear all"
-                  clearRenderer={[Function]}
-                  clearValueText="Clear value"
+                  className="css-9gm53a-StyledSelectControl e1qrhqd00"
                   clearable={true}
-                  closeOnSelect={true}
                   deleteRemoves={true}
-                  delimiter=","
                   disabled={false}
-                  escapeClearsValue={true}
-                  filterOptions={[Function]}
+                  forwardedRef={null}
                   height={36}
                   id="id-fieldName"
-                  ignoreAccents={true}
-                  ignoreCase={true}
-                  inputProps={Object {}}
-                  isLoading={false}
-                  joinValues={false}
-                  labelKey="label"
-                  matchPos="any"
-                  matchProp="any"
-                  menuBuffer={0}
-                  menuRenderer={[Function]}
-                  multi={false}
                   multiple={false}
                   name="fieldName"
-                  noResultsText="No results found"
-                  onBlurResetsInput={true}
                   onChange={[Function]}
-                  onCloseResetsInput={true}
-                  onSelectResetsInput={true}
-                  openOnClick={true}
-                  optionComponent={[Function]}
                   options={
                     Array [
                       Object {
@@ -269,158 +242,241 @@ exports[`SelectField renders without form context 1`] = `
                       },
                     ]
                   }
-                  pageSize={5}
-                  placeholder="Select..."
-                  removeSelected={true}
                   required={false}
-                  rtl={false}
-                  scrollMenuIntoView={true}
-                  searchable={true}
-                  simpleValue={false}
-                  tabSelectsValue={true}
-                  trimFilter={true}
                   value="a"
-                  valueComponent={[Function]}
-                  valueKey="value"
                 >
-                  <div
-                    className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20 has-value is-clearable is-searchable Select--single"
+                  <SelectPicker
+                    arrowRenderer={[Function]}
+                    backspaceRemoves={true}
+                    className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                    clearable={true}
+                    deleteRemoves={true}
+                    disabled={false}
+                    forwardedRef={null}
+                    height={36}
+                    id="id-fieldName"
+                    multiple={false}
+                    name="fieldName"
+                    onChange={[Function]}
+                    options={
+                      Array [
+                        Object {
+                          "label": "a",
+                          "value": "a",
+                        },
+                        Object {
+                          "label": "b",
+                          "value": "b",
+                        },
+                      ]
+                    }
+                    required={false}
+                    value="a"
                   >
-                    <input
+                    <Select
+                      arrowRenderer={[Function]}
+                      autosize={true}
+                      backspaceRemoves={true}
+                      backspaceToRemoveMessage="Press backspace to remove {label}"
+                      className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                      clearAllText="Clear all"
+                      clearRenderer={[Function]}
+                      clearValueText="Clear value"
+                      clearable={true}
+                      closeOnSelect={true}
+                      deleteRemoves={true}
+                      delimiter=","
                       disabled={false}
-                      key="hidden.0"
+                      escapeClearsValue={true}
+                      filterOptions={[Function]}
+                      height={36}
+                      id="id-fieldName"
+                      ignoreAccents={true}
+                      ignoreCase={true}
+                      inputProps={Object {}}
+                      isLoading={false}
+                      joinValues={false}
+                      labelKey="label"
+                      matchPos="any"
+                      matchProp="any"
+                      menuBuffer={0}
+                      menuRenderer={[Function]}
+                      multi={false}
+                      multiple={false}
                       name="fieldName"
-                      type="hidden"
+                      noResultsText="No results found"
+                      onBlurResetsInput={true}
+                      onChange={[Function]}
+                      onCloseResetsInput={true}
+                      onSelectResetsInput={true}
+                      openOnClick={true}
+                      optionComponent={[Function]}
+                      options={
+                        Array [
+                          Object {
+                            "label": "a",
+                            "value": "a",
+                          },
+                          Object {
+                            "label": "b",
+                            "value": "b",
+                          },
+                        ]
+                      }
+                      pageSize={5}
+                      placeholder="Select..."
+                      removeSelected={true}
+                      required={false}
+                      rtl={false}
+                      scrollMenuIntoView={true}
+                      searchable={true}
+                      simpleValue={false}
+                      tabSelectsValue={true}
+                      trimFilter={true}
                       value="a"
-                    />
-                    <div
-                      className="Select-control"
-                      onKeyDown={[Function]}
-                      onMouseDown={[Function]}
-                      onTouchEnd={[Function]}
-                      onTouchMove={[Function]}
-                      onTouchStart={[Function]}
+                      valueComponent={[Function]}
+                      valueKey="value"
                     >
                       <div
-                        className="Select-multi-value-wrapper"
-                        id="react-select-2--value"
+                        className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0 has-value is-clearable is-searchable Select--single"
                       >
-                        <Value
+                        <input
                           disabled={false}
-                          id="react-select-2--value-item"
-                          instancePrefix="react-select-2-"
-                          onClick={null}
-                          placeholder="Select..."
-                          value={
-                            Object {
-                              "label": "a",
-                              "value": "a",
-                            }
-                          }
+                          key="hidden.0"
+                          name="fieldName"
+                          type="hidden"
+                          value="a"
+                        />
+                        <div
+                          className="Select-control"
+                          onKeyDown={[Function]}
+                          onMouseDown={[Function]}
+                          onTouchEnd={[Function]}
+                          onTouchMove={[Function]}
+                          onTouchStart={[Function]}
                         >
                           <div
-                            className="Select-value"
+                            className="Select-multi-value-wrapper"
+                            id="react-select-2--value"
                           >
-                            <span
-                              aria-selected="true"
-                              className="Select-value-label"
+                            <Value
+                              disabled={false}
                               id="react-select-2--value-item"
-                              role="option"
-                            >
-                              a
-                            </span>
-                          </div>
-                        </Value>
-                        <AutosizeInput
-                          aria-activedescendant="react-select-2--value"
-                          aria-expanded="false"
-                          aria-haspopup="false"
-                          aria-owns=""
-                          className="Select-input"
-                          id="id-fieldName"
-                          injectStyles={true}
-                          minWidth="5"
-                          onBlur={[Function]}
-                          onChange={[Function]}
-                          onFocus={[Function]}
-                          required={false}
-                          role="combobox"
-                          value=""
-                        >
-                          <div
-                            className="Select-input"
-                            style={
-                              Object {
-                                "display": "inline-block",
+                              instancePrefix="react-select-2-"
+                              onClick={null}
+                              placeholder="Select..."
+                              value={
+                                Object {
+                                  "label": "a",
+                                  "value": "a",
+                                }
                               }
-                            }
-                          >
-                            <input
+                            >
+                              <div
+                                className="Select-value"
+                              >
+                                <span
+                                  aria-selected="true"
+                                  className="Select-value-label"
+                                  id="react-select-2--value-item"
+                                  role="option"
+                                >
+                                  a
+                                </span>
+                              </div>
+                            </Value>
+                            <AutosizeInput
                               aria-activedescendant="react-select-2--value"
                               aria-expanded="false"
                               aria-haspopup="false"
                               aria-owns=""
+                              className="Select-input"
                               id="id-fieldName"
+                              injectStyles={true}
+                              minWidth="5"
                               onBlur={[Function]}
                               onChange={[Function]}
                               onFocus={[Function]}
                               required={false}
                               role="combobox"
-                              style={
-                                Object {
-                                  "boxSizing": "content-box",
-                                  "width": "5px",
-                                }
-                              }
                               value=""
-                            />
-                            <div
-                              style={
+                            >
+                              <div
+                                className="Select-input"
+                                style={
+                                  Object {
+                                    "display": "inline-block",
+                                  }
+                                }
+                              >
+                                <input
+                                  aria-activedescendant="react-select-2--value"
+                                  aria-expanded="false"
+                                  aria-haspopup="false"
+                                  aria-owns=""
+                                  id="id-fieldName"
+                                  onBlur={[Function]}
+                                  onChange={[Function]}
+                                  onFocus={[Function]}
+                                  required={false}
+                                  role="combobox"
+                                  style={
+                                    Object {
+                                      "boxSizing": "content-box",
+                                      "width": "5px",
+                                    }
+                                  }
+                                  value=""
+                                />
+                                <div
+                                  style={
+                                    Object {
+                                      "height": 0,
+                                      "left": 0,
+                                      "overflow": "scroll",
+                                      "position": "absolute",
+                                      "top": 0,
+                                      "visibility": "hidden",
+                                      "whiteSpace": "pre",
+                                    }
+                                  }
+                                />
+                              </div>
+                            </AutosizeInput>
+                          </div>
+                          <span
+                            aria-label="Clear value"
+                            className="Select-clear-zone"
+                            onMouseDown={[Function]}
+                            onTouchEnd={[Function]}
+                            onTouchMove={[Function]}
+                            onTouchStart={[Function]}
+                            title="Clear value"
+                          >
+                            <span
+                              className="Select-clear"
+                              dangerouslySetInnerHTML={
                                 Object {
-                                  "height": 0,
-                                  "left": 0,
-                                  "overflow": "scroll",
-                                  "position": "absolute",
-                                  "top": 0,
-                                  "visibility": "hidden",
-                                  "whiteSpace": "pre",
+                                  "__html": "&times;",
                                 }
                               }
                             />
-                          </div>
-                        </AutosizeInput>
+                          </span>
+                          <span
+                            className="Select-arrow-zone"
+                            onMouseDown={[Function]}
+                          >
+                            <span
+                              className="icon-arrow-down"
+                            />
+                          </span>
+                        </div>
                       </div>
-                      <span
-                        aria-label="Clear value"
-                        className="Select-clear-zone"
-                        onMouseDown={[Function]}
-                        onTouchEnd={[Function]}
-                        onTouchMove={[Function]}
-                        onTouchStart={[Function]}
-                        title="Clear value"
-                      >
-                        <span
-                          className="Select-clear"
-                          dangerouslySetInnerHTML={
-                            Object {
-                              "__html": "&times;",
-                            }
-                          }
-                        />
-                      </span>
-                      <span
-                        className="Select-arrow-zone"
-                        onMouseDown={[Function]}
-                      >
-                        <span
-                          className="icon-arrow-down"
-                        />
-                      </span>
-                    </div>
-                  </div>
-                </Select>
-              </SelectPicker>
-            </StyledSelect>
+                    </Select>
+                  </SelectPicker>
+                </StyledSelect>
+              </SelectControlLegacy>
+            </ForwardRef(RefForwardedSelectControl)>
           </SelectControl>
         </ForwardRef(RefForwardedSelectControl)>
       </StyledSelectControl>
diff --git a/tests/js/spec/components/forms/selectAsyncField.spec.jsx b/tests/js/spec/components/forms/selectAsyncField.spec.jsx
index fa69c51bc6..54e94d5d5e 100644
--- a/tests/js/spec/components/forms/selectAsyncField.spec.jsx
+++ b/tests/js/spec/components/forms/selectAsyncField.spec.jsx
@@ -19,68 +19,73 @@ describe('SelectAsyncField', function() {
     });
   });
 
-  it('supports autocomplete arguments from an integration', async function() {
-    const wrapper = mountWithTheme(
-      <SelectAsyncField url="/foo/bar/" name="fieldName" />,
-      TestStubs.routerContext()
-    );
+  describe('deprecatedSelectControl', function() {
+    it('supports autocomplete arguments from an integration', async function() {
+      const wrapper = mountWithTheme(
+        <SelectAsyncField deprecatedSelectControl url="/foo/bar/" name="fieldName" />
+      );
 
-    wrapper.find('input[id="id-fieldName"]').simulate('change', {target: {value: 'baz'}});
+      wrapper
+        .find('input[id="id-fieldName"]')
+        .simulate('change', {target: {value: 'baz'}});
 
-    expect(api).toHaveBeenCalled();
+      expect(api).toHaveBeenCalled();
 
-    await tick();
-    wrapper.update();
+      await tick();
+      wrapper.update();
 
-    // Is in select menu
-    expect(wrapper.find('Select').prop('options')).toEqual([
-      expect.objectContaining({
-        value: 'baz',
-        label: 'Baz Label',
-      }),
-    ]);
-  });
+      // Is in select menu
+      expect(wrapper.find('Select').prop('options')).toEqual([
+        expect.objectContaining({
+          value: 'baz',
+          label: 'Baz Label',
+        }),
+      ]);
+    });
 
-  it('with Form context', async function() {
-    const submitMock = jest.fn();
-    const wrapper = mountWithTheme(
-      <Form onSubmit={submitMock}>
-        <SelectAsyncField url="/foo/bar/" name="fieldName" />
-      </Form>,
-      TestStubs.routerContext()
-    );
+    it('with Form context', async function() {
+      const submitMock = jest.fn();
+      const wrapper = mountWithTheme(
+        <Form onSubmit={submitMock}>
+          <SelectAsyncField deprecatedSelectControl url="/foo/bar/" name="fieldName" />
+        </Form>,
+        {}
+      );
 
-    wrapper.find('input[id="id-fieldName"]').simulate('change', {target: {value: 'baz'}});
+      wrapper
+        .find('input[id="id-fieldName"]')
+        .simulate('change', {target: {value: 'baz'}});
 
-    await tick();
-    wrapper.update();
+      await tick();
+      wrapper.update();
 
-    // Is in select menu
-    expect(wrapper.find('Select').prop('options')).toEqual([
-      expect.objectContaining({
-        value: 'baz',
-        label: 'Baz Label',
-      }),
-    ]);
+      // Is in select menu
+      expect(wrapper.find('Select').prop('options')).toEqual([
+        expect.objectContaining({
+          value: 'baz',
+          label: 'Baz Label',
+        }),
+      ]);
 
-    // Select item
-    wrapper.find('input[id="id-fieldName"]').simulate('keyDown', {keyCode: 13});
+      // Select item
+      wrapper.find('input[id="id-fieldName"]').simulate('keyDown', {keyCode: 13});
 
-    // SelectControl MUST have the value object, not just a simple value
-    // otherwise it means that selecting an item that has been populated in the menu by
-    // an async request will not work (nothing will appear selected).
-    expect(wrapper.find('SelectControl').prop('value')).toEqual({
-      value: 'baz',
-      label: expect.anything(),
-    });
+      // SelectControl MUST have the value object, not just a simple value
+      // otherwise it means that selecting an item that has been populated in the menu by
+      // an async request will not work (nothing will appear selected).
+      expect(wrapper.find('SelectControl').prop('value')).toEqual({
+        value: 'baz',
+        label: expect.anything(),
+      });
 
-    wrapper.find('Form').simulate('submit');
-    expect(submitMock).toHaveBeenCalledWith(
-      {
-        fieldName: 'baz',
-      },
-      expect.anything(),
-      expect.anything()
-    );
+      wrapper.find('Form').simulate('submit');
+      expect(submitMock).toHaveBeenCalledWith(
+        {
+          fieldName: 'baz',
+        },
+        expect.anything(),
+        expect.anything()
+      );
+    });
   });
 });
diff --git a/tests/js/spec/components/forms/selectControl.spec.jsx b/tests/js/spec/components/forms/selectControl.spec.jsx
deleted file mode 100644
index d022af6078..0000000000
--- a/tests/js/spec/components/forms/selectControl.spec.jsx
+++ /dev/null
@@ -1,100 +0,0 @@
-import React from 'react';
-import {mountWithTheme} from 'sentry-test/enzyme';
-
-import SelectControl from 'app/components/forms/selectControl';
-
-describe('SelectControl', function() {
-  it('renders with react-select "options"', function() {
-    const wrapper = mountWithTheme(
-      <SelectControl options={[{value: 'foo', label: 'Foo'}]} />
-    );
-
-    expect(wrapper.find('StyledSelect').prop('options')).toEqual([
-      {value: 'foo', label: 'Foo'},
-    ]);
-  });
-
-  it('renders with react-select "multi"', function() {
-    let wrapper = mountWithTheme(<SelectControl multiple />);
-
-    expect(wrapper.find('StyledSelect').prop('multi')).toEqual(true);
-
-    wrapper = mountWithTheme(<SelectControl multi />);
-
-    expect(wrapper.find('StyledSelect').prop('multi')).toEqual(true);
-
-    wrapper = mountWithTheme(<SelectControl />);
-
-    expect(wrapper.find('StyledSelect').prop('multi')).toBeUndefined();
-  });
-
-  it('renders with select2 flat "choices"', function() {
-    const wrapper = mountWithTheme(
-      <SelectControl choices={['a', 'b', 'c']} name="fieldName" />
-    );
-    expect(wrapper.find('StyledSelect').prop('options')).toEqual([
-      {value: 'a', label: 'a'},
-      {value: 'b', label: 'b'},
-      {value: 'c', label: 'c'},
-    ]);
-  });
-
-  it('renders with select2 paired "choices"', function() {
-    const wrapper = mountWithTheme(
-      <SelectControl
-        choices={[
-          ['a', 'abc'],
-          ['b', 'bcd'],
-          ['c', 'cde'],
-        ]}
-        name="fieldName"
-      />
-    );
-    expect(wrapper.find('StyledSelect').prop('options')).toEqual([
-      {value: 'a', label: 'abc'},
-      {value: 'b', label: 'bcd'},
-      {value: 'c', label: 'cde'},
-    ]);
-  });
-
-  it('renders with complex objects with paired "choices"', function() {
-    const mock = jest.fn();
-    const Foo = <div>Foo</div>;
-    const Bar = <div>Bar</div>;
-
-    const wrapper = mountWithTheme(
-      <SelectControl
-        choices={[
-          [{id: 'foo', name: 'Foo'}, Foo],
-          [{id: 'bar', name: 'Bar'}, Bar],
-        ]}
-        name="fieldName"
-        onChange={mock}
-      />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper.find('StyledSelect').prop('options')).toEqual([
-      {value: {id: 'foo', name: 'Foo'}, label: Foo},
-      {value: {id: 'bar', name: 'Bar'}, label: Bar},
-    ]);
-
-    wrapper.find('input').simulate('focus');
-    wrapper.find('.Select-control').simulate('mouseDown', {button: 0});
-    expect(
-      wrapper
-        .find('div.Select-option')
-        .first()
-        .prop('children')
-    ).toEqual(Foo);
-
-    wrapper
-      .find('Option')
-      .first()
-      .simulate('mouseDown');
-
-    expect(mock).toHaveBeenCalledWith({
-      value: {id: 'foo', name: 'Foo'},
-      label: Foo,
-    });
-  });
-});
diff --git a/tests/js/spec/components/forms/selectControlLegacy.spec.jsx b/tests/js/spec/components/forms/selectControlLegacy.spec.jsx
new file mode 100644
index 0000000000..1763397a0b
--- /dev/null
+++ b/tests/js/spec/components/forms/selectControlLegacy.spec.jsx
@@ -0,0 +1,119 @@
+import React from 'react';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
+import {selectByValue} from 'sentry-test/select';
+
+import {Form, SelectField} from 'app/components/forms';
+
+describe('SelectField', function() {
+  describe('deprecatedSelectControl', function() {
+    it('renders without form context', function() {
+      const wrapper = mountWithTheme(
+        <SelectField
+          deprecatedSelectControl
+          options={[
+            {label: 'a', value: 'a'},
+            {label: 'b', value: 'b'},
+          ]}
+          name="fieldName"
+          value="a"
+        />
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
+
+    it('renders with flat choices', function() {
+      const wrapper = shallow(
+        <SelectField
+          deprecatedSelectControl
+          choices={['a', 'b', 'c']}
+          name="fieldName"
+        />,
+        {
+          context: {
+            form: {
+              data: {
+                fieldName: 'fieldValue',
+              },
+              errors: {},
+            },
+          },
+        }
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
+
+    it('renders with paired choices', function() {
+      const wrapper = shallow(
+        <SelectField
+          deprecatedSelectControl
+          choices={[
+            ['a', 'abc'],
+            ['b', 'bcd'],
+            ['c', 'cde'],
+          ]}
+          name="fieldName"
+        />,
+        {
+          context: {
+            form: {
+              data: {
+                fieldName: 'fieldValue',
+              },
+              errors: {},
+            },
+          },
+        }
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
+
+    it('can change value and submit', function() {
+      const mock = jest.fn();
+      const wrapper = mountWithTheme(
+        <Form onSubmit={mock}>
+          <SelectField
+            deprecatedSelectControl
+            options={[
+              {label: 'a', value: 'a'},
+              {label: 'b', value: 'b'},
+            ]}
+            name="fieldName"
+          />
+        </Form>
+      );
+      selectByValue(wrapper, 'a', {name: 'fieldName'});
+      wrapper.find('Form').simulate('submit');
+      expect(mock).toHaveBeenCalledWith(
+        {fieldName: 'a'},
+        expect.anything(),
+        expect.anything()
+      );
+    });
+
+    describe('Multiple', function() {
+      it('selects multiple values and submits', function() {
+        const mock = jest.fn();
+        const wrapper = mountWithTheme(
+          <Form onSubmit={mock}>
+            <SelectField
+              deprecatedSelectControl
+              multiple
+              options={[
+                {label: 'a', value: 'a'},
+                {label: 'b', value: 'b'},
+              ]}
+              name="fieldName"
+            />
+          </Form>
+        );
+        selectByValue(wrapper, 'a', {name: 'fieldName'});
+        wrapper.find('Form').simulate('submit');
+        expect(mock).toHaveBeenCalledWith(
+          {fieldName: ['a']},
+          expect.anything(),
+          expect.anything()
+        );
+      });
+    });
+  });
+});
diff --git a/tests/js/spec/components/forms/selectCreatableField.spec.jsx b/tests/js/spec/components/forms/selectCreatableField.spec.jsx
index 59e7c37f4b..bd0c3075a7 100644
--- a/tests/js/spec/components/forms/selectCreatableField.spec.jsx
+++ b/tests/js/spec/components/forms/selectCreatableField.spec.jsx
@@ -4,135 +4,150 @@ import {mountWithTheme} from 'sentry-test/enzyme';
 import {Form, SelectCreatableField} from 'app/components/forms';
 
 describe('SelectCreatableField', function() {
-  it('can add user input into select field when using options', function() {
-    const wrapper = mountWithTheme(
-      <SelectCreatableField options={[{value: 'foo', label: 'Foo'}]} name="fieldName" />,
-      TestStubs.routerContext()
-    );
-
-    wrapper
-      .find('input[id="id-fieldName"]')
-      .simulate('change', {target: {value: 'bar'}})
-      .simulate('keyDown', {keyCode: 13});
-    wrapper.update();
-
-    // Is selected
-    expect(wrapper.find('.Select-value-label').text()).toBe('bar');
-
-    // Is in select menu
-    expect(wrapper.find('Select').prop('options')).toEqual([
-      expect.objectContaining({
-        value: 'bar',
-        label: 'bar',
-      }),
-      {
-        value: 'foo',
-        label: 'Foo',
-      },
-    ]);
-  });
-
-  it('can add user input into select field when using choices', function() {
-    const wrapper = mountWithTheme(
-      <SelectCreatableField choices={['foo']} name="fieldName" />,
-      TestStubs.routerContext()
-    );
-
-    wrapper
-      .find('input[id="id-fieldName"]')
-      .simulate('change', {target: {value: 'bar'}})
-      .simulate('keyDown', {keyCode: 13});
-    wrapper.update();
-
-    // Is selected
-    expect(wrapper.find('.Select-value-label').text()).toBe('bar');
-
-    // Is in select menu
-    expect(wrapper.find('Select').prop('options')).toEqual([
-      expect.objectContaining({
-        value: 'bar',
-        label: 'bar',
-      }),
-      {
-        value: 'foo',
-        label: 'foo',
-      },
-    ]);
-  });
-
-  it('can add user input into select field when using paired choices', function() {
-    const wrapper = mountWithTheme(
-      <SelectCreatableField choices={[['foo', 'foo']]} name="fieldName" />,
-      TestStubs.routerContext()
-    );
-
-    wrapper
-      .find('input[id="id-fieldName"]')
-      .simulate('change', {target: {value: 'bar'}})
-      .simulate('keyDown', {keyCode: 13});
-    wrapper.update();
-
-    // Is selected
-    expect(wrapper.find('.Select-value-label').text()).toBe('bar');
-
-    // Is in select menu
-    expect(wrapper.find('Select').prop('options')).toEqual([
-      expect.objectContaining({
-        value: 'bar',
-        label: 'bar',
-      }),
-      {
-        value: 'foo',
-        label: 'foo',
-      },
-    ]);
-  });
-
-  it('with Form context', function() {
-    const submitMock = jest.fn();
-    const wrapper = mountWithTheme(
-      <Form onSubmit={submitMock}>
-        <SelectCreatableField choices={[['foo', 'foo']]} name="fieldName" />
-      </Form>,
-      TestStubs.routerContext()
-    );
-
-    wrapper
-      .find('input[id="id-fieldName"]')
-      .simulate('change', {target: {value: 'bar'}})
-      .simulate('keyDown', {keyCode: 13});
-    wrapper.update();
-
-    // Is selected
-    expect(wrapper.find('.Select-value-label').text()).toBe('bar');
-
-    // Is in select menu
-    expect(wrapper.find('Select').prop('options')).toEqual([
-      expect.objectContaining({
-        value: 'bar',
-        label: 'bar',
-      }),
-      {
-        value: 'foo',
-        label: 'foo',
-      },
-    ]);
-
-    // SelectControl should have the value object, not just a simple value
-    expect(wrapper.find('SelectControl').prop('value')).toEqual(
-      expect.objectContaining({
-        value: 'bar',
-        label: 'bar',
-      })
-    );
-
-    wrapper.find('Form').simulate('submit');
-    expect(submitMock).toHaveBeenCalledWith(
-      {
-        fieldName: 'bar',
-      },
-      expect.anything(),
-      expect.anything()
-    );
+  describe('deprecatedSelectControl', function() {
+    it('can add user input into select field when using options', function() {
+      const wrapper = mountWithTheme(
+        <SelectCreatableField
+          deprecatedSelectControl
+          options={[{value: 'foo', label: 'Foo'}]}
+          name="fieldName"
+        />
+      );
+
+      wrapper
+        .find('input[id="id-fieldName"]')
+        .simulate('change', {target: {value: 'bar'}})
+        .simulate('keyDown', {keyCode: 13});
+      wrapper.update();
+
+      // Is selected
+      expect(wrapper.find('.Select-value-label').text()).toBe('bar');
+
+      // Is in select menu
+      expect(wrapper.find('Select').prop('options')).toEqual([
+        expect.objectContaining({
+          value: 'bar',
+          label: 'bar',
+        }),
+        {
+          value: 'foo',
+          label: 'Foo',
+        },
+      ]);
+    });
+
+    it('can add user input into select field when using choices', function() {
+      const wrapper = mountWithTheme(
+        <SelectCreatableField
+          deprecatedSelectControl
+          choices={['foo']}
+          name="fieldName"
+        />
+      );
+
+      wrapper
+        .find('input[id="id-fieldName"]')
+        .simulate('change', {target: {value: 'bar'}})
+        .simulate('keyDown', {keyCode: 13});
+      wrapper.update();
+
+      // Is selected
+      expect(wrapper.find('.Select-value-label').text()).toBe('bar');
+
+      // Is in select menu
+      expect(wrapper.find('Select').prop('options')).toEqual([
+        expect.objectContaining({
+          value: 'bar',
+          label: 'bar',
+        }),
+        {
+          value: 'foo',
+          label: 'foo',
+        },
+      ]);
+    });
+
+    it('can add user input into select field when using paired choices', function() {
+      const wrapper = mountWithTheme(
+        <SelectCreatableField
+          deprecatedSelectControl
+          choices={[['foo', 'foo']]}
+          name="fieldName"
+        />
+      );
+
+      wrapper
+        .find('input[id="id-fieldName"]')
+        .simulate('change', {target: {value: 'bar'}})
+        .simulate('keyDown', {keyCode: 13});
+      wrapper.update();
+
+      // Is selected
+      expect(wrapper.find('.Select-value-label').text()).toBe('bar');
+
+      // Is in select menu
+      expect(wrapper.find('Select').prop('options')).toEqual([
+        expect.objectContaining({
+          value: 'bar',
+          label: 'bar',
+        }),
+        {
+          value: 'foo',
+          label: 'foo',
+        },
+      ]);
+    });
+
+    it('with Form context', function() {
+      const submitMock = jest.fn();
+      const wrapper = mountWithTheme(
+        <Form onSubmit={submitMock}>
+          <SelectCreatableField
+            deprecatedSelectControl
+            choices={[['foo', 'foo']]}
+            name="fieldName"
+          />
+        </Form>,
+        {}
+      );
+
+      wrapper
+        .find('input[id="id-fieldName"]')
+        .simulate('change', {target: {value: 'bar'}})
+        .simulate('keyDown', {keyCode: 13});
+      wrapper.update();
+
+      // Is selected
+      expect(wrapper.find('.Select-value-label').text()).toBe('bar');
+
+      // Is in select menu
+      expect(wrapper.find('Select').prop('options')).toEqual([
+        expect.objectContaining({
+          value: 'bar',
+          label: 'bar',
+        }),
+        {
+          value: 'foo',
+          label: 'foo',
+        },
+      ]);
+
+      // SelectControl should have the value object, not just a simple value
+      expect(wrapper.find('SelectControl').prop('value')).toEqual(
+        expect.objectContaining({
+          value: 'bar',
+          label: 'bar',
+        })
+      );
+
+      wrapper.find('Form').simulate('submit');
+      expect(submitMock).toHaveBeenCalledWith(
+        {
+          fieldName: 'bar',
+        },
+        expect.anything(),
+        expect.anything()
+      );
+    });
   });
 });
diff --git a/tests/js/spec/components/forms/selectField.spec.jsx b/tests/js/spec/components/forms/selectField.spec.jsx
index 49bebb7421..1763397a0b 100644
--- a/tests/js/spec/components/forms/selectField.spec.jsx
+++ b/tests/js/spec/components/forms/selectField.spec.jsx
@@ -1,109 +1,119 @@
+import React from 'react';
 import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import {selectByValue} from 'sentry-test/select';
-import React from 'react';
 
 import {Form, SelectField} from 'app/components/forms';
 
 describe('SelectField', function() {
-  it('renders without form context', function() {
-    const wrapper = mountWithTheme(
-      <SelectField
-        options={[
-          {label: 'a', value: 'a'},
-          {label: 'b', value: 'b'},
-        ]}
-        name="fieldName"
-        value="a"
-      />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('renders with flat choices', function() {
-    const wrapper = shallow(<SelectField choices={['a', 'b', 'c']} name="fieldName" />, {
-      context: {
-        form: {
-          data: {
-            fieldName: 'fieldValue',
-          },
-          errors: {},
-        },
-      },
+  describe('deprecatedSelectControl', function() {
+    it('renders without form context', function() {
+      const wrapper = mountWithTheme(
+        <SelectField
+          deprecatedSelectControl
+          options={[
+            {label: 'a', value: 'a'},
+            {label: 'b', value: 'b'},
+          ]}
+          name="fieldName"
+          value="a"
+        />
+      );
+      expect(wrapper).toMatchSnapshot();
     });
-    expect(wrapper).toMatchSnapshot();
-  });
 
-  it('renders with paired choices', function() {
-    const wrapper = shallow(
-      <SelectField
-        choices={[
-          ['a', 'abc'],
-          ['b', 'bcd'],
-          ['c', 'cde'],
-        ]}
-        name="fieldName"
-      />,
-      {
-        context: {
-          form: {
-            data: {
-              fieldName: 'fieldValue',
+    it('renders with flat choices', function() {
+      const wrapper = shallow(
+        <SelectField
+          deprecatedSelectControl
+          choices={['a', 'b', 'c']}
+          name="fieldName"
+        />,
+        {
+          context: {
+            form: {
+              data: {
+                fieldName: 'fieldValue',
+              },
+              errors: {},
             },
-            errors: {},
           },
-        },
-      }
-    );
-    expect(wrapper).toMatchSnapshot();
-  });
+        }
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
 
-  it('can change value and submit', function() {
-    const mock = jest.fn();
-    const wrapper = mountWithTheme(
-      <Form onSubmit={mock}>
+    it('renders with paired choices', function() {
+      const wrapper = shallow(
         <SelectField
-          options={[
-            {label: 'a', value: 'a'},
-            {label: 'b', value: 'b'},
+          deprecatedSelectControl
+          choices={[
+            ['a', 'abc'],
+            ['b', 'bcd'],
+            ['c', 'cde'],
           ]}
           name="fieldName"
-        />
-      </Form>,
-      TestStubs.routerContext()
-    );
-    selectByValue(wrapper, 'a', {name: 'fieldName'});
-    wrapper.find('Form').simulate('submit');
-    expect(mock).toHaveBeenCalledWith(
-      {fieldName: 'a'},
-      expect.anything(),
-      expect.anything()
-    );
-  });
+        />,
+        {
+          context: {
+            form: {
+              data: {
+                fieldName: 'fieldValue',
+              },
+              errors: {},
+            },
+          },
+        }
+      );
+      expect(wrapper).toMatchSnapshot();
+    });
 
-  describe('Multiple', function() {
-    it('selects multiple values and submits', function() {
+    it('can change value and submit', function() {
       const mock = jest.fn();
       const wrapper = mountWithTheme(
         <Form onSubmit={mock}>
           <SelectField
-            multiple
+            deprecatedSelectControl
             options={[
               {label: 'a', value: 'a'},
               {label: 'b', value: 'b'},
             ]}
             name="fieldName"
           />
-        </Form>,
-        TestStubs.routerContext()
+        </Form>
       );
       selectByValue(wrapper, 'a', {name: 'fieldName'});
       wrapper.find('Form').simulate('submit');
       expect(mock).toHaveBeenCalledWith(
-        {fieldName: ['a']},
+        {fieldName: 'a'},
         expect.anything(),
         expect.anything()
       );
     });
+
+    describe('Multiple', function() {
+      it('selects multiple values and submits', function() {
+        const mock = jest.fn();
+        const wrapper = mountWithTheme(
+          <Form onSubmit={mock}>
+            <SelectField
+              deprecatedSelectControl
+              multiple
+              options={[
+                {label: 'a', value: 'a'},
+                {label: 'b', value: 'b'},
+              ]}
+              name="fieldName"
+            />
+          </Form>
+        );
+        selectByValue(wrapper, 'a', {name: 'fieldName'});
+        wrapper.find('Form').simulate('submit');
+        expect(mock).toHaveBeenCalledWith(
+          {fieldName: ['a']},
+          expect.anything(),
+          expect.anything()
+        );
+      });
+    });
   });
 });
diff --git a/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap
index 41a696d9c4..f13a467f9b 100644
--- a/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/externalIssueForm.spec.jsx.snap
@@ -373,6 +373,7 @@ exports[`ExternalIssueForm link renders 1`] = `
               ]
             }
             default="scefali/test"
+            deprecatedSelectControl={true}
             disabled={false}
             escapeMarkup={true}
             field={[Function]}
@@ -413,6 +414,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                 ]
               }
               default="scefali/test"
+              deprecatedSelectControl={true}
               disabled={false}
               escapeMarkup={true}
               field={[Function]}
@@ -452,6 +454,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                   ]
                 }
                 default="scefali/test"
+                deprecatedSelectControl={true}
                 disabled={false}
                 escapeMarkup={true}
                 field={[Function]}
@@ -492,6 +495,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                     ]
                   }
                   default="scefali/test"
+                  deprecatedSelectControl={true}
                   disabled={false}
                   escapeMarkup={true}
                   field={[Function]}
@@ -581,6 +585,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                     ],
                                     "className": undefined,
                                     "default": "scefali/test",
+                                    "deprecatedSelectControl": true,
                                     "disabled": false,
                                     "escapeMarkup": true,
                                     "field": [Function],
@@ -612,6 +617,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                     "choices": Array [],
                                     "className": undefined,
                                     "default": "",
+                                    "deprecatedSelectControl": true,
                                     "disabled": false,
                                     "escapeMarkup": true,
                                     "field": [Function],
@@ -730,6 +736,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                         }
                                         clearable={false}
                                         default="scefali/test"
+                                        deprecatedSelectControl={true}
                                         disabled={false}
                                         error={false}
                                         escapeMarkup={true}
@@ -793,13 +800,13 @@ exports[`ExternalIssueForm link renders 1`] = `
                                           }
                                           clearable={false}
                                           default="scefali/test"
+                                          deprecatedSelectControl={true}
                                           disabled={false}
                                           error={false}
                                           escapeMarkup={true}
                                           field={[Function]}
                                           formatMessageValue={[Function]}
                                           forwardedRef={[Function]}
-                                          height={36}
                                           id="repo"
                                           initialData={
                                             Object {
@@ -838,24 +845,32 @@ exports[`ExternalIssueForm link renders 1`] = `
                                           url="/search"
                                           value="scefali/test"
                                         >
-                                          <StyledSelect
+                                          <ForwardRef(RefForwardedSelectControl)
                                             alignRight={false}
                                             allowEmpty={false}
-                                            arrowRenderer={[Function]}
                                             async={true}
                                             autoload={true}
-                                            backspaceRemoves={false}
                                             cache={false}
+                                            choices={
+                                              Array [
+                                                Array [
+                                                  "scefali/test",
+                                                  "test",
+                                                ],
+                                                Array [
+                                                  "scefali/ZeldaBazaar",
+                                                  "ZeldaBazaar",
+                                                ],
+                                              ]
+                                            }
                                             clearable={false}
                                             default="scefali/test"
-                                            deleteRemoves={false}
                                             disabled={false}
                                             error={false}
                                             escapeMarkup={true}
                                             field={[Function]}
                                             formatMessageValue={[Function]}
                                             forwardedRef={[Function]}
-                                            height={36}
                                             id="repo"
                                             initialData={
                                               Object {
@@ -894,18 +909,26 @@ exports[`ExternalIssueForm link renders 1`] = `
                                             url="/search"
                                             value="scefali/test"
                                           >
-                                            <SelectPicker
+                                            <SelectControlLegacy
                                               alignRight={false}
                                               allowEmpty={false}
-                                              arrowRenderer={[Function]}
                                               async={true}
                                               autoload={true}
-                                              backspaceRemoves={false}
                                               cache={false}
-                                              className="css-140v9or-StyledSelect eho28m20"
+                                              choices={
+                                                Array [
+                                                  Array [
+                                                    "scefali/test",
+                                                    "test",
+                                                  ],
+                                                  Array [
+                                                    "scefali/ZeldaBazaar",
+                                                    "ZeldaBazaar",
+                                                  ],
+                                                ]
+                                              }
                                               clearable={false}
                                               default="scefali/test"
-                                              deleteRemoves={false}
                                               disabled={false}
                                               error={false}
                                               escapeMarkup={true}
@@ -951,14 +974,14 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               url="/search"
                                               value="scefali/test"
                                             >
-                                              <Async
+                                              <StyledSelect
                                                 alignRight={false}
                                                 allowEmpty={false}
                                                 arrowRenderer={[Function]}
+                                                async={true}
                                                 autoload={true}
                                                 backspaceRemoves={false}
                                                 cache={false}
-                                                className="css-140v9or-StyledSelect eho28m20"
                                                 clearable={false}
                                                 default="scefali/test"
                                                 deleteRemoves={false}
@@ -967,10 +990,9 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 escapeMarkup={true}
                                                 field={[Function]}
                                                 formatMessageValue={[Function]}
+                                                forwardedRef={[Function]}
                                                 height={36}
                                                 id="repo"
-                                                ignoreAccents={true}
-                                                ignoreCase={true}
                                                 initialData={
                                                   Object {
                                                     "comment": "Default Value",
@@ -981,7 +1003,6 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 inline={false}
                                                 label="GitHub Repository"
                                                 loadOptions={[Function]}
-                                                loadingPlaceholder="Loading..."
                                                 multiple={false}
                                                 name="repo"
                                                 onBlurResetsInput={false}
@@ -1002,7 +1023,6 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                   ]
                                                 }
                                                 placeholder="--"
-                                                searchPromptText="Type to search"
                                                 small={false}
                                                 stacked={true}
                                                 type="select"
@@ -1010,35 +1030,26 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 url="/search"
                                                 value="scefali/test"
                                               >
-                                                <Select
+                                                <SelectPicker
                                                   alignRight={false}
                                                   allowEmpty={false}
                                                   arrowRenderer={[Function]}
+                                                  async={true}
                                                   autoload={true}
-                                                  autosize={true}
                                                   backspaceRemoves={false}
-                                                  backspaceToRemoveMessage="Press backspace to remove {label}"
                                                   cache={false}
-                                                  className="css-140v9or-StyledSelect eho28m20"
-                                                  clearAllText="Clear all"
-                                                  clearRenderer={[Function]}
-                                                  clearValueText="Clear value"
+                                                  className="css-140v9or-StyledSelect e1ynsgsr0"
                                                   clearable={false}
-                                                  closeOnSelect={true}
                                                   default="scefali/test"
                                                   deleteRemoves={false}
-                                                  delimiter=","
                                                   disabled={false}
                                                   error={false}
-                                                  escapeClearsValue={true}
                                                   escapeMarkup={true}
                                                   field={[Function]}
-                                                  filterOptions={[Function]}
                                                   formatMessageValue={[Function]}
+                                                  forwardedRef={[Function]}
                                                   height={36}
                                                   id="repo"
-                                                  ignoreAccents={true}
-                                                  ignoreCase={true}
                                                   initialData={
                                                     Object {
                                                       "comment": "Default Value",
@@ -1047,151 +1058,278 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                     }
                                                   }
                                                   inline={false}
-                                                  inputProps={Object {}}
-                                                  isLoading={true}
-                                                  joinValues={false}
                                                   label="GitHub Repository"
-                                                  labelKey="label"
                                                   loadOptions={[Function]}
-                                                  loadingPlaceholder="Loading..."
-                                                  matchPos="any"
-                                                  matchProp="any"
-                                                  menuBuffer={0}
-                                                  menuRenderer={[Function]}
-                                                  multi={false}
                                                   multiple={false}
                                                   name="repo"
-                                                  noResultsText="Loading..."
                                                   onBlurResetsInput={false}
                                                   onChange={[Function]}
                                                   onCloseResetsInput={false}
-                                                  onInputChange={[Function]}
                                                   onKeyDown={[Function]}
                                                   onSelectResetsInput={false}
-                                                  openOnClick={true}
-                                                  optionComponent={[Function]}
-                                                  options={Array []}
-                                                  pageSize={5}
-                                                  placeholder="Loading..."
-                                                  removeSelected={true}
-                                                  required={false}
-                                                  rtl={false}
-                                                  scrollMenuIntoView={true}
-                                                  searchPromptText="Type to search"
-                                                  searchable={true}
-                                                  simpleValue={false}
+                                                  options={
+                                                    Array [
+                                                      Object {
+                                                        "label": "test",
+                                                        "value": "scefali/test",
+                                                      },
+                                                      Object {
+                                                        "label": "ZeldaBazaar",
+                                                        "value": "scefali/ZeldaBazaar",
+                                                      },
+                                                    ]
+                                                  }
+                                                  placeholder="--"
                                                   small={false}
                                                   stacked={true}
-                                                  tabSelectsValue={true}
-                                                  trimFilter={true}
                                                   type="select"
                                                   updatesForm={true}
                                                   url="/search"
                                                   value="scefali/test"
-                                                  valueComponent={[Function]}
-                                                  valueKey="value"
                                                 >
-                                                  <div
-                                                    className="Select css-140v9or-StyledSelect eho28m20 is-loading is-searchable Select--single"
+                                                  <Async
+                                                    alignRight={false}
+                                                    allowEmpty={false}
+                                                    arrowRenderer={[Function]}
+                                                    autoload={true}
+                                                    backspaceRemoves={false}
+                                                    cache={false}
+                                                    className="css-140v9or-StyledSelect e1ynsgsr0"
+                                                    clearable={false}
+                                                    default="scefali/test"
+                                                    deleteRemoves={false}
+                                                    disabled={false}
+                                                    error={false}
+                                                    escapeMarkup={true}
+                                                    field={[Function]}
+                                                    formatMessageValue={[Function]}
+                                                    height={36}
+                                                    id="repo"
+                                                    ignoreAccents={true}
+                                                    ignoreCase={true}
+                                                    initialData={
+                                                      Object {
+                                                        "comment": "Default Value",
+                                                        "externalIssue": "",
+                                                        "repo": "scefali/test",
+                                                      }
+                                                    }
+                                                    inline={false}
+                                                    label="GitHub Repository"
+                                                    loadOptions={[Function]}
+                                                    loadingPlaceholder="Loading..."
+                                                    multiple={false}
+                                                    name="repo"
+                                                    onBlurResetsInput={false}
+                                                    onChange={[Function]}
+                                                    onCloseResetsInput={false}
+                                                    onKeyDown={[Function]}
+                                                    onSelectResetsInput={false}
+                                                    options={
+                                                      Array [
+                                                        Object {
+                                                          "label": "test",
+                                                          "value": "scefali/test",
+                                                        },
+                                                        Object {
+                                                          "label": "ZeldaBazaar",
+                                                          "value": "scefali/ZeldaBazaar",
+                                                        },
+                                                      ]
+                                                    }
+                                                    placeholder="--"
+                                                    searchPromptText="Type to search"
+                                                    small={false}
+                                                    stacked={true}
+                                                    type="select"
+                                                    updatesForm={true}
+                                                    url="/search"
+                                                    value="scefali/test"
                                                   >
-                                                    <div
-                                                      className="Select-control"
+                                                    <Select
+                                                      alignRight={false}
+                                                      allowEmpty={false}
+                                                      arrowRenderer={[Function]}
+                                                      autoload={true}
+                                                      autosize={true}
+                                                      backspaceRemoves={false}
+                                                      backspaceToRemoveMessage="Press backspace to remove {label}"
+                                                      cache={false}
+                                                      className="css-140v9or-StyledSelect e1ynsgsr0"
+                                                      clearAllText="Clear all"
+                                                      clearRenderer={[Function]}
+                                                      clearValueText="Clear value"
+                                                      clearable={false}
+                                                      closeOnSelect={true}
+                                                      default="scefali/test"
+                                                      deleteRemoves={false}
+                                                      delimiter=","
+                                                      disabled={false}
+                                                      error={false}
+                                                      escapeClearsValue={true}
+                                                      escapeMarkup={true}
+                                                      field={[Function]}
+                                                      filterOptions={[Function]}
+                                                      formatMessageValue={[Function]}
+                                                      height={36}
+                                                      id="repo"
+                                                      ignoreAccents={true}
+                                                      ignoreCase={true}
+                                                      initialData={
+                                                        Object {
+                                                          "comment": "Default Value",
+                                                          "externalIssue": "",
+                                                          "repo": "scefali/test",
+                                                        }
+                                                      }
+                                                      inline={false}
+                                                      inputProps={Object {}}
+                                                      isLoading={true}
+                                                      joinValues={false}
+                                                      label="GitHub Repository"
+                                                      labelKey="label"
+                                                      loadOptions={[Function]}
+                                                      loadingPlaceholder="Loading..."
+                                                      matchPos="any"
+                                                      matchProp="any"
+                                                      menuBuffer={0}
+                                                      menuRenderer={[Function]}
+                                                      multi={false}
+                                                      multiple={false}
+                                                      name="repo"
+                                                      noResultsText="Loading..."
+                                                      onBlurResetsInput={false}
+                                                      onChange={[Function]}
+                                                      onCloseResetsInput={false}
+                                                      onInputChange={[Function]}
                                                       onKeyDown={[Function]}
-                                                      onMouseDown={[Function]}
-                                                      onTouchEnd={[Function]}
-                                                      onTouchMove={[Function]}
-                                                      onTouchStart={[Function]}
+                                                      onSelectResetsInput={false}
+                                                      openOnClick={true}
+                                                      optionComponent={[Function]}
+                                                      options={Array []}
+                                                      pageSize={5}
+                                                      placeholder="Loading..."
+                                                      removeSelected={true}
+                                                      required={false}
+                                                      rtl={false}
+                                                      scrollMenuIntoView={true}
+                                                      searchPromptText="Type to search"
+                                                      searchable={true}
+                                                      simpleValue={false}
+                                                      small={false}
+                                                      stacked={true}
+                                                      tabSelectsValue={true}
+                                                      trimFilter={true}
+                                                      type="select"
+                                                      updatesForm={true}
+                                                      url="/search"
+                                                      value="scefali/test"
+                                                      valueComponent={[Function]}
+                                                      valueKey="value"
                                                     >
                                                       <div
-                                                        className="Select-multi-value-wrapper"
-                                                        id="react-select-2--value"
+                                                        className="Select css-140v9or-StyledSelect e1ynsgsr0 is-loading is-searchable Select--single"
                                                       >
                                                         <div
-                                                          className="Select-placeholder"
-                                                        >
-                                                          Loading...
-                                                        </div>
-                                                        <AutosizeInput
-                                                          aria-activedescendant="react-select-2--value"
-                                                          aria-expanded="false"
-                                                          aria-haspopup="false"
-                                                          aria-owns=""
-                                                          className="Select-input"
-                                                          id="repo"
-                                                          injectStyles={true}
-                                                          minWidth="5"
-                                                          onBlur={[Function]}
-                                                          onChange={[Function]}
-                                                          onFocus={[Function]}
-                                                          required={false}
-                                                          role="combobox"
-                                                          value=""
+                                                          className="Select-control"
+                                                          onKeyDown={[Function]}
+                                                          onMouseDown={[Function]}
+                                                          onTouchEnd={[Function]}
+                                                          onTouchMove={[Function]}
+                                                          onTouchStart={[Function]}
                                                         >
                                                           <div
-                                                            className="Select-input"
-                                                            style={
-                                                              Object {
-                                                                "display": "inline-block",
-                                                              }
-                                                            }
+                                                            className="Select-multi-value-wrapper"
+                                                            id="react-select-2--value"
                                                           >
-                                                            <input
+                                                            <div
+                                                              className="Select-placeholder"
+                                                            >
+                                                              Loading...
+                                                            </div>
+                                                            <AutosizeInput
                                                               aria-activedescendant="react-select-2--value"
                                                               aria-expanded="false"
                                                               aria-haspopup="false"
                                                               aria-owns=""
+                                                              className="Select-input"
                                                               id="repo"
+                                                              injectStyles={true}
+                                                              minWidth="5"
                                                               onBlur={[Function]}
                                                               onChange={[Function]}
                                                               onFocus={[Function]}
                                                               required={false}
                                                               role="combobox"
-                                                              style={
-                                                                Object {
-                                                                  "boxSizing": "content-box",
-                                                                  "width": "5px",
-                                                                }
-                                                              }
                                                               value=""
-                                                            />
-                                                            <div
-                                                              style={
-                                                                Object {
-                                                                  "height": 0,
-                                                                  "left": 0,
-                                                                  "overflow": "scroll",
-                                                                  "position": "absolute",
-                                                                  "top": 0,
-                                                                  "visibility": "hidden",
-                                                                  "whiteSpace": "pre",
+                                                            >
+                                                              <div
+                                                                className="Select-input"
+                                                                style={
+                                                                  Object {
+                                                                    "display": "inline-block",
+                                                                  }
                                                                 }
-                                                              }
-                                                            />
+                                                              >
+                                                                <input
+                                                                  aria-activedescendant="react-select-2--value"
+                                                                  aria-expanded="false"
+                                                                  aria-haspopup="false"
+                                                                  aria-owns=""
+                                                                  id="repo"
+                                                                  onBlur={[Function]}
+                                                                  onChange={[Function]}
+                                                                  onFocus={[Function]}
+                                                                  required={false}
+                                                                  role="combobox"
+                                                                  style={
+                                                                    Object {
+                                                                      "boxSizing": "content-box",
+                                                                      "width": "5px",
+                                                                    }
+                                                                  }
+                                                                  value=""
+                                                                />
+                                                                <div
+                                                                  style={
+                                                                    Object {
+                                                                      "height": 0,
+                                                                      "left": 0,
+                                                                      "overflow": "scroll",
+                                                                      "position": "absolute",
+                                                                      "top": 0,
+                                                                      "visibility": "hidden",
+                                                                      "whiteSpace": "pre",
+                                                                    }
+                                                                  }
+                                                                />
+                                                              </div>
+                                                            </AutosizeInput>
                                                           </div>
-                                                        </AutosizeInput>
+                                                          <span
+                                                            aria-hidden="true"
+                                                            className="Select-loading-zone"
+                                                          >
+                                                            <span
+                                                              className="Select-loading"
+                                                            />
+                                                          </span>
+                                                          <span
+                                                            className="Select-arrow-zone"
+                                                            onMouseDown={[Function]}
+                                                          >
+                                                            <span
+                                                              className="icon-arrow-down"
+                                                            />
+                                                          </span>
+                                                        </div>
                                                       </div>
-                                                      <span
-                                                        aria-hidden="true"
-                                                        className="Select-loading-zone"
-                                                      >
-                                                        <span
-                                                          className="Select-loading"
-                                                        />
-                                                      </span>
-                                                      <span
-                                                        className="Select-arrow-zone"
-                                                        onMouseDown={[Function]}
-                                                      >
-                                                        <span
-                                                          className="icon-arrow-down"
-                                                        />
-                                                      </span>
-                                                    </div>
-                                                  </div>
-                                                </Select>
-                                              </Async>
-                                            </SelectPicker>
-                                          </StyledSelect>
+                                                    </Select>
+                                                  </Async>
+                                                </SelectPicker>
+                                              </StyledSelect>
+                                            </SelectControlLegacy>
+                                          </ForwardRef(RefForwardedSelectControl)>
                                         </SelectControl>
                                       </ForwardRef(RefForwardedSelectControl)>
                                     </Observer>
@@ -1234,6 +1372,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               ],
                                               "className": undefined,
                                               "default": "scefali/test",
+                                              "deprecatedSelectControl": true,
                                               "disabled": false,
                                               "escapeMarkup": true,
                                               "field": [Function],
@@ -1265,6 +1404,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               "choices": Array [],
                                               "className": undefined,
                                               "default": "",
+                                              "deprecatedSelectControl": true,
                                               "disabled": false,
                                               "escapeMarkup": true,
                                               "field": [Function],
@@ -1392,6 +1532,7 @@ exports[`ExternalIssueForm link renders 1`] = `
             cache={false}
             choices={Array []}
             default=""
+            deprecatedSelectControl={true}
             disabled={false}
             escapeMarkup={true}
             field={[Function]}
@@ -1420,6 +1561,7 @@ exports[`ExternalIssueForm link renders 1`] = `
               cache={false}
               choices={Array []}
               default=""
+              deprecatedSelectControl={true}
               disabled={false}
               escapeMarkup={true}
               field={[Function]}
@@ -1447,6 +1589,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                 cache={false}
                 choices={Array []}
                 default=""
+                deprecatedSelectControl={true}
                 disabled={false}
                 escapeMarkup={true}
                 field={[Function]}
@@ -1475,6 +1618,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                   cache={false}
                   choices={Array []}
                   default=""
+                  deprecatedSelectControl={true}
                   disabled={false}
                   escapeMarkup={true}
                   field={[Function]}
@@ -1563,6 +1707,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                     ],
                                     "className": undefined,
                                     "default": "scefali/test",
+                                    "deprecatedSelectControl": true,
                                     "disabled": false,
                                     "escapeMarkup": true,
                                     "field": [Function],
@@ -1594,6 +1739,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                     "choices": Array [],
                                     "className": undefined,
                                     "default": "",
+                                    "deprecatedSelectControl": true,
                                     "disabled": false,
                                     "escapeMarkup": true,
                                     "field": [Function],
@@ -1701,6 +1847,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                         choices={Array []}
                                         clearable={false}
                                         default=""
+                                        deprecatedSelectControl={true}
                                         disabled={false}
                                         error={false}
                                         escapeMarkup={true}
@@ -1741,13 +1888,13 @@ exports[`ExternalIssueForm link renders 1`] = `
                                           choices={Array []}
                                           clearable={false}
                                           default=""
+                                          deprecatedSelectControl={true}
                                           disabled={false}
                                           error={false}
                                           escapeMarkup={true}
                                           field={[Function]}
                                           formatMessageValue={[Function]}
                                           forwardedRef={[Function]}
-                                          height={36}
                                           id="externalIssue"
                                           initialData={
                                             Object {
@@ -1774,24 +1921,21 @@ exports[`ExternalIssueForm link renders 1`] = `
                                           url="/search"
                                           value=""
                                         >
-                                          <StyledSelect
+                                          <ForwardRef(RefForwardedSelectControl)
                                             alignRight={false}
                                             allowEmpty={false}
-                                            arrowRenderer={[Function]}
                                             async={true}
                                             autoload={true}
-                                            backspaceRemoves={false}
                                             cache={false}
+                                            choices={Array []}
                                             clearable={false}
                                             default=""
-                                            deleteRemoves={false}
                                             disabled={false}
                                             error={false}
                                             escapeMarkup={true}
                                             field={[Function]}
                                             formatMessageValue={[Function]}
                                             forwardedRef={[Function]}
-                                            height={36}
                                             id="externalIssue"
                                             initialData={
                                               Object {
@@ -1818,18 +1962,15 @@ exports[`ExternalIssueForm link renders 1`] = `
                                             url="/search"
                                             value=""
                                           >
-                                            <SelectPicker
+                                            <SelectControlLegacy
                                               alignRight={false}
                                               allowEmpty={false}
-                                              arrowRenderer={[Function]}
                                               async={true}
                                               autoload={true}
-                                              backspaceRemoves={false}
                                               cache={false}
-                                              className="css-140v9or-StyledSelect eho28m20"
+                                              choices={Array []}
                                               clearable={false}
                                               default=""
-                                              deleteRemoves={false}
                                               disabled={false}
                                               error={false}
                                               escapeMarkup={true}
@@ -1863,14 +2004,14 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               url="/search"
                                               value=""
                                             >
-                                              <Async
+                                              <StyledSelect
                                                 alignRight={false}
                                                 allowEmpty={false}
                                                 arrowRenderer={[Function]}
+                                                async={true}
                                                 autoload={true}
                                                 backspaceRemoves={false}
                                                 cache={false}
-                                                className="css-140v9or-StyledSelect eho28m20"
                                                 clearable={false}
                                                 default=""
                                                 deleteRemoves={false}
@@ -1879,10 +2020,9 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 escapeMarkup={true}
                                                 field={[Function]}
                                                 formatMessageValue={[Function]}
+                                                forwardedRef={[Function]}
                                                 height={36}
                                                 id="externalIssue"
-                                                ignoreAccents={true}
-                                                ignoreCase={true}
                                                 initialData={
                                                   Object {
                                                     "comment": "Default Value",
@@ -1893,7 +2033,6 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 inline={false}
                                                 label="Issue"
                                                 loadOptions={[Function]}
-                                                loadingPlaceholder="Loading..."
                                                 multiple={false}
                                                 name="externalIssue"
                                                 onBlurResetsInput={false}
@@ -1903,42 +2042,32 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                 onSelectResetsInput={false}
                                                 options={Array []}
                                                 placeholder="--"
-                                                searchPromptText="Type to search"
                                                 small={false}
                                                 stacked={true}
                                                 type="select"
                                                 url="/search"
                                                 value=""
                                               >
-                                                <Select
+                                                <SelectPicker
                                                   alignRight={false}
                                                   allowEmpty={false}
                                                   arrowRenderer={[Function]}
+                                                  async={true}
                                                   autoload={true}
-                                                  autosize={true}
                                                   backspaceRemoves={false}
-                                                  backspaceToRemoveMessage="Press backspace to remove {label}"
                                                   cache={false}
-                                                  className="css-140v9or-StyledSelect eho28m20"
-                                                  clearAllText="Clear all"
-                                                  clearRenderer={[Function]}
-                                                  clearValueText="Clear value"
+                                                  className="css-140v9or-StyledSelect e1ynsgsr0"
                                                   clearable={false}
-                                                  closeOnSelect={true}
                                                   default=""
                                                   deleteRemoves={false}
-                                                  delimiter=","
                                                   disabled={false}
                                                   error={false}
-                                                  escapeClearsValue={true}
                                                   escapeMarkup={true}
                                                   field={[Function]}
-                                                  filterOptions={[Function]}
                                                   formatMessageValue={[Function]}
+                                                  forwardedRef={[Function]}
                                                   height={36}
                                                   id="externalIssue"
-                                                  ignoreAccents={true}
-                                                  ignoreCase={true}
                                                   initialData={
                                                     Object {
                                                       "comment": "Default Value",
@@ -1947,150 +2076,253 @@ exports[`ExternalIssueForm link renders 1`] = `
                                                     }
                                                   }
                                                   inline={false}
-                                                  inputProps={Object {}}
-                                                  isLoading={true}
-                                                  joinValues={false}
                                                   label="Issue"
-                                                  labelKey="label"
                                                   loadOptions={[Function]}
-                                                  loadingPlaceholder="Loading..."
-                                                  matchPos="any"
-                                                  matchProp="any"
-                                                  menuBuffer={0}
-                                                  menuRenderer={[Function]}
-                                                  multi={false}
                                                   multiple={false}
                                                   name="externalIssue"
-                                                  noResultsText="Loading..."
                                                   onBlurResetsInput={false}
                                                   onChange={[Function]}
                                                   onCloseResetsInput={false}
-                                                  onInputChange={[Function]}
                                                   onKeyDown={[Function]}
                                                   onSelectResetsInput={false}
-                                                  openOnClick={true}
-                                                  optionComponent={[Function]}
                                                   options={Array []}
-                                                  pageSize={5}
-                                                  placeholder="Loading..."
-                                                  removeSelected={true}
-                                                  required={false}
-                                                  rtl={false}
-                                                  scrollMenuIntoView={true}
-                                                  searchPromptText="Type to search"
-                                                  searchable={true}
-                                                  simpleValue={false}
+                                                  placeholder="--"
                                                   small={false}
                                                   stacked={true}
-                                                  tabSelectsValue={true}
-                                                  trimFilter={true}
                                                   type="select"
                                                   url="/search"
                                                   value=""
-                                                  valueComponent={[Function]}
-                                                  valueKey="value"
                                                 >
-                                                  <div
-                                                    className="Select css-140v9or-StyledSelect eho28m20 is-loading is-searchable Select--single"
+                                                  <Async
+                                                    alignRight={false}
+                                                    allowEmpty={false}
+                                                    arrowRenderer={[Function]}
+                                                    autoload={true}
+                                                    backspaceRemoves={false}
+                                                    cache={false}
+                                                    className="css-140v9or-StyledSelect e1ynsgsr0"
+                                                    clearable={false}
+                                                    default=""
+                                                    deleteRemoves={false}
+                                                    disabled={false}
+                                                    error={false}
+                                                    escapeMarkup={true}
+                                                    field={[Function]}
+                                                    formatMessageValue={[Function]}
+                                                    height={36}
+                                                    id="externalIssue"
+                                                    ignoreAccents={true}
+                                                    ignoreCase={true}
+                                                    initialData={
+                                                      Object {
+                                                        "comment": "Default Value",
+                                                        "externalIssue": "",
+                                                        "repo": "scefali/test",
+                                                      }
+                                                    }
+                                                    inline={false}
+                                                    label="Issue"
+                                                    loadOptions={[Function]}
+                                                    loadingPlaceholder="Loading..."
+                                                    multiple={false}
+                                                    name="externalIssue"
+                                                    onBlurResetsInput={false}
+                                                    onChange={[Function]}
+                                                    onCloseResetsInput={false}
+                                                    onKeyDown={[Function]}
+                                                    onSelectResetsInput={false}
+                                                    options={Array []}
+                                                    placeholder="--"
+                                                    searchPromptText="Type to search"
+                                                    small={false}
+                                                    stacked={true}
+                                                    type="select"
+                                                    url="/search"
+                                                    value=""
                                                   >
-                                                    <div
-                                                      className="Select-control"
+                                                    <Select
+                                                      alignRight={false}
+                                                      allowEmpty={false}
+                                                      arrowRenderer={[Function]}
+                                                      autoload={true}
+                                                      autosize={true}
+                                                      backspaceRemoves={false}
+                                                      backspaceToRemoveMessage="Press backspace to remove {label}"
+                                                      cache={false}
+                                                      className="css-140v9or-StyledSelect e1ynsgsr0"
+                                                      clearAllText="Clear all"
+                                                      clearRenderer={[Function]}
+                                                      clearValueText="Clear value"
+                                                      clearable={false}
+                                                      closeOnSelect={true}
+                                                      default=""
+                                                      deleteRemoves={false}
+                                                      delimiter=","
+                                                      disabled={false}
+                                                      error={false}
+                                                      escapeClearsValue={true}
+                                                      escapeMarkup={true}
+                                                      field={[Function]}
+                                                      filterOptions={[Function]}
+                                                      formatMessageValue={[Function]}
+                                                      height={36}
+                                                      id="externalIssue"
+                                                      ignoreAccents={true}
+                                                      ignoreCase={true}
+                                                      initialData={
+                                                        Object {
+                                                          "comment": "Default Value",
+                                                          "externalIssue": "",
+                                                          "repo": "scefali/test",
+                                                        }
+                                                      }
+                                                      inline={false}
+                                                      inputProps={Object {}}
+                                                      isLoading={true}
+                                                      joinValues={false}
+                                                      label="Issue"
+                                                      labelKey="label"
+                                                      loadOptions={[Function]}
+                                                      loadingPlaceholder="Loading..."
+                                                      matchPos="any"
+                                                      matchProp="any"
+                                                      menuBuffer={0}
+                                                      menuRenderer={[Function]}
+                                                      multi={false}
+                                                      multiple={false}
+                                                      name="externalIssue"
+                                                      noResultsText="Loading..."
+                                                      onBlurResetsInput={false}
+                                                      onChange={[Function]}
+                                                      onCloseResetsInput={false}
+                                                      onInputChange={[Function]}
                                                       onKeyDown={[Function]}
-                                                      onMouseDown={[Function]}
-                                                      onTouchEnd={[Function]}
-                                                      onTouchMove={[Function]}
-                                                      onTouchStart={[Function]}
+                                                      onSelectResetsInput={false}
+                                                      openOnClick={true}
+                                                      optionComponent={[Function]}
+                                                      options={Array []}
+                                                      pageSize={5}
+                                                      placeholder="Loading..."
+                                                      removeSelected={true}
+                                                      required={false}
+                                                      rtl={false}
+                                                      scrollMenuIntoView={true}
+                                                      searchPromptText="Type to search"
+                                                      searchable={true}
+                                                      simpleValue={false}
+                                                      small={false}
+                                                      stacked={true}
+                                                      tabSelectsValue={true}
+                                                      trimFilter={true}
+                                                      type="select"
+                                                      url="/search"
+                                                      value=""
+                                                      valueComponent={[Function]}
+                                                      valueKey="value"
                                                     >
                                                       <div
-                                                        className="Select-multi-value-wrapper"
-                                                        id="react-select-3--value"
+                                                        className="Select css-140v9or-StyledSelect e1ynsgsr0 is-loading is-searchable Select--single"
                                                       >
                                                         <div
-                                                          className="Select-placeholder"
-                                                        >
-                                                          Loading...
-                                                        </div>
-                                                        <AutosizeInput
-                                                          aria-activedescendant="react-select-3--value"
-                                                          aria-expanded="false"
-                                                          aria-haspopup="false"
-                                                          aria-owns=""
-                                                          className="Select-input"
-                                                          id="externalIssue"
-                                                          injectStyles={true}
-                                                          minWidth="5"
-                                                          onBlur={[Function]}
-                                                          onChange={[Function]}
-                                                          onFocus={[Function]}
-                                                          required={false}
-                                                          role="combobox"
-                                                          value=""
+                                                          className="Select-control"
+                                                          onKeyDown={[Function]}
+                                                          onMouseDown={[Function]}
+                                                          onTouchEnd={[Function]}
+                                                          onTouchMove={[Function]}
+                                                          onTouchStart={[Function]}
                                                         >
                                                           <div
-                                                            className="Select-input"
-                                                            style={
-                                                              Object {
-                                                                "display": "inline-block",
-                                                              }
-                                                            }
+                                                            className="Select-multi-value-wrapper"
+                                                            id="react-select-3--value"
                                                           >
-                                                            <input
+                                                            <div
+                                                              className="Select-placeholder"
+                                                            >
+                                                              Loading...
+                                                            </div>
+                                                            <AutosizeInput
                                                               aria-activedescendant="react-select-3--value"
                                                               aria-expanded="false"
                                                               aria-haspopup="false"
                                                               aria-owns=""
+                                                              className="Select-input"
                                                               id="externalIssue"
+                                                              injectStyles={true}
+                                                              minWidth="5"
                                                               onBlur={[Function]}
                                                               onChange={[Function]}
                                                               onFocus={[Function]}
                                                               required={false}
                                                               role="combobox"
-                                                              style={
-                                                                Object {
-                                                                  "boxSizing": "content-box",
-                                                                  "width": "5px",
-                                                                }
-                                                              }
                                                               value=""
-                                                            />
-                                                            <div
-                                                              style={
-                                                                Object {
-                                                                  "height": 0,
-                                                                  "left": 0,
-                                                                  "overflow": "scroll",
-                                                                  "position": "absolute",
-                                                                  "top": 0,
-                                                                  "visibility": "hidden",
-                                                                  "whiteSpace": "pre",
+                                                            >
+                                                              <div
+                                                                className="Select-input"
+                                                                style={
+                                                                  Object {
+                                                                    "display": "inline-block",
+                                                                  }
                                                                 }
-                                                              }
-                                                            />
+                                                              >
+                                                                <input
+                                                                  aria-activedescendant="react-select-3--value"
+                                                                  aria-expanded="false"
+                                                                  aria-haspopup="false"
+                                                                  aria-owns=""
+                                                                  id="externalIssue"
+                                                                  onBlur={[Function]}
+                                                                  onChange={[Function]}
+                                                                  onFocus={[Function]}
+                                                                  required={false}
+                                                                  role="combobox"
+                                                                  style={
+                                                                    Object {
+                                                                      "boxSizing": "content-box",
+                                                                      "width": "5px",
+                                                                    }
+                                                                  }
+                                                                  value=""
+                                                                />
+                                                                <div
+                                                                  style={
+                                                                    Object {
+                                                                      "height": 0,
+                                                                      "left": 0,
+                                                                      "overflow": "scroll",
+                                                                      "position": "absolute",
+                                                                      "top": 0,
+                                                                      "visibility": "hidden",
+                                                                      "whiteSpace": "pre",
+                                                                    }
+                                                                  }
+                                                                />
+                                                              </div>
+                                                            </AutosizeInput>
                                                           </div>
-                                                        </AutosizeInput>
+                                                          <span
+                                                            aria-hidden="true"
+                                                            className="Select-loading-zone"
+                                                          >
+                                                            <span
+                                                              className="Select-loading"
+                                                            />
+                                                          </span>
+                                                          <span
+                                                            className="Select-arrow-zone"
+                                                            onMouseDown={[Function]}
+                                                          >
+                                                            <span
+                                                              className="icon-arrow-down"
+                                                            />
+                                                          </span>
+                                                        </div>
                                                       </div>
-                                                      <span
-                                                        aria-hidden="true"
-                                                        className="Select-loading-zone"
-                                                      >
-                                                        <span
-                                                          className="Select-loading"
-                                                        />
-                                                      </span>
-                                                      <span
-                                                        className="Select-arrow-zone"
-                                                        onMouseDown={[Function]}
-                                                      >
-                                                        <span
-                                                          className="icon-arrow-down"
-                                                        />
-                                                      </span>
-                                                    </div>
-                                                  </div>
-                                                </Select>
-                                              </Async>
-                                            </SelectPicker>
-                                          </StyledSelect>
+                                                    </Select>
+                                                  </Async>
+                                                </SelectPicker>
+                                              </StyledSelect>
+                                            </SelectControlLegacy>
+                                          </ForwardRef(RefForwardedSelectControl)>
                                         </SelectControl>
                                       </ForwardRef(RefForwardedSelectControl)>
                                     </Observer>
@@ -2133,6 +2365,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               ],
                                               "className": undefined,
                                               "default": "scefali/test",
+                                              "deprecatedSelectControl": true,
                                               "disabled": false,
                                               "escapeMarkup": true,
                                               "field": [Function],
@@ -2164,6 +2397,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               "choices": Array [],
                                               "className": undefined,
                                               "default": "",
+                                              "deprecatedSelectControl": true,
                                               "disabled": false,
                                               "escapeMarkup": true,
                                               "field": [Function],
@@ -2402,6 +2636,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                     ],
                                     "className": undefined,
                                     "default": "scefali/test",
+                                    "deprecatedSelectControl": true,
                                     "disabled": false,
                                     "escapeMarkup": true,
                                     "field": [Function],
@@ -2433,6 +2668,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                     "choices": Array [],
                                     "className": undefined,
                                     "default": "",
+                                    "deprecatedSelectControl": true,
                                     "disabled": false,
                                     "escapeMarkup": true,
                                     "field": [Function],
@@ -2623,6 +2859,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               ],
                                               "className": undefined,
                                               "default": "scefali/test",
+                                              "deprecatedSelectControl": true,
                                               "disabled": false,
                                               "escapeMarkup": true,
                                               "field": [Function],
@@ -2654,6 +2891,7 @@ exports[`ExternalIssueForm link renders 1`] = `
                                               "choices": Array [],
                                               "className": undefined,
                                               "default": "",
+                                              "deprecatedSelectControl": true,
                                               "disabled": false,
                                               "escapeMarkup": true,
                                               "field": [Function],
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index b3f98a7365..debcc9d9fc 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -99,6 +99,7 @@ exports[`Project Ownership Input renders 1`] = `
       >
         <BuilderSelect
           clearable={false}
+          deprecatedSelectControl={true}
           disabled={false}
           hideErrorMessage={false}
           multiple={false}
@@ -128,6 +129,7 @@ exports[`Project Ownership Input renders 1`] = `
           <SelectField
             className="css-10lzdlx-BuilderSelect e1hyuoc76"
             clearable={false}
+            deprecatedSelectControl={true}
             disabled={false}
             hideErrorMessage={false}
             multiple={false}
@@ -167,6 +169,7 @@ exports[`Project Ownership Input renders 1`] = `
               >
                 <StyledSelectControl
                   clearable={false}
+                  deprecatedSelectControl={true}
                   disabled={false}
                   id="id-select-type"
                   multiple={false}
@@ -190,6 +193,7 @@ exports[`Project Ownership Input renders 1`] = `
                   <ForwardRef(RefForwardedSelectControl)
                     className="css-9gm53a-StyledSelectControl e1qrhqd00"
                     clearable={false}
+                    deprecatedSelectControl={true}
                     disabled={false}
                     id="id-select-type"
                     multiple={false}
@@ -213,9 +217,9 @@ exports[`Project Ownership Input renders 1`] = `
                     <SelectControl
                       className="css-9gm53a-StyledSelectControl e1qrhqd00"
                       clearable={false}
+                      deprecatedSelectControl={true}
                       disabled={false}
                       forwardedRef={null}
-                      height={36}
                       id="id-select-type"
                       multiple={false}
                       name="select-type"
@@ -235,15 +239,11 @@ exports[`Project Ownership Input renders 1`] = `
                       required={false}
                       value="path"
                     >
-                      <StyledSelect
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
+                      <ForwardRef(RefForwardedSelectControl)
                         className="css-9gm53a-StyledSelectControl e1qrhqd00"
                         clearable={false}
-                        deleteRemoves={false}
                         disabled={false}
                         forwardedRef={null}
-                        height={36}
                         id="id-select-type"
                         multiple={false}
                         name="select-type"
@@ -263,12 +263,9 @@ exports[`Project Ownership Input renders 1`] = `
                         required={false}
                         value="path"
                       >
-                        <SelectPicker
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
+                        <SelectControlLegacy
+                          className="css-9gm53a-StyledSelectControl e1qrhqd00"
                           clearable={false}
-                          deleteRemoves={false}
                           disabled={false}
                           forwardedRef={null}
                           height={36}
@@ -291,44 +288,19 @@ exports[`Project Ownership Input renders 1`] = `
                           required={false}
                           value="path"
                         >
-                          <Select
+                          <StyledSelect
                             arrowRenderer={[Function]}
-                            autosize={true}
                             backspaceRemoves={false}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
-                            className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
+                            className="css-9gm53a-StyledSelectControl e1qrhqd00"
                             clearable={false}
-                            closeOnSelect={true}
                             deleteRemoves={false}
-                            delimiter=","
                             disabled={false}
-                            escapeClearsValue={true}
-                            filterOptions={[Function]}
+                            forwardedRef={null}
                             height={36}
                             id="id-select-type"
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
-                            multi={false}
                             multiple={false}
                             name="select-type"
-                            noResultsText="No results found"
-                            onBlurResetsInput={true}
                             onChange={[Function]}
-                            onCloseResetsInput={true}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
                             options={
                               Array [
                                 Object {
@@ -341,140 +313,223 @@ exports[`Project Ownership Input renders 1`] = `
                                 },
                               ]
                             }
-                            pageSize={5}
-                            placeholder="Select..."
-                            removeSelected={true}
                             required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
                             value="path"
-                            valueComponent={[Function]}
-                            valueKey="value"
                           >
-                            <div
-                              className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                            <SelectPicker
+                              arrowRenderer={[Function]}
+                              backspaceRemoves={false}
+                              className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                              clearable={false}
+                              deleteRemoves={false}
+                              disabled={false}
+                              forwardedRef={null}
+                              height={36}
+                              id="id-select-type"
+                              multiple={false}
+                              name="select-type"
+                              onChange={[Function]}
+                              options={
+                                Array [
+                                  Object {
+                                    "label": "Path",
+                                    "value": "path",
+                                  },
+                                  Object {
+                                    "label": "URL",
+                                    "value": "url",
+                                  },
+                                ]
+                              }
+                              required={false}
+                              value="path"
                             >
-                              <input
+                              <Select
+                                arrowRenderer={[Function]}
+                                autosize={true}
+                                backspaceRemoves={false}
+                                backspaceToRemoveMessage="Press backspace to remove {label}"
+                                className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                                clearAllText="Clear all"
+                                clearRenderer={[Function]}
+                                clearValueText="Clear value"
+                                clearable={false}
+                                closeOnSelect={true}
+                                deleteRemoves={false}
+                                delimiter=","
                                 disabled={false}
-                                key="hidden.0"
+                                escapeClearsValue={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                id="id-select-type"
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                inputProps={Object {}}
+                                isLoading={false}
+                                joinValues={false}
+                                labelKey="label"
+                                matchPos="any"
+                                matchProp="any"
+                                menuBuffer={0}
+                                menuRenderer={[Function]}
+                                multi={false}
+                                multiple={false}
                                 name="select-type"
-                                type="hidden"
+                                noResultsText="No results found"
+                                onBlurResetsInput={true}
+                                onChange={[Function]}
+                                onCloseResetsInput={true}
+                                onSelectResetsInput={true}
+                                openOnClick={true}
+                                optionComponent={[Function]}
+                                options={
+                                  Array [
+                                    Object {
+                                      "label": "Path",
+                                      "value": "path",
+                                    },
+                                    Object {
+                                      "label": "URL",
+                                      "value": "url",
+                                    },
+                                  ]
+                                }
+                                pageSize={5}
+                                placeholder="Select..."
+                                removeSelected={true}
+                                required={false}
+                                rtl={false}
+                                scrollMenuIntoView={true}
+                                searchable={true}
+                                simpleValue={false}
+                                tabSelectsValue={true}
+                                trimFilter={true}
                                 value="path"
-                              />
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
+                                valueComponent={[Function]}
+                                valueKey="value"
                               >
                                 <div
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-2--value"
+                                  className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0 has-value is-searchable Select--single"
                                 >
-                                  <Value
+                                  <input
                                     disabled={false}
-                                    id="react-select-2--value-item"
-                                    instancePrefix="react-select-2-"
-                                    onClick={null}
-                                    placeholder="Select..."
-                                    value={
-                                      Object {
-                                        "label": "Path",
-                                        "value": "path",
-                                      }
-                                    }
+                                    key="hidden.0"
+                                    name="select-type"
+                                    type="hidden"
+                                    value="path"
+                                  />
+                                  <div
+                                    className="Select-control"
+                                    onKeyDown={[Function]}
+                                    onMouseDown={[Function]}
+                                    onTouchEnd={[Function]}
+                                    onTouchMove={[Function]}
+                                    onTouchStart={[Function]}
                                   >
                                     <div
-                                      className="Select-value"
+                                      className="Select-multi-value-wrapper"
+                                      id="react-select-2--value"
                                     >
-                                      <span
-                                        aria-selected="true"
-                                        className="Select-value-label"
+                                      <Value
+                                        disabled={false}
                                         id="react-select-2--value-item"
-                                        role="option"
-                                      >
-                                        Path
-                                      </span>
-                                    </div>
-                                  </Value>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-2--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns=""
-                                    className="Select-input"
-                                    id="id-select-type"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
-                                  >
-                                    <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
+                                        instancePrefix="react-select-2-"
+                                        onClick={null}
+                                        placeholder="Select..."
+                                        value={
+                                          Object {
+                                            "label": "Path",
+                                            "value": "path",
+                                          }
                                         }
-                                      }
-                                    >
-                                      <input
+                                      >
+                                        <div
+                                          className="Select-value"
+                                        >
+                                          <span
+                                            aria-selected="true"
+                                            className="Select-value-label"
+                                            id="react-select-2--value-item"
+                                            role="option"
+                                          >
+                                            Path
+                                          </span>
+                                        </div>
+                                      </Value>
+                                      <AutosizeInput
                                         aria-activedescendant="react-select-2--value"
                                         aria-expanded="false"
                                         aria-haspopup="false"
                                         aria-owns=""
+                                        className="Select-input"
                                         id="id-select-type"
+                                        injectStyles={true}
+                                        minWidth="5"
                                         onBlur={[Function]}
                                         onChange={[Function]}
                                         onFocus={[Function]}
                                         required={false}
                                         role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
                                         value=""
-                                      />
-                                      <div
-                                        style={
-                                          Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
+                                      >
+                                        <div
+                                          className="Select-input"
+                                          style={
+                                            Object {
+                                              "display": "inline-block",
+                                            }
                                           }
-                                        }
-                                      />
+                                        >
+                                          <input
+                                            aria-activedescendant="react-select-2--value"
+                                            aria-expanded="false"
+                                            aria-haspopup="false"
+                                            aria-owns=""
+                                            id="id-select-type"
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            onFocus={[Function]}
+                                            required={false}
+                                            role="combobox"
+                                            style={
+                                              Object {
+                                                "boxSizing": "content-box",
+                                                "width": "5px",
+                                              }
+                                            }
+                                            value=""
+                                          />
+                                          <div
+                                            style={
+                                              Object {
+                                                "height": 0,
+                                                "left": 0,
+                                                "overflow": "scroll",
+                                                "position": "absolute",
+                                                "top": 0,
+                                                "visibility": "hidden",
+                                                "whiteSpace": "pre",
+                                              }
+                                            }
+                                          />
+                                        </div>
+                                      </AutosizeInput>
                                     </div>
-                                  </AutosizeInput>
+                                    <span
+                                      className="Select-arrow-zone"
+                                      onMouseDown={[Function]}
+                                    >
+                                      <span
+                                        className="icon-arrow-down"
+                                      />
+                                    </span>
+                                  </div>
                                 </div>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </SelectPicker>
-                      </StyledSelect>
+                              </Select>
+                            </SelectPicker>
+                          </StyledSelect>
+                        </SelectControlLegacy>
+                      </ForwardRef(RefForwardedSelectControl)>
                     </SelectControl>
                   </ForwardRef(RefForwardedSelectControl)>
                 </StyledSelectControl>
@@ -580,6 +635,7 @@ exports[`Project Ownership Input renders 1`] = `
                   }
                 }
                 defaultOptions={true}
+                deprecatedSelectControl={true}
                 filterOptions={[Function]}
                 loadOptions={[Function]}
                 onChange={[Function]}
@@ -594,6 +650,7 @@ exports[`Project Ownership Input renders 1`] = `
                   className="css-fs1hps-SelectOwners"
                   clearable={true}
                   defaultOptions={true}
+                  deprecatedSelectControl={true}
                   filterOptions={[Function]}
                   loadOptions={[Function]}
                   onChange={[Function]}
@@ -608,6 +665,7 @@ exports[`Project Ownership Input renders 1`] = `
                     className="css-fs1hps-SelectOwners"
                     clearable={true}
                     defaultOptions={true}
+                    deprecatedSelectControl={true}
                     filterOptions={[Function]}
                     forwardedRef={[Function]}
                     loadOptions={[Function]}
@@ -624,9 +682,9 @@ exports[`Project Ownership Input renders 1`] = `
                       className="css-fs1hps-SelectOwners"
                       clearable={true}
                       defaultOptions={true}
+                      deprecatedSelectControl={true}
                       filterOptions={[Function]}
                       forwardedRef={[Function]}
-                      height={36}
                       loadOptions={[Function]}
                       multiple={true}
                       onChange={[Function]}
@@ -635,20 +693,15 @@ exports[`Project Ownership Input renders 1`] = `
                       value={Array []}
                       valueComponent={[Function]}
                     >
-                      <StyledSelect
-                        arrowRenderer={[Function]}
+                      <ForwardRef(RefForwardedSelectControl)
                         async={true}
-                        backspaceRemoves={true}
                         cache={false}
                         className="css-fs1hps-SelectOwners"
                         clearable={true}
                         defaultOptions={true}
-                        deleteRemoves={true}
                         filterOptions={[Function]}
                         forwardedRef={[Function]}
-                        height={36}
                         loadOptions={[Function]}
-                        multi={true}
                         multiple={true}
                         onChange={[Function]}
                         onInputChange={[Function]}
@@ -656,20 +709,16 @@ exports[`Project Ownership Input renders 1`] = `
                         value={Array []}
                         valueComponent={[Function]}
                       >
-                        <SelectPicker
-                          arrowRenderer={[Function]}
+                        <SelectControlLegacy
                           async={true}
-                          backspaceRemoves={true}
                           cache={false}
-                          className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
+                          className="css-fs1hps-SelectOwners"
                           clearable={true}
                           defaultOptions={true}
-                          deleteRemoves={true}
                           filterOptions={[Function]}
                           forwardedRef={[Function]}
                           height={36}
                           loadOptions={[Function]}
-                          multi={true}
                           multiple={true}
                           onChange={[Function]}
                           onInputChange={[Function]}
@@ -677,188 +726,232 @@ exports[`Project Ownership Input renders 1`] = `
                           value={Array []}
                           valueComponent={[Function]}
                         >
-                          <Async
+                          <StyledSelect
                             arrowRenderer={[Function]}
-                            autoload={true}
+                            async={true}
                             backspaceRemoves={true}
                             cache={false}
-                            className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
+                            className="css-fs1hps-SelectOwners"
                             clearable={true}
                             defaultOptions={true}
                             deleteRemoves={true}
                             filterOptions={[Function]}
+                            forwardedRef={[Function]}
                             height={36}
-                            ignoreAccents={true}
-                            ignoreCase={true}
                             loadOptions={[Function]}
-                            loadingPlaceholder="Loading..."
                             multi={true}
                             multiple={true}
                             onChange={[Function]}
                             onInputChange={[Function]}
-                            options={Array []}
                             placeholder="owners"
-                            searchPromptText="Type to search"
                             value={Array []}
                             valueComponent={[Function]}
                           >
-                            <Select
+                            <SelectPicker
                               arrowRenderer={[Function]}
-                              autoload={true}
-                              autosize={true}
+                              async={true}
                               backspaceRemoves={true}
-                              backspaceToRemoveMessage="Press backspace to remove {label}"
                               cache={false}
-                              className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
-                              clearAllText="Clear all"
-                              clearRenderer={[Function]}
-                              clearValueText="Clear value"
+                              className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
                               clearable={true}
-                              closeOnSelect={true}
                               defaultOptions={true}
                               deleteRemoves={true}
-                              delimiter=","
-                              disabled={false}
-                              escapeClearsValue={true}
                               filterOptions={[Function]}
+                              forwardedRef={[Function]}
                               height={36}
-                              ignoreAccents={true}
-                              ignoreCase={true}
-                              inputProps={Object {}}
-                              isLoading={true}
-                              joinValues={false}
-                              labelKey="label"
                               loadOptions={[Function]}
-                              loadingPlaceholder="Loading..."
-                              matchPos="any"
-                              matchProp="any"
-                              menuBuffer={0}
-                              menuRenderer={[Function]}
                               multi={true}
                               multiple={true}
-                              noResultsText="Loading..."
-                              onBlurResetsInput={true}
                               onChange={[Function]}
-                              onCloseResetsInput={true}
                               onInputChange={[Function]}
-                              onSelectResetsInput={true}
-                              openOnClick={true}
-                              optionComponent={[Function]}
-                              options={Array []}
-                              pageSize={5}
-                              placeholder="Loading..."
-                              removeSelected={true}
-                              required={false}
-                              rtl={false}
-                              scrollMenuIntoView={true}
-                              searchPromptText="Type to search"
-                              searchable={true}
-                              simpleValue={false}
-                              tabSelectsValue={true}
-                              trimFilter={true}
+                              placeholder="owners"
                               value={Array []}
                               valueComponent={[Function]}
-                              valueKey="value"
                             >
-                              <div
-                                className="Select css-gv7e0o-StyledSelect-SelectOwners eho28m20 is-clearable is-loading is-searchable Select--multi"
+                              <Async
+                                arrowRenderer={[Function]}
+                                autoload={true}
+                                backspaceRemoves={true}
+                                cache={false}
+                                className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
+                                clearable={true}
+                                defaultOptions={true}
+                                deleteRemoves={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                loadOptions={[Function]}
+                                loadingPlaceholder="Loading..."
+                                multi={true}
+                                multiple={true}
+                                onChange={[Function]}
+                                onInputChange={[Function]}
+                                options={Array []}
+                                placeholder="owners"
+                                searchPromptText="Type to search"
+                                value={Array []}
+                                valueComponent={[Function]}
                               >
-                                <div
-                                  className="Select-control"
-                                  onKeyDown={[Function]}
-                                  onMouseDown={[Function]}
-                                  onTouchEnd={[Function]}
-                                  onTouchMove={[Function]}
-                                  onTouchStart={[Function]}
+                                <Select
+                                  arrowRenderer={[Function]}
+                                  autoload={true}
+                                  autosize={true}
+                                  backspaceRemoves={true}
+                                  backspaceToRemoveMessage="Press backspace to remove {label}"
+                                  cache={false}
+                                  className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
+                                  clearAllText="Clear all"
+                                  clearRenderer={[Function]}
+                                  clearValueText="Clear value"
+                                  clearable={true}
+                                  closeOnSelect={true}
+                                  defaultOptions={true}
+                                  deleteRemoves={true}
+                                  delimiter=","
+                                  disabled={false}
+                                  escapeClearsValue={true}
+                                  filterOptions={[Function]}
+                                  height={36}
+                                  ignoreAccents={true}
+                                  ignoreCase={true}
+                                  inputProps={Object {}}
+                                  isLoading={true}
+                                  joinValues={false}
+                                  labelKey="label"
+                                  loadOptions={[Function]}
+                                  loadingPlaceholder="Loading..."
+                                  matchPos="any"
+                                  matchProp="any"
+                                  menuBuffer={0}
+                                  menuRenderer={[Function]}
+                                  multi={true}
+                                  multiple={true}
+                                  noResultsText="Loading..."
+                                  onBlurResetsInput={true}
+                                  onChange={[Function]}
+                                  onCloseResetsInput={true}
+                                  onInputChange={[Function]}
+                                  onSelectResetsInput={true}
+                                  openOnClick={true}
+                                  optionComponent={[Function]}
+                                  options={Array []}
+                                  pageSize={5}
+                                  placeholder="Loading..."
+                                  removeSelected={true}
+                                  required={false}
+                                  rtl={false}
+                                  scrollMenuIntoView={true}
+                                  searchPromptText="Type to search"
+                                  searchable={true}
+                                  simpleValue={false}
+                                  tabSelectsValue={true}
+                                  trimFilter={true}
+                                  value={Array []}
+                                  valueComponent={[Function]}
+                                  valueKey="value"
                                 >
                                   <div
-                                    className="Select-multi-value-wrapper"
-                                    id="react-select-3--value"
+                                    className="Select css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0 is-clearable is-loading is-searchable Select--multi"
                                   >
                                     <div
-                                      className="Select-placeholder"
-                                    >
-                                      Loading...
-                                    </div>
-                                    <AutosizeInput
-                                      aria-activedescendant="react-select-3--value"
-                                      aria-expanded="false"
-                                      aria-haspopup="false"
-                                      aria-owns=""
-                                      className="Select-input"
-                                      injectStyles={true}
-                                      minWidth="5"
-                                      onBlur={[Function]}
-                                      onChange={[Function]}
-                                      onFocus={[Function]}
-                                      required={false}
-                                      role="combobox"
-                                      value=""
+                                      className="Select-control"
+                                      onKeyDown={[Function]}
+                                      onMouseDown={[Function]}
+                                      onTouchEnd={[Function]}
+                                      onTouchMove={[Function]}
+                                      onTouchStart={[Function]}
                                     >
                                       <div
-                                        className="Select-input"
-                                        style={
-                                          Object {
-                                            "display": "inline-block",
-                                          }
-                                        }
+                                        className="Select-multi-value-wrapper"
+                                        id="react-select-3--value"
                                       >
-                                        <input
+                                        <div
+                                          className="Select-placeholder"
+                                        >
+                                          Loading...
+                                        </div>
+                                        <AutosizeInput
                                           aria-activedescendant="react-select-3--value"
                                           aria-expanded="false"
                                           aria-haspopup="false"
                                           aria-owns=""
+                                          className="Select-input"
+                                          injectStyles={true}
+                                          minWidth="5"
                                           onBlur={[Function]}
                                           onChange={[Function]}
                                           onFocus={[Function]}
                                           required={false}
                                           role="combobox"
-                                          style={
-                                            Object {
-                                              "boxSizing": "content-box",
-                                              "width": "5px",
-                                            }
-                                          }
                                           value=""
-                                        />
-                                        <div
-                                          style={
-                                            Object {
-                                              "height": 0,
-                                              "left": 0,
-                                              "overflow": "scroll",
-                                              "position": "absolute",
-                                              "top": 0,
-                                              "visibility": "hidden",
-                                              "whiteSpace": "pre",
+                                        >
+                                          <div
+                                            className="Select-input"
+                                            style={
+                                              Object {
+                                                "display": "inline-block",
+                                              }
                                             }
-                                          }
-                                        />
+                                          >
+                                            <input
+                                              aria-activedescendant="react-select-3--value"
+                                              aria-expanded="false"
+                                              aria-haspopup="false"
+                                              aria-owns=""
+                                              onBlur={[Function]}
+                                              onChange={[Function]}
+                                              onFocus={[Function]}
+                                              required={false}
+                                              role="combobox"
+                                              style={
+                                                Object {
+                                                  "boxSizing": "content-box",
+                                                  "width": "5px",
+                                                }
+                                              }
+                                              value=""
+                                            />
+                                            <div
+                                              style={
+                                                Object {
+                                                  "height": 0,
+                                                  "left": 0,
+                                                  "overflow": "scroll",
+                                                  "position": "absolute",
+                                                  "top": 0,
+                                                  "visibility": "hidden",
+                                                  "whiteSpace": "pre",
+                                                }
+                                              }
+                                            />
+                                          </div>
+                                        </AutosizeInput>
                                       </div>
-                                    </AutosizeInput>
+                                      <span
+                                        aria-hidden="true"
+                                        className="Select-loading-zone"
+                                      >
+                                        <span
+                                          className="Select-loading"
+                                        />
+                                      </span>
+                                      <span
+                                        className="Select-arrow-zone"
+                                        onMouseDown={[Function]}
+                                      >
+                                        <span
+                                          className="icon-arrow-down"
+                                        />
+                                      </span>
+                                    </div>
                                   </div>
-                                  <span
-                                    aria-hidden="true"
-                                    className="Select-loading-zone"
-                                  >
-                                    <span
-                                      className="Select-loading"
-                                    />
-                                  </span>
-                                  <span
-                                    className="Select-arrow-zone"
-                                    onMouseDown={[Function]}
-                                  >
-                                    <span
-                                      className="icon-arrow-down"
-                                    />
-                                  </span>
-                                </div>
-                              </div>
-                            </Select>
-                          </Async>
-                        </SelectPicker>
-                      </StyledSelect>
+                                </Select>
+                              </Async>
+                            </SelectPicker>
+                          </StyledSelect>
+                        </SelectControlLegacy>
+                      </ForwardRef(RefForwardedSelectControl)>
                     </SelectControl>
                   </ForwardRef(RefForwardedSelectControl)>
                 </ForwardRef(MultiSelectControl)>
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index 23eb5a6a6a..c75c250cdb 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -72,6 +72,7 @@ exports[`RuleBuilder renders 1`] = `
     >
       <BuilderSelect
         clearable={false}
+        deprecatedSelectControl={true}
         disabled={false}
         hideErrorMessage={false}
         multiple={false}
@@ -101,6 +102,7 @@ exports[`RuleBuilder renders 1`] = `
         <SelectField
           className="css-10lzdlx-BuilderSelect e1hyuoc76"
           clearable={false}
+          deprecatedSelectControl={true}
           disabled={false}
           hideErrorMessage={false}
           multiple={false}
@@ -140,6 +142,7 @@ exports[`RuleBuilder renders 1`] = `
             >
               <StyledSelectControl
                 clearable={false}
+                deprecatedSelectControl={true}
                 disabled={false}
                 id="id-select-type"
                 multiple={false}
@@ -163,6 +166,7 @@ exports[`RuleBuilder renders 1`] = `
                 <ForwardRef(RefForwardedSelectControl)
                   className="css-9gm53a-StyledSelectControl e1qrhqd00"
                   clearable={false}
+                  deprecatedSelectControl={true}
                   disabled={false}
                   id="id-select-type"
                   multiple={false}
@@ -186,9 +190,9 @@ exports[`RuleBuilder renders 1`] = `
                   <SelectControl
                     className="css-9gm53a-StyledSelectControl e1qrhqd00"
                     clearable={false}
+                    deprecatedSelectControl={true}
                     disabled={false}
                     forwardedRef={null}
-                    height={36}
                     id="id-select-type"
                     multiple={false}
                     name="select-type"
@@ -208,15 +212,11 @@ exports[`RuleBuilder renders 1`] = `
                     required={false}
                     value="path"
                   >
-                    <StyledSelect
-                      arrowRenderer={[Function]}
-                      backspaceRemoves={false}
+                    <ForwardRef(RefForwardedSelectControl)
                       className="css-9gm53a-StyledSelectControl e1qrhqd00"
                       clearable={false}
-                      deleteRemoves={false}
                       disabled={false}
                       forwardedRef={null}
-                      height={36}
                       id="id-select-type"
                       multiple={false}
                       name="select-type"
@@ -236,12 +236,9 @@ exports[`RuleBuilder renders 1`] = `
                       required={false}
                       value="path"
                     >
-                      <SelectPicker
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
-                        className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
+                      <SelectControlLegacy
+                        className="css-9gm53a-StyledSelectControl e1qrhqd00"
                         clearable={false}
-                        deleteRemoves={false}
                         disabled={false}
                         forwardedRef={null}
                         height={36}
@@ -264,44 +261,19 @@ exports[`RuleBuilder renders 1`] = `
                         required={false}
                         value="path"
                       >
-                        <Select
+                        <StyledSelect
                           arrowRenderer={[Function]}
-                          autosize={true}
                           backspaceRemoves={false}
-                          backspaceToRemoveMessage="Press backspace to remove {label}"
-                          className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
-                          clearAllText="Clear all"
-                          clearRenderer={[Function]}
-                          clearValueText="Clear value"
+                          className="css-9gm53a-StyledSelectControl e1qrhqd00"
                           clearable={false}
-                          closeOnSelect={true}
                           deleteRemoves={false}
-                          delimiter=","
                           disabled={false}
-                          escapeClearsValue={true}
-                          filterOptions={[Function]}
+                          forwardedRef={null}
                           height={36}
                           id="id-select-type"
-                          ignoreAccents={true}
-                          ignoreCase={true}
-                          inputProps={Object {}}
-                          isLoading={false}
-                          joinValues={false}
-                          labelKey="label"
-                          matchPos="any"
-                          matchProp="any"
-                          menuBuffer={0}
-                          menuRenderer={[Function]}
-                          multi={false}
                           multiple={false}
                           name="select-type"
-                          noResultsText="No results found"
-                          onBlurResetsInput={true}
                           onChange={[Function]}
-                          onCloseResetsInput={true}
-                          onSelectResetsInput={true}
-                          openOnClick={true}
-                          optionComponent={[Function]}
                           options={
                             Array [
                               Object {
@@ -314,140 +286,223 @@ exports[`RuleBuilder renders 1`] = `
                               },
                             ]
                           }
-                          pageSize={5}
-                          placeholder="Select..."
-                          removeSelected={true}
                           required={false}
-                          rtl={false}
-                          scrollMenuIntoView={true}
-                          searchable={true}
-                          simpleValue={false}
-                          tabSelectsValue={true}
-                          trimFilter={true}
                           value="path"
-                          valueComponent={[Function]}
-                          valueKey="value"
                         >
-                          <div
-                            className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                          <SelectPicker
+                            arrowRenderer={[Function]}
+                            backspaceRemoves={false}
+                            className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                            clearable={false}
+                            deleteRemoves={false}
+                            disabled={false}
+                            forwardedRef={null}
+                            height={36}
+                            id="id-select-type"
+                            multiple={false}
+                            name="select-type"
+                            onChange={[Function]}
+                            options={
+                              Array [
+                                Object {
+                                  "label": "Path",
+                                  "value": "path",
+                                },
+                                Object {
+                                  "label": "URL",
+                                  "value": "url",
+                                },
+                              ]
+                            }
+                            required={false}
+                            value="path"
                           >
-                            <input
+                            <Select
+                              arrowRenderer={[Function]}
+                              autosize={true}
+                              backspaceRemoves={false}
+                              backspaceToRemoveMessage="Press backspace to remove {label}"
+                              className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                              clearAllText="Clear all"
+                              clearRenderer={[Function]}
+                              clearValueText="Clear value"
+                              clearable={false}
+                              closeOnSelect={true}
+                              deleteRemoves={false}
+                              delimiter=","
                               disabled={false}
-                              key="hidden.0"
+                              escapeClearsValue={true}
+                              filterOptions={[Function]}
+                              height={36}
+                              id="id-select-type"
+                              ignoreAccents={true}
+                              ignoreCase={true}
+                              inputProps={Object {}}
+                              isLoading={false}
+                              joinValues={false}
+                              labelKey="label"
+                              matchPos="any"
+                              matchProp="any"
+                              menuBuffer={0}
+                              menuRenderer={[Function]}
+                              multi={false}
+                              multiple={false}
                               name="select-type"
-                              type="hidden"
+                              noResultsText="No results found"
+                              onBlurResetsInput={true}
+                              onChange={[Function]}
+                              onCloseResetsInput={true}
+                              onSelectResetsInput={true}
+                              openOnClick={true}
+                              optionComponent={[Function]}
+                              options={
+                                Array [
+                                  Object {
+                                    "label": "Path",
+                                    "value": "path",
+                                  },
+                                  Object {
+                                    "label": "URL",
+                                    "value": "url",
+                                  },
+                                ]
+                              }
+                              pageSize={5}
+                              placeholder="Select..."
+                              removeSelected={true}
+                              required={false}
+                              rtl={false}
+                              scrollMenuIntoView={true}
+                              searchable={true}
+                              simpleValue={false}
+                              tabSelectsValue={true}
+                              trimFilter={true}
                               value="path"
-                            />
-                            <div
-                              className="Select-control"
-                              onKeyDown={[Function]}
-                              onMouseDown={[Function]}
-                              onTouchEnd={[Function]}
-                              onTouchMove={[Function]}
-                              onTouchStart={[Function]}
+                              valueComponent={[Function]}
+                              valueKey="value"
                             >
                               <div
-                                className="Select-multi-value-wrapper"
-                                id="react-select-2--value"
+                                className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0 has-value is-searchable Select--single"
                               >
-                                <Value
+                                <input
                                   disabled={false}
-                                  id="react-select-2--value-item"
-                                  instancePrefix="react-select-2-"
-                                  onClick={null}
-                                  placeholder="Select..."
-                                  value={
-                                    Object {
-                                      "label": "Path",
-                                      "value": "path",
-                                    }
-                                  }
+                                  key="hidden.0"
+                                  name="select-type"
+                                  type="hidden"
+                                  value="path"
+                                />
+                                <div
+                                  className="Select-control"
+                                  onKeyDown={[Function]}
+                                  onMouseDown={[Function]}
+                                  onTouchEnd={[Function]}
+                                  onTouchMove={[Function]}
+                                  onTouchStart={[Function]}
                                 >
                                   <div
-                                    className="Select-value"
+                                    className="Select-multi-value-wrapper"
+                                    id="react-select-2--value"
                                   >
-                                    <span
-                                      aria-selected="true"
-                                      className="Select-value-label"
+                                    <Value
+                                      disabled={false}
                                       id="react-select-2--value-item"
-                                      role="option"
-                                    >
-                                      Path
-                                    </span>
-                                  </div>
-                                </Value>
-                                <AutosizeInput
-                                  aria-activedescendant="react-select-2--value"
-                                  aria-expanded="false"
-                                  aria-haspopup="false"
-                                  aria-owns=""
-                                  className="Select-input"
-                                  id="id-select-type"
-                                  injectStyles={true}
-                                  minWidth="5"
-                                  onBlur={[Function]}
-                                  onChange={[Function]}
-                                  onFocus={[Function]}
-                                  required={false}
-                                  role="combobox"
-                                  value=""
-                                >
-                                  <div
-                                    className="Select-input"
-                                    style={
-                                      Object {
-                                        "display": "inline-block",
+                                      instancePrefix="react-select-2-"
+                                      onClick={null}
+                                      placeholder="Select..."
+                                      value={
+                                        Object {
+                                          "label": "Path",
+                                          "value": "path",
+                                        }
                                       }
-                                    }
-                                  >
-                                    <input
+                                    >
+                                      <div
+                                        className="Select-value"
+                                      >
+                                        <span
+                                          aria-selected="true"
+                                          className="Select-value-label"
+                                          id="react-select-2--value-item"
+                                          role="option"
+                                        >
+                                          Path
+                                        </span>
+                                      </div>
+                                    </Value>
+                                    <AutosizeInput
                                       aria-activedescendant="react-select-2--value"
                                       aria-expanded="false"
                                       aria-haspopup="false"
                                       aria-owns=""
+                                      className="Select-input"
                                       id="id-select-type"
+                                      injectStyles={true}
+                                      minWidth="5"
                                       onBlur={[Function]}
                                       onChange={[Function]}
                                       onFocus={[Function]}
                                       required={false}
                                       role="combobox"
-                                      style={
-                                        Object {
-                                          "boxSizing": "content-box",
-                                          "width": "5px",
-                                        }
-                                      }
                                       value=""
-                                    />
-                                    <div
-                                      style={
-                                        Object {
-                                          "height": 0,
-                                          "left": 0,
-                                          "overflow": "scroll",
-                                          "position": "absolute",
-                                          "top": 0,
-                                          "visibility": "hidden",
-                                          "whiteSpace": "pre",
+                                    >
+                                      <div
+                                        className="Select-input"
+                                        style={
+                                          Object {
+                                            "display": "inline-block",
+                                          }
                                         }
-                                      }
-                                    />
+                                      >
+                                        <input
+                                          aria-activedescendant="react-select-2--value"
+                                          aria-expanded="false"
+                                          aria-haspopup="false"
+                                          aria-owns=""
+                                          id="id-select-type"
+                                          onBlur={[Function]}
+                                          onChange={[Function]}
+                                          onFocus={[Function]}
+                                          required={false}
+                                          role="combobox"
+                                          style={
+                                            Object {
+                                              "boxSizing": "content-box",
+                                              "width": "5px",
+                                            }
+                                          }
+                                          value=""
+                                        />
+                                        <div
+                                          style={
+                                            Object {
+                                              "height": 0,
+                                              "left": 0,
+                                              "overflow": "scroll",
+                                              "position": "absolute",
+                                              "top": 0,
+                                              "visibility": "hidden",
+                                              "whiteSpace": "pre",
+                                            }
+                                          }
+                                        />
+                                      </div>
+                                    </AutosizeInput>
                                   </div>
-                                </AutosizeInput>
+                                  <span
+                                    className="Select-arrow-zone"
+                                    onMouseDown={[Function]}
+                                  >
+                                    <span
+                                      className="icon-arrow-down"
+                                    />
+                                  </span>
+                                </div>
                               </div>
-                              <span
-                                className="Select-arrow-zone"
-                                onMouseDown={[Function]}
-                              >
-                                <span
-                                  className="icon-arrow-down"
-                                />
-                              </span>
-                            </div>
-                          </div>
-                        </Select>
-                      </SelectPicker>
-                    </StyledSelect>
+                            </Select>
+                          </SelectPicker>
+                        </StyledSelect>
+                      </SelectControlLegacy>
+                    </ForwardRef(RefForwardedSelectControl)>
                   </SelectControl>
                 </ForwardRef(RefForwardedSelectControl)>
               </StyledSelectControl>
@@ -561,6 +616,7 @@ exports[`RuleBuilder renders 1`] = `
                 }
               }
               defaultOptions={true}
+              deprecatedSelectControl={true}
               filterOptions={[Function]}
               loadOptions={[Function]}
               onChange={[Function]}
@@ -575,6 +631,7 @@ exports[`RuleBuilder renders 1`] = `
                 className="css-fs1hps-SelectOwners"
                 clearable={true}
                 defaultOptions={true}
+                deprecatedSelectControl={true}
                 filterOptions={[Function]}
                 loadOptions={[Function]}
                 onChange={[Function]}
@@ -589,6 +646,7 @@ exports[`RuleBuilder renders 1`] = `
                   className="css-fs1hps-SelectOwners"
                   clearable={true}
                   defaultOptions={true}
+                  deprecatedSelectControl={true}
                   filterOptions={[Function]}
                   forwardedRef={[Function]}
                   loadOptions={[Function]}
@@ -605,9 +663,9 @@ exports[`RuleBuilder renders 1`] = `
                     className="css-fs1hps-SelectOwners"
                     clearable={true}
                     defaultOptions={true}
+                    deprecatedSelectControl={true}
                     filterOptions={[Function]}
                     forwardedRef={[Function]}
-                    height={36}
                     loadOptions={[Function]}
                     multiple={true}
                     onChange={[Function]}
@@ -616,20 +674,15 @@ exports[`RuleBuilder renders 1`] = `
                     value={Array []}
                     valueComponent={[Function]}
                   >
-                    <StyledSelect
-                      arrowRenderer={[Function]}
+                    <ForwardRef(RefForwardedSelectControl)
                       async={true}
-                      backspaceRemoves={true}
                       cache={false}
                       className="css-fs1hps-SelectOwners"
                       clearable={true}
                       defaultOptions={true}
-                      deleteRemoves={true}
                       filterOptions={[Function]}
                       forwardedRef={[Function]}
-                      height={36}
                       loadOptions={[Function]}
-                      multi={true}
                       multiple={true}
                       onChange={[Function]}
                       onInputChange={[Function]}
@@ -637,20 +690,16 @@ exports[`RuleBuilder renders 1`] = `
                       value={Array []}
                       valueComponent={[Function]}
                     >
-                      <SelectPicker
-                        arrowRenderer={[Function]}
+                      <SelectControlLegacy
                         async={true}
-                        backspaceRemoves={true}
                         cache={false}
-                        className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
+                        className="css-fs1hps-SelectOwners"
                         clearable={true}
                         defaultOptions={true}
-                        deleteRemoves={true}
                         filterOptions={[Function]}
                         forwardedRef={[Function]}
                         height={36}
                         loadOptions={[Function]}
-                        multi={true}
                         multiple={true}
                         onChange={[Function]}
                         onInputChange={[Function]}
@@ -658,317 +707,361 @@ exports[`RuleBuilder renders 1`] = `
                         value={Array []}
                         valueComponent={[Function]}
                       >
-                        <Async
+                        <StyledSelect
                           arrowRenderer={[Function]}
-                          autoload={true}
+                          async={true}
                           backspaceRemoves={true}
                           cache={false}
-                          className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
+                          className="css-fs1hps-SelectOwners"
                           clearable={true}
                           defaultOptions={true}
                           deleteRemoves={true}
                           filterOptions={[Function]}
+                          forwardedRef={[Function]}
                           height={36}
-                          ignoreAccents={true}
-                          ignoreCase={true}
                           loadOptions={[Function]}
-                          loadingPlaceholder="Loading..."
                           multi={true}
                           multiple={true}
                           onChange={[Function]}
                           onInputChange={[Function]}
-                          options={Array []}
                           placeholder="owners"
-                          searchPromptText="Type to search"
                           value={Array []}
                           valueComponent={[Function]}
                         >
-                          <Select
+                          <SelectPicker
                             arrowRenderer={[Function]}
-                            autoload={true}
-                            autosize={true}
+                            async={true}
                             backspaceRemoves={true}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
                             cache={false}
-                            className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
+                            className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
                             clearable={true}
-                            closeOnSelect={true}
                             defaultOptions={true}
                             deleteRemoves={true}
-                            delimiter=","
-                            disabled={false}
-                            escapeClearsValue={true}
                             filterOptions={[Function]}
+                            forwardedRef={[Function]}
                             height={36}
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
                             loadOptions={[Function]}
-                            loadingPlaceholder="Loading..."
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
                             multi={true}
                             multiple={true}
-                            noResultsText="Type to search"
-                            onBlurResetsInput={true}
                             onChange={[Function]}
-                            onCloseResetsInput={true}
                             onInputChange={[Function]}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
-                            options={
-                              Array [
-                                Object {
-                                  "actor": Object {
-                                    "id": "1",
-                                    "name": "Jane Bloggs",
-                                    "type": "user",
-                                  },
-                                  "label": <IdBadge
-                                    avatarSize={24}
-                                    hideEmail={true}
-                                    useLink={false}
-                                    user={
-                                      Object {
-                                        "email": "janebloggs@example.com",
-                                        "flags": Object {
-                                          "newsletter_consent_prompt": false,
-                                        },
-                                        "hasPasswordAuth": true,
+                            placeholder="owners"
+                            value={Array []}
+                            valueComponent={[Function]}
+                          >
+                            <Async
+                              arrowRenderer={[Function]}
+                              autoload={true}
+                              backspaceRemoves={true}
+                              cache={false}
+                              className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
+                              clearable={true}
+                              defaultOptions={true}
+                              deleteRemoves={true}
+                              filterOptions={[Function]}
+                              height={36}
+                              ignoreAccents={true}
+                              ignoreCase={true}
+                              loadOptions={[Function]}
+                              loadingPlaceholder="Loading..."
+                              multi={true}
+                              multiple={true}
+                              onChange={[Function]}
+                              onInputChange={[Function]}
+                              options={Array []}
+                              placeholder="owners"
+                              searchPromptText="Type to search"
+                              value={Array []}
+                              valueComponent={[Function]}
+                            >
+                              <Select
+                                arrowRenderer={[Function]}
+                                autoload={true}
+                                autosize={true}
+                                backspaceRemoves={true}
+                                backspaceToRemoveMessage="Press backspace to remove {label}"
+                                cache={false}
+                                className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
+                                clearAllText="Clear all"
+                                clearRenderer={[Function]}
+                                clearValueText="Clear value"
+                                clearable={true}
+                                closeOnSelect={true}
+                                defaultOptions={true}
+                                deleteRemoves={true}
+                                delimiter=","
+                                disabled={false}
+                                escapeClearsValue={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                inputProps={Object {}}
+                                isLoading={false}
+                                joinValues={false}
+                                labelKey="label"
+                                loadOptions={[Function]}
+                                loadingPlaceholder="Loading..."
+                                matchPos="any"
+                                matchProp="any"
+                                menuBuffer={0}
+                                menuRenderer={[Function]}
+                                multi={true}
+                                multiple={true}
+                                noResultsText="Type to search"
+                                onBlurResetsInput={true}
+                                onChange={[Function]}
+                                onCloseResetsInput={true}
+                                onInputChange={[Function]}
+                                onSelectResetsInput={true}
+                                openOnClick={true}
+                                optionComponent={[Function]}
+                                options={
+                                  Array [
+                                    Object {
+                                      "actor": Object {
                                         "id": "1",
-                                        "isAuthenticated": true,
                                         "name": "Jane Bloggs",
-                                        "options": Object {
-                                          "timezone": "UTC",
-                                        },
-                                        "user": Object {
-                                          "email": "janebloggs@example.com",
-                                          "id": "1",
-                                          "name": "Jane Bloggs",
-                                        },
-                                        "username": "foo@example.com",
-                                      }
-                                    }
-                                  />,
-                                  "searchKey": "janebloggs@example.com jane bloggs",
-                                  "value": "user:1",
-                                },
-                                Object {
-                                  "actor": Object {
-                                    "id": "3",
-                                    "name": "cool-team",
-                                    "type": "team",
-                                  },
-                                  "label": <IdBadge
-                                    team={
-                                      Object {
-                                        "id": "3",
-                                        "isMember": true,
-                                        "memberCount": 0,
-                                        "name": "COOL TEAM",
-                                        "slug": "cool-team",
-                                      }
-                                    }
-                                  />,
-                                  "searchKey": "#cool-team",
-                                  "value": "team:3",
-                                },
-                                Object {
-                                  "actor": Object {
-                                    "id": "4",
-                                    "name": "team-not-in-project",
-                                    "type": "team",
-                                  },
-                                  "disabled": true,
-                                  "label": <ForwardRef(render)
-                                    justifyContent="space-between"
-                                  >
-                                    <ForwardRef(render)>
-                                      <Tooltip
-                                        containerDisplayMode="inline-block"
-                                        position="left"
-                                        title="#team-not-in-project is not a member of project"
-                                      >
-                                        <IdBadge
-                                          team={
-                                            Object {
-                                              "id": "4",
-                                              "isMember": true,
-                                              "memberCount": 0,
-                                              "name": "TEAM NOT IN PROJECT",
-                                              "slug": "team-not-in-project",
-                                            }
-                                          }
-                                        />
-                                      </Tooltip>
-                                    </ForwardRef(render)>
-                                    <Tooltip
-                                      containerDisplayMode="inline-block"
-                                      position="top"
-                                      title="Add #team-not-in-project to project"
-                                    >
-                                      <ForwardRef(render)
-                                        borderless={true}
-                                        disabled={false}
-                                        onClick={[Function]}
-                                        size="zero"
-                                      >
-                                        <ForwardRef(render)
-                                          src="icon-circle-add"
-                                        />
-                                      </ForwardRef(render)>
-                                    </Tooltip>
-                                  </ForwardRef(render)>,
-                                  "searchKey": "#team-not-in-project",
-                                  "value": "team:4",
-                                },
-                                Object {
-                                  "actor": Object {
-                                    "id": "2",
-                                    "name": "John Smith",
-                                    "type": "user",
-                                  },
-                                  "disabled": true,
-                                  "label": <ForwardRef(render)>
-                                    <Tooltip
-                                      containerDisplayMode="inline-block"
-                                      position="left"
-                                      title="John Smith is not a member of project"
-                                    >
-                                      <IdBadge
+                                        "type": "user",
+                                      },
+                                      "label": <IdBadge
                                         avatarSize={24}
                                         hideEmail={true}
                                         useLink={false}
                                         user={
                                           Object {
-                                            "email": "johnsmith@example.com",
-                                            "id": "2",
-                                            "name": "John Smith",
+                                            "email": "janebloggs@example.com",
+                                            "flags": Object {
+                                              "newsletter_consent_prompt": false,
+                                            },
+                                            "hasPasswordAuth": true,
+                                            "id": "1",
+                                            "isAuthenticated": true,
+                                            "name": "Jane Bloggs",
+                                            "options": Object {
+                                              "timezone": "UTC",
+                                            },
+                                            "user": Object {
+                                              "email": "janebloggs@example.com",
+                                              "id": "1",
+                                              "name": "Jane Bloggs",
+                                            },
+                                            "username": "foo@example.com",
                                           }
                                         }
-                                      />
-                                    </Tooltip>
-                                  </ForwardRef(render)>,
-                                  "searchKey": "johnsmith@example.com john smith",
-                                  "value": "user:2",
-                                },
-                              ]
-                            }
-                            pageSize={5}
-                            placeholder="owners"
-                            removeSelected={true}
-                            required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchPromptText="Type to search"
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
-                            value={Array []}
-                            valueComponent={[Function]}
-                            valueKey="value"
-                          >
-                            <div
-                              className="Select css-gv7e0o-StyledSelect-SelectOwners eho28m20 is-clearable is-searchable Select--multi"
-                            >
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
+                                      />,
+                                      "searchKey": "janebloggs@example.com jane bloggs",
+                                      "value": "user:1",
+                                    },
+                                    Object {
+                                      "actor": Object {
+                                        "id": "3",
+                                        "name": "cool-team",
+                                        "type": "team",
+                                      },
+                                      "label": <IdBadge
+                                        team={
+                                          Object {
+                                            "id": "3",
+                                            "isMember": true,
+                                            "memberCount": 0,
+                                            "name": "COOL TEAM",
+                                            "slug": "cool-team",
+                                          }
+                                        }
+                                      />,
+                                      "searchKey": "#cool-team",
+                                      "value": "team:3",
+                                    },
+                                    Object {
+                                      "actor": Object {
+                                        "id": "4",
+                                        "name": "team-not-in-project",
+                                        "type": "team",
+                                      },
+                                      "disabled": true,
+                                      "label": <ForwardRef(render)
+                                        justifyContent="space-between"
+                                      >
+                                        <ForwardRef(render)>
+                                          <Tooltip
+                                            containerDisplayMode="inline-block"
+                                            position="left"
+                                            title="#team-not-in-project is not a member of project"
+                                          >
+                                            <IdBadge
+                                              team={
+                                                Object {
+                                                  "id": "4",
+                                                  "isMember": true,
+                                                  "memberCount": 0,
+                                                  "name": "TEAM NOT IN PROJECT",
+                                                  "slug": "team-not-in-project",
+                                                }
+                                              }
+                                            />
+                                          </Tooltip>
+                                        </ForwardRef(render)>
+                                        <Tooltip
+                                          containerDisplayMode="inline-block"
+                                          position="top"
+                                          title="Add #team-not-in-project to project"
+                                        >
+                                          <ForwardRef(render)
+                                            borderless={true}
+                                            disabled={false}
+                                            onClick={[Function]}
+                                            size="zero"
+                                          >
+                                            <ForwardRef(render)
+                                              src="icon-circle-add"
+                                            />
+                                          </ForwardRef(render)>
+                                        </Tooltip>
+                                      </ForwardRef(render)>,
+                                      "searchKey": "#team-not-in-project",
+                                      "value": "team:4",
+                                    },
+                                    Object {
+                                      "actor": Object {
+                                        "id": "2",
+                                        "name": "John Smith",
+                                        "type": "user",
+                                      },
+                                      "disabled": true,
+                                      "label": <ForwardRef(render)>
+                                        <Tooltip
+                                          containerDisplayMode="inline-block"
+                                          position="left"
+                                          title="John Smith is not a member of project"
+                                        >
+                                          <IdBadge
+                                            avatarSize={24}
+                                            hideEmail={true}
+                                            useLink={false}
+                                            user={
+                                              Object {
+                                                "email": "johnsmith@example.com",
+                                                "id": "2",
+                                                "name": "John Smith",
+                                              }
+                                            }
+                                          />
+                                        </Tooltip>
+                                      </ForwardRef(render)>,
+                                      "searchKey": "johnsmith@example.com john smith",
+                                      "value": "user:2",
+                                    },
+                                  ]
+                                }
+                                pageSize={5}
+                                placeholder="owners"
+                                removeSelected={true}
+                                required={false}
+                                rtl={false}
+                                scrollMenuIntoView={true}
+                                searchPromptText="Type to search"
+                                searchable={true}
+                                simpleValue={false}
+                                tabSelectsValue={true}
+                                trimFilter={true}
+                                value={Array []}
+                                valueComponent={[Function]}
+                                valueKey="value"
                               >
                                 <div
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-3--value"
+                                  className="Select css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0 is-clearable is-searchable Select--multi"
                                 >
                                   <div
-                                    className="Select-placeholder"
-                                  >
-                                    owners
-                                  </div>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-3--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns=""
-                                    className="Select-input"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
+                                    className="Select-control"
+                                    onKeyDown={[Function]}
+                                    onMouseDown={[Function]}
+                                    onTouchEnd={[Function]}
+                                    onTouchMove={[Function]}
+                                    onTouchStart={[Function]}
                                   >
                                     <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
-                                        }
-                                      }
+                                      className="Select-multi-value-wrapper"
+                                      id="react-select-3--value"
                                     >
-                                      <input
+                                      <div
+                                        className="Select-placeholder"
+                                      >
+                                        owners
+                                      </div>
+                                      <AutosizeInput
                                         aria-activedescendant="react-select-3--value"
                                         aria-expanded="false"
                                         aria-haspopup="false"
                                         aria-owns=""
+                                        className="Select-input"
+                                        injectStyles={true}
+                                        minWidth="5"
                                         onBlur={[Function]}
                                         onChange={[Function]}
                                         onFocus={[Function]}
                                         required={false}
                                         role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
                                         value=""
-                                      />
-                                      <div
-                                        style={
-                                          Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
+                                      >
+                                        <div
+                                          className="Select-input"
+                                          style={
+                                            Object {
+                                              "display": "inline-block",
+                                            }
                                           }
-                                        }
-                                      />
+                                        >
+                                          <input
+                                            aria-activedescendant="react-select-3--value"
+                                            aria-expanded="false"
+                                            aria-haspopup="false"
+                                            aria-owns=""
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            onFocus={[Function]}
+                                            required={false}
+                                            role="combobox"
+                                            style={
+                                              Object {
+                                                "boxSizing": "content-box",
+                                                "width": "5px",
+                                              }
+                                            }
+                                            value=""
+                                          />
+                                          <div
+                                            style={
+                                              Object {
+                                                "height": 0,
+                                                "left": 0,
+                                                "overflow": "scroll",
+                                                "position": "absolute",
+                                                "top": 0,
+                                                "visibility": "hidden",
+                                                "whiteSpace": "pre",
+                                              }
+                                            }
+                                          />
+                                        </div>
+                                      </AutosizeInput>
                                     </div>
-                                  </AutosizeInput>
+                                    <span
+                                      className="Select-arrow-zone"
+                                      onMouseDown={[Function]}
+                                    >
+                                      <span
+                                        className="icon-arrow-down"
+                                      />
+                                    </span>
+                                  </div>
                                 </div>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </Async>
-                      </SelectPicker>
-                    </StyledSelect>
+                              </Select>
+                            </Async>
+                          </SelectPicker>
+                        </StyledSelect>
+                      </SelectControlLegacy>
+                    </ForwardRef(RefForwardedSelectControl)>
                   </SelectControl>
                 </ForwardRef(RefForwardedSelectControl)>
               </ForwardRef(MultiSelectControl)>
@@ -1344,6 +1437,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
     >
       <BuilderSelect
         clearable={false}
+        deprecatedSelectControl={true}
         disabled={false}
         hideErrorMessage={false}
         multiple={false}
@@ -1373,6 +1467,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
         <SelectField
           className="css-10lzdlx-BuilderSelect e1hyuoc76"
           clearable={false}
+          deprecatedSelectControl={true}
           disabled={false}
           hideErrorMessage={false}
           multiple={false}
@@ -1412,6 +1507,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
             >
               <StyledSelectControl
                 clearable={false}
+                deprecatedSelectControl={true}
                 disabled={false}
                 id="id-select-type"
                 multiple={false}
@@ -1435,6 +1531,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                 <ForwardRef(RefForwardedSelectControl)
                   className="css-9gm53a-StyledSelectControl e1qrhqd00"
                   clearable={false}
+                  deprecatedSelectControl={true}
                   disabled={false}
                   id="id-select-type"
                   multiple={false}
@@ -1458,9 +1555,9 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   <SelectControl
                     className="css-9gm53a-StyledSelectControl e1qrhqd00"
                     clearable={false}
+                    deprecatedSelectControl={true}
                     disabled={false}
                     forwardedRef={null}
-                    height={36}
                     id="id-select-type"
                     multiple={false}
                     name="select-type"
@@ -1480,15 +1577,11 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     required={false}
                     value="path"
                   >
-                    <StyledSelect
-                      arrowRenderer={[Function]}
-                      backspaceRemoves={false}
+                    <ForwardRef(RefForwardedSelectControl)
                       className="css-9gm53a-StyledSelectControl e1qrhqd00"
                       clearable={false}
-                      deleteRemoves={false}
                       disabled={false}
                       forwardedRef={null}
-                      height={36}
                       id="id-select-type"
                       multiple={false}
                       name="select-type"
@@ -1508,12 +1601,9 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       required={false}
                       value="path"
                     >
-                      <SelectPicker
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
-                        className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
+                      <SelectControlLegacy
+                        className="css-9gm53a-StyledSelectControl e1qrhqd00"
                         clearable={false}
-                        deleteRemoves={false}
                         disabled={false}
                         forwardedRef={null}
                         height={36}
@@ -1536,44 +1626,19 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         required={false}
                         value="path"
                       >
-                        <Select
+                        <StyledSelect
                           arrowRenderer={[Function]}
-                          autosize={true}
                           backspaceRemoves={false}
-                          backspaceToRemoveMessage="Press backspace to remove {label}"
-                          className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20"
-                          clearAllText="Clear all"
-                          clearRenderer={[Function]}
-                          clearValueText="Clear value"
+                          className="css-9gm53a-StyledSelectControl e1qrhqd00"
                           clearable={false}
-                          closeOnSelect={true}
                           deleteRemoves={false}
-                          delimiter=","
                           disabled={false}
-                          escapeClearsValue={true}
-                          filterOptions={[Function]}
+                          forwardedRef={null}
                           height={36}
                           id="id-select-type"
-                          ignoreAccents={true}
-                          ignoreCase={true}
-                          inputProps={Object {}}
-                          isLoading={false}
-                          joinValues={false}
-                          labelKey="label"
-                          matchPos="any"
-                          matchProp="any"
-                          menuBuffer={0}
-                          menuRenderer={[Function]}
-                          multi={false}
                           multiple={false}
                           name="select-type"
-                          noResultsText="No results found"
-                          onBlurResetsInput={true}
                           onChange={[Function]}
-                          onCloseResetsInput={true}
-                          onSelectResetsInput={true}
-                          openOnClick={true}
-                          optionComponent={[Function]}
                           options={
                             Array [
                               Object {
@@ -1586,140 +1651,223 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                               },
                             ]
                           }
-                          pageSize={5}
-                          placeholder="Select..."
-                          removeSelected={true}
                           required={false}
-                          rtl={false}
-                          scrollMenuIntoView={true}
-                          searchable={true}
-                          simpleValue={false}
-                          tabSelectsValue={true}
-                          trimFilter={true}
                           value="path"
-                          valueComponent={[Function]}
-                          valueKey="value"
                         >
-                          <div
-                            className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                          <SelectPicker
+                            arrowRenderer={[Function]}
+                            backspaceRemoves={false}
+                            className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                            clearable={false}
+                            deleteRemoves={false}
+                            disabled={false}
+                            forwardedRef={null}
+                            height={36}
+                            id="id-select-type"
+                            multiple={false}
+                            name="select-type"
+                            onChange={[Function]}
+                            options={
+                              Array [
+                                Object {
+                                  "label": "Path",
+                                  "value": "path",
+                                },
+                                Object {
+                                  "label": "URL",
+                                  "value": "url",
+                                },
+                              ]
+                            }
+                            required={false}
+                            value="path"
                           >
-                            <input
+                            <Select
+                              arrowRenderer={[Function]}
+                              autosize={true}
+                              backspaceRemoves={false}
+                              backspaceToRemoveMessage="Press backspace to remove {label}"
+                              className="e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0"
+                              clearAllText="Clear all"
+                              clearRenderer={[Function]}
+                              clearValueText="Clear value"
+                              clearable={false}
+                              closeOnSelect={true}
+                              deleteRemoves={false}
+                              delimiter=","
                               disabled={false}
-                              key="hidden.0"
+                              escapeClearsValue={true}
+                              filterOptions={[Function]}
+                              height={36}
+                              id="id-select-type"
+                              ignoreAccents={true}
+                              ignoreCase={true}
+                              inputProps={Object {}}
+                              isLoading={false}
+                              joinValues={false}
+                              labelKey="label"
+                              matchPos="any"
+                              matchProp="any"
+                              menuBuffer={0}
+                              menuRenderer={[Function]}
+                              multi={false}
+                              multiple={false}
                               name="select-type"
-                              type="hidden"
+                              noResultsText="No results found"
+                              onBlurResetsInput={true}
+                              onChange={[Function]}
+                              onCloseResetsInput={true}
+                              onSelectResetsInput={true}
+                              openOnClick={true}
+                              optionComponent={[Function]}
+                              options={
+                                Array [
+                                  Object {
+                                    "label": "Path",
+                                    "value": "path",
+                                  },
+                                  Object {
+                                    "label": "URL",
+                                    "value": "url",
+                                  },
+                                ]
+                              }
+                              pageSize={5}
+                              placeholder="Select..."
+                              removeSelected={true}
+                              required={false}
+                              rtl={false}
+                              scrollMenuIntoView={true}
+                              searchable={true}
+                              simpleValue={false}
+                              tabSelectsValue={true}
+                              trimFilter={true}
                               value="path"
-                            />
-                            <div
-                              className="Select-control"
-                              onKeyDown={[Function]}
-                              onMouseDown={[Function]}
-                              onTouchEnd={[Function]}
-                              onTouchMove={[Function]}
-                              onTouchStart={[Function]}
+                              valueComponent={[Function]}
+                              valueKey="value"
                             >
                               <div
-                                className="Select-multi-value-wrapper"
-                                id="react-select-4--value"
+                                className="Select e1qrhqd00 css-j0gflv-StyledSelect-StyledSelectControl e1ynsgsr0 has-value is-searchable Select--single"
                               >
-                                <Value
+                                <input
                                   disabled={false}
-                                  id="react-select-4--value-item"
-                                  instancePrefix="react-select-4-"
-                                  onClick={null}
-                                  placeholder="Select..."
-                                  value={
-                                    Object {
-                                      "label": "Path",
-                                      "value": "path",
-                                    }
-                                  }
+                                  key="hidden.0"
+                                  name="select-type"
+                                  type="hidden"
+                                  value="path"
+                                />
+                                <div
+                                  className="Select-control"
+                                  onKeyDown={[Function]}
+                                  onMouseDown={[Function]}
+                                  onTouchEnd={[Function]}
+                                  onTouchMove={[Function]}
+                                  onTouchStart={[Function]}
                                 >
                                   <div
-                                    className="Select-value"
+                                    className="Select-multi-value-wrapper"
+                                    id="react-select-4--value"
                                   >
-                                    <span
-                                      aria-selected="true"
-                                      className="Select-value-label"
+                                    <Value
+                                      disabled={false}
                                       id="react-select-4--value-item"
-                                      role="option"
-                                    >
-                                      Path
-                                    </span>
-                                  </div>
-                                </Value>
-                                <AutosizeInput
-                                  aria-activedescendant="react-select-4--value"
-                                  aria-expanded="false"
-                                  aria-haspopup="false"
-                                  aria-owns=""
-                                  className="Select-input"
-                                  id="id-select-type"
-                                  injectStyles={true}
-                                  minWidth="5"
-                                  onBlur={[Function]}
-                                  onChange={[Function]}
-                                  onFocus={[Function]}
-                                  required={false}
-                                  role="combobox"
-                                  value=""
-                                >
-                                  <div
-                                    className="Select-input"
-                                    style={
-                                      Object {
-                                        "display": "inline-block",
+                                      instancePrefix="react-select-4-"
+                                      onClick={null}
+                                      placeholder="Select..."
+                                      value={
+                                        Object {
+                                          "label": "Path",
+                                          "value": "path",
+                                        }
                                       }
-                                    }
-                                  >
-                                    <input
+                                    >
+                                      <div
+                                        className="Select-value"
+                                      >
+                                        <span
+                                          aria-selected="true"
+                                          className="Select-value-label"
+                                          id="react-select-4--value-item"
+                                          role="option"
+                                        >
+                                          Path
+                                        </span>
+                                      </div>
+                                    </Value>
+                                    <AutosizeInput
                                       aria-activedescendant="react-select-4--value"
                                       aria-expanded="false"
                                       aria-haspopup="false"
                                       aria-owns=""
+                                      className="Select-input"
                                       id="id-select-type"
+                                      injectStyles={true}
+                                      minWidth="5"
                                       onBlur={[Function]}
                                       onChange={[Function]}
                                       onFocus={[Function]}
                                       required={false}
                                       role="combobox"
-                                      style={
-                                        Object {
-                                          "boxSizing": "content-box",
-                                          "width": "5px",
-                                        }
-                                      }
                                       value=""
-                                    />
-                                    <div
-                                      style={
-                                        Object {
-                                          "height": 0,
-                                          "left": 0,
-                                          "overflow": "scroll",
-                                          "position": "absolute",
-                                          "top": 0,
-                                          "visibility": "hidden",
-                                          "whiteSpace": "pre",
+                                    >
+                                      <div
+                                        className="Select-input"
+                                        style={
+                                          Object {
+                                            "display": "inline-block",
+                                          }
                                         }
-                                      }
-                                    />
+                                      >
+                                        <input
+                                          aria-activedescendant="react-select-4--value"
+                                          aria-expanded="false"
+                                          aria-haspopup="false"
+                                          aria-owns=""
+                                          id="id-select-type"
+                                          onBlur={[Function]}
+                                          onChange={[Function]}
+                                          onFocus={[Function]}
+                                          required={false}
+                                          role="combobox"
+                                          style={
+                                            Object {
+                                              "boxSizing": "content-box",
+                                              "width": "5px",
+                                            }
+                                          }
+                                          value=""
+                                        />
+                                        <div
+                                          style={
+                                            Object {
+                                              "height": 0,
+                                              "left": 0,
+                                              "overflow": "scroll",
+                                              "position": "absolute",
+                                              "top": 0,
+                                              "visibility": "hidden",
+                                              "whiteSpace": "pre",
+                                            }
+                                          }
+                                        />
+                                      </div>
+                                    </AutosizeInput>
                                   </div>
-                                </AutosizeInput>
+                                  <span
+                                    className="Select-arrow-zone"
+                                    onMouseDown={[Function]}
+                                  >
+                                    <span
+                                      className="icon-arrow-down"
+                                    />
+                                  </span>
+                                </div>
                               </div>
-                              <span
-                                className="Select-arrow-zone"
-                                onMouseDown={[Function]}
-                              >
-                                <span
-                                  className="icon-arrow-down"
-                                />
-                              </span>
-                            </div>
-                          </div>
-                        </Select>
-                      </SelectPicker>
-                    </StyledSelect>
+                            </Select>
+                          </SelectPicker>
+                        </StyledSelect>
+                      </SelectControlLegacy>
+                    </ForwardRef(RefForwardedSelectControl)>
                   </SelectControl>
                 </ForwardRef(RefForwardedSelectControl)>
               </StyledSelectControl>
@@ -1871,6 +2019,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                 }
               }
               defaultOptions={true}
+              deprecatedSelectControl={true}
               filterOptions={[Function]}
               loadOptions={[Function]}
               onChange={[Function]}
@@ -1923,6 +2072,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                 className="css-fs1hps-SelectOwners"
                 clearable={true}
                 defaultOptions={true}
+                deprecatedSelectControl={true}
                 filterOptions={[Function]}
                 loadOptions={[Function]}
                 onChange={[Function]}
@@ -1975,6 +2125,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                   className="css-fs1hps-SelectOwners"
                   clearable={true}
                   defaultOptions={true}
+                  deprecatedSelectControl={true}
                   filterOptions={[Function]}
                   forwardedRef={[Function]}
                   loadOptions={[Function]}
@@ -2029,9 +2180,9 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     className="css-fs1hps-SelectOwners"
                     clearable={true}
                     defaultOptions={true}
+                    deprecatedSelectControl={true}
                     filterOptions={[Function]}
                     forwardedRef={[Function]}
-                    height={36}
                     loadOptions={[Function]}
                     multiple={true}
                     onChange={[Function]}
@@ -2078,20 +2229,15 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                     }
                     valueComponent={[Function]}
                   >
-                    <StyledSelect
-                      arrowRenderer={[Function]}
+                    <ForwardRef(RefForwardedSelectControl)
                       async={true}
-                      backspaceRemoves={true}
                       cache={false}
                       className="css-fs1hps-SelectOwners"
                       clearable={true}
                       defaultOptions={true}
-                      deleteRemoves={true}
                       filterOptions={[Function]}
                       forwardedRef={[Function]}
-                      height={36}
                       loadOptions={[Function]}
-                      multi={true}
                       multiple={true}
                       onChange={[Function]}
                       onInputChange={[Function]}
@@ -2137,20 +2283,16 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                       }
                       valueComponent={[Function]}
                     >
-                      <SelectPicker
-                        arrowRenderer={[Function]}
+                      <SelectControlLegacy
                         async={true}
-                        backspaceRemoves={true}
                         cache={false}
-                        className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
+                        className="css-fs1hps-SelectOwners"
                         clearable={true}
                         defaultOptions={true}
-                        deleteRemoves={true}
                         filterOptions={[Function]}
                         forwardedRef={[Function]}
                         height={36}
                         loadOptions={[Function]}
-                        multi={true}
                         multiple={true}
                         onChange={[Function]}
                         onInputChange={[Function]}
@@ -2196,28 +2338,24 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                         }
                         valueComponent={[Function]}
                       >
-                        <Async
+                        <StyledSelect
                           arrowRenderer={[Function]}
-                          autoload={true}
+                          async={true}
                           backspaceRemoves={true}
                           cache={false}
-                          className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
+                          className="css-fs1hps-SelectOwners"
                           clearable={true}
                           defaultOptions={true}
                           deleteRemoves={true}
                           filterOptions={[Function]}
+                          forwardedRef={[Function]}
                           height={36}
-                          ignoreAccents={true}
-                          ignoreCase={true}
                           loadOptions={[Function]}
-                          loadingPlaceholder="Loading..."
                           multi={true}
                           multiple={true}
                           onChange={[Function]}
                           onInputChange={[Function]}
-                          options={Array []}
                           placeholder="owners"
-                          searchPromptText="Type to search"
                           value={
                             Array [
                               Object {
@@ -2259,197 +2397,24 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                           }
                           valueComponent={[Function]}
                         >
-                          <Select
+                          <SelectPicker
                             arrowRenderer={[Function]}
-                            autoload={true}
-                            autosize={true}
+                            async={true}
                             backspaceRemoves={true}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
                             cache={false}
-                            className="css-gv7e0o-StyledSelect-SelectOwners eho28m20"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
+                            className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
                             clearable={true}
-                            closeOnSelect={true}
                             defaultOptions={true}
                             deleteRemoves={true}
-                            delimiter=","
-                            disabled={false}
-                            escapeClearsValue={true}
                             filterOptions={[Function]}
+                            forwardedRef={[Function]}
                             height={36}
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
                             loadOptions={[Function]}
-                            loadingPlaceholder="Loading..."
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
                             multi={true}
                             multiple={true}
-                            noResultsText="Type to search"
-                            onBlurResetsInput={true}
                             onChange={[Function]}
-                            onCloseResetsInput={true}
                             onInputChange={[Function]}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
-                            options={
-                              Array [
-                                Object {
-                                  "actor": Object {
-                                    "id": "1",
-                                    "name": "Jane Bloggs",
-                                    "type": "user",
-                                  },
-                                  "label": <IdBadge
-                                    avatarSize={24}
-                                    hideEmail={true}
-                                    useLink={false}
-                                    user={
-                                      Object {
-                                        "email": "janebloggs@example.com",
-                                        "flags": Object {
-                                          "newsletter_consent_prompt": false,
-                                        },
-                                        "hasPasswordAuth": true,
-                                        "id": "1",
-                                        "isAuthenticated": true,
-                                        "name": "Jane Bloggs",
-                                        "options": Object {
-                                          "timezone": "UTC",
-                                        },
-                                        "user": Object {
-                                          "email": "janebloggs@example.com",
-                                          "id": "1",
-                                          "name": "Jane Bloggs",
-                                        },
-                                        "username": "foo@example.com",
-                                      }
-                                    }
-                                  />,
-                                  "searchKey": "janebloggs@example.com jane bloggs",
-                                  "value": "user:1",
-                                },
-                                Object {
-                                  "actor": Object {
-                                    "id": "3",
-                                    "name": "cool-team",
-                                    "type": "team",
-                                  },
-                                  "label": <IdBadge
-                                    team={
-                                      Object {
-                                        "id": "3",
-                                        "isMember": true,
-                                        "memberCount": 0,
-                                        "name": "COOL TEAM",
-                                        "slug": "cool-team",
-                                      }
-                                    }
-                                  />,
-                                  "searchKey": "#cool-team",
-                                  "value": "team:3",
-                                },
-                                Object {
-                                  "actor": Object {
-                                    "id": "4",
-                                    "name": "team-not-in-project",
-                                    "type": "team",
-                                  },
-                                  "disabled": true,
-                                  "label": <ForwardRef(render)
-                                    justifyContent="space-between"
-                                  >
-                                    <ForwardRef(render)>
-                                      <Tooltip
-                                        containerDisplayMode="inline-block"
-                                        position="left"
-                                        title="#team-not-in-project is not a member of project"
-                                      >
-                                        <IdBadge
-                                          team={
-                                            Object {
-                                              "id": "4",
-                                              "isMember": true,
-                                              "memberCount": 0,
-                                              "name": "TEAM NOT IN PROJECT",
-                                              "slug": "team-not-in-project",
-                                            }
-                                          }
-                                        />
-                                      </Tooltip>
-                                    </ForwardRef(render)>
-                                    <Tooltip
-                                      containerDisplayMode="inline-block"
-                                      position="top"
-                                      title="Add #team-not-in-project to project"
-                                    >
-                                      <ForwardRef(render)
-                                        borderless={true}
-                                        disabled={false}
-                                        onClick={[Function]}
-                                        size="zero"
-                                      >
-                                        <ForwardRef(render)
-                                          src="icon-circle-add"
-                                        />
-                                      </ForwardRef(render)>
-                                    </Tooltip>
-                                  </ForwardRef(render)>,
-                                  "searchKey": "#team-not-in-project",
-                                  "value": "team:4",
-                                },
-                                Object {
-                                  "actor": Object {
-                                    "id": "2",
-                                    "name": "John Smith",
-                                    "type": "user",
-                                  },
-                                  "disabled": true,
-                                  "label": <ForwardRef(render)>
-                                    <Tooltip
-                                      containerDisplayMode="inline-block"
-                                      position="left"
-                                      title="John Smith is not a member of project"
-                                    >
-                                      <IdBadge
-                                        avatarSize={24}
-                                        hideEmail={true}
-                                        useLink={false}
-                                        user={
-                                          Object {
-                                            "email": "johnsmith@example.com",
-                                            "id": "2",
-                                            "name": "John Smith",
-                                          }
-                                        }
-                                      />
-                                    </Tooltip>
-                                  </ForwardRef(render)>,
-                                  "searchKey": "johnsmith@example.com john smith",
-                                  "value": "user:2",
-                                },
-                              ]
-                            }
-                            pageSize={5}
                             placeholder="owners"
-                            removeSelected={true}
-                            required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchPromptText="Type to search"
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
                             value={
                               Array [
                                 Object {
@@ -2490,357 +2455,654 @@ exports[`RuleBuilder renders with suggestions 1`] = `
                               ]
                             }
                             valueComponent={[Function]}
-                            valueKey="value"
                           >
-                            <div
-                              className="Select css-gv7e0o-StyledSelect-SelectOwners eho28m20 has-value is-clearable is-focused is-searchable Select--multi"
-                            >
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
-                              >
-                                <div
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-5--value"
-                                >
-                                  <ValueComponent
-                                    disabled={false}
-                                    id="react-select-5--value-0"
-                                    instancePrefix="react-select-5-"
-                                    key="value-0-user:1"
-                                    onClick={null}
-                                    onRemove={[Function]}
-                                    placeholder="owners"
-                                    value={
-                                      Object {
-                                        "actor": Object {
+                            <Async
+                              arrowRenderer={[Function]}
+                              autoload={true}
+                              backspaceRemoves={true}
+                              cache={false}
+                              className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
+                              clearable={true}
+                              defaultOptions={true}
+                              deleteRemoves={true}
+                              filterOptions={[Function]}
+                              height={36}
+                              ignoreAccents={true}
+                              ignoreCase={true}
+                              loadOptions={[Function]}
+                              loadingPlaceholder="Loading..."
+                              multi={true}
+                              multiple={true}
+                              onChange={[Function]}
+                              onInputChange={[Function]}
+                              options={Array []}
+                              placeholder="owners"
+                              searchPromptText="Type to search"
+                              value={
+                                Array [
+                                  Object {
+                                    "actor": Object {
+                                      "id": "1",
+                                      "name": "Jane Bloggs",
+                                      "type": "user",
+                                    },
+                                    "label": <IdBadge
+                                      avatarSize={24}
+                                      hideEmail={true}
+                                      useLink={false}
+                                      user={
+                                        Object {
+                                          "email": "janebloggs@example.com",
+                                          "flags": Object {
+                                            "newsletter_consent_prompt": false,
+                                          },
+                                          "hasPasswordAuth": true,
                                           "id": "1",
+                                          "isAuthenticated": true,
                                           "name": "Jane Bloggs",
-                                          "type": "user",
-                                        },
-                                        "label": <IdBadge
-                                          avatarSize={24}
-                                          hideEmail={true}
-                                          useLink={false}
-                                          user={
-                                            Object {
+                                          "options": Object {
+                                            "timezone": "UTC",
+                                          },
+                                          "user": Object {
+                                            "email": "janebloggs@example.com",
+                                            "id": "1",
+                                            "name": "Jane Bloggs",
+                                          },
+                                          "username": "foo@example.com",
+                                        }
+                                      }
+                                    />,
+                                    "searchKey": "janebloggs@example.com jane bloggs",
+                                    "value": "user:1",
+                                  },
+                                ]
+                              }
+                              valueComponent={[Function]}
+                            >
+                              <Select
+                                arrowRenderer={[Function]}
+                                autoload={true}
+                                autosize={true}
+                                backspaceRemoves={true}
+                                backspaceToRemoveMessage="Press backspace to remove {label}"
+                                cache={false}
+                                className="css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0"
+                                clearAllText="Clear all"
+                                clearRenderer={[Function]}
+                                clearValueText="Clear value"
+                                clearable={true}
+                                closeOnSelect={true}
+                                defaultOptions={true}
+                                deleteRemoves={true}
+                                delimiter=","
+                                disabled={false}
+                                escapeClearsValue={true}
+                                filterOptions={[Function]}
+                                height={36}
+                                ignoreAccents={true}
+                                ignoreCase={true}
+                                inputProps={Object {}}
+                                isLoading={false}
+                                joinValues={false}
+                                labelKey="label"
+                                loadOptions={[Function]}
+                                loadingPlaceholder="Loading..."
+                                matchPos="any"
+                                matchProp="any"
+                                menuBuffer={0}
+                                menuRenderer={[Function]}
+                                multi={true}
+                                multiple={true}
+                                noResultsText="Type to search"
+                                onBlurResetsInput={true}
+                                onChange={[Function]}
+                                onCloseResetsInput={true}
+                                onInputChange={[Function]}
+                                onSelectResetsInput={true}
+                                openOnClick={true}
+                                optionComponent={[Function]}
+                                options={
+                                  Array [
+                                    Object {
+                                      "actor": Object {
+                                        "id": "1",
+                                        "name": "Jane Bloggs",
+                                        "type": "user",
+                                      },
+                                      "label": <IdBadge
+                                        avatarSize={24}
+                                        hideEmail={true}
+                                        useLink={false}
+                                        user={
+                                          Object {
+                                            "email": "janebloggs@example.com",
+                                            "flags": Object {
+                                              "newsletter_consent_prompt": false,
+                                            },
+                                            "hasPasswordAuth": true,
+                                            "id": "1",
+                                            "isAuthenticated": true,
+                                            "name": "Jane Bloggs",
+                                            "options": Object {
+                                              "timezone": "UTC",
+                                            },
+                                            "user": Object {
                                               "email": "janebloggs@example.com",
-                                              "flags": Object {
-                                                "newsletter_consent_prompt": false,
-                                              },
-                                              "hasPasswordAuth": true,
                                               "id": "1",
-                                              "isAuthenticated": true,
                                               "name": "Jane Bloggs",
-                                              "options": Object {
-                                                "timezone": "UTC",
-                                              },
-                                              "user": Object {
-                                                "email": "janebloggs@example.com",
-                                                "id": "1",
-                                                "name": "Jane Bloggs",
-                                              },
-                                              "username": "foo@example.com",
-                                            }
+                                            },
+                                            "username": "foo@example.com",
                                           }
-                                        />,
-                                        "searchKey": "janebloggs@example.com jane bloggs",
-                                        "value": "user:1",
-                                      }
-                                    }
-                                    values={
-                                      Array [
-                                        Object {
-                                          "actor": Object {
-                                            "id": "1",
-                                            "name": "Jane Bloggs",
-                                            "type": "user",
-                                          },
-                                          "label": <IdBadge
+                                        }
+                                      />,
+                                      "searchKey": "janebloggs@example.com jane bloggs",
+                                      "value": "user:1",
+                                    },
+                                    Object {
+                                      "actor": Object {
+                                        "id": "3",
+                                        "name": "cool-team",
+                                        "type": "team",
+                                      },
+                                      "label": <IdBadge
+                                        team={
+                                          Object {
+                                            "id": "3",
+                                            "isMember": true,
+                                            "memberCount": 0,
+                                            "name": "COOL TEAM",
+                                            "slug": "cool-team",
+                                          }
+                                        }
+                                      />,
+                                      "searchKey": "#cool-team",
+                                      "value": "team:3",
+                                    },
+                                    Object {
+                                      "actor": Object {
+                                        "id": "4",
+                                        "name": "team-not-in-project",
+                                        "type": "team",
+                                      },
+                                      "disabled": true,
+                                      "label": <ForwardRef(render)
+                                        justifyContent="space-between"
+                                      >
+                                        <ForwardRef(render)>
+                                          <Tooltip
+                                            containerDisplayMode="inline-block"
+                                            position="left"
+                                            title="#team-not-in-project is not a member of project"
+                                          >
+                                            <IdBadge
+                                              team={
+                                                Object {
+                                                  "id": "4",
+                                                  "isMember": true,
+                                                  "memberCount": 0,
+                                                  "name": "TEAM NOT IN PROJECT",
+                                                  "slug": "team-not-in-project",
+                                                }
+                                              }
+                                            />
+                                          </Tooltip>
+                                        </ForwardRef(render)>
+                                        <Tooltip
+                                          containerDisplayMode="inline-block"
+                                          position="top"
+                                          title="Add #team-not-in-project to project"
+                                        >
+                                          <ForwardRef(render)
+                                            borderless={true}
+                                            disabled={false}
+                                            onClick={[Function]}
+                                            size="zero"
+                                          >
+                                            <ForwardRef(render)
+                                              src="icon-circle-add"
+                                            />
+                                          </ForwardRef(render)>
+                                        </Tooltip>
+                                      </ForwardRef(render)>,
+                                      "searchKey": "#team-not-in-project",
+                                      "value": "team:4",
+                                    },
+                                    Object {
+                                      "actor": Object {
+                                        "id": "2",
+                                        "name": "John Smith",
+                                        "type": "user",
+                                      },
+                                      "disabled": true,
+                                      "label": <ForwardRef(render)>
+                                        <Tooltip
+                                          containerDisplayMode="inline-block"
+                                          position="left"
+                                          title="John Smith is not a member of project"
+                                        >
+                                          <IdBadge
                                             avatarSize={24}
                                             hideEmail={true}
                                             useLink={false}
                                             user={
                                               Object {
-                                                "email": "janebloggs@example.com",
-                                                "flags": Object {
-                                                  "newsletter_consent_prompt": false,
-                                                },
-                                                "hasPasswordAuth": true,
-                                                "id": "1",
-                                                "isAuthenticated": true,
-                                                "name": "Jane Bloggs",
-                                                "options": Object {
-                                                  "timezone": "UTC",
-                                                },
-                                                "user": Object {
-                                                  "email": "janebloggs@example.com",
-                                                  "id": "1",
-                                                  "name": "Jane Bloggs",
-                                                },
-                                                "username": "foo@example.com",
+                                                "email": "johnsmith@example.com",
+                                                "id": "2",
+                                                "name": "John Smith",
                                               }
                                             }
-                                          />,
-                                          "searchKey": "janebloggs@example.com jane bloggs",
-                                          "value": "user:1",
-                                        },
-                                      ]
-                                    }
-                                  >
-                                    <a
-                                      onClick={[Function]}
-                                    >
-                                      <ActorAvatar
-                                        actor={
+                                          />
+                                        </Tooltip>
+                                      </ForwardRef(render)>,
+                                      "searchKey": "johnsmith@example.com john smith",
+                                      "value": "user:2",
+                                    },
+                                  ]
+                                }
+                                pageSize={5}
+                                placeholder="owners"
+                                removeSelected={true}
+                                required={false}
+                                rtl={false}
+                                scrollMenuIntoView={true}
+                                searchPromptText="Type to search"
+                                searchable={true}
+                                simpleValue={false}
+                                tabSelectsValue={true}
+                                trimFilter={true}
+                                value={
+                                  Array [
+                                    Object {
+                                      "actor": Object {
+                                        "id": "1",
+                                        "name": "Jane Bloggs",
+                                        "type": "user",
+                                      },
+                                      "label": <IdBadge
+                                        avatarSize={24}
+                                        hideEmail={true}
+                                        useLink={false}
+                                        user={
                                           Object {
+                                            "email": "janebloggs@example.com",
+                                            "flags": Object {
+                                              "newsletter_consent_prompt": false,
+                                            },
+                                            "hasPasswordAuth": true,
                                             "id": "1",
+                                            "isAuthenticated": true,
                                             "name": "Jane Bloggs",
-                                            "type": "user",
+                                            "options": Object {
+                                              "timezone": "UTC",
+                                            },
+                                            "user": Object {
+                                              "email": "janebloggs@example.com",
+                                              "id": "1",
+                                              "name": "Jane Bloggs",
+                                            },
+                                            "username": "foo@example.com",
                                           }
                                         }
-                                        size={28}
-                                      >
-                                        <UserAvatar
-                                          gravatar={false}
-                                          hasTooltip={true}
-                                          size={28}
-                                          user={
-                                            Object {
-                                              "email": "janebloggs@example.com",
-                                              "flags": Object {
-                                                "newsletter_consent_prompt": false,
-                                              },
-                                              "hasPasswordAuth": true,
+                                      />,
+                                      "searchKey": "janebloggs@example.com jane bloggs",
+                                      "value": "user:1",
+                                    },
+                                  ]
+                                }
+                                valueComponent={[Function]}
+                                valueKey="value"
+                              >
+                                <div
+                                  className="Select css-gv7e0o-StyledSelect-SelectOwners e1ynsgsr0 has-value is-clearable is-focused is-searchable Select--multi"
+                                >
+                                  <div
+                                    className="Select-control"
+                                    onKeyDown={[Function]}
+                                    onMouseDown={[Function]}
+                                    onTouchEnd={[Function]}
+                                    onTouchMove={[Function]}
+                                    onTouchStart={[Function]}
+                                  >
+                                    <div
+                                      className="Select-multi-value-wrapper"
+                                      id="react-select-5--value"
+                                    >
+                                      <ValueComponent
+                                        disabled={false}
+                                        id="react-select-5--value-0"
+                                        instancePrefix="react-select-5-"
+                                        key="value-0-user:1"
+                                        onClick={null}
+                                        onRemove={[Function]}
+                                        placeholder="owners"
+                                        value={
+                                          Object {
+                                            "actor": Object {
                                               "id": "1",
-                                              "isAuthenticated": true,
                                               "name": "Jane Bloggs",
-                                              "options": Object {
-                                                "timezone": "UTC",
-                                              },
-                                              "user": Object {
-                                                "email": "janebloggs@example.com",
+                                              "type": "user",
+                                            },
+                                            "label": <IdBadge
+                                              avatarSize={24}
+                                              hideEmail={true}
+                                              useLink={false}
+                                              user={
+                                                Object {
+                                                  "email": "janebloggs@example.com",
+                                                  "flags": Object {
+                                                    "newsletter_consent_prompt": false,
+                                                  },
+                                                  "hasPasswordAuth": true,
+                                                  "id": "1",
+                                                  "isAuthenticated": true,
+                                                  "name": "Jane Bloggs",
+                                                  "options": Object {
+                                                    "timezone": "UTC",
+                                                  },
+                                                  "user": Object {
+                                                    "email": "janebloggs@example.com",
+                                                    "id": "1",
+                                                    "name": "Jane Bloggs",
+                                                  },
+                                                  "username": "foo@example.com",
+                                                }
+                                              }
+                                            />,
+                                            "searchKey": "janebloggs@example.com jane bloggs",
+                                            "value": "user:1",
+                                          }
+                                        }
+                                        values={
+                                          Array [
+                                            Object {
+                                              "actor": Object {
                                                 "id": "1",
                                                 "name": "Jane Bloggs",
+                                                "type": "user",
                                               },
-                                              "username": "foo@example.com",
-                                            }
-                                          }
+                                              "label": <IdBadge
+                                                avatarSize={24}
+                                                hideEmail={true}
+                                                useLink={false}
+                                                user={
+                                                  Object {
+                                                    "email": "janebloggs@example.com",
+                                                    "flags": Object {
+                                                      "newsletter_consent_prompt": false,
+                                                    },
+                                                    "hasPasswordAuth": true,
+                                                    "id": "1",
+                                                    "isAuthenticated": true,
+                                                    "name": "Jane Bloggs",
+                                                    "options": Object {
+                                                      "timezone": "UTC",
+                                                    },
+                                                    "user": Object {
+                                                      "email": "janebloggs@example.com",
+                                                      "id": "1",
+                                                      "name": "Jane Bloggs",
+                                                    },
+                                                    "username": "foo@example.com",
+                                                  }
+                                                }
+                                              />,
+                                              "searchKey": "janebloggs@example.com jane bloggs",
+                                              "value": "user:1",
+                                            },
+                                          ]
+                                        }
+                                      >
+                                        <a
+                                          onClick={[Function]}
                                         >
-                                          <BaseAvatar
-                                            gravatarId="janebloggs@example.com"
-                                            hasTooltip={true}
-                                            letterId="janebloggs@example.com"
-                                            round={true}
+                                          <ActorAvatar
+                                            actor={
+                                              Object {
+                                                "id": "1",
+                                                "name": "Jane Bloggs",
+                                                "type": "user",
+                                              }
+                                            }
                                             size={28}
-                                            style={Object {}}
-                                            title="Jane Bloggs"
-                                            tooltip="Jane Bloggs (janebloggs@example.com)"
-                                            type="letter_avatar"
-                                            uploadId=""
-                                            uploadPath="avatar"
                                           >
-                                            <Tooltip
-                                              containerDisplayMode="inline-block"
-                                              disabled={false}
-                                              position="top"
-                                              title="Jane Bloggs (janebloggs@example.com)"
+                                            <UserAvatar
+                                              gravatar={false}
+                                              hasTooltip={true}
+                                              size={28}
+                                              user={
+                                                Object {
+                                                  "email": "janebloggs@example.com",
+                                                  "flags": Object {
+                                                    "newsletter_consent_prompt": false,
+                                                  },
+                                                  "hasPasswordAuth": true,
+                                                  "id": "1",
+                                                  "isAuthenticated": true,
+                                                  "name": "Jane Bloggs",
+                                                  "options": Object {
+                                                    "timezone": "UTC",
+                                                  },
+                                                  "user": Object {
+                                                    "email": "janebloggs@example.com",
+                                                    "id": "1",
+                                                    "name": "Jane Bloggs",
+                                                  },
+                                                  "username": "foo@example.com",
+                                                }
+                                              }
                                             >
-                                              <Manager>
-                                                <Reference>
-                                                  <InnerReference
-                                                    setReferenceNode={[Function]}
-                                                  >
-                                                    <Container
-                                                      aria-describedby="tooltip-123456"
-                                                      containerDisplayMode="inline-block"
-                                                      onBlur={[Function]}
-                                                      onFocus={[Function]}
-                                                      onMouseEnter={[Function]}
-                                                      onMouseLeave={[Function]}
-                                                    >
-                                                      <span
-                                                        aria-describedby="tooltip-123456"
-                                                        className="css-sce1yi-Container eowlwvy0"
-                                                        onBlur={[Function]}
-                                                        onFocus={[Function]}
-                                                        onMouseEnter={[Function]}
-                                                        onMouseLeave={[Function]}
+                                              <BaseAvatar
+                                                gravatarId="janebloggs@example.com"
+                                                hasTooltip={true}
+                                                letterId="janebloggs@example.com"
+                                                round={true}
+                                                size={28}
+                                                style={Object {}}
+                                                title="Jane Bloggs"
+                                                tooltip="Jane Bloggs (janebloggs@example.com)"
+                                                type="letter_avatar"
+                                                uploadId=""
+                                                uploadPath="avatar"
+                                              >
+                                                <Tooltip
+                                                  containerDisplayMode="inline-block"
+                                                  disabled={false}
+                                                  position="top"
+                                                  title="Jane Bloggs (janebloggs@example.com)"
+                                                >
+                                                  <Manager>
+                                                    <Reference>
+                                                      <InnerReference
+                                                        setReferenceNode={[Function]}
                                                       >
-                                                        <StyledBaseAvatar
-                                                          className="avatar"
-                                                          loaded={true}
-                                                          round={true}
-                                                          style={
-                                                            Object {
-                                                              "height": "28px",
-                                                              "width": "28px",
-                                                            }
-                                                          }
+                                                        <Container
+                                                          aria-describedby="tooltip-123456"
+                                                          containerDisplayMode="inline-block"
+                                                          onBlur={[Function]}
+                                                          onFocus={[Function]}
+                                                          onMouseEnter={[Function]}
+                                                          onMouseLeave={[Function]}
                                                         >
                                                           <span
-                                                            className="avatar css-1mqfg1n-StyledBaseAvatar e147uwb0"
-                                                            style={
-                                                              Object {
-                                                                "height": "28px",
-                                                                "width": "28px",
-                                                              }
-                                                            }
+                                                            aria-describedby="tooltip-123456"
+                                                            className="css-sce1yi-Container eowlwvy0"
+                                                            onBlur={[Function]}
+                                                            onFocus={[Function]}
+                                                            onMouseEnter={[Function]}
+                                                            onMouseLeave={[Function]}
                                                           >
-                                                            <LetterAvatar
-                                                              displayName="Jane Bloggs"
-                                                              identifier="janebloggs@example.com"
+                                                            <StyledBaseAvatar
+                                                              className="avatar"
+                                                              loaded={true}
                                                               round={true}
+                                                              style={
+                                                                Object {
+                                                                  "height": "28px",
+                                                                  "width": "28px",
+                                                                }
+                                                              }
                                                             >
-                                                              <Component
-                                                                className="css-1oxr9oh-LetterAvatar e12lgfev0"
-                                                                displayName="Jane Bloggs"
-                                                                identifier="janebloggs@example.com"
-                                                                round={true}
+                                                              <span
+                                                                className="avatar css-1mqfg1n-StyledBaseAvatar e147uwb0"
+                                                                style={
+                                                                  Object {
+                                                                    "height": "28px",
+                                                                    "width": "28px",
+                                                                  }
+                                                                }
                                                               >
-                                                                <svg
-                                                                  className="css-1oxr9oh-LetterAvatar e12lgfev0"
-                                                                  viewBox="0 0 120 120"
+                                                                <LetterAvatar
+                                                                  displayName="Jane Bloggs"
+                                                                  identifier="janebloggs@example.com"
+                                                                  round={true}
                                                                 >
-                                                                  <rect
-                                                                    fill="#4e3fb4"
-                                                                    height="120"
-                                                                    rx="15"
-                                                                    ry="15"
-                                                                    width="120"
-                                                                    x="0"
-                                                                    y="0"
-                                                                  />
-                                                                  <text
-                                                                    fill="#FFFFFF"
-                                                                    fontSize="65"
-                                                                    style={
-                                                                      Object {
-                                                                        "dominantBaseline": "central",
-                                                                      }
-                                                                    }
-                                                                    textAnchor="middle"
-                                                                    x="50%"
-                                                                    y="50%"
+                                                                  <Component
+                                                                    className="css-1oxr9oh-LetterAvatar e12lgfev0"
+                                                                    displayName="Jane Bloggs"
+                                                                    identifier="janebloggs@example.com"
+                                                                    round={true}
                                                                   >
-                                                                    JB
-                                                                  </text>
-                                                                </svg>
-                                                              </Component>
-                                                            </LetterAvatar>
+                                                                    <svg
+                                                                      className="css-1oxr9oh-LetterAvatar e12lgfev0"
+                                                                      viewBox="0 0 120 120"
+                                                                    >
+                                                                      <rect
+                                                                        fill="#4e3fb4"
+                                                                        height="120"
+                                                                        rx="15"
+                                                                        ry="15"
+                                                                        width="120"
+                                                                        x="0"
+                                                                        y="0"
+                                                                      />
+                                                                      <text
+                                                                        fill="#FFFFFF"
+                                                                        fontSize="65"
+                                                                        style={
+                                                                          Object {
+                                                                            "dominantBaseline": "central",
+                                                                          }
+                                                                        }
+                                                                        textAnchor="middle"
+                                                                        x="50%"
+                                                                        y="50%"
+                                                                      >
+                                                                        JB
+                                                                      </text>
+                                                                    </svg>
+                                                                  </Component>
+                                                                </LetterAvatar>
+                                                              </span>
+                                                            </StyledBaseAvatar>
                                                           </span>
-                                                        </StyledBaseAvatar>
-                                                      </span>
-                                                    </Container>
-                                                  </InnerReference>
-                                                </Reference>
-                                              </Manager>
-                                            </Tooltip>
-                                          </BaseAvatar>
-                                        </UserAvatar>
-                                      </ActorAvatar>
-                                    </a>
-                                  </ValueComponent>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-5--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns="react-select-5--backspace-remove-message"
-                                    className="Select-input"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
-                                  >
-                                    <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
-                                        }
-                                      }
-                                    >
-                                      <input
+                                                        </Container>
+                                                      </InnerReference>
+                                                    </Reference>
+                                                  </Manager>
+                                                </Tooltip>
+                                              </BaseAvatar>
+                                            </UserAvatar>
+                                          </ActorAvatar>
+                                        </a>
+                                      </ValueComponent>
+                                      <AutosizeInput
                                         aria-activedescendant="react-select-5--value"
                                         aria-expanded="false"
                                         aria-haspopup="false"
                                         aria-owns="react-select-5--backspace-remove-message"
+                                        className="Select-input"
+                                        injectStyles={true}
+                                        minWidth="5"
                                         onBlur={[Function]}
                                         onChange={[Function]}
                                         onFocus={[Function]}
                                         required={false}
                                         role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
                                         value=""
-                                      />
-                                      <div
-                                        style={
+                                      >
+                                        <div
+                                          className="Select-input"
+                                          style={
+                                            Object {
+                                              "display": "inline-block",
+                                            }
+                                          }
+                                        >
+                                          <input
+                                            aria-activedescendant="react-select-5--value"
+                                            aria-expanded="false"
+                                            aria-haspopup="false"
+                                            aria-owns="react-select-5--backspace-remove-message"
+                                            onBlur={[Function]}
+                                            onChange={[Function]}
+                                            onFocus={[Function]}
+                                            required={false}
+                                            role="combobox"
+                                            style={
+                                              Object {
+                                                "boxSizing": "content-box",
+                                                "width": "5px",
+                                              }
+                                            }
+                                            value=""
+                                          />
+                                          <div
+                                            style={
+                                              Object {
+                                                "height": 0,
+                                                "left": 0,
+                                                "overflow": "scroll",
+                                                "position": "absolute",
+                                                "top": 0,
+                                                "visibility": "hidden",
+                                                "whiteSpace": "pre",
+                                              }
+                                            }
+                                          />
+                                        </div>
+                                      </AutosizeInput>
+                                    </div>
+                                    <span
+                                      aria-live="assertive"
+                                      className="Select-aria-only"
+                                      id="react-select-5--backspace-remove-message"
+                                    >
+                                      Press backspace to remove [object Object]
+                                    </span>
+                                    <span
+                                      aria-label="Clear all"
+                                      className="Select-clear-zone"
+                                      onMouseDown={[Function]}
+                                      onTouchEnd={[Function]}
+                                      onTouchMove={[Function]}
+                                      onTouchStart={[Function]}
+                                      title="Clear all"
+                                    >
+                                      <span
+                                        className="Select-clear"
+                                        dangerouslySetInnerHTML={
                                           Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
+                                            "__html": "&times;",
                                           }
                                         }
                                       />
-                                    </div>
-                                  </AutosizeInput>
+                                    </span>
+                                    <span
+                                      className="Select-arrow-zone"
+                                      onMouseDown={[Function]}
+                                    >
+                                      <span
+                                        className="icon-arrow-down"
+                                      />
+                                    </span>
+                                  </div>
                                 </div>
-                                <span
-                                  aria-live="assertive"
-                                  className="Select-aria-only"
-                                  id="react-select-5--backspace-remove-message"
-                                >
-                                  Press backspace to remove [object Object]
-                                </span>
-                                <span
-                                  aria-label="Clear all"
-                                  className="Select-clear-zone"
-                                  onMouseDown={[Function]}
-                                  onTouchEnd={[Function]}
-                                  onTouchMove={[Function]}
-                                  onTouchStart={[Function]}
-                                  title="Clear all"
-                                >
-                                  <span
-                                    className="Select-clear"
-                                    dangerouslySetInnerHTML={
-                                      Object {
-                                        "__html": "&times;",
-                                      }
-                                    }
-                                  />
-                                </span>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </Async>
-                      </SelectPicker>
-                    </StyledSelect>
+                              </Select>
+                            </Async>
+                          </SelectPicker>
+                        </StyledSelect>
+                      </SelectControlLegacy>
+                    </ForwardRef(RefForwardedSelectControl)>
                   </SelectControl>
                 </ForwardRef(RefForwardedSelectControl)>
               </ForwardRef(MultiSelectControl)>
diff --git a/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap b/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap
index 18b6ec6dac..55199dd524 100644
--- a/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap
+++ b/tests/js/spec/views/admin/__snapshots__/adminQueue.spec.jsx.snap
@@ -233,6 +233,7 @@ exports[`AdminQueue render() renders 1`] = `
             ]
           }
           clearable={true}
+          deprecatedSelectControl={true}
           disabled={false}
           hideErrorMessage={false}
           multiple={false}
diff --git a/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap
index 7c9b008737..be4bd75ede 100644
--- a/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/projectInstall/__snapshots__/createProject.spec.jsx.snap
@@ -50,6 +50,7 @@ exports[`CreateProject should block if you have access to no teams 1`] = `
         <TeamSelectInput>
           <ForwardRef(RefForwardedSelectControl)
             clearable={false}
+            deprecatedSelectControl={true}
             name="select-team"
             onChange={[Function]}
             options={Array []}
@@ -1278,6 +1279,7 @@ exports[`CreateProject should deal with incorrect platform name if its provided
             >
               <ForwardRef(RefForwardedSelectControl)
                 clearable={false}
+                deprecatedSelectControl={true}
                 name="select-team"
                 onChange={[Function]}
                 options={Array []}
@@ -1286,35 +1288,25 @@ exports[`CreateProject should deal with incorrect platform name if its provided
               >
                 <SelectControl
                   clearable={false}
+                  deprecatedSelectControl={true}
                   forwardedRef={null}
-                  height={36}
-                  multiple={false}
                   name="select-team"
                   onChange={[Function]}
                   options={Array []}
                   placeholder="Select a Team"
                   value={0}
                 >
-                  <StyledSelect
-                    arrowRenderer={[Function]}
-                    backspaceRemoves={false}
+                  <ForwardRef(RefForwardedSelectControl)
                     clearable={false}
-                    deleteRemoves={false}
                     forwardedRef={null}
-                    height={36}
-                    multiple={false}
                     name="select-team"
                     onChange={[Function]}
                     options={Array []}
                     placeholder="Select a Team"
                     value={0}
                   >
-                    <SelectPicker
-                      arrowRenderer={[Function]}
-                      backspaceRemoves={false}
-                      className="css-140v9or-StyledSelect eho28m20"
+                    <SelectControlLegacy
                       clearable={false}
-                      deleteRemoves={false}
                       forwardedRef={null}
                       height={36}
                       multiple={false}
@@ -1324,148 +1316,179 @@ exports[`CreateProject should deal with incorrect platform name if its provided
                       placeholder="Select a Team"
                       value={0}
                     >
-                      <Select
+                      <StyledSelect
                         arrowRenderer={[Function]}
-                        autosize={true}
                         backspaceRemoves={false}
-                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                        className="css-140v9or-StyledSelect eho28m20"
-                        clearAllText="Clear all"
-                        clearRenderer={[Function]}
-                        clearValueText="Clear value"
                         clearable={false}
-                        closeOnSelect={true}
                         deleteRemoves={false}
-                        delimiter=","
-                        disabled={false}
-                        escapeClearsValue={true}
-                        filterOptions={[Function]}
+                        forwardedRef={null}
                         height={36}
-                        ignoreAccents={true}
-                        ignoreCase={true}
-                        inputProps={Object {}}
-                        isLoading={false}
-                        joinValues={false}
-                        labelKey="label"
-                        matchPos="any"
-                        matchProp="any"
-                        menuBuffer={0}
-                        menuRenderer={[Function]}
-                        multi={false}
                         multiple={false}
                         name="select-team"
-                        noResultsText="No results found"
-                        onBlurResetsInput={true}
                         onChange={[Function]}
-                        onCloseResetsInput={true}
-                        onSelectResetsInput={true}
-                        openOnClick={true}
-                        optionComponent={[Function]}
                         options={Array []}
-                        pageSize={5}
                         placeholder="Select a Team"
-                        removeSelected={true}
-                        required={false}
-                        rtl={false}
-                        scrollMenuIntoView={true}
-                        searchable={true}
-                        simpleValue={false}
-                        tabSelectsValue={true}
-                        trimFilter={true}
                         value={0}
-                        valueComponent={[Function]}
-                        valueKey="value"
                       >
-                        <div
-                          className="Select css-140v9or-StyledSelect eho28m20 is-searchable Select--single"
+                        <SelectPicker
+                          arrowRenderer={[Function]}
+                          backspaceRemoves={false}
+                          className="css-140v9or-StyledSelect e1ynsgsr0"
+                          clearable={false}
+                          deleteRemoves={false}
+                          forwardedRef={null}
+                          height={36}
+                          multiple={false}
+                          name="select-team"
+                          onChange={[Function]}
+                          options={Array []}
+                          placeholder="Select a Team"
+                          value={0}
                         >
-                          <div
-                            className="Select-control"
-                            onKeyDown={[Function]}
-                            onMouseDown={[Function]}
-                            onTouchEnd={[Function]}
-                            onTouchMove={[Function]}
-                            onTouchStart={[Function]}
+                          <Select
+                            arrowRenderer={[Function]}
+                            autosize={true}
+                            backspaceRemoves={false}
+                            backspaceToRemoveMessage="Press backspace to remove {label}"
+                            className="css-140v9or-StyledSelect e1ynsgsr0"
+                            clearAllText="Clear all"
+                            clearRenderer={[Function]}
+                            clearValueText="Clear value"
+                            clearable={false}
+                            closeOnSelect={true}
+                            deleteRemoves={false}
+                            delimiter=","
+                            disabled={false}
+                            escapeClearsValue={true}
+                            filterOptions={[Function]}
+                            height={36}
+                            ignoreAccents={true}
+                            ignoreCase={true}
+                            inputProps={Object {}}
+                            isLoading={false}
+                            joinValues={false}
+                            labelKey="label"
+                            matchPos="any"
+                            matchProp="any"
+                            menuBuffer={0}
+                            menuRenderer={[Function]}
+                            multi={false}
+                            multiple={false}
+                            name="select-team"
+                            noResultsText="No results found"
+                            onBlurResetsInput={true}
+                            onChange={[Function]}
+                            onCloseResetsInput={true}
+                            onSelectResetsInput={true}
+                            openOnClick={true}
+                            optionComponent={[Function]}
+                            options={Array []}
+                            pageSize={5}
+                            placeholder="Select a Team"
+                            removeSelected={true}
+                            required={false}
+                            rtl={false}
+                            scrollMenuIntoView={true}
+                            searchable={true}
+                            simpleValue={false}
+                            tabSelectsValue={true}
+                            trimFilter={true}
+                            value={0}
+                            valueComponent={[Function]}
+                            valueKey="value"
                           >
                             <div
-                              className="Select-multi-value-wrapper"
-                              id="react-select-5--value"
+                              className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                             >
                               <div
-                                className="Select-placeholder"
-                              >
-                                Select a Team
-                              </div>
-                              <AutosizeInput
-                                aria-activedescendant="react-select-5--value"
-                                aria-expanded="false"
-                                aria-haspopup="false"
-                                aria-owns=""
-                                className="Select-input"
-                                injectStyles={true}
-                                minWidth="5"
-                                onBlur={[Function]}
-                                onChange={[Function]}
-                                onFocus={[Function]}
-                                required={false}
-                                role="combobox"
-                                value=""
+                                className="Select-control"
+                                onKeyDown={[Function]}
+                                onMouseDown={[Function]}
+                                onTouchEnd={[Function]}
+                                onTouchMove={[Function]}
+                                onTouchStart={[Function]}
                               >
                                 <div
-                                  className="Select-input"
-                                  style={
-                                    Object {
-                                      "display": "inline-block",
-                                    }
-                                  }
+                                  className="Select-multi-value-wrapper"
+                                  id="react-select-5--value"
                                 >
-                                  <input
+                                  <div
+                                    className="Select-placeholder"
+                                  >
+                                    Select a Team
+                                  </div>
+                                  <AutosizeInput
                                     aria-activedescendant="react-select-5--value"
                                     aria-expanded="false"
                                     aria-haspopup="false"
                                     aria-owns=""
+                                    className="Select-input"
+                                    injectStyles={true}
+                                    minWidth="5"
                                     onBlur={[Function]}
                                     onChange={[Function]}
                                     onFocus={[Function]}
                                     required={false}
                                     role="combobox"
-                                    style={
-                                      Object {
-                                        "boxSizing": "content-box",
-                                        "width": "5px",
-                                      }
-                                    }
                                     value=""
-                                  />
-                                  <div
-                                    style={
-                                      Object {
-                                        "height": 0,
-                                        "left": 0,
-                                        "overflow": "scroll",
-                                        "position": "absolute",
-                                        "top": 0,
-                                        "visibility": "hidden",
-                                        "whiteSpace": "pre",
+                                  >
+                                    <div
+                                      className="Select-input"
+                                      style={
+                                        Object {
+                                          "display": "inline-block",
+                                        }
                                       }
-                                    }
-                                  />
+                                    >
+                                      <input
+                                        aria-activedescendant="react-select-5--value"
+                                        aria-expanded="false"
+                                        aria-haspopup="false"
+                                        aria-owns=""
+                                        onBlur={[Function]}
+                                        onChange={[Function]}
+                                        onFocus={[Function]}
+                                        required={false}
+                                        role="combobox"
+                                        style={
+                                          Object {
+                                            "boxSizing": "content-box",
+                                            "width": "5px",
+                                          }
+                                        }
+                                        value=""
+                                      />
+                                      <div
+                                        style={
+                                          Object {
+                                            "height": 0,
+                                            "left": 0,
+                                            "overflow": "scroll",
+                                            "position": "absolute",
+                                            "top": 0,
+                                            "visibility": "hidden",
+                                            "whiteSpace": "pre",
+                                          }
+                                        }
+                                      />
+                                    </div>
+                                  </AutosizeInput>
                                 </div>
-                              </AutosizeInput>
+                                <span
+                                  className="Select-arrow-zone"
+                                  onMouseDown={[Function]}
+                                >
+                                  <span
+                                    className="icon-arrow-down"
+                                  />
+                                </span>
+                              </div>
                             </div>
-                            <span
-                              className="Select-arrow-zone"
-                              onMouseDown={[Function]}
-                            >
-                              <span
-                                className="icon-arrow-down"
-                              />
-                            </span>
-                          </div>
-                        </div>
-                      </Select>
-                    </SelectPicker>
-                  </StyledSelect>
+                          </Select>
+                        </SelectPicker>
+                      </StyledSelect>
+                    </SelectControlLegacy>
+                  </ForwardRef(RefForwardedSelectControl)>
                 </SelectControl>
               </ForwardRef(RefForwardedSelectControl)>
               <Tooltip
@@ -2274,6 +2297,7 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
             >
               <ForwardRef(RefForwardedSelectControl)
                 clearable={false}
+                deprecatedSelectControl={true}
                 name="select-team"
                 onChange={[Function]}
                 options={Array []}
@@ -2282,35 +2306,25 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
               >
                 <SelectControl
                   clearable={false}
+                  deprecatedSelectControl={true}
                   forwardedRef={null}
-                  height={36}
-                  multiple={false}
                   name="select-team"
                   onChange={[Function]}
                   options={Array []}
                   placeholder="Select a Team"
                   value={0}
                 >
-                  <StyledSelect
-                    arrowRenderer={[Function]}
-                    backspaceRemoves={false}
+                  <ForwardRef(RefForwardedSelectControl)
                     clearable={false}
-                    deleteRemoves={false}
                     forwardedRef={null}
-                    height={36}
-                    multiple={false}
                     name="select-team"
                     onChange={[Function]}
                     options={Array []}
                     placeholder="Select a Team"
                     value={0}
                   >
-                    <SelectPicker
-                      arrowRenderer={[Function]}
-                      backspaceRemoves={false}
-                      className="css-140v9or-StyledSelect eho28m20"
+                    <SelectControlLegacy
                       clearable={false}
-                      deleteRemoves={false}
                       forwardedRef={null}
                       height={36}
                       multiple={false}
@@ -2320,148 +2334,179 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
                       placeholder="Select a Team"
                       value={0}
                     >
-                      <Select
+                      <StyledSelect
                         arrowRenderer={[Function]}
-                        autosize={true}
                         backspaceRemoves={false}
-                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                        className="css-140v9or-StyledSelect eho28m20"
-                        clearAllText="Clear all"
-                        clearRenderer={[Function]}
-                        clearValueText="Clear value"
                         clearable={false}
-                        closeOnSelect={true}
                         deleteRemoves={false}
-                        delimiter=","
-                        disabled={false}
-                        escapeClearsValue={true}
-                        filterOptions={[Function]}
+                        forwardedRef={null}
                         height={36}
-                        ignoreAccents={true}
-                        ignoreCase={true}
-                        inputProps={Object {}}
-                        isLoading={false}
-                        joinValues={false}
-                        labelKey="label"
-                        matchPos="any"
-                        matchProp="any"
-                        menuBuffer={0}
-                        menuRenderer={[Function]}
-                        multi={false}
                         multiple={false}
                         name="select-team"
-                        noResultsText="No results found"
-                        onBlurResetsInput={true}
                         onChange={[Function]}
-                        onCloseResetsInput={true}
-                        onSelectResetsInput={true}
-                        openOnClick={true}
-                        optionComponent={[Function]}
                         options={Array []}
-                        pageSize={5}
                         placeholder="Select a Team"
-                        removeSelected={true}
-                        required={false}
-                        rtl={false}
-                        scrollMenuIntoView={true}
-                        searchable={true}
-                        simpleValue={false}
-                        tabSelectsValue={true}
-                        trimFilter={true}
                         value={0}
-                        valueComponent={[Function]}
-                        valueKey="value"
                       >
-                        <div
-                          className="Select css-140v9or-StyledSelect eho28m20 is-searchable Select--single"
+                        <SelectPicker
+                          arrowRenderer={[Function]}
+                          backspaceRemoves={false}
+                          className="css-140v9or-StyledSelect e1ynsgsr0"
+                          clearable={false}
+                          deleteRemoves={false}
+                          forwardedRef={null}
+                          height={36}
+                          multiple={false}
+                          name="select-team"
+                          onChange={[Function]}
+                          options={Array []}
+                          placeholder="Select a Team"
+                          value={0}
                         >
-                          <div
-                            className="Select-control"
-                            onKeyDown={[Function]}
-                            onMouseDown={[Function]}
-                            onTouchEnd={[Function]}
-                            onTouchMove={[Function]}
-                            onTouchStart={[Function]}
+                          <Select
+                            arrowRenderer={[Function]}
+                            autosize={true}
+                            backspaceRemoves={false}
+                            backspaceToRemoveMessage="Press backspace to remove {label}"
+                            className="css-140v9or-StyledSelect e1ynsgsr0"
+                            clearAllText="Clear all"
+                            clearRenderer={[Function]}
+                            clearValueText="Clear value"
+                            clearable={false}
+                            closeOnSelect={true}
+                            deleteRemoves={false}
+                            delimiter=","
+                            disabled={false}
+                            escapeClearsValue={true}
+                            filterOptions={[Function]}
+                            height={36}
+                            ignoreAccents={true}
+                            ignoreCase={true}
+                            inputProps={Object {}}
+                            isLoading={false}
+                            joinValues={false}
+                            labelKey="label"
+                            matchPos="any"
+                            matchProp="any"
+                            menuBuffer={0}
+                            menuRenderer={[Function]}
+                            multi={false}
+                            multiple={false}
+                            name="select-team"
+                            noResultsText="No results found"
+                            onBlurResetsInput={true}
+                            onChange={[Function]}
+                            onCloseResetsInput={true}
+                            onSelectResetsInput={true}
+                            openOnClick={true}
+                            optionComponent={[Function]}
+                            options={Array []}
+                            pageSize={5}
+                            placeholder="Select a Team"
+                            removeSelected={true}
+                            required={false}
+                            rtl={false}
+                            scrollMenuIntoView={true}
+                            searchable={true}
+                            simpleValue={false}
+                            tabSelectsValue={true}
+                            trimFilter={true}
+                            value={0}
+                            valueComponent={[Function]}
+                            valueKey="value"
                           >
                             <div
-                              className="Select-multi-value-wrapper"
-                              id="react-select-4--value"
+                              className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                             >
                               <div
-                                className="Select-placeholder"
-                              >
-                                Select a Team
-                              </div>
-                              <AutosizeInput
-                                aria-activedescendant="react-select-4--value"
-                                aria-expanded="false"
-                                aria-haspopup="false"
-                                aria-owns=""
-                                className="Select-input"
-                                injectStyles={true}
-                                minWidth="5"
-                                onBlur={[Function]}
-                                onChange={[Function]}
-                                onFocus={[Function]}
-                                required={false}
-                                role="combobox"
-                                value=""
+                                className="Select-control"
+                                onKeyDown={[Function]}
+                                onMouseDown={[Function]}
+                                onTouchEnd={[Function]}
+                                onTouchMove={[Function]}
+                                onTouchStart={[Function]}
                               >
                                 <div
-                                  className="Select-input"
-                                  style={
-                                    Object {
-                                      "display": "inline-block",
-                                    }
-                                  }
+                                  className="Select-multi-value-wrapper"
+                                  id="react-select-4--value"
                                 >
-                                  <input
+                                  <div
+                                    className="Select-placeholder"
+                                  >
+                                    Select a Team
+                                  </div>
+                                  <AutosizeInput
                                     aria-activedescendant="react-select-4--value"
                                     aria-expanded="false"
                                     aria-haspopup="false"
                                     aria-owns=""
+                                    className="Select-input"
+                                    injectStyles={true}
+                                    minWidth="5"
                                     onBlur={[Function]}
                                     onChange={[Function]}
                                     onFocus={[Function]}
                                     required={false}
                                     role="combobox"
-                                    style={
-                                      Object {
-                                        "boxSizing": "content-box",
-                                        "width": "5px",
-                                      }
-                                    }
                                     value=""
-                                  />
-                                  <div
-                                    style={
-                                      Object {
-                                        "height": 0,
-                                        "left": 0,
-                                        "overflow": "scroll",
-                                        "position": "absolute",
-                                        "top": 0,
-                                        "visibility": "hidden",
-                                        "whiteSpace": "pre",
+                                  >
+                                    <div
+                                      className="Select-input"
+                                      style={
+                                        Object {
+                                          "display": "inline-block",
+                                        }
                                       }
-                                    }
-                                  />
+                                    >
+                                      <input
+                                        aria-activedescendant="react-select-4--value"
+                                        aria-expanded="false"
+                                        aria-haspopup="false"
+                                        aria-owns=""
+                                        onBlur={[Function]}
+                                        onChange={[Function]}
+                                        onFocus={[Function]}
+                                        required={false}
+                                        role="combobox"
+                                        style={
+                                          Object {
+                                            "boxSizing": "content-box",
+                                            "width": "5px",
+                                          }
+                                        }
+                                        value=""
+                                      />
+                                      <div
+                                        style={
+                                          Object {
+                                            "height": 0,
+                                            "left": 0,
+                                            "overflow": "scroll",
+                                            "position": "absolute",
+                                            "top": 0,
+                                            "visibility": "hidden",
+                                            "whiteSpace": "pre",
+                                          }
+                                        }
+                                      />
+                                    </div>
+                                  </AutosizeInput>
                                 </div>
-                              </AutosizeInput>
+                                <span
+                                  className="Select-arrow-zone"
+                                  onMouseDown={[Function]}
+                                >
+                                  <span
+                                    className="icon-arrow-down"
+                                  />
+                                </span>
+                              </div>
                             </div>
-                            <span
-                              className="Select-arrow-zone"
-                              onMouseDown={[Function]}
-                            >
-                              <span
-                                className="icon-arrow-down"
-                              />
-                            </span>
-                          </div>
-                        </div>
-                      </Select>
-                    </SelectPicker>
-                  </StyledSelect>
+                          </Select>
+                        </SelectPicker>
+                      </StyledSelect>
+                    </SelectControlLegacy>
+                  </ForwardRef(RefForwardedSelectControl)>
                 </SelectControl>
               </ForwardRef(RefForwardedSelectControl)>
               <Tooltip
@@ -3970,6 +4015,7 @@ exports[`CreateProject should fill in project name if its empty when platform is
             >
               <ForwardRef(RefForwardedSelectControl)
                 clearable={false}
+                deprecatedSelectControl={true}
                 name="select-team"
                 onChange={[Function]}
                 options={Array []}
@@ -3978,35 +4024,25 @@ exports[`CreateProject should fill in project name if its empty when platform is
               >
                 <SelectControl
                   clearable={false}
+                  deprecatedSelectControl={true}
                   forwardedRef={null}
-                  height={36}
-                  multiple={false}
                   name="select-team"
                   onChange={[Function]}
                   options={Array []}
                   placeholder="Select a Team"
                   value={0}
                 >
-                  <StyledSelect
-                    arrowRenderer={[Function]}
-                    backspaceRemoves={false}
+                  <ForwardRef(RefForwardedSelectControl)
                     clearable={false}
-                    deleteRemoves={false}
                     forwardedRef={null}
-                    height={36}
-                    multiple={false}
                     name="select-team"
                     onChange={[Function]}
                     options={Array []}
                     placeholder="Select a Team"
                     value={0}
                   >
-                    <SelectPicker
-                      arrowRenderer={[Function]}
-                      backspaceRemoves={false}
-                      className="css-140v9or-StyledSelect eho28m20"
+                    <SelectControlLegacy
                       clearable={false}
-                      deleteRemoves={false}
                       forwardedRef={null}
                       height={36}
                       multiple={false}
@@ -4016,148 +4052,179 @@ exports[`CreateProject should fill in project name if its empty when platform is
                       placeholder="Select a Team"
                       value={0}
                     >
-                      <Select
+                      <StyledSelect
                         arrowRenderer={[Function]}
-                        autosize={true}
                         backspaceRemoves={false}
-                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                        className="css-140v9or-StyledSelect eho28m20"
-                        clearAllText="Clear all"
-                        clearRenderer={[Function]}
-                        clearValueText="Clear value"
                         clearable={false}
-                        closeOnSelect={true}
                         deleteRemoves={false}
-                        delimiter=","
-                        disabled={false}
-                        escapeClearsValue={true}
-                        filterOptions={[Function]}
+                        forwardedRef={null}
                         height={36}
-                        ignoreAccents={true}
-                        ignoreCase={true}
-                        inputProps={Object {}}
-                        isLoading={false}
-                        joinValues={false}
-                        labelKey="label"
-                        matchPos="any"
-                        matchProp="any"
-                        menuBuffer={0}
-                        menuRenderer={[Function]}
-                        multi={false}
                         multiple={false}
                         name="select-team"
-                        noResultsText="No results found"
-                        onBlurResetsInput={true}
                         onChange={[Function]}
-                        onCloseResetsInput={true}
-                        onSelectResetsInput={true}
-                        openOnClick={true}
-                        optionComponent={[Function]}
                         options={Array []}
-                        pageSize={5}
                         placeholder="Select a Team"
-                        removeSelected={true}
-                        required={false}
-                        rtl={false}
-                        scrollMenuIntoView={true}
-                        searchable={true}
-                        simpleValue={false}
-                        tabSelectsValue={true}
-                        trimFilter={true}
                         value={0}
-                        valueComponent={[Function]}
-                        valueKey="value"
                       >
-                        <div
-                          className="Select css-140v9or-StyledSelect eho28m20 is-searchable Select--single"
+                        <SelectPicker
+                          arrowRenderer={[Function]}
+                          backspaceRemoves={false}
+                          className="css-140v9or-StyledSelect e1ynsgsr0"
+                          clearable={false}
+                          deleteRemoves={false}
+                          forwardedRef={null}
+                          height={36}
+                          multiple={false}
+                          name="select-team"
+                          onChange={[Function]}
+                          options={Array []}
+                          placeholder="Select a Team"
+                          value={0}
                         >
-                          <div
-                            className="Select-control"
-                            onKeyDown={[Function]}
-                            onMouseDown={[Function]}
-                            onTouchEnd={[Function]}
-                            onTouchMove={[Function]}
-                            onTouchStart={[Function]}
+                          <Select
+                            arrowRenderer={[Function]}
+                            autosize={true}
+                            backspaceRemoves={false}
+                            backspaceToRemoveMessage="Press backspace to remove {label}"
+                            className="css-140v9or-StyledSelect e1ynsgsr0"
+                            clearAllText="Clear all"
+                            clearRenderer={[Function]}
+                            clearValueText="Clear value"
+                            clearable={false}
+                            closeOnSelect={true}
+                            deleteRemoves={false}
+                            delimiter=","
+                            disabled={false}
+                            escapeClearsValue={true}
+                            filterOptions={[Function]}
+                            height={36}
+                            ignoreAccents={true}
+                            ignoreCase={true}
+                            inputProps={Object {}}
+                            isLoading={false}
+                            joinValues={false}
+                            labelKey="label"
+                            matchPos="any"
+                            matchProp="any"
+                            menuBuffer={0}
+                            menuRenderer={[Function]}
+                            multi={false}
+                            multiple={false}
+                            name="select-team"
+                            noResultsText="No results found"
+                            onBlurResetsInput={true}
+                            onChange={[Function]}
+                            onCloseResetsInput={true}
+                            onSelectResetsInput={true}
+                            openOnClick={true}
+                            optionComponent={[Function]}
+                            options={Array []}
+                            pageSize={5}
+                            placeholder="Select a Team"
+                            removeSelected={true}
+                            required={false}
+                            rtl={false}
+                            scrollMenuIntoView={true}
+                            searchable={true}
+                            simpleValue={false}
+                            tabSelectsValue={true}
+                            trimFilter={true}
+                            value={0}
+                            valueComponent={[Function]}
+                            valueKey="value"
                           >
                             <div
-                              className="Select-multi-value-wrapper"
-                              id="react-select-3--value"
+                              className="Select css-140v9or-StyledSelect e1ynsgsr0 is-searchable Select--single"
                             >
                               <div
-                                className="Select-placeholder"
-                              >
-                                Select a Team
-                              </div>
-                              <AutosizeInput
-                                aria-activedescendant="react-select-3--value"
-                                aria-expanded="false"
-                                aria-haspopup="false"
-                                aria-owns=""
-                                className="Select-input"
-                                injectStyles={true}
-                                minWidth="5"
-                                onBlur={[Function]}
-                                onChange={[Function]}
-                                onFocus={[Function]}
-                                required={false}
-                                role="combobox"
-                                value=""
+                                className="Select-control"
+                                onKeyDown={[Function]}
+                                onMouseDown={[Function]}
+                                onTouchEnd={[Function]}
+                                onTouchMove={[Function]}
+                                onTouchStart={[Function]}
                               >
                                 <div
-                                  className="Select-input"
-                                  style={
-                                    Object {
-                                      "display": "inline-block",
-                                    }
-                                  }
+                                  className="Select-multi-value-wrapper"
+                                  id="react-select-3--value"
                                 >
-                                  <input
+                                  <div
+                                    className="Select-placeholder"
+                                  >
+                                    Select a Team
+                                  </div>
+                                  <AutosizeInput
                                     aria-activedescendant="react-select-3--value"
                                     aria-expanded="false"
                                     aria-haspopup="false"
                                     aria-owns=""
+                                    className="Select-input"
+                                    injectStyles={true}
+                                    minWidth="5"
                                     onBlur={[Function]}
                                     onChange={[Function]}
                                     onFocus={[Function]}
                                     required={false}
                                     role="combobox"
-                                    style={
-                                      Object {
-                                        "boxSizing": "content-box",
-                                        "width": "5px",
-                                      }
-                                    }
                                     value=""
-                                  />
-                                  <div
-                                    style={
-                                      Object {
-                                        "height": 0,
-                                        "left": 0,
-                                        "overflow": "scroll",
-                                        "position": "absolute",
-                                        "top": 0,
-                                        "visibility": "hidden",
-                                        "whiteSpace": "pre",
+                                  >
+                                    <div
+                                      className="Select-input"
+                                      style={
+                                        Object {
+                                          "display": "inline-block",
+                                        }
                                       }
-                                    }
-                                  />
+                                    >
+                                      <input
+                                        aria-activedescendant="react-select-3--value"
+                                        aria-expanded="false"
+                                        aria-haspopup="false"
+                                        aria-owns=""
+                                        onBlur={[Function]}
+                                        onChange={[Function]}
+                                        onFocus={[Function]}
+                                        required={false}
+                                        role="combobox"
+                                        style={
+                                          Object {
+                                            "boxSizing": "content-box",
+                                            "width": "5px",
+                                          }
+                                        }
+                                        value=""
+                                      />
+                                      <div
+                                        style={
+                                          Object {
+                                            "height": 0,
+                                            "left": 0,
+                                            "overflow": "scroll",
+                                            "position": "absolute",
+                                            "top": 0,
+                                            "visibility": "hidden",
+                                            "whiteSpace": "pre",
+                                          }
+                                        }
+                                      />
+                                    </div>
+                                  </AutosizeInput>
                                 </div>
-                              </AutosizeInput>
+                                <span
+                                  className="Select-arrow-zone"
+                                  onMouseDown={[Function]}
+                                >
+                                  <span
+                                    className="icon-arrow-down"
+                                  />
+                                </span>
+                              </div>
                             </div>
-                            <span
-                              className="Select-arrow-zone"
-                              onMouseDown={[Function]}
-                            >
-                              <span
-                                className="icon-arrow-down"
-                              />
-                            </span>
-                          </div>
-                        </div>
-                      </Select>
-                    </SelectPicker>
-                  </StyledSelect>
+                          </Select>
+                        </SelectPicker>
+                      </StyledSelect>
+                    </SelectControlLegacy>
+                  </ForwardRef(RefForwardedSelectControl)>
                 </SelectControl>
               </ForwardRef(RefForwardedSelectControl)>
               <Tooltip
diff --git a/yarn.lock b/yarn.lock
index 2d722b8eb7..a3544e96c5 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -12179,10 +12179,10 @@ react-router@3.2.0:
     prop-types "^15.5.6"
     warning "^3.0.0"
 
-react-select@^1.2.1:
+"react-select-legacy@npm:react-select-legacy@1":
   version "1.3.0"
-  resolved "https://registry.yarnpkg.com/react-select/-/react-select-1.3.0.tgz#1828ad5bf7f3e42a835c7e2d8cb13b5c20714876"
-  integrity sha512-g/QAU1HZrzSfxkwMAo/wzi6/ezdWye302RGZevsATec07hI/iSxcpB1hejFIp7V63DJ8mwuign6KmB3VjdlinQ==
+  resolved "https://registry.yarnpkg.com/react-select-legacy/-/react-select-legacy-1.3.0.tgz#8ae0a19889022915f7a05aca0f2be3fcaf803714"
+  integrity sha512-77jriYHHDFP9i1Ke/Z2mge101Y15djobb9cmiKsN68rROjrsF2yR6erPmtvk9Dh2hNQmCI5bnZWYtIUij78ioQ==
   dependencies:
     classnames "^2.2.4"
     prop-types "^15.5.8"
