commit 2d89a07d80ff58b919774373db26133093a93a02
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 13 17:13:01 2013 -0700

    Create auth_user if it doesnt exist

diff --git a/src/sentry/migrations/0098_auto__add_user__chg_field_team_owner__chg_field_activity_user__chg_fie.py b/src/sentry/migrations/0098_auto__add_user__chg_field_team_owner__chg_field_activity_user__chg_fie.py
index 66c199441b..223cd62d2d 100644
--- a/src/sentry/migrations/0098_auto__add_user__chg_field_team_owner__chg_field_activity_user__chg_fie.py
+++ b/src/sentry/migrations/0098_auto__add_user__chg_field_team_owner__chg_field_activity_user__chg_fie.py
@@ -2,13 +2,48 @@
 import datetime
 from south.db import db
 from south.v2 import SchemaMigration
-from django.db import models
+from django.db import models, connections
 
 
 class Migration(SchemaMigration):
-
     def forwards(self, orm):
-        pass
+        if 'auth_user' in connections['default'].introspection.table_names():
+            return
+
+        self.create_auth(orm)
+
+    def create_auth(self, orm):
+        # Adding model 'User'
+        db.create_table('auth_user', (
+            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
+            ('password', self.gf('django.db.models.fields.CharField')(max_length=128)),
+            ('last_login', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('is_superuser', self.gf('django.db.models.fields.BooleanField')(default=False)),
+            ('username', self.gf('django.db.models.fields.CharField')(unique=True, max_length=30)),
+            ('first_name', self.gf('django.db.models.fields.CharField')(max_length=30, blank=True)),
+            ('last_name', self.gf('django.db.models.fields.CharField')(max_length=30, blank=True)),
+            ('email', self.gf('django.db.models.fields.EmailField')(max_length=75, blank=True)),
+            ('is_staff', self.gf('django.db.models.fields.BooleanField')(default=False)),
+            ('is_active', self.gf('django.db.models.fields.BooleanField')(default=True)),
+            ('date_joined', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+        ))
+        db.send_create_signal(u'sentry', ['User'])
+
+        # Adding M2M table for field groups on 'User'
+        db.create_table('auth_user_groups', (
+            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
+            ('user', models.ForeignKey(orm[u'sentry.user'], null=False)),
+            ('group', models.ForeignKey(orm[u'auth.group'], null=False))
+        ))
+        db.create_unique('auth_user_groups', ['user_id', 'group_id'])
+
+        # Adding M2M table for field user_permissions on 'User'
+        db.create_table('auth_user_user_permissions', (
+            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
+            ('user', models.ForeignKey(orm[u'sentry.user'], null=False)),
+            ('permission', models.ForeignKey(orm[u'auth.permission'], null=False))
+        ))
+        db.create_unique('auth_user_user_permissions', ['user_id', 'permission_id'])
 
     def backwards(self, orm):
         pass
