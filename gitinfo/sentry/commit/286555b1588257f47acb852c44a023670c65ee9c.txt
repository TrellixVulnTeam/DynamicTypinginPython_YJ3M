commit 286555b1588257f47acb852c44a023670c65ee9c
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Oct 23 16:27:00 2017 -0700

    fix(repos): Handle integrity error in repo creation
    
    fixes SENTRY-3BM

diff --git a/src/sentry/plugins/providers/repository.py b/src/sentry/plugins/providers/repository.py
index 90c6a5fe9a..48f4830a1f 100644
--- a/src/sentry/plugins/providers/repository.py
+++ b/src/sentry/plugins/providers/repository.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
+from django.db import IntegrityError, transaction
 from rest_framework.response import Response
 
 from sentry.api.serializers import serialize
@@ -65,14 +66,34 @@ class RepositoryProvider(ProviderMixin):
                 }, status=400
             )
 
-        repo = Repository.objects.create(
-            organization_id=organization.id,
-            name=result['name'],
-            external_id=result.get('external_id'),
-            url=result.get('url'),
-            config=result.get('config') or {},
-            provider=self.id,
-        )
+        try:
+            with transaction.atomic():
+                repo = Repository.objects.create(
+                    organization_id=organization.id,
+                    name=result['name'],
+                    external_id=result.get('external_id'),
+                    url=result.get('url'),
+                    config=result.get('config') or {},
+                    provider=self.id,
+                )
+        except IntegrityError:
+            # Try to delete webhook we just created
+            try:
+                repo = Repository(
+                    organization_id=organization.id,
+                    name=result['name'],
+                    external_id=result.get('external_id'),
+                    url=result.get('url'),
+                    config=result.get('config') or {},
+                    provider=self.id,
+                )
+                self.delete_repository(repo, actor=request.user)
+            except PluginError:
+                pass
+            return Response(
+                {'errors': {'__all__': 'A repository with that name already exists'}},
+                status=400,
+            )
 
         return Response(serialize(repo, request.user), status=201)
 
