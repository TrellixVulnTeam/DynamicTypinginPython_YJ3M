commit 85816a92cc34fbf3a982437ce7fa80c3cf132ddd
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Aug 7 13:54:33 2019 -0700

    ref: Use SnubaEvent instead of Event in project_group_index (#14272)
    
    Also updates tests to use store_event

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 81358325cb..6776a6c34f 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -15,7 +15,7 @@ from sentry.api.helpers.group_index import (
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.group import StreamGroupSerializer
 from sentry.models import Environment, Group, GroupStatus
-from sentry.models.event import Event
+from sentry.models.event import Event, SnubaEvent
 from sentry.models.savedsearch import DEFAULT_SAVED_SEARCH_QUERIES
 from sentry.signals import advanced_search
 from sentry.utils.apidocs import attach_scenarios, scenario
@@ -151,7 +151,7 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint, EnvironmentMixin):
                 except Group.DoesNotExist:
                     pass
                 else:
-                    matching_event = Event.objects.from_event_id(event_id, project.id)
+                    matching_event = SnubaEvent.objects.from_event_id(event_id, project.id)
                     if matching_event is not None:
                         Event.objects.bind_nodes([matching_event], 'data')
             elif matching_group is None:
diff --git a/tests/snuba/api/endpoints/test_project_group_index.py b/tests/snuba/api/endpoints/test_project_group_index.py
index c8f0151301..b538e9d774 100644
--- a/tests/snuba/api/endpoints/test_project_group_index.py
+++ b/tests/snuba/api/endpoints/test_project_group_index.py
@@ -72,23 +72,19 @@ class GroupListTest(APITestCase, SnubaTestCase):
         assert 'could not' in response.data['detail']
 
     def test_simple_pagination(self):
-        now = timezone.now()
-        group1 = self.create_group(
-            project=self.project,
-            last_seen=now - timedelta(seconds=2),
-        )
-        self.create_event(
-            group=group1,
-            datetime=now - timedelta(seconds=2),
-        )
-        group2 = self.create_group(
-            project=self.project,
-            last_seen=now - timedelta(seconds=1),
+        event1 = self.store_event(
+            data={
+                'fingerprint': ['put-me-in-group-1'],
+                'timestamp': (self.min_ago - timedelta(seconds=2)).isoformat()[:19]
+            },
+            project_id=self.project.id
         )
-        self.create_event(
-            stacktrace=[['foo.py']],
-            group=group2,
-            datetime=now - timedelta(seconds=1),
+        event2 = self.store_event(
+            data={
+                'fingerprint': ['put-me-in-group-2'],
+                'timestamp': (self.min_ago - timedelta(seconds=1)).isoformat()[:19]
+            },
+            project_id=self.project.id
         )
         self.login_as(user=self.user)
         response = self.client.get(
@@ -97,7 +93,7 @@ class GroupListTest(APITestCase, SnubaTestCase):
         )
         assert response.status_code == 200
         assert len(response.data) == 1
-        assert response.data[0]['id'] == six.text_type(group2.id)
+        assert response.data[0]['id'] == six.text_type(event2.group.id)
 
         links = self._parse_links(response['Link'])
 
@@ -107,7 +103,7 @@ class GroupListTest(APITestCase, SnubaTestCase):
         response = self.client.get(links['next']['href'], format='json')
         assert response.status_code == 200
         assert len(response.data) == 1
-        assert response.data[0]['id'] == six.text_type(group1.id)
+        assert response.data[0]['id'] == six.text_type(event1.group.id)
 
         links = self._parse_links(response['Link'])
 
@@ -205,7 +201,7 @@ class GroupListTest(APITestCase, SnubaTestCase):
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(event.group.id)
-        assert response.data[0]['matchingEventId'] == event.id
+        assert response.data[0]['matchingEventId'] == event.event_id
 
     def test_lookup_by_event_with_matching_environment(self):
         project = self.project
@@ -228,7 +224,7 @@ class GroupListTest(APITestCase, SnubaTestCase):
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(event.group.id)
-        assert response.data[0]['matchingEventId'] == event.id
+        assert response.data[0]['matchingEventId'] == event.event_id
         assert response.data[0]['matchingEventEnvironment'] == 'test'
 
     def test_lookup_by_event_id_with_whitespace(self):
