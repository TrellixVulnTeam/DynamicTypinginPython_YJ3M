commit dee8e84a7f36b8af632abb4cbac29b440ff06d02
Author: Ben Vinegar <ben@benv.ca>
Date:   Mon Sep 21 18:34:04 2015 -0700

    Add platform-specific urls, boilerplate

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 3c4972d0c1..0365595cd1 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -18,6 +18,7 @@ import ProjectDashboard from "./views/projectDashboard";
 import ProjectEvents from "./views/projectEvents";
 import ProjectDetails from "./views/projectDetails";
 import ProjectInstall from "./views/projectInstall";
+import ProjectInstallPlatform from "./views/projectInstall/platform";
 import ProjectReleases from "./views/projectReleases";
 import ReleaseAllEvents from "./views/releaseAllEvents";
 import ReleaseArtifacts from "./views/releaseArtifacts";
@@ -37,9 +38,13 @@ var routes = (
       <DefaultRoute name="organizationTeams" handler={OrganizationTeams} />
       <Route name="projectDetails" path=":projectId/" handler={ProjectDetails}>
         <DefaultRoute name="stream" handler={Stream} />
-        <Route name="projectInstall" path="install/" handler={ProjectInstall} />
+
+        <Route name="projectInstall" path="install/" handler={ProjectInstall}/>
+        <Route name="projectInstallPlatform" path="install/:platform/" handler={ProjectInstallPlatform}/>
+
         <Route name="projectDashboard" path="dashboard/" handler={ProjectDashboard} />
         <Route name="projectEvents" path="events/" handler={ProjectEvents} />
+
         <Route name="projectReleases" path="releases/" handler={ProjectReleases} />
         <Route name="releaseDetails" path="releases/:version/" handler={ReleaseDetails}>
           <DefaultRoute name="releaseNewEvents" handler={ReleaseNewEvents} />
diff --git a/src/sentry/static/sentry/app/views/projectInstall/index.jsx b/src/sentry/static/sentry/app/views/projectInstall/index.jsx
index 08f46296ee..252592082e 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/index.jsx
@@ -1,4 +1,5 @@
 import React from "react";
+import {Link} from "react-router";
 
 var ProjectInstall = React.createClass({
   contextTypes: {
@@ -6,22 +7,24 @@ var ProjectInstall = React.createClass({
   },
 
   render() {
+    let params = Object.assign({}, this.context.router.getCurrentParams());
+
     return (
       <div>
-        <h1>Configure your application to send events</h1>
+        <h1>Configure your application</h1>
 
         <p>Choose a language/platform:</p>
 
         <ul>
-          <li><a href="python/">Python</a></li>
-          <li><a href="javascript/">JavaScript</a></li>
-          <li><a href="nodejs/">Node.js</a></li>
-          <li><a href="php/">PHP</a></li>
-          <li><a href="ruby/">Ruby</a></li>
-          <li><a href="objective/-c">Objective-C</a></li>
-          <li><a href="java/">Java</a></li>
-          <li><a href="c-sharp/">C#</a></li>
-          <li><a href="go/">Go</a></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"python"})}>Python</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"javascript"})}>JavaScript</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"nodejs"})}>Node.js</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"php"})}>PHP</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"ruby"})}>Ruby</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"objective-c"})}>Objective-C</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"java"})}>Java</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"c-sharp"})}>C#</Link></li>
+          <li><Link to="projectInstallPlatform" params={Object.assign({}, params, {platform:"go"})}>Go</Link></li>
         </ul>
 
         <p>
@@ -29,7 +32,7 @@ var ProjectInstall = React.createClass({
           please visit see <a href="http://docs.getsentry.com">our in-depth documentation</a>.
         </p>
 
-        <button className="btn btn-primary">Skip this step</button>
+        <Link to="stream" params={params} className="btn btn-primary">Skip this step</Link>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
new file mode 100644
index 0000000000..ec8a58d734
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -0,0 +1,75 @@
+import React from "react";
+import {Link} from "react-router";
+
+var ProjectInstallPlatform = React.createClass({
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
+  static: {
+    platforms: {
+      python: {
+        display: "Python"
+      },
+      javascript: {
+        display: "Javascript"
+      },
+      nodejs: {
+        display: "Node JS"
+      },
+      php: {
+        display: "PHP"
+      },
+      ruby: {
+        display: "Ruby"
+      },
+      "objective-c": {
+        display: "Objective-C"
+      },
+      "java": {
+        display: "Java"
+      },
+      "c-sharp": {
+        display: "C#"
+      },
+      "go": {
+        display: "Go"
+      }
+    }
+  },
+
+  render() {
+    let params = this.context.router.getCurrentParams();
+    let {platform} = params;
+
+    return (
+      <div>
+        <h1>Configure {this.static.platforms[platform].display}</h1>
+
+        <p>For pairing Sentry up with Python you can use the Raven for Python (raven-python) library. It is the official standalone Python client for Sentry. It can be used with any modern Python interpreter be it CPython 2.x or 3.x, PyPy or Jython. It’s an Open Source project and available under a very liberal BSD license.</p>
+
+        <h2>Installation</h2>
+
+        <p>If you haven’t already, start by downloading Raven. The easiest way is with pip:</p>
+
+        <pre><code>pip install raven --upgrade</code></pre>
+
+
+        <h2>Configuration</h2>
+
+        <p>Settings are specified as part of the initialization of the client. The client is a class that can be instanciated with a specific configuration and all reporting can then happen from the instance of that object. Typically an instance is created somewhere globally and then imported as necessary. For getting started all you need is your DSN:</p>
+
+        <pre><code dangerouslySetInnerHTML={{__html:`
+from raven import Client
+client = Client('https://******@app.getsentry.com/15739
+        `}}/></pre>
+
+        <p>For advanced instructions, please consult our <a href="https://docs.getsentry.com/hosted/clients/python/">hosted documentation for Python</a>.</p>
+
+        <Link to="stream" params={params} className="btn btn-primary">Continue</Link>
+      </div>
+    );
+  }
+});
+
+export default ProjectInstallPlatform;
