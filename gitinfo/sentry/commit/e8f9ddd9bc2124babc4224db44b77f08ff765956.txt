commit e8f9ddd9bc2124babc4224db44b77f08ff765956
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Tue May 29 17:25:59 2018 -0700

    feat(integrations): Copy and pasted webhook files. (#8544)
    
    * Copy and pasted webhook files.
    
    * Got tests working.
    
    * Made sure the commits were created when a push event occured.
    
    * Fixed it so that it uses integrationrepoprovider.

diff --git a/src/sentry/integrations/bitbucket/urls.py b/src/sentry/integrations/bitbucket/urls.py
index a147b7c384..a103a2946e 100644
--- a/src/sentry/integrations/bitbucket/urls.py
+++ b/src/sentry/integrations/bitbucket/urls.py
@@ -4,9 +4,11 @@ from django.conf.urls import patterns, url
 
 from .descriptor import BitbucketDescriptorEndpoint
 from .installed import BitbucketInstalledEndpoint
-
+from .webhook import BitbucketWebhookEndpoint
 urlpatterns = patterns(
     '',
     url(r'^descriptor/$', BitbucketDescriptorEndpoint.as_view()),
     url(r'^installed/$', BitbucketInstalledEndpoint.as_view()),
+    url(r'^organizations/(?P<organization_id>[^\/]+)/webhook/$',
+        BitbucketWebhookEndpoint.as_view()),
 )
diff --git a/src/sentry/integrations/bitbucket/webhook.py b/src/sentry/integrations/bitbucket/webhook.py
index ca0dcce372..8e1f901308 100644
--- a/src/sentry/integrations/bitbucket/webhook.py
+++ b/src/sentry/integrations/bitbucket/webhook.py
@@ -1,6 +1,40 @@
 from __future__ import absolute_import
+
+import dateutil.parser
+import logging
+import six
 import re
 
+import ipaddress
+
+from django.db import IntegrityError, transaction
+from django.http import HttpResponse, Http404
+from django.utils.decorators import method_decorator
+from django.views.decorators.csrf import csrf_exempt
+from django.views.generic import View
+from django.utils import timezone
+from simplejson import JSONDecodeError
+from sentry.models import (Commit, CommitAuthor, Organization, Repository)
+from sentry.plugins.providers import IntegrationRepositoryProvider
+from sentry.utils import json
+
+logger = logging.getLogger('sentry.webhooks')
+
+# Bitbucket Cloud IP range:
+# https://confluence.atlassian.com/bitbucket/manage-webhooks-735643732.html#Managewebhooks-trigger_webhookTriggeringwebhooks
+BITBUCKET_IP_RANGE = ipaddress.ip_network(u'104.192.136.0/21')
+BITBUCKET_IPS = [
+    u'34.198.203.127',
+    u'34.198.178.64',
+    u'34.198.32.85'
+]
+PROVIDER_NAME = 'integrations:bitbucket'
+
+
+class Webhook(object):
+    def __call__(self, organization, event):
+        raise NotImplementedError
+
 
 def parse_raw_user_email(raw):
     # captures content between angle brackets
@@ -13,3 +47,135 @@ def parse_raw_user_email(raw):
 def parse_raw_user_name(raw):
     # captures content before angle bracket
     return raw.split('<')[0].strip()
+
+
+class PushEventWebhook(Webhook):
+    # https://confluence.atlassian.com/bitbucket/event-payloads-740262817.html#EventPayloads-Push
+    def __call__(self, organization, event):
+        authors = {}
+
+        try:
+            repo = Repository.objects.get(
+                organization_id=organization.id,
+                provider=PROVIDER_NAME,
+                external_id=six.text_type(event['repository']['uuid']),
+            )
+        except Repository.DoesNotExist:
+            raise Http404()
+
+        if repo.config.get('name') != event['repository']['full_name']:
+            repo.config['name'] = event['repository']['full_name']
+            repo.save()
+
+        for change in event['push']['changes']:
+            for commit in change.get('commits', []):
+                if IntegrationRepositoryProvider.should_ignore_commit(commit['message']):
+                    continue
+
+                author_email = parse_raw_user_email(commit['author']['raw'])
+
+                # TODO(dcramer): we need to deal with bad values here, but since
+                # its optional, lets just throw it out for now
+                if author_email is None or len(author_email) > 75:
+                    author = None
+                elif author_email not in authors:
+                    authors[author_email] = author = CommitAuthor.objects.get_or_create(
+                        organization_id=organization.id,
+                        email=author_email,
+                        defaults={'name': commit['author']['raw'].split('<')[0].strip()}
+                    )[0]
+                else:
+                    author = authors[author_email]
+                try:
+                    with transaction.atomic():
+
+                        Commit.objects.create(
+                            repository_id=repo.id,
+                            organization_id=organization.id,
+                            key=commit['hash'],
+                            message=commit['message'],
+                            author=author,
+                            date_added=dateutil.parser.parse(
+                                commit['date'],
+                            ).astimezone(timezone.utc),
+                        )
+
+                except IntegrityError:
+                    pass
+
+
+class BitbucketWebhookEndpoint(View):
+    _handlers = {
+        'repo:push': PushEventWebhook,
+    }
+
+    def get_handler(self, event_type):
+        return self._handlers.get(event_type)
+
+    @method_decorator(csrf_exempt)
+    def dispatch(self, request, *args, **kwargs):
+        if request.method != 'POST':
+            return HttpResponse(status=405)
+
+        return super(BitbucketWebhookEndpoint, self).dispatch(request, *args, **kwargs)
+
+    def post(self, request, organization_id):
+        try:
+            organization = Organization.objects.get_from_cache(
+                id=organization_id,
+            )
+        except Organization.DoesNotExist:
+            logger.error(
+                PROVIDER_NAME + '.webhook.invalid-organization',
+                extra={
+                    'organization_id': organization_id,
+                }
+            )
+            return HttpResponse(status=400)
+
+        body = six.binary_type(request.body)
+        if not body:
+            logger.error(
+                PROVIDER_NAME + '.webhook.missing-body', extra={
+                    'organization_id': organization.id,
+                }
+            )
+            return HttpResponse(status=400)
+
+        try:
+            handler = self.get_handler(request.META['HTTP_X_EVENT_KEY'])
+        except KeyError:
+            logger.error(
+                PROVIDER_NAME + '.webhook.missing-event', extra={
+                    'organization_id': organization.id,
+                }
+            )
+            return HttpResponse(status=400)
+
+        if not handler:
+            return HttpResponse(status=204)
+
+        address_string = six.text_type(request.META['REMOTE_ADDR'])
+        if not (ipaddress.ip_address(address_string) in BITBUCKET_IP_RANGE or
+                address_string in BITBUCKET_IPS):
+            logger.error(
+                PROVIDER_NAME + '.webhook.invalid-ip-range', extra={
+                    'organization_id': organization.id,
+                }
+            )
+            return HttpResponse(status=401)
+
+        try:
+            event = json.loads(body.decode('utf-8'))
+        except JSONDecodeError:
+            logger.error(
+                PROVIDER_NAME + '.webhook.invalid-json',
+                extra={
+                    'organization_id': organization.id,
+                },
+                exc_info=True
+            )
+            return HttpResponse(status=400)
+
+        handler()(organization, event)
+        return HttpResponse(status=204)
diff --git a/tests/sentry/integrations/bitbucket/test_webhook.py b/tests/sentry/integrations/bitbucket/test_webhook.py
new file mode 100644
index 0000000000..1d2ca046ea
--- /dev/null
+++ b/tests/sentry/integrations/bitbucket/test_webhook.py
@@ -0,0 +1,153 @@
+from __future__ import absolute_import
+
+from datetime import datetime
+from django.utils import timezone
+from sentry.models import Commit, CommitAuthor, Repository
+from sentry.testutils import APITestCase, TestCase
+
+
+from sentry.integrations.bitbucket.webhook import parse_raw_user_email, parse_raw_user_name, PROVIDER_NAME
+from .testutils import PUSH_EVENT_EXAMPLE
+
+BAD_IP = '109.111.111.10'
+BITBUCKET_IP_IN_RANGE = '104.192.143.10'
+BITBUCKET_IP = '34.198.178.64'
+
+
+class UtilityFunctionTest(TestCase):
+    def test_parse_raw_user_email(self):
+        assert parse_raw_user_email('Max Bittker <max@getsentry.com>') == 'max@getsentry.com'
+
+        assert parse_raw_user_email('Jess MacQueen@JessMacqueen') is None
+
+    def parse_raw_user_name(self):
+        assert parse_raw_user_name('Max Bittker <max@getsentry.com>') == 'Max Bittker'
+
+
+class WebhookTest(APITestCase):
+
+    def setUp(self):
+        super(WebhookTest, self).setUp()
+        project = self.project  # force creation
+        self.url = '/extensions/bitbucket/organizations/%s/webhook/' % project.organization_id
+
+    def test_get_request_fails(self):
+        response = self.client.get(self.url)
+        assert response.status_code == 405
+
+    def test_unregistered_event(self):
+        response = self.client.post(
+            path=self.url,
+            data=PUSH_EVENT_EXAMPLE,
+            content_type='application/json',
+            HTTP_X_EVENT_KEY='UnregisteredEvent',
+            REMOTE_ADDR=BITBUCKET_IP,
+        )
+
+        assert response.status_code == 204
+
+        response = self.client.post(
+            path=self.url,
+            data=PUSH_EVENT_EXAMPLE,
+            content_type='application/json',
+            HTTP_X_EVENT_KEY='UnregisteredEvent',
+            REMOTE_ADDR=BITBUCKET_IP_IN_RANGE,
+        )
+
+        assert response.status_code == 204
+
+    def test_invalid_signature_ip(self):
+        response = self.client.post(
+            path=self.url,
+            data=PUSH_EVENT_EXAMPLE,
+            content_type='application/json',
+            HTTP_X_EVENT_KEY='repo:push',
+            REMOTE_ADDR=BAD_IP,
+        )
+
+        assert response.status_code == 401
+
+
+class PushEventWebhookTest(APITestCase):
+    def setUp(self):
+        super(PushEventWebhookTest, self).setUp()
+        project = self.project  # force creation
+        self.url = '/extensions/bitbucket/organizations/%s/webhook/' % project.organization.id
+
+    def test_simple(self):
+        Repository.objects.create(
+            organization_id=self.project.organization.id,
+            external_id='{c78dfb25-7882-4550-97b1-4e0d38f32859}',
+            provider=PROVIDER_NAME,
+            name='maxbittker/newsdiffs',
+        )
+
+        response = self.client.post(
+            path=self.url,
+            data=PUSH_EVENT_EXAMPLE,
+            content_type='application/json',
+            HTTP_X_EVENT_KEY='repo:push',
+            REMOTE_ADDR=BITBUCKET_IP,
+        )
+
+        assert response.status_code == 204
+
+        commit_list = list(
+            Commit.objects.filter(
+                organization_id=self.project.organization_id,
+            ).select_related('author').order_by('-date_added')
+        )
+
+        assert len(commit_list) == 1
+
+        commit = commit_list[0]
+
+        assert commit.key == 'e0e377d186e4f0e937bdb487a23384fe002df649'
+        assert commit.message == u'README.md edited online with Bitbucket'
+        assert commit.author.name == u'Max Bittker'
+        assert commit.author.email == 'max@getsentry.com'
+        assert commit.author.external_id is None
+        assert commit.date_added == datetime(2017, 5, 24, 1, 5, 47, tzinfo=timezone.utc)
+
+    def test_anonymous_lookup(self):
+        Repository.objects.create(
+            organization_id=self.project.organization.id,
+            external_id='{c78dfb25-7882-4550-97b1-4e0d38f32859}',
+            provider=PROVIDER_NAME,
+            name='maxbittker/newsdiffs',
+        )
+
+        CommitAuthor.objects.create(
+            external_id='bitbucket:baxterthehacker',
+            organization_id=self.project.organization_id,
+            email='baxterthehacker@example.com',
+            name=u'baxterthehacker',
+        )
+
+        response = self.client.post(
+            path=self.url,
+            data=PUSH_EVENT_EXAMPLE,
+            content_type='application/json',
+            HTTP_X_EVENT_KEY='repo:push',
+            REMOTE_ADDR=BITBUCKET_IP,
+        )
+
+        assert response.status_code == 204
+
+        commit_list = list(
+            Commit.objects.filter(
+                organization_id=self.project.organization_id,
+            ).select_related('author').order_by('-date_added')
+        )
+
+        # should be skipping the #skipsentry commit
+        assert len(commit_list) == 1
+
+        commit = commit_list[0]
+
+        assert commit.key == 'e0e377d186e4f0e937bdb487a23384fe002df649'
+        assert commit.message == u'README.md edited online with Bitbucket'
+        assert commit.author.name == u'Max Bittker'
+        assert commit.author.email == 'max@getsentry.com'
+        assert commit.author.external_id is None
+        assert commit.date_added == datetime(2017, 5, 24, 1, 5, 47, tzinfo=timezone.utc)
diff --git a/tests/sentry/integrations/bitbucket/testutils.py b/tests/sentry/integrations/bitbucket/testutils.py
index 637a7ae778..8f1fc953a2 100644
--- a/tests/sentry/integrations/bitbucket/testutils.py
+++ b/tests/sentry/integrations/bitbucket/testutils.py
@@ -33,3 +33,241 @@ index 89821ce..9e09a8a 100644
 \ No newline at end of file
 +A twitter bot to when words are said by the NYT for the first time.sdfsdf
 \ No newline at end of file"""
+PUSH_EVENT_EXAMPLE = b"""{
+    "push": {
+        "changes": [
+            {
+                "links": {
+                    "html": {
+                        "href": "https://bitbucket.org/maxbittker/newsdiffs/branches/compare/e0e377d186e4f0e937bdb487a23384fe002df649..8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                    },
+                    "commits": {
+                        "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commits?include=e0e377d186e4f0e937bdb487a23384fe002df649&exclude=8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                    },
+                    "diff": {
+                        "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/diff/e0e377d186e4f0e937bdb487a23384fe002df649..8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                    }
+                },
+                "commits": [
+                    {
+                        "links": {
+                            "approve": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/e0e377d186e4f0e937bdb487a23384fe002df649/approve"
+                            },
+                            "statuses": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/e0e377d186e4f0e937bdb487a23384fe002df649/statuses"
+                            },
+                            "comments": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/e0e377d186e4f0e937bdb487a23384fe002df649/comments"
+                            },
+                            "self": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/e0e377d186e4f0e937bdb487a23384fe002df649"
+                            },
+                            "patch": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/patch/e0e377d186e4f0e937bdb487a23384fe002df649"
+                            },
+                            "html": {
+                                "href": "https://bitbucket.org/maxbittker/newsdiffs/commits/e0e377d186e4f0e937bdb487a23384fe002df649"
+                            },
+                            "diff": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/diff/e0e377d186e4f0e937bdb487a23384fe002df649"
+                            }
+                        },
+                        "date": "2017-05-24T01:05:47+00:00",
+                        "hash": "e0e377d186e4f0e937bdb487a23384fe002df649",
+                        "parents": [
+                            {
+                                "type": "commit",
+                                "links": {
+                                    "html": {
+                                        "href": "https://bitbucket.org/maxbittker/newsdiffs/commits/8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                                    },
+                                    "self": {
+                                        "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                                    }
+                                },
+                                "hash": "8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                            }
+                        ],
+                        "type": "commit",
+                        "message": "README.md edited online with Bitbucket",
+                        "author": {
+                            "type": "author",
+                            "user": {
+                                "type": "user",
+                                "display_name": "Max Bittker",
+                                "uuid": "{b128e0f6-196a-4dde-b72d-f42abc6dc239}",
+                                "username": "maxbittker",
+                                "links": {
+                                    "html": {
+                                        "href": "https://bitbucket.org/maxbittker/"
+                                    },
+                                    "avatar": {
+                                        "href": "https://bitbucket.org/account/maxbittker/avatar/32/"
+                                    },
+                                    "self": {
+                                        "href": "https://api.bitbucket.org/2.0/users/maxbittker"
+                                    }
+                                }
+                            },
+                            "raw": "Max Bittker <max@getsentry.com>"
+                        }
+                    }
+                ],
+                "old": {
+                    "type": "branch",
+                    "links": {
+                        "html": {
+                            "href": "https://bitbucket.org/maxbittker/newsdiffs/branch/master"
+                        },
+                        "commits": {
+                            "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commits/master"
+                        },
+                        "self": {
+                            "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/refs/branches/master"
+                        }
+                    },
+                    "target": {
+                        "links": {
+                            "html": {
+                                "href": "https://bitbucket.org/maxbittker/newsdiffs/commits/8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                            },
+                            "self": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                            }
+                        },
+                        "date": "2017-05-19T22:53:22+00:00",
+                        "hash": "8f5952f4dcffd7b311181d48eb0394b0cca21410",
+                        "parents": [
+                            {
+                                "type": "commit",
+                                "links": {
+                                    "html": {
+                                        "href": "https://bitbucket.org/maxbittker/newsdiffs/commits/1cdfa36e62e615cdc73a1d5fcff1c706965b186d"
+                                    },
+                                    "self": {
+                                        "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/1cdfa36e62e615cdc73a1d5fcff1c706965b186d"
+                                    }
+                                },
+                                "hash": "1cdfa36e62e615cdc73a1d5fcff1c706965b186d"
+                            }
+                        ],
+                        "type": "commit",
+                        "message": "README.md edited online with Bitbucket",
+                        "author": {
+                            "type": "author",
+                            "raw": "Max Bittker <max@getsentry.com>"
+                        }
+                    },
+                    "name": "master"
+                },
+                "truncated": false,
+                "new": {
+                    "type": "branch",
+                    "links": {
+                        "html": {
+                            "href": "https://bitbucket.org/maxbittker/newsdiffs/branch/master"
+                        },
+                        "commits": {
+                            "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commits/master"
+                        },
+                        "self": {
+                            "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/refs/branches/master"
+                        }
+                    },
+                    "target": {
+                        "links": {
+                            "html": {
+                                "href": "https://bitbucket.org/maxbittker/newsdiffs/commits/e0e377d186e4f0e937bdb487a23384fe002df649"
+                            },
+                            "self": {
+                                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/e0e377d186e4f0e937bdb487a23384fe002df649"
+                            }
+                        },
+                        "date": "2017-05-24T01:05:47+00:00",
+                        "hash": "e0e377d186e4f0e937bdb487a23384fe002df649",
+                        "parents": [
+                            {
+                                "type": "commit",
+                                "links": {
+                                    "html": {
+                                        "href": "https://bitbucket.org/maxbittker/newsdiffs/commits/8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                                    },
+                                    "self": {
+                                        "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs/commit/8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                                    }
+                                },
+                                "hash": "8f5952f4dcffd7b311181d48eb0394b0cca21410"
+                            }
+                        ],
+                        "type": "commit",
+                        "message": "README.md edited online with Bitbucket",
+                        "author": {
+                            "type": "author",
+                            "raw": "Max Bittker <max@getsentry.com>"
+                        }
+                    },
+                    "name": "master"
+                },
+                "created": false,
+                "forced": false,
+                "closed": false
+            }
+        ]
+    },
+    "repository": {
+        "links": {
+            "html": {
+                "href": "https://bitbucket.org/maxbittker/newsdiffs"
+            },
+            "avatar": {
+                "href": "https://bitbucket.org/maxbittker/newsdiffs/avatar/32/"
+            },
+            "self": {
+                "href": "https://api.bitbucket.org/2.0/repositories/maxbittker/newsdiffs"
+            }
+        },
+        "full_name": "maxbittker/newsdiffs",
+        "scm": "git",
+        "uuid": "{c78dfb25-7882-4550-97b1-4e0d38f32859}",
+        "type": "repository",
+        "is_private": false,
+        "owner": {
+            "type": "user",
+            "display_name": "Max Bittker",
+            "uuid": "{b128e0f6-196a-4dde-b72d-f42abc6dc239}",
+            "username": "maxbittker",
+            "links": {
+                "html": {
+                    "href": "https://bitbucket.org/maxbittker/"
+                },
+                "avatar": {
+                    "href": "https://bitbucket.org/account/maxbittker/avatar/32/"
+                },
+                "self": {
+                    "href": "https://api.bitbucket.org/2.0/users/maxbittker"
+                }
+            }
+        },
+        "name": "newsdiffs",
+        "website": ""
+    },
+    "actor": {
+        "type": "user",
+        "display_name": "Max Bittker",
+        "uuid": "{b128e0f6-196a-4dde-b72d-f42abc6dc239}",
+        "username": "maxbittker",
+        "links": {
+            "html": {
+                "href": "https://bitbucket.org/maxbittker/"
+            },
+            "avatar": {
+                "href": "https://bitbucket.org/account/maxbittker/avatar/32/"
+            },
+            "self": {
+                "href": "https://api.bitbucket.org/2.0/users/maxbittker"
+            }
+        }
+    }
+}
+"""
