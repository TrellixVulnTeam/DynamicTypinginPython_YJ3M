commit f7970e568e0e2ff4d854866f26677433ae65e03f
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Dec 19 17:16:20 2012 -0800

    Add plugin to automatically tag available interfaces in events

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index a2af1319ed..5257b2d7d1 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -149,6 +149,7 @@ INSTALLED_APPS = (
     'kombu.transport.django',
     'raven.contrib.django',
     'sentry',
+    'sentry.plugins.sentry_interface_types',
     'sentry.plugins.sentry_mail',
     'sentry.plugins.sentry_servers',
     'sentry.plugins.sentry_urls',
diff --git a/src/sentry/plugins/sentry_interface_types/__init__.py b/src/sentry/plugins/sentry_interface_types/__init__.py
new file mode 100644
index 0000000000..7f7d4e59fc
--- /dev/null
+++ b/src/sentry/plugins/sentry_interface_types/__init__.py
@@ -0,0 +1,7 @@
+"""
+sentry.plugins.sentry_interface_types
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
diff --git a/src/sentry/plugins/sentry_interface_types/models.py b/src/sentry/plugins/sentry_interface_types/models.py
new file mode 100644
index 0000000000..b27cdec06b
--- /dev/null
+++ b/src/sentry/plugins/sentry_interface_types/models.py
@@ -0,0 +1,28 @@
+"""
+sentry.plugins.sentry_interface_types.models
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+import sentry
+
+from sentry.plugins import register
+from sentry.plugins.bases.tag import TagPlugin
+
+
+class InterfaceTypePlugin(TagPlugin):
+    """
+    Automatically adds the 'interface_type' tag from events containing referencing
+    the class name of each interface (e.g. Http, Stacktrace, Exception).
+    """
+    descrption = __doc__
+    version = sentry.VERSION
+    author = "Sentry Team"
+    author_url = "https://github.com/getsentry/sentry"
+    tag = 'interface_type'
+
+    def get_tag_values(self, event):
+        return [i.rsplit('.', 1)[-1] for i in event.interfaces.iterkeys()]
+
+register(InterfaceTypePlugin)
