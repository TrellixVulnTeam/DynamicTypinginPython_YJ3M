commit b9c47baa5df2c88c819edac0b8264e9e1cfd3a8d
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 17 16:06:55 2016 -0700

    Improve new stack rendering
    
    - Handle chained exception padding
    - Add callout for "no information available" for single frame stacktraces (such as window.onerror + inline javascript errors)
    
    /cc @getsentry/team

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
index c69f645c51..8229864be4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
@@ -17,7 +17,7 @@ const ExceptionContent = React.createClass({
     let stackView = this.props.view;
     let children = this.props.values.map((exc, excIdx) => {
       return (
-        <div key={excIdx}>
+        <div key={excIdx} className="exception">
           <h5 style={{marginBottom: 5}}>
             <span>{exc.type}</span>
           </h5>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index b8973d4212..1ecc2cc79d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -26,6 +26,7 @@ const Frame = React.createClass({
     nextFrameInApp: React.PropTypes.bool,
     platform: React.PropTypes.string,
     isExpanded: React.PropTypes.bool,
+    emptySourceNotation: React.PropTypes.bool,
   },
 
   mixins: [
@@ -38,7 +39,8 @@ const Frame = React.createClass({
 
   getDefaultProps() {
     return {
-      isExpanded: false
+      isExpanded: false,
+      emptySourceNotation: false
     };
   },
 
@@ -68,7 +70,11 @@ const Frame = React.createClass({
   },
 
   isExpandable() {
-    return this.hasContextSource() || this.hasContextVars();
+    return (
+      this.props.emptySourceNotation
+      || this.hasContextSource()
+      || this.hasContextVars()
+    );
   },
 
   renderOriginalSourceInfo() {
@@ -182,6 +188,13 @@ const Frame = React.createClass({
           }
         </ol>
       );
+    } else if (this.props.emptySourceNotation) {
+      context = (
+        <div className="empty-context">
+          <span className="icon icon-exclamation" />
+          <p>{t('No additional details are available for this frame.')}</p>
+        </div>
+      );
     }
     return context;
   },
@@ -203,7 +216,7 @@ const Frame = React.createClass({
   renderDefaultLine() {
     return (
       <StrictClick onClick={this.isExpandable() ? this.toggleContext : null}>
-        <p>{this.renderDefaultTitle()}</p>
+        <div className="title">{this.renderDefaultTitle()}</div>
       </StrictClick>
     );
   },
@@ -212,7 +225,7 @@ const Frame = React.createClass({
     let data = this.props.data;
     return (
       <StrictClick onClick={this.isExpandable() ? this.toggleContext : null}>
-        <p className="as-table">
+        <div className="title as-table">
           {defined(data.package)
             ? (
               <span className="package" title={data.package}>
@@ -234,7 +247,7 @@ const Frame = React.createClass({
                 {data.lineNo ? ':' + data.lineNo : ''}</span>}
             {this.renderExpander()}
           </span>
-        </p>
+        </div>
       </StrictClick>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index d1dc4baf72..cb4e4431dc 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -80,6 +80,7 @@ const StacktraceContent = React.createClass({
             key={frameIdx}
             data={frame}
             isExpanded={lastFrameIdx === frameIdx}
+            emptySourceNotation={lastFrameIdx === frameIdx && frameIdx === 0}
             nextFrameInApp={nextFrame && nextFrame.inApp}
             platform={this.props.platform} />
         );
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 4508ff70da..f099581ce6 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -861,7 +861,7 @@ div.traceback > ul {
 */
 
 .exc-message {
-  margin: 15px 0;
+  margin: 15px 0 0;
   word-wrap: break-word;
   white-space: pre-wrap;
   color: @gray-darker;
@@ -883,6 +883,21 @@ div.traceback > ul {
   margin-right: -21px;
 }
 
+.exception {
+  border-top: 1px solid @trim;
+  margin: 0 -20px;
+  padding: 15px 20px 0;
+
+  &:first-child {
+    border-top: 0;
+    padding-top: 0;
+  }
+
+  .traceback {
+    margin-top: 15px;
+  }
+}
+
 .traceback {
   &.no-exception {
     margin-top: -20px;
@@ -909,18 +924,18 @@ div.traceback > ul {
       font-size: 22px;
     }
 
-    &.is-expandable p {
+    &.is-expandable .title {
       cursor: pointer;
       &:hover {
         background: lighten(@blue-light, 25);
       }
     }
 
-    &.system-frame.is-expandable p:hover {
+    &.system-frame.is-expandable .title:hover {
       background: darken(@white-dark, 5);
     }
 
-    p {
+    .title {
       padding: 8px 20px;
       font-size: 13px;
       margin: 0;
@@ -944,11 +959,11 @@ div.traceback > ul {
       }
     }
 
-    &.system-frame p {
+    &.system-frame .title {
       background: @white-dark;
     }
 
-    p.as-table {
+    .title.as-table {
       display: flex;
       align-items: baseline;
       width: 100%;
@@ -1061,6 +1076,22 @@ div.traceback > ul {
       color: inherit;
     }
 
+    .empty-context {
+      padding: 20px;
+      color: @gray;
+
+      p {
+        display: inline-block;
+        margin-bottom: 0;
+      }
+
+      .icon {
+        opacity: .45;
+        margin-right: 10px;
+        font-size: 0.85em;
+      }
+    }
+
     .context {
       display: none;
       background: #fff;
@@ -1306,7 +1337,7 @@ div.traceback > ul {
       font-size: 22px;
     }
 
-    p {
+    .title {
       font-size: 12px;
       margin-bottom: 12px;
       line-height: 1.4;
@@ -1418,7 +1449,7 @@ div.traceback > ul {
 
     &.expanded {
 
-      > p {
+      > .title {
         color: #000;
       }
 
