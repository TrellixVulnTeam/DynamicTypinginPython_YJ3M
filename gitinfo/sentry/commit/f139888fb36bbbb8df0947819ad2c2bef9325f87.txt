commit f139888fb36bbbb8df0947819ad2c2bef9325f87
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Wed Jan 18 16:21:50 2017 +0100

    Switch from camelcase to underscore for memory/storage (#4782)

diff --git a/src/sentry/static/sentry/app/components/events/contexts/device.jsx b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
index 47d16fea18..eb0d6706ef 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
@@ -9,28 +9,28 @@ const DeviceContextType = React.createClass({
     data: React.PropTypes.object.isRequired,
   },
 
-  formatMemory(memorySize, freeMemory, usableMemory) {
-    if (!Number.isInteger(memorySize) || memorySize <= 0 ||
-       !Number.isInteger(freeMemory) || freeMemory <= 0 ||
-       !Number.isInteger(usableMemory) || usableMemory <= 0) {
+  formatMemory(memory_size, free_memory, usable_memory) {
+    if (!Number.isInteger(memory_size) || memory_size <= 0 ||
+       !Number.isInteger(free_memory) || free_memory <= 0 ||
+       !Number.isInteger(usable_memory) || usable_memory <= 0) {
       return null;
     }
-    return `Total: ${formatBytes(memorySize)} / Usable: ${formatBytes(usableMemory)} / Free: ${formatBytes(freeMemory)}`;
+    return `Total: ${formatBytes(memory_size)} / Usable: ${formatBytes(usable_memory)} / Free: ${formatBytes(free_memory)}`;
   },
 
-  formatStorage(storageSize) {
-    if (!Number.isInteger(storageSize) || storageSize <= 0)
+  formatStorage(storage_size) {
+    if (!Number.isInteger(storage_size) || storage_size <= 0)
       return null;
 
-    return `${formatBytes(storageSize)}`;
+    return `${formatBytes(storage_size)}`;
   },
 
   render() {
     let {name, family, model, model_id, arch, battery_level, orientation,
-      simulator, memorySize, freeMemory, usableMemory, storageSize,
+      simulator, memory_size, free_memory, usable_memory, storage_size,
       ...data} = this.props.data;
-      let memory = this.formatMemory(memorySize, freeMemory, usableMemory);
-      let storage = this.formatStorage(storageSize);
+      let memory = this.formatMemory(memory_size, free_memory, usable_memory);
+      let storage = this.formatStorage(storage_size);
     return (
       <ContextBlock
         data={data}
