commit 5daa6dbc7914774b425fd3092dd68f4e2417de55
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Nov 8 12:02:45 2018 -0800

    feat(event search): Add support for quoted keys

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index c03852d93e..71e0817152 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -19,10 +19,13 @@ basic_filter    = search_key sep search_value
 # filter specifically for the timestamp
 time_filter     = "timestamp" operator date_format
 
-search_key      = ~r"[a-z]*\.?[a-z]*"
+search_key      = key / quoted_key
 search_value    = quoted_value / value
 value           = ~r"\S*"
 quoted_value    = ~r"\"(.*)\""s
+key             = ~r"[a-zA-Z0-9_\.-]+"
+# only allow colons in quoted keys
+quoted_key      = ~r"\"([a-zA-Z0-9_\.:-]+)\""
 
 date_format    = ~r"\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d{1,6})?)?"
 
@@ -184,7 +187,7 @@ class SearchVisitor(NodeVisitor):
         )
 
     def visit_search_key(self, node, children):
-        return node.text
+        return children[0]
 
     def visit_search_value(self, node, children):
         return children[0]
@@ -192,9 +195,15 @@ class SearchVisitor(NodeVisitor):
     def visit_value(self, node, children):
         return node.text
 
+    def visit_key(self, node, children):
+        return node.text
+
     def visit_quoted_value(self, node, children):
         return node.match.groups()[0]
 
+    def visit_quoted_key(self, node, children):
+        return node.match.groups()[0]
+
     def generic_visit(self, node, children):
         return children or node
 
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index e9ba884ed1..7301ebfd26 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -107,6 +107,15 @@ class EventSearchTest(TestCase):
             ),
         ]
 
+    def test_parse_search_query_quoted_key(self):
+        assert parse_search_query('"hi:there":value') == [
+            SearchFilter(
+                key=SearchKey(name='hi:there'),
+                operator='=',
+                value=SearchValue(raw_value='value', type='string'),
+            ),
+        ]
+
     def test_parse_search_query_weird_values(self):
         # quotes within quotes
         assert parse_search_query('release:"a"thing""') == [
