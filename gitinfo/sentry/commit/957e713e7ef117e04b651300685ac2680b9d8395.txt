commit 957e713e7ef117e04b651300685ac2680b9d8395
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jan 29 13:35:13 2019 -0800

    feat(discover): Update Discover links for Sentry 10 (#11773)
    
    Update links to group and event from Discover results for Sentry 10
    users.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index bf00411098..e037558119 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -8,6 +8,7 @@ import Link from 'app/components/link';
 import Tooltip from 'app/components/tooltip';
 import Panel from 'app/components/panels/panel';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
+import withOrganization from 'app/utils/withOrganization';
 
 import {getDisplayValue, getDisplayText} from './utils';
 
@@ -25,18 +26,15 @@ const OTHER_ELEMENTS_HEIGHT = 70; // pagination buttons, query summary
  * Renders results in a table as well as a query summary (timing, rows returned)
  * from any Snuba result
  */
-export default class ResultTable extends React.Component {
+class ResultTable extends React.Component {
   static propTypes = {
+    organization: SentryTypes.Organization.isRequired,
     data: PropTypes.object.isRequired,
     query: PropTypes.object.isRequired,
     height: PropTypes.number,
     width: PropTypes.number,
   };
 
-  static contextTypes = {
-    organization: SentryTypes.Organization,
-  };
-
   componentDidUpdate(prevProps) {
     if (this.props.data.meta !== prevProps.data.meta) {
       this.grid.recomputeGridSize();
@@ -86,14 +84,22 @@ export default class ResultTable extends React.Component {
     );
   };
 
+  hasSentry10 = () => {
+    return new Set(this.props.organization.features).has('sentry10');
+  };
+
   getEventLink = event => {
-    const {slug, projects} = this.context.organization;
+    const {slug, projects} = this.props.organization;
     const projectSlug = projects.find(project => project.id === `${event['project.id']}`)
       .slug;
 
+    const basePath = this.hasSentry10()
+      ? `/organizations/${slug}/projects/${projectSlug}/`
+      : `/${slug}/${projectSlug}/`;
+
     return (
       <Tooltip title={t('Open event')}>
-        <Link href={`/${slug}/${projectSlug}/events/${event.id}/`} target="_blank">
+        <Link href={`${basePath}events/${event.id}/`} target="_blank">
           {event.id}
         </Link>
       </Tooltip>
@@ -101,13 +107,17 @@ export default class ResultTable extends React.Component {
   };
 
   getIssueLink = event => {
-    const {slug, projects} = this.context.organization;
+    const {slug, projects} = this.props.organization;
     const projectSlug = projects.find(project => project.id === `${event['project.id']}`)
       .slug;
 
+    const basePath = this.hasSentry10()
+      ? `/organizations/${slug}/`
+      : `/${slug}/${projectSlug}/`;
+
     return (
       <Tooltip title={t('Open issue')}>
-        <Link to={`/${slug}/${projectSlug}/issues/${event['issue.id']}`} target="_blank">
+        <Link to={`${basePath}issues/${event['issue.id']}`} target="_blank">
           {event['issue.id']}
         </Link>
       </Tooltip>
@@ -290,6 +300,9 @@ export default class ResultTable extends React.Component {
   }
 }
 
+export {ResultTable};
+export default withOrganization(ResultTable);
+
 const Grid = styled(({visibleRows, ...props}) => <div {...props} />)`
   height: ${p =>
     p.visibleRows * TABLE_ROW_HEIGHT_WITH_BORDER +
diff --git a/tests/js/spec/views/organizationDiscover/result/table.spec.jsx b/tests/js/spec/views/organizationDiscover/result/table.spec.jsx
index 27fb8d3994..99048a7564 100644
--- a/tests/js/spec/views/organizationDiscover/result/table.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/result/table.spec.jsx
@@ -1,26 +1,22 @@
 import React from 'react';
 import {shallow, render} from 'enzyme';
 
-import ResultTable from 'app/views/organizationDiscover/result/table';
+import {ResultTable} from 'app/views/organizationDiscover/result/table';
 
 describe('ResultTable', function() {
   let wrapper;
   beforeEach(function() {
     wrapper = shallow(
       <ResultTable
+        organization={TestStubs.Organization({
+          projects: [TestStubs.Project({id: '1'})],
+        })}
         query={{aggregations: [], fields: ['id', 'project.id']}}
         data={{
           data: [{id: '111', 'project.id': 1}],
           meta: [{name: 'id', type: 'string'}, {name: 'project.id', type: 'number'}],
         }}
-      />,
-      {
-        context: {
-          organization: TestStubs.Organization({
-            projects: [TestStubs.Project({id: '1'})],
-          }),
-        },
-      }
+      />
     );
     const mockCanvas = {
       getContext: () => ({
