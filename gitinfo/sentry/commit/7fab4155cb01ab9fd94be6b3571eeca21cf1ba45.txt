commit 7fab4155cb01ab9fd94be6b3571eeca21cf1ba45
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Sep 8 20:28:43 2015 -0700

    Add endpoint for /events/oldest/
    
    Refs GH-1925

diff --git a/src/sentry/api/endpoints/group_events_oldest.py b/src/sentry/api/endpoints/group_events_oldest.py
new file mode 100644
index 0000000000..da17292e4c
--- /dev/null
+++ b/src/sentry/api/endpoints/group_events_oldest.py
@@ -0,0 +1,42 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api import client
+from sentry.api.base import DocSection
+from sentry.api.bases.group import GroupEndpoint
+from sentry.models import Group
+from sentry.utils.apidocs import scenario, attach_scenarios
+
+
+@scenario('GetOldestGroupSample')
+def get_oldest_group_sample_scenario(runner):
+    project = runner.default_project
+    group = Group.objects.filter(project=project).last()
+    runner.request(
+        method='GET',
+        path='/groups/%s/events/oldest/' % group.id,
+    )
+
+
+class GroupEventsOldestEndpoint(GroupEndpoint):
+    doc_section = DocSection.EVENTS
+
+    @attach_scenarios([get_oldest_group_sample_scenario])
+    def get(self, request, group):
+        """
+        Oldest Sample
+        `````````````
+
+        Retrieves the details of the oldest sample for an aggregate.
+
+        :pparam string group_id: the ID of the group to get the oldest sample of.
+        """
+        event = group.get_oldest_event()
+        if not event:
+            return Response({'detail': 'No events found for group'}, status=404)
+
+        try:
+            return client.get('/events/{}/'.format(event.id), request.user, request.auth)
+        except client.ApiError as e:
+            return Response(e.body, status=e.status_code)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 9433daaca6..9a732c1b07 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -9,6 +9,7 @@ from .endpoints.event_details import EventDetailsEndpoint
 from .endpoints.group_details import GroupDetailsEndpoint
 from .endpoints.group_events import GroupEventsEndpoint
 from .endpoints.group_events_latest import GroupEventsLatestEndpoint
+from .endpoints.group_events_oldest import GroupEventsOldestEndpoint
 from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
@@ -198,6 +199,9 @@ urlpatterns = patterns(
     url(r'^groups/(?P<group_id>\d+)/events/latest/$',
         GroupEventsLatestEndpoint.as_view(),
         name='sentry-api-0-group-events-latest'),
+    url(r'^groups/(?P<group_id>\d+)/events/oldest/$',
+        GroupEventsOldestEndpoint.as_view(),
+        name='sentry-api-0-group-events-oldest'),
     url(r'^groups/(?P<group_id>\d+)/notes/$',
         GroupNotesEndpoint.as_view(),
         name='sentry-api-0-group-notes'),
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 38f3ac37c4..0df148ef29 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -207,6 +207,18 @@ class Group(Model):
                 self._latest_event = None
         return self._latest_event
 
+    def get_oldest_event(self):
+        from sentry.models import Event
+
+        if not hasattr(self, '_oldest_event'):
+            try:
+                self._oldest_event = Event.objects.filter(
+                    group=self,
+                ).order_by('datetime')[0]
+            except IndexError:
+                self._oldest_event = None
+        return self._oldest_event
+
     def get_unique_tags(self, tag, since=None, order_by='-times_seen'):
         # TODO(dcramer): this has zero test coverage and is a critical path
         from sentry.models import GroupTagValue
