commit 38fb7fcfd53aa461acd63b53f9d2efe8df68ba93
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 24 12:58:34 2016 -0700

    Remove old-style tracebacks
    
    This removes old-traceback/OldFrame, as well as the 'new-tracebacks' flag.
    
    @getsentry/ui

diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index c40a6478e5..c398cdc777 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -59,8 +59,6 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
             feature_list.append('sso')
         if features.has('organizations:callsigns', obj, actor=user):
             feature_list.append('callsigns')
-        if features.has('organizations:new-tracebacks', obj, actor=user):
-            feature_list.append('new-tracebacks')
         if features.has('organizations:onboarding', obj, actor=user) and \
                 not OrganizationOption.objects.filter(organization=obj).exists():
             feature_list.append('onboarding')
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 8360ca4ea8..7447fd8191 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -640,7 +640,6 @@ SENTRY_FEATURES = {
     'organizations:create': True,
     'organizations:sso': True,
     'organizations:callsigns': False,
-    'organizations:new-tracebacks': True,
     'projects:global-events': False,
     'projects:quotas': True,
     'projects:plugins': True,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/oldFrame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/oldFrame.jsx
deleted file mode 100644
index 254f5119ae..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/oldFrame.jsx
+++ /dev/null
@@ -1,293 +0,0 @@
-import React from 'react';
-import _ from 'underscore';
-import classNames from 'classnames';
-import {defined, objectIsEmpty, isUrl} from '../../../utils';
-
-import StrictClick from '../../strictClick';
-import TooltipMixin from '../../../mixins/tooltip';
-import FrameVariables from './frameVariables';
-import ContextLine from './contextLine';
-import {t} from '../../../locale';
-
-function trimPackage(pkg) {
-  let pieces = pkg.split(/\//g);
-  let rv = pieces[pieces.length - 1] || pieces[pieces.length - 2] || pkg;
-  let match = rv.match(/^(.*?)\.(dylib|so|a)$/);
-  return match && match[1] || rv;
-}
-
-
-const OldFrame = React.createClass({
-  propTypes: {
-    data: React.PropTypes.object.isRequired,
-    nextFrameInApp: React.PropTypes.bool,
-    platform: React.PropTypes.string,
-    isExpanded: React.PropTypes.bool,
-  },
-
-  mixins: [
-    TooltipMixin({
-      html: true,
-      selector: '.tip',
-      trigger: 'hover'
-    })
-  ],
-
-  getInitialState() {
-    // isExpanded can be initialized to true via parent component;
-    // data synchronization is not important
-    // https://facebook.github.io/react/tips/props-in-getInitialState-as-anti-pattern.html
-    return {
-      isExpanded: defined(this.props.isExpanded) ? this.props.isExpanded : false
-    };
-  },
-
-  toggleContext(evt) {
-    evt && evt.preventDefault();
-    this.setState({
-      isExpanded: !this.state.isExpanded
-    });
-  },
-
-  hasContextSource() {
-    return defined(this.props.data.context) && this.props.data.context.length;
-  },
-
-  hasExtendedSource() {
-    return this.hasContextSource() && this.props.data.context.length > 1;
-  },
-
-  hasContextVars() {
-    return !objectIsEmpty(this.props.data.vars);
-  },
-
-  isExpandable() {
-    return this.hasExtendedSource() || this.hasContextVars();
-  },
-
-
-  renderOriginalSourceInfo() {
-    let data = this.props.data;
-
-    let sourceMapText = t('Source Map');
-
-    let out = `
-    <div>
-      <strong>${sourceMapText}</strong><br/>`;
-
-    // mapUrl not always present; e.g. uploaded source maps
-    if (data.mapUrl)
-      out += `${_.escape(data.mapUrl)}<br/>`;
-    else
-      out += `${_.escape(data.map)}<br/>`;
-
-    out += '</div>';
-
-    return out;
-  },
-
-  renderDefaultTitle() {
-    let data = this.props.data;
-    let title = [];
-
-    // TODO(mitsuhiko): this is terrible for translators but i'm too
-    // lazy to change this up right now.  This should be a format string
-
-    if (defined(data.filename || data.module)) {
-      title.push(<code key="filename">{data.filename || data.module}</code>);
-      if (isUrl(data.absPath)) {
-        title.push(<a href={data.absPath} className="icon-open" key="share" target="_blank" />);
-      }
-      if (defined(data.function)) {
-        title.push(<span className="in-at" key="in"> {t('in')} </span>);
-      }
-    }
-
-    if (defined(data.function)) {
-      title.push(<code key="function">{data.function}</code>);
-    }
-
-    // we don't want to render out zero line numbers which are used to
-    // indicate lack of source information for native setups.  We could
-    // TODO(mitsuhiko): only do this for events from native platforms?
-    if (defined(data.lineNo) && data.lineNo != 0) {
-      // TODO(dcramer): we need to implement source mappings
-      // title.push(<span className="pull-right blame"><a><span className="icon-mark-github"></span> View Code</a></span>);
-      title.push(<span className="in-at" key="at"> {t('at line')} </span>);
-      if (defined(data.colNo)) {
-        title.push(<code key="line">{data.lineNo}:{data.colNo}</code>);
-      } else {
-        title.push(<code key="line">{data.lineNo}</code>);
-      }
-    }
-
-    if (defined(data.package)) {
-      title.push(<span className="within" key="within"> {t('within')} </span>);
-      title.push(<code title={data.package}>{trimPackage(data.package)}</code>);
-    }
-
-    if (defined(data.origAbsPath)) {
-      title.push(
-        <a key="original-src" className="in-at tip original-src" data-title={this.renderOriginalSourceInfo()}>
-          <span className="icon-question" />
-        </a>
-      );
-    }
-
-    if (data.inApp) {
-      title.push(<span key="in-app"><span className="divider"/>{t('application')}</span>);
-    }
-    return title;
-  },
-
-  renderContextLine(line, activeLineNo) {
-    let liClassName = 'expandable';
-    if (line[0] === activeLineNo) {
-      liClassName += ' active';
-    }
-
-    let lineWs;
-    let lineCode;
-    if (defined(line[1]) && line[1].match) {
-      [, lineWs, lineCode] = line[1].match(/^(\s*)(.*?)$/m);
-    } else {
-      lineWs = '';
-      lineCode = '';
-    }
-    return (
-      <li className={liClassName} key={line[0]}>
-        <span className="ws">{
-        lineWs}</span><span className="contextline">{lineCode
-        }</span>
-      </li>
-    );
-  },
-
-  renderContext() {
-    let data = this.props.data;
-    let context = '';
-    let {isExpanded} = this.state;
-
-    let outerClassName = 'context';
-    if (isExpanded) {
-      outerClassName += ' expanded';
-    }
-
-    let hasContextSource = this.hasContextSource();
-    let hasContextVars = this.hasContextVars();
-    let expandable = this.isExpandable();
-
-    let contextLines = isExpanded
-      ? data.context
-      : data.context && data.context.filter(l => l[0] === data.lineNo);
-
-    if (hasContextSource || hasContextVars) {
-      let startLineNo = hasContextSource ? data.context[0][0] : '';
-      context = (
-        <StrictClick onClick={expandable ? this.toggleContext : null}>
-          <ol start={startLineNo} className={outerClassName}>
-            {defined(data.errors) &&
-            <li className={expandable ? 'expandable error' : 'error'}
-                key="errors">{data.errors.join(', ')}</li>
-            }
-
-            {data.context && contextLines.map((line, index) => {
-              return <ContextLine key={index} line={line} isActive={data.lineNo === line[0]}/>;
-            })}
-
-            {hasContextVars &&
-              <FrameVariables data={data.vars} key="vars" />
-            }
-          </ol>
-        </StrictClick>
-      );
-    }
-    return context;
-  },
-
-  renderExpander() {
-    if (!this.isExpandable()) {
-      return null;
-    }
-    return (
-      <a
-        title={t('Toggle context')}
-        onClick={this.toggleContext}
-        className="btn btn-sm btn-default btn-toggle">
-        <span className={this.state.isExpanded ? 'icon-minus' : 'icon-plus'}/>
-      </a>
-    );
-  },
-
-  renderDefaultLine() {
-    return (
-      <p>
-        {this.renderDefaultTitle()}
-        {this.renderExpander()}
-      </p>
-    );
-  },
-
-  renderCocoaLine() {
-    let data = this.props.data;
-    let className = 'stacktrace-table';
-    return (
-      <div className={className}>
-        {defined(data.package)
-          ? (
-            <div className="trace-col package" title={data.package}>
-              {trimPackage(data.package)}
-            </div>
-          ) : (
-            <div className="trace-col package"/>
-          )
-        }
-        <div className="trace-col address">
-          {data.instructionAddr}
-        </div>
-        <div className="trace-col symbol">
-          <code>{data.function || '<unknown>'}</code>
-          {data.instructionOffset &&
-            <span className="offset">{' + ' + data.instructionOffset}</span>}
-          {data.filename &&
-            <span className="filename">{data.filename}
-              {data.lineNo ? ':' + data.lineNo : ''}</span>}
-          {this.renderExpander()}
-        </div>
-      </div>
-    );
-  },
-
-  renderLine() {
-    switch (this.props.platform) {
-      case 'objc':
-      case 'cocoa':
-        return this.renderCocoaLine();
-      default:
-        return this.renderDefaultLine();
-    }
-  },
-
-  render() {
-    let data = this.props.data;
-
-    let className = classNames({
-      'frame': true,
-      'system-frame': !data.inApp,
-      'frame-errors': data.errors,
-      'leads-to-app': !data.inApp && this.props.nextFrameInApp
-    });
-    let props = {className: className};
-
-    let context = this.renderContext();
-
-    return (
-      <li {...props}>
-        {this.renderLine()}
-        {context}
-      </li>
-    );
-  }
-});
-
-export default OldFrame;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index cb4e4431dc..6c9565aa93 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -1,7 +1,6 @@
 import React from 'react';
 //import GroupEventDataSection from "../eventDataSection";
 import Frame from './frame';
-import OldFrame from './oldFrame';
 import {t} from '../../../locale';
 import OrganizationState from '../../../mixins/organizationState';
 
@@ -65,12 +64,7 @@ const StacktraceContent = React.createClass({
 
     // use old frames if we do not have an org (share view) or
     // we don't have the feature
-    let oldFrames = !this.context.organization || !this.getFeatures().has('new-tracebacks');
     let FrameComponent = Frame;
-    if (oldFrames) {
-      FrameComponent = OldFrame;
-    }
-
     let frames = [];
     data.frames.forEach((frame, frameIdx) => {
       let nextFrame = data.frames[frameIdx + 1];
@@ -96,7 +90,7 @@ const StacktraceContent = React.createClass({
     }
 
     let className = this.props.className || '';
-    className += (oldFrames ? ' old-traceback' : ' traceback');
+    className += ' traceback';
 
     return (
       <div className={className}>
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index cd579a6ffb..6ef0b30029 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1309,362 +1309,6 @@ div.traceback > ul {
   }
 }
 
-//TODO(mitsuhiko): kill us when the A/B test is over
-.old-traceback {
-  list-style-type: none;
-  padding-left: 0;
-  margin-bottom: 20px;
-
-  > ul {
-    padding: 0;
-    &:last-child {
-      margin-bottom: 0;
-    }
-  }
-
-  .frame {
-    list-style-type: none;
-    position: relative;
-    margin-bottom: 0;
-
-    &.frame-errors {}
-
-    &.system-frame {}
-
-    &.leads-to-app {}
-
-    h3 {
-      font-size: 22px;
-    }
-
-    p {
-      font-size: 13px;
-    }
-
-    .title {
-      font-size: 12px;
-      margin-bottom: 12px;
-      line-height: 1.4;
-
-      a.annotation {
-        &.trigger-popover {
-          cursor: pointer;
-        }
-        color: inherit;
-        padding: 0 1px;
-        border-bottom: 1px dotted #666;
-        &:hover { text-decoration: none; }
-      }
-    }
-
-    .original-src {
-      font-size: 12px;
-      padding-left: 3px;
-      position: relative;
-      top: 1px;
-    }
-
-    .icon-open {
-      font-size: 12px;
-      margin-right: 3px;
-      margin-left: 3px;
-      position: relative;
-      top: 1px;
-    }
-
-    .in-at {
-      opacity: .8;
-      margin: 0 2px;
-    }
-
-    .blame {
-      color: lighten(@gray, 5);
-
-      a {
-        color: @gray;
-      }
-
-      .icon-mark-github {
-        position: relative;
-        top: 1px;
-      }
-    }
-
-    .tooltip-inner {
-      word-wrap: break-word;
-      text-align: left;
-      max-width: 300px;
-    }
-
-    .divider {
-      border-left: 1px solid @trim;
-      display: inline-block;
-      width: 1px;
-      height: 10px;
-      margin: 0 6px;
-      position: relative;
-      top: 1px;
-    }
-
-    code {
-      padding: 0;
-      background: #fff;
-      font-size: inherit;
-      color: inherit;
-    }
-
-    .context {
-      margin-top: -5px;
-      margin-bottom: 15px;
-
-      table.key-value {
-        margin-top: 20px;
-      }
-    }
-
-    .tag-app {
-      color: #aaa;
-      font-size: 0.9em;
-      margin-left: 10px;
-    }
-
-    > div > table.key-value {
-      margin-bottom: 5px;
-      > tbody > tr > th {
-        color: @gray-dark;
-        text-align: right;
-        padding-right: 12px !important;
-      }
-    }
-
-    .btn-toggle {
-      display: block;
-      float: right;
-      .square(18px);
-      padding: 0;
-      line-height: 18px;
-      font-size: 9px;
-      text-align: center;
-    }
-
-    .expand-button:hover {
-      cursor: pointer;
-    }
-
-    &.expanded {
-
-      > .title {
-        color: #000;
-      }
-
-      .expandable {
-        height: auto;
-      }
-    }
-
-    &:last-child {
-      .context {
-        margin-bottom: 0;
-      }
-
-      .toggle-expand .btn {
-        margin-bottom: -13px;
-      }
-    }
-  }
-
-  .expandable {
-    height: 0;
-    overflow: hidden;
-    position: relative;
-
-    .icon-plus {
-      position: absolute;
-      left: 8px;
-      top: 6px;
-      opacity: .25;
-      .transition(.1s opacity linear);
-    }
-
-    &.key-value {
-      display: none;
-    }
-
-    .ws {
-      display: none;
-    }
-
-    &:hover {
-      .icon-plus {
-        opacity: .5;
-      }
-    }
-  }
-
-  .expanded {
-    .expandable {
-      overflow: none;
-      height: auto;
-    }
-
-    .ws {
-      display: inline;
-    }
-  }
-
-  ol.context {
-    margin: 0;
-    list-style-position: inside;
-    border-radius: 3px;
-    padding-left: 0;
-
-    .key-value {
-      display: none;
-
-      pre {
-        overflow: auto;
-      }
-    }
-
-    > li {
-      cursor: pointer;
-      padding-left: 15px;
-      font-family: @font-family-code;
-      color: #222;
-      background-color: #f6f7f8;
-      line-height: 24px;
-      font-size: 12px;
-      white-space: pre;
-      white-space: pre-wrap;
-      word-wrap: break-word;
-    }
-    > li.active {
-      background-color: #f6f7f8;
-      min-height: 24px;
-      list-style-type: none;
-      border-radius: 2px;
-
-      pre {
-        color: @gray-dark;
-      }
-    }
-
-    > li:first-child {
-        border-radius: 2px 2px 0 0;
-    }
-
-    > li:last-of-type {
-        border-radius: 0 0 2px 2px;
-    }
-
-    li.closed {
-      border-radius: 2px;
-    }
-
-    &.expanded {
-      .key-value {
-        display: table;
-      }
-
-      > li.active {
-        background-color: @purple;
-        color: #fff;
-        list-style-type: inherit;
-        border-radius: 0;
-      }
-    }
-  }
-
-  ol.context-line {
-    > li {
-      > span {
-        float: right;
-      }
-    }
-  }
-
-  .expanded {
-    ol.context {
-      > li {
-        min-height: 22px;
-      }
-      > li.active {
-        background-color: @blue;
-        color: #fff;
-      }
-    }
-  }
-
-  .stacktrace-table {
-    display: flex;
-    align-items: baseline;
-    line-height: 16px;
-    box-shadow: inset 0 1px 0 #E6EEF4;
-
-    .trace-col {
-      padding: 6px 5px 3px;
-      font-size: 12px;
-    }
-
-    .package {
-      width: 15%;
-      font-size: 13px;
-      font-weight: bold;
-      .truncate;
-      flex-grow: 0;
-      flex-shrink: 0;
-    }
-
-    .address {
-      font-family: @font-family-code;
-      font-size: 11px;
-      color: @gray-dark;
-      letter-spacing: -0.25px;
-      width: 85px;
-      flex-grow: 0;
-      flex-shrink: 0;
-    }
-
-    .symbol {
-      word-break: break-word;
-
-      code {
-        background: transparent;
-        color: @blue-dark;
-        padding-right: 5px;
-      }
-
-      span.offset {
-        font-weight: bold;
-        padding-right: 10px;
-      }
-
-      span.filename {
-        color: @purple;
-
-        &:before {
-          content: "(";
-        }
-        &:after {
-          content: ")";
-        }
-      }
-    }
-  }
-
-  .system-frame .stacktrace-table {
-    background-color: @white-dark;
-  }
-
-  .leads-to-app .stacktrace-table {
-    background: lighten(@blue-light, 30);
-  }
-
-  .exception-mechanism {
-    margin: 15px 0;
-  }
-}
-
 #full-message {
   line-height: 1.5em;
 
