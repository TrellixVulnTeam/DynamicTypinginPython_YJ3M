commit 855fc0a07edbf75fbbe50f50e333c789a3b44762
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Tue Aug 30 18:09:34 2016 -0700

    Make exception frame not expandable when there is no surrounding context (#4026)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index cc8dc9cea4..23ff379783 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -27,6 +27,7 @@ const Frame = React.createClass({
     platform: React.PropTypes.string,
     isExpanded: React.PropTypes.bool,
     emptySourceNotation: React.PropTypes.bool,
+    isOnlyFrame: React.PropTypes.bool,
   },
 
   mixins: [
@@ -71,7 +72,7 @@ const Frame = React.createClass({
 
   isExpandable() {
     return (
-      this.props.emptySourceNotation
+      (!this.props.isOnlyFrame && this.props.emptySourceNotation)
       || this.hasContextSource()
       || this.hasContextVars()
     );
@@ -322,7 +323,6 @@ const Frame = React.createClass({
 
   render() {
     let data = this.props.data;
-
     let className = classNames({
       'frame': true,
       'is-expandable': this.isExpandable(),
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index e82063372c..b906592c9d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -75,6 +75,7 @@ const StacktraceContent = React.createClass({
             data={frame}
             isExpanded={expandFirstFrame && lastFrameIdx === frameIdx}
             emptySourceNotation={lastFrameIdx === frameIdx && frameIdx === 0}
+            isOnlyFrame={this.props.data.frames.length === 1}
             nextFrameInApp={nextFrame && nextFrame.inApp}
             platform={this.props.platform} />
         );
@@ -84,11 +85,9 @@ const StacktraceContent = React.createClass({
           firstFrameOmitted, lastFrameOmitted));
       }
     });
-
     if (this.props.newestFirst) {
       frames.reverse();
     }
-
     let className = this.props.className || '';
     className += ' traceback';
 
