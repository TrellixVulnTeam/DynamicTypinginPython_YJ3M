commit 7ec55ae4def49ff6987218f683c7f350197cece1
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Apr 22 21:18:39 2020 -0700

    ref(alerts): Minor UI cleanups (#18395)

diff --git a/src/sentry/static/sentry/app/views/alerts/details/activity/dateDivider.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/dateDivider.tsx
index b1001a8bc1..3ec5293b22 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/activity/dateDivider.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/activity/dateDivider.tsx
@@ -1,43 +1,31 @@
-/**
- * Activity component on Incident Details view
- * Allows user to leave a comment on an incident as well as
- * fetch and render existing activity items.
- */
-import React from 'react';
 import styled from '@emotion/styled';
 
 import space from 'app/styles/space';
 
-const DateDivider = styled(function DateDivider({children, ...props}) {
-  return (
-    <div {...props}>
-      <hr />
-      <TitleWrapper>
-        <Title>{children}</Title>
-      </TitleWrapper>
-    </div>
-  );
-})`
-  position: relative;
+const DateDivider = styled('div')`
   font-size: ${p => p.theme.fontSizeMedium};
-`;
-
-const Title = styled('span')`
-  background-color: ${p => p.theme.white};
-  padding: 0 ${space(2)};
-`;
-
-const TitleWrapper = styled('span')`
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  left: 0;
-  right: 0;
-
   display: flex;
   align-items: center;
   justify-content: center;
   color: ${p => p.theme.gray3};
+  margin: ${space(1.5)} 0;
+
+  &:before,
+  &:after {
+    content: '';
+    display: block;
+    flex-grow: 1;
+    height: 1px;
+    background-color: ${p => p.theme.borderLight};
+  }
+
+  &:before {
+    margin-right: ${space(2)};
+  }
+
+  &:after {
+    margin-left: ${space(2)};
+  }
 `;
 
 export default DateDivider;
diff --git a/src/sentry/static/sentry/app/views/alerts/details/body.tsx b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
index c8be4e365e..5c92316bba 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/body.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
@@ -21,7 +21,8 @@ import Link from 'app/components/links/link';
 import NavTabs from 'app/components/navTabs';
 import Placeholder from 'app/components/placeholder';
 import SeenByList from 'app/components/seenByList';
-import {IconEdit, IconTelescope, IconWarning} from 'app/icons';
+import {IconTelescope, IconWarning, IconLink} from 'app/icons';
+import {SectionHeading} from 'app/components/charts/styles';
 import Projects from 'app/utils/projects';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
@@ -35,7 +36,6 @@ import {
 } from '../types';
 import Activity from './activity';
 import Chart from './chart';
-import SideHeader from './sideHeader';
 
 type Props = {
   incident?: Incident;
@@ -105,6 +105,10 @@ export default class DetailsBody extends React.Component<Props> {
   renderRuleDetails() {
     const {incident} = this.props;
 
+    if (incident === undefined) {
+      return <Placeholder height="200px" />;
+    }
+
     const criticalTrigger = incident?.alertRule.triggers.find(
       ({label}) => label === 'critical'
     );
@@ -204,51 +208,44 @@ export default class DetailsBody extends React.Component<Props> {
             />
           </ActivityPageContent>
           <Sidebar>
-            <PageContent>
-              {incident?.alertRule && (
-                <React.Fragment>
-                  <SideHeader>
-                    <span>{t('Alert Rule')}</span>
-                    {incident?.alertRule?.status !== AlertRuleStatus.SNAPSHOT && (
-                      <SideHeaderLink
-                        to={{
-                          pathname: `/settings/${params.orgId}/projects/${incident?.projects[0]}/alerts/metric-rules/${incident?.alertRule?.id}/`,
-                        }}
-                      >
-                        <IconEdit />
-                        {t('View Rule')}
-                      </SideHeaderLink>
-                    )}
-                  </SideHeader>
-
-                  {this.renderRuleDetails()}
-
-                  <SideHeader>
-                    <span>{t('Query')}</span>
-                    <Feature features={['discover-basic']}>
-                      <Projects
-                        slugs={incident && incident.projects}
-                        orgId={params.orgId}
-                      >
-                        {({initiallyLoaded, fetching, projects}) => (
-                          <SideHeaderLink
-                            disabled={!incident || fetching || !initiallyLoaded}
-                            to={this.getDiscoverUrl(
-                              ((initiallyLoaded && projects) as Project[]) || []
-                            )}
-                          >
-                            <IconTelescope size="xs" />
-                            {t('View in Discover')}
-                          </SideHeaderLink>
-                        )}
-                      </Projects>
-                    </Feature>
-                  </SideHeader>
-
-                  <Query>{incident?.alertRule.query || '""'}</Query>
-                </React.Fragment>
+            <SidebarHeading>
+              <span>{t('Alert Rule')}</span>
+              {incident?.alertRule?.status !== AlertRuleStatus.SNAPSHOT && (
+                <SideHeaderLink
+                  to={{
+                    pathname: `/settings/${params.orgId}/projects/${incident?.projects[0]}/alerts/metric-rules/${incident?.alertRule?.id}/`,
+                  }}
+                >
+                  {t('View Rule')}
+                  <IconLink size="xs" />
+                </SideHeaderLink>
               )}
-            </PageContent>
+            </SidebarHeading>
+            {this.renderRuleDetails()}
+
+            <SidebarHeading>
+              <span>{t('Query')}</span>
+              <Feature features={['discover-basic']}>
+                <Projects slugs={incident?.projects} orgId={params.orgId}>
+                  {({initiallyLoaded, fetching, projects}) => (
+                    <SideHeaderLink
+                      disabled={!incident || fetching || !initiallyLoaded}
+                      to={this.getDiscoverUrl(
+                        ((initiallyLoaded && projects) as Project[]) || []
+                      )}
+                    >
+                      {t('View in Discover')}
+                      <IconTelescope size="xs" />
+                    </SideHeaderLink>
+                  )}
+                </Projects>
+              </Feature>
+            </SidebarHeading>
+            {incident ? (
+              <Query>{incident?.alertRule.query || '""'}</Query>
+            ) : (
+              <Placeholder height="30px" />
+            )}
           </Sidebar>
         </Main>
       </StyledPageContent>
@@ -268,38 +265,36 @@ const Main = styled('div')`
 `;
 
 const ActivityPageContent = styled(PageContent)`
-  width: 60%;
   @media (max-width: ${theme.breakpoints[0]}) {
     width: 100%;
     margin-bottom: 0;
   }
 `;
 
-const Sidebar = styled('div')`
-  width: 40%;
-
-  ${PageContent} {
-    padding-top: ${space(3)};
-  }
+const Sidebar = styled(PageContent)`
+  width: 400px;
+  flex: none;
+  padding-top: ${space(3)};
 
   @media (max-width: ${theme.breakpoints[0]}) {
     width: 100%;
-    border: 0;
-
-    ${PageContent} {
-      padding-top: ${space(3)};
-      margin-bottom: 0;
-      border-bottom: 1px solid ${p => p.theme.borderLight};
-    }
+    padding-top: ${space(3)};
+    margin-bottom: 0;
+    border-bottom: 1px solid ${p => p.theme.borderLight};
   }
 `;
 
+const SidebarHeading = styled(SectionHeading)`
+  display: flex;
+  justify-content: space-between;
+`;
+
 const SideHeaderLink = styled(Link)`
   display: grid;
   grid-auto-flow: column;
   align-items: center;
   grid-gap: ${space(0.5)};
-  text-transform: none;
+  font-weight: normal;
 `;
 
 const StyledPageContent = styled(PageContent)`
@@ -335,12 +330,12 @@ const StyledSeenByList = styled(SeenByList)`
 
 const RuleDetails = styled('div')`
   display: grid;
-  font-size: ${p => p.theme.fontSizeMedium};
+  font-size: ${p => p.theme.fontSizeSmall};
   grid-template-columns: auto max-content;
   margin-bottom: ${space(2)};
 
   & > span {
-    padding: ${space(0.25)} ${space(1)};
+    padding: ${space(0.5)} ${space(1)};
   }
 
   & > span:nth-child(2n + 2) {
@@ -349,15 +344,14 @@ const RuleDetails = styled('div')`
 
   & > span:nth-child(4n + 1),
   & > span:nth-child(4n + 2) {
-    background-color: ${p => p.theme.offWhite2};
+    background-color: ${p => p.theme.offWhite};
   }
 `;
 
 const Query = styled('div')`
   font-family: ${p => p.theme.text.familyMono};
-  font-size: ${p => p.theme.fontSizeRelativeSmall};
-  background-color: ${p => p.theme.offWhite2};
-  border-radius: ${p => p.theme.borderRadius};
+  font-size: ${p => p.theme.fontSizeSmall};
+  background-color: ${p => p.theme.offWhite};
   padding: ${space(0.5)} ${space(1)};
   color: ${p => p.theme.gray4};
 `;
diff --git a/src/sentry/static/sentry/app/views/alerts/details/header.tsx b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
index 904b60d080..d1dea51360 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/header.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
@@ -11,7 +11,6 @@ import Access from 'app/components/acl/access';
 import Count from 'app/components/count';
 import DropdownControl from 'app/components/dropdownControl';
 import Duration from 'app/components/duration';
-import InlineSvg from 'app/components/inlineSvg';
 import LoadingError from 'app/components/loadingError';
 import MenuItem from 'app/components/menuItem';
 import PageHeading from 'app/components/pageHeading';
@@ -20,6 +19,8 @@ import Projects from 'app/utils/projects';
 import SubscribeButton from 'app/components/subscribeButton';
 import getDynamicText from 'app/utils/getDynamicText';
 import space from 'app/styles/space';
+import theme from 'app/utils/theme';
+import {IconCheckmark, IconChevron} from 'app/icons';
 
 import {Incident, IncidentStats} from '../types';
 import {isOpen} from '../utils';
@@ -28,7 +29,6 @@ import Status from '../status';
 type Props = {
   className?: string;
   hasIncidentDetailsError: boolean;
-  // Can be undefined when loading
   incident?: Incident;
   stats?: IncidentStats;
   onSubscriptionChange: (event: React.MouseEvent) => void;
@@ -50,13 +50,14 @@ export default class DetailsHeader extends React.Component<Props> {
             <DropdownControl
               data-test-id="status-dropdown"
               label={statusLabel}
-              menuWidth="180px"
+              menuWidth="200px"
               alignRight
               buttonProps={{size: 'small', disabled: !incident}}
             >
-              <StyledMenuItem onSelect={onStatusChange}>
-                <ResolveIcon src="icon-circle-check" /> {t('Resolve this incident')}
-              </StyledMenuItem>
+              <StatusMenuItem onSelect={onStatusChange}>
+                <IconCheckmark circle color={theme.greenLight} />
+                {t('Resolve this incident')}
+              </StatusMenuItem>
             </DropdownControl>
           ) : (
             statusLabel
@@ -95,7 +96,7 @@ export default class DetailsHeader extends React.Component<Props> {
             </IncidentsLink>
             {dateStarted && (
               <React.Fragment>
-                <Chevron src="icon-chevron-right" size={space(2)} />
+                <IconChevron direction="right" color={theme.gray1} size={space(1.5)} />
                 <IncidentDate>{dateStarted}</IncidentDate>
               </React.Fragment>
             )}
@@ -120,7 +121,10 @@ export default class DetailsHeader extends React.Component<Props> {
               {project && (
                 <Projects slugs={[project]} orgId={params.orgId}>
                   {({projects}) => (
-                    <ProjectBadge project={projects && projects.length && projects[0]} />
+                    <ProjectBadge
+                      avatarSize={18}
+                      project={projects && projects.length && projects[0]}
+                    />
                   )}
                 </Projects>
               )}
@@ -183,8 +187,7 @@ const StyledLoadingError = styled(LoadingError)`
 const GroupedHeaderItems = styled('div')`
   display: grid;
   grid-template-columns: repeat(6, max-content);
-  grid-column-gap: ${space(3)};
-  grid-row-gap: ${space(1)};
+  grid-gap: ${space(1)} ${space(4)};
   text-align: right;
 
   @media (max-width: ${p => p.theme.breakpoints[1]}) {
@@ -208,10 +211,12 @@ const ItemValue = styled('div')`
 `;
 
 const Breadcrumb = styled('div')`
-  display: flex;
+  display: grid;
+  grid-auto-flow: column;
+  grid-gap: ${space(1)};
   align-items: center;
   font-size: ${p => p.theme.fontSizeLarge};
-  margin-bottom: ${space(0.5)};
+  margin-bottom: ${space(1)};
 `;
 
 const IncidentTitle = styled('div', {
@@ -229,19 +234,13 @@ const IncidentsLink = styled(Link)`
   color: inherit;
 `;
 
-const Chevron = styled(InlineSvg)`
-  color: ${p => p.theme.gray1};
-  margin: 0 ${space(0.5)};
-`;
-
-const StyledMenuItem = styled(MenuItem)`
-  font-size: ${p => p.theme.fontSizeMedium};
-  text-align: left;
-  padding: ${space(1)} 12px; /* To match dropdown */
-  white-space: nowrap;
-`;
-
-const ResolveIcon = styled(InlineSvg)`
-  color: ${p => p.theme.greenLight};
-  margin-right: ${space(0.5)};
+const StatusMenuItem = styled(MenuItem)`
+  > span {
+    font-size: ${p => p.theme.fontSizeMedium};
+    text-align: left;
+    display: grid;
+    grid-template-columns: max-content 1fr;
+    grid-gap: ${space(1)};
+    align-items: center;
+  }
 `;
diff --git a/src/sentry/static/sentry/app/views/alerts/details/sideHeader.tsx b/src/sentry/static/sentry/app/views/alerts/details/sideHeader.tsx
deleted file mode 100644
index 6bf91e04b8..0000000000
--- a/src/sentry/static/sentry/app/views/alerts/details/sideHeader.tsx
+++ /dev/null
@@ -1,40 +0,0 @@
-import React from 'react';
-import isPropValid from '@emotion/is-prop-valid';
-import styled from '@emotion/styled';
-
-import space from 'app/styles/space';
-
-type Props = {
-  className?: string;
-  loading?: boolean;
-  children: React.ReactNode;
-};
-
-const SideHeader = styled(function SideHeader({className, loading, children}: Props) {
-  return (
-    <h6 className={className}>
-      <Title loading={loading}>{children}</Title>
-    </h6>
-  );
-})`
-  color: ${p => p.theme.gray2};
-  font-weight: bold;
-  margin-bottom: ${space(1)};
-  text-transform: uppercase;
-`;
-
-const Title = styled('span', {
-  shouldForwardProp: p => isPropValid(p) && p !== 'loading',
-})<{loading?: boolean}>`
-  ${p =>
-    p.loading
-      ? `
-  background-color: ${p.theme.placeholderBackground};
-  color: ${p.theme.placeholderBackground};
-  `
-      : ''};
-  display: flex;
-  justify-content: space-between;
-`;
-
-export default SideHeader;
diff --git a/src/sentry/static/sentry/app/views/alerts/list/row.tsx b/src/sentry/static/sentry/app/views/alerts/list/row.tsx
index 60886d1b71..7e4e8a404c 100644
--- a/src/sentry/static/sentry/app/views/alerts/list/row.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/list/row.tsx
@@ -68,6 +68,7 @@ class AlertListRow extends AsyncComponent<Props, State> {
           </TitleAndSparkLine>
 
           <ProjectBadge
+            avatarSize={18}
             project={!projectsLoaded ? {slug} : this.getProject(slug, projects)}
           />
 
