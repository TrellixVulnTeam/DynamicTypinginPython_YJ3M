commit fb75a0df4eda40dfea5fc5987f31c10f27ed5e46
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Jul 6 12:50:36 2018 -0700

    ref(ui): Codeplit "ios-device-list" (#7217)

diff --git a/src/sentry/static/sentry/app/components/deviceName.jsx b/src/sentry/static/sentry/app/components/deviceName.jsx
new file mode 100644
index 0000000000..8bf0f975a6
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/deviceName.jsx
@@ -0,0 +1,59 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import {isString} from 'lodash';
+
+export function deviceNameMapper(model, iOSDeviceList) {
+  if (!model || !isString(model)) {
+    return null;
+  }
+  const modelIdentifier = model.split(' ')[0];
+  const modelId = model
+    .split(' ')
+    .splice(1)
+    .join(' ');
+  const modelName = iOSDeviceList.generationByIdentifier(modelIdentifier);
+  return modelName === undefined ? model : modelName + ' ' + modelId;
+}
+
+export async function loadDeviceListModule() {
+  return import(/*webpackChunkName: "iOSDeviceList"*/ 'ios-device-list');
+}
+
+export async function getDeviceName(model) {
+  const iOSDeviceList = await loadDeviceListModule();
+
+  return deviceNameMapper(model, iOSDeviceList);
+}
+
+/**
+ * This is used to map iOS Device Names to model name.
+ * This asynchronously loads the ios-device-list library because of its size
+ */
+export default class DeviceName extends React.Component {
+  static propTypes = {
+    children: PropTypes.string,
+  };
+
+  constructor(...args) {
+    super(...args);
+
+    this.state = {
+      iOSDeviceList: null,
+    };
+  }
+
+  componentDidMount() {
+    // This library is very big, so we are codesplitting it based on size and
+    // the relatively small utility this library provides
+    loadDeviceListModule().then(iOSDeviceList => this.setState({iOSDeviceList}));
+  }
+
+  render() {
+    let {iOSDeviceList} = this.state;
+
+    // If library has not loaded yet, then just render the raw model string, better than empty
+    if (!iOSDeviceList) return this.props.children;
+
+    return deviceNameMapper(this.props.children, iOSDeviceList);
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/events/contextSummary.jsx b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
index 959025834e..6c7b466b9f 100644
--- a/src/sentry/static/sentry/app/components/events/contextSummary.jsx
+++ b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
@@ -2,9 +2,10 @@ import PropTypes from 'prop-types';
 import React from 'react';
 
 import Avatar from 'app/components/avatar';
+import DeviceName from 'app/components/deviceName';
 import SentryTypes from 'app/proptypes';
 import {t} from 'app/locale';
-import {objectIsEmpty, deviceNameMapper} from 'app/utils';
+import {objectIsEmpty} from 'app/utils';
 
 const generateClassName = function(name) {
   return name
@@ -179,7 +180,9 @@ class DeviceSummary extends React.Component {
     return (
       <div className={`context-item ${className}`}>
         <span className="context-item-icon" />
-        <h3>{data.model ? deviceNameMapper(data.model) : t('Unknown Device')}</h3>
+        <h3>
+          {data.model ? <DeviceName>{data.model}</DeviceName> : t('Unknown Device')}
+        </h3>
         {subTitle}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.jsx b/src/sentry/static/sentry/app/components/events/eventTags.jsx
index 7833da8ac8..e94307c477 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.jsx
@@ -6,7 +6,8 @@ import _ from 'lodash';
 import SentryTypes from 'app/proptypes';
 
 import EventDataSection from 'app/components/events/eventDataSection';
-import {isUrl, deviceNameMapper} from 'app/utils';
+import DeviceName from 'app/components/deviceName';
+import {isUrl} from 'app/utils';
 import {t} from 'app/locale';
 import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
@@ -44,7 +45,7 @@ class EventTags extends React.Component {
                     query: {query: `${tag.key}:"${tag.value}"`},
                   }}
                 >
-                  {deviceNameMapper(tag.value)}
+                  <DeviceName>{tag.value}</DeviceName>
                 </Link>
                 {isUrl(tag.value) && (
                   <a href={tag.value} className="external-icon">
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
index efdd7af733..381d6cefd3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
@@ -2,8 +2,8 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import _ from 'lodash';
 
+import DeviceName from 'app/components/deviceName';
 import ContextData from 'app/components/contextData';
-import {deviceNameMapper} from 'app/utils';
 
 class KeyValueList extends React.Component {
   static propTypes = {
@@ -52,7 +52,9 @@ class KeyValueList extends React.Component {
                 <tr key={key}>
                   <td className="key">{key}</td>
                   <td className="value">
-                    <pre>{deviceNameMapper('' + value || ' ')}</pre>
+                    <pre>
+                      <DeviceName>{'' + value || ' '}</DeviceName>
+                    </pre>
                   </td>
                 </tr>,
               ];
diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
index 3bf7085e31..f8e61fe6c5 100644
--- a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
@@ -6,7 +6,7 @@ import classNames from 'classnames';
 import CustomPropTypes from 'app/proptypes';
 import Avatar from 'app/components/avatar';
 import DateTime from 'app/components/dateTime';
-import deviceNameMapper from 'app/utils/deviceNameMapper';
+import DeviceName from 'app/components/deviceName';
 
 import 'app/../less/components/eventsTableRow.less';
 
@@ -83,9 +83,11 @@ class EventsTableRow extends React.Component {
           return (
             <td key={tag.key}>
               <div className={truncate ? 'truncate' : ''}>
-                {tag.key === 'device'
-                  ? deviceNameMapper(tagMap[tag.key])
-                  : tagMap[tag.key]}
+                {tag.key === 'device' ? (
+                  <DeviceName>{tagMap[tag.key]}</DeviceName>
+                ) : (
+                  tagMap[tag.key]
+                )}
               </div>
             </td>
           );
diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index 0ac1b80ffb..6caf86999d 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -1,12 +1,17 @@
+import {Link} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
+
+import {escape, percent} from 'app/utils';
+import {t} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
+import DeviceName, {
+  deviceNameMapper,
+  loadDeviceListModule,
+} from 'app/components/deviceName';
 import SentryTypes from 'app/proptypes';
 import Tooltip from 'app/components/tooltip';
-import {escape, percent, deviceNameMapper} from 'app/utils';
-import {t} from 'app/locale';
 import withEnvironment from 'app/utils/withEnvironment';
 
 const TagDistributionMeter = createReactClass({
@@ -61,22 +66,26 @@ const TagDistributionMeter = createReactClass({
       error: false,
     });
 
-    this.api.request(url, {
-      query,
-      success: data => {
+    Promise.all([
+      this.api.requestPromise(url, {
+        query,
+      }),
+      loadDeviceListModule(),
+    ])
+      .then(([data, iOSDeviceList]) => {
         this.setState({
           data,
+          iOSDeviceList,
           error: false,
           loading: false,
         });
-      },
-      error: () => {
+      })
+      .catch(() => {
         this.setState({
           error: true,
           loading: false,
         });
-      },
-    });
+      });
   },
 
   /**
@@ -109,7 +118,7 @@ const TagDistributionMeter = createReactClass({
 
           const tooltipHtml =
             '<div class="truncate">' +
-            escape(deviceNameMapper(value.name) || '') +
+            escape(deviceNameMapper(value.name || '', this.state.iOSDeviceList)) +
             '</div>' +
             pctLabel +
             '%';
@@ -124,7 +133,9 @@ const TagDistributionMeter = createReactClass({
               >
                 <span className="tag-description">
                   <span className="tag-percentage">{pctLabel}%</span>
-                  <span className="tag-label">{deviceNameMapper(value.name)}</span>
+                  <span className="tag-label">
+                    <DeviceName>{value.name}</DeviceName>
+                  </span>
                 </span>
               </Link>
             </Tooltip>
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index e215b1ef30..deb9438a5e 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -2,7 +2,6 @@ import _ from 'lodash';
 
 // import/export sub-utils
 import parseLinkHeader from 'app/utils/parseLinkHeader';
-import deviceNameMapper from 'app/utils/deviceNameMapper';
 import Collection from 'app/utils/collection';
 import PendingChangeQueue from 'app/utils/pendingChangeQueue';
 import CursorPoller from 'app/utils/cursorPoller';
@@ -225,7 +224,7 @@ export const buildUserId = id => `user:${id}`;
 export const buildTeamId = id => `team:${id}`;
 
 // re-export under utils
-export {parseLinkHeader, deviceNameMapper, Collection, PendingChangeQueue, CursorPoller};
+export {parseLinkHeader, Collection, PendingChangeQueue, CursorPoller};
 
 // backwards compatible default export for use w/ getsentry (exported
 // as a single object w/ function refs for consumption by getsentry)
@@ -245,7 +244,6 @@ export default {
   buildTeamId,
 
   // external imports
-  deviceNameMapper,
   objectToArray,
   Collection,
   PendingChangeQueue,
diff --git a/src/sentry/static/sentry/app/utils/deviceNameMapper.jsx b/src/sentry/static/sentry/app/utils/deviceNameMapper.jsx
deleted file mode 100644
index bc44078d49..0000000000
--- a/src/sentry/static/sentry/app/utils/deviceNameMapper.jsx
+++ /dev/null
@@ -1,15 +0,0 @@
-import iOSDeviceList from 'ios-device-list';
-import {isString} from 'lodash';
-
-export default function(model) {
-  if (!model || !isString(model)) {
-    return null;
-  }
-  const modelIdentifier = model.split(' ')[0];
-  const modelId = model
-    .split(' ')
-    .splice(1)
-    .join(' ');
-  const modelName = iOSDeviceList.generationByIdentifier(modelIdentifier);
-  return modelName === undefined ? model : modelName + ' ' + modelId;
-}
diff --git a/src/sentry/static/sentry/app/views/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupTagValues.jsx
index d8d3974f3a..0d8e542e20 100644
--- a/src/sentry/static/sentry/app/views/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/groupTagValues.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import {Link} from 'react-router';
 import jQuery from 'jquery';
+
 import SentryTypes from 'app/proptypes';
 import ApiMixin from 'app/mixins/apiMixin';
 import Avatar from 'app/components/avatar';
@@ -10,7 +11,8 @@ import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import Pagination from 'app/components/pagination';
 import TimeSince from 'app/components/timeSince';
-import {isUrl, percent, deviceNameMapper} from 'app/utils';
+import DeviceName from 'app/components/deviceName';
+import {isUrl, percent} from 'app/utils';
 import {t} from 'app/locale';
 import withEnvironment from 'app/utils/withEnvironment';
 
@@ -125,14 +127,16 @@ const GroupTagValues = createReactClass({
                 query: {query: `${tagKey.key}:"${tagValue.value}"`},
               }}
             >
-              {tagKey.key === 'user'
-                ? [
-                    <Avatar user={tagValue} size={20} className="avatar" />,
-                    <span style={{marginLeft: 10}}>
-                      {this.getUserDisplayName(tagValue)}
-                    </span>,
-                  ]
-                : deviceNameMapper(tagValue.name)}
+              {tagKey.key === 'user' ? (
+                [
+                  <Avatar user={tagValue} size={20} className="avatar" />,
+                  <span style={{marginLeft: 10}}>
+                    {this.getUserDisplayName(tagValue)}
+                  </span>,
+                ]
+              ) : (
+                <DeviceName>{tagValue.name}</DeviceName>
+              )}
             </Link>
             {tagValue.email && (
               <a
diff --git a/src/sentry/static/sentry/app/views/groupTags.jsx b/src/sentry/static/sentry/app/views/groupTags.jsx
index e443ab59b4..237db19020 100644
--- a/src/sentry/static/sentry/app/views/groupTags.jsx
+++ b/src/sentry/static/sentry/app/views/groupTags.jsx
@@ -6,10 +6,11 @@ import {Box, Flex} from 'grid-emotion';
 import SentryTypes from 'app/proptypes';
 import ApiMixin from 'app/mixins/apiMixin';
 import Count from 'app/components/count';
+import DeviceName from 'app/components/deviceName';
 import GroupState from 'app/mixins/groupState';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import {percent, deviceNameMapper} from 'app/utils';
+import {percent} from 'app/utils';
 import {t, tct} from 'app/locale';
 import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
@@ -105,7 +106,9 @@ const GroupTags = createReactClass({
                 }}
               >
                 <span className="tag-bar-background" style={{width: pct + '%'}} />
-                <span className="tag-bar-label">{deviceNameMapper(tagValue.name)}</span>
+                <span className="tag-bar-label">
+                  <DeviceName>{tagValue.name}</DeviceName>
+                </span>
                 <span className="tag-bar-count">
                   <Count value={tagValue.count} />
                 </span>
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index eeea1b1c88..983da62e31 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount} from 'enzyme';
 
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 
@@ -7,7 +7,7 @@ describe('KeyValueList', function() {
   describe('render', function() {
     it('should render a definition list of key/value pairs', function() {
       let data = [['a', 'x'], ['b', 'y']];
-      let wrapper = shallow(<KeyValueList data={data} />);
+      let wrapper = mount(<KeyValueList data={data} />);
 
       expect(
         wrapper
@@ -38,7 +38,7 @@ describe('KeyValueList', function() {
 
     it('should sort sort key/value pairs', function() {
       let data = [['b', 'y'], ['a', 'x']];
-      let wrapper = shallow(<KeyValueList data={data} />);
+      let wrapper = mount(<KeyValueList data={data} />);
 
       expect(
         wrapper
@@ -72,7 +72,7 @@ describe('KeyValueList', function() {
         ['b', 'y'],
         ['a', ''], // empty string
       ];
-      let wrapper = shallow(<KeyValueList data={data} />);
+      let wrapper = mount(<KeyValueList data={data} />);
 
       expect(
         wrapper
@@ -122,7 +122,7 @@ describe('KeyValueList', function() {
 
     it('should coerce non-strings into strings', function() {
       let data = [['a', false]];
-      let wrapper = shallow(<KeyValueList data={data} />);
+      let wrapper = mount(<KeyValueList data={data} />);
 
       expect(
         wrapper
@@ -140,7 +140,7 @@ describe('KeyValueList', function() {
 
     it("shouldn't blow up on null", function() {
       let data = [['a', null]];
-      let wrapper = shallow(<KeyValueList data={data} />);
+      let wrapper = mount(<KeyValueList data={data} />);
 
       expect(
         wrapper
diff --git a/webpack.config.js b/webpack.config.js
index e013bfa682..c23ae20d2a 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -69,7 +69,6 @@ var appEntry = {
     'reflux',
     'select2',
     'vendor/simple-slider/simple-slider',
-    'ios-device-list',
     'emotion',
     'react-emotion',
     'grid-emotion',
