commit e8626c2f1257d8177a758f9b3f66be068f23ad83
Author: Jess MacQueen <jess@getsentry.com>
Date:   Fri Jun 17 14:47:02 2016 -0700

    improve flow of email verification, add html email templates for verification and account recovery

diff --git a/src/sentry/models/lostpasswordhash.py b/src/sentry/models/lostpasswordhash.py
index 5d7862b151..327984c642 100644
--- a/src/sentry/models/lostpasswordhash.py
+++ b/src/sentry/models/lostpasswordhash.py
@@ -60,6 +60,7 @@ class LostPasswordHash(Model):
         msg = MessageBuilder(
             subject='%sPassword Recovery' % (options.get('mail.subject-prefix'),),
             template='sentry/emails/recover_account.txt',
+            html_template='sentry/emails/recover_account.html',
             type='user.password_recovery',
             context=context,
         )
diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index b5b97bbe45..f25aaab7da 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -126,11 +126,13 @@ class User(BaseModel, AbstractBaseUser):
                     'sentry-account-confirm-email',
                     args=[self.id, email.validation_hash]
                 )),
+                'confirm_email': email.email,
                 'is_new_user': is_new_user,
             }
             msg = MessageBuilder(
                 subject='%sConfirm Email' % (options.get('mail.subject-prefix'),),
                 template='sentry/emails/confirm_email.txt',
+                html_template='sentry/emails/confirm_email.html',
                 type='user.confirm_email',
                 context=context,
             )
diff --git a/src/sentry/templates/sentry/account/confirm_email/failure.html b/src/sentry/templates/sentry/account/confirm_email/failure.html
deleted file mode 100644
index f9d5daac09..0000000000
--- a/src/sentry/templates/sentry/account/confirm_email/failure.html
+++ /dev/null
@@ -1,17 +0,0 @@
-{% extends "sentry/bases/auth.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-
-{% block title %}{% trans "Confirm Email" %} | {{ block.super }}{% endblock %}
-
-{% block auth_main %}
-  <h2>{% trans "Oops, something happened" %}</h2>
-
-  <p>
-    {% url 'sentry-account-settings' as settings_url %}
-    {% blocktrans %}
-    There was an error confirming your email. Please try again or visit your <a href={{ settings_url }}>Account Settings</a> to resend the verification email.
-    {% endblocktrans %}
-  </p>
-{% endblock %}
diff --git a/src/sentry/templates/sentry/account/confirm_email/send.html b/src/sentry/templates/sentry/account/confirm_email/send.html
deleted file mode 100644
index 3aa124da0a..0000000000
--- a/src/sentry/templates/sentry/account/confirm_email/send.html
+++ /dev/null
@@ -1,21 +0,0 @@
-{% extends "sentry/bases/auth.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-
-{% block title %}{% trans "Confirm Email" %} | {{ block.super }}{% endblock %}
-
-{% block auth_main %}
-
-  {% if has_unverified_emails %}
-    <h2>{% trans "Confirmation sent" %}</h2>
-    <p>{% trans "A verification email has been sent to " %}<strong>{{ request.user.email }}</strong>.</p>
-  {% else %}
-    <h2>{% trans "Already confirmed" %}</h2>
-    <p>
-      {% blocktrans with user_email=request.user.email %}
-      Your email <strong>{{ user_email }}</strong> has already been verified.
-      {% endblocktrans %}
-    </p>
-  {% endif %}
-{% endblock %}
diff --git a/src/sentry/templates/sentry/account/confirm_email/success.html b/src/sentry/templates/sentry/account/confirm_email/success.html
deleted file mode 100644
index e90e3f1c14..0000000000
--- a/src/sentry/templates/sentry/account/confirm_email/success.html
+++ /dev/null
@@ -1,12 +0,0 @@
-{% extends "sentry/bases/auth.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-
-{% block title %}{% trans "Confirm Email" %} | {{ block.super }}{% endblock %}
-
-{% block auth_main %}
-    <h2>{% trans "Confirmation successful" %}</h2>
-    <p>{% trans "Thanks for confirming your email." %}</p>
-    <a class="btn btn-primary" href="{% url 'sentry-login' %}">{% trans "Sign in" %}</a>
-{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/confirm_email.html b/src/sentry/templates/sentry/emails/confirm_email.html
new file mode 100644
index 0000000000..c542a55c6f
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/confirm_email.html
@@ -0,0 +1,12 @@
+{% extends "sentry/emails/base.html" %}
+
+{% load i18n %}
+
+{% block main %}
+    <h3>Confirm Email</h3>
+    {% if is_new_user %}
+        <p>Thanks for signing up for Sentry!</p>
+    {% endif %}
+    <p>Please confirm your email ({{ confirm_email }}) by clicking the button below. This link will expire in 48 hours.</p>
+    <a href="{{ url }}" class="btn">Confirm</a>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/emails/confirm_email.txt b/src/sentry/templates/sentry/emails/confirm_email.txt
index 7017c75fff..9ac2be988f 100644
--- a/src/sentry/templates/sentry/emails/confirm_email.txt
+++ b/src/sentry/templates/sentry/emails/confirm_email.txt
@@ -2,7 +2,7 @@
 Thanks for signing up for Sentry!
 {% endif %}
 
-Please confirm your email ({{ user.username|safe }}) by clicking the link below:
+Please confirm your email ({{ confirm_email|safe }}) by clicking the link below:
 
 {{ url|safe }}
 
diff --git a/src/sentry/templates/sentry/emails/recover_account.html b/src/sentry/templates/sentry/emails/recover_account.html
new file mode 100644
index 0000000000..fabe61b587
--- /dev/null
+++ b/src/sentry/templates/sentry/emails/recover_account.html
@@ -0,0 +1,12 @@
+{% extends "sentry/emails/base.html" %}
+
+{% load i18n %}
+
+{% block main %}
+    <h3>Reset Password</h3>
+    <p>A password reset was requested for your account ({{ user.username|safe }}) on Sentry ({{ domain }}). If you did not authorize this, you may simply ignore this email.</p>
+    <p>To continue with your password reset, simply click the button below, and you will be able to change your password. This link will expire in 48 hours.</p>
+
+    <a href="{{ url|safe }}" class="btn">Reset Password</a>
+</p>
+{% endblock %}
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index 2325627db3..f57d8e8903 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -18,6 +18,7 @@ from django.http import HttpResponseRedirect, Http404
 from django.views.decorators.cache import never_cache
 from django.views.decorators.csrf import csrf_protect
 from django.utils import timezone
+from django.utils.translation import ugettext as _
 from sudo.decorators import sudo_required
 
 from sentry.models import (
@@ -127,27 +128,31 @@ def start_confirm_email(request):
     has_unverified_emails = request.user.has_unverified_emails()
     if has_unverified_emails:
         request.user.send_confirm_emails()
-    return render_to_response('sentry/account/confirm_email/send.html',
-                              {'has_unverified_emails': has_unverified_emails},
-                              request)
+        msg = _('A verification email has been sent to %s.') % request.user.email
+    else:
+        msg = _('Your email (%s) has already been verified.') % request.user.email
+    messages.add_message(request, messages.SUCCESS, msg)
+    return HttpResponseRedirect(reverse('sentry-account-settings'))
 
 
 def confirm_email(request, user_id, hash):
+    msg = _('Thanks for confirming your email')
+    level = messages.SUCCESS
     try:
         email = UserEmail.objects.get(user=user_id, validation_hash=hash)
         if not email.hash_is_valid():
             raise UserEmail.DoesNotExist
     except UserEmail.DoesNotExist:
-        if request.user.is_authenticated() and not request.user.has_unverified_emails():
-            tpl = 'sentry/account/confirm_email/success.html'
-        else:
-            tpl = 'sentry/account/confirm_email/failure.html'
+        if request.user.is_anonymous() or request.user.has_unverified_emails():
+            msg = _('There was an error confirming your email. Please try again or '
+                    'visit your Account Settings to resend the verification email.')
+            level = messages.ERROR
     else:
-        tpl = 'sentry/account/confirm_email/success.html'
         email.is_verified = True
         email.validation_hash = ''
         email.save()
-    return render_to_response(tpl, {}, request)
+    messages.add_message(request, level, msg)
+    return HttpResponseRedirect(reverse('sentry-account-settings'))
 
 
 @csrf_protect
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 6df7d7cafd..199f2cd65a 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -27,6 +27,7 @@ from sentry.digests.notifications import (
     build_digest,
 )
 from sentry.digests.utilities import get_digest_metadata
+from sentry.http import get_server_hostname
 from sentry.models import (
     Activity,
     Event,
@@ -430,3 +431,39 @@ def access_approved(request):
             'team': team,
         },
     ).render()
+
+
+@login_required
+def confirm_email(request):
+    email = request.user.emails.first()
+    email.set_hash()
+    email.save()
+    return MailPreview(
+        html_template='sentry/emails/confirm_email.html',
+        text_template='sentry/emails/confirm_email.txt',
+        context={
+            'confirm_email': 'foo@example.com',
+            'user': request.user,
+            'url': absolute_uri(reverse(
+                'sentry-account-confirm-email',
+                args=[request.user.id, email.validation_hash]
+            )),
+            'is_new_user': True,
+        },
+    ).render()
+
+
+@login_required
+def recover_account(request):
+    return MailPreview(
+        html_template='sentry/emails/recover_account.html',
+        text_template='sentry/emails/recover_account.txt',
+        context={
+            'user': request.user,
+            'url': absolute_uri(reverse(
+                'sentry-account-confirm-email',
+                args=[request.user.id, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX']
+            )),
+            'domain': get_server_hostname(),
+        },
+    ).render()
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 46b1b26d21..486ed31a0c 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -126,6 +126,10 @@ if settings.DEBUG:
             sentry.web.frontend.debug.mail.access_approved),
         url(r'^debug/mail/invitation/$',
             sentry.web.frontend.debug.mail.invitation),
+        url(r'^debug/mail/confirm-email/$',
+            sentry.web.frontend.debug.mail.confirm_email),
+        url(r'^debug/mail/recover-account/$',
+            sentry.web.frontend.debug.mail.recover_account),
         url(r'^debug/embed/error-page/$',
             DebugErrorPageEmbedView.as_view()),
         url(r'^debug/trigger-error/$',
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 15f02170e2..a271361ebd 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -237,8 +237,7 @@ class ConfirmEmailSendTest(TestCase):
     def test_valid(self, send_confirm_email):
         self.login_as(self.user)
         resp = self.client.get(reverse('sentry-account-confirm-email-send'))
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/account/confirm_email/send.html')
+        self.assertRedirects(resp, reverse('sentry-account-settings'), status_code=302)
         send_confirm_email.assert_called_once_with()
 
 
@@ -248,8 +247,7 @@ class ConfirmEmailTest(TestCase):
         self.user.save()
         resp = self.client.get(reverse('sentry-account-confirm-email',
                                        args=[self.user.id, '5b1f2f266efa03b721cc9ea0d4742c5e']))
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/account/confirm_email/failure.html')
+        assert resp.status_code == 302
         email = UserEmail.objects.get(email=self.user.email)
         assert not email.is_verified
 
@@ -260,7 +258,6 @@ class ConfirmEmailTest(TestCase):
         email = self.user.emails.first()
         resp = self.client.get(reverse('sentry-account-confirm-email',
                                        args=[self.user.id, email.validation_hash]))
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/account/confirm_email/success.html')
+        self.assertRedirects(resp, reverse('sentry-account-settings'), status_code=302)
         email = self.user.emails.first()
         assert email.is_verified
