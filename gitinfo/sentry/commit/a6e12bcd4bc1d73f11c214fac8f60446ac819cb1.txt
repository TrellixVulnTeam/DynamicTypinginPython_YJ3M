commit a6e12bcd4bc1d73f11c214fac8f60446ac819cb1
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Nov 27 10:34:05 2018 -0800

    feat(settings): Expose disabled general project settings (#10771)

diff --git a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
index bafd93382a..994f37f11a 100644
--- a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
@@ -4,6 +4,7 @@ import React from 'react';
 import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
 
+import {Panel, PanelAlert, PanelHeader} from 'app/components/panels';
 import {
   changeProjectSlug,
   removeProject,
@@ -12,18 +13,18 @@ import {
 import {fields} from 'app/data/forms/projectGeneralSettings';
 import {getOrganizationState} from 'app/mixins/organizationState';
 import {t, tct} from 'app/locale';
+import Alert from 'app/components/alert';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import Confirm from 'app/components/confirm';
 import Field from 'app/views/settings/components/forms/field';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
-import handleXhrErrorResponse from 'app/utils/handleXhrErrorResponse';
-import {Panel, PanelAlert, PanelHeader} from 'app/components/panels';
 import ProjectsStore from 'app/stores/projectsStore';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 import TextField from 'app/views/settings/components/forms/textField';
+import handleXhrErrorResponse from 'app/utils/handleXhrErrorResponse';
 import recreateRoute from 'app/utils/recreateRoute';
 
 class ProjectGeneralSettings extends AsyncView {
@@ -221,15 +222,24 @@ class ProjectGeneralSettings extends AsyncView {
     let project = this.state.data;
     let {orgId, projectId} = this.props.params;
     let endpoint = `/projects/${orgId}/${projectId}/`;
+    let access = new Set(organization.access);
     let jsonFormProps = {
       additionalFieldProps: {organization},
       features: new Set(organization.features),
-      access: new Set(organization.access),
+      access,
+      disabled: !access.has('project:write'),
     };
 
     return (
       <div>
         <SettingsPageHeader title={t('Project Settings')} />
+        {!access.has('project:write') && (
+          <Alert type="warning" icon="icon-warning-sm">
+            {t(
+              'These settings can only be edited by users with the owner, manager, or admin role.'
+            )}
+          </Alert>
+        )}
 
         <Form
           saveOnBlur
diff --git a/tests/js/spec/views/projectGeneralSettings.spec.jsx b/tests/js/spec/views/projectGeneralSettings.spec.jsx
index e8e281527b..51454e82cc 100644
--- a/tests/js/spec/views/projectGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/projectGeneralSettings.spec.jsx
@@ -185,6 +185,24 @@ describe('projectGeneralSettings', function() {
     );
   });
 
+  it('disables the form for users without write permissions', function() {
+    routerContext.context.organization.access = ['org:read'];
+    let wrapper = mount(
+      <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
+      routerContext
+    );
+
+    expect(wrapper.find('FormField[disabled=false]')).toHaveLength(0);
+    expect(
+      wrapper
+        .find('Alert')
+        .first()
+        .text()
+    ).toBe(
+      'These settings can only be edited by users with the owner, manager, or admin role.'
+    );
+  });
+
   it('changing slug updates ProjectsStore', async function() {
     let params = {orgId: org.slug, projectId: project.slug};
     ProjectsStore.loadInitialData([project]);
