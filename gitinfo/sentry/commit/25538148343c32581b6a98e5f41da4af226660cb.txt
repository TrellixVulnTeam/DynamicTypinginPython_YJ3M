commit 25538148343c32581b6a98e5f41da4af226660cb
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 20 22:22:57 2015 -0400

    Improve missing membership flow
    
    - Correct team propagation on change
    - Allow one-click join/request access via project details

diff --git a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
new file mode 100644
index 0000000000..0396f02813
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
@@ -0,0 +1,74 @@
+import React from "react";
+
+import AlertActions from "../actions/alertActions";
+import api from "../api";
+
+const ERR_JOIN = 'There was an error while trying to join the team.';
+
+var MissingProjectMembership = React.createClass({
+  getInitialState() {
+    return {
+      loading: false,
+      error: false
+    };
+  },
+
+  joinTeam() {
+    this.setState({
+      loading: true
+    });
+
+    api.joinTeam({
+      orgId: this.props.organization.slug,
+      teamId: this.props.team.slug
+    }, {
+      success: () => {
+        this.setState({
+          loading: false,
+          error: false
+        });
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+        AlertActions.addAlert(ERR_JOIN, 'error');
+      }
+    });
+  },
+
+  render() {
+    let {organization, team} = this.props;
+    let openMembership = organization.features.indexOf('open-membership') !== -1;
+
+    return (
+      <div className="container">
+        <div className="box alert-box">
+          <span className="icon icon-exclamation"></span>
+          <p>{"You're not a member of this project."}</p>
+          {openMembership ?
+            <p>To view this data you must first join the {team.name} team.</p>
+          :
+            <p>To view this data you must first request access to the {team.name} team.</p>
+          }
+          <p>
+            {this.state.loading ?
+              <a className="btn btn-default btn-loading btn-disabled">...</a>
+            : (team.isPending ?
+              <a className="btn btn-default btn-disabled">Request Pending</a>
+            : (openMembership ?
+              <a className="btn btn-default"
+                 onClick={this.joinTeam}>Join Team</a>
+            :
+              <a className="btn btn-default"
+                 onClick={this.joinTeam}>Request Access</a>
+            ))}
+          </p>
+        </div>
+      </div>
+    );
+  }
+});
+
+export default MissingProjectMembership;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
index 2b1c2a8690..b68d88d531 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
@@ -79,12 +79,12 @@ var AllTeamsRow = React.createClass({
             <a className="leave-team btn btn-default btn-sm"
                onClick={this.leaveTeam}>Leave Team</a>
           : (team.isPending ?
-            <a className="join-team btn btn-default btn-sm">Request Pending</a>
+            <a className="btn btn-default btn-sm btn-disabled">Request Pending</a>
           : (openMembership ?
-            <a className="join-team btn btn-default btn-sm"
+            <a className="btn btn-default btn-sm"
                onClick={this.joinTeam}>Join Team</a>
           :
-            <a className="join-team btn btn-default btn-sm"
+            <a className="btn btn-default btn-sm"
                onClick={this.joinTeam}>Request Access</a>
           )))}
         </td>
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index fddbf6939e..1b975fbed0 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -6,6 +6,7 @@ import DocumentTitle from "react-document-title";
 import MemberListStore from "../stores/memberListStore";
 import LoadingError from "../components/loadingError";
 import LoadingIndicator from "../components/loadingIndicator";
+import MissingProjectMembership from "../components/missingProjectMembership";
 import ProjectHeader from "../components/projectHeader";
 import OrganizationState from "../mixins/organizationState";
 import RouteMixin from "../mixins/routeMixin";
@@ -22,6 +23,7 @@ var ProjectDetails = React.createClass({
     Reflux.connect(MemberListStore, "memberList"),
     Reflux.listenTo(TeamStore, "onTeamChange"),
     OrganizationState,
+    Reflux.listenTo(TeamStore, "onTeamChange"),
     RouteMixin
   ],
 
@@ -71,32 +73,34 @@ var ProjectDetails = React.createClass({
   },
 
   onTeamChange() {
-    this.setState({
-      teams: TeamStore.getAll()
-    }, this.fetchData);
+    this.fetchData();
   },
 
-  fetchData() {
-    let org = this.context.organization;
-    if (!org) {
-      return;
-    }
+  identifyProject() {
     let router = this.context.router;
     let params = router.getCurrentParams();
     let projectSlug = params.projectId;
     let activeProject = null;
     let activeTeam = null;
-    let isMember = null;
     let teams = TeamStore.getAll();
     teams.forEach((team) => {
       team.projects.forEach((project) => {
         if (project.slug == projectSlug) {
           activeProject = project;
           activeTeam = team;
-          isMember = team.isMember;
         }
       });
     });
+    return [activeTeam, activeProject];
+  },
+
+  fetchData() {
+    let org = this.context.organization;
+    if (!org) {
+      return;
+    }
+    let [activeTeam, activeProject] = this.identifyProject();
+    let isMember = activeTeam && activeTeam.isMember;
 
     if (activeProject && isMember) {
       // TODO(dcramer): move member list to organization level
@@ -115,12 +119,16 @@ var ProjectDetails = React.createClass({
       });
     } else if (isMember === false) {
       this.setState({
+        project: activeProject,
+        team: activeTeam,
         loading: false,
         error: true,
         errorType: ERROR_TYPES.MISSING_MEMBERSHIP
       });
     } else {
       this.setState({
+        project: activeProject,
+        team: activeTeam,
         loading: false,
         error: true,
         errorType: ERROR_TYPES.PROJECT_NOT_FOUND
@@ -161,9 +169,10 @@ var ProjectDetails = React.createClass({
           // TODO(dcramer): add various controls to improve this flow and break it
           // out into a reusable missing access error component
           return (
-            <div className="container">
-              <div className="alert alert-block">You don't have access to this project.</div>
-            </div>
+            <MissingProjectMembership
+                organization={this.getOrganization()}
+                team={this.state.team}
+                project={this.state.project} />
           );
         default:
           return <LoadingError onRetry={this.remountComponent} />;
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 37c429de4c..5aaf3eb604 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -712,7 +712,7 @@
 * ============================================================================
 */
 
-.empty-stream {
+.alert-box, .empty-stream {
   border: 1px solid @trim;
   border-radius: 0 0 2px 2px;
   text-align: center;
