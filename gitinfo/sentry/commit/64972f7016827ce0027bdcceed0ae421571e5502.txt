commit 64972f7016827ce0027bdcceed0ae421571e5502
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 4 00:51:38 2012 -0700

    Correct some mysql test behavior, and add basic coverage for get_accelerated

diff --git a/tests/sentry/buffer/base/tests.py b/tests/sentry/buffer/base/tests.py
index 28588d9cd4..8b6bc65b5c 100644
--- a/tests/sentry/buffer/base/tests.py
+++ b/tests/sentry/buffer/base/tests.py
@@ -35,7 +35,8 @@ class BufferTest(TestCase):
         group = Group.objects.create(project=Project(id=1))
         columns = {'times_seen': 1}
         filters = {'pk': group.pk}
-        the_date = datetime.now() + timedelta(days=5)
+        # strip micrseconds because MySQL doesnt seem to handle them correctly
+        the_date = (datetime.now() + timedelta(days=5)).replace(microsecond=0)
         self.buf.process(Group, columns, filters, {'last_seen': the_date})
         group_ = Group.objects.get(pk=group.pk)
         self.assertEquals(group_.times_seen, group.times_seen + 1)
diff --git a/tests/sentry/buffer/redis/tests.py b/tests/sentry/buffer/redis/tests.py
index 11adb84408..611a576a32 100644
--- a/tests/sentry/buffer/redis/tests.py
+++ b/tests/sentry/buffer/redis/tests.py
@@ -105,7 +105,7 @@ class RedisBufferTest(TestCase):
         group = Group.objects.create(project=Project(id=1))
         columns = {'times_seen': 1}
         filters = {'pk': group.pk}
-        the_date = datetime.now() + timedelta(days=5)
+        the_date = (datetime.now() + timedelta(days=5)).replace(microsecond=0)
         self.buf.conn.set('foo', 1)
         self.buf.conn.hset('extra', 'last_seen', pickle.dumps(the_date))
         self.buf.process(Group, columns, filters)
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index f23dab95b3..425e957e2a 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -5,9 +5,10 @@ from __future__ import absolute_import
 import datetime
 import mock
 
+from sentry.conf import settings
 from sentry.interfaces import Interface
-from sentry.models import Event, Group, Project, MessageCountByMinute, ProjectCountByMinute, \
-  FilterValue, MessageFilterValue
+from sentry.models import Event, Group, Project, MessageCountByMinute, ProjectCountByMinute
+from sentry.utils.db import has_trending
 
 from tests.base import TestCase
 
@@ -202,4 +203,12 @@ class SentryManagerTest(TestCase):
         group = Group.objects.get(pk=event.group_id)
 
         self.assertEquals(group.times_seen, 2)
-        self.assertEquals(group.last_seen, event.datetime)
+        self.assertEquals(group.last_seen, event.datetime.replace(microsecond=0))
+
+    def test_get_accelerrated(self):
+        if not has_trending():
+            return
+        group = Group.objects.from_kwargs(1, message='foo', checksum='a' * 32).group
+        group_list = list(Group.objects.get_accelerated(Group.objects.all(), minutes=settings.MINUTE_NORMALIZATION)[0:100])
+        self.assertEquals(len(group_list), 1)
+        self.assertEquals(group_list[0], group)
