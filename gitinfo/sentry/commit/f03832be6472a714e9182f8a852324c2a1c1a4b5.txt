commit f03832be6472a714e9182f8a852324c2a1c1a4b5
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 25 14:57:27 2015 -0700

    Ensure ACCESS is present in legacy templates

diff --git a/src/sentry/auth/access.py b/src/sentry/auth/access.py
index 81823241e2..3673c9bb1b 100644
--- a/src/sentry/auth/access.py
+++ b/src/sentry/auth/access.py
@@ -60,6 +60,9 @@ class Access(BaseAccess):
 
 
 def from_user(user, organization):
+    if not organization:
+        return DEFAULT
+
     if user.is_superuser:
         return Access(
             scopes=SCOPES,
@@ -69,9 +72,6 @@ def from_user(user, organization):
             sso_is_valid=True,
         )
 
-    if not organization:
-        return DEFAULT
-
     if user.is_anonymous():
         return DEFAULT
 
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index c93c5b6d81..36b0d9ee3f 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -17,6 +17,7 @@ from django.utils.safestring import mark_safe
 
 from sentry import options
 from sentry.api.serializers.base import serialize
+from sentry.auth import access
 from sentry.constants import EVENTS_PER_PAGE
 from sentry.models import AnonymousUser, Project, Team, ProjectOption
 
@@ -120,6 +121,12 @@ def get_default_context(request, existing_context=None, team=None):
     if project:
         context['selectedProject'] = serialize(project, user)
 
+    if not existing_context or 'ACCESS' not in existing_context:
+        context['ACCESSS'] = access.from_user(
+            user=user,
+            organization=organization,
+        ).to_django_context()
+
     return context
 
 
