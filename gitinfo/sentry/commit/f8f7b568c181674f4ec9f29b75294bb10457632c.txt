commit f8f7b568c181674f4ec9f29b75294bb10457632c
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 26 09:43:59 2015 -0800

    Hide remove project button from non-owners

diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 6a76c42b6c..d6977b15d9 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -48,10 +48,12 @@
             </fieldset>
             <div class="form-actions">
                 <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
-                {% if not project.is_internal_project %}
-                    <a href="{% url 'sentry-remove-project' project.organization.slug project.slug %}" class="btn btn-danger">{% trans "Remove Project" %}</a>
-                {% else %}
-                    <p class="pull-right">{% trans "This project cannot be removed. It is used internally by the Sentry server." %}</p>
+                {% if ACCESS.is_owner %}
+                    {% if not project.is_internal_project %}
+                        <a href="{% url 'sentry-remove-project' project.organization.slug project.slug %}" class="btn btn-danger">{% trans "Remove Project" %}</a>
+                    {% else %}
+                        <p class="pull-right">{% trans "This project cannot be removed. It is used internally by the Sentry server." %}</p>
+                    {% endif %}
                 {% endif %}
             </div>
         </form>
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index 236daf4fd5..4d8d547ce0 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -127,6 +127,17 @@ class OrganizationMixin(object):
 
         return project
 
+    def get_access(self, user, organization):
+        if user.is_superuser:
+            access = Access(is_global=True, type=OrganizationMemberType.OWNER)
+        else:
+            om = OrganizationMember.objects.get(
+                user=user, organization=organization
+            )
+            access = Access(is_global=om.has_global_access, type=om.type)
+
+        return access
+
 
 class BaseView(View, OrganizationMixin):
     auth_required = True
@@ -206,17 +217,7 @@ class OrganizationView(BaseView):
         context = super(OrganizationView, self).get_context_data(request)
         context['organization'] = organization
         context['TEAM_LIST'] = self.get_team_list(request.user, organization)
-
-        if request.user.is_superuser:
-            access = Access(is_global=True, type=OrganizationMemberType.OWNER)
-        else:
-            om = OrganizationMember.objects.get(
-                user=request.user, organization=organization
-            )
-            access = Access(is_global=om.has_global_access, type=om.type)
-
-        context['ACCESS'] = access
-
+        context['ACCESS'] = self.get_access(request.user, organization)
         return context
 
     def has_permission(self, request, organization, *args, **kwargs):
@@ -255,6 +256,7 @@ class TeamView(BaseView):
         context['organization'] = organization
         context['team'] = team
         context['TEAM_LIST'] = self.get_team_list(request.user, organization)
+        context['ACCESS'] = self.get_access(request.user, organization)
         return context
 
     def has_permission(self, request, organization, team, *args, **kwargs):
@@ -301,6 +303,7 @@ class ProjectView(BaseView):
         context['project'] = project
         context['team'] = team
         context['TEAM_LIST'] = self.get_team_list(request.user, organization)
+        context['ACCESS'] = self.get_access(request.user, organization)
         return context
 
     def has_permission(self, request, organization, team, project, *args, **kwargs):
