commit e143d6d64bd5e55c516e7e63ad0b067297bf54b1
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Thu May 28 11:43:40 2020 +0200

    ref(ui): Updated thread selector (#19000)

diff --git a/src/sentry/static/sentry/app/components/dropdownButton.tsx b/src/sentry/static/sentry/app/components/dropdownButton.tsx
index f1047c251f..0db877f1fe 100644
--- a/src/sentry/static/sentry/app/components/dropdownButton.tsx
+++ b/src/sentry/static/sentry/app/components/dropdownButton.tsx
@@ -2,8 +2,8 @@ import React from 'react';
 import styled from '@emotion/styled';
 
 import Button from 'app/components/button';
-import InlineSvg from 'app/components/inlineSvg';
 import space from 'app/styles/space';
+import {IconChevron} from 'app/icons';
 
 type Props = React.ComponentProps<typeof Button> & {
   /**
@@ -32,7 +32,7 @@ const DropdownButton = ({
   <StyledButton type="button" isOpen={isOpen} ref={forwardedRef} {...props}>
     {prefix && <LabelText>{prefix}:</LabelText>}
     {children}
-    {showChevron && <StyledChevronDown />}
+    {showChevron && <StyledChevron size="10px" direction={isOpen ? 'up' : 'down'} />}
   </StyledButton>
 );
 
@@ -40,9 +40,7 @@ DropdownButton.defaultProps = {
   showChevron: true,
 };
 
-const StyledChevronDown = styled(props => (
-  <InlineSvg src="icon-chevron-down" {...props} />
-))`
+const StyledChevron = styled(IconChevron)`
   margin-left: 0.33em;
 `;
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
index 22f13cb675..6cb06fdfc4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
@@ -117,10 +117,10 @@ class CrashHeader extends React.Component {
 
     return (
       <Wrapper className="crash-title">
-        <TitleInfo>
+        <TitleWrapper>
           {beforeTitle}
           {titleNode}
-        </TitleInfo>
+        </TitleWrapper>
         <ButtonGroupWrapper>
           <ButtonGroup merged>
             {this.hasSystemFrames() && (
@@ -185,31 +185,34 @@ export default CrashHeader;
 const Wrapper = styled('div')`
   display: flex;
   justify-content: space-between;
-  flex-direction: column;
   flex-wrap: wrap;
   width: 100%;
-  @media (min-width: ${props => props.theme.breakpoints[2]}) {
-    align-items: center;
-    flex-direction: row;
-  }
 `;
 
-const TitleInfo = styled('div')`
+const TitleWrapper = styled('div')`
   display: flex;
-  flex: 1;
-  max-width: 100%;
-  flex-direction: column;
-  @media (min-width: ${props => props.theme.breakpoints[2]}) {
-    flex-direction: row;
-    flex-shrink: 2;
-    align-items: center;
+  flex-wrap: wrap;
+  align-items: center;
+  > * {
+    margin-bottom: ${space(0.5)};
+    :last-child {
+      margin-bottom: 0;
+    }
+  }
+
+  @media (min-width: ${props => props.theme.breakpoints[0]}) {
+    > * {
+      margin-right: ${space(0.5)};
+      margin-bottom: 0;
+      :last-child {
+        margin-right: ${space(1)};
+      }
+    }
   }
 `;
 
 const ButtonGroup = styled(ButtonBar)`
-  padding-top: ${space(1.5)};
-  padding-bottom: ${space(1.5)};
-  padding-right: ${space(1)};
+  padding: ${space(1.5)} ${space(1)} ${space(1.5)} 0;
 `;
 
 const ButtonGroupWrapper = styled('div')`
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/filterThreadInfo.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/filterThreadInfo.tsx
similarity index 87%
rename from src/sentry/static/sentry/app/components/events/interfaces/threads/filterThreadInfo.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/filterThreadInfo.tsx
index c2356b23f5..bf75a349a2 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/filterThreadInfo.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/filterThreadInfo.tsx
@@ -6,19 +6,14 @@ import getThreadStacktrace from './getThreadStacktrace';
 import getRelevantFrame from './getRelevantFrame';
 import trimFilename from './trimFilename';
 
-// TODO(i18n): add traslations here
-const NOT_FOUND_FRAME = '<unknown>';
-
 type ThreadInfo = {
-  label: string;
+  label?: string;
   filename?: string;
 };
 
 function filterThreadInfo(thread: Thread, event: Event): ThreadInfo {
   const stacktrace = getThreadStacktrace(thread, event, false);
-  const threadInfo: ThreadInfo = {
-    label: NOT_FOUND_FRAME,
-  };
+  const threadInfo: ThreadInfo = {};
 
   if (!stacktrace) {
     return threadInfo;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/getRelevantFrame.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/getRelevantFrame.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/events/interfaces/threads/getRelevantFrame.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/getRelevantFrame.tsx
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/getThreadException.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/getThreadException.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/events/interfaces/threads/getThreadException.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/getThreadException.tsx
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/getThreadStacktrace.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/getThreadStacktrace.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/events/interfaces/threads/getThreadStacktrace.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/getThreadStacktrace.tsx
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/header.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/header.tsx
new file mode 100644
index 0000000000..96e11cd7fa
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/header.tsx
@@ -0,0 +1,17 @@
+import React from 'react';
+
+import {t} from 'app/locale';
+
+import {Grid, GridCell} from './styles';
+
+const Header = () => (
+  <Grid>
+    <GridCell>{t('Id')}</GridCell>
+    <GridCell>{t('Name')}</GridCell>
+    <GridCell>{t('Label')}</GridCell>
+    <GridCell>{t('Filename')}</GridCell>
+    <GridCell>{t('Status')}</GridCell>
+  </Grid>
+);
+
+export default Header;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/option.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/option.tsx
new file mode 100644
index 0000000000..5fc6a0cf17
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/option.tsx
@@ -0,0 +1,92 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {Color} from 'app/utils/theme';
+import {t, tct} from 'app/locale';
+import Tooltip from 'app/components/tooltip';
+import TextOverflow from 'app/components/textOverflow';
+import {EntryTypeData} from 'app/types';
+import {IconFire, IconCheckmark} from 'app/icons';
+
+import {Grid, GridCell} from './styles';
+
+type Props = {
+  id: string;
+  details: ThreadInfo;
+  crashedInfo?: EntryTypeData;
+  name?: string | null;
+  crashed?: boolean;
+};
+
+type ThreadInfo = {
+  label?: string;
+  filename?: string;
+};
+
+const Option = ({id, details, name, crashed, crashedInfo}: Props) => {
+  const {label = `<${t('unknown')}>`, filename = `<${t('unknown')}>`} = details;
+  const optionName = name || `<${t('unknown')}>`;
+  return (
+    <Grid>
+      <GridCell>
+        <InnerCell>
+          <Tooltip title={`#${id}`} position="top">
+            <TextOverflow>{`#${id}`}</TextOverflow>
+          </Tooltip>
+        </InnerCell>
+      </GridCell>
+      <GridCell>
+        <InnerCell isBold>
+          <Tooltip title={optionName} position="top">
+            <TextOverflow>{optionName}</TextOverflow>
+          </Tooltip>
+        </InnerCell>
+      </GridCell>
+      <GridCell>
+        <InnerCell color="blue">
+          <Tooltip title={label} position="top">
+            <TextOverflow>{label}</TextOverflow>
+          </Tooltip>
+        </InnerCell>
+      </GridCell>
+      <GridCell>
+        <InnerCell color="purple">
+          <Tooltip title={filename} position="top">
+            <TextOverflow>{filename}</TextOverflow>
+          </Tooltip>
+        </InnerCell>
+      </GridCell>
+      <GridCell>
+        <InnerCell isCentered>
+          {crashed ? (
+            crashedInfo ? (
+              <Tooltip
+                title={`${tct('errored with [crashedInfo]', {
+                  crashedInfo: crashedInfo.values[0].type,
+                })}`}
+                position="top"
+              >
+                <IconFire color="red" />
+              </Tooltip>
+            ) : (
+              <IconFire color="red" />
+            )
+          ) : (
+            <IconCheckmark color="green" size="xs" />
+          )}
+        </InnerCell>
+      </GridCell>
+    </Grid>
+  );
+};
+
+export default Option;
+
+const InnerCell = styled('div')<{isCentered?: boolean; color?: Color; isBold?: boolean}>`
+  display: flex;
+  align-items: center;
+  height: 100%;
+  justify-content: ${p => (p.isCentered ? 'center' : 'flex-start')};
+  font-weight: ${p => (p.isBold ? 600 : 400)};
+  ${p => p.color && `color: ${p.theme[p.color]}`}
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorSelectedOption.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/selectedOption.tsx
similarity index 53%
rename from src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorSelectedOption.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/selectedOption.tsx
index a3a1b87af5..59575f0c30 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorSelectedOption.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/selectedOption.tsx
@@ -3,6 +3,7 @@ import styled from '@emotion/styled';
 
 import TextOverflow from 'app/components/textOverflow';
 import space from 'app/styles/space';
+import {tct, t} from 'app/locale';
 
 type Props = {
   id: string;
@@ -10,31 +11,30 @@ type Props = {
 };
 
 type ThreadInfo = {
-  label: string;
+  label?: string;
   filename?: string;
 };
 
-const ThreadsSelectorSelectedOption = ({id, details}: Props) => (
+const SelectedOption = ({id, details}: Props) => (
   <Wrapper>
-    <StyledThreadID>{`Thread #${id}:`}</StyledThreadID>
-    <StyledOptionLabel>{details.label}</StyledOptionLabel>
+    <ThreadId>{tct('Thread #[id]:', {id})}</ThreadId>
+    <Label>{details?.label || `<${t('unknown')}>`}</Label>
   </Wrapper>
 );
 
-export default ThreadsSelectorSelectedOption;
+export default SelectedOption;
 
 const Wrapper = styled('div')`
   grid-template-columns: auto 1fr;
   display: grid;
 `;
 
-const StyledThreadID = styled(TextOverflow)`
+const ThreadId = styled(TextOverflow)`
   padding-right: ${space(1)};
   max-width: 100%;
   text-align: left;
 `;
 
-// TODO(style): color not yet in the theme
-const StyledOptionLabel = styled(StyledThreadID)`
-  color: #2c58a8;
+const Label = styled(ThreadId)`
+  color: ${p => p.theme.blue};
 `;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/styles.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/styles.tsx
new file mode 100644
index 0000000000..f06bc4f769
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/styles.tsx
@@ -0,0 +1,22 @@
+import styled from '@emotion/styled';
+
+import space from 'app/styles/space';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+
+const Grid = styled('div')`
+  font-size: ${p => p.theme.fontSizeSmall};
+  display: grid;
+  grid-gap: ${space(1)};
+  align-items: center;
+  grid-template-columns: 30px 2.5fr 4fr 0fr 40px;
+  @media (min-width: ${p => p.theme.breakpoints[0]}) {
+    grid-template-columns: 40px 2.5fr 3.5fr 2.5fr 40px;
+  }
+`;
+
+const GridCell = styled('div')`
+  height: 100%;
+  ${overflowEllipsis};
+`;
+
+export {Grid, GridCell};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/threadSelector.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/threadSelector.tsx
new file mode 100644
index 0000000000..35a74c83f1
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/threadSelector.tsx
@@ -0,0 +1,115 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {Thread} from 'app/types/events';
+import {Event, EntryTypeData} from 'app/types';
+import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
+import DropdownButton from 'app/components/dropdownButton';
+import theme from 'app/utils/theme';
+import {t} from 'app/locale';
+
+import filterThreadInfo from './filterThreadInfo';
+import getThreadException from './getThreadException';
+import Option from './option';
+import SelectedOption from './selectedOption';
+import Header from './header';
+
+type Props = {
+  threads: Array<Thread>;
+  activeThread: Thread;
+  event: Event;
+  onChange?: (thread: Thread) => void;
+};
+
+const DROPDOWN_MAX_HEIGHT = 400;
+
+const ThreadSelector = ({threads, event, activeThread, onChange}: Props) => {
+  const getDropDownItem = (thread: Thread) => {
+    const threadInfo = filterThreadInfo(thread, event);
+
+    const dropDownValue = `#${thread.id}: ${thread.name} ${threadInfo.label} ${threadInfo.filename}`;
+    let crashedInfo: undefined | EntryTypeData;
+
+    if (thread.crashed) {
+      crashedInfo = getThreadException(thread, event);
+    }
+
+    return {
+      value: dropDownValue,
+      threadInfo,
+      thread,
+      label: (
+        <Option
+          id={thread.id}
+          details={threadInfo}
+          name={thread.name}
+          crashed={thread.crashed}
+          crashedInfo={crashedInfo}
+        />
+      ),
+    };
+  };
+
+  const handleOnChange = ({thread}) => {
+    if (onChange) {
+      onChange(thread);
+    }
+  };
+
+  return (
+    <StyledDropdownAutoComplete
+      items={threads.map(getDropDownItem)}
+      onSelect={handleOnChange}
+      align="left"
+      alignMenu="left"
+      maxHeight={DROPDOWN_MAX_HEIGHT}
+      placeholder={t('Filter Threads')}
+      emptyMessage={t('You have no threads')}
+      noResultsMessage={t('No threads found')}
+      zIndex={theme.zIndex.dropdown}
+      menuHeader={<Header />}
+      closeOnSelect
+      emptyHidesInput
+    >
+      {({isOpen, selectedItem}) => (
+        <StyledDropdownButton size="small" isOpen={isOpen} align="left">
+          {selectedItem ? (
+            <SelectedOption
+              id={selectedItem.thread.id}
+              details={selectedItem.threadInfo}
+            />
+          ) : (
+            <SelectedOption
+              id={activeThread.id}
+              details={filterThreadInfo(activeThread, event)}
+            />
+          )}
+        </StyledDropdownButton>
+      )}
+    </StyledDropdownAutoComplete>
+  );
+};
+
+export default ThreadSelector;
+
+const StyledDropdownAutoComplete = styled(DropdownAutoComplete)`
+  width: 100%;
+  min-width: 300px;
+  @media (min-width: ${theme.breakpoints[0]}) {
+    width: 500px;
+  }
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+    top: calc(100% - 2px);
+  }
+`;
+
+const StyledDropdownButton = styled(DropdownButton)`
+  > *:first-child {
+    grid-template-columns: 1fr 15px;
+  }
+  width: 100%;
+  min-width: 150px;
+  @media (min-width: ${props => props.theme.breakpoints[3]}) {
+    max-width: 420px;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/trimFilename.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/trimFilename.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/events/interfaces/threads/trimFilename.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/threads/threadSelector/trimFilename.tsx
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx
index a89cbd75b1..7e8d25c2dc 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads/threads.jsx
@@ -12,9 +12,9 @@ import Pills from 'app/components/pills';
 import Pill from 'app/components/pill';
 import {defined} from 'app/utils';
 
-import ThreadsSelector from './threadsSelector';
-import getThreadStacktrace from './getThreadStacktrace';
-import getThreadException from './getThreadException';
+import ThreadSelector from './threadSelector/threadSelector';
+import getThreadStacktrace from './threadSelector/getThreadStacktrace';
+import getThreadException from './threadSelector/getThreadException';
 
 function getIntendedStackView(thread, event) {
   const stacktrace = getThreadStacktrace(thread, event, false);
@@ -191,7 +191,7 @@ class ThreadsInterface extends React.Component {
         <CrashHeader
           title={null}
           beforeTitle={
-            <ThreadsSelector
+            <ThreadSelector
               threads={threads}
               activeThread={activeThread}
               event={this.props.event}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelector.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelector.tsx
deleted file mode 100644
index 481666083c..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelector.tsx
+++ /dev/null
@@ -1,120 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-import {ClassNames} from '@emotion/core';
-
-import {Thread} from 'app/types/events';
-import {Event, EntryTypeData} from 'app/types';
-import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
-import DropdownButton from 'app/components/dropdownButton';
-import space from 'app/styles/space';
-import theme from 'app/utils/theme';
-
-import filterThreadInfo from './filterThreadInfo';
-import getThreadException from './getThreadException';
-import ThreadsSelectorOption from './threadsSelectorOption';
-import ThreadsSelectorSelectedOption from './threadsSelectorSelectedOption';
-
-type Props = {
-  threads: Array<Thread>;
-  activeThread: Thread;
-  event: Event;
-  onChange?: (thread: Thread) => void;
-};
-
-const DROPDOWN_MAX_HEIGHT = 400;
-
-const ThreadsSelector = ({threads, event, activeThread, onChange}: Props) => {
-  const getDropDownItem = (thread: Thread) => {
-    const threadInfo = filterThreadInfo(thread, event);
-
-    const dropDownValue = `#${thread.id}: ${thread.name} ${threadInfo.label} ${threadInfo.filename}`;
-    let crashedInfo: undefined | EntryTypeData;
-
-    if (thread.crashed) {
-      crashedInfo = getThreadException(thread, event);
-    }
-
-    return {
-      value: dropDownValue,
-      threadInfo,
-      thread,
-      label: (
-        <ThreadsSelectorOption
-          id={thread.id}
-          details={threadInfo}
-          name={thread.name}
-          crashed={thread.crashed}
-          crashedInfo={crashedInfo}
-        />
-      ),
-    };
-  };
-
-  const handleOnChange = ({thread}) => {
-    if (onChange) {
-      onChange(thread);
-    }
-  };
-
-  return (
-    <ClassNames>
-      {({css}) => (
-        <DropdownAutoComplete
-          items={threads.map(getDropDownItem)}
-          onSelect={handleOnChange}
-          align="left"
-          alignMenu="left"
-          maxHeight={DROPDOWN_MAX_HEIGHT}
-          className={css`
-            width: 100%;
-            @media (min-width: ${theme.breakpoints[2]}) {
-              width: 700px;
-            }
-          `}
-          rootClassName={css`
-            width: 100%;
-            flex: 1;
-            margin-bottom: ${space(1)};
-            @media (min-width: ${theme.breakpoints[2]}) {
-              width: auto;
-              flex: initial;
-              margin-bottom: ${space(0)};
-            }
-          `}
-        >
-          {({isOpen, selectedItem}) => (
-            <StyledDropdownButton size="small" isOpen={isOpen} align="left">
-              {selectedItem ? (
-                <ThreadsSelectorSelectedOption
-                  id={selectedItem.thread.id}
-                  details={selectedItem.threadInfo}
-                />
-              ) : (
-                <ThreadsSelectorSelectedOption
-                  id={activeThread.id}
-                  details={filterThreadInfo(activeThread, event)}
-                />
-              )}
-            </StyledDropdownButton>
-          )}
-        </DropdownAutoComplete>
-      )}
-    </ClassNames>
-  );
-};
-
-export default ThreadsSelector;
-
-const StyledDropdownButton = styled(DropdownButton)`
-  > *:first-child {
-    grid-template-columns: 1fr 15px;
-  }
-  width: 100%;
-
-  min-width: 150px;
-
-  @media (min-width: ${props => props.theme.breakpoints[3]}) {
-    max-width: 420px;
-  }
-  ${p => p.isOpen && `z-index: ${p.theme.zIndex.dropdownAutocomplete.actor}`};
-`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx b/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx
deleted file mode 100644
index 731c34a32c..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads/threadsSelectorOption.tsx
+++ /dev/null
@@ -1,112 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-
-import {t} from 'app/locale';
-import space from 'app/styles/space';
-import TextOverflow from 'app/components/textOverflow';
-import Tooltip from 'app/components/tooltip';
-import InlineSvg from 'app/components/inlineSvg';
-import {EntryTypeData} from 'app/types';
-
-type Props = {
-  id: string;
-  details: ThreadInfo;
-  crashedInfo?: EntryTypeData;
-  name?: string;
-  crashed?: boolean;
-};
-
-type ThreadInfo = {
-  label: string;
-  filename?: string;
-};
-
-const ThreadsSelectorOption = ({id, name, details, crashed, crashedInfo}: Props) => (
-  <Wrapper>
-    <DetailsWrapper>
-      <StyledNameId>{name ? `#${id}: ${name}` : `#${id}`}</StyledNameId>
-      <LabelsWrapper>
-        <StyledOptionLabel>{details.label}</StyledOptionLabel>
-        {details.filename && (
-          <StyledFileNameWrapper>
-            {'('}
-            <StyledFileName>{details.filename}</StyledFileName>
-            {')'}
-          </StyledFileNameWrapper>
-        )}
-      </LabelsWrapper>
-    </DetailsWrapper>
-    {crashed &&
-      (crashedInfo ? (
-        <Tooltip
-          title={`${t('errored with')} ${crashedInfo.values[0].type}`}
-          position="top"
-        >
-          <StyledCrashIcon src="icon-warning-sm" />
-        </Tooltip>
-      ) : (
-        <StyledCrashIcon src="icon-warning-sm" />
-      ))}
-  </Wrapper>
-);
-
-export default ThreadsSelectorOption;
-
-const Wrapper = styled('div')`
-  grid-template-columns: 1fr 30px;
-  display: grid;
-  align-items: center;
-`;
-
-const DetailsWrapper = styled('div')`
-  max-width: 100%;
-  overflow: hidden;
-  display: grid;
-  @media (min-width: ${props => props.theme.breakpoints[0]}) {
-    grid-template-columns: 50px 1fr;
-  }
-  @media (min-width: ${props => props.theme.breakpoints[2]}) {
-    grid-template-columns: 100px 1fr;
-  }
-`;
-
-const LabelsWrapper = styled('div')`
-  display: grid;
-  width: 100%;
-  grid-gap: ${space(0.5)};
-  @media (min-width: ${props => props.theme.breakpoints[0]}) {
-    grid-template-columns: 1fr 200px;
-  }
-`;
-
-const StyledNameId = styled(TextOverflow)`
-  max-width: 100%;
-  text-align: left;
-  @media (min-width: ${props => props.theme.breakpoints[0]}) {
-    padding-right: ${space(1)};
-  }
-`;
-
-const StyledCrashIcon = styled(InlineSvg)`
-  color: #ec5e44;
-  margin-left: ${space(1)};
-`;
-
-const StyledFileNameWrapper = styled(TextOverflow)`
-  color: ${props => props.theme.purple};
-  display: flex;
-  text-align: left;
-  overflow: hidden;
-`;
-
-const StyledFileName = styled(StyledNameId)`
-  color: ${props => props.theme.purple};
-  padding-right: ${space(0)};
-`;
-
-// TODO(style): color not yet in the theme
-const StyledOptionLabel = styled(StyledNameId)`
-  color: #2c58a8;
-  padding-right: ${space(0)};
-  font-weight: 600;
-`;
diff --git a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
index 033ee2c2cc..45f64753a9 100644
--- a/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationTeamProjects.spec.jsx.snap
@@ -243,33 +243,58 @@ exports[`OrganizationTeamProjects Should render 1`] = `
                                                     className="css-1dw46ju-ButtonLabel edwq9my1"
                                                   >
                                                     Add Project
-                                                    <StyledChevronDown>
-                                                      <Component
-                                                        className="css-1jdzfs8-StyledChevronDown eenpoef0"
+                                                    <StyledChevron
+                                                      direction="down"
+                                                      size="10px"
+                                                    >
+                                                      <ForwardRef
+                                                        className="css-17f1s2z-StyledChevron eenpoef0"
+                                                        direction="down"
+                                                        size="10px"
                                                       >
-                                                        <InlineSvg
-                                                          className="css-1jdzfs8-StyledChevronDown eenpoef0"
-                                                          src="icon-chevron-down"
+                                                        <EmotionCssPropInternal
+                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
+                                                            Object {
+                                                              "$$typeof": Symbol(react.forward_ref),
+                                                              "propTypes": Object {
+                                                                "color": [Function],
+                                                                "size": [Function],
+                                                                "viewBox": [Function],
+                                                              },
+                                                              "render": [Function],
+                                                            }
+                                                          }
+                                                          className="css-17f1s2z-StyledChevron eenpoef0"
+                                                          css={
+                                                            Object {
+                                                              "map": undefined,
+                                                              "name": "7chgxg-IconChevron",
+                                                              "next": undefined,
+                                                              "styles": "transform:rotate(180deg);;label:IconChevron;",
+                                                              "toString": [Function],
+                                                            }
+                                                          }
+                                                          size="10px"
                                                         >
-                                                          <ForwardRef
-                                                            className="eenpoef0 css-eqsg9h-InlineSvg-StyledChevronDown enyz4ql0"
-                                                            src="icon-chevron-down"
+                                                          <ForwardRef(SvgIcon)
+                                                            className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
+                                                            size="10px"
                                                           >
                                                             <svg
-                                                              className="eenpoef0 css-eqsg9h-InlineSvg-StyledChevronDown enyz4ql0"
-                                                              height="1em"
-                                                              viewBox={Object {}}
-                                                              width="1em"
+                                                              className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
+                                                              fill="currentColor"
+                                                              height="10px"
+                                                              viewBox="0 0 16 16"
+                                                              width="10px"
                                                             >
-                                                              <use
-                                                                href="#test"
-                                                                xlinkHref="#test"
+                                                              <path
+                                                                d="M15.23,12.37a.79.79,0,0,1-.53-.22L8,5.44,1.3,12.15a.77.77,0,0,1-1.07,0,.75.75,0,0,1,0-1.06L7.47,3.85a.75.75,0,0,1,1.06,0l7.24,7.24a.75.75,0,0,1,0,1.06A.79.79,0,0,1,15.23,12.37Z"
                                                               />
                                                             </svg>
-                                                          </ForwardRef>
-                                                        </InlineSvg>
-                                                      </Component>
-                                                    </StyledChevronDown>
+                                                          </ForwardRef(SvgIcon)>
+                                                        </EmotionCssPropInternal>
+                                                      </ForwardRef>
+                                                    </StyledChevron>
                                                   </span>
                                                 </ButtonLabel>
                                               </button>
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index cffe941de3..1d153bf2f6 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -671,33 +671,58 @@ exports[`InviteMember should render roles when available and allowed, and handle
                                                           className="css-1dw46ju-ButtonLabel edwq9my1"
                                                         >
                                                           Add Team
-                                                          <StyledChevronDown>
-                                                            <Component
-                                                              className="css-1jdzfs8-StyledChevronDown eenpoef0"
+                                                          <StyledChevron
+                                                            direction="down"
+                                                            size="10px"
+                                                          >
+                                                            <ForwardRef
+                                                              className="css-17f1s2z-StyledChevron eenpoef0"
+                                                              direction="down"
+                                                              size="10px"
                                                             >
-                                                              <InlineSvg
-                                                                className="css-1jdzfs8-StyledChevronDown eenpoef0"
-                                                                src="icon-chevron-down"
+                                                              <EmotionCssPropInternal
+                                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
+                                                                  Object {
+                                                                    "$$typeof": Symbol(react.forward_ref),
+                                                                    "propTypes": Object {
+                                                                      "color": [Function],
+                                                                      "size": [Function],
+                                                                      "viewBox": [Function],
+                                                                    },
+                                                                    "render": [Function],
+                                                                  }
+                                                                }
+                                                                className="css-17f1s2z-StyledChevron eenpoef0"
+                                                                css={
+                                                                  Object {
+                                                                    "map": undefined,
+                                                                    "name": "7chgxg-IconChevron",
+                                                                    "next": undefined,
+                                                                    "styles": "transform:rotate(180deg);;label:IconChevron;",
+                                                                    "toString": [Function],
+                                                                  }
+                                                                }
+                                                                size="10px"
                                                               >
-                                                                <ForwardRef
-                                                                  className="eenpoef0 css-eqsg9h-InlineSvg-StyledChevronDown enyz4ql0"
-                                                                  src="icon-chevron-down"
+                                                                <ForwardRef(SvgIcon)
+                                                                  className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
+                                                                  size="10px"
                                                                 >
                                                                   <svg
-                                                                    className="eenpoef0 css-eqsg9h-InlineSvg-StyledChevronDown enyz4ql0"
-                                                                    height="1em"
-                                                                    viewBox={Object {}}
-                                                                    width="1em"
+                                                                    className="eenpoef0 css-hsco9l-IconChevron-StyledChevron"
+                                                                    fill="currentColor"
+                                                                    height="10px"
+                                                                    viewBox="0 0 16 16"
+                                                                    width="10px"
                                                                   >
-                                                                    <use
-                                                                      href="#test"
-                                                                      xlinkHref="#test"
+                                                                    <path
+                                                                      d="M15.23,12.37a.79.79,0,0,1-.53-.22L8,5.44,1.3,12.15a.77.77,0,0,1-1.07,0,.75.75,0,0,1,0-1.06L7.47,3.85a.75.75,0,0,1,1.06,0l7.24,7.24a.75.75,0,0,1,0,1.06A.79.79,0,0,1,15.23,12.37Z"
                                                                     />
                                                                   </svg>
-                                                                </ForwardRef>
-                                                              </InlineSvg>
-                                                            </Component>
-                                                          </StyledChevronDown>
+                                                                </ForwardRef(SvgIcon)>
+                                                              </EmotionCssPropInternal>
+                                                            </ForwardRef>
+                                                          </StyledChevron>
                                                         </span>
                                                       </ButtonLabel>
                                                     </button>
