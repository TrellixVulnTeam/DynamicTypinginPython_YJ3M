commit 302d9d4c1c7bb4501ae7ee366875d075d360bc04
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Feb 25 16:10:18 2020 -0800

    auth: Rotate session nonce when changing primary email

diff --git a/src/sentry/api/endpoints/user_emails.py b/src/sentry/api/endpoints/user_emails.py
index 67ad3b3d1f..f49123a713 100644
--- a/src/sentry/api/endpoints/user_emails.py
+++ b/src/sentry/api/endpoints/user_emails.py
@@ -171,6 +171,16 @@ class UserEmailsEndpoint(UserEndpoint):
         if has_new_username and not User.objects.filter(username__iexact=new_email).exists():
             update_kwargs["username"] = new_email
 
+        # NOTE(mattrobenolt): When changing your primary email address,
+        # we explicitly want to invalidate existing lost password hashes,
+        # so that in the event of a compromised inbox, an outstanding
+        # password hash can't be used to gain access. We also feel this
+        # is a large enough of a security concern to force logging
+        # out other current sessions.
+        user.clear_lost_passwords()
+        user.refresh_session_nonce(request._request)
+        update_kwargs["session_nonce"] = user.session_nonce
+
         user.update(**update_kwargs)
 
         logger.info(
diff --git a/src/sentry/models/lostpasswordhash.py b/src/sentry/models/lostpasswordhash.py
index 4a53f1abef..102d421e1a 100644
--- a/src/sentry/models/lostpasswordhash.py
+++ b/src/sentry/models/lostpasswordhash.py
@@ -71,6 +71,12 @@ class LostPasswordHash(Model):
 
     @classmethod
     def for_user(cls, user):
+        # NOTE(mattrobenolt): Some security people suggest we invalidate
+        # existing password hashes, but this opens up the possibility
+        # of a DoS vector where then password resets are continually
+        # requested, thus preventing someone from actually resetting
+        # their password.
+        # See: https://github.com/getsentry/sentry/pull/17299
         password_hash, created = cls.objects.get_or_create(user=user)
         if not password_hash.is_valid():
             password_hash.date_added = timezone.now()
