commit 570f3523305759fe53153a25642f0d972e28ad9b
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Apr 6 17:23:32 2016 -0700

    bin/load-mocks populates breadcrumbs again

diff --git a/bin/load-mocks b/bin/load-mocks
index 77ae9d81ea..86bd86b361 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -108,6 +108,14 @@ def create_sample_time_series(event):
         now = now - timedelta(hours=1)
 
 
+epoch = datetime.utcfromtimestamp(0)
+
+
+def milliseconds_ago(now, milliseconds):
+    ago = (now - timedelta(milliseconds=milliseconds))
+    return (ago - epoch).total_seconds()
+
+
 def main(num_events=1):
     user = User.objects.filter(is_superuser=True)[0]
 
@@ -153,6 +161,71 @@ def main(num_events=1):
         }
     )
 
+    now = datetime.now()
+    sample_breadcrumbs = {
+        "values": [
+            {
+                "type": "navigation",
+                "dt": 8200,
+                "timestamp": milliseconds_ago(now, 5200),
+                "data": {
+                    "to": "http://example.com/dashboard/",
+                    "from": "http://example.com/login/"
+                }
+            },
+            {
+                "type": "message",
+                "dt": 5000,
+                "timestamp": milliseconds_ago(now, 4000),
+                "data": {
+                    "message": "This is a message breadcrumb",
+                    "level": "info"
+                }
+            },
+            {
+                "type": "message",
+                "dt": 4000,
+                "timestamp": milliseconds_ago(now, 3300),
+                "data": {
+                    "message": "This is a warning message",
+                    "level": "warning"
+                }
+            },
+            {
+                "type": "message",
+                "dt": 3500,
+                "timestamp": milliseconds_ago(now, 2700),
+                "data": {
+                    "message": "This is an error message",
+                    "level": "error"
+                }
+            },
+            {
+                "type": "http_request",
+                "dt": 3000,
+                "timestamp": milliseconds_ago(now, 1300),
+                "data": {
+                    "url": "http://example.com/foo",
+                    "statusCode": 200,
+                    "method": "POST",
+                    "headers": {
+                        "Referer": "http://example.com",
+                        "Content-Type": "application/json"
+                    }
+                }
+            },
+            {
+                "type": "ui_event",
+                "dt": 1500,
+                "timestamp": milliseconds_ago(now, 1000),
+                "data": {
+                    "type": "click",
+                    "target": "<button name=\"submit\" class=\"btn btn-small\"/>"
+                }
+            }
+        ]
+    }
+
     for team_name, project_names in mocks:
         print('> Mocking team {}'.format(team_name))
         team, _ = Team.objects.get_or_create(
@@ -208,6 +281,7 @@ def main(num_events=1):
                     level=LEVELS.next(),
                     message='This is a mostly useless example %s exception' % platform,
                     checksum=md5(platform + str(_)).hexdigest(),
+                    breadcrumbs=sample_breadcrumbs,
                 )
 
             for _ in range(num_events):
@@ -221,6 +295,7 @@ def main(num_events=1):
                     project=project,
                     platform='javascript',
                     release=release.version,
+                    breadcrumbs=sample_breadcrumbs,
                 )
 
                 event3 = create_sample_event(project, 'java')
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index 6bb1a1d90c..ad26fab972 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -8,19 +8,11 @@ sentry.utils.samples
 from __future__ import absolute_import
 
 import os.path
-from datetime import datetime, timedelta
 
 from sentry.constants import DATA_ROOT
 from sentry.event_manager import EventManager
 from sentry.utils import json
 
-epoch = datetime.utcfromtimestamp(0)
-
-
-def milliseconds_ago(now, milliseconds):
-    ago = (now - timedelta(milliseconds=milliseconds))
-    return (ago - epoch).total_seconds()
-
 
 def load_data(platform, default=None):
     # NOTE: Before editing this data, make sure you understand the context
@@ -32,8 +24,6 @@ def load_data(platform, default=None):
     #   * When a user clicks Test Configuration from notification plugin settings page,
     #     a fake event is generated to go through the pipeline.
 
-    # now = datetime.now()
-
     data = None
     for platform in (platform, default):
         if platform is None:
@@ -91,73 +81,6 @@ def load_data(platform, default=None):
         "method": "GET"
     }
 
-    # We can't send Breadcrumb data as a part of the sample event.
-    # This gets used for all new projects as the "starter" event.
-    #
-    # data['sentry.interfaces.Breadcrumbs'] = {
-    #     "values": [
-    #         {
-    #             "type": "navigation",
-    #             "dt": 8200,
-    #             "timestamp": milliseconds_ago(now, 5200),
-    #             "data": {
-    #                 "to": "http://example.com/dashboard/",
-    #                 "from": "http://example.com/login/"
-    #             }
-    #         },
-    #         {
-    #             "type": "message",
-    #             "dt": 5000,
-    #             "timestamp": milliseconds_ago(now, 4000),
-    #             "data": {
-    #                 "message": "This is a message breadcrumb",
-    #                 "level": "info"
-    #             }
-    #         },
-    #         {
-    #             "type": "message",
-    #             "dt": 4000,
-    #             "timestamp": milliseconds_ago(now, 3300),
-    #             "data": {
-    #                 "message": "This is a warning message",
-    #                 "level": "warning"
-    #             }
-    #         },
-    #         {
-    #             "type": "message",
-    #             "dt": 3500,
-    #             "timestamp": milliseconds_ago(now, 2700),
-    #             "data": {
-    #                 "message": "This is an error message",
-    #                 "level": "error"
-    #             }
-    #         },
-    #         {
-    #             "type": "http_request",
-    #             "dt": 3000,
-    #             "timestamp": milliseconds_ago(now, 1300),
-    #             "data": {
-    #                 "url": "http://example.com/foo",
-    #                 "statusCode": 200,
-    #                 "method": "POST",
-    #                 "headers": {
-    #                     "Referer": "http://example.com",
-    #                     "Content-Type": "application/json"
-    #                 }
-    #             }
-    #         },
-    #         {
-    #             "type": "ui_event",
-    #             "dt": 1500,
-    #             "timestamp": milliseconds_ago(now, 1000),
-    #             "data": {
-    #                 "type": "click",
-    #                 "target": "<button name=\"submit\" class=\"btn btn-small\"/>"
-    #             }
-    #         }
-    #     ]
-    # }
-
     return data
 
 
