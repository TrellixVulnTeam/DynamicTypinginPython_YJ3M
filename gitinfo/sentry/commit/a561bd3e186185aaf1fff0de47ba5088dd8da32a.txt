commit a561bd3e186185aaf1fff0de47ba5088dd8da32a
Author: Kamil Og√≥rek <kamil.ogorek@gmail.com>
Date:   Wed Jan 24 12:42:36 2018 +0100

    feat(javascript): Make module name detection extension agnostic

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index fb69c6883b..6415ddf33c 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -425,9 +425,6 @@ def generate_module(src):
         return UNKNOWN_MODULE
 
     filename, ext = splitext(urlsplit(src).path)
-    if ext not in ('.js', '.jsx', '.coffee'):
-        return UNKNOWN_MODULE
-
     if filename.endswith('.min'):
         filename = filename[:-4]
 
diff --git a/tests/sentry/lang/javascript/test_processor.py b/tests/sentry/lang/javascript/test_processor.py
index e20ccd754c..0f0aaff05c 100644
--- a/tests/sentry/lang/javascript/test_processor.py
+++ b/tests/sentry/lang/javascript/test_processor.py
@@ -383,7 +383,11 @@ class GenerateModuleTest(TestCase):
         assert generate_module('http://example.com/foo/bar.coffee') == 'foo/bar'
         assert generate_module('http://example.com/foo/bar.js?v=1234') == 'foo/bar'
         assert generate_module('/foo/bar.js') == 'foo/bar'
+        assert generate_module('/foo/bar.ts') == 'foo/bar'
         assert generate_module('../../foo/bar.js') == 'foo/bar'
+        assert generate_module('../../foo/bar.ts') == 'foo/bar'
+        assert generate_module('../../foo/bar.awesome') == 'foo/bar'
+        assert generate_module('../../foo/bar') == 'foo/bar'
         assert generate_module('/foo/bar-7d6d00eae0ceccdc7ee689659585d95f.js') == 'foo/bar'
         assert generate_module('/bower_components/foo/bar.js') == 'foo/bar'
         assert generate_module('/node_modules/foo/bar.js') == 'foo/bar'
