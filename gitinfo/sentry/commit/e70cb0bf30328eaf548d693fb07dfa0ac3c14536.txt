commit e70cb0bf30328eaf548d693fb07dfa0ac3c14536
Author: Nola Chen <chen.no@husky.neu.edu>
Date:   Tue Nov 12 13:42:34 2019 -0800

    ref(app-platform): remove SentryAppWebhookError model from state (#15554)
    
    * Delete SentryAppWebhookError model
    
    * Update migration dependency

diff --git a/src/sentry/migrations/0014_delete_sentryappwebhookerror.py b/src/sentry/migrations/0014_delete_sentryappwebhookerror.py
new file mode 100644
index 0000000000..19c24ee824
--- /dev/null
+++ b/src/sentry/migrations/0014_delete_sentryappwebhookerror.py
@@ -0,0 +1,36 @@
+# -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Adding indexes to large tables. These indexes should be created concurrently,
+    #   unfortunately we can't run migrations outside of a transaction until Django
+    #   1.10. So until then these should be run manually.
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+
+    dependencies = [
+        ('sentry', '0013_auto_20191111_1829'),
+    ]
+
+    operations = [
+        migrations.SeparateDatabaseAndState(
+            database_operations=[],
+            state_operations=[
+                migrations.DeleteModel(
+                    name='SentryAppWebhookError',
+                ),
+            ],
+        )
+    ]
diff --git a/src/sentry/models/sentryappwebhookerror.py b/src/sentry/models/sentryappwebhookerror.py
deleted file mode 100644
index 4df4145fbb..0000000000
--- a/src/sentry/models/sentryappwebhookerror.py
+++ /dev/null
@@ -1,34 +0,0 @@
-from __future__ import absolute_import
-
-from django.db import models
-from django.utils import timezone
-
-from sentry.db.models import EncryptedJsonField, BoundedBigIntegerField, Model
-
-
-class SentryAppWebhookError(Model):
-    __core__ = False
-
-    date_added = models.DateTimeField(db_index=True, default=timezone.now)
-
-    sentry_app = BoundedBigIntegerField(db_column="sentry_app_id")
-
-    organization = BoundedBigIntegerField(db_column="organization_id")
-
-    request_body = EncryptedJsonField()
-
-    request_headers = EncryptedJsonField()
-
-    event_type = models.CharField(max_length=64)
-
-    # We need to store this rather than just fetch it from the related sentry app in case the URL is changed
-    webhook_url = models.URLField()
-
-    # This is the body of the error response OR a description of the error (if it wasn't a HTTP response error)
-    response_body = models.TextField()
-
-    response_code = models.PositiveSmallIntegerField(null=True)
-
-    class Meta:
-        app_label = "sentry"
-        db_table = "sentry_sentryappwebhookerror"
