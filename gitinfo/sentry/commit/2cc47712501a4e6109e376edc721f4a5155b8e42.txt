commit 2cc47712501a4e6109e376edc721f4a5155b8e42
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Feb 1 13:11:15 2015 -0800

    Add enable/disable key tests

diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index 4a61b8a604..ba7ed40356 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -8,7 +8,7 @@ import logging
 from django.core.urlresolvers import reverse
 from exam import fixture
 
-from sentry.models import ProjectKey, ProjectOption, TagKey
+from sentry.models import ProjectKey, ProjectKeyStatus, ProjectOption, TagKey
 from sentry.testutils import TestCase
 
 logger = logging.getLogger(__name__)
@@ -74,6 +74,62 @@ class RemoveProjectKeyTest(TestCase):
         assert not ProjectKey.objects.filter(id=self.key.id).exists()
 
 
+class EnableProjectKeyTest(TestCase):
+    def setUp(self):
+        super(EnableProjectKeyTest, self).setUp()
+        self.key = ProjectKey.objects.create(
+            project=self.project,
+            status=ProjectKeyStatus.INACTIVE,
+        )
+
+    @fixture
+    def path(self):
+        return reverse('sentry-enable-project-key', args=[self.organization.slug, self.project.id, self.key.id])
+
+    def test_requires_authentication(self):
+        self.assertRequiresAuthentication(self.path, 'POST')
+
+    def test_does_not_respond_to_get(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 405
+
+    def test_does_enable(self):
+        self.login_as(self.user)
+
+        resp = self.client.post(self.path)
+        assert resp.status_code == 302
+        key = ProjectKey.objects.get(id=self.key.id)
+        assert key.status == ProjectKeyStatus.ACTIVE
+
+
+class DisableProjectKeyTest(TestCase):
+    def setUp(self):
+        super(DisableProjectKeyTest, self).setUp()
+        self.key = ProjectKey.objects.create(
+            project=self.project,
+            status=ProjectKeyStatus.ACTIVE,
+        )
+
+    @fixture
+    def path(self):
+        return reverse('sentry-disable-project-key', args=[self.organization.slug, self.project.id, self.key.id])
+
+    def test_requires_authentication(self):
+        self.assertRequiresAuthentication(self.path, 'POST')
+
+    def test_does_not_respond_to_get(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 405
+
+    def test_does_enable(self):
+        self.login_as(self.user)
+
+        resp = self.client.post(self.path)
+        assert resp.status_code == 302
+        key = ProjectKey.objects.get(id=self.key.id)
+        assert key.status == ProjectKeyStatus.INACTIVE
+
+
 class DashboardTest(TestCase):
     @fixture
     def path(self):
