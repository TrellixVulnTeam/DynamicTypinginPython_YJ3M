commit f2fd7adfb1d17fb0080a2cce70ff59bb228458fa
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Jan 16 11:45:02 2019 -0800

    ref(ui-search): Use Algolia for Docs / FAQ search (#11520)

diff --git a/package.json b/package.json
index ac484d58be..bbb40723ed 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
     "@babel/preset-react": "^7.0.0",
     "@babel/runtime": "^7.0.0",
     "@sentry/browser": "^4.4.2",
+    "algoliasearch": "^3.32.0",
     "babel-core": "^7.0.0-bridge.0",
     "babel-loader": "^8.0.0",
     "babel-plugin-emotion": "9.1.2",
diff --git a/src/sentry/static/sentry/app/actionCreators/modal.jsx b/src/sentry/static/sentry/app/actionCreators/modal.jsx
index f0fe9e7931..4515fb95ec 100644
--- a/src/sentry/static/sentry/app/actionCreators/modal.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/modal.jsx
@@ -132,12 +132,12 @@ export function redirectToProject(newProjectSlug) {
     });
 }
 
-export function openDocsSearchModal() {
-  import(/* webpackChunkName: "DocsSearchModal" */ 'app/components/modals/docsSearchModal')
+export function openHelpSearchModal() {
+  import(/* webpackChunkName: "HelpSearchModal" */ 'app/components/modals/helpSearchModal')
     .then(mod => mod.default)
     .then(Modal => {
       openModal(deps => <Modal {...deps} />, {
-        modalClassName: 'docs-search-modal',
+        modalClassName: 'help-search-modal',
       });
     });
 }
diff --git a/src/sentry/static/sentry/app/components/modals/docsSearchModal.jsx b/src/sentry/static/sentry/app/components/modals/docsSearchModal.jsx
deleted file mode 100644
index 682cb86b42..0000000000
--- a/src/sentry/static/sentry/app/components/modals/docsSearchModal.jsx
+++ /dev/null
@@ -1,144 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled, {css} from 'react-emotion';
-import {flatMap} from 'lodash';
-
-import {t} from 'app/locale';
-import Search from 'app/components/search';
-import DocsSource from 'app/components/search/sources/docsSource';
-import FaqSource from 'app/components/search/sources/faqSource';
-
-const dropdownStyle = css`
-  list-style: none;
-  margin-bottom: 0;
-  width: 100%;
-  border: none;
-  position: initial;
-  box-shadow: none;
-`;
-
-class DocsSearchModal extends React.Component {
-  static propTypes = {
-    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,
-  };
-
-  render() {
-    let {Body} = this.props;
-
-    return (
-      <Body>
-        <Search
-          {...this.props}
-          sources={[DocsSource, FaqSource]}
-          entryPoint="sidebar_help"
-          minSearch={3}
-          maxResults={10}
-          dropdownStyle={dropdownStyle}
-          closeOnSelect={false}
-          renderInput={({getInputProps}) => (
-            <InputWrapper>
-              <Input
-                autoFocus
-                innerRef={ref => (this.searchInput = ref)}
-                {...getInputProps({
-                  type: 'text',
-                  placeholder: t('Search for Docs and FAQs...'),
-                })}
-              />
-            </InputWrapper>
-          )}
-          renderItem={({item}) => {
-            let {result, type} = item;
-            if (type === 'docs') {
-              let link = `https://docs.sentry.io/${result.path}/`;
-              let path = flatMap(result.path.split(/[#\/]/), part => [
-                part,
-                <span className="divider" key={part}>
-                  {' '}
-                  &gt;&gt;{' '}
-                </span>,
-              ]);
-              path.pop();
-              return (
-                <a href={link}>
-                  <SearchResultWrapper type={type}>
-                    <span className="title">{result.title}</span>
-                    <p>{path}</p>
-                  </SearchResultWrapper>
-                </a>
-              );
-            }
-            return (
-              <a href={result.html_url}>
-                <SearchResultWrapper type={type}>
-                  <span className="title">{result.title}</span>
-                </SearchResultWrapper>
-              </a>
-            );
-          }}
-        />
-      </Body>
-    );
-  }
-}
-
-export default DocsSearchModal;
-
-const SearchResultWrapper = styled('li')`
-  position: relative;
-  padding: 8px 14px 8px 70px;
-  cursor: pointer;
-
-  &:before {
-    position: absolute;
-    left: 15px;
-    top: 50%;
-    transform: translateY(-50%);
-    padding: 4px;
-    color: darkgrey;
-    width: 40px;
-    height: 20px;
-    background: 0 0;
-    border: 1px solid;
-    border-radius: 9px;
-    text-align: center;
-    font-size: 11px;
-    line-height: 1;
-    content: ${p => (p.type == 'docs' ? "'Docs'" : "'Q&A'")};
-  }
-
-  p {
-    margin: 2px 0 0;
-    font-size: 13px;
-    color: @gray-light;
-    line-height: 1;
-  }
-
-  .title {
-    font-weight: bold;
-  }
-
-  a {
-    color: black;
-  }
-
-  .divider {
-    opacity: 0.45 !important;
-  }
-`;
-
-const InputWrapper = styled('div')`
-  padding: 2px;
-`;
-
-const Input = styled('input')`
-  width: 100%;
-  padding: 8px;
-  border: none;
-  border-radius: 8px;
-  outline: none;
-
-  &:focus {
-    outline: none;
-  }
-`;
diff --git a/src/sentry/static/sentry/app/components/modals/helpSearchModal.jsx b/src/sentry/static/sentry/app/components/modals/helpSearchModal.jsx
new file mode 100644
index 0000000000..1371f922f7
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/modals/helpSearchModal.jsx
@@ -0,0 +1,71 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled, {css} from 'react-emotion';
+
+import {t} from 'app/locale';
+import Search from 'app/components/search';
+import HelpSource from 'app/components/search/sources/helpSource';
+import theme from 'app/utils/theme';
+
+const dropdownStyle = css`
+  width: 100%;
+  border: transparent;
+  border-top-left-radius: 0;
+  border-top-right-radius: 0;
+  position: initial;
+  box-shadow: none;
+  border-top: 1px solid ${p => theme.borderLight};
+`;
+
+class HelpSearchModal extends React.Component {
+  static propTypes = {
+    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,
+  };
+
+  render() {
+    let {Body} = this.props;
+
+    return (
+      <Body>
+        <Search
+          {...this.props}
+          sources={[HelpSource]}
+          entryPoint="sidebar_help"
+          minSearch={3}
+          maxResults={10}
+          dropdownStyle={dropdownStyle}
+          closeOnSelect={false}
+          renderInput={({getInputProps}) => (
+            <InputWrapper>
+              <Input
+                autoFocus
+                {...getInputProps({
+                  type: 'text',
+                  placeholder: t('Search for Docs and FAQs...'),
+                })}
+              />
+            </InputWrapper>
+          )}
+        />
+      </Body>
+    );
+  }
+}
+
+const InputWrapper = styled('div')`
+  padding: 2px;
+`;
+
+const Input = styled('input')`
+  width: 100%;
+  padding: 8px;
+  border: none;
+  border-radius: 8px;
+  outline: none;
+
+  &:focus {
+    outline: none;
+  }
+`;
+
+export default HelpSearchModal;
diff --git a/src/sentry/static/sentry/app/components/search/searchResult.jsx b/src/sentry/static/sentry/app/components/search/searchResult.jsx
index 9d644d0212..cccd0f4aa7 100644
--- a/src/sentry/static/sentry/app/components/search/searchResult.jsx
+++ b/src/sentry/static/sentry/app/components/search/searchResult.jsx
@@ -30,6 +30,7 @@ class SearchResult extends React.Component {
         'event',
         'plugin',
         'integration',
+        'help',
       ]),
       /**
      * The type of result this is, for example:
@@ -45,8 +46,10 @@ class SearchResult extends React.Component {
         'issue',
         'event',
         'integration',
+        'doc',
+        'faq',
       ]),
-      title: PropTypes.string,
+      title: PropTypes.node,
       description: PropTypes.node,
       model: PropTypes.oneOfType([
         SentryTypes.Organization,
@@ -101,21 +104,24 @@ class SearchResult extends React.Component {
         <div>
           <SearchTitle>{title}</SearchTitle>
         </div>
-
-        <SearchDetail>{description}</SearchDetail>
+        {description && <SearchDetail>{description}</SearchDetail>}
       </React.Fragment>
     );
   }
 
   renderResultType() {
     let {item} = this.props;
-    let {resultType, model} = item;
+    let {resultIcon, resultType, model} = item;
 
     let isSettings = resultType === 'settings';
     let isField = resultType === 'field';
     let isRoute = resultType === 'route';
     let isIntegration = resultType === 'integration';
 
+    if (resultIcon) {
+      return resultIcon;
+    }
+
     if (isSettings) {
       return <ResultTypeIcon src="icon-settings" />;
     }
diff --git a/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx b/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx
index f9749d2b99..b479c972f3 100644
--- a/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 
 import {createFuzzySearch} from 'app/utils/createFuzzySearch';
-import {openSudo, openDocsSearchModal} from 'app/actionCreators/modal';
+import {openSudo, openHelpSearchModal} from 'app/actionCreators/modal';
 import Access from 'app/components/acl/access';
 
 const ACTIONS = [
@@ -28,7 +28,7 @@ const ACTIONS = [
   {
     title: 'Search Documentation and FAQ',
     description: 'Open the Documentation and FAQ search modal.',
-    action: () => openDocsSearchModal(),
+    action: () => openHelpSearchModal(),
   },
 ];
 
diff --git a/src/sentry/static/sentry/app/components/search/sources/docsSource.jsx b/src/sentry/static/sentry/app/components/search/sources/docsSource.jsx
deleted file mode 100644
index fe895d3f38..0000000000
--- a/src/sentry/static/sentry/app/components/search/sources/docsSource.jsx
+++ /dev/null
@@ -1,78 +0,0 @@
-import {debounce} from 'lodash';
-import {withRouter} from 'react-router';
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import withLatestContext from 'app/utils/withLatestContext';
-
-class DocsSource extends React.Component {
-  static propTypes = {
-    // search term
-    query: PropTypes.string,
-
-    /**
-     * Render function that passes:
-     * `isLoading` - loading state
-     * `allResults` - All results returned from all queries: [searchIndex, model, type]
-     * `results` - Results array filtered by `this.props.query`: [searchIndex, model, type]
-     */
-    children: PropTypes.func.isRequired,
-  };
-
-  constructor(props, ...args) {
-    super(props, ...args);
-    this.state = {
-      loading: false,
-      docResults: null,
-    };
-  }
-
-  componentDidMount() {
-    if (typeof this.props.query !== 'undefined') this.doSearch(this.props.query);
-  }
-
-  componentWillReceiveProps(nextProps) {
-    if (nextProps.query !== this.props.query) {
-      this.doSearch(nextProps.query);
-    }
-  }
-
-  // Debounced method to handle querying all API endpoints (when necessary)
-  doSearch = debounce(query => {
-    let term = encodeURIComponent(query);
-    if (term.length > 2) {
-      $.get(
-        `https://rigidsearch.getsentry.net/api/search?q=${term}&page=1&section=hosted`,
-        data => {
-          this.setState({
-            loading: false,
-            docResults: data.items.map(result => ({
-              item: {
-                result,
-                type: 'docs',
-              },
-              matches: null,
-              score: 10, // Should be larger than FaqSource
-            })),
-          });
-        }
-      );
-    } else {
-      this.setState({
-        loading: false,
-        docResults: [],
-      });
-    }
-  }, 300);
-
-  render() {
-    return this.props.children({
-      isLoading: this.state.loading,
-      allResults: this.state.docResults,
-      results: this.state.docResults,
-    });
-  }
-}
-
-export {DocsSource};
-export default withLatestContext(withRouter(DocsSource));
diff --git a/src/sentry/static/sentry/app/components/search/sources/faqSource.jsx b/src/sentry/static/sentry/app/components/search/sources/faqSource.jsx
deleted file mode 100644
index df978baac8..0000000000
--- a/src/sentry/static/sentry/app/components/search/sources/faqSource.jsx
+++ /dev/null
@@ -1,79 +0,0 @@
-import $ from 'jquery';
-import {debounce} from 'lodash';
-import {withRouter} from 'react-router';
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import withLatestContext from 'app/utils/withLatestContext';
-
-class FaqSource extends React.Component {
-  static propTypes = {
-    // search term
-    query: PropTypes.string,
-
-    /**
-     * Render function that passes:
-     * `isLoading` - loading state
-     * `allResults` - All results returned from all queries: [searchIndex, model, type]
-     * `results` - Results array filtered by `this.props.query`: [searchIndex, model, type]
-     */
-    children: PropTypes.func.isRequired,
-  };
-
-  constructor(props, ...args) {
-    super(props, ...args);
-    this.state = {
-      loading: false,
-      results: null,
-    };
-  }
-
-  componentDidMount() {
-    if (typeof this.props.query !== 'undefined') this.doSearch(this.props.query);
-  }
-
-  componentWillReceiveProps(nextProps) {
-    if (nextProps.query !== this.props.query) {
-      this.doSearch(nextProps.query);
-    }
-  }
-
-  // Debounced method to handle querying all API endpoints (when necessary)
-  doSearch = debounce(query => {
-    let term = encodeURIComponent(query);
-    if (term.length > 2) {
-      $.get(
-        `https://sentry.zendesk.com/api/v2/help_center/articles/search.json?query=${term}`,
-        data => {
-          this.setState({
-            loading: false,
-            results: data.results.map(result => ({
-              item: {
-                result,
-                type: 'faq',
-              },
-              matches: null,
-              score: 1, // Should be smaller than DocsSource
-            })),
-          });
-        }
-      );
-    } else {
-      this.setState({
-        loading: false,
-        results: [],
-      });
-    }
-  }, 300);
-
-  render() {
-    return this.props.children({
-      isLoading: this.state.loading,
-      allResults: this.state.results,
-      results: this.state.results,
-    });
-  }
-}
-
-export {FaqSource};
-export default withLatestContext(withRouter(FaqSource));
diff --git a/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx b/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx
new file mode 100644
index 0000000000..fefb711124
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/search/sources/helpSource.jsx
@@ -0,0 +1,173 @@
+import {debounce} from 'lodash';
+import {withRouter} from 'react-router';
+import PropTypes from 'prop-types';
+import React from 'react';
+import algoliasearch from 'algoliasearch';
+import styled from 'react-emotion';
+
+import {
+  ALGOLIA_APP_ID,
+  ALGOLIA_READ_ONLY,
+  ALGOLIA_DOCS_INDEX,
+  ALGOLIA_ZENDESK_INDEX,
+} from 'app/constants';
+import parseHtmlMarks from 'app/utils/parseHtmlMarks';
+import withLatestContext from 'app/utils/withLatestContext';
+
+/**
+ * Use unique markers for highlighting so we can parse these into fuse-style
+ * indicidies.
+ */
+const HIGHLIGHT_TAGS = {
+  highlightPreTag: '<algolia-highlight-0000000000>',
+  highlightPostTag: '</algolia-highlight-0000000000>',
+};
+
+const SNIPPET_LENGTH = 260;
+
+class HelpSource extends React.Component {
+  static propTypes = {
+    // search term
+    query: PropTypes.string,
+
+    /**
+     * Render function that passes:
+     * `isLoading` - loading state
+     * `allResults` - All results returned from all queries: [searchIndex, model, type]
+     * `results` - Results array filtered by `this.props.query`: [searchIndex, model, type]
+     */
+    children: PropTypes.func.isRequired,
+  };
+
+  constructor(props, ...args) {
+    super(props, ...args);
+    this.state = {
+      loading: false,
+      results: null,
+    };
+
+    this.algolia = algoliasearch(ALGOLIA_APP_ID, ALGOLIA_READ_ONLY);
+  }
+
+  componentDidMount() {
+    if (typeof this.props.query !== 'undefined') {
+      this.doSearch(this.props.query);
+    }
+  }
+
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.query !== this.props.query) {
+      this.doSearch(nextProps.query);
+    }
+  }
+
+  async searchAlgolia(query) {
+    this.setState({loading: true});
+
+    const params = {
+      hitsPerPage: 5,
+      ...HIGHLIGHT_TAGS,
+    };
+
+    const response = await this.algolia.search([
+      {
+        query,
+        params,
+        indexName: ALGOLIA_DOCS_INDEX,
+        attributesToSnippet: ['title', `content: ${SNIPPET_LENGTH}`],
+      },
+      {
+        query,
+        params,
+        indexName: ALGOLIA_ZENDESK_INDEX,
+        attributesToSnippet: ['title', `body_safe: ${SNIPPET_LENGTH}`],
+      },
+    ]);
+    const [docResults, faqResults] = response.results;
+
+    const results = [
+      ...docResults.hits.map(result =>
+        buildHit(result, {
+          descriptionKey: 'content',
+          type: 'doc',
+          badge: <DocsBadge />,
+          makeUrl: ({url}) => `https://docs.sentry.io/${url}`,
+        })
+      ),
+      ...faqResults.hits.map(result =>
+        buildHit(result, {
+          descriptionKey: 'body_safe',
+          type: 'faq',
+          badge: <FaqsBadge />,
+          makeUrl: ({id}) => `https://help.sentry.io/hc/en-us/articles/${id}`,
+        })
+      ),
+    ];
+
+    this.setState({loading: false, results});
+  }
+
+  doSearch = debounce(this.searchAlgolia, 300);
+
+  render() {
+    return this.props.children({
+      isLoading: this.state.loading,
+      allResults: this.state.results,
+      results: this.state.results,
+    });
+  }
+}
+
+/**
+ * Maps an Algolia hit response over to a SearchResult item.
+ */
+function buildHit(hit, options) {
+  const {_highlightResult, _snippetResult} = hit;
+  const {descriptionKey, type, makeUrl, badge} = options;
+
+  const title = parseHtmlMarks({
+    key: 'title',
+    htmlString: _highlightResult.title.value,
+    markTags: HIGHLIGHT_TAGS,
+  });
+  const description = parseHtmlMarks({
+    key: 'description',
+    htmlString: _snippetResult[descriptionKey].value,
+    markTags: HIGHLIGHT_TAGS,
+  });
+
+  const item = {
+    sourceType: 'help',
+    resultType: type,
+    resultIcon: badge,
+    title: title.value,
+    description: description.value,
+    to: makeUrl(hit),
+  };
+
+  return {
+    item,
+    matches: [title, description],
+  };
+}
+
+const ResultIcon = styled('div')`
+  display: inline-block;
+  font-size: 0.8em;
+  line-height: 1;
+  padding: 4px 6px;
+  margin-left: 8px;
+  border-radius: 11px;
+  color: #fff;
+`;
+
+const DocsBadge = styled(p => <ResultIcon {...p}>docs</ResultIcon>)`
+  background: ${p => p.theme.blueLight};
+`;
+
+const FaqsBadge = styled(p => <ResultIcon {...p}>faqs</ResultIcon>)`
+  background: ${p => p.theme.greenLight};
+`;
+
+export {HelpSource};
+export default withLatestContext(withRouter(HelpSource));
diff --git a/src/sentry/static/sentry/app/components/sidebar/help.jsx b/src/sentry/static/sentry/app/components/sidebar/help.jsx
index 61201a1a1e..bd98a66438 100644
--- a/src/sentry/static/sentry/app/components/sidebar/help.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/help.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import SentryTypes from 'app/sentryTypes';
-import {openDocsSearchModal} from 'app/actionCreators/modal';
+import {openHelpSearchModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import DropdownMenu from 'app/components/dropdownMenu';
 import InlineSvg from 'app/components/inlineSvg';
@@ -47,7 +47,7 @@ class SidebarHelp extends React.Component {
   };
 
   handleSearchClick = () => {
-    openDocsSearchModal();
+    openHelpSearchModal();
   };
 
   render() {
diff --git a/src/sentry/static/sentry/app/constants/index.jsx b/src/sentry/static/sentry/app/constants/index.jsx
index 1f0dc31ee9..e6a668bc6d 100644
--- a/src/sentry/static/sentry/app/constants/index.jsx
+++ b/src/sentry/static/sentry/app/constants/index.jsx
@@ -140,3 +140,9 @@ export const DEFAULT_RELATIVE_PERIODS = {
 // Special Search characters
 export const NEGATION_OPERATOR = '!';
 export const SEARCH_WILDCARD = '*';
+
+// Algolia documentation searchl
+export const ALGOLIA_APP_ID = 'OOK48W9UCL';
+export const ALGOLIA_READ_ONLY = '2d64ec1106519cbc672d863b0d200782';
+export const ALGOLIA_DOCS_INDEX = 'sentry-docs';
+export const ALGOLIA_ZENDESK_INDEX = 'zendesk_sentry_articles';
diff --git a/src/sentry/static/sentry/app/utils/parseHtmlMarks.jsx b/src/sentry/static/sentry/app/utils/parseHtmlMarks.jsx
new file mode 100644
index 0000000000..745fe83b65
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/parseHtmlMarks.jsx
@@ -0,0 +1,34 @@
+/**
+ * Parses the "marked" html strings into a {key, value, indices} (similar to
+ * Fuse.js) object, where the indices are a set of zero indexed [start, end]
+ * indices for what should be highlighted.
+ *
+ * @param {key} The key of the field, this mimisc the Fuse match object
+ * @param {htmlString} The html string to parse
+ * @param {markTags.highlightPreTag} The left tag
+ * @param {markTags.highlightPostTag} The right tag
+ */
+export default function parseHtmlMarks({key, htmlString, markTags}) {
+  const {highlightPreTag, highlightPostTag} = markTags;
+
+  const indices = [];
+  let value = htmlString;
+
+  // eslint-disable-next-line no-constant-condition
+  while (true) {
+    const openIndex = value.indexOf(highlightPreTag);
+    const openIndexEnd = openIndex + highlightPreTag.length;
+    if (openIndex === -1 || value.indexOf(highlightPostTag) === -1) {
+      break;
+    }
+    value = value.slice(0, openIndex) + value.slice(openIndexEnd);
+
+    const closeIndex = value.indexOf(highlightPostTag);
+    const closeIndexEnd = closeIndex + highlightPostTag.length;
+    value = value.slice(0, closeIndex) + value.slice(closeIndexEnd);
+
+    indices.push([openIndex, closeIndex - 1]);
+  }
+
+  return {key, value, indices};
+}
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 4a260f775a..f0a578513a 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -2212,7 +2212,7 @@ ul.radio-inputs {
 }
 
 // Docs Search
-.docs-search-modal.modal {
+.help-search-modal.modal {
   .modal-content {
     padding: 0;
   }
diff --git a/tests/js/spec/components/modals/__snapshots__/docsSearchModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/docsSearchModal.spec.jsx.snap
deleted file mode 100644
index b0b84e8ced..0000000000
--- a/tests/js/spec/components/modals/__snapshots__/docsSearchModal.spec.jsx.snap
+++ /dev/null
@@ -1,152 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`Docs Search Modal can open docs search modal and search 1`] = `
-<DropdownBox
-  className="css-rrcdsm-dropdownStyle"
->
-  <div
-    className="css-1gdmenf-DropdownBox-dropdownStyle ed7560h0"
-  >
-    <a
-      href="https://help.sentry.io/100"
-      key="undefined-0"
-      onClick={[Function]}
-    >
-      <SearchResultWrapper
-        type="faq"
-      >
-        <li
-          className="css-pxf2zs-SearchResultWrapper er3di120"
-          type="faq"
-        >
-          <span
-            className="title"
-          >
-            100
-          </span>
-        </li>
-      </SearchResultWrapper>
-    </a>
-    <a
-      href="https://help.sentry.io/200"
-      key="undefined-1"
-      onClick={[Function]}
-    >
-      <SearchResultWrapper
-        type="faq"
-      >
-        <li
-          className="css-pxf2zs-SearchResultWrapper er3di120"
-          type="faq"
-        >
-          <span
-            className="title"
-          >
-            200
-          </span>
-        </li>
-      </SearchResultWrapper>
-    </a>
-    <a
-      href="https://docs.sentry.io/clients/node#sourcemaps/"
-      key="undefined-2"
-      onClick={[Function]}
-    >
-      <SearchResultWrapper
-        type="docs"
-      >
-        <li
-          className="css-x4fi4r-SearchResultWrapper er3di120"
-          type="docs"
-        >
-          <span
-            className="title"
-          >
-            Source Maps
-          </span>
-          <p>
-            clients
-            <span
-              className="divider"
-              key="clients"
-            >
-               
-              &gt;&gt;
-               
-            </span>
-            node
-            <span
-              className="divider"
-              key="node"
-            >
-               
-              &gt;&gt;
-               
-            </span>
-            sourcemaps
-          </p>
-        </li>
-      </SearchResultWrapper>
-    </a>
-    <a
-      href="https://docs.sentry.io/clients/java/modules/logback#usage/"
-      key="undefined-3"
-      onClick={[Function]}
-    >
-      <SearchResultWrapper
-        type="docs"
-      >
-        <li
-          className="css-x4fi4r-SearchResultWrapper er3di120"
-          type="docs"
-        >
-          <span
-            className="title"
-          >
-            Usage
-          </span>
-          <p>
-            clients
-            <span
-              className="divider"
-              key="clients"
-            >
-               
-              &gt;&gt;
-               
-            </span>
-            java
-            <span
-              className="divider"
-              key="java"
-            >
-               
-              &gt;&gt;
-               
-            </span>
-            modules
-            <span
-              className="divider"
-              key="modules"
-            >
-               
-              &gt;&gt;
-               
-            </span>
-            logback
-            <span
-              className="divider"
-              key="logback"
-            >
-               
-              &gt;&gt;
-               
-            </span>
-            usage
-          </p>
-        </li>
-      </SearchResultWrapper>
-    </a>
-  </div>
-</DropdownBox>
-`;
diff --git a/tests/js/spec/components/modals/__snapshots__/helpSearchModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/helpSearchModal.spec.jsx.snap
new file mode 100644
index 0000000000..73e1a20e87
--- /dev/null
+++ b/tests/js/spec/components/modals/__snapshots__/helpSearchModal.spec.jsx.snap
@@ -0,0 +1,368 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Docs Search Modal can open help search modal and complete a search 1`] = `
+<DropdownBox
+  className="css-1nf7i25-dropdownStyle"
+>
+  <div
+    className="css-idf3ke-DropdownBox-dropdownStyle ed7560h0"
+  >
+    <SearchResultWrapper
+      highlighted={true}
+      key="Doc result 1-0"
+      onClick={[Function]}
+    >
+      <Component
+        className="css-1a9oeco-SearchResultWrapper-SearchResultWrapper e12rx3zt0"
+        highlighted={true}
+        onClick={[Function]}
+      >
+        <div
+          className="css-1a9oeco-SearchResultWrapper-SearchResultWrapper e12rx3zt0"
+          onClick={[Function]}
+        >
+          <withRouter(SearchResult)
+            highlighted={true}
+            item={
+              Object {
+                "description": "Doc result 1 description",
+                "resultIcon": <DocsBadge />,
+                "resultType": "doc",
+                "sourceType": "help",
+                "title": "Doc result 1",
+                "to": "https://docs.sentry.io/undefined",
+              }
+            }
+            matches={
+              Array [
+                Object {
+                  "indices": Array [],
+                  "key": "title",
+                  "value": "Doc result 1",
+                },
+                Object {
+                  "indices": Array [],
+                  "key": "description",
+                  "value": "Doc result 1 description",
+                },
+              ]
+            }
+          >
+            <SearchResult
+              highlighted={true}
+              item={
+                Object {
+                  "description": "Doc result 1 description",
+                  "resultIcon": <DocsBadge />,
+                  "resultType": "doc",
+                  "sourceType": "help",
+                  "title": "Doc result 1",
+                  "to": "https://docs.sentry.io/undefined",
+                }
+              }
+              location={
+                Object {
+                  "query": Object {},
+                }
+              }
+              matches={
+                Array [
+                  Object {
+                    "indices": Array [],
+                    "key": "title",
+                    "value": "Doc result 1",
+                  },
+                  Object {
+                    "indices": Array [],
+                    "key": "description",
+                    "value": "Doc result 1 description",
+                  },
+                ]
+              }
+              params={
+                Object {
+                  "orgId": "org-slug",
+                }
+              }
+              router={
+                Object {
+                  "createHref": [MockFunction],
+                  "go": [MockFunction],
+                  "goBack": [MockFunction],
+                  "goForward": [MockFunction],
+                  "isActive": [MockFunction],
+                  "listen": [MockFunction],
+                  "location": Object {
+                    "query": Object {},
+                  },
+                  "params": Object {
+                    "orgId": "org-slug",
+                  },
+                  "push": [MockFunction],
+                  "replace": [MockFunction],
+                  "setRouteLeaveHook": [MockFunction],
+                }
+              }
+            >
+              <Flex
+                align="center"
+                justify="space-between"
+              >
+                <Base
+                  align="center"
+                  className="css-v7pzd9"
+                  justify="space-between"
+                >
+                  <div
+                    className="css-v7pzd9"
+                    is={null}
+                  >
+                    <Content>
+                      <Component
+                        className="css-17yjk7u-Content e1deq8q73"
+                      >
+                        <Flex
+                          className="css-17yjk7u-Content e1deq8q73"
+                          direction="column"
+                        >
+                          <Base
+                            className="e1deq8q73 css-1j7ynie-Content"
+                            direction="column"
+                          >
+                            <div
+                              className="e1deq8q73 css-1j7ynie-Content"
+                              is={null}
+                            >
+                              <div>
+                                <SearchTitle>
+                                  <span
+                                    className="css-1iu9oyn-SearchTitle e1deq8q70"
+                                  >
+                                    <span
+                                      key="0"
+                                    >
+                                      Doc result 1
+                                    </span>
+                                  </span>
+                                </SearchTitle>
+                              </div>
+                              <SearchDetail>
+                                <div
+                                  className="css-17e2h30-SearchDetail e1deq8q71"
+                                >
+                                  <span
+                                    key="0"
+                                  >
+                                    Doc result 1 description
+                                  </span>
+                                </div>
+                              </SearchDetail>
+                            </div>
+                          </Base>
+                        </Flex>
+                      </Component>
+                    </Content>
+                    <DocsBadge>
+                      <Component
+                        className="css-ekzoaq-DocsBadge ekxyuw11"
+                      >
+                        <ResultIcon
+                          className="css-ekzoaq-DocsBadge ekxyuw11"
+                        >
+                          <div
+                            className="ekxyuw11 css-f5te32-ResultIcon-DocsBadge ekxyuw10"
+                          >
+                            docs
+                          </div>
+                        </ResultIcon>
+                      </Component>
+                    </DocsBadge>
+                  </div>
+                </Base>
+              </Flex>
+            </SearchResult>
+          </withRouter(SearchResult)>
+        </div>
+      </Component>
+    </SearchResultWrapper>
+    <SearchResultWrapper
+      highlighted={false}
+      key="FAQ result 1-1"
+      onClick={[Function]}
+    >
+      <Component
+        className="css-hmbjwn-SearchResultWrapper e12rx3zt0"
+        highlighted={false}
+        onClick={[Function]}
+      >
+        <div
+          className="css-hmbjwn-SearchResultWrapper e12rx3zt0"
+          onClick={[Function]}
+        >
+          <withRouter(SearchResult)
+            highlighted={false}
+            item={
+              Object {
+                "description": "FAQ result 1 description",
+                "resultIcon": <FaqsBadge />,
+                "resultType": "faq",
+                "sourceType": "help",
+                "title": "FAQ result 1",
+                "to": "https://help.sentry.io/hc/en-us/articles/undefined",
+              }
+            }
+            matches={
+              Array [
+                Object {
+                  "indices": Array [],
+                  "key": "title",
+                  "value": "FAQ result 1",
+                },
+                Object {
+                  "indices": Array [],
+                  "key": "description",
+                  "value": "FAQ result 1 description",
+                },
+              ]
+            }
+          >
+            <SearchResult
+              highlighted={false}
+              item={
+                Object {
+                  "description": "FAQ result 1 description",
+                  "resultIcon": <FaqsBadge />,
+                  "resultType": "faq",
+                  "sourceType": "help",
+                  "title": "FAQ result 1",
+                  "to": "https://help.sentry.io/hc/en-us/articles/undefined",
+                }
+              }
+              location={
+                Object {
+                  "query": Object {},
+                }
+              }
+              matches={
+                Array [
+                  Object {
+                    "indices": Array [],
+                    "key": "title",
+                    "value": "FAQ result 1",
+                  },
+                  Object {
+                    "indices": Array [],
+                    "key": "description",
+                    "value": "FAQ result 1 description",
+                  },
+                ]
+              }
+              params={
+                Object {
+                  "orgId": "org-slug",
+                }
+              }
+              router={
+                Object {
+                  "createHref": [MockFunction],
+                  "go": [MockFunction],
+                  "goBack": [MockFunction],
+                  "goForward": [MockFunction],
+                  "isActive": [MockFunction],
+                  "listen": [MockFunction],
+                  "location": Object {
+                    "query": Object {},
+                  },
+                  "params": Object {
+                    "orgId": "org-slug",
+                  },
+                  "push": [MockFunction],
+                  "replace": [MockFunction],
+                  "setRouteLeaveHook": [MockFunction],
+                }
+              }
+            >
+              <Flex
+                align="center"
+                justify="space-between"
+              >
+                <Base
+                  align="center"
+                  className="css-v7pzd9"
+                  justify="space-between"
+                >
+                  <div
+                    className="css-v7pzd9"
+                    is={null}
+                  >
+                    <Content>
+                      <Component
+                        className="css-17yjk7u-Content e1deq8q73"
+                      >
+                        <Flex
+                          className="css-17yjk7u-Content e1deq8q73"
+                          direction="column"
+                        >
+                          <Base
+                            className="e1deq8q73 css-1j7ynie-Content"
+                            direction="column"
+                          >
+                            <div
+                              className="e1deq8q73 css-1j7ynie-Content"
+                              is={null}
+                            >
+                              <div>
+                                <SearchTitle>
+                                  <span
+                                    className="css-1iu9oyn-SearchTitle e1deq8q70"
+                                  >
+                                    <span
+                                      key="0"
+                                    >
+                                      FAQ result 1
+                                    </span>
+                                  </span>
+                                </SearchTitle>
+                              </div>
+                              <SearchDetail>
+                                <div
+                                  className="css-17e2h30-SearchDetail e1deq8q71"
+                                >
+                                  <span
+                                    key="0"
+                                  >
+                                    FAQ result 1 description
+                                  </span>
+                                </div>
+                              </SearchDetail>
+                            </div>
+                          </Base>
+                        </Flex>
+                      </Component>
+                    </Content>
+                    <FaqsBadge>
+                      <Component
+                        className="css-1ghhjdv-FaqsBadge ekxyuw12"
+                      >
+                        <ResultIcon
+                          className="css-1ghhjdv-FaqsBadge ekxyuw12"
+                        >
+                          <div
+                            className="ekxyuw12 css-1p74sld-ResultIcon-FaqsBadge ekxyuw10"
+                          >
+                            faqs
+                          </div>
+                        </ResultIcon>
+                      </Component>
+                    </FaqsBadge>
+                  </div>
+                </Base>
+              </Flex>
+            </SearchResult>
+          </withRouter(SearchResult)>
+        </div>
+      </Component>
+    </SearchResultWrapper>
+  </div>
+</DropdownBox>
+`;
diff --git a/tests/js/spec/components/modals/docsSearchModal.spec.jsx b/tests/js/spec/components/modals/helpSearchModal.spec.jsx
similarity index 67%
rename from tests/js/spec/components/modals/docsSearchModal.spec.jsx
rename to tests/js/spec/components/modals/helpSearchModal.spec.jsx
index 90d6708bf5..9afa3926f4 100644
--- a/tests/js/spec/components/modals/docsSearchModal.spec.jsx
+++ b/tests/js/spec/components/modals/helpSearchModal.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {mount} from 'enzyme';
-import {openDocsSearchModal} from 'app/actionCreators/modal';
+import {openHelpSearchModal} from 'app/actionCreators/modal';
 import App from 'app/views/app';
 
 describe('Docs Search Modal', function() {
@@ -51,8 +51,37 @@ describe('Docs Search Modal', function() {
     });
   });
 
-  it('can open docs search modal and search', async function() {
-    let wrapper = mount(
+  it('can open help search modal and complete a search', async function() {
+    jest.mock('algoliasearch', () => {
+      const search = jest.fn(params => {
+        const docHits = [
+          {
+            _highlightResult: {
+              title: {value: 'Doc result 1'},
+            },
+            _snippetResult: {
+              content: {value: 'Doc result 1 description'},
+            },
+          },
+        ];
+        const faqHits = [
+          {
+            _highlightResult: {
+              title: {value: 'FAQ result 1'},
+            },
+            _snippetResult: {
+              body_safe: {value: 'FAQ result 1 description'},
+            },
+          },
+        ];
+
+        return Promise.resolve({results: [{hits: docHits}, {hits: faqHits}]});
+      });
+
+      return () => ({search});
+    });
+
+    const wrapper = mount(
       <App params={{orgId: 'org-slug'}}>{<div>placeholder content</div>}</App>,
       TestStubs.routerContext([
         {
@@ -66,7 +95,7 @@ describe('Docs Search Modal', function() {
     // No Modal
     expect(wrapper.find('ModalDialog')).toHaveLength(0);
 
-    openDocsSearchModal();
+    openHelpSearchModal();
     await tick();
     await tick();
     wrapper.update();
@@ -74,32 +103,12 @@ describe('Docs Search Modal', function() {
     // Should have Modal + input
     expect(wrapper.find('ModalDialog')).toHaveLength(1);
 
-    let stub = sinon.stub($, 'get', (url, cb) => {
-      if (url.includes('rigidsearch')) {
-        cb({
-          items: [
-            {path: 'clients/node#sourcemaps', title: 'Source Maps'},
-            {path: 'clients/java/modules/logback#usage', title: 'Usage'},
-          ],
-        });
-      } else {
-        cb({
-          results: [
-            {html_url: 'https://help.sentry.io/100', title: '100'},
-            {html_url: 'https://help.sentry.io/200', title: '200'},
-          ],
-        });
-      }
-    });
-
     wrapper.find('ModalDialog input').simulate('change', {target: {value: 'dummy'}});
 
     await tick();
     wrapper.update();
 
-    expect(wrapper.find('SearchResultWrapper')).toHaveLength(4);
+    expect(wrapper.find('SearchResultWrapper')).toHaveLength(2);
     expect(wrapper.find('SearchSources DropdownBox')).toMatchSnapshot();
-
-    stub.restore();
   });
 });
diff --git a/tests/js/spec/utils/parseHtmlMarks.spec.jsx b/tests/js/spec/utils/parseHtmlMarks.spec.jsx
new file mode 100644
index 0000000000..21afab1f8b
--- /dev/null
+++ b/tests/js/spec/utils/parseHtmlMarks.spec.jsx
@@ -0,0 +1,50 @@
+import parseHtmlMarks from 'app/utils/parseHtmlMarks';
+
+const MARK_TAGS = {
+  highlightPreTag: '<mark>',
+  highlightPostTag: '</mark>',
+};
+
+describe('parseHtmlMarks', function() {
+  it('does nothing to a normal string', function() {
+    const data = {
+      key: 'title',
+      htmlString: 'A string without any marking tags',
+      markTags: MARK_TAGS,
+    };
+
+    expect(parseHtmlMarks(data)).toEqual({
+      key: 'title',
+      value: data.htmlString,
+      indices: [],
+    });
+  });
+
+  it('parses a marked html string', function() {
+    const data = {
+      key: 'title',
+      htmlString: 'A string <mark>with</mark>out any <mark>marking</mark> tags',
+      markTags: MARK_TAGS,
+    };
+
+    expect(parseHtmlMarks(data)).toEqual({
+      key: 'title',
+      value: 'A string without any marking tags',
+      indices: [[9, 12], [21, 27]],
+    });
+  });
+
+  it('soft-fails on a invalid string', function() {
+    const data = {
+      key: 'title',
+      htmlString: 'A string <mark>with</mark>out any <mark>marking tags',
+      markTags: MARK_TAGS,
+    };
+
+    expect(parseHtmlMarks(data)).toEqual({
+      key: 'title',
+      value: 'A string without any <mark>marking tags',
+      indices: [[9, 12]],
+    });
+  });
+});
diff --git a/yarn.lock b/yarn.lock
index ae2931573f..1f594687b2 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -1961,6 +1961,11 @@ address@1.0.3, address@^1.0.1:
   resolved "https://registry.yarnpkg.com/address/-/address-1.0.3.tgz#b5f50631f8d6cec8bd20c963963afb55e06cbce9"
   integrity sha512-z55ocwKBRLryBs394Sm3ushTtBeg6VAeuku7utSoSnsJKvKcnXFIyC6vh27n3rXyxSgkJBBCAvyOn7gSUcTYjg==
 
+agentkeepalive@^2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/agentkeepalive/-/agentkeepalive-2.2.0.tgz#c5d1bd4b129008f1163f236f86e5faea2026e2ef"
+  integrity sha1-xdG9SxKQCPEWPyNvhuX66iAm4u8=
+
 "airbnb-js-shims@^1 || ^2":
   version "2.1.1"
   resolved "https://registry.yarnpkg.com/airbnb-js-shims/-/airbnb-js-shims-2.1.1.tgz#a509611480db7e6d9db62fe2acfaeb473b6842ac"
@@ -2044,6 +2049,27 @@ ajv@^6.5.3, ajv@^6.6.1:
     json-schema-traverse "^0.4.1"
     uri-js "^4.2.2"
 
+algoliasearch@^3.32.0:
+  version "3.32.0"
+  resolved "https://registry.yarnpkg.com/algoliasearch/-/algoliasearch-3.32.0.tgz#5818168c26ff921bd0346a919071bac928b747ce"
+  integrity sha512-C8oQnPTf0wPuyD2jSZwtBAPvz+lHOE7zRIPpgXGBuNt6ZNcC4omsbytG26318rT77a8h4759vmIp6n9p8iw4NA==
+  dependencies:
+    agentkeepalive "^2.2.0"
+    debug "^2.6.8"
+    envify "^4.0.0"
+    es6-promise "^4.1.0"
+    events "^1.1.0"
+    foreach "^2.0.5"
+    global "^4.3.2"
+    inherits "^2.0.1"
+    isarray "^2.0.1"
+    load-script "^1.0.0"
+    object-keys "^1.0.11"
+    querystring-es3 "^0.2.1"
+    reduce "^1.0.1"
+    semver "^5.1.0"
+    tunnel-agent "^0.6.0"
+
 align-text@^0.1.1, align-text@^0.1.3:
   version "0.1.4"
   resolved "https://registry.yarnpkg.com/align-text/-/align-text-0.1.4.tgz#0cd90a561093f35d0a99256c22b7069433fad117"
@@ -5095,6 +5121,14 @@ entities@^1.1.1, entities@~1.1.1:
   resolved "https://registry.yarnpkg.com/entities/-/entities-1.1.1.tgz#6e5c2d0a5621b5dadaecef80b90edfb5cd7772f0"
   integrity sha1-blwtClYhtdra7O+AuQ7ftc13cvA=
 
+envify@^4.0.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/envify/-/envify-4.1.0.tgz#f39ad3db9d6801b4e6b478b61028d3f0b6819f7e"
+  integrity sha512-IKRVVoAYr4pIx4yIWNsz9mOsboxlNXiu7TNBnem/K/uTHdkyzXWDzHCK7UTolqBbgaBz0tQHsD3YNls0uIIjiw==
+  dependencies:
+    esprima "^4.0.0"
+    through "~2.3.4"
+
 enzyme-adapter-react-16@1.3.0:
   version "1.3.0"
   resolved "https://registry.yarnpkg.com/enzyme-adapter-react-16/-/enzyme-adapter-react-16-1.3.0.tgz#4cfba44f8c27256d28e171bdf7a5b5aebce6041b"
@@ -5215,6 +5249,11 @@ es5-shim@^4.5.10:
   resolved "https://registry.yarnpkg.com/es5-shim/-/es5-shim-4.5.11.tgz#f7406770b0eee9ecb717e306b018728114e4e47d"
   integrity sha512-7NY8JWNUZGpg+Ade2/ufJ9N6uMCiII5Oyf1H89/AuJKjYqUBU7i5bSnz0rOcIjNzQkvPJ+TfP19BTDP2FJg9pg==
 
+es6-promise@^4.1.0:
+  version "4.2.5"
+  resolved "https://registry.yarnpkg.com/es6-promise/-/es6-promise-4.2.5.tgz#da6d0d5692efb461e082c14817fe2427d8f5d054"
+  integrity sha512-n6wvpdE43VFtJq+lUDYDBFUwV8TZbuGXLV4D6wKafg13ldznKsyEvatubnmUe31zcvelSzOHF+XbaT+Bl9ObDg==
+
 es6-shim@^0.35.3:
   version "0.35.3"
   resolved "https://registry.yarnpkg.com/es6-shim/-/es6-shim-0.35.3.tgz#9bfb7363feffff87a6cdb6cd93e405ec3c4b6f26"
@@ -5480,7 +5519,7 @@ eventemitter3@^3.1.0:
   resolved "https://registry.yarnpkg.com/eventemitter3/-/eventemitter3-3.1.0.tgz#090b4d6cdbd645ed10bf750d4b5407942d7ba163"
   integrity sha512-ivIvhpq/Y0uSjcHDcOIccjmYjGLcP09MFGE7ysAwkAvkXfpZlC985pH2/ui64DKazbTW/4kN3yqozUxlXzI6cA==
 
-events@^1.0.0:
+events@^1.0.0, events@^1.1.0:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/events/-/events-1.1.1.tgz#9ebdb7635ad099c70dcc4c2a1f5004288e8bd924"
   integrity sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ=
@@ -6045,6 +6084,11 @@ for-own@^0.1.3, for-own@^0.1.4:
   dependencies:
     for-in "^1.0.1"
 
+foreach@^2.0.5:
+  version "2.0.5"
+  resolved "https://registry.yarnpkg.com/foreach/-/foreach-2.0.5.tgz#0bee005018aeb260d0a3af3ae658dd0136ec1b99"
+  integrity sha1-C+4AUBiusmDQo6865ljdATbsG5k=
+
 forever-agent@~0.6.1:
   version "0.6.1"
   resolved "https://registry.yarnpkg.com/forever-agent/-/forever-agent-0.6.1.tgz#fbc71f0c41adeb37f96c577ad1ed42d8fdacca91"
@@ -7576,6 +7620,11 @@ isarray@1.0.0, isarray@^1.0.0, isarray@~1.0.0:
   resolved "https://registry.yarnpkg.com/isarray/-/isarray-1.0.0.tgz#bb935d48582cba168c06834957a54a3e07124f11"
   integrity sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=
 
+isarray@^2.0.1:
+  version "2.0.4"
+  resolved "https://registry.yarnpkg.com/isarray/-/isarray-2.0.4.tgz#38e7bcbb0f3ba1b7933c86ba1894ddfc3781bbb7"
+  integrity sha512-GMxXOiUirWg1xTKRipM0Ek07rX+ubx4nNVElTJdNLYmNO/2YrDkgJGw9CljXn+r4EWiDQg/8lsRdHyg2PJuUaA==
+
 isexe@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"
@@ -8388,6 +8437,11 @@ load-json-file@^4.0.0:
     pify "^3.0.0"
     strip-bom "^3.0.0"
 
+load-script@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/load-script/-/load-script-1.0.0.tgz#0491939e0bee5643ee494a7e3da3d2bac70c6ca4"
+  integrity sha1-BJGTngvuVkPuSUp+PaPSuscMbKQ=
+
 loader-runner@^2.3.0:
   version "2.3.0"
   resolved "https://registry.yarnpkg.com/loader-runner/-/loader-runner-2.3.0.tgz#f482aea82d543e07921700d5a46ef26fdac6b8a2"
@@ -9515,7 +9569,7 @@ object-is@^1.0.1:
   resolved "https://registry.yarnpkg.com/object-is/-/object-is-1.0.1.tgz#0aa60ec9989a0b3ed795cf4d06f62cf1ad6539b6"
   integrity sha1-CqYOyZiaCz7Xlc9NBvYs8a1lObY=
 
-object-keys@^1.0.11, object-keys@^1.0.12:
+object-keys@^1.0.11, object-keys@^1.0.12, object-keys@~1.0.0:
   version "1.0.12"
   resolved "https://registry.yarnpkg.com/object-keys/-/object-keys-1.0.12.tgz#09c53855377575310cca62f55bb334abff7b3ed2"
   integrity sha512-FTMyFUm2wBcGHnH2eXmz7tC6IwlqQZ6mVZ+6dm6vZ4IQIHjs6FdNsQBuKGPuUUUY6NfJw2PshC08Tn6LzLDOag==
@@ -10881,7 +10935,7 @@ query-string@^4.2.2, query-string@^4.3.2:
     object-assign "^4.1.0"
     strict-uri-encode "^1.0.0"
 
-querystring-es3@^0.2.0, querystring-es3@~0.2.0:
+querystring-es3@^0.2.0, querystring-es3@^0.2.1, querystring-es3@~0.2.0:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/querystring-es3/-/querystring-es3-0.2.1.tgz#9ec61f79049875707d69414596fd907a4d711e73"
   integrity sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=
@@ -11577,6 +11631,13 @@ redent@^2.0.0:
     indent-string "^3.0.0"
     strip-indent "^2.0.0"
 
+reduce@^1.0.1:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/reduce/-/reduce-1.0.1.tgz#14fa2e5ff1fc560703a020cbb5fbaab691565804"
+  integrity sha1-FPouX/H8VgcDoCDLtfuqtpFWWAQ=
+  dependencies:
+    object-keys "~1.0.0"
+
 redux@^4.0.1:
   version "4.0.1"
   resolved "https://registry.yarnpkg.com/redux/-/redux-4.0.1.tgz#436cae6cc40fbe4727689d7c8fae44808f1bfef5"
@@ -12205,16 +12266,16 @@ selfsigned@^1.9.1:
   resolved "https://registry.yarnpkg.com/semver/-/semver-5.4.1.tgz#e059c09d8571f0540823733433505d3a2f00b18e"
   integrity sha512-WfG/X9+oATh81XtllIo/I8gOiY9EXRdv1cQdyykeXK17YcUW3EXUAi2To4pcH6nZtJPr7ZOpM5OMyWJZm+8Rsg==
 
+semver@^5.1.0, semver@^5.5.1, semver@^5.6.0:
+  version "5.6.0"
+  resolved "https://registry.yarnpkg.com/semver/-/semver-5.6.0.tgz#7e74256fbaa49c75aa7c7a205cc22799cac80004"
+  integrity sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==
+
 semver@^5.4.1, semver@^5.5.0:
   version "5.5.0"
   resolved "https://registry.yarnpkg.com/semver/-/semver-5.5.0.tgz#dc4bbc7a6ca9d916dee5d43516f0092b58f7b8ab"
   integrity sha512-4SJ3dm0WAwWy/NVeioZh5AntkdJoWKxHxcmyP622fOkgHa4z3R0TdBJICINyaSDE6uNwVc8gZr+ZinwZAH4xIA==
 
-semver@^5.5.1, semver@^5.6.0:
-  version "5.6.0"
-  resolved "https://registry.yarnpkg.com/semver/-/semver-5.6.0.tgz#7e74256fbaa49c75aa7c7a205cc22799cac80004"
-  integrity sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==
-
 send@0.16.1:
   version "0.16.1"
   resolved "https://registry.yarnpkg.com/send/-/send-0.16.1.tgz#a70e1ca21d1382c11d0d9f6231deb281080d7ab3"
@@ -13383,7 +13444,7 @@ through2@^2.0.0:
     readable-stream "^2.1.5"
     xtend "~4.0.1"
 
-through@^2.3.6:
+through@^2.3.6, through@~2.3.4:
   version "2.3.8"
   resolved "https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5"
   integrity sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=
