commit c59695046a41c4e93dfb6da3f9677428969a9d51
Author: Dan Fuller <dfuller@sentry.io>
Date:   Mon Feb 25 13:58:16 2019 -0800

    fix(api): Use `is_active_superuser` method rather than `request.user.is_superuser` (SEN-172)
    
    We need to use `is_active_superuser` so that we correctly prompt superusers to enter their password
    from time to time to get elevated permissions.

diff --git a/src/sentry/api/bases/sentryapps.py b/src/sentry/api/bases/sentryapps.py
index cd551a73a0..58664d3da0 100644
--- a/src/sentry/api/bases/sentryapps.py
+++ b/src/sentry/api/bases/sentryapps.py
@@ -6,6 +6,7 @@ from sentry.utils.sdk import configure_scope
 from sentry.api.authentication import ClientIdSecretAuthentication
 from sentry.api.base import Endpoint
 from sentry.api.permissions import SentryPermission
+from sentry.auth.superuser import is_active_superuser
 from sentry.models import SentryApp, SentryAppInstallation, Organization
 
 
@@ -44,7 +45,7 @@ class SentryAppsPermission(SentryPermission):
 
         self.determine_access(request, organization)
 
-        if request.user.is_superuser:
+        if is_active_superuser(request):
             return True
 
         # User must be a part of the Org they're trying to create the app in.
@@ -111,7 +112,7 @@ class SentryAppPermission(SentryPermission):
 
         self.determine_access(request, sentry_app.owner)
 
-        if request.user.is_superuser:
+        if is_active_superuser(request):
             return True
 
         # User must be in the Org who owns the app.
@@ -162,7 +163,7 @@ class SentryAppInstallationsPermission(SentryPermission):
 
         self.determine_access(request, organization)
 
-        if request.user.is_superuser:
+        if is_active_superuser(request):
             return True
 
         if organization not in request.user.get_orgs():
@@ -178,7 +179,7 @@ class SentryAppInstallationsBaseEndpoint(Endpoint):
     permission_classes = (SentryAppInstallationsPermission, )
 
     def convert_args(self, request, organization_slug, *args, **kwargs):
-        if request.user.is_superuser:
+        if is_active_superuser(request):
             organizations = Organization.objects.all()
         else:
             organizations = request.user.get_orgs()
@@ -206,7 +207,7 @@ class SentryAppInstallationPermission(SentryPermission):
 
         self.determine_access(request, installation.organization)
 
-        if request.user.is_superuser:
+        if is_active_superuser(request):
             return True
 
         if installation.organization not in request.user.get_orgs():
diff --git a/src/sentry/api/endpoints/organization_health.py b/src/sentry/api/endpoints/organization_health.py
index 692aaf0e68..33bf377e1c 100644
--- a/src/sentry/api/endpoints/organization_health.py
+++ b/src/sentry/api/endpoints/organization_health.py
@@ -10,6 +10,7 @@ from django.utils import timezone
 from sentry.api.bases import OrganizationEndpoint, EnvironmentMixin
 from sentry.api.utils import get_date_range_from_params, InvalidParams
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.auth.superuser import is_active_superuser
 from sentry.models import (
     Project, ProjectStatus, OrganizationMemberTeam,
     Environment,
@@ -40,7 +41,7 @@ class OrganizationHealthEndpointBase(OrganizationEndpoint, EnvironmentMixin):
         project_ids = set(map(int, request.GET.getlist('project')))
 
         before = project_ids.copy()
-        if request.user.is_superuser:
+        if is_active_superuser(request):
             # Superusers can query any projects within the organization
             qs = Project.objects.filter(
                 organization=organization,
diff --git a/src/sentry/api/endpoints/sentry_apps.py b/src/sentry/api/endpoints/sentry_apps.py
index 8aa96c12af..fac9ef3fd5 100644
--- a/src/sentry/api/endpoints/sentry_apps.py
+++ b/src/sentry/api/endpoints/sentry_apps.py
@@ -16,7 +16,7 @@ class SentryAppsEndpoint(SentryAppsBaseEndpoint):
     def get(self, request):
         return self.paginate(
             request=request,
-            queryset=SentryApp.visible_for_user(request.user),
+            queryset=SentryApp.visible_for_user(request),
             order_by='-date_added',
             paginator_cls=OffsetPaginator,
             on_results=lambda x: serialize(x, request.user),
diff --git a/src/sentry/models/sentryapp.py b/src/sentry/models/sentryapp.py
index f617cb651e..9ce907a3a9 100644
--- a/src/sentry/models/sentryapp.py
+++ b/src/sentry/models/sentryapp.py
@@ -114,10 +114,12 @@ class SentryApp(ParanoidModel, HasApiScopes):
         db_table = 'sentry_sentryapp'
 
     @classmethod
-    def visible_for_user(cls, user):
-        if user.is_superuser:
+    def visible_for_user(cls, request):
+        from sentry.auth.superuser import is_active_superuser
+        if is_active_superuser(request):
             return cls.objects.all()
 
+        user = request.user
         return cls.objects.filter(
             Q(status=SentryAppStatus.PUBLISHED) | Q(owner__in=user.get_orgs()),
         )
diff --git a/src/sentry/templatetags/sentry_react.py b/src/sentry/templatetags/sentry_react.py
index d7d4f92956..91979c9515 100644
--- a/src/sentry/templatetags/sentry_react.py
+++ b/src/sentry/templatetags/sentry_react.py
@@ -11,10 +11,10 @@ from pkg_resources import parse_version
 from sentry import features, options
 from sentry.api.serializers.base import serialize
 from sentry.api.serializers.models.user import DetailedUserSerializer
+from sentry.auth.superuser import is_active_superuser
 from sentry.utils import auth, json
 from sentry.utils.email import is_smtp_enabled
 from sentry.utils.assets import get_asset_url
-from sentry.utils.functional import extract_lazy_object
 from sentry.utils.support import get_support_mail
 from sentry.templatetags.sentry_dsn import get_public_dsn
 
@@ -70,22 +70,16 @@ def _get_statuspage():
 @register.simple_tag(takes_context=True)
 def get_react_config(context):
     if 'request' in context:
-        user = getattr(context['request'], 'user', None) or AnonymousUser()
-        messages = get_messages(context['request'])
-        session = getattr(context['request'], 'session', None)
-        try:
-            is_superuser = context['request'].is_superuser()
-        except AttributeError:
-            is_superuser = False
+        request = context['request']
+        user = getattr(request, 'user', None) or AnonymousUser()
+        messages = get_messages(request)
+        session = getattr(request, 'session', None)
+        is_superuser = is_active_superuser(request)
     else:
         user = None
         messages = []
         is_superuser = False
 
-    if user:
-        user = extract_lazy_object(user)
-        is_superuser = user.is_superuser
-
     enabled_features = []
     if features.has('organizations:create', actor=user):
         enabled_features.append('organizations:create')
diff --git a/tests/sentry/api/endpoints/test_sentry_app_details.py b/tests/sentry/api/endpoints/test_sentry_app_details.py
index 0cc79d8a61..97e45f6305 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_details.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_details.py
@@ -203,7 +203,7 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
 class DeleteSentryAppDetailsTest(SentryAppDetailsTest):
     @with_feature('organizations:sentry-apps')
     def test_delete_unpublished_app(self):
-        self.login_as(user=self.superuser)
+        self.login_as(user=self.superuser, superuser=True)
         url = reverse(
             'sentry-api-0-sentry-app-details',
             args=[self.unpublished_app.slug],
@@ -213,7 +213,7 @@ class DeleteSentryAppDetailsTest(SentryAppDetailsTest):
 
     @with_feature('organizations:sentry-apps')
     def test_cannot_delete_published_app(self):
-        self.login_as(user=self.superuser)
+        self.login_as(user=self.superuser, superuser=True)
         url = reverse(
             'sentry-api-0-sentry-app-details',
             args=[self.published_app.slug],
diff --git a/tests/sentry/api/endpoints/test_sentry_apps.py b/tests/sentry/api/endpoints/test_sentry_apps.py
index 78587302b3..298357b78a 100644
--- a/tests/sentry/api/endpoints/test_sentry_apps.py
+++ b/tests/sentry/api/endpoints/test_sentry_apps.py
@@ -40,7 +40,7 @@ class SentryAppsTest(APITestCase):
 class GetSentryAppsTest(SentryAppsTest):
     @with_feature('organizations:sentry-apps')
     def test_superuser_sees_all_apps(self):
-        self.login_as(user=self.superuser)
+        self.login_as(user=self.superuser, superuser=True)
 
         response = self.client.get(self.url, format='json')
         response_uuids = set(o['uuid'] for o in response.data)
