commit c2672da8a9a813d799c390a3e932a6c1bd764aef
Author: Ben Vinegar <benvinegar@users.noreply.github.com>
Date:   Wed Jul 27 15:21:26 2016 -0700

    Sample data fixtures can now specify breadcrumbs (#3742)
    
    /cc @getsentry/team

diff --git a/bin/load-mocks b/bin/load-mocks
index 138aeddcee..56f79f13c6 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -174,99 +174,6 @@ def create_sample_time_series(event, release=None):
         now = now - timedelta(hours=1)
 
 
-epoch = datetime.utcfromtimestamp(0)
-
-
-def milliseconds_ago(now, milliseconds):
-    ago = (now - timedelta(milliseconds=milliseconds))
-    return (ago - epoch).total_seconds()
-
-
-def get_sample_breadcrumbs(prior_event_id=None):
-    now = datetime.now()
-    sample_breadcrumbs = {
-        "values": [
-            {
-                "type": "navigation",
-                "timestamp": milliseconds_ago(now, 5200),
-                "category": "react-router",
-                "data": {
-                    "from": "/login/",
-                    "to": "/dashboard/",
-                }
-            },
-            {
-                "timestamp": milliseconds_ago(now, 4000),
-                "message": "This is an info log message",
-                "category": "django"
-            },
-            {
-                "timestamp": milliseconds_ago(now, 3300),
-                "message": "This is a warning log message",
-                "level": "warning",
-                "category": 'django'
-            },
-            {
-                "timestamp": milliseconds_ago(now, 2700),
-                "message": "This is an error log message",
-                "level": "error",
-                "category": 'django'
-            },
-            {
-                "timestamp": milliseconds_ago(now, 2700),
-                "message": "This is a critical log message",
-                "level": "critical",
-                "category": 'django'
-            },
-            {
-                "timestamp": milliseconds_ago(now, 2700),
-                "message": "This is a debug log message",
-                "level": "debug",
-                "category": 'django',
-                "data": {
-                    "foo": "bar",
-                    "baz": "blah"
-                }
-            },
-            {
-                "type": "http",
-                "category": "requests",
-                "timestamp": milliseconds_ago(now, 1300),
-                "data": {
-                    "reason": "OK",
-                    "status_code": 200,
-                    "url": "Http://example.com/",
-                    "method": "POST"
-                }
-            },
-            {
-                "type": "query",
-                "category": "django",
-                "timestamp": milliseconds_ago(now, 1200),
-                "message": u'SELECT "auth_user"."password", "auth_user"."last_login", "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."is_managed", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1',
-                "duration": 0.002
-            },
-            {
-                "type": "ui",
-                "timestamp": milliseconds_ago(now, 1000),
-                "message": "div > form[name=\"post\"] > button.btn.btn-small[name=\"submit\"]",
-                "category": 'ui.click'
-            }
-        ]
-    }
-
-    if prior_event_id:
-        sample_breadcrumbs["values"].insert(2, {
-            "type": "error",
-            "timestamp": milliseconds_ago(now, 3000),
-            "message": "TypeError: something broke earlier",
-            "category": "error",
-            "event_id": prior_event_id
-        })
-
-    return sample_breadcrumbs
-
-
 def main(num_events=1):
     user = User.objects.filter(is_superuser=True)[0]
 
@@ -370,7 +277,6 @@ def main(num_events=1):
                     environment=ENVIRONMENTS.next(),
                     message='This is a mostly useless example %s exception' % platform,
                     checksum=md5(platform + str(_)).hexdigest(),
-                    breadcrumbs=get_sample_breadcrumbs(prior_event_id=last_event.id if last_event else None),
                 )
 
             for _ in range(num_events):
@@ -385,7 +291,6 @@ def main(num_events=1):
                     project=project,
                     platform='javascript',
                     release=release.version,
-                    breadcrumbs=get_sample_breadcrumbs(prior_event_id=event1.event_id),
                     environment=ENVIRONMENTS.next(),
                     sdk={
                         'name': 'raven-js',
diff --git a/src/sentry/data/samples/javascript.json b/src/sentry/data/samples/javascript.json
index 306407aa2e..8e369d2a67 100644
--- a/src/sentry/data/samples/javascript.json
+++ b/src/sentry/data/samples/javascript.json
@@ -1,9 +1,4 @@
 {
-    "errors": [
-        {"type": "invalid_attribute", "name": "foobar"},
-        {"type": "invalid_attribute", "name": "foobar"},
-        {"type": "invalid_data", "name": "event_id", "value": "86f7e437faa5a7fce15d1ddcb9eaeaea377667b8"}
-    ],
     "sentry.interfaces.Exception": {
         "values": [
             {
@@ -148,5 +143,68 @@
                 "module": null
             }
         ]
+    },
+    "sentry.interfaces.Breadcrumbs": {
+        "values": [
+            {
+                "type": "navigation",
+                "timestamp": 1463071692.0,
+                "category": "react-router",
+                "data": {
+                    "from": "/login/",
+                    "to": "/dashboard/"
+                }
+            },
+            {
+                "timestamp": 1463072692.0,
+                "message": "This is an info log message",
+                "category": "console"
+            },
+            {
+                "timestamp": 1463073692.0,
+                "message": "This is a warning log message",
+                "level": "warning",
+                "category": "console"
+            },
+            {
+                "timestamp": 1463074692.0,
+                "message": "This is an error log message",
+                "level": "error",
+                "category": "console"
+            },
+            {
+                "timestamp": 1463075692.0,
+                "message": "This is a critical log message",
+                "level": "critical",
+                "category": "console"
+            },
+            {
+                "timestamp": 1463076692.0,
+                "message": "This is a debug log message",
+                "level": "debug",
+                "category": "console",
+                "data": {
+                    "foo": "bar",
+                    "baz": "blah"
+                }
+            },
+            {
+                "type": "http",
+                "category": "ajax",
+                "timestamp": 1463077692.0,
+                "data": {
+                    "reason": "OK",
+                    "status_code": 200,
+                    "url": "Http://example.com/",
+                    "method": "POST"
+                }
+            },
+            {
+                "type": "ui",
+                "timestamp": 1463078692.0,
+                "message": "div > form[name=\"post\"] > button.btn.btn-small[name=\"submit\"]",
+                "category": "ui.click"
+            }
+        ]
     }
 }
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index dd6536242a..d2a0cf9819 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -8,12 +8,21 @@ sentry.utils.samples
 from __future__ import absolute_import
 
 import os.path
+from datetime import datetime, timedelta
 
 from sentry.constants import DATA_ROOT
 from sentry.event_manager import EventManager
 from sentry.utils import json
 
 
+epoch = datetime.utcfromtimestamp(0)
+
+
+def milliseconds_ago(now, milliseconds):
+    ago = (now - timedelta(milliseconds=milliseconds))
+    return (ago - epoch).total_seconds()
+
+
 def load_data(platform, default=None):
     # NOTE: Before editing this data, make sure you understand the context
     # in which its being used. It is NOT only used for local development and
@@ -81,6 +90,19 @@ def load_data(platform, default=None):
         "method": "GET"
     }
 
+    now = datetime.utcnow()
+
+    # Make breadcrumb timestamps relative to right now so they make sense
+    breadcrumbs = data.get('sentry.interfaces.Breadcrumbs')
+    if breadcrumbs is not None:
+        duration = 1000
+        values = breadcrumbs['values']
+        for value in reversed(values):
+            value['timestamp'] = milliseconds_ago(now, duration)
+
+            # Every breadcrumb is 1s apart
+            duration += 1000
+
     return data
 
 
