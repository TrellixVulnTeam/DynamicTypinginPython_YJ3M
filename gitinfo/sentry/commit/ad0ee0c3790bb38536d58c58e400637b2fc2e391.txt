commit ad0ee0c3790bb38536d58c58e400637b2fc2e391
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Mar 14 10:09:14 2018 -0700

    feat(environments): Add environment to querystring (#7513)

diff --git a/src/sentry/static/sentry/app/actionCreators/environments.jsx b/src/sentry/static/sentry/app/actionCreators/environments.jsx
index ff813e1778..ed2049406c 100644
--- a/src/sentry/static/sentry/app/actionCreators/environments.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/environments.jsx
@@ -8,8 +8,8 @@ export function clearActiveEnvironment() {
   EnvironmentActions.clearActive();
 }
 
-export function loadEnvironments(data) {
-  EnvironmentActions.loadData(data);
+export function loadEnvironments(data, envName) {
+  EnvironmentActions.loadData(data, envName);
 }
 
 export function loadActiveEnvironments(data) {
@@ -19,7 +19,3 @@ export function loadActiveEnvironments(data) {
 export function loadHiddenEnvironments(data) {
   EnvironmentActions.loadHiddenData(data);
 }
-
-export function setDefaultEnvironment(env) {
-  EnvironmentActions.setDefault(env);
-}
diff --git a/src/sentry/static/sentry/app/actions/environmentActions.jsx b/src/sentry/static/sentry/app/actions/environmentActions.jsx
index 3dd345a74c..7868019990 100644
--- a/src/sentry/static/sentry/app/actions/environmentActions.jsx
+++ b/src/sentry/static/sentry/app/actions/environmentActions.jsx
@@ -6,7 +6,6 @@ let EnvironmentActions = Reflux.createActions([
   'loadData',
   'loadActiveData',
   'loadHiddenData',
-  'setDefault',
 ]);
 
 export default EnvironmentActions;
diff --git a/src/sentry/static/sentry/app/stores/environmentStore.jsx b/src/sentry/static/sentry/app/stores/environmentStore.jsx
index 6f5ec99866..205e338f45 100644
--- a/src/sentry/static/sentry/app/stores/environmentStore.jsx
+++ b/src/sentry/static/sentry/app/stores/environmentStore.jsx
@@ -4,7 +4,7 @@ import {toTitleCase} from '../utils';
 import ProjectActions from '../actions/projectActions';
 import EnvironmentActions from '../actions/environmentActions';
 
-import {setDefaultEnvironment} from '../actionCreators/environments';
+import {setActiveEnvironment} from '../actionCreators/environments';
 
 const PRODUCTION_ENV_NAMES = new Set([
   'production',
@@ -28,11 +28,11 @@ const EnvironmentStore = Reflux.createStore({
     this.listenTo(ProjectActions.setActive, this.onSetActiveProject);
   },
 
-  loadInitialData(items) {
+  loadInitialData(items, activeEnvironmentName) {
     this.loadActiveData(items);
-
     // Update the default environment in the latest context store
-    setDefaultEnvironment(this.getDefault());
+    const activeEnvironment = this.getByName(activeEnvironmentName) || this.getDefault();
+    setActiveEnvironment(activeEnvironment);
   },
 
   loadHiddenData(items) {
diff --git a/src/sentry/static/sentry/app/stores/latestContextStore.jsx b/src/sentry/static/sentry/app/stores/latestContextStore.jsx
index c092753f45..74a26033fa 100644
--- a/src/sentry/static/sentry/app/stores/latestContextStore.jsx
+++ b/src/sentry/static/sentry/app/stores/latestContextStore.jsx
@@ -23,7 +23,6 @@ const LatestContextStore = Reflux.createStore({
     this.listenTo(OrganizationsActions.update, this.onUpdateOrganization);
     this.listenTo(EnvironmentActions.setActive, this.onSetActiveEnvironment);
     this.listenTo(EnvironmentActions.clearActive, this.onClearActiveEnvironment);
-    this.listenTo(EnvironmentActions.setDefault, this.onSetActiveEnvironment);
   },
 
   reset() {
diff --git a/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx b/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
new file mode 100644
index 0000000000..3deffea906
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
@@ -0,0 +1,82 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import createReactClass from 'create-react-class';
+import Reflux from 'reflux';
+import {browserHistory} from 'react-router';
+import qs from 'query-string';
+
+import LatestContextStore from '../stores/latestContextStore';
+
+const withEnvironmentInQueryString = WrappedComponent =>
+  createReactClass({
+    displayName: 'withEnvironmentInQueryString',
+
+    propTypes: {
+      location: PropTypes.object,
+    },
+
+    mixins: [Reflux.listenTo(LatestContextStore, 'onLatestContextChange')],
+
+    getInitialState() {
+      const latestContext = LatestContextStore.getInitialState();
+      return {
+        environment: latestContext.environment,
+        organization: latestContext.organization,
+        hasEnvironmentsFeature: this.hasEnvironmentsFeature(latestContext.organization),
+      };
+    },
+
+    componentWillMount() {
+      if (this.state.hasEnvironmentsFeature) {
+        const {query, pathname} = this.props.location;
+
+        if (this.state.environment) {
+          const envName = this.state.environment.name;
+          const hasValidEnvironmentInQuery =
+            'environment' in query && query.environment === envName;
+
+          // Update environment in browser history if it is not in sync with the currently active one
+          if (!hasValidEnvironmentInQuery) {
+            query.environment = this.state.environment.name;
+            browserHistory.replace(`${pathname}?${qs.stringify(query)}`);
+          }
+        }
+      }
+    },
+
+    onLatestContextChange({environment, organization}) {
+      // TODO(lyn): Remove this when environments feature is active
+      const hasEnvironmentsFeature = this.hasEnvironmentsFeature(organization);
+
+      if (hasEnvironmentsFeature && environment !== this.state.environment) {
+        const {query, pathname} = this.props.location;
+        if (environment) {
+          query.environment = environment.name;
+        } else {
+          delete query.environment;
+        }
+        browserHistory.push(`${pathname}?${qs.stringify(query)}`);
+      }
+
+      this.setState({
+        environment,
+        organization,
+        hasEnvironmentsFeature,
+      });
+    },
+
+    hasEnvironmentsFeature(org) {
+      const features = new Set(org ? org.features : []);
+      return features.has('environments');
+    },
+
+    render() {
+      const environment = this.state.hasEnvironmentsFeature
+        ? this.state.environment
+        : null;
+
+      return <WrappedComponent environment={environment} {...this.props} />;
+    },
+  });
+
+export default withEnvironmentInQueryString;
diff --git a/src/sentry/static/sentry/app/views/projectDashboard.jsx b/src/sentry/static/sentry/app/views/projectDashboard.jsx
index e3cd243bf6..367d62588d 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard.jsx
@@ -8,7 +8,7 @@ import EventList from './projectDashboard/eventList';
 import ProjectState from '../mixins/projectState';
 import ProjectChart from './projectDashboard/chart';
 import {t} from '../locale';
-import withEnvironment from '../utils/withEnvironment';
+import withEnvironmentInQueryString from '../utils/withEnvironmentInQueryString';
 
 const PERIOD_HOUR = '1h';
 const PERIOD_DAY = '1d';
@@ -166,4 +166,4 @@ const ProjectDashboard = createReactClass({
   },
 });
 
-export default withEnvironment(ProjectDashboard);
+export default withEnvironmentInQueryString(ProjectDashboard);
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index ef1e69dfc3..19fdaffaca 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -11,6 +11,7 @@ import LoadingIndicator from '../../components/loadingIndicator';
 import Pagination from '../../components/pagination';
 import SearchBar from '../../components/searchBar';
 import {t} from '../../locale';
+import withEnvironmentInQueryString from '../../utils/withEnvironmentInQueryString';
 
 const ProjectEvents = createReactClass({
   displayName: 'ProjectEvents',
@@ -218,4 +219,4 @@ const ProjectEvents = createReactClass({
   },
 });
 
-export default ProjectEvents;
+export default withEnvironmentInQueryString(ProjectEvents);
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index f5bebcb253..41295bbf81 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -14,7 +14,7 @@ import {t, tct} from '../../locale';
 
 import ReleaseList from './releaseList';
 
-import withEnvironment from '../../utils/withEnvironment';
+import withEnvironmentInQueryString from '../../utils/withEnvironmentInQueryString';
 
 const DEFAULT_QUERY = '';
 
@@ -208,4 +208,4 @@ const ProjectReleases = createReactClass({
 });
 
 export {ProjectReleases}; // For tests
-export default withEnvironment(ProjectReleases);
+export default withEnvironmentInQueryString(ProjectReleases);
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index acc46c8abb..605661a12f 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -12,7 +12,7 @@ import Pagination from '../components/pagination';
 import CompactIssue from '../components/compactIssue';
 import EventUserReport from '../components/events/userReport';
 import {t, tct} from '../locale';
-import withEnvironment from '../utils/withEnvironment';
+import withEnvironmentInQueryString from '../utils/withEnvironmentInQueryString';
 
 const ProjectUserReports = createReactClass({
   displayName: 'ProjectUserReports',
@@ -257,4 +257,4 @@ const ProjectUserReports = createReactClass({
   },
 });
 
-export default withEnvironment(ProjectUserReports);
+export default withEnvironmentInQueryString(ProjectUserReports);
diff --git a/src/sentry/static/sentry/app/views/projects/projectContext.jsx b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
index 9b956e78f7..2164a6266e 100644
--- a/src/sentry/static/sentry/app/views/projects/projectContext.jsx
+++ b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 import DocumentTitle from 'react-document-title';
+import {withRouter} from 'react-router';
 
 import ApiMixin from '../../mixins/apiMixin';
 
@@ -36,6 +37,7 @@ const ProjectContext = createReactClass({
   propTypes: {
     projectId: PropTypes.string,
     orgId: PropTypes.string,
+    location: PropTypes.object,
   },
 
   childContextTypes: {
@@ -131,7 +133,9 @@ const ProjectContext = createReactClass({
   },
 
   fetchData() {
-    let {orgId, projectId} = this.props;
+    let {orgId, projectId, location} = this.props;
+    let query = location.query || {};
+    let envName = query.environment;
     // we fetch core access/information from the global organization data
     let activeProject = this.identifyProject();
     let hasAccess = activeProject && activeProject.hasAccess;
@@ -164,6 +168,7 @@ const ProjectContext = createReactClass({
           });
         },
       });
+
       // TODO(dcramer): move member list to organization level
       this.api.request(this.getMemberListEndpoint(), {
         success: data => {
@@ -172,11 +177,9 @@ const ProjectContext = createReactClass({
       });
 
       this.api.request(this.getEnvironmentListEndpoint(), {
-        success: loadEnvironments,
-      });
-
-      this.setState({
-        loading: false,
+        success: envs => {
+          loadEnvironments(envs, envName);
+        },
       });
     } else if (activeProject && !activeProject.isMember) {
       this.setState({
@@ -247,4 +250,4 @@ const ProjectContext = createReactClass({
   },
 });
 
-export default ProjectContext;
+export default withRouter(ProjectContext);
diff --git a/src/sentry/static/sentry/app/views/stream/index.jsx b/src/sentry/static/sentry/app/views/stream/index.jsx
index c3e0184e4c..e656c4a976 100644
--- a/src/sentry/static/sentry/app/views/stream/index.jsx
+++ b/src/sentry/static/sentry/app/views/stream/index.jsx
@@ -7,7 +7,7 @@ import {omit} from 'lodash';
 import SentryTypes from '../../proptypes';
 import ProjectState from '../../mixins/projectState';
 import TagStore from '../../stores/tagStore';
-import withEnvironment from '../../utils/withEnvironment';
+import withEnvironmentInQueryString from '../../utils/withEnvironmentInQueryString';
 import Stream from './stream';
 import {fetchTags} from '../../actionCreators/tags';
 
@@ -65,4 +65,4 @@ const StreamContainer = createReactClass({
   },
 });
 
-export default withEnvironment(StreamContainer);
+export default withEnvironmentInQueryString(StreamContainer);
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 17509c716f..ccecc94e11 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -505,7 +505,9 @@ const Stream = createReactClass({
   },
 
   transitionTo() {
-    let queryParams = {};
+    let queryParams = {
+      ...this.props.location.query,
+    };
 
     if (!this.state.searchId) {
       queryParams.query = this.state.query;
diff --git a/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx b/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx
new file mode 100644
index 0000000000..814c7a2f18
--- /dev/null
+++ b/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx
@@ -0,0 +1,93 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import {browserHistory} from 'react-router';
+
+import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
+import LatestContextStore from 'app/stores/latestContextStore';
+
+class BasicComponent extends React.Component {
+  render() {
+    return <div>test component</div>;
+  }
+}
+
+const WrappedComponent = withEnvironmentInQueryString(BasicComponent);
+
+describe('withEnvironmentInQueryString', function() {
+  beforeEach(function() {
+    browserHistory.replace = jest.fn();
+    LatestContextStore.onSetActiveOrganization({
+      features: ['environments'],
+    });
+  });
+
+  describe('updates environment', function() {
+    let wrapper;
+    beforeEach(function() {
+      LatestContextStore.onSetActiveEnvironment({
+        name: 'prod',
+      });
+
+      wrapper = shallow(
+        <WrappedComponent location={{pathname: 'http://lol/', query: {}}} />,
+        TestStubs.routerContext()
+      );
+    });
+
+    it('passes environment prop to component', function() {
+      expect(wrapper.prop('environment').name).toBe('prod');
+    });
+
+    it('replaces browser history', function() {
+      expect(browserHistory.replace).toHaveBeenCalledWith('http://lol/?environment=prod');
+    });
+  });
+
+  describe('handles correct environment value', function() {
+    let wrapper;
+    beforeEach(function() {
+      LatestContextStore.onSetActiveEnvironment({
+        name: 'prod',
+      });
+
+      wrapper = shallow(
+        <WrappedComponent
+          location={{pathname: 'http://lol', query: {environment: 'prod'}}}
+        />,
+        TestStubs.routerContext()
+      );
+    });
+
+    it('passes environment prop to component', function() {
+      expect(wrapper.prop('environment').name).toBe('prod');
+    });
+
+    it('does not replace browser history', function() {
+      expect(browserHistory.replace).not.toHaveBeenCalled();
+    });
+  });
+
+  describe('removes invalid environment value', function() {
+    let wrapper;
+    beforeEach(function() {
+      LatestContextStore.onSetActiveEnvironment({name: 'staging'});
+
+      wrapper = shallow(
+        <WrappedComponent
+          location={{pathname: 'http://lol/', query: {environment: 'prod'}}}
+        />,
+        TestStubs.routerContext()
+      );
+    });
+
+    it('passes environment prop to component', function() {
+      expect(wrapper.prop('environment').name).toBe('staging');
+    });
+
+    it('replaces browser history', function() {
+      expect(browserHistory.replace).toHaveBeenCalledWith(
+        'http://lol/?environment=staging'
+      );
+    });
+  });
+});
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
index 37cd5915ec..bcde6abca0 100644
--- a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -14,7 +14,7 @@ exports[`Configure should render correctly render() should redirect to if no mat
     >
       Configure your application
     </h2>
-    <ProjectContext
+    <withRouter(ProjectContext)
       orgId="testOrg"
       projectId="project-slug"
       style={
@@ -40,7 +40,7 @@ exports[`Configure should render correctly render() should redirect to if no mat
           }
         />
       </ProjectDocsContext>
-    </ProjectContext>
+    </withRouter(ProjectContext)>
     <Waiting
       hasEvent={false}
       skip={[Function]}
@@ -73,7 +73,7 @@ exports[`Configure should render correctly render() should render platform docs
       >
         Configure your application
       </h2>
-      <ProjectContext
+      <withRouter(ProjectContext)
         orgId="testOrg"
         projectId="project-slug"
         style={
@@ -82,189 +82,213 @@ exports[`Configure should render correctly render() should render platform docs
           }
         }
       >
-        <SideEffect(DocumentTitle)
-          title="Project Name"
+        <ProjectContext
+          location={Object {}}
+          orgId="testOrg"
+          projectId="project-slug"
+          router={
+            Object {
+              "createHref": [Function],
+              "go": [Function],
+              "goBack": [Function],
+              "goForward": [Function],
+              "isActive": [Function],
+              "location": Object {},
+              "push": [Function],
+              "replace": [Function],
+              "setRouteLeaveHook": [Function],
+            }
+          }
+          style={
+            Object {
+              "marginBottom": 30,
+            }
+          }
         >
-          <DocumentTitle
+          <SideEffect(DocumentTitle)
             title="Project Name"
           >
-            <ProjectDocsContext>
-              <ProjectInstallPlatform
-                linkPath={[Function]}
-                params={
-                  Object {
-                    "orgId": "testOrg",
-                    "platform": "node",
-                    "projectId": "project-slug",
+            <DocumentTitle
+              title="Project Name"
+            >
+              <ProjectDocsContext>
+                <ProjectInstallPlatform
+                  linkPath={[Function]}
+                  params={
+                    Object {
+                      "orgId": "testOrg",
+                      "platform": "node",
+                      "projectId": "project-slug",
+                    }
                   }
-                }
-                platformData={
-                  Object {
-                    "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
-                    "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
-                    "platforms": Array [
-                      Object {
-                        "id": "javascript",
-                        "integrations": Array [
-                          Object {
-                            "id": "node",
-                            "link": "https://docs.getsentry.com/hosted/clients/csharp/",
-                            "name": "node",
-                            "type": "language",
-                          },
-                        ],
-                        "name": "js",
-                      },
-                    ],
+                  platformData={
+                    Object {
+                      "dsn": "https://9ed7cdc60:20e868d7b@sentry.io/300733",
+                      "dsnPublic": "https://9ed7cdc6581145bcb46044b77bd82aa0@sentry.io/300733",
+                      "platforms": Array [
+                        Object {
+                          "id": "javascript",
+                          "integrations": Array [
+                            Object {
+                              "id": "node",
+                              "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                              "name": "node",
+                              "type": "language",
+                            },
+                          ],
+                          "name": "js",
+                        },
+                      ],
+                    }
                   }
-                }
-              >
-                <div
-                  className="install row"
                 >
                   <div
-                    className="install-content col-md-10"
+                    className="install row"
                   >
                     <div
-                      className="box"
+                      className="install-content col-md-10"
                     >
                       <div
-                        className="box-header"
+                        className="box"
                       >
                         <div
-                          className="pull-right"
+                          className="box-header"
                         >
-                          <a
-                            className="btn btn-sm btn-default"
-                            href="https://docs.getsentry.com/hosted/clients/csharp/"
+                          <div
+                            className="pull-right"
                           >
-                            Full Documentation
-                          </a>
+                            <a
+                              className="btn btn-sm btn-default"
+                              href="https://docs.getsentry.com/hosted/clients/csharp/"
+                            >
+                              Full Documentation
+                            </a>
+                          </div>
+                          <h3>
+                            Configure node
+                          </h3>
                         </div>
-                        <h3>
-                          Configure node
-                        </h3>
-                      </div>
-                      <div
-                        className="box-content with-padding"
-                      >
-                        <p>
-                          <span
-                            key="8"
-                          >
+                        <div
+                          className="box-content with-padding"
+                        >
+                          <p>
                             <span
-                              key="0"
+                              key="8"
                             >
-                              
+                              <span
+                                key="0"
+                              >
+                                
              This is a quick getting started guide. For in-depth instructions
              on integrating Sentry with 
-                            </span>
-                            <span
-                              key="2"
-                            >
-                              node
-                            </span>
-                            <span
-                              key="3"
-                            >
-                              , view
-             
-                            </span>
-                            <a
-                              href="https://docs.getsentry.com/hosted/clients/csharp/"
-                              key="5"
-                            >
+                              </span>
                               <span
-                                key="4"
+                                key="2"
                               >
-                                our complete documentation
+                                node
                               </span>
-                            </a>
-                            <span
-                              key="6"
-                            >
-                              .
+                              <span
+                                key="3"
+                              >
+                                , view
+             
+                              </span>
+                              <a
+                                href="https://docs.getsentry.com/hosted/clients/csharp/"
+                                key="5"
+                              >
+                                <span
+                                  key="4"
+                                >
+                                  our complete documentation
+                                </span>
+                              </a>
+                              <span
+                                key="6"
+                              >
+                                .
             
+                              </span>
                             </span>
-                          </span>
-                        </p>
-                        <div
-                          dangerouslySetInnerHTML={
-                            Object {
-                              "__html": undefined,
+                          </p>
+                          <div
+                            dangerouslySetInnerHTML={
+                              Object {
+                                "__html": undefined,
+                              }
                             }
-                          }
-                        />
+                          />
+                        </div>
                       </div>
                     </div>
-                  </div>
-                  <div
-                    className="install-sidebar col-md-2"
-                  >
-                    <LanguageNav
-                      active={true}
-                      key="javascript"
-                      name="js"
+                    <div
+                      className="install-sidebar col-md-2"
                     >
-                      <div
-                        className="install-language-nav"
+                      <LanguageNav
+                        active={true}
+                        key="javascript"
+                        name="js"
                       >
-                        <ul
-                          className="list-group"
+                        <div
+                          className="install-language-nav"
                         >
-                          <li
-                            className="list-group-item list-group-header"
+                          <ul
+                            className="list-group"
                           >
-                            <a
-                              onClick={[Function]}
+                            <li
+                              className="list-group-item list-group-header"
+                            >
+                              <a
+                                onClick={[Function]}
+                                style={
+                                  Object {
+                                    "display": "block",
+                                  }
+                                }
+                              >
+                                <span
+                                  className="pull-right"
+                                >
+                                  <span
+                                    className="icon-minus"
+                                  />
+                                </span>
+                                <strong>
+                                  js
+                                </strong>
+                              </a>
+                            </li>
+                            <span
                               style={
                                 Object {
                                   "display": "block",
                                 }
                               }
                             >
-                              <span
-                                className="pull-right"
-                              >
-                                <span
-                                  className="icon-minus"
-                                />
-                              </span>
-                              <strong>
-                                js
-                              </strong>
-                            </a>
-                          </li>
-                          <span
-                            style={
-                              Object {
-                                "display": "block",
-                              }
-                            }
-                          >
-                            <Link
-                              className="list-group-item"
-                              key="node"
-                              to="/onboarding/testOrg/project-slug/configure/node/"
-                            >
-                              <a
+                              <Link
                                 className="list-group-item"
-                                href="/onboarding/testOrg/project-slug/configure/node/"
+                                key="node"
+                                to="/onboarding/testOrg/project-slug/configure/node/"
                               >
-                                node
-                              </a>
-                            </Link>
-                          </span>
-                        </ul>
-                      </div>
-                    </LanguageNav>
+                                <a
+                                  className="list-group-item"
+                                  href="/onboarding/testOrg/project-slug/configure/node/"
+                                >
+                                  node
+                                </a>
+                              </Link>
+                            </span>
+                          </ul>
+                        </div>
+                      </LanguageNav>
+                    </div>
                   </div>
-                </div>
-              </ProjectInstallPlatform>
-            </ProjectDocsContext>
-          </DocumentTitle>
-        </SideEffect(DocumentTitle)>
-      </ProjectContext>
+                </ProjectInstallPlatform>
+              </ProjectDocsContext>
+            </DocumentTitle>
+          </SideEffect(DocumentTitle)>
+        </ProjectContext>
+      </withRouter(ProjectContext)>
       <Waiting
         hasEvent={false}
         skip={[Function]}
@@ -319,7 +343,7 @@ exports[`Configure should render correctly render() shouldn't redirect for a fou
     >
       Configure your application
     </h2>
-    <ProjectContext
+    <withRouter(ProjectContext)
       orgId="testOrg"
       projectId="project-slug"
       style={
@@ -345,7 +369,7 @@ exports[`Configure should render correctly render() shouldn't redirect for a fou
           }
         />
       </ProjectDocsContext>
-    </ProjectContext>
+    </withRouter(ProjectContext)>
     <Waiting
       hasEvent={false}
       skip={[Function]}
