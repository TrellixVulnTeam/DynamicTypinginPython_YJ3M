commit 8778c715a9bb7afc19c277665a088d00a8c31ce8
Author: Matej Minar <matej.minar@sentry.io>
Date:   Wed Jan 29 14:07:04 2020 +0100

    ref(ts): Convert <PackageData> to typescript (#16665)

diff --git a/src/sentry/static/sentry/app/components/events/extraData.tsx b/src/sentry/static/sentry/app/components/events/extraData.tsx
index 2fa48fbbf6..46407ec8eb 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.tsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.tsx
@@ -35,7 +35,7 @@ class EventExtraData extends React.Component<Props, State> {
   };
 
   render() {
-    const extraDataArray = Object.entries(this.props.event.context);
+    const extraDataArray = Object.entries(this.props.event.context || {});
 
     return (
       <div className="extra-data">
diff --git a/src/sentry/static/sentry/app/components/events/packageData.jsx b/src/sentry/static/sentry/app/components/events/packageData.tsx
similarity index 75%
rename from src/sentry/static/sentry/app/components/events/packageData.jsx
rename to src/sentry/static/sentry/app/components/events/packageData.tsx
index cc727121ed..11fd5620b9 100644
--- a/src/sentry/static/sentry/app/components/events/packageData.jsx
+++ b/src/sentry/static/sentry/app/components/events/packageData.tsx
@@ -1,5 +1,6 @@
 import React from 'react';
 
+import {Event} from 'app/types';
 import {t} from 'app/locale';
 import ClippedBox from 'app/components/clippedBox';
 import ErrorBoundary from 'app/components/errorBoundary';
@@ -7,19 +8,23 @@ import EventDataSection from 'app/components/events/eventDataSection';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 import SentryTypes from 'app/sentryTypes';
 
-class EventPackageData extends React.Component {
+type Props = {
+  event: Event;
+};
+
+class EventPackageData extends React.Component<Props> {
   static propTypes = {
     event: SentryTypes.Event.isRequired,
   };
 
-  shouldComponentUpdate(nextProps) {
+  shouldComponentUpdate(nextProps: Props) {
     return this.props.event.id !== nextProps.event.id;
   }
 
   render() {
-    let longKeys, title;
     const {event} = this.props;
-    const packages = Object.entries(event.packages);
+    let longKeys: boolean, title: string;
+    const packages = Object.entries(event.packages || {});
 
     switch (event.platform) {
       case 'csharp':
@@ -32,7 +37,7 @@ class EventPackageData extends React.Component {
     }
 
     return (
-      <EventDataSection event={event} type="packages" title={title}>
+      <EventDataSection type="packages" title={title}>
         <ClippedBox>
           <ErrorBoundary mini>
             <KeyValueList data={packages} longKeys={longKeys} />
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index e5eb0dd037..b485fb42ec 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -188,7 +188,8 @@ type SentryEventBase = {
   culprit: string;
   metadata: EventMetadata;
   contexts: EventContexts;
-  context?: any; // TODO(ts)
+  context?: {[key: string]: any};
+  packages?: {[key: string]: string};
   user: EventUser;
   message: string;
   platform?: string;
