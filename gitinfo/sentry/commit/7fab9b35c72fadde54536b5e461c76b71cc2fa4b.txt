commit 7fab9b35c72fadde54536b5e461c76b71cc2fa4b
Author: Chris Fuller <cfuller@sentry.io>
Date:   Mon Apr 6 14:41:23 2020 -0400

    Adding ARCHIVED status (#18101)
    
    * Adding ARCHIVED status
    * Writing test to confirm archived rules don't get included by default, and that incident->alert rule relation isn't borked

diff --git a/src/sentry/incidents/models.py b/src/sentry/incidents/models.py
index 97b043b044..35d971f135 100644
--- a/src/sentry/incidents/models.py
+++ b/src/sentry/incidents/models.py
@@ -274,6 +274,7 @@ class AlertRuleStatus(Enum):
     TRIGGERED = 1
     PENDING_DELETION = 2
     DELETION_IN_PROGRESS = 3
+    ARCHIVED = 4
 
 
 class AlertRuleThresholdType(Enum):
@@ -296,6 +297,7 @@ class AlertRuleManager(BaseManager):
                 status__in=(
                     AlertRuleStatus.PENDING_DELETION.value,
                     AlertRuleStatus.DELETION_IN_PROGRESS.value,
+                    AlertRuleStatus.ARCHIVED.value,
                 )
             )
         )
diff --git a/tests/sentry/incidents/test_models.py b/tests/sentry/incidents/test_models.py
index ea1d6ffecb..4a29798fc9 100644
--- a/tests/sentry/incidents/test_models.py
+++ b/tests/sentry/incidents/test_models.py
@@ -14,6 +14,7 @@ from sentry.utils.compat.mock import Mock, patch
 from sentry.db.models.manager import BaseManager
 from sentry.incidents.models import (
     AlertRule,
+    AlertRuleStatus,
     AlertRuleTrigger,
     AlertRuleTriggerAction,
     Incident,
@@ -350,6 +351,24 @@ class IncidentDurationTest(unittest.TestCase):
         assert incident.duration == timedelta(minutes=2)
 
 
+class IncidentAlertRuleRelationTest(TestCase):
+    def test(self):
+        self.alert_rule = self.create_alert_rule()
+        self.trigger = self.create_alert_rule_trigger(self.alert_rule)
+        self.incident = self.create_incident(alert_rule=self.alert_rule, projects=[self.project])
+
+        assert self.incident.alert_rule.id == self.alert_rule.id
+        all_alert_rules = list(AlertRule.objects.all())
+        assert self.alert_rule in all_alert_rules
+
+        self.alert_rule.status = AlertRuleStatus.ARCHIVED.value
+        self.alert_rule.save()
+
+        all_alert_rules = list(AlertRule.objects.all())
+        assert self.alert_rule not in all_alert_rules
+        assert self.incident.alert_rule.id == self.alert_rule.id
+
+
 @freeze_time()
 class IncidentCurrentEndDateTest(unittest.TestCase):
     def test(self):
