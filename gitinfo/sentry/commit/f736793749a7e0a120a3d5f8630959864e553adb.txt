commit f736793749a7e0a120a3d5f8630959864e553adb
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Wed May 3 18:29:14 2017 -0700

    run prettier over jsx files to make escaping unecessary (#5340)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/rawStacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/rawStacktraceContent.jsx
index 367c8e8a5f..e1bb28d653 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/rawStacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/rawStacktraceContent.jsx
@@ -39,7 +39,7 @@ function getRubyFrame(frame) {
     result += ':' + frame.colNo;
   }
   if (defined(frame.function)) {
-    result += ':in `' + frame.function + '\'';
+    result += ':in `' + frame.function + "'";
   }
   return result;
 }
diff --git a/src/sentry/static/sentry/app/components/group/sidebar.jsx b/src/sentry/static/sentry/app/components/group/sidebar.jsx
index 98309f3963..71729b1f73 100644
--- a/src/sentry/static/sentry/app/components/group/sidebar.jsx
+++ b/src/sentry/static/sentry/app/components/group/sidebar.jsx
@@ -22,11 +22,11 @@ const GroupSidebar = React.createClass({
   mixins: [ApiMixin, GroupState],
 
   subscriptionReasons: {
-    commented: t('You\'re receiving updates because you have commented on this issue.'),
-    assigned: t('You\'re receiving updates because you were assigned to this issue.'),
-    bookmarked: t('You\'re receiving updates because you have bookmarked this issue.'),
+    commented: t("You're receiving updates because you have commented on this issue."),
+    assigned: t("You're receiving updates because you were assigned to this issue."),
+    bookmarked: t("You're receiving updates because you have bookmarked this issue."),
     changed_status: t(
-      'You\'re receiving updates because you have changed the status of this issue.'
+      "You're receiving updates because you have changed the status of this issue."
     )
   },
 
@@ -86,7 +86,7 @@ const GroupSidebar = React.createClass({
 
     if (group.isSubscribed) {
       let result = t(
-        'You\'re receiving updates because you are subscribed to this issue.'
+        "You're receiving updates because you are subscribed to this issue."
       );
       if (group.subscriptionDetails) {
         let reason = group.subscriptionDetails.reason;
@@ -95,7 +95,7 @@ const GroupSidebar = React.createClass({
         }
       } else {
         result = tct(
-          'You\'re receiving updates because you are [link:subscribed to workflow notifications] for this project.',
+          "You're receiving updates because you are [link:subscribed to workflow notifications] for this project.",
           {
             link: <a href="/account/settings/notifications/" />
           }
@@ -103,7 +103,7 @@ const GroupSidebar = React.createClass({
       }
       return result;
     } else {
-      return t('You\'re not subscribed to this issue.');
+      return t("You're not subscribed to this issue.");
     }
   },
 
diff --git a/src/sentry/static/sentry/app/components/groupList.jsx b/src/sentry/static/sentry/app/components/groupList.jsx
index e16c21615e..eb48712576 100644
--- a/src/sentry/static/sentry/app/components/groupList.jsx
+++ b/src/sentry/static/sentry/app/components/groupList.jsx
@@ -118,7 +118,7 @@ const GroupList = React.createClass({
       return (
         <div className="box empty-stream">
           <span className="icon icon-exclamation" />
-          <p>{t('There doesn\'t seem to be any events fitting the query.')}</p>
+          <p>{t("There doesn't seem to be any events fitting the query.")}</p>
         </div>
       );
 
diff --git a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
index 414c1d2ac8..dc1c713635 100644
--- a/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
+++ b/src/sentry/static/sentry/app/components/missingProjectMembership.jsx
@@ -58,7 +58,7 @@ const MissingProjectMembership = React.createClass({
       <div className="container">
         <div className="box alert-box">
           <span className="icon icon-exclamation" />
-          <p>{'You\'re not a member of this project.'}</p>
+          <p>{"You're not a member of this project."}</p>
           {openMembership
             ? <p>{t('To view this data you must first join the %s team.', team.name)}</p>
             : <p>
diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 98bc165083..be818ca4c0 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -97,9 +97,13 @@ const PluginConfig = React.createClass({
           <h3>{data.name}</h3>
         </div>
         <div className="box-content with-padding">
-          {data.status === 'beta' ?
-            <div className="alert alert-block alert-warning"><strong>Note: This plugin is considered beta and may change in the future.</strong></div>
-          : null}
+          {data.status === 'beta'
+            ? <div className="alert alert-block alert-warning">
+                <strong>
+                  Note: This plugin is considered beta and may change in the future.
+                </strong>
+              </div>
+            : null}
 
           {this.state.loading
             ? <LoadingIndicator />
diff --git a/src/sentry/static/sentry/app/components/pluginList.jsx b/src/sentry/static/sentry/app/components/pluginList.jsx
index e72b7fc38a..3e3c56e5a4 100644
--- a/src/sentry/static/sentry/app/components/pluginList.jsx
+++ b/src/sentry/static/sentry/app/components/pluginList.jsx
@@ -12,7 +12,7 @@ export default React.createClass({
     project: React.PropTypes.object.isRequired,
     pluginList: React.PropTypes.array.isRequired,
     onDisablePlugin: React.PropTypes.func.isRequired,
-    onEnablePlugin: React.PropTypes.func.isRequired,
+    onEnablePlugin: React.PropTypes.func.isRequired
   },
 
   mixins: [ApiMixin],
@@ -20,16 +20,19 @@ export default React.createClass({
   enablePlugin(plugin) {
     let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
     let {organization, project} = this.props;
-    this.api.request(`/projects/${organization.slug}/${project.slug}/plugins/${plugin.id}/`, {
-      method: 'POST',
-      success: () => this.props.onEnablePlugin(plugin),
-      error: error => {
-        IndicatorStore.add(t('Unable to save changes. Please try again.'), 'error');
-      },
-      complete: () => {
-        IndicatorStore.remove(loadingIndicator);
+    this.api.request(
+      `/projects/${organization.slug}/${project.slug}/plugins/${plugin.id}/`,
+      {
+        method: 'POST',
+        success: () => this.props.onEnablePlugin(plugin),
+        error: error => {
+          IndicatorStore.add(t('Unable to save changes. Please try again.'), 'error');
+        },
+        complete: () => {
+          IndicatorStore.remove(loadingIndicator);
+        }
       }
-    });
+    );
   },
 
   onDisablePlugin(plugin) {
@@ -54,8 +57,9 @@ export default React.createClass({
         })}
         <InactivePlugins
           plugins={pluginList.filter(p => !p.enabled)}
-          onEnablePlugin={this.enablePlugin} />
+          onEnablePlugin={this.enablePlugin}
+        />
       </div>
     );
-  },
+  }
 });
diff --git a/src/sentry/static/sentry/app/components/todos.jsx b/src/sentry/static/sentry/app/components/todos.jsx
index ace726402b..c45800cecb 100644
--- a/src/sentry/static/sentry/app/components/todos.jsx
+++ b/src/sentry/static/sentry/app/components/todos.jsx
@@ -163,7 +163,7 @@ const TodoList = React.createClass({
       {
         task: 2,
         title: t('Send your first event'),
-        description: t('Install Sentry\'s client and send an event'),
+        description: t("Install Sentry's client and send an event"),
         skippable: false,
         prereq: [1],
         featureLocation: 'project',
diff --git a/src/sentry/static/sentry/app/views/accountAuthorizations.jsx b/src/sentry/static/sentry/app/views/accountAuthorizations.jsx
index 938c423833..878de0f34e 100644
--- a/src/sentry/static/sentry/app/views/accountAuthorizations.jsx
+++ b/src/sentry/static/sentry/app/views/accountAuthorizations.jsx
@@ -138,7 +138,7 @@ const AccountAuthorizations = React.createClass({
           <tbody>
             <tr colSpan="2">
               <td className="blankslate well">
-                {t('You haven\'t approved any third party applications.')}
+                {t("You haven't approved any third party applications.")}
               </td>
             </tr>
           </tbody>
diff --git a/src/sentry/static/sentry/app/views/apiApplications.jsx b/src/sentry/static/sentry/app/views/apiApplications.jsx
index 50adaa09ea..b30c429910 100644
--- a/src/sentry/static/sentry/app/views/apiApplications.jsx
+++ b/src/sentry/static/sentry/app/views/apiApplications.jsx
@@ -152,7 +152,7 @@ const ApiApplications = React.createClass({
       return (
         <tr colSpan="2">
           <td className="blankslate well">
-            {t('You haven\'t created any applications yet.')}
+            {t("You haven't created any applications yet.")}
           </td>
         </tr>
       );
diff --git a/src/sentry/static/sentry/app/views/apiNewToken.jsx b/src/sentry/static/sentry/app/views/apiNewToken.jsx
index 5659b17941..ddf7b8ca8e 100644
--- a/src/sentry/static/sentry/app/views/apiNewToken.jsx
+++ b/src/sentry/static/sentry/app/views/apiNewToken.jsx
@@ -171,7 +171,7 @@ const ApiNewToken = React.createClass({
 
           <p>
             {t(
-              'Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They\'re the easiest way to get started using the API.'
+              "Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API."
             )}
           </p>
           <p>
diff --git a/src/sentry/static/sentry/app/views/apiTokens.jsx b/src/sentry/static/sentry/app/views/apiTokens.jsx
index 4336e510b3..f37b1ca687 100644
--- a/src/sentry/static/sentry/app/views/apiTokens.jsx
+++ b/src/sentry/static/sentry/app/views/apiTokens.jsx
@@ -139,7 +139,7 @@ const ApiTokens = React.createClass({
           <tbody>
             <tr colSpan="2">
               <td className="blankslate well">
-                {t('You haven\'t created any authentication tokens yet.')}
+                {t("You haven't created any authentication tokens yet.")}
               </td>
             </tr>
           </tbody>
@@ -176,7 +176,7 @@ const ApiTokens = React.createClass({
         <div>
           <p>
             {t(
-              'Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They\'re the easiest way to get started using the API.'
+              "Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API."
             )}
           </p>
           <p>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index c06abfafd4..e513cbf305 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -27,8 +27,8 @@ const GroupHeader = React.createClass({
     ApiMixin,
     ProjectState,
     TooltipMixin({
-      selector: '.tip',
-    }),
+      selector: '.tip'
+    })
   ],
 
   onToggleMute() {
@@ -158,9 +158,14 @@ const GroupHeader = React.createClass({
                 this.getFeatures().has('callsigns') &&
                 <div className="short-id-box count align-right">
                   <h6 className="nav-header">
-                    <a className="help-link tip"
-                       title={t('This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.')}
-                       href="https://docs.sentry.io/learn/releases/#resolving-issues-via-commits">{t('Issue #')}</a>
+                    <a
+                      className="help-link tip"
+                      title={t(
+                        'This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.'
+                      )}
+                      href="https://docs.sentry.io/learn/releases/#resolving-issues-via-commits">
+                      {t('Issue #')}
+                    </a>
                   </h6>
                   <ShortId shortId={group.shortId} />
                 </div>}
diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index 4f17f91021..61785b9f24 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -126,7 +126,7 @@ const GroupEvents = React.createClass({
     return (
       <div className="box empty-stream">
         <span className="icon icon-exclamation" />
-        <p>{t('There don\'t seem to be any events yet.')}</p>
+        <p>{t("There don't seem to be any events yet.")}</p>
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/views/groupHashes.jsx b/src/sentry/static/sentry/app/views/groupHashes.jsx
index 7da2633f14..65a4000ff0 100644
--- a/src/sentry/static/sentry/app/views/groupHashes.jsx
+++ b/src/sentry/static/sentry/app/views/groupHashes.jsx
@@ -78,7 +78,7 @@ const GroupHashes = React.createClass({
     return (
       <div className="box empty-stream">
         <span className="icon icon-exclamation" />
-        <p>{t('There don\'t seem to be any hashes for this issue.')}</p>
+        <p>{t("There don't seem to be any hashes for this issue.")}</p>
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/views/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
index 5f26bae35b..93cd7d735c 100644
--- a/src/sentry/static/sentry/app/views/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
@@ -352,7 +352,7 @@ const OrganizationRepositories = React.createClass({
               {t(
                 'Connecting a repository allows Sentry to capture commit data via webhooks. ' +
                   'This enables features like suggested assignees and resolving issues via commit message. ' +
-                  'Once you\'ve connected a repository, you can associate commits with releases via the API.'
+                  "Once you've connected a repository, you can associate commits with releases via the API."
               )}
               &nbsp;
               {tct('See our [link:documentation] for more details.', {
diff --git a/src/sentry/static/sentry/app/views/organizationSettings.jsx b/src/sentry/static/sentry/app/views/organizationSettings.jsx
index 14c4beb3e7..d8232fd720 100644
--- a/src/sentry/static/sentry/app/views/organizationSettings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationSettings.jsx
@@ -178,7 +178,7 @@ const OrganizationSettingsForm = React.createClass({
             name="isEarlyAdopter"
             label={t('Early Adopter')}
             value={formData.isEarlyAdopter}
-            help={t('Opt-in to new features before they\'re released to the public.')}
+            help={t("Opt-in to new features before they're released to the public.")}
             required={false}
             error={errors.isEarlyAdopter}
             onChange={this.onFieldChange.bind(this, 'isEarlyAdopter')}
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
index aabf020094..3e4a0df26b 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
@@ -40,7 +40,7 @@ const AllTeamsList = React.createClass({
     }
 
     return tct(
-      'You don\'t have any teams for this organization yet. Get started by [link:creating your first team].',
+      "You don't have any teams for this organization yet. Get started by [link:creating your first team].",
       {
         root: <p />,
         link: <a href={`/organizations/${organization.slug}/teams/new/`} />
diff --git a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx b/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
index 145ed20139..c33f35ab31 100644
--- a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
@@ -282,7 +282,7 @@ const ProjectAlertSettings = React.createClass({
         this.setState({
           error: false,
           loading: false,
-          pluginList: data.filter(p => p.type === 'notification'),
+          pluginList: data.filter(p => p.type === 'notification')
         });
       },
       error: () => {
@@ -316,25 +316,27 @@ const ProjectAlertSettings = React.createClass({
   },
 
   onEnablePlugin(plugin) {
-    this.setState({pluginList: this.state.pluginList.map(p => {
-      if (p.id !== plugin.id)
-        return p;
-      return {
-        ...plugin,
-        enabled: true,
-      };
-    })});
+    this.setState({
+      pluginList: this.state.pluginList.map(p => {
+        if (p.id !== plugin.id) return p;
+        return {
+          ...plugin,
+          enabled: true
+        };
+      })
+    });
   },
 
   onDisablePlugin(plugin) {
-    this.setState({pluginList: this.state.pluginList.map(p => {
-      if (p.id !== plugin.id)
-        return p;
-      return {
-        ...plugin,
-        enabled: false,
-      };
-    })});
+    this.setState({
+      pluginList: this.state.pluginList.map(p => {
+        if (p.id !== plugin.id) return p;
+        return {
+          ...plugin,
+          enabled: false
+        };
+      })
+    });
   },
 
   render() {
@@ -362,7 +364,7 @@ const ProjectAlertSettings = React.createClass({
 
         <div className="alert alert-block alert-info">
           {tct(
-            'These settings cover rule-based alerts. If you\'re ' +
+            "These settings cover rule-based alerts. If you're " +
               'looking to change which notifications you receive ' +
               'you may do so from your [link:account settings].',
             {
@@ -395,7 +397,8 @@ const ProjectAlertSettings = React.createClass({
           project={project}
           pluginList={pluginList}
           onEnablePlugin={this.onEnablePlugin}
-          onDisablePlugin={this.onDisablePlugin} />
+          onDisablePlugin={this.onDisablePlugin}
+        />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/projectCspSettings.jsx b/src/sentry/static/sentry/app/views/projectCspSettings.jsx
index 8d08a074c1..1b62d08cbd 100644
--- a/src/sentry/static/sentry/app/views/projectCspSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectCspSettings.jsx
@@ -207,10 +207,10 @@ const ProjectCspSettings = React.createClass({
 
     return (
       'def middleware(request, response):\n' +
-      '    response[\'Content-Security-Policy\'] = \\\n' +
+      "    response['Content-Security-Policy'] = \\\n" +
       '        "default-src *; " \\\n' +
-      '        "script-src \'self\' \'unsafe-eval\' \'unsafe-inline\' cdn.example.com cdn.ravenjs.com; " \\\n' +
-      '        "style-src \'self\' \'unsafe-inline\' cdn.example.com; " \\\n' +
+      "        \"script-src 'self' 'unsafe-eval' 'unsafe-inline' cdn.example.com cdn.ravenjs.com; \" \\\n" +
+      "        \"style-src 'self' 'unsafe-inline' cdn.example.com; \" \\\n" +
       '        "img-src * data:; " \\\n' +
       '        "report-uri ' +
       endpoint +
@@ -226,7 +226,7 @@ const ProjectCspSettings = React.createClass({
 
     return (
       'def middleware(request, response):\n' +
-      '    response[\'Content-Security-Policy-Report-Only\'] = \\\n' +
+      "    response['Content-Security-Policy-Report-Only'] = \\\n" +
       '        "default-src \'self\'; " \\\n' +
       '        "report-uri ' +
       endpoint +
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index 9f39fcd0f9..4135dc3eb4 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -134,7 +134,7 @@ const ProjectEvents = React.createClass({
     return (
       <div className="box empty-stream">
         <span className="icon icon-exclamation" />
-        <p>{t('There don\'t seem to be any events.')}</p>
+        <p>{t("There don't seem to be any events.")}</p>
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx b/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
index 7d8ee6e00f..022b777df1 100644
--- a/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
+++ b/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
@@ -269,7 +269,7 @@ const ProjectProcessingIssues = React.createClass({
             <div className="form-group" style={{marginBottom: 0}}>
               <label>
                 {t(
-                  'Paste this command into your shell and we\'ll attempt to upload the missing symbols from your machine:'
+                  "Paste this command into your shell and we'll attempt to upload the missing symbols from your machine:"
                 )}
               </label>
               <div
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index f64b96dcce..b76df7a0e9 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -153,7 +153,7 @@ const ProjectReleases = React.createClass({
     return (
       <div className="box empty-stream">
         <span className="icon icon-exclamation" />
-        <p>{t('There don\'t seem to be any releases yet.')}</p>
+        <p>{t("There don't seem to be any releases yet.")}</p>
         <p>
           <a href={this.getReleaseTrackingUrl()}>
             {t('Learn how to integrate Release Tracking')}
diff --git a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
index 9863ed6c07..3f9f9bd5e5 100644
--- a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
@@ -220,11 +220,11 @@ const ProjectUserReportSettings = React.createClass({
       '  <script>\n' +
       '  Raven.showReportDialog({\n' +
       '    // grab the eventId generated by the Sentry SDK\n' +
-      '    eventId: \'{{ request.sentry.id }}\',\n\n' +
+      "    eventId: '{{ request.sentry.id }}',\n\n" +
       '    // use the public DSN (dont include your secret!)\n' +
-      '    dsn: \'' +
+      "    dsn: '" +
       dsn +
-      '\'\n' +
+      "'\n" +
       '  });\n' +
       '  </script>\n' +
       '{% endif %}\n'
@@ -241,9 +241,9 @@ const ProjectUserReportSettings = React.createClass({
       '<script src="https://cdn.ravenjs.com/2.1.0/raven.min.js"></script>\n\n' +
       '<script>\n' +
       '// configure the SDK as you normally would\n' +
-      'Raven.config(\'' +
+      "Raven.config('" +
       dsn +
-      '\').install();\n\n' +
+      "').install();\n\n" +
       '/**\n' +
       ' * Report a routing error to Sentry and show a feedback dialog to\n' +
       ' * the user.\n' +
diff --git a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
index 3d003e43a9..d22084e621 100644
--- a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
+++ b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
@@ -88,7 +88,7 @@ const SaveSearchButton = React.createClass({
               errors: {}
             });
           },
-          error: (err) => {
+          error: err => {
             let errors = err.responseJSON || true;
             errors = errors.detail || true;
             this.setState({
@@ -123,9 +123,7 @@ const SaveSearchButton = React.createClass({
             <div className="modal-body">
               {this.state.state === FormState.ERROR &&
                 <div className="alert alert-error alert-block">
-                  {t(
-                    `Unable to save your changes. ${this.state.errors}`
-                  )}
+                  {t(`Unable to save your changes. ${this.state.errors}`)}
                 </div>}
               <p>
                 {t(
@@ -220,7 +218,7 @@ const SavedSearchSelector = React.createClass({
           {children.length
             ? children
             : <li className="empty">
-                {t('There don\'t seem to be any saved searches yet.')}
+                {t("There don't seem to be any saved searches yet.")}
               </li>}
           {access.has('project:write') && <MenuItem divider={true} />}
           <li>
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index 852c840666..ba9efdff13 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -229,7 +229,8 @@ const SearchBar = React.createClass({
     let cursor = this.getCursorPosition();
 
     if (
-      cursor === this.state.query.length && this.state.query.charAt(cursor - 1) !== ' '
+      cursor === this.state.query.length &&
+      this.state.query.charAt(cursor - 1) !== ' '
     ) {
       // If the cursor lands at the end of the input value, and the preceding character
       // is not whitespace, then add a space and move the cursor beyond that space.
diff --git a/src/sentry/static/sentry/app/views/teamMembers.jsx b/src/sentry/static/sentry/app/views/teamMembers.jsx
index 27bc9dab45..d4d8d7a077 100644
--- a/src/sentry/static/sentry/app/views/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/teamMembers.jsx
@@ -25,7 +25,8 @@ const TeamMembers = React.createClass({
   componentWillReceiveProps(nextProps) {
     let params = this.props.params;
     if (
-      nextProps.params.teamId !== params.teamId || nextProps.params.orgId !== params.orgId
+      nextProps.params.teamId !== params.teamId ||
+      nextProps.params.orgId !== params.orgId
     ) {
       this.setState(
         {
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx b/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
index 7667d92a72..db2dc60347 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
@@ -28,7 +28,7 @@ describe('HttpRenderer', function() {
       expect(summaryLineWrapper.find('span').text()).toEqual(' [0]');
     });
 
-    it('shouldn\'t blow up if crumb.data is missing', function() {
+    it("shouldn't blow up if crumb.data is missing", function() {
       let httpRendererWrapper = mount(
         <HttpRenderer
           crumb={{
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index 20aef50d1c..a0d32b95f7 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -49,7 +49,7 @@ describe('KeyValueList', function() {
       expect(wrapper.find('.value').at(0).text()).toEqual('false');
     });
 
-    it('shouldn\'t blow up on null', function() {
+    it("shouldn't blow up on null", function() {
       let data = [['a', null]];
       let wrapper = shallow(<KeyValueList data={data} />);
 
diff --git a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
index d313244187..b421246085 100644
--- a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
@@ -128,7 +128,7 @@ describe('RichHttpContent', function() {
       expect(() => shallow(<RichHttpContent data={data} />)).not.toThrow(URIError);
     });
 
-    it('should not cause an invariant violation if data.data isn\'t a string', function() {
+    it("should not cause an invariant violation if data.data isn't a string", function() {
       let data = {
         query: '',
         data: [{foo: 'bar', baz: 1}],
diff --git a/tests/js/spec/stores/groupStore.spec.jsx b/tests/js/spec/stores/groupStore.spec.jsx
index 8303b3c0f9..e47e527788 100644
--- a/tests/js/spec/stores/groupStore.spec.jsx
+++ b/tests/js/spec/stores/groupStore.spec.jsx
@@ -51,7 +51,7 @@ describe('GroupStore', function() {
     });
 
     describe('onUpdate()', function() {
-      it('should treat undefined itemIds argument as \'all\'', function() {
+      it("should treat undefined itemIds argument as 'all'", function() {
         this.sandbox.stub(GroupStore, 'trigger');
         GroupStore.onUpdate(1337, undefined, 'somedata');
 
@@ -61,7 +61,7 @@ describe('GroupStore', function() {
     });
 
     describe('onUpdateSuccess()', function() {
-      it('should treat undefined itemIds argument as \'all\'', function() {
+      it("should treat undefined itemIds argument as 'all'", function() {
         this.sandbox.stub(GroupStore, 'trigger');
         GroupStore.onUpdateSuccess(1337, undefined, 'somedata');
 
@@ -71,7 +71,7 @@ describe('GroupStore', function() {
     });
 
     describe('onUpdateError()', function() {
-      it('should treat undefined itemIds argument as \'all\'', function() {
+      it("should treat undefined itemIds argument as 'all'", function() {
         this.sandbox.stub(GroupStore, 'trigger');
         GroupStore.onUpdateError(1337, undefined, 'something failed', false);
 
diff --git a/tests/js/spec/stores/streamTagStore.spec.jsx b/tests/js/spec/stores/streamTagStore.spec.jsx
index 7b70d3d6ed..bd53ac04e0 100644
--- a/tests/js/spec/stores/streamTagStore.spec.jsx
+++ b/tests/js/spec/stores/streamTagStore.spec.jsx
@@ -23,7 +23,7 @@ describe('StreamTagStore', function() {
       expect(StreamTagStore.tags.assigned.values).toEqual(['me', 'janesmith']);
     });
 
-    it('should fall back to email when username isn\'t available', () => {
+    it("should fall back to email when username isn't available", () => {
       this.sandbox.stub(MemberListStore, 'getAll').returns([
         {
           email: 'janesmith@example.org'
diff --git a/tests/js/spec/utils/marked.spec.jsx b/tests/js/spec/utils/marked.spec.jsx
index 0d9ae33a69..41438d2bd6 100644
--- a/tests/js/spec/utils/marked.spec.jsx
+++ b/tests/js/spec/utils/marked.spec.jsx
@@ -37,7 +37,7 @@ describe('marked', function() {
     }
   });
 
-  it('rejected images shouldn\'t be rendered at all', function() {
+  it("rejected images shouldn't be rendered at all", function() {
     for (let test of [['![x](javascript:foo)', '']]) {
       expectMarkdown(test);
     }
diff --git a/tests/js/spec/views/stream/actions.spec.jsx b/tests/js/spec/views/stream/actions.spec.jsx
index 90cbfef817..c351d3c2a8 100644
--- a/tests/js/spec/views/stream/actions.spec.jsx
+++ b/tests/js/spec/views/stream/actions.spec.jsx
@@ -33,7 +33,7 @@ describe('StreamActions', function() {
     });
 
     describe('for all items', function() {
-      it('should invoke the callback with \'undefined\' and deselect all', function() {
+      it("should invoke the callback with 'undefined' and deselect all", function() {
         this.sandbox.stub(SelectedGroupStore, 'deselectAll');
         let callback = this.sandbox.stub();
 
