commit 9becce91758fc18f5836d5c5bdab346c3c8138bc
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jan 7 11:00:04 2019 -0800

    test(user-feedback): Add acceptance test for project user feedback (#11371)

diff --git a/src/sentry/testutils/fixtures.py b/src/sentry/testutils/fixtures.py
index 4f92ae4912..f28307c2a8 100644
--- a/src/sentry/testutils/fixtures.py
+++ b/src/sentry/testutils/fixtures.py
@@ -30,7 +30,8 @@ from sentry.mediators import sentry_apps, sentry_app_installations, service_hook
 from sentry.models import (
     Activity, Environment, Event, EventError, EventMapping, Group, Organization, OrganizationMember,
     OrganizationMemberTeam, Project, ProjectBookmark, Team, User, UserEmail, Release, Commit, ReleaseCommit,
-    CommitAuthor, Repository, CommitFileChange, ProjectDebugFile, File, UserPermission, EventAttachment
+    CommitAuthor, Repository, CommitFileChange, ProjectDebugFile, File, UserPermission, EventAttachment,
+    UserReport
 )
 from sentry.utils.canonical import CanonicalKeyDict
 
@@ -765,3 +766,15 @@ class Fixtures(object):
         _kwargs.update(kwargs)
 
         return service_hooks.Creator.run(**_kwargs)
+
+    def create_userreport(self, **kwargs):
+        userreport = UserReport.objects.create(
+            group=kwargs['group'],
+            event_id='a' * 32,
+            project=kwargs['project'],
+            name='Jane Doe',
+            email='jane@example.com',
+            comments=make_sentence()
+        )
+
+        return userreport
diff --git a/tests/acceptance/test_project_user_feedback.py b/tests/acceptance/test_project_user_feedback.py
new file mode 100644
index 0000000000..5ab29aee89
--- /dev/null
+++ b/tests/acceptance/test_project_user_feedback.py
@@ -0,0 +1,39 @@
+from __future__ import absolute_import
+
+from django.utils import timezone
+
+from sentry.testutils import AcceptanceTestCase
+
+
+class ProjectUserFeedbackTest(AcceptanceTestCase):
+    def setUp(self):
+        super(ProjectUserFeedbackTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            owner=self.user, name='Rowdy Tiger')
+        self.team = self.create_team(
+            organization=self.org, name='Mariachi Band')
+        self.project = self.create_project(
+            organization=self.org,
+            teams=[self.team],
+            name='Bengal',
+        )
+        self.login_as(self.user)
+        self.path = u'/{}/{}/user-feedback/'.format(
+            self.org.slug, self.project.slug)
+        self.project.update(first_event=timezone.now())
+
+    def test(self):
+        self.create_group(
+            project=self.project,
+            message='Foo bar',
+        )
+        self.create_userreport(group=self.group, project=self.project, event=self.event)
+        self.browser.get(self.path)
+        self.browser.wait_until_not('.loading')
+        self.browser.snapshot('project user feedback')
+
+    def test_empty(self):
+        self.browser.get(self.path)
+        self.browser.wait_until_not('.loading')
+        self.browser.snapshot('project user feedback - empty')
