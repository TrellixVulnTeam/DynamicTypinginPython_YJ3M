commit f9ab15ad4674b3d9382fe1b48243eeb84ed61421
Author: ted kaemming <ted@kaemming.com>
Date:   Tue May 22 19:10:04 2018 -0700

    fix(search): Don't validate environment search tag consistency if ANY (#8523)
    
    Fixes SENTRY-6NX.

diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index 6b2da95ebd..9982dc7629 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -17,7 +17,7 @@ from django.utils import timezone
 
 from sentry import quotas, tagstore
 from sentry.api.paginator import DateTimePaginator, Paginator, SequencePaginator
-from sentry.search.base import SearchBackend
+from sentry.search.base import ANY, SearchBackend
 from sentry.search.django.constants import (
     MSSQL_ENGINES, MSSQL_SORT_CLAUSES, MYSQL_SORT_CLAUSES, ORACLE_SORT_CLAUSES, SORT_CLAUSES,
     SQLITE_SORT_CLAUSES
@@ -295,11 +295,10 @@ class DjangoSearchBackend(SearchBackend):
 
         if environment is not None:
             if 'environment' in tags:
-                # TODO: This should probably just overwrite the existing tag,
-                # rather than asserting on it, but...?
-                assert Environment.objects.get(
+                environment_name = tags.pop('environment')
+                assert environment_name is ANY or Environment.objects.get(
                     projects=project,
-                    name=tags.pop('environment'),
+                    name=environment_name,
                 ).id == environment.id
 
             event_queryset_builder = QuerySetBuilder({
diff --git a/tests/sentry/search/django/tests.py b/tests/sentry/search/django/tests.py
index 9aad17d779..a0fa0870ef 100644
--- a/tests/sentry/search/django/tests.py
+++ b/tests/sentry/search/django/tests.py
@@ -329,6 +329,15 @@ class DjangoSearchBackendTest(TestCase):
             tags={'server': ANY})
         assert set(results) == set([self.group2])
 
+        results = self.backend.query(
+            self.project,
+            environment=self.environments['staging'],
+            tags={
+                'environment': ANY,
+                'server': ANY,
+            })
+        assert set(results) == set([self.group2])
+
         results = self.backend.query(
             self.project,
             environment=self.environments['production'],
