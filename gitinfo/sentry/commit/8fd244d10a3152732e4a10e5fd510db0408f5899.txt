commit 8fd244d10a3152732e4a10e5fd510db0408f5899
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Apr 4 15:11:34 2018 -0700

    style: Use panels for issue lists (#7914)

diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index 015115f287..908a0ec49f 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -2,6 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
+import {Flex, Box} from 'grid-emotion';
 
 import ApiMixin from '../mixins/apiMixin';
 import IndicatorStore from '../stores/indicatorStore';
@@ -12,6 +13,7 @@ import GroupStore from '../stores/groupStore';
 import Link from './link';
 import ProjectLink from './projectLink';
 import {t} from '../locale';
+import {PanelItem} from './panels';
 
 class CompactIssueHeader extends React.Component {
   static propTypes = {
@@ -68,15 +70,19 @@ class CompactIssueHeader extends React.Component {
       styles = {color: '#57be8c'};
     }
     return (
-      <div>
-        <span className="error-level truncate" title={data.level} />
-        <h3 className="truncate">
-          <ProjectLink to={`/${orgId}/${projectId}/issues/${data.id}/`}>
-            <span className="icon icon-soundoff" />
-            <span className="icon icon-star-solid" />
-            {this.getTitle()}
-          </ProjectLink>
-        </h3>
+      <React.Fragment>
+        <Flex align="center">
+          <Box mr={1}>
+            <span className="error-level truncate" title={data.level} />
+          </Box>
+          <h3 className="truncate">
+            <ProjectLink to={`/${orgId}/${projectId}/issues/${data.id}/`}>
+              <span className="icon icon-soundoff" />
+              <span className="icon icon-star-solid" />
+              {this.getTitle()}
+            </ProjectLink>
+          </h3>
+        </Flex>
         <div className="event-extra">
           <span className="project-name">
             <ProjectLink to={`/${orgId}/${projectId}/`}>{data.project.slug}</ProjectLink>
@@ -94,7 +100,7 @@ class CompactIssueHeader extends React.Component {
           )}
           <span className="culprit">{this.getMessage()}</span>
         </div>
-      </div>
+      </React.Fragment>
     );
   }
 }
@@ -194,7 +200,7 @@ const CompactIssue = createReactClass({
     let title = <span className="icon-more" />;
 
     return (
-      <li className={className} onClick={this.toggleSelect}>
+      <PanelItem className={className} onClick={this.toggleSelect} direction="column">
         <CompactIssueHeader data={issue} orgId={orgId} projectId={projectId} />
         {this.props.statsPeriod && (
           <div className="event-graph">
@@ -248,7 +254,7 @@ const CompactIssue = createReactClass({
           </div>
         )}
         {this.props.children}
-      </li>
+      </PanelItem>
     );
   },
 });
diff --git a/src/sentry/static/sentry/app/components/emptyStateWarning.jsx b/src/sentry/static/sentry/app/components/emptyStateWarning.jsx
new file mode 100644
index 0000000000..e6584dbdfa
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/emptyStateWarning.jsx
@@ -0,0 +1,37 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+class EmptyStateWarning extends React.Component {
+  render() {
+    return (
+      <EmptyStreamWrapper>
+        <Icon className="icon icon-exclamation" />
+        {this.props.children}
+      </EmptyStreamWrapper>
+    );
+  }
+}
+
+const EmptyStreamWrapper = styled.div`
+  text-align: center;
+  font-size: 22px;
+  padding: 48px 0;
+
+  p {
+    line-height: 1.2;
+    margin: 0 auto 20px;
+    &:last-child {
+      margin-bottom: 0;
+    }
+  }
+`;
+
+const Icon = styled.div`
+  display: block;
+  font-size: 54px;
+  color: ${p => p.theme.gray2}
+  margin-bottom: 20px;
+  opacity: 0.45;
+`;
+
+export default EmptyStateWarning;
diff --git a/src/sentry/static/sentry/app/components/groupList.jsx b/src/sentry/static/sentry/app/components/groupList.jsx
index 10b5066f47..6b2fe5d266 100644
--- a/src/sentry/static/sentry/app/components/groupList.jsx
+++ b/src/sentry/static/sentry/app/components/groupList.jsx
@@ -6,14 +6,16 @@ import jQuery from 'jquery';
 
 import SentryTypes from '../proptypes';
 import ApiMixin from '../mixins/apiMixin';
-import GroupListHeader from '../components/groupListHeader';
+import GroupListHeader from './groupListHeader';
 import GroupStore from '../stores/groupStore';
-import LoadingError from '../components/loadingError';
-import LoadingIndicator from '../components/loadingIndicator';
+import LoadingError from './loadingError';
+import LoadingIndicator from './loadingIndicator';
 import ProjectState from '../mixins/projectState';
-import StreamGroup from '../components/stream/group';
+import StreamGroup from './stream/group';
 import utils from '../utils';
 import {t} from '../locale';
+import {Panel, PanelBody} from './panels';
+import EmptyStateWarning from '../components/emptyStateWarning';
 
 const GroupList = createReactClass({
   displayName: 'GroupList',
@@ -129,10 +131,13 @@ const GroupList = createReactClass({
     else if (this.state.error) return <LoadingError onRetry={this.fetchData} />;
     else if (this.state.groupIds.length === 0)
       return (
-        <div className="box empty-stream">
-          <span className="icon icon-exclamation" />
-          <p>{t("There doesn't seem to be any events fitting the query.")}</p>
-        </div>
+        <Panel>
+          <PanelBody>
+            <EmptyStateWarning>
+              {t("There doesn't seem to be any events fitting the query.")}
+            </EmptyStateWarning>
+          </PanelBody>
+        </Panel>
       );
 
     let wrapperClass;
diff --git a/src/sentry/static/sentry/app/components/issueList.jsx b/src/sentry/static/sentry/app/components/issueList.jsx
index 0cf8a67702..1b008b5756 100644
--- a/src/sentry/static/sentry/app/components/issueList.jsx
+++ b/src/sentry/static/sentry/app/components/issueList.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 
 import createReactClass from 'create-react-class';
 
+import {Panel, PanelBody} from './panels';
 import ApiMixin from '../mixins/apiMixin';
 import CompactIssue from './compactIssue';
 import LoadingError from './loadingError';
@@ -20,6 +21,7 @@ const IssueList = createReactClass({
     renderEmpty: PropTypes.func,
     statsPeriod: PropTypes.string,
     showActions: PropTypes.bool,
+    noBorder: PropTypes.bool,
   },
 
   mixins: [ApiMixin],
@@ -28,6 +30,7 @@ const IssueList = createReactClass({
     return {
       pagination: true,
       query: {},
+      noBorder: false,
     };
   },
 
@@ -90,26 +93,30 @@ const IssueList = createReactClass({
 
   renderResults() {
     let body;
-    let params = this.props.params;
+    const {params, noBorder} = this.props;
 
     if (this.state.loading) body = this.renderLoading();
     else if (this.state.error) body = <LoadingError onRetry={this.fetchData} />;
     else if (this.state.issueIds.length > 0) {
+      const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};
+
       body = (
-        <ul className="issue-list">
-          {this.state.data.map(issue => {
-            return (
-              <CompactIssue
-                key={issue.id}
-                id={issue.id}
-                data={issue}
-                orgId={params.orgId}
-                statsPeriod={this.props.statsPeriod}
-                showActions={this.props.showActions}
-              />
-            );
-          })}
-        </ul>
+        <Panel style={panelStyle}>
+          <PanelBody className="issue-list">
+            {this.state.data.map(issue => {
+              return (
+                <CompactIssue
+                  key={issue.id}
+                  id={issue.id}
+                  data={issue}
+                  orgId={params.orgId}
+                  statsPeriod={this.props.statsPeriod}
+                  showActions={this.props.showActions}
+                />
+              );
+            })}
+          </PanelBody>
+        </Panel>
       );
     } else body = (this.props.renderEmpty || this.renderEmpty)();
 
@@ -130,13 +137,13 @@ const IssueList = createReactClass({
 
   render() {
     return (
-      <div>
+      <React.Fragment>
         {this.renderResults()}
         {this.props.pagination &&
           this.state.pageLinks && (
             <Pagination pageLinks={this.state.pageLinks} {...this.props} />
           )}
-      </div>
+      </React.Fragment>
     );
   },
 });
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 862d7d9dce..9a151322b5 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -267,6 +267,7 @@ const Sidebar = createReactClass({
                 ref="issueList"
                 showActions={false}
                 params={{orgId: org.slug}}
+                noBorder
               />
             </SidebarPanel>
           )}
@@ -289,6 +290,7 @@ const Sidebar = createReactClass({
                 ref="issueList"
                 showActions={false}
                 params={{orgId: org.slug}}
+                noBorder
               />
             </SidebarPanel>
           )}
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index 4637858eba..facd859c5e 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -24,6 +24,7 @@ import CommitLink from '../components/commitLink';
 
 import {t, tct} from '../locale';
 import {sortArray} from '../utils';
+import {Panel, PanelBody, PanelItem} from '../components/panels';
 
 class UnreleasedChanges extends AsyncComponent {
   getEndpoints() {
@@ -125,7 +126,15 @@ class AssignedIssues extends React.Component {
   };
 
   renderEmpty = () => {
-    return <div className="box empty">{t('No issues have been assigned to you.')}</div>;
+    return (
+      <Panel>
+        <PanelBody>
+          <PanelItem justify="center">
+            {t('No issues have been assigned to you.')}
+          </PanelItem>
+        </PanelBody>
+      </Panel>
+    );
   };
 
   refresh = () => {
@@ -177,9 +186,13 @@ class NewIssues extends React.Component {
 
   renderEmpty = () => {
     return (
-      <div className="box empty">
-        {t('No new issues have been seen in the last week.')}
-      </div>
+      <Panel>
+        <PanelBody>
+          <PanelItem justify="center">
+            {t('No new issues have been seen in the last week.')}
+          </PanelItem>
+        </PanelBody>
+      </Panel>
     );
   };
 
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index d93be0d543..ff88e81ebb 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -12,6 +12,8 @@ import LoadingIndicator from '../components/loadingIndicator';
 import Pagination from '../components/pagination';
 import CompactIssue from '../components/compactIssue';
 import EventUserReport from '../components/events/userReport';
+import {Panel, PanelBody} from '../components/panels';
+import EmptyStateWarning from '../components/emptyStateWarning';
 import {t, tct} from '../locale';
 import withEnvironmentInQueryString from '../utils/withEnvironmentInQueryString';
 
@@ -144,32 +146,24 @@ const ProjectUserReports = createReactClass({
   },
 
   renderStreamBody() {
-    let body;
-
-    if (this.state.loading) body = this.renderLoading();
-    else if (this.state.error) body = <LoadingError onRetry={this.fetchData} />;
-    else if (this.state.reportList.length > 0) body = this.renderResults();
-    else if (this.state.query && this.state.query !== this.props.defaultQuery)
-      body = this.renderNoQueryResults();
-    else body = this.renderEmpty();
-
-    return body;
-  },
-
-  renderLoading() {
-    return (
-      <div className="box">
-        <LoadingIndicator />
-      </div>
-    );
+    if (this.state.loading) {
+      return <LoadingIndicator />;
+    } else if (this.state.error) {
+      return <LoadingError onRetry={this.fetchData} />;
+    } else if (this.state.reportList.length > 0) {
+      return this.renderResults();
+    } else if (this.state.query && this.state.query !== this.props.defaultQuery) {
+      return this.renderNoQueryResults();
+    } else {
+      return this.renderEmpty();
+    }
   },
 
   renderNoQueryResults() {
     return (
-      <div className="box empty-stream">
-        <span className="icon icon-exclamation" />
+      <EmptyStateWarning>
         <p>{t('Sorry, no results match your search query.')}</p>
-      </div>
+      </EmptyStateWarning>
     );
   },
 
@@ -181,23 +175,22 @@ const ProjectUserReports = createReactClass({
         })
       : t('No user reports have been collected.');
     return (
-      <div className="box empty-stream">
-        <span className="icon icon-exclamation" />
+      <EmptyStateWarning>
         <p>{message}</p>
         <p>
           <Link to={this.getUserReportsUrl()}>
             {t('Learn how to integrate User Feedback')}
           </Link>
         </p>
-      </div>
+      </EmptyStateWarning>
     );
   },
 
   renderResults() {
-    let {orgId, projectId} = this.props.params;
+    const {orgId, projectId} = this.props.params;
 
-    let children = this.state.reportList.map((item, itemIdx) => {
-      let issue = item.issue;
+    const children = this.state.reportList.map(item => {
+      const issue = item.issue;
 
       return (
         <CompactIssue
@@ -217,7 +210,7 @@ const ProjectUserReports = createReactClass({
       );
     });
 
-    return <ul className="issue-list">{children}</ul>;
+    return <div className="issue-list">{children}</div>;
   },
 
   render() {
@@ -248,7 +241,9 @@ const ProjectUserReports = createReactClass({
             </div>
           </div>
         </div>
-        {this.renderStreamBody()}
+        <Panel>
+          <PanelBody>{this.renderStreamBody()}</PanelBody>
+        </Panel>
         <Pagination pageLinks={this.state.pageLinks} />
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index 77c1e75950..9bf1e84f6c 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -19,6 +19,7 @@ import ApiMixin from '../../mixins/apiMixin';
 import {t} from '../../locale';
 import SentryTypes from '../../proptypes';
 import OrganizationState from '../../mixins/organizationState';
+import {Panel, PanelBody, PanelItem} from '../../components/panels';
 
 const ReleaseOverview = createReactClass({
   displayName: 'ReleaseOverview',
@@ -203,9 +204,13 @@ const ReleaseOverview = createReactClass({
               query={query}
               pagination={false}
               renderEmpty={() => (
-                <div className="box empty m-b-2" key="none">
-                  {t('No issues resolved')}
-                </div>
+                <Panel>
+                  <PanelBody>
+                    <PanelItem key="none" justify="center">
+                      {t('No issues resolved')}
+                    </PanelItem>
+                  </PanelBody>
+                </Panel>
               )}
               ref="issueList"
               showActions={false}
@@ -223,9 +228,11 @@ const ReleaseOverview = createReactClass({
               statsPeriod="0"
               pagination={false}
               renderEmpty={() => (
-                <div className="box empty m-b-2" key="none">
-                  {t('No new issues')}
-                </div>
+                <Panel>
+                  <PanelBody>
+                    <PanelItem justify="center">{t('No new issues')}</PanelItem>
+                  </PanelBody>
+                </Panel>
               )}
               ref="issueList"
               showActions={false}
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index dec31c6398..e4d7fbf5f0 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -32,11 +32,6 @@
     }
   }
 
-  .box,
-  .issue-list {
-    margin-bottom: 25px;
-  }
-
   .nav-header {
     padding: 0 0 10px;
     margin: 0;
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 0ce4a6dfc0..e525b6eedc 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -712,16 +712,8 @@
 */
 
 .issue-list {
-  .list-unstyled;
-  border: 1px solid @trim;
-  border-radius: 3px;
-  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
-
+  padding: 0;
   .issue {
-    padding: 12px 40px 5px 35px;
-    border-bottom: 1px solid lighten(@trim, 5);
-    position: relative;
-
     h3 {
       .icon-star-solid,
       .icon-soundoff {
@@ -780,11 +772,14 @@
     .error-level {
       .square(12px);
       border-radius: 50%;
-      position: absolute;
       top: 13px;
       left: 12px;
     }
 
+    .event-type {
+      position: absolute;
+    }
+
     h3 {
       font-size: 16px;
       margin: 0;
@@ -798,6 +793,7 @@
     }
 
     .event-extra {
+      padding-left: 20px;
       overflow: hidden;
       white-space: nowrap;
       text-overflow: ellipsis;
diff --git a/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap
index 4326001d7e..0a424a5093 100644
--- a/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap
@@ -48,58 +48,18 @@ exports[`projectUserReports renders 1`] = `
       </div>
     </div>
   </div>
-  <ul
-    className="issue-list"
-  >
-    <CompactIssue
-      data={
-        Object {
-          "assignedTo": null,
-          "id": "1",
-          "project": Object {
-            "id": "2",
-            "slug": "project-slug",
-          },
-          "stats": Object {
-            "24h": Array [
-              Array [
-                1517281200,
-                2,
-              ],
-              Array [
-                1517310000,
-                1,
-              ],
-            ],
-            "30d": Array [
-              Array [
-                1514764800,
-                1,
-              ],
-              Array [
-                1515024000,
-                122,
-              ],
-            ],
-          },
-          "tags": Array [],
-        }
-      }
-      id="1"
-      key="123"
-      orgId="org-slug"
-      projectId="project-slug"
+  <Panel>
+    <PanelBody
+      direction="column"
+      disablePadding={true}
+      flex={false}
     >
-      <EventUserReport
-        issueId="1"
-        orgId="org-slug"
-        projectId="project-slug"
-        report={
-          Object {
-            "comments": "Something bad happened",
-            "email": "lyn@sentry.io",
-            "id": "123",
-            "issue": Object {
+      <div
+        className="issue-list"
+      >
+        <CompactIssue
+          data={
+            Object {
               "assignedTo": null,
               "id": "1",
               "project": Object {
@@ -129,13 +89,61 @@ exports[`projectUserReports renders 1`] = `
                 ],
               },
               "tags": Array [],
-            },
-            "name": "Lyn",
+            }
           }
-        }
-      />
-    </CompactIssue>
-  </ul>
+          id="1"
+          key="123"
+          orgId="org-slug"
+          projectId="project-slug"
+        >
+          <EventUserReport
+            issueId="1"
+            orgId="org-slug"
+            projectId="project-slug"
+            report={
+              Object {
+                "comments": "Something bad happened",
+                "email": "lyn@sentry.io",
+                "id": "123",
+                "issue": Object {
+                  "assignedTo": null,
+                  "id": "1",
+                  "project": Object {
+                    "id": "2",
+                    "slug": "project-slug",
+                  },
+                  "stats": Object {
+                    "24h": Array [
+                      Array [
+                        1517281200,
+                        2,
+                      ],
+                      Array [
+                        1517310000,
+                        1,
+                      ],
+                    ],
+                    "30d": Array [
+                      Array [
+                        1514764800,
+                        1,
+                      ],
+                      Array [
+                        1515024000,
+                        122,
+                      ],
+                    ],
+                  },
+                  "tags": Array [],
+                },
+                "name": "Lyn",
+              }
+            }
+          />
+        </CompactIssue>
+      </div>
+    </PanelBody>
+  </Panel>
   <Pagination
     onCursor={[Function]}
   />
