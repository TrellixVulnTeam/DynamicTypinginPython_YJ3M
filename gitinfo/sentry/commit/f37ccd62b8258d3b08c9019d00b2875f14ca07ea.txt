commit f37ccd62b8258d3b08c9019d00b2875f14ca07ea
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 9 14:03:29 2010 -0800

    Better coersion support (fixes GH-56)

diff --git a/sentry/helpers.py b/sentry/helpers.py
index affc633e00..882a573b97 100644
--- a/sentry/helpers.py
+++ b/sentry/helpers.py
@@ -1,6 +1,7 @@
 import logging
 import urllib
 import urllib2
+import uuid
 
 import django
 from django.conf import settings
@@ -61,12 +62,18 @@ def transform(value):
     # TODO: make this extendable
     # TODO: include some sane defaults, like UUID
     # TODO: dont coerce strings to unicode, leave them as strings
-    if isinstance(value, (tuple, list)):
-        return [transform(o) for o in value]
+    if isinstance(value, (tuple, list, set, frozenset)):
+        return type(value)(transform(o) for o in value)
+    elif isinstance(value, uuid.UUID):
+        return repr(value)
     elif isinstance(value, dict):
         return dict((k, transform(v)) for k, v in value.iteritems())
     elif isinstance(value, basestring):
-        value = force_unicode(value)
+        try:
+            unicode(value)
+        except:
+            value = force_unicode(value)
+        return value
     elif not isinstance(value, (int, bool)) and value is not None:
         # XXX: we could do transform(repr(value)) here
         return force_unicode(value)
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 80b67e1e55..47b5a39ec1 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -25,7 +25,7 @@ from django.template import TemplateSyntaxError
 from django.utils.encoding import smart_unicode
 
 from sentry import conf
-from sentry.helpers import transform
+from sentry.helpers import transform, force_unicode
 from sentry.models import Message, GroupedMessage
 from sentry.client.base import SentryClient
 from sentry.client.handlers import SentryHandler
@@ -266,7 +266,7 @@ class SentryTestCase(TestCase):
 
         error = get_client().create_from_text(value)
         self.assertEquals(Message.objects.count(), cnt+1)
-        self.assertEquals(error.message, value)
+        self.assertEquals(error.message, force_unicode(value))
 
         logging.info(value)
         self.assertEquals(Message.objects.count(), cnt+2)
@@ -810,7 +810,7 @@ class SentryMailTest(TestCase):
         out = mail.outbox[0]
 
         self.assertTrue('Traceback (most recent call last):' in out.body)
-        self.assertTrue("COOKIES:{'commenter_name': u'admin'," in out.body, out.body)
+        self.assertTrue("COOKIES:{'commenter_name': 'admin'," in out.body, out.body)
         self.assertEquals(out.subject, 'Error (EXTERNAL IP): /group/1')
 
     def test_mail_on_creation(self):
