commit f3100fe950fa06f7bd753bc58daa1cdd1988d795
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 13 21:19:05 2012 -0800

    TESTS

diff --git a/tests/sentry/web/api/__init__.py b/tests/sentry/web/api/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
new file mode 100644
index 0000000000..67f0af4c92
--- /dev/null
+++ b/tests/sentry/web/api/tests.py
@@ -0,0 +1,39 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+import mock
+from django.core.urlresolvers import reverse
+from sentry.models import Project
+from sentry.testutils import TestCase, fixture
+
+
+class CrossDomainXmlTest(TestCase):
+    @fixture
+    def project(self):
+        return Project.objects.create(name='foo', slug='foo')
+
+    @fixture
+    def path(self):
+        return reverse('sentry-api-crossdomain-xml', kwargs={'project_id': self.project.slug})
+
+    @mock.patch('sentry.web.api.get_origins')
+    def test_output_with_global(self, get_origins):
+        get_origins.return_value = '*'
+        resp = self.client.get(self.path)
+        get_origins.assert_called_once_with(self.project)
+        self.assertEquals(resp.status_code, 200)
+        self.assertEquals(resp['Content-Type'], 'application/xml')
+        self.assertTemplateUsed(resp, 'sentry/crossdomain.xml')
+        self.assertIn('<allow-access-from domain="*" secure="true"></allow-access-from>', resp.content)
+
+    @mock.patch('sentry.web.api.get_origins')
+    def test_output_with_whitelist(self, get_origins):
+        get_origins.return_value = ['disqus.com', 'www.disqus.com']
+        resp = self.client.get(self.path)
+        get_origins.assert_called_once_with(self.project)
+        self.assertEquals(resp.status_code, 200)
+        self.assertEquals(resp['Content-Type'], 'application/xml')
+        self.assertTemplateUsed(resp, 'sentry/crossdomain.xml')
+        self.assertIn('<allow-access-from domain="disqus.com" secure="true"></allow-access-from>', resp.content)
+        self.assertIn('<allow-access-from domain="www.disqus.com" secure="true"></allow-access-from>', resp.content)
