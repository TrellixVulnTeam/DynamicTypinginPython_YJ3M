commit b1b096380d05d596b67384970461b27890152e74
Author: Dora <dora.l.chan@gmail.com>
Date:   Wed Mar 11 16:25:56 2020 -0700

    fix(rrweb): rrweb wrapper (#17543)
    
    * fixing rrweb grid
    
    * remove styled lazy load
    
    * added fix to replay
    
    * add space
    
    Co-authored-by: Dora Chan <dora.lchan@gmail.com>

diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 9d53f2be3a..4510f4394d 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -228,13 +228,6 @@ class EventEntries extends React.Component {
             location={location}
           />
         )}
-        {!isShare && features.has('event-attachments') && (
-          <RRWebIntegration
-            event={event}
-            orgId={organization.slug}
-            projectId={project.slug}
-          />
-        )}
         {this.renderEntries()}
         {hasContext && <EventContexts group={group} event={event} />}
         {!objectIsEmpty(event.context) && <EventExtraData event={event} />}
@@ -258,6 +251,13 @@ class EventEntries extends React.Component {
             showSelector={features.has('set-grouping-config')}
           />
         )}
+        {!isShare && features.has('event-attachments') && (
+          <RRWebIntegration
+            event={event}
+            orgId={organization.slug}
+            projectId={project.slug}
+          />
+        )}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx b/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx
index 2c8fe030f9..278c6fe3ce 100644
--- a/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx
+++ b/src/sentry/static/sentry/app/components/events/rrwebIntegration.jsx
@@ -1,9 +1,10 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from '@emotion/styled';
 
+import space from 'app/styles/space';
+import {Panel} from 'app/components/panels';
 import AsyncComponent from 'app/components/asyncComponent';
-import {Panel, PanelBody, PanelItem} from 'app/components/panels';
-import {t} from 'app/locale';
 import LazyLoad from 'app/components/lazyLoad';
 
 export default class RRWebIntegration extends AsyncComponent {
@@ -41,25 +42,24 @@ export default class RRWebIntegration extends AsyncComponent {
     const url = `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${attachment.id}/?download`;
 
     return (
-      <div className="box">
-        <div className="box-header">
-          <h3>{t('Replay')}</h3>
-          <Panel>
-            <PanelBody>
-              <PanelItem>
-                <LazyLoad
-                  component={() =>
-                    import(
-                      /* webpackChunkName: "rrwebReplayer" */ './rrwebReplayer'
-                    ).then(mod => mod.default)
-                  }
-                  url={url}
-                />
-              </PanelItem>
-            </PanelBody>
-          </Panel>
-        </div>
-      </div>
+      <ReplayWrapper>
+        <h5>Replay</h5>
+        <Panel>
+          <LazyLoad
+            component={() =>
+              import(/* webpackChunkName: "rrwebReplayer" */ './rrwebReplayer').then(
+                mod => mod.default
+              )
+            }
+            url={url}
+          />
+        </Panel>
+      </ReplayWrapper>
     );
   }
 }
+
+const ReplayWrapper = styled('div')`
+  padding-top: ${space(3)};
+  overflow: hidden;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx b/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx
index e6d86d0abd..1ff9f37883 100644
--- a/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx
+++ b/src/sentry/static/sentry/app/components/events/rrwebReplayer.jsx
@@ -3,6 +3,8 @@ import PropTypes from 'prop-types';
 import styled from '@emotion/styled';
 import rrwebPlayer from 'rrweb-player';
 
+import theme from 'app/utils/theme';
+
 class RRWebReplayer extends Component {
   static propTypes = {
     url: PropTypes.string.isRequired,
@@ -28,16 +30,16 @@ class RRWebReplayer extends Component {
 }
 
 export default styled(RRWebReplayer)`
-  display: flex;
-  flex: 1;
-  align-items: center;
-
-  .rr-player {
-    position: relative;
-  }
-
+  .rr-player,
   .rr-player__frame {
+    width: auto !important;
+    max-width: 600px;
     overflow: hidden;
+    margin: 0 auto;
+
+    @media (min-width: ${theme.breakpoints[3]}) {
+      max-width: 800px;
+    }
   }
 
   .replayer-wrapper {
@@ -48,10 +50,6 @@ export default styled(RRWebReplayer)`
     top: 50%;
   }
 
-  .replayer-wrapper > iframe {
-    border: none;
-  }
-
   .rr-controller {
     width: 100%;
     height: 80px;
