commit 88ecb82f33caa9d0889f10eacd95db4ee27e2936
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Apr 21 11:43:43 2020 -0700

    build(webpack): Fix Sentry APM on webpack builds (#18380)
    
    This fixes Sentry APM for webpack builds and removes user tag.
    * remove commit and webpack hash as tags

diff --git a/build-utils/sentry-instrumentation.js b/build-utils/sentry-instrumentation.js
index 6efc9b1673..1203638759 100644
--- a/build-utils/sentry-instrumentation.js
+++ b/build-utils/sentry-instrumentation.js
@@ -9,7 +9,6 @@ const {
   TRAVIS_BRANCH,
   TRAVIS_PULL_REQUEST,
   TRAVIS_PULL_REQUEST_BRANCH,
-  TRAVIS_PULL_REQUEST_SHA,
 } = process.env;
 const IS_TRAVIS = !!TRAVIS_COMMIT;
 
@@ -18,8 +17,8 @@ const GB_BYTE = 1073741824;
 
 class SentryInstrumentation {
   constructor() {
-    // Only run if SENTRY_INSTRUMENTATION` is set or when in travis, only in the javascript suite
-    if (!SENTRY_INSTRUMENTATION && TEST_SUITE !== 'js') {
+    // Only run if SENTRY_INSTRUMENTATION` is set or when in travis, only in the javascript suite that runs webpack
+    if (!SENTRY_INSTRUMENTATION && TEST_SUITE !== 'js-build') {
       return;
     }
 
@@ -30,15 +29,11 @@ class SentryInstrumentation {
     this.Sentry.init({
       dsn: 'https://3d282d186d924374800aa47006227ce9@sentry.io/2053674',
       environment: IS_TRAVIS ? 'travis' : 'local',
+      tracesSampleRate: 1.0,
     });
 
-    if (!IS_TRAVIS) {
-      this.Sentry.setUser({
-        username: require('os').userInfo().username,
-      });
-    } else {
+    if (IS_TRAVIS) {
       this.Sentry.setTag('branch', TRAVIS_PULL_REQUEST_BRANCH || TRAVIS_BRANCH);
-      this.Sentry.setTag('commit', TRAVIS_PULL_REQUEST_SHA || TRAVIS_COMMIT);
       this.Sentry.setTag('pull_request', TRAVIS_PULL_REQUEST);
     }
 
@@ -84,13 +79,10 @@ class SentryInstrumentation {
                 file: assetName,
                 size: `${Math.round(sizeInKb)} KB`,
               },
-              sampled: true,
             });
 
             const start = transaction.startTimestamp;
 
-            hub.configureScope(scope => scope.setSpan(transaction));
-
             const span = hub.startSpan({
               op: 'asset',
               startTimestamp: start,
@@ -100,7 +92,6 @@ class SentryInstrumentation {
                 file: assetName,
                 size: `${Math.round(sizeInKb)} KB`,
               },
-              sampled: true,
             });
             span.startTimestamp = start;
             span.finish();
@@ -123,14 +114,11 @@ class SentryInstrumentation {
         op: 'webpack-build',
         transaction: !this.initialBuild ? 'initial-build' : 'incremental-build',
         description: 'webpack build times',
-        sampled: true,
       },
       true
     );
     transaction.startTimestamp = startTime;
 
-    hub.getScope().setSpan(transaction);
-
     const span = transaction.child({
       op: 'build',
       description: 'webpack build',
@@ -143,7 +131,6 @@ class SentryInstrumentation {
           : 'N/A',
         loadavg: os.loadavg(),
       },
-      sampled: true,
     });
     span.startTimestamp = startTime;
     span.finish();
@@ -160,8 +147,6 @@ class SentryInstrumentation {
           done();
           return;
         }
-        this.Sentry.setTag('webpack-hash', compilation.hash);
-
         this.measureBuildTime(startTime / 1000, endTime / 1000);
 
         // Only record this once and only on Travis
