commit d0a5aeb7ef7b84916d5efcb49e3e8015063ecedc
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Oct 3 11:45:08 2016 -0700

    [workflow] send regression notifications (#4254)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 5c68ae776b..d037437156 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -897,7 +897,7 @@ class EventManager(object):
                     })
 
         if is_regression:
-            Activity.objects.create(
+            activity = Activity.objects.create(
                 project=group.project,
                 group=group,
                 type=Activity.SET_REGRESSION,
@@ -905,6 +905,7 @@ class EventManager(object):
                     'version': release.version if release else '',
                 }
             )
+            activity.send_notification()
 
         return is_regression
 
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 7e97a60171..9df313839d 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -283,8 +283,10 @@ class EventManagerTest(TransactionTestCase):
         group = Group.objects.get(id=group.id)
         assert group.is_resolved()
 
+    @patch('sentry.tasks.activity.send_activity_notifications.delay')
     @patch('sentry.event_manager.plugin_is_regression')
-    def test_marks_as_unresolved_only_with_new_release(self, plugin_is_regression):
+    def test_marks_as_unresolved_with_new_release(self, plugin_is_regression,
+                                                  mock_send_activity_notifications_delay):
         plugin_is_regression.return_value = True
 
         old_release = Release.objects.create(
@@ -351,10 +353,14 @@ class EventManagerTest(TransactionTestCase):
 
         assert not GroupResolution.objects.filter(group=group).exists()
 
-        assert Activity.objects.filter(
+        activity = Activity.objects.get(
             group=group,
             type=Activity.SET_REGRESSION,
-        ).exists()
+        )
+
+        mock_send_activity_notifications_delay.assert_called_once_with(
+            activity.id
+        )
 
     @patch('sentry.models.Group.is_resolved')
     def test_unresolves_group_with_auto_resolve(self, mock_is_resolved):
