commit 3f3044000bdc17bee41e38dedcb0c659f848dec6
Author: Dora <dora.l.chan@gmail.com>
Date:   Thu Nov 21 14:29:33 2019 -0800

    feat(discoverv2): header cleanup and toggle (#15758)
    
    * cleaning up header for event detail
    
    * updating list view
    
    * fix tag table margin
    
    * remove fragment

diff --git a/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx b/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx
index d41e863a99..07400febf1 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx
@@ -75,26 +75,15 @@ class DiscoverBreadcrumb extends React.Component<Props> {
   }
 
   render() {
-    const {eventView} = this.props;
-
     return (
       <BreadcrumbList>
-        {eventView && eventView.isValid() ? (
-          this.getCrumbs()
-        ) : (
-          <StyledHeader>{t('Discover')}</StyledHeader>
-        )}
+        {this.getCrumbs()}
         <BetaTag />
       </BreadcrumbList>
     );
   }
 }
 
-const StyledHeader = styled('span')`
-  font-size: ${p => p.theme.headerFontSize};
-  color: ${p => p.theme.gray4};
-`;
-
 const BreadcrumbList = styled('span')`
   display: flex;
   align-items: center;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 306f084911..2a09f5b10a 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -16,10 +16,10 @@ import getDynamicText from 'app/utils/getDynamicText';
 import DateTime from 'app/components/dateTime';
 import ExternalLink from 'app/components/links/externalLink';
 import FileSize from 'app/components/fileSize';
-import {PageHeader} from 'app/styles/organization';
 import NotFound from 'app/components/errors/notFound';
 import AsyncComponent from 'app/components/asyncComponent';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
+import {PageContent} from 'app/styles/organization';
 
 import EventView from '../eventView';
 import {hasAggregateField, EventQuery, generateTitle} from '../utils';
@@ -106,39 +106,55 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
     const isGroupedView = hasAggregateField(eventView);
 
     return (
-      <ContentGrid>
-        <EventHeader event={event} />
-        {isGroupedView && (
-          <Pagination event={event} organization={organization} eventView={eventView} />
-        )}
-        <MainBox>
-          {isGroupedView &&
-            getDynamicText({
-              value: (
-                <LineGraph
-                  organization={organization}
-                  currentEvent={event}
-                  location={location}
-                  eventView={eventView}
-                />
-              ),
-              fixed: 'events chart',
-            })}
-          <EventInterfaces
-            organization={organization}
-            event={event}
-            projectId={this.projectId}
-          />
-        </MainBox>
-        <SidebarBox>
-          <EventMetadata
+      <div>
+        <HeaderBox>
+          <DiscoverBreadcrumb
+            eventView={eventView}
             event={event}
             organization={organization}
-            projectId={this.projectId}
+            location={location}
           />
-          <TagsTable tags={event.tags} />
-        </SidebarBox>
-      </ContentGrid>
+          <EventHeader event={event} />
+          <Controller>
+            {isGroupedView && (
+              <Pagination
+                event={event}
+                organization={organization}
+                eventView={eventView}
+              />
+            )}
+          </Controller>
+        </HeaderBox>
+        <ContentBox>
+          <Main>
+            {isGroupedView &&
+              getDynamicText({
+                value: (
+                  <LineGraph
+                    organization={organization}
+                    currentEvent={event}
+                    location={location}
+                    eventView={eventView}
+                  />
+                ),
+                fixed: 'events chart',
+              })}
+            <EventInterfaces
+              organization={organization}
+              event={event}
+              projectId={this.projectId}
+            />
+          </Main>
+          <Side>
+            <EventMetadata
+              event={event}
+              organization={organization}
+              projectId={this.projectId}
+            />
+            <TagsTable tags={event.tags} />
+          </Side>
+        </ContentBox>
+      </div>
     );
   }
 
@@ -175,6 +191,36 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
   }
 }
 
+const ContentBox = styled(PageContent)`
+  margin: 0;
+
+  @media (min-width: ${p => p.theme.breakpoints[1]}) {
+    display: grid;
+    grid-template-rows: 1fr auto;
+    grid-template-columns: 70% auto;
+    grid-column-gap: ${space(3)};
+  }
+`;
+
+const Main = styled('div')`
+  grid-column: 1/2;
+`;
+
+const Side = styled('div')`
+  grid-column: 2/3;
+`;
+
+const HeaderBox = styled(ContentBox)`
+  background-color: ${p => p.theme.white};
+  border-bottom: 1px solid ${p => p.theme.borderDark};
+  grid-row-gap: ${space(1)};
+`;
+
+const Controller = styled('div')`
+  grid-row: 1/3;
+  grid-column: 2/3;
+`;
+
 type EventDetailsWrapperProps = {
   organization: Organization;
   location: Location;
@@ -194,21 +240,11 @@ class EventDetailsWrapper extends React.Component<EventDetailsWrapperProps> {
   };
 
   render() {
-    const {organization, location, eventView, event, children} = this.props;
+    const {organization, children} = this.props;
 
     return (
       <SentryDocumentTitle title={this.getDocumentTitle()} objSlug={organization.slug}>
-        <React.Fragment>
-          <PageHeader>
-            <DiscoverBreadcrumb
-              eventView={eventView}
-              event={event}
-              organization={organization}
-              location={location}
-            />
-          </PageHeader>
-          {children}
-        </React.Fragment>
+        <React.Fragment>{children}</React.Fragment>
       </SentryDocumentTitle>
     );
   }
@@ -225,12 +261,11 @@ const EventHeader = (props: {event: Event}) => {
 };
 
 const StyledEventHeader = styled('div')`
-  display: flex;
-  align-items: center;
   font-size: ${p => p.theme.headerFontSize};
   white-space: nowrap;
   overflow: hidden;
   text-overflow: ellipsis;
+  grid-column: 1/2;
 `;
 
 const StyledTitle = styled('span')`
@@ -238,13 +273,6 @@ const StyledTitle = styled('span')`
   margin-right: ${space(1)};
 `;
 
-const MetadataContainer = styled('div')`
-  display: flex;
-  justify-content: space-between;
-  color: ${p => p.theme.gray3};
-  font-size: ${p => p.theme.fontSizeMedium};
-`;
-
 /**
  * Render metadata about the event and provide a link to the JSON blob
  */
@@ -260,7 +288,7 @@ const EventMetadata = (props: {
   }/json/`;
 
   return (
-    <StyledMetadata>
+    <MetaDataID>
       <SectionHeading>{t('Event ID')}</SectionHeading>
       <MetadataContainer data-test-id="event-id">{event.eventID}</MetadataContainer>
       <MetadataContainer>
@@ -274,32 +302,23 @@ const EventMetadata = (props: {
       <MetadataJSON href={eventJsonUrl} className="json-link">
         {t('Preview JSON')} (<FileSize bytes={event.size} />)
       </MetadataJSON>
-    </StyledMetadata>
+    </MetaDataID>
   );
 };
 
-const MetadataJSON = styled(ExternalLink)`
-  font-size: ${p => p.theme.fontSizeMedium};
-`;
-
-const StyledMetadata = styled('div')`
-  margin-bottom: ${space(4)};
+const MetaDataID = styled('div')`
+  margin-bottom: ${space(3)};
 `;
 
-const ContentGrid = styled('div')`
-  @media (min-width: ${p => p.theme.breakpoints[2]}) {
-    display: grid;
-    grid-gap: ${space(2)};
-    grid-template-columns: 72% auto;
-  }
-`;
-
-const MainBox = styled('div')`
-  grid-column: 1/2;
+const MetadataContainer = styled('div')`
+  display: flex;
+  justify-content: space-between;
+  color: ${p => p.theme.gray3};
+  font-size: ${p => p.theme.fontSizeMedium};
 `;
 
-const SidebarBox = styled('div')`
-  grid-column: 2/3;
+const MetadataJSON = styled(ExternalLink)`
+  font-size: ${p => p.theme.fontSizeMedium};
 `;
 
 export default withApi(EventDetailsContent);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/index.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/index.tsx
index 738d890834..53c02f500b 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/index.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/index.tsx
@@ -5,7 +5,6 @@ import {Location} from 'history';
 
 import {t} from 'app/locale';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
-import {PageContent} from 'app/styles/organization';
 import NoProjectMessage from 'app/components/noProjectMessage';
 import {Organization} from 'app/types';
 import SentryTypes from 'app/sentryTypes';
@@ -59,17 +58,15 @@ class EventDetails extends React.Component<Props> {
       <SentryDocumentTitle title={documentTitle} objSlug={organization.slug}>
         <React.Fragment>
           <GlobalSelectionHeader organization={organization} />
-          <PageContent>
-            <NoProjectMessage organization={organization}>
-              <EventDetailsContent
-                organization={organization}
-                location={location}
-                params={params}
-                eventView={eventView}
-                eventSlug={this.getEventSlug()}
-              />
-            </NoProjectMessage>
-          </PageContent>
+          <NoProjectMessage organization={organization}>
+            <EventDetailsContent
+              organization={organization}
+              location={location}
+              params={params}
+              eventView={eventView}
+              eventSlug={this.getEventSlug()}
+            />
+          </NoProjectMessage>
         </React.Fragment>
       </SentryDocumentTitle>
     );
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
index 8d04149811..f1305a4458 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
@@ -238,6 +238,7 @@ const LineGraph = (props: LineGraphProps) => {
     </Panel>
   );
 };
+
 LineGraph.propTypes = {
   api: PropTypes.object.isRequired,
   currentEvent: SentryTypes.Event.isRequired,
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
index 849f03f9ea..f53ee53c43 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
@@ -119,6 +119,11 @@ const Paginator = styled('div')`
   background: ${p => p.theme.offWhite};
   border: 1px solid ${p => p.theme.borderDark};
   border-radius: ${p => p.theme.borderRadius};
+  margin: ${space(2)} 0;
+
+  @media (min-width: ${p => p.theme.breakpoints[2]}) {
+    margin: 0;
+  }
 `;
 
 export default Pagination;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
index 9cb3afb4e6..80ed247500 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
@@ -6,7 +6,6 @@ import {Client} from 'app/api';
 import {t} from 'app/locale';
 import {Organization, SavedQuery} from 'app/types';
 import withApi from 'app/utils/withApi';
-import space from 'app/styles/space';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
 
@@ -95,8 +94,10 @@ class EventInputName extends React.Component<Props> {
 const StyledHeader = styled('div')`
   display: flex;
   align-items: center;
-  height: 40px;
-  margin-bottom: ${space(1.5)};
+  height: 24px;
+  font-size: ${p => p.theme.headerFontSize};
+  color: ${p => p.theme.gray4};
+  grid-column: 1/2;
 `;
 
 export default withApi(EventInputName);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/events.tsx b/src/sentry/static/sentry/app/views/eventsV2/events.tsx
index c36e397cbc..83168f7231 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/events.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/events.tsx
@@ -7,11 +7,11 @@ import uniqBy from 'lodash/uniqBy';
 
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {Organization} from 'app/types';
-import space from 'app/styles/space';
 import SearchBar from 'app/views/events/searchBar';
 import {Panel} from 'app/components/panels';
 import EventsChart from 'app/views/events/eventsChart';
 import getDynamicText from 'app/utils/getDynamicText';
+import space from 'app/styles/space';
 
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 
@@ -101,49 +101,50 @@ export default class Events extends React.Component<EventsProps> {
 
     return (
       <React.Fragment>
-        <StyledSearchBar
-          organization={organization}
-          query={query}
-          onSearch={this.handleSearch}
-        />
-        <Panel>
-          {getDynamicText({
-            value: (
-              <EventsChart
-                router={router}
-                query={eventView.getEventsAPIPayload(location).query}
-                organization={organization}
-                showLegend
-                yAxisOptions={yAxisOptions}
-                yAxisValue={eventView.yAxis}
-                onYAxisChange={this.handleYAxisChange}
-              />
-            ),
-            fixed: 'events chart',
-          })}
-        </Panel>
-        <Container hasTags={eventView.tags.length > 0}>
+        <Top>
+          <StyledSearchBar
+            organization={organization}
+            query={query}
+            onSearch={this.handleSearch}
+          />
+          <Panel>
+            {getDynamicText({
+              value: (
+                <EventsChart
+                  router={router}
+                  query={eventView.getEventsAPIPayload(location).query}
+                  organization={organization}
+                  showLegend
+                  yAxisOptions={yAxisOptions}
+                  yAxisValue={eventView.yAxis}
+                  onYAxisChange={this.handleYAxisChange}
+                />
+              ),
+              fixed: 'events chart',
+            })}
+          </Panel>
+        </Top>
+        <Main>
           <Table organization={organization} eventView={eventView} location={location} />
-          {this.renderTagsTable()}
-        </Container>
+        </Main>
+        <Side>{this.renderTagsTable()}</Side>
       </React.Fragment>
     );
   }
 }
 
-const Container = styled('div')<{hasTags: boolean}>`
-  display: grid;
-  grid-gap: ${space(2)};
+const StyledSearchBar = styled(SearchBar)`
+  margin-bottom: ${space(2)};
+`;
 
-  ${props => {
-    if (props.hasTags) {
-      return 'grid-template-columns: auto 300px;';
-    }
+const Top = styled('div')`
+  grid-column: 1/3;
+`;
 
-    return 'grid-template-columns: auto;';
-  }};
+const Main = styled('div')`
+  grid-column: 1/2;
 `;
 
-const StyledSearchBar = styled(SearchBar)`
-  margin-bottom: ${space(2)};
+const Side = styled('div')`
+  grid-column: 2/3;
 `;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
index d25e301c63..0197da263d 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
@@ -19,7 +19,7 @@ import Feature from 'app/components/acl/feature';
 import SearchBar from 'app/views/events/searchBar';
 import NoProjectMessage from 'app/components/noProjectMessage';
 
-import {PageContent, PageHeader} from 'app/styles/organization';
+import {PageContent} from 'app/styles/organization';
 import space from 'app/styles/space';
 import withOrganization from 'app/utils/withOrganization';
 
@@ -176,6 +176,16 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
   }
 
   renderActions() {
+    const StyledSearchBar = styled(SearchBar)`
+      margin-right: ${space(1)};
+      flex-grow: 1;
+    `;
+
+    const StyledActions = styled('div')`
+      display: flex;
+      margin-bottom: ${space(3)};
+    `;
+
     return (
       <StyledActions>
         <StyledSearchBar />
@@ -187,9 +197,18 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
   renderQueryList() {
     const {location, organization} = this.props;
     const {loading, savedQueries, savedQueriesPageLinks} = this.state;
+    const StyledPageHeader = styled('div')`
+      display: flex;
+      align-items: center;
+      font-size: ${p => p.theme.headerFontSize};
+      color: ${p => p.theme.gray4};
+      height: 40px;
+      margin-bottom: ${space(1)};
+    `;
 
     return (
-      <div>
+      <PageContent>
+        <StyledPageHeader>{t('Discover')}</StyledPageHeader>
         {this.renderBanner()}
         {DISPLAY_SEARCH_BAR_FLAG && this.renderActions()}
         {loading && this.renderLoading()}
@@ -201,55 +220,75 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
             organization={organization}
           />
         )}
-      </div>
+      </PageContent>
     );
   }
 
   renderResults(eventView: EventView) {
     const {organization, location, router} = this.props;
-    const {savedQueries} = this.state;
+    const {savedQueries, reloading} = this.state;
+    const ContentBox = styled(PageContent)`
+      margin: 0;
+
+      @media (min-width: ${p => p.theme.breakpoints[1]}) {
+        display: grid;
+        grid-template-rows: 1fr auto;
+        grid-template-columns: 70% auto;
+        grid-column-gap: ${space(3)};
+      }
+    `;
+
+    const HeaderBox = styled(ContentBox)`
+      background-color: ${p => p.theme.white};
+      border-bottom: 1px solid ${p => p.theme.borderDark};
+      grid-row-gap: ${space(1)};
+    `;
+
+    const Controller = styled('div')`
+      justify-self: end;
+      grid-row: 1/3;
+      grid-column: 2/3;
+    `;
 
     return (
-      <React.Fragment>
-        <div>
-          <StyledInput>
-            <EventInputName
-              savedQueries={savedQueries}
+      <div>
+        <HeaderBox>
+          <DiscoverBreadcrumb
+            eventView={eventView}
+            organization={organization}
+            location={location}
+          />
+          <EventInputName
+            savedQueries={savedQueries}
+            organization={organization}
+            eventView={eventView}
+            onQuerySave={this.handleQuerySave}
+          />
+          <Controller>
+            <SavedQueryButtonGroup
+              location={location}
               organization={organization}
               eventView={eventView}
+              savedQueries={savedQueries}
+              savedQueriesLoading={reloading}
               onQuerySave={this.handleQuerySave}
             />
-          </StyledInput>
-        </div>
-        <Events
-          organization={organization}
-          location={location}
-          router={router}
-          eventView={eventView}
-        />
-      </React.Fragment>
-    );
-  }
-
-  renderSavedQueryControls(eventView: EventView) {
-    const {organization, location} = this.props;
-    const {savedQueries, reloading} = this.state;
-
-    return (
-      <SavedQueryButtonGroup
-        location={location}
-        organization={organization}
-        eventView={eventView}
-        savedQueries={savedQueries}
-        savedQueriesLoading={reloading}
-        onQuerySave={this.handleQuerySave}
-      />
+          </Controller>
+        </HeaderBox>
+        <ContentBox>
+          <Events
+            organization={organization}
+            location={location}
+            router={router}
+            eventView={eventView}
+          />
+        </ContentBox>
+      </div>
     );
   }
 
   render() {
     const {organization, location} = this.props;
-
     const eventView = EventView.fromLocation(location);
     const hasQuery = eventView.isValid();
 
@@ -261,20 +300,10 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
         >
           <React.Fragment>
             <GlobalSelectionHeader organization={organization} />
-            <PageContent>
-              <NoProjectMessage organization={organization}>
-                <PageHeader>
-                  <DiscoverBreadcrumb
-                    eventView={eventView}
-                    organization={organization}
-                    location={location}
-                  />
-                  {hasQuery && this.renderSavedQueryControls(eventView)}
-                </PageHeader>
-                {!hasQuery && this.renderQueryList()}
-                {hasQuery && this.renderResults(eventView)}
-              </NoProjectMessage>
-            </PageContent>
+            <NoProjectMessage organization={organization}>
+              {!hasQuery && this.renderQueryList()}
+              {hasQuery && this.renderResults(eventView)}
+            </NoProjectMessage>
           </React.Fragment>
         </SentryDocumentTitle>
       </Feature>
@@ -282,20 +311,5 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
   }
 }
 
-const StyledInput = styled('span')`
-  font-size: ${p => p.theme.headerFontSize};
-  color: ${p => p.theme.gray4};
-`;
-
-const StyledActions = styled('div')`
-  display: flex;
-  margin-bottom: ${space(3)};
-`;
-
-const StyledSearchBar = styled(SearchBar)`
-  margin-right: ${space(1)};
-  flex-grow: 1;
-`;
-
 export default withOrganization(DiscoverLanding);
 export {DiscoverLanding};
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
index 1b2d793cbe..19863c9db9 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
@@ -20,31 +20,33 @@ type Props = {
 const TagsTable = (props: Props) => {
   const {location, tags} = props;
   return (
-    <StyledTable>
+    <StyledTagsTable>
       <SectionHeading>{t('Event Tag Details')}</SectionHeading>
-      <tbody>
-        {tags.map(tag => {
-          const tagInQuery =
-            location.query.query && location.query.query.indexOf(`${tag.key}:`) !== -1;
-          return (
-            <StyledTr key={tag.key}>
-              <TagKey>{tag.key}</TagKey>
-              <TagValue>
-                {tagInQuery ? (
-                  <Tooltip title={t('This tag is in the current filter conditions')}>
-                    <span>{tag.value}</span>
-                  </Tooltip>
-                ) : (
-                  <Link to={getEventTagSearchUrl(tag.key, tag.value, location)}>
-                    {tag.value}
-                  </Link>
-                )}
-              </TagValue>
-            </StyledTr>
-          );
-        })}
-      </tbody>
-    </StyledTable>
+      <StyledTable>
+        <tbody>
+          {tags.map(tag => {
+            const tagInQuery =
+              location.query.query && location.query.query.indexOf(`${tag.key}:`) !== -1;
+            return (
+              <StyledTr key={tag.key}>
+                <TagKey>{tag.key}</TagKey>
+                <TagValue>
+                  {tagInQuery ? (
+                    <Tooltip title={t('This tag is in the current filter conditions')}>
+                      <span>{tag.value}</span>
+                    </Tooltip>
+                  ) : (
+                    <Link to={getEventTagSearchUrl(tag.key, tag.value, location)}>
+                      {tag.value}
+                    </Link>
+                  )}
+                </TagValue>
+              </StyledTr>
+            );
+          })}
+        </tbody>
+      </StyledTable>
+    </StyledTagsTable>
   );
 };
 
@@ -53,11 +55,14 @@ TagsTable.propTypes = {
   location: PropTypes.object,
 } as any;
 
+const StyledTagsTable = styled('div')`
+  margin-bottom: ${space(3)};
+`;
+
 const StyledTable = styled('table')`
   table-layout: fixed;
   width: 100%;
   max-width: 100%;
-  margin-bottom: 30px;
 `;
 
 const StyledTr = styled('tr')`
diff --git a/tests/js/spec/views/eventsV2/index.spec.jsx b/tests/js/spec/views/eventsV2/index.spec.jsx
index fe8ac6630a..8a52bef612 100644
--- a/tests/js/spec/views/eventsV2/index.spec.jsx
+++ b/tests/js/spec/views/eventsV2/index.spec.jsx
@@ -90,7 +90,7 @@ describe('EventsV2', function() {
       TestStubs.routerContext()
     );
 
-    const content = wrapper.find('PageContent');
+    const content = wrapper.find('SentryDocumentTitle');
     expect(content.text()).toContain('You need at least one project to use this view');
   });
 
