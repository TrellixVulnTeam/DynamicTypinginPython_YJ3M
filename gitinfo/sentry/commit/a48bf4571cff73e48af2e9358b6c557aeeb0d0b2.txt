commit a48bf4571cff73e48af2e9358b6c557aeeb0d0b2
Author: Lovepreet Sangha <lssangha@sentry.io>
Date:   Thu May 9 11:12:45 2019 -0700

    (feat): Display Project Settings Inbound Filters (#12932)
    
    * fixed the display
    
    * added six cause flake8 was complaining
    
    * Added tests
    
    * refactored/cleaned up code in audit_log

diff --git a/src/sentry/api/endpoints/project_filter_details.py b/src/sentry/api/endpoints/project_filter_details.py
index d417d4e0b6..2438c4c3a8 100644
--- a/src/sentry/api/endpoints/project_filter_details.py
+++ b/src/sentry/api/endpoints/project_filter_details.py
@@ -5,6 +5,8 @@ from rest_framework.response import Response
 from sentry import filters
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.models import AuditLogEntryEvent
+import six
 
 
 class ProjectFilterDetailsEndpoint(ProjectEndpoint):
@@ -23,9 +25,43 @@ class ProjectFilterDetailsEndpoint(ProjectEndpoint):
             raise ResourceDoesNotExist
 
         serializer = filter.serializer_cls(data=request.DATA, partial=True)
+
         if not serializer.is_valid():
             return Response(serializer.errors, status=400)
 
-        filter.enable(serializer.object)
+        current_state = filter.is_enabled()
+        new_state = filter.enable(serializer.object)
+        audit_log_state = AuditLogEntryEvent.PROJECT_ENABLE
+
+        if filter.id == 'legacy-browsers':
+            if isinstance(current_state, bool) or new_state == 0 or isinstance(
+                    new_state, six.binary_type):
+                returned_state = new_state
+
+                if isinstance(new_state, six.binary_type):
+                    audit_log_state = AuditLogEntryEvent.PROJECT_DISABLE
+                    returned_state = current_state
+
+            elif current_state - new_state:
+                returned_state = current_state - new_state
+                audit_log_state = AuditLogEntryEvent.PROJECT_DISABLE
+
+            elif new_state - current_state:
+                returned_state = new_state - current_state
+
+        if filter.id in ('browser-extensions', 'localhost', 'web-crawlers'):
+            returned_state = filter.id
+            removed = current_state - new_state
+
+            if removed == -1:
+                audit_log_state = AuditLogEntryEvent.PROJECT_DISABLE
+
+        self.create_audit_entry(
+            request=request,
+            organization=project.organization,
+            target_object=project.id,
+            event=audit_log_state,
+            data={"state": returned_state},
+        )
 
         return Response(status=201)
diff --git a/src/sentry/filters/base.py b/src/sentry/filters/base.py
index e6d10faeb5..7722bc47f8 100644
--- a/src/sentry/filters/base.py
+++ b/src/sentry/filters/base.py
@@ -41,6 +41,8 @@ class Filter(object):
         if value:
             inbound_filter_toggled.send(project=self.project, sender=self)
 
+        return value.get('active', False)
+
     def disable(self):
         return self.enable(False)
 
diff --git a/src/sentry/filters/legacy_browsers.py b/src/sentry/filters/legacy_browsers.py
index 9ec79dcd59..aaed585c12 100644
--- a/src/sentry/filters/legacy_browsers.py
+++ b/src/sentry/filters/legacy_browsers.py
@@ -80,6 +80,8 @@ class LegacyBrowsersFilter(Filter):
             value=option_val,
         )
 
+        return option_val
+
     def get_user_agent(self, data):
         try:
             for key, value in get_path(data, 'request', 'headers', filter=True) or ():
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index da8e1f080b..d5b6bf503e 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -43,6 +43,8 @@ class AuditLogEntryEvent(object):
     PROJECT_SET_PRIVATE = 34
     PROJECT_REQUEST_TRANSFER = 35
     PROJECT_ACCEPT_TRANSFER = 36
+    PROJECT_ENABLE = 37
+    PROJECT_DISABLE = 38
 
     TAGKEY_REMOVE = 40
 
@@ -126,6 +128,8 @@ class AuditLogEntry(Model):
             (AuditLogEntryEvent.PROJECT_SET_PRIVATE, 'project.set-private'),
             (AuditLogEntryEvent.PROJECT_REQUEST_TRANSFER, 'project.request-transfer'),
             (AuditLogEntryEvent.PROJECT_ACCEPT_TRANSFER, 'project.accept-transfer'),
+            (AuditLogEntryEvent.PROJECT_ENABLE, 'project.enable'),
+            (AuditLogEntryEvent.PROJECT_DISABLE, 'project.disable'),
             (AuditLogEntryEvent.ORG_ADD, 'org.create'),
             (AuditLogEntryEvent.ORG_EDIT, 'org.edit'),
             (AuditLogEntryEvent.ORG_REMOVE, 'org.remove'),
@@ -260,6 +264,14 @@ class AuditLogEntry(Model):
             return 'requested to transfer project %s' % (self.data['slug'], )
         elif self.event == AuditLogEntryEvent.PROJECT_ACCEPT_TRANSFER:
             return 'accepted transfer of project %s' % (self.data['slug'], )
+        elif self.event == AuditLogEntryEvent.PROJECT_ENABLE:
+            if isinstance(self.data['state'], six.string_types):
+                return 'enabled project filter %s' % (self.data['state'], )
+            return 'enabled project filter %s' % (', '.join(self.data["state"]),)
+        elif self.event == AuditLogEntryEvent.PROJECT_DISABLE:
+            if isinstance(self.data['state'], six.string_types):
+                return 'disabled project filter %s' % (self.data['state'], )
+            return 'disabled project filter %s' % (', '.join(self.data["state"]),)
 
         elif self.event == AuditLogEntryEvent.TAGKEY_REMOVE:
             return 'removed tags matching %s = *' % (self.data['key'], )
diff --git a/tests/sentry/filters/test_legacy_browsers.py b/tests/sentry/filters/test_legacy_browsers.py
index 51935004c3..6375d23151 100644
--- a/tests/sentry/filters/test_legacy_browsers.py
+++ b/tests/sentry/filters/test_legacy_browsers.py
@@ -5,7 +5,7 @@ from django.core.urlresolvers import reverse
 from ua_parser.user_agent_parser import Parse
 
 from sentry.filters.legacy_browsers import LegacyBrowsersFilter
-from sentry.models import ProjectOption
+from sentry.models import ProjectOption, AuditLogEntry, AuditLogEntryEvent
 from sentry.testutils import APITestCase, TestCase
 from sentry.utils.canonical import CanonicalKeyView
 
@@ -110,6 +110,11 @@ class SetLegacyBrowserFilterTest(APITestCase):
         options = ProjectOption.objects.get_value(project=project, key='filters:legacy-browsers')
         assert options == {'opera_pre_15'}
 
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_ENABLE,
+        ).exists()
+
     def test_set_opera_mini(self):
         self.login_as(user=self.user)
         project = self.create_project()
@@ -128,6 +133,11 @@ class SetLegacyBrowserFilterTest(APITestCase):
         options = ProjectOption.objects.get_value(project=project, key='filters:legacy-browsers')
         assert options == {'opera_mini_pre_8'}
 
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_ENABLE,
+        ).exists()
+
     def test_set_ie9(self):
         self.login_as(user=self.user)
         project = self.create_project()
@@ -146,6 +156,11 @@ class SetLegacyBrowserFilterTest(APITestCase):
         options = ProjectOption.objects.get_value(project=project, key='filters:legacy-browsers')
         assert options == {'ie9'}
 
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_ENABLE,
+        ).exists()
+
     def test_set_ie8(self):
         self.login_as(user=self.user)
         project = self.create_project()
@@ -164,6 +179,11 @@ class SetLegacyBrowserFilterTest(APITestCase):
         options = ProjectOption.objects.get_value(project=project, key='filters:legacy-browsers')
         assert options == {'ie_pre_9'}
 
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_ENABLE,
+        ).exists()
+
     def test_set_android(self):
         self.login_as(user=self.user)
         project = self.create_project()
@@ -182,6 +202,11 @@ class SetLegacyBrowserFilterTest(APITestCase):
         options = ProjectOption.objects.get_value(project=project, key='filters:legacy-browsers')
         assert options == {'android_pre_4'}
 
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_ENABLE,
+        ).exists()
+
     def test_set_safari(self):
         self.login_as(user=self.user)
         project = self.create_project()
@@ -200,6 +225,11 @@ class SetLegacyBrowserFilterTest(APITestCase):
         options = ProjectOption.objects.get_value(project=project, key='filters:legacy-browsers')
         assert options == {'safari_pre_6'}
 
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_ENABLE,
+        ).exists()
+
 
 class LegacyBrowsersFilterTest(TestCase):
     filter_cls = LegacyBrowsersFilter
