commit 038152cc8ab4cd81c6af986c759f53734b666205
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Fri Sep 13 15:40:41 2019 -0700

    test(auth): Add test for accepting invite during registration (#14720)

diff --git a/tests/sentry/web/frontend/test_auth_login.py b/tests/sentry/web/frontend/test_auth_login.py
index c7a5f31b25..db929007ac 100644
--- a/tests/sentry/web/frontend/test_auth_login.py
+++ b/tests/sentry/web/frontend/test_auth_login.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 import pytest
+import mock
 
 from django.conf import settings
 from django.core.urlresolvers import reverse
@@ -102,6 +103,28 @@ class AuthLoginTest(TestCase):
         assert resp.context["register_form"].initial["username"] == "foo@example.com"
         self.assertTemplateUsed("sentry/login.html")
 
+    @mock.patch("sentry.web.frontend.auth_login.ApiInviteHelper.from_cookie")
+    def test_register_accepts_invite(self, from_cookie):
+        self.session["can_register"] = True
+        self.save_session()
+
+        self.client.get(self.path)
+
+        invite_helper = mock.Mock(valid_request=True)
+        from_cookie.return_value = invite_helper
+
+        resp = self.client.post(
+            self.path,
+            {
+                "username": "test@example.com",
+                "password": "foobar",
+                "name": "Foo Bar",
+                "op": "register",
+            },
+        )
+        assert resp.status_code == 302
+        assert len(invite_helper.accept_invite.mock_calls) == 1
+
     def test_redirects_to_relative_next_url(self):
         next = "/welcome"
         self.client.get(self.path + "?next=" + next)
