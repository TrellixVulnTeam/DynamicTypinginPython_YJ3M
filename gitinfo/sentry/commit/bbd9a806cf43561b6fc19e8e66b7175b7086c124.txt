commit bbd9a806cf43561b6fc19e8e66b7175b7086c124
Author: Matej Minar <matej.minar@sentry.io>
Date:   Mon Mar 23 09:26:51 2020 +0100

    fix(ui): Fixed path textCopyInput in Assemblies (#17824)
    
    * fix(ui): Fixed path textCopyInput in Assemblies
    
    * updated snapshot

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/assembly.tsx b/src/sentry/static/sentry/app/components/events/interfaces/assembly.tsx
index 3c13dc6f9d..48887e2809 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/assembly.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/assembly.tsx
@@ -39,7 +39,7 @@ const Assembly = ({name, version, culture, publicKeyToken, filePath}: Props) =>
     {filePath && (
       <FilePathInfo>
         <Caption>{t('Path')}:</Caption>
-        <TextCopyInput>{filePath}</TextCopyInput>
+        <TextCopyInput rtl>{filePath}</TextCopyInput>
       </FilePathInfo>
     )}
   </AssemblyWrapper>
@@ -90,7 +90,6 @@ const FilePathInfo = styled('div')`
     padding-top: 0;
     padding-bottom: 0;
     line-height: 1.5;
-    direction: rtl;
     @media (max-width: ${theme.breakpoints[1]}) {
       width: auto;
     }
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx
index d025019a27..ba2d25284d 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/textCopyInput.jsx
@@ -1,4 +1,3 @@
-import {Flex} from 'reflexbox';
 import PropTypes from 'prop-types';
 import React from 'react';
 import ReactDOM from 'react-dom';
@@ -10,12 +9,17 @@ import Button from 'app/components/button';
 import Clipboard from 'app/components/clipboard';
 import InlineSvg from 'app/components/inlineSvg';
 
+const Wrapper = styled('div')`
+  display: flex;
+`;
+
 const StyledInput = styled('input')`
   ${inputStyles};
   background-color: ${p => p.theme.offWhite};
   border-right-width: 0;
   border-top-right-radius: 0;
   border-bottom-right-radius: 0;
+  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};
 
   &:hover,
   &:focus {
@@ -46,6 +50,10 @@ class TextCopyInput extends React.Component {
      */
     style: PropTypes.object,
     onCopy: PropTypes.func,
+    /**
+     * Always show the ending of a long overflowing text in input
+     */
+    rtl: PropTypes.bool,
   };
 
   static defaultProps = {
@@ -73,27 +81,47 @@ class TextCopyInput extends React.Component {
   };
 
   handleSelectText = () => {
+    const {rtl} = this.props;
+
     if (!this.textRef.current) {
       return;
     }
 
     // We use findDOMNode here because `this.textRef` is not a dom node,
     // it's a ref to AutoSelectText
-    selectText(ReactDOM.findDOMNode(this.textRef.current));
+    const node = ReactDOM.findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node
+
+    if (rtl) {
+      // we don't want to select the first character - \u202A, nor the last - \u202C
+      node.setSelectionRange(1, node.value.length - 1);
+    } else {
+      selectText(node);
+    }
   };
 
   render() {
-    const {style, children} = this.props;
+    const {style, children, rtl} = this.props;
+
+    /**
+     * We are using direction: rtl; to always show the ending of a long overflowing text in input.
+     *
+     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.
+     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because
+     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,
+     * however we need to be aware of them when selecting the text - we are solving that by offseting the selectionRange.
+     */
+    const inputValue = rtl ? '\u202A' + children + '\u202C' : children;
 
     return (
-      <Flex>
+      <Wrapper>
         <OverflowContainer>
           <StyledInput
             readOnly
             ref={this.textRef}
             style={style}
-            value={children}
+            value={inputValue}
             onClick={this.handleSelectText}
+            rtl={rtl}
           />
         </OverflowContainer>
         <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>
@@ -101,7 +129,7 @@ class TextCopyInput extends React.Component {
             <InlineSvg src="icon-clipboard" size="1.25em" />
           </StyledCopyButton>
         </Clipboard>
-      </Flex>
+      </Wrapper>
     );
   }
 }
diff --git a/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap b/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap
index d0e6397eff..329bba317d 100644
--- a/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/textCopyInput.spec.jsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`TextCopyInput renders 1`] = `
-<Styled(div)>
+<Wrapper>
   <OverflowContainer>
     <StyledInput
       onClick={[Function]}
@@ -28,5 +28,5 @@ exports[`TextCopyInput renders 1`] = `
       />
     </StyledCopyButton>
   </Clipboard>
-</Styled(div)>
+</Wrapper>
 `;
