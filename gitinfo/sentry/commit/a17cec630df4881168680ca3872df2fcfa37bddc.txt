commit a17cec630df4881168680ca3872df2fcfa37bddc
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 23 13:27:44 2015 -0800

    Ensure snooze is only active when muted

diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 3ac17650d2..7ab5a98dba 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -180,13 +180,18 @@ class Group(Model):
         # XXX(dcramer): GroupSerializer reimplements this logic)
         from sentry.models import GroupSnooze
 
-        try:
-            snooze = GroupSnooze.objects.get(group=self)
-        except GroupSnooze.DoesNotExist:
-            pass
-        else:
-            if snooze.until > timezone.now():
-                return GroupStatus.MUTED
+        if self.status == GroupStatus.MUTED:
+            try:
+                snooze = GroupSnooze.objects.get(group=self)
+            except GroupSnooze.DoesNotExist:
+                pass
+            else:
+                # XXX(dcramer): if the snooze row exists then we need
+                # to confirm its still valid
+                if snooze.until > timezone.now():
+                    return GroupStatus.MUTED
+                else:
+                    return GroupStatus.UNRESOLVED
 
         if self.status == GroupStatus.UNRESOLVED and self.is_over_resolve_age():
             return GroupStatus.RESOLVED
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index 43cc6788c7..3890499a02 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -306,6 +306,34 @@ class GroupUpdateTest(APITestCase):
         group = Group.objects.get(id=group.id)
         assert group.status == GroupStatus.UNRESOLVED
 
+    def test_set_unresolved_on_snooze(self):
+        group = self.create_group(checksum='a' * 32, status=GroupStatus.MUTED)
+
+        GroupSnooze.objects.create(
+            group=group,
+            until=timezone.now() - timedelta(days=1),
+        )
+
+        self.login_as(user=self.user)
+
+        url = '{url}?id={group.id}'.format(
+            url=reverse('sentry-api-0-project-group-index', kwargs={
+                'organization_slug': self.project.organization.slug,
+                'project_slug': self.project.slug,
+            }),
+            group=group,
+        )
+        response = self.client.put(url, data={
+            'status': 'unresolved',
+        }, format='json')
+        assert response.status_code == 200
+        assert response.data == {
+            'status': 'unresolved',
+        }
+
+        group = Group.objects.get(id=group.id)
+        assert group.status == GroupStatus.UNRESOLVED
+
     def test_snooze_duration(self):
         group = self.create_group(checksum='a' * 32, status=GroupStatus.RESOLVED)
 
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
index f6022f6c82..40da9d5811 100644
--- a/tests/sentry/models/test_group.py
+++ b/tests/sentry/models/test_group.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from datetime import timedelta, datetime
 from django.utils import timezone
 
-from sentry.models import GroupStatus
+from sentry.models import GroupSnooze, GroupStatus
 from sentry.testutils import TestCase
 
 
@@ -78,3 +78,13 @@ class GroupTest(TestCase):
 
         assert group.get_latest_event().event_id == '3'
         assert group.get_oldest_event().event_id == '0'
+
+    def test_is_muted_with_expired_snooze(self):
+        group = self.create_group(
+            status=GroupStatus.MUTED,
+        )
+        GroupSnooze.objects.create(
+            group=group,
+            until=timezone.now() - timedelta(minutes=1),
+        )
+        assert not group.is_muted()
