commit 2d5fc14774306690bbb392514ceb907e83180ad7
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Nov 23 05:10:31 2014 -0800

    Move ProjectManager

diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index 5a7a1c48c0..9ec271787c 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -85,28 +85,3 @@ class GroupManager(BaseManager):
 
         if tsdb_keys:
             tsdb.incr_multi(tsdb_keys)
-
-
-class ProjectManager(BaseManager):
-    def get_for_user(self, team, user, access=None):
-        from sentry.models import Team
-
-        if not (user and user.is_authenticated()):
-            return []
-
-        team_list = Team.objects.get_for_user(
-            organization=team.organization,
-            user=user,
-            access=access,
-        )
-        if team not in team_list:
-            return []
-
-        base_qs = self.filter(team=team)
-
-        project_list = []
-        for project in base_qs:
-            project.team = team
-            project_list.append(project)
-
-        return sorted(project_list, key=lambda x: x.name.lower())
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 65a31ec762..ceb6633a6c 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -18,13 +18,37 @@ from sentry.constants import (
     PLATFORM_TITLES, PLATFORM_LIST, STATUS_VISIBLE, STATUS_HIDDEN
 )
 from sentry.db.models import (
-    Model, BoundedPositiveIntegerField, sane_repr
+    BaseManager, BoundedPositiveIntegerField, Model, sane_repr
 )
 from sentry.db.models.utils import slugify_instance
-from sentry.manager import ProjectManager
 from sentry.utils.http import absolute_uri
 
 
+class ProjectManager(BaseManager):
+    def get_for_user(self, team, user, access=None):
+        from sentry.models import Team
+
+        if not (user and user.is_authenticated()):
+            return []
+
+        team_list = Team.objects.get_for_user(
+            organization=team.organization,
+            user=user,
+            access=access,
+        )
+        if team not in team_list:
+            return []
+
+        base_qs = self.filter(team=team)
+
+        project_list = []
+        for project in base_qs:
+            project.team = team
+            project_list.append(project)
+
+        return sorted(project_list, key=lambda x: x.name.lower())
+
+
 class Project(Model):
     """
     Projects are permission based namespaces which generally
