commit b5f8b34d38699feef599bea2c5aea7e6e2943359
Author: josh <josh@jrl.ninja>
Date:   Wed Dec 18 11:31:16 2019 -0800

    feat(django 1.10): model pickling compat take 2 (#16164)

diff --git a/src/sentry/monkey.py b/src/sentry/monkey.py
index 8137850508..6d094d2f6b 100644
--- a/src/sentry/monkey.py
+++ b/src/sentry/monkey.py
@@ -84,44 +84,5 @@ def patch_django_views_debug():
     debug.get_safe_settings = lambda: {}
 
 
-# For distribution builds, can't be inside `model_unpickle_compat` since we're patching the functions
-try:
-    import django.db.models.base
-
-    model_unpickle = django.db.models.base.model_unpickle
-except ImportError:
-    pass
-
-
-def model_unpickle_compat(model_id, attrs=None, factory=None):
-    from django import VERSION
-
-    if VERSION[:2] == (1, 9):
-        attrs = [] if attrs is None else attrs
-        factory = django.db.models.base.simple_class_factory if factory is None else factory
-        return model_unpickle(model_id, attrs, factory)
-    elif VERSION[:2] == (1, 10):
-        return model_unpickle(model_id)
-    else:
-        raise NotImplementedError
-
-
-def simple_class_factory_compat(model, attrs):
-    return model
-
-
-def patch_model_unpickle():
-    # https://code.djangoproject.com/ticket/27187
-    # Django 1.10 breaks pickle compat with 1.9 models.
-    import django.db.models.base
-
-    django.db.models.base.model_unpickle = model_unpickle_compat
-
-    # Django 1.10 needs this to unpickle 1.9 models, but we can't branch while
-    # monkeypatching else our monkeypatched funcs won't be pickleable.
-    # So just vendor simple_class_factory from 1.9.
-    django.db.models.base.simple_class_factory = simple_class_factory_compat
-
-
 for patch in (patch_parse_cookie, patch_httprequest_repr, patch_django_views_debug):
     patch()
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index cf7766ed8a..b915ee3e87 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -299,6 +299,8 @@ def initialize_app(config, skip_service_validation=False):
     if getattr(settings, "SENTRY_DEBUGGER", None) is None:
         settings.SENTRY_DEBUGGER = settings.DEBUG
 
+    monkeypatch_model_unpickle()
+
     import django
 
     django.setup()
@@ -390,6 +392,32 @@ def validate_options(settings):
     default_manager.validate(settings.SENTRY_OPTIONS, warn=True)
 
 
+import django.db.models.base
+
+model_unpickle = django.db.models.base.model_unpickle
+
+
+def __model_unpickle_compat(model_id, attrs=None, factory=None):
+    from django import VERSION
+
+    if VERSION[:2] == (1, 9):
+        attrs = [] if attrs is None else attrs
+        factory = django.db.models.base.simple_class_factory if factory is None else factory
+        return model_unpickle(model_id, attrs, factory)
+    elif VERSION[:2] == (1, 10):
+        return model_unpickle(model_id)
+    else:
+        raise NotImplementedError
+
+
+def __simple_class_factory_compat(model, attrs):
+    return model
+
+
+def monkeypatch_model_unpickle():
+    pass
+
+
 def monkeypatch_django_migrations():
     # This monkeypatches django's migration executor with our own, which
     # adds some small but important customizations.
diff --git a/src/sentry/utils/pytest/sentry.py b/src/sentry/utils/pytest/sentry.py
index 0e3af85f76..28c7e9205e 100644
--- a/src/sentry/utils/pytest/sentry.py
+++ b/src/sentry/utils/pytest/sentry.py
@@ -143,6 +143,7 @@ def pytest_configure(config):
         bootstrap_options,
         configure_structlog,
         initialize_receivers,
+        monkeypatch_model_unpickle,
         monkeypatch_django_migrations,
         setup_services,
     )
@@ -150,6 +151,8 @@ def pytest_configure(config):
     bootstrap_options(settings)
     configure_structlog()
 
+    monkeypatch_model_unpickle()
+
     import django
 
     django.setup()
