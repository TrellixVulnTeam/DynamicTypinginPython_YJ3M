commit 423b083a391b9b7936e4f77123241e0f15eb5de0
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 3 16:58:49 2010 -0700

    Added checksum to Error. Improve the admin to allow interlinkability and more fluid controls

diff --git a/djangodblog/admin.py b/djangodblog/admin.py
index edcb7f84e8..98ba693f3f 100644
--- a/djangodblog/admin.py
+++ b/djangodblog/admin.py
@@ -133,10 +133,10 @@ class ErrorBatchAdmin(EfficientModelAdmin):
     ordering        = ('-last_seen',)
     actions         = ('resolve_errorbatch',)
     search_fields   = ('url', 'class_name', 'message', 'traceback', 'server_name')
-    readonly_fields = ('logger', 'server_name', 'class_name', 'level', 'message', 'times_seen', 'first_seen', 'last_seen')
+    readonly_fields = ('class_name', 'message', 'times_seen', 'first_seen')
     fieldsets       = (
         (None, {
-            'fields': ('url', 'logger', 'server_name', 'class_name', 'level', 'message', 'times_seen', 'first_seen', 'last_seen', 'traceback')
+            'fields': ('class_name', 'message', 'times_seen', 'first_seen', 'traceback')
         }),
     )
     
@@ -151,6 +151,15 @@ class ErrorBatchAdmin(EfficientModelAdmin):
         
     resolve_errorbatch.short_description = 'Resolve selected error summaries'
 
+    def change_view(self, request, object_id, extra_context={}):
+        obj = self.get_object(request, unquote(object_id))
+        recent_errors = Error.objects.filter(checksum=obj.checksum).order_by('-datetime')[0:5]
+        extra_context.update({
+            'instance': obj,
+            'recent_errors': recent_errors,
+        })
+        return super(ErrorBatchAdmin, self).change_view(request, object_id, extra_context)
+
 class ErrorAdmin(EfficientModelAdmin):
     form            = ErrorAdminForm
     list_display    = ('shortened_url', 'logger', 'level', 'server_name', 'datetime')
@@ -158,10 +167,10 @@ class ErrorAdmin(EfficientModelAdmin):
     list_filter     = ('level', 'datetime')
     ordering        = ('-id',)
     search_fields   = ('url', 'class_name', 'message', 'traceback', 'server_name')
-    readonly_fields = ('logger', 'server_name', 'class_name', 'level', 'message', 'datetime')
+    readonly_fields = ('class_name', 'message')
     fieldsets       = (
         (None, {
-            'fields': ('logger', 'class_name', 'message', 'traceback')
+            'fields': ('class_name', 'message', 'traceback')
         }),
     )
     
diff --git a/djangodblog/helpers.py b/djangodblog/helpers.py
index fdc68ce2a2..23bc9747b4 100644
--- a/djangodblog/helpers.py
+++ b/djangodblog/helpers.py
@@ -1,3 +1,4 @@
+from django.utils.hashcompat import md5_constructor
 from django.views.debug import ExceptionReporter
 
 class ImprovedExceptionReporter(ExceptionReporter):
@@ -6,4 +7,13 @@ class ImprovedExceptionReporter(ExceptionReporter):
         self.frames = frames
 
     def get_traceback_frames(self):
-        return self.frames
\ No newline at end of file
+        return self.frames
+
+def construct_checksum(error):
+    checksum = md5_constructor(str(error.level))
+    checksum.update(error.class_name or '')
+    message = error.traceback or error.message
+    if isinstance(message, unicode):
+        message = message.encode('utf-8', 'replace')
+    checksum.update(message)
+    return checksum.hexdigest()
\ No newline at end of file
diff --git a/djangodblog/manager.py b/djangodblog/manager.py
index 9fbfe71284..346c85ef7f 100644
--- a/djangodblog/manager.py
+++ b/djangodblog/manager.py
@@ -19,7 +19,6 @@ from django.db import models
 from django.conf import settings
 from django.db.models import sql
 from django.utils.encoding import smart_unicode
-from django.utils.hashcompat import md5_constructor
 from django.db.models.query import QuerySet
 from django.views.debug import ExceptionReporter
 
@@ -44,14 +43,6 @@ class DBLogManager(models.Manager):
         server_name = socket.gethostname()
         class_name  = defaults.pop('class_name', None)
         
-        message = defaults.get('traceback') or defaults['message']
-        if isinstance(message, unicode):
-            message = message.encode('utf-8', 'replace')
-        checksum    = md5_constructor(str(defaults.get('level', logging.FATAL)))
-        checksum.update(class_name or '')
-        checksum.update(message)
-        checksum    = checksum.hexdigest()
-
         data = defaults.pop('data', {})
 
         try:
@@ -64,7 +55,7 @@ class DBLogManager(models.Manager):
             batch, created = ErrorBatch.objects.get_or_create(
                 class_name = class_name,
                 server_name = server_name,
-                checksum = checksum,
+                checksum = instance.checksum,
                 defaults = defaults
             )
             if not created:
diff --git a/djangodblog/migrations/0003_add_error_checksum.py b/djangodblog/migrations/0003_add_error_checksum.py
new file mode 100644
index 0000000000..10df029d38
--- /dev/null
+++ b/djangodblog/migrations/0003_add_error_checksum.py
@@ -0,0 +1,54 @@
+# encoding: utf-8
+import datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        
+        # Adding field 'Error.checksum'
+        db.add_column('djangodblog_error', 'checksum', self.gf('django.db.models.fields.CharField')(max_length=32, null=True, db_index=True), keep_default=False)
+
+
+    def backwards(self, orm):
+        
+        # Deleting field 'Error.checksum'
+        db.delete_column('djangodblog_error', 'checksum')
+
+
+    models = {
+        'djangodblog.error': {
+            'Meta': {'object_name': 'Error'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'null': 'True', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'datetime': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        },
+        'djangodblog.errorbatch': {
+            'Meta': {'unique_together': "(('logger', 'server_name', 'checksum'),)", 'object_name': 'ErrorBatch'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'status': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0', 'db_column': "'is_resolved'"}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        }
+    }
+
+    complete_apps = ['djangodblog']
diff --git a/djangodblog/migrations/0004_fill_error_checksums.py b/djangodblog/migrations/0004_fill_error_checksums.py
new file mode 100644
index 0000000000..95d0557aab
--- /dev/null
+++ b/djangodblog/migrations/0004_fill_error_checksums.py
@@ -0,0 +1,58 @@
+# encoding: utf-8
+import datetime
+from south.db import db
+from south.v2 import DataMigration
+from django.db import models
+
+class Migration(DataMigration):
+
+    def forwards(self, orm):
+        "Write your forwards methods here."
+
+        from djangodblog.helpers import construct_checksum
+
+        for e in orm.Error.objects.all():
+            orm.Error.objects.filter(pk=e.pk).update(checksum=construct_checksum(e))
+
+        for e in orm.ErrorBatch.objects.all():
+            orm.ErrorBatch.objects.filter(pk=e.pk).update(checksum=construct_checksum(e))
+
+        
+    def backwards(self, orm):
+        "Write your backwards methods here."
+
+
+    models = {
+        'djangodblog.error': {
+            'Meta': {'object_name': 'Error'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'null': 'True', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'datetime': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        },
+        'djangodblog.errorbatch': {
+            'Meta': {'unique_together': "(('logger', 'server_name', 'checksum'),)", 'object_name': 'ErrorBatch'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'status': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0', 'db_column': "'is_resolved'"}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        }
+    }
+
+    complete_apps = ['djangodblog']
diff --git a/djangodblog/models.py b/djangodblog/models.py
index 1a24b75b1c..769aa4ac98 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -11,6 +11,7 @@ import datetime
 
 from djangodblog.manager import DBLogManager
 from djangodblog.utils import JSONDictField
+from djangodblog.helpers import construct_checksum
 
 __all__ = ('Error', 'ErrorBatch')
 
@@ -86,6 +87,7 @@ class Error(Model):
     url             = models.URLField(verify_exists=False, null=True, blank=True)
     data            = JSONDictField(blank=True, null=True)
     server_name     = models.CharField(max_length=128, db_index=True)
+    checksum        = models.CharField(max_length=32, db_index=True, null=True)
 
     objects         = DBLogManager()
 
@@ -117,3 +119,8 @@ class Error(Model):
 
     def get_absolute_url(self):
         return self.url
+    
+    def save(self, *args, **kwargs):
+        if not self.checksum:
+            self.checksum = construct_checksum(self)
+        super(Error, self).save(*args, **kwargs)
diff --git a/djangodblog/templates/admin/djangodblog/error/change_form.html b/djangodblog/templates/admin/djangodblog/error/change_form.html
index b0a2e7d488..7eb2105726 100644
--- a/djangodblog/templates/admin/djangodblog/error/change_form.html
+++ b/djangodblog/templates/admin/djangodblog/error/change_form.html
@@ -19,6 +19,7 @@
 	#meta { border-top: 0; }
 	#meta th, #meta td { border: 0; padding: 8px; }
 	#meta th { text-align: left; }
+	.submit-row { display: none; }
 	</style>
 {% endblock %}
 
@@ -52,11 +53,11 @@
 				<th>URL:</th>
 				<td><a href="{{ instance.url }}">{{ instance.url }}</a></td>
 				<th>Level:</th>
-				<td>{{ instance.get_level_display }}</td>
+				<td><a href="../?level={{ instance.level }}">{{ instance.get_level_display }}</a> (<a href="../?logger={{ instance.logger }}">{{ instance.logger }}</a>, <a href="../?logger={{ instance.logger }}&amp;level={{ instance.level }}">{{ instance.logger }}:{{ instance.get_level_display }}</a>)</td>
 			</tr>
 			<tr>
 				<th>Server:</th>
-				<td>{{ instance.server_name }}</td>
+				<td><a href="../?server_name={{ instance.server_name }}">{{ instance.server_name }}</a></td>
 				<th>Date:</th>
 				<td>{{ instance.datetime }}</td>
 			</tr>
diff --git a/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html b/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html
new file mode 100644
index 0000000000..0d0f37f973
--- /dev/null
+++ b/djangodblog/templates/admin/djangodblog/errorbatch/change_form.html
@@ -0,0 +1,87 @@
+{% extends "admin/change_form.html" %}
+
+{% load i18n admin_modify adminmedia %}
+
+{% block extrahead %}
+	{{ block.super }}
+	{{ error_headers }}
+	<style type="text/css">
+	#reporter_body { 
+		padding: 8px;
+		background: none repeat scroll 0 0 #FFFFCC
+	}
+	#reporter_body #traceback li { list-style-type: inherit; }
+	#reporter_body #traceback { padding: 8px; margin-top: 10px; }
+	#reporter_body td, #reporter_body th { border-bottom: 0; font:small sans-serif; line-height: auto; }
+	#content { margin: 0; }
+	#meta th, #meta td { border: 0; padding: 8px; }
+	#meta th { text-align: left; }
+	.submit-row { display: none; }
+	.error-list h3 { padding: 0 8px; }
+	.error-list table { width: 100%; border: 1px solid #ddd; }
+	</style>
+	{% include "admin/djangodblog/partial/change_list_styles.html" %}
+{% endblock %}
+
+{% block content_title %}{% endblock %}
+
+{% block content %}
+	<table id="meta">
+		<colgroup>
+			<col style="width:15%"/>
+			<col style="width:35%"/>
+			<col style="width:15%"/>
+			<col style="width:35%"/>
+		</colgroup>
+		<tfoot>
+			<tr>
+				<td colspan="4">
+					<em>Interactive tracebacks are not available when viewing summaries</em>
+				</td>
+			</tr>
+		</tfoot>
+		<tbody>
+			<tr>
+				<th>URL:</th>
+				<td><a href="{{ instance.url }}">{{ instance.url }}</a></td>
+				<th>Level:</th>
+				<td><a href="../?level={{ instance.level }}">{{ instance.get_level_display }}</a> (<a href="../?logger={{ instance.logger }}">{{ instance.logger }}</a>, <a href="../?logger={{ instance.logger }}&amp;level={{ instance.level }}">{{ instance.logger }}:{{ instance.get_level_display }}</a>)</td>
+			</tr>
+			<tr>
+				<th>Server:</th>
+				<td><a href="../?server_name={{ instance.server_name }}">{{ instance.server_name }}</a></td>
+				<th>Last Seen:</th>
+				<td>{{ instance.last_seen }}</td>
+			</tr>
+		</tbody>
+	</table>
+	{{ block.super }}
+	{% if recent_errors %}
+		<div id="meta" class="error-list">
+			<h3>Recent Errors</h3>
+			<table>
+				<thead>
+					<th>URL</th>
+					<th>Server name</th>
+					<th>Datetime</th>
+				</thead>
+				<tfoot>
+					<tr>
+						<td colspan="4">
+							<a href="../../error/?checksum={{ instance.checksum }}">&rsaquo; View all errors within this batch</a>
+						</td>
+					</tr>
+				</tfoot>
+				<tbody>
+					{% for error in recent_errors %}
+						<tr class="{% cycle 'row1' 'row2' %}">
+							<th><a href="{{ error.url }}">{{ error.url }}</a></th>
+							<td>{{ error.server_name }}</td>
+							<td>{{ error.datetime }}</td>
+						</tr>
+					{% endfor %}
+				</tbody>
+			</table>
+		</div>
+	{% endif %}
+{% endblock %}
\ No newline at end of file
diff --git a/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html b/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html
index cb36edeac9..ac034091ae 100644
--- a/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html
+++ b/djangodblog/templates/admin/djangodblog/errorbatch/change_list.html
@@ -4,74 +4,11 @@
 
 {% block extrastyle %}
 	{{ block.super }}
-	<style type="text/css">
-		#changelist .start-cell td,
-		#changelist .start-cell th {
-			border-bottom: 0 !important;
-		}
-		#changelist .meta-info {
-			color:#666;
-		}
-		#changelist td,
-		#changelist th {
-			padding-bottom: 3px;
-			border-left: 0 !important;
-			border: 0 !important;
-		}
-		#changelist .end-cell td {
-			border-top: 0;
-			padding-top: 2px;
-		}
-		#changelist td { border-color: inherit !important; }
-		#changelist .cell-status-1 {
-			background: inherit !important;
-			border-color: inherit !important;
-			opacity: .5;
-			filter: alpha(opacity=50);
-		}
-		#changelist .cell-status-0,
-		#changelist .cell-level-40,
-		#changelist .cell-level-50 {
-			background: #FDC;
-			border-color: #E88;
-		}
-		#changelist .cell-status-0.row2,
-		#changelist .cell-level-40.row2,
-		#changelist .cell-level-50.row2 {
-			background: #FED;
-			border-color: #E99;
-		}
-		#changelist .cell-level-30 {
-			background: #ffb;
-			border-color: #eea;
-		}
-		#changelist .cell-level-30.row2 {
-			background: #ffd;
-			border-color: #dd8;
-		}
-
-		#changelist .cell-level-20 {
-			background: #DDFFFF;
-			border-color: #BBEEEE;
-		}
-		#changelist .cell-level-20.row2 {
-			background: #E7FFFF;
-			border-color: #CCEEEE;
-		}
-		
-		#changelist .cell-level-10 {
-			background: #DDE7FF;
-			border-color: #CCDDEE;
-		}
-		#changelist .cell-level-10.row2 {
-			background: #E7EEFF;
-			border-color: #CCDDEE;
-		}
-	</style>
+	{% include "admin/djangodblog/partial/change_list_styles.html" %}
 {% endblock %}
 
 {% block result_list %}
-    {% if action_form and actions_on_top %}{% admin_actions %}{% endif %}
+	{% if action_form and actions_on_top %}{% admin_actions %}{% endif %}
 	{% result_list cl %}
-    {% if action_form and actions_on_bottom %}{% admin_actions %}{% endif %}
+	{% if action_form and actions_on_bottom %}{% admin_actions %}{% endif %}
 {% endblock %}
\ No newline at end of file
diff --git a/djangodblog/templates/admin/djangodblog/partials/change_list_styles.html b/djangodblog/templates/admin/djangodblog/partials/change_list_styles.html
new file mode 100644
index 0000000000..5e9375e0cf
--- /dev/null
+++ b/djangodblog/templates/admin/djangodblog/partials/change_list_styles.html
@@ -0,0 +1,64 @@
+<style type="text/css">
+	#changelist .start-cell td,
+	#changelist .start-cell th {
+		border-bottom: 0 !important;
+	}
+	#changelist .meta-info {
+		color:#666;
+	}
+	#changelist td,
+	#changelist th {
+		padding-bottom: 3px;
+		border-left: 0 !important;
+		border: 0 !important;
+	}
+	#changelist .end-cell td {
+		border-top: 0;
+		padding-top: 2px;
+	}
+	#changelist td { border-color: inherit !important; }
+	#changelist .cell-status-1 {
+		background: inherit !important;
+		border-color: inherit !important;
+		opacity: .5;
+		filter: alpha(opacity=50);
+	}
+	#changelist .cell-status-0,
+	#changelist .cell-level-40,
+	#changelist .cell-level-50 {
+		background: #FDC;
+		border-color: #E88;
+	}
+	#changelist .cell-status-0.row2,
+	#changelist .cell-level-40.row2,
+	#changelist .cell-level-50.row2 {
+		background: #FED;
+		border-color: #E99;
+	}
+	#changelist .cell-level-30 {
+		background: #ffb;
+		border-color: #eea;
+	}
+	#changelist .cell-level-30.row2 {
+		background: #ffd;
+		border-color: #dd8;
+	}
+
+	#changelist .cell-level-20 {
+		background: #DDFFFF;
+		border-color: #BBEEEE;
+	}
+	#changelist .cell-level-20.row2 {
+		background: #E7FFFF;
+		border-color: #CCEEEE;
+	}
+	
+	#changelist .cell-level-10 {
+		background: #DDE7FF;
+		border-color: #CCDDEE;
+	}
+	#changelist .cell-level-10.row2 {
+		background: #E7EEFF;
+		border-color: #CCDDEE;
+	}
+</style>
\ No newline at end of file
