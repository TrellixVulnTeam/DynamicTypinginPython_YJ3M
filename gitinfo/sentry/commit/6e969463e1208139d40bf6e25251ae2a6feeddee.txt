commit 6e969463e1208139d40bf6e25251ae2a6feeddee
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Apr 12 15:39:28 2018 -0700

    feat(avatars): Add team avatar view

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index c3f6803753..22fd12051c 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -266,7 +266,7 @@ STATIC_URL = '/_static/{version}/'
 
 # various middleware will use this to identify resources which should not access
 # cookies
-ANONYMOUS_STATIC_PREFIXES = ('/_static/', '/avatar/', '/organization-avatar/')
+ANONYMOUS_STATIC_PREFIXES = ('/_static/', '/avatar/', '/organization-avatar/', '/team-avatar/')
 
 STATICFILES_FINDERS = (
     "django.contrib.staticfiles.finders.FileSystemFinder",
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 7c18dc53a1..e436ae9fb1 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -87,6 +87,7 @@ RESERVED_ORGANIZATION_SLUGS = frozenset(
         'security', 'terms', 'from', 'sponsorship', 'for', 'at', 'platforms', 'branding', 'vs',
         'answers', '_admin', 'support', 'contact', 'onboarding', 'ext', 'extension', 'extensions',
         'plugins', 'themonitor', 'settings', 'legal', 'avatar', 'organization-avatar',
+        'team-avatar',
     )
 )
 
diff --git a/src/sentry/middleware/user.py b/src/sentry/middleware/user.py
index 00f451108b..2a1bbf3639 100644
--- a/src/sentry/middleware/user.py
+++ b/src/sentry/middleware/user.py
@@ -8,8 +8,9 @@ from django.utils import timezone
 class UserActiveMiddleware(object):
     disallowed_paths = (
         'sentry.web.frontend.generic.static_media',
-        'sentry.web.frontend.user_avatar',
         'sentry.web.frontend.organization_avatar',
+        'sentry.web.frontend.team_avatar',
+        'sentry.web.frontend.user_avatar',
     )
 
     def process_view(self, request, view_func, view_args, view_kwargs):
diff --git a/src/sentry/web/frontend/team_avatar.py b/src/sentry/web/frontend/team_avatar.py
new file mode 100644
index 0000000000..d7a97c8aeb
--- /dev/null
+++ b/src/sentry/web/frontend/team_avatar.py
@@ -0,0 +1,8 @@
+from __future__ import absolute_import
+
+from sentry.models import TeamAvatar
+from sentry.web.frontend.base import AvatarPhotoView
+
+
+class TeamAvatarPhotoView(AvatarPhotoView):
+    model = TeamAvatar
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 7d79852c9b..4250ad05da 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -37,6 +37,7 @@ from sentry.web.frontend.oauth_authorize import OAuthAuthorizeView
 from sentry.web.frontend.oauth_token import OAuthTokenView
 from sentry.auth.providers.saml2 import SAML2AcceptACSView, SAML2SLSView, SAML2MetadataView
 from sentry.web.frontend.organization_avatar import OrganizationAvatarPhotoView
+from sentry.web.frontend.team_avatar import TeamAvatarPhotoView
 from sentry.web.frontend.organization_auth_settings import \
     OrganizationAuthSettingsView
 from sentry.web.frontend.organization_integration_setup import \
@@ -441,15 +442,20 @@ urlpatterns += patterns(
         TransferProjectView.as_view(),
         name='sentry-transfer-project'
     ),
+    url(
+        r'^avatar/(?P<avatar_id>[^\/]+)/$',
+        UserAvatarPhotoView.as_view(),
+        name='sentry-user-avatar-url'
+    ),
     url(
         r'^organization-avatar/(?P<avatar_id>[^\/]+)/$',
         OrganizationAvatarPhotoView.as_view(),
         name='sentry-organization-avatar-url'
     ),
     url(
-        r'^avatar/(?P<avatar_id>[^\/]+)/$',
-        UserAvatarPhotoView.as_view(),
-        name='sentry-user-avatar-url'
+        r'^team-avatar/(?P<avatar_id>[^\/]+)/$',
+        TeamAvatarPhotoView.as_view(),
+        name='sentry-team-avatar-url'
     ),
 
     # Generic
diff --git a/tests/sentry/web/frontend/test_team_avatar.py b/tests/sentry/web/frontend/test_team_avatar.py
new file mode 100644
index 0000000000..6086e41f5d
--- /dev/null
+++ b/tests/sentry/web/frontend/test_team_avatar.py
@@ -0,0 +1,22 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+from six import BytesIO
+
+from sentry.models import File, TeamAvatar
+from sentry.testutils import TestCase
+from sentry.web.frontend.generic import FOREVER_CACHE
+
+
+class TeamAvatarTest(TestCase):
+    def test_headers(self):
+        team = self.create_team()
+        photo = File.objects.create(name='test.png', type='avatar.file')
+        photo.putfile(BytesIO(b'test'))
+        avatar = TeamAvatar.objects.create(team=team, file=photo)
+        url = reverse('sentry-team-avatar-url', kwargs={'avatar_id': avatar.ident})
+        response = self.client.get(url)
+        assert response.status_code == 200
+        assert response['Cache-Control'] == FOREVER_CACHE
+        assert response.get('Vary') is None
+        assert response.get('Set-Cookie') is None
