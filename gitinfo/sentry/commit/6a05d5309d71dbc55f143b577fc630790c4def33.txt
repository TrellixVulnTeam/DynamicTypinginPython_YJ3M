commit 6a05d5309d71dbc55f143b577fc630790c4def33
Author: Dora <dora.l.chan@gmail.com>
Date:   Thu Jan 2 09:41:43 2020 -0800

    feat(discv2): added hatch to span (#16197)
    
    * added hatch
    
    * lighten gray
    
    * added hatch pattern
    
    * make spancolor an option
    
    * make spancolor an option

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
index 57c096fcc1..adde443dfa 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanBar.tsx
@@ -170,7 +170,8 @@ type SpanBarProps = {
   orgId: string;
   trace: Readonly<ParsedTraceType>;
   span: Readonly<ProcessedSpanType>;
-  spanBarColour: string;
+  spanBarColour?: string;
+  spanBarHatch?: boolean;
   generateBounds: (bounds: SpanBoundsType) => SpanGeneratedBoundsType;
   treeDepth: number;
   continuingTreeDepths: Array<number>;
@@ -677,7 +678,7 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
   renderHeader = (
     dividerHandlerChildrenProps: DividerHandlerManager.DividerHandlerManagerChildrenProps
   ) => {
-    const {span, spanBarColour, spanNumber} = this.props;
+    const {span, spanBarColour, spanBarHatch, spanNumber} = this.props;
 
     const startTimestamp: number = span.start_timestamp;
     const endTimestamp: number = span.timestamp;
@@ -715,6 +716,7 @@ class SpanBar extends React.Component<SpanBarProps, SpanBarState> {
         >
           {displaySpanBar && (
             <SpanBarRectangle
+              spanBarHatch={spanBarHatch}
               style={{
                 backgroundColor: spanBarColour,
                 left: toPercent(bounds.left || 0),
@@ -987,6 +989,17 @@ const DurationPill = styled('div')<{
   }
 `;
 
+const getHatchPattern = ({spanBarHatch}) => {
+  if (spanBarHatch === true) {
+    return `
+      background-image: linear-gradient(45deg, #dedae3 10%, #f4f2f7 10%, #f4f2f7 50%, #dedae3 50%, #dedae3 60%, #f4f2f7 60%, #f4f2f7 100%);
+      background-size: 6.5px 6.5px;
+  `;
+  }
+
+  return null;
+};
+
 const SpanBarRectangle = styled('div')`
   position: relative;
   height: 100%;
@@ -994,6 +1007,7 @@ const SpanBarRectangle = styled('div')`
   user-select: none;
   transition: border-color 0.15s ease-in-out;
   border-right: 1px solid rgba(0, 0, 0, 0);
+  ${getHatchPattern}
 `;
 
 const WarningIcon = styled(InlineSvg)`
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanGroup.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanGroup.tsx
index a606b9bdd3..f0c5436ed5 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanGroup.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanGroup.tsx
@@ -16,7 +16,8 @@ type PropType = {
   continuingTreeDepths: Array<number>;
   numOfSpanChildren: number;
   renderedSpanChildren: Array<JSX.Element>;
-  spanBarColour: string;
+  spanBarColour?: string;
+  spanBarHatch?: boolean;
   spanNumber: number;
   isLast: boolean;
   isRoot?: boolean;
@@ -51,6 +52,7 @@ class SpanGroup extends React.Component<PropType, State> {
   render() {
     const {
       spanBarColour,
+      spanBarHatch,
       span,
       numOfSpanChildren,
       trace,
@@ -71,6 +73,7 @@ class SpanGroup extends React.Component<PropType, State> {
           eventView={eventView}
           orgId={orgId}
           spanBarColour={spanBarColour}
+          spanBarHatch={spanBarHatch}
           span={span}
           showSpanTree={this.state.showSpanTree}
           numOfSpanChildren={numOfSpanChildren}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
index 16d174e7a3..3ea57ef4aa 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanTree.tsx
@@ -3,7 +3,6 @@ import styled from 'react-emotion';
 import get from 'lodash/get';
 
 import {t} from 'app/locale';
-import theme from 'app/utils/theme';
 import EventView from 'app/views/eventsV2/eventView';
 
 import {
@@ -46,8 +45,6 @@ type PropType = {
 };
 
 class SpanTree extends React.Component<PropType> {
-  traceViewRef = React.createRef<HTMLDivElement>();
-
   shouldComponentUpdate(nextProps: PropType) {
     if (nextProps.dragProps.isDragging || nextProps.dragProps.isWindowSelectionDragging) {
       return false;
@@ -56,6 +53,8 @@ class SpanTree extends React.Component<PropType> {
     return true;
   }
 
+  traceViewRef = React.createRef<HTMLDivElement>();
+
   generateInfoMessage(input: {
     isCurrentSpanHidden: boolean;
     numOfSpansOutOfViewAbove: number;
@@ -243,8 +242,8 @@ class SpanTree extends React.Component<PropType> {
           treeDepth={treeDepth}
           numOfSpanChildren={spanChildren.length}
           renderedSpanChildren={reduced.renderedSpanChildren}
-          spanBarColour={theme.gray2}
           isCurrentSpanFilteredOut={isCurrentSpanFilteredOut}
+          spanBarHatch
         />
       ) : null;
 
@@ -271,6 +270,7 @@ class SpanTree extends React.Component<PropType> {
             renderedSpanChildren={reduced.renderedSpanChildren}
             spanBarColour={spanBarColour}
             isCurrentSpanFilteredOut={isCurrentSpanFilteredOut}
+            spanBarHatch={false}
           />
         </React.Fragment>
       ),
