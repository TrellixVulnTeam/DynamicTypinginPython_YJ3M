commit e331588da55863d261b9a4e99fda70989fabf629
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Thu Oct 18 09:07:51 2018 -0700

    Fix error handling (#10172)

diff --git a/src/sentry/api/endpoints/user_authenticator_enroll.py b/src/sentry/api/endpoints/user_authenticator_enroll.py
index ed571493b3..f91db81129 100644
--- a/src/sentry/api/endpoints/user_authenticator_enroll.py
+++ b/src/sentry/api/endpoints/user_authenticator_enroll.py
@@ -225,27 +225,26 @@ class UserAuthenticatorEnrollEndpoint(UserEndpoint):
             Authenticator.objects.auto_add_recovery_codes(request.user)
 
             # Try to accept an org invite pending 2FA enrollment
-            try:
-                member_id = serializer.data['memberId']
-                token = serializer.data['token']
-
-                helper = ApiInviteHelper(
-                    instance=self,
-                    request=request,
-                    member_id=member_id,
-                    token=token,
-                    logger=logger,
-                )
-            except KeyError:
-                pass
-            except OrganizationMember.DoesNotExist:
-                logger.error('Failed to accept pending org invite', exc_info=True)
-            else:
-                if helper.valid_request():
-                    helper.accept_invite()
-
-                    response = Response(status=status.HTTP_204_NO_CONTENT)
-                    helper.remove_invite_cookie(response)
-                    return response
+            member_id = serializer.data.get('memberId')
+            token = serializer.data.get('token')
+
+            if member_id and token:
+                try:
+                    helper = ApiInviteHelper(
+                        instance=self,
+                        request=request,
+                        member_id=member_id,
+                        token=token,
+                        logger=logger,
+                    )
+                except OrganizationMember.DoesNotExist:
+                    logger.error('Failed to accept pending org invite', exc_info=True)
+                else:
+                    if helper.valid_request():
+                        helper.accept_invite()
+
+                        response = Response(status=status.HTTP_204_NO_CONTENT)
+                        helper.remove_invite_cookie(response)
+                        return response
 
             return Response(status=status.HTTP_204_NO_CONTENT)
diff --git a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
index 6ab8991b3b..269cb6512e 100644
--- a/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
+++ b/tests/sentry/api/endpoints/test_user_authenticator_enroll.py
@@ -319,8 +319,8 @@ class AcceptOrganizationInviteTest(APITestCase):
         assert om.user is None
         assert om.email == 'newuser@example.com'
 
-        log.error.call_count == 1
-        log.error.call_args[0][0] == 'Failed to accept pending org invite'
+        assert log.error.call_count == 1
+        assert log.error.call_args[0][0] == 'Failed to accept pending org invite'
 
     @mock.patch('sentry.api.endpoints.user_authenticator_enroll.logger')
     @mock.patch('sentry.models.U2fInterface.try_enroll', return_value=True)
@@ -331,3 +331,21 @@ class AcceptOrganizationInviteTest(APITestCase):
         om = OrganizationMember.objects.get(id=om.id)
         assert om.user is None
         assert om.email == 'newuser@example.com'
+
+    @mock.patch('sentry.api.endpoints.user_authenticator_enroll.logger')
+    @mock.patch('sentry.models.U2fInterface.try_enroll', return_value=True)
+    def test_enroll_without_pending_invite__no_error(self, try_enroll, log):
+        new_options = settings.SENTRY_OPTIONS.copy()
+        new_options['system.url-prefix'] = 'https://testserver'
+        with self.settings(SENTRY_OPTIONS=new_options):
+            url = reverse(
+                'sentry-api-0-user-authenticator-enroll', kwargs={'user_id': 'me', 'interface_id': 'u2f'}
+            )
+
+            resp = self.client.post(url, data={
+                'deviceName': 'device name',
+                'challenge': 'challenge',
+                'response': 'response',
+            })
+            assert resp.status_code == 204
+        assert log.error.called is False
