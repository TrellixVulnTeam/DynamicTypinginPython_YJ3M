commit 5b3f7ac62852a1b56763a0e8ae61f1dffe702521
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Oct 29 18:06:07 2015 -0700

    Correct stat name support

diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index 7ec679176e..0015e6fec3 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -36,7 +36,7 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
                                           which the stats should be
                                           retrieved.
         :qparam string stat: the name of the stat to query (``"received"``,
-                             ``"rejected"``)
+                             ``"rejected"``, ``"blacklisted"``)
         :qparam timestamp since: a timestamp to set the start of the query
                                  in seconds since UNIX epoch.
         :qparam timestamp until: a timestamp to set the end of the query
diff --git a/src/sentry/api/endpoints/project_stats.py b/src/sentry/api/endpoints/project_stats.py
index c8b313fb6f..04fda9806c 100644
--- a/src/sentry/api/endpoints/project_stats.py
+++ b/src/sentry/api/endpoints/project_stats.py
@@ -38,7 +38,7 @@ class ProjectStatsEndpoint(ProjectEndpoint, StatsMixin):
         :pparam string organization_slug: the slug of the organization.
         :pparam string project_slug: the slug of the project.
         :qparam string stat: the name of the stat to query (``"received"``,
-                             ``"rejected"``)
+                             ``"rejected"``, ``"blacklisted"``)
         :qparam timestamp since: a timestamp to set the start of the query
                                  in seconds since UNIX epoch.
         :qparam timestamp until: a timestamp to set the end of the query
@@ -50,8 +50,18 @@ class ProjectStatsEndpoint(ProjectEndpoint, StatsMixin):
                                    values.
         :auth: required
         """
+        stat = request.GET.get('stat', 'received')
+        if stat == 'received':
+            stat_model = tsdb.models.project_total_received
+        elif stat == 'rejected':
+            stat_model = tsdb.models.project_total_rejected
+        elif stat == 'blacklisted':
+            stat_model = tsdb.models.project_total_blacklisted
+        else:
+            raise ValueError('Invalid stat: %s' % stat)
+
         data = tsdb.get_range(
-            model=tsdb.models.project,
+            model=stat_model,
             keys=[project.id],
             **self._parse_args(request)
         )[project.id]
diff --git a/tests/sentry/api/endpoints/test_project_stats.py b/tests/sentry/api/endpoints/test_project_stats.py
index b48b72e189..d3a7f933f2 100644
--- a/tests/sentry/api/endpoints/test_project_stats.py
+++ b/tests/sentry/api/endpoints/test_project_stats.py
@@ -13,8 +13,8 @@ class ProjectStatsTest(APITestCase):
         project1 = self.create_project(name='foo')
         project2 = self.create_project(name='bar')
 
-        tsdb.incr(tsdb.models.project, project1.id, count=3)
-        tsdb.incr(tsdb.models.project, project2.id, count=5)
+        tsdb.incr(tsdb.models.project_total_received, project1.id, count=3)
+        tsdb.incr(tsdb.models.project_total_received, project2.id, count=5)
 
         url = reverse('sentry-api-0-project-stats', kwargs={
             'organization_slug': project1.organization.slug,
