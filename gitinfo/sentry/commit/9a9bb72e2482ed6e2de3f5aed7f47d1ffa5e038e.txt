commit 9a9bb72e2482ed6e2de3f5aed7f47d1ffa5e038e
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 30 22:46:57 2012 -0700

    Adjust appearance tests and move login test

diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index e2d0ff3d67..5b2be05bcd 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -91,7 +91,7 @@ class AppearanceSettingsForm(forms.Form):
         self.user = user
         super(AppearanceSettingsForm, self).__init__(*args, **kwargs)
 
-    def save(self, commit=True):
+    def save(self):
         # if self.cleaned_data['new_password2']:
         #     self.user.set_password(self.cleaned_data['new_password1'])
         # self.user.first_name = self.cleaned_data['first_name']
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 5403b4b999..0a55284e5f 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -5,28 +5,49 @@ from __future__ import absolute_import
 from django.contrib.auth.models import User
 from django.core.urlresolvers import reverse
 from sentry.models import UserOption
-
+from sentry.testutils import fixture
 from tests.base import TestCase
 
 
+class LoginTest(TestCase):
+    @fixture
+    def user(self):
+        user = User(username="admin", email="admin@localhost")
+        user.set_password('foobar')
+        user.save()
+        return user
+
+    def test_auth(self):
+        # load it once for test cookie
+        self.client.get(reverse('sentry-login'))
+
+        resp = self.client.post(reverse('sentry-login'), {
+            'username': self.user.username,
+            'password': 'foobar',
+        })
+        self.assertEquals(resp.status_code, 302)
+
+
 class AppearanceSettingsTest(TestCase):
-    def setUp(self):
-        self.user = User(username="admin", email="admin@localhost")
-        self.user.set_password('admin')
-        self.user.save()
+    @fixture
+    def user(self):
+        user = User(username="admin", email="admin@localhost")
+        user.set_password('password')
+        user.save()
+        return user
 
     def test_requires_auth(self):
         resp = self.client.get(reverse('sentry-account-settings-appearance'))
         self.assertEquals(resp.status_code, 302)
 
     def test_does_use_template(self):
-        self.client.login(username='admin', password='admin')
+        self.client.login(username=self.user.username, password='password')
         resp = self.client.get(reverse('sentry-account-settings-appearance'))
         self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/account/appearance.html')
 
     def test_does_save_settings(self):
-        self.client.login(username='admin', password='admin')
+        self.client.login(username=self.user.username, password='password')
         resp = self.client.post(reverse('sentry-account-settings-appearance'), {
             'language': 'en',
             'stacktrace_display': '2',
@@ -35,5 +56,6 @@ class AppearanceSettingsTest(TestCase):
 
         options = UserOption.objects.get_all_values(user=self.user, project=None)
 
+        print options
         self.assertEquals(options.get('stacktrace_display'), '2')
         self.assertEquals(options.get('language'), 'en')
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index 543d8a42ec..9596d8850d 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -30,18 +30,6 @@ class SentryViewsTest(TestCase):
         user.save()
         return user
 
-    def test_auth(self):
-        resp = self.client.get(reverse('sentry'), follow=True)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/login.html')
-
-        resp = self.client.post(reverse('sentry-login'), {
-            'username': self.user.username,
-            'password': 'password',
-        }, follow=True)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateNotUsed(resp, 'sentry/login.html')
-
     def test_dashboard(self):
         # no projects redirects them to create new project
         self.client.login(username=self.user.username, password='password')
