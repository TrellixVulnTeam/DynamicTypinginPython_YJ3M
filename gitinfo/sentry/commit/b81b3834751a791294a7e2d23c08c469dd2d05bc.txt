commit b81b3834751a791294a7e2d23c08c469dd2d05bc
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 2 13:19:54 2012 -0800

    Use correct default settings with processors

diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index f23ba3104d..4ea53df57a 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -91,3 +91,7 @@ UDP_PORT = 9001
 QUEUE = {
     'transport': 'djkombu.transport.DatabaseTransport',
 }
+
+# List of event handlers
+PROCESSORS = (
+)
\ No newline at end of file
diff --git a/sentry/processors/__init__.py b/sentry/processors/__init__.py
index 6b8a9abeff..dddaa24d26 100644
--- a/sentry/processors/__init__.py
+++ b/sentry/processors/__init__.py
@@ -25,21 +25,21 @@ PROCESSORS_CACHE = None
 def post_save_processors(sender, **kwargs):
     global PROCESSORS_CACHE
 
-    from django.conf import settings
+    from sentry.conf import settings
 
-    if not hasattr(settings, 'SENTRY_PROCESSORS'):
+    if not settings.PROCESSORS:
         return
 
     if PROCESSORS_CACHE is None:
         processors = []
-        for processor_ in settings.SENTRY_PROCESSORS:
+        for processor_ in settings.PROCESSORS:
             module_name, class_name = processor_.rsplit('.', 1)
             try:
                 module = __import__(module_name, {}, {}, class_name)
                 processor_class = getattr(module, class_name)
                 processor_ = processor_class()
             except Exception:
-                logger = logging.getLogger('sentry.errors')
+                logger = logging.getLogger('sentry.errors.processors')
                 logger.exception('Unable to import %s' % (processor_,))
                 continue
             processors.append(processor_)
diff --git a/tests/tests.py b/tests/tests.py
index 8421b5d23c..01f366f50e 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -612,15 +612,16 @@ class SentryUDPTest(TestCase):
 
 class SentryProcessorsTest(TestCase):
     def setUp(self):
+        self.orig_processors = settings.PROCESSORS
         processors.PROCESSORS_CACHE = None
-        django_settings.SENTRY_PROCESSORS = (
+        settings.PROCESSORS = (
             'tests.processor.TestProcessor',
         )
         from . import processor
         processor.CALLED = 0
 
     def tearDown(self):
-        django_settings.SENTRY_PROCESSORS = ()
+        settings.PROCESSORS = self.orig_processors
         processors.PROCESSORS_CACHE = None
 
     def create_event(self):
@@ -636,7 +637,6 @@ class SentryProcessorsTest(TestCase):
     def test_processors_called(self):
         self.create_event()
         self.create_event()
-        import sentry.processors
-        processors = sentry.processors.PROCESSORS_CACHE
-        self.assertEqual(len(processors), 1)
-        self.assertEqual(processors[0].called, 2)
+        proc_list = processors.PROCESSORS_CACHE
+        self.assertEqual(len(proc_list), 1)
+        self.assertEqual(proc_list[0].called, 2)
