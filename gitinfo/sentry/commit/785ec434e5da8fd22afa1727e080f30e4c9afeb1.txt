commit 785ec434e5da8fd22afa1727e080f30e4c9afeb1
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 22 20:35:44 2011 -0800

    Fix handling of legacy stacktraces

diff --git a/sentry/utils/manager.py b/sentry/utils/manager.py
index bd6a37398e..39c1835cc6 100644
--- a/sentry/utils/manager.py
+++ b/sentry/utils/manager.py
@@ -106,6 +106,8 @@ class GroupManager(models.Manager):
             'date': kwargs.pop('timestamp', None),
         }
 
+        result = dict((k, v) for k, v in result.iteritems() if v is not None)
+
         class_name = kwargs.pop('class_name', None)
         if class_name:
             result['message'] = '%s: %s' % (class_name, result['message'])
@@ -141,9 +143,10 @@ class GroupManager(models.Manager):
             for frame in sentry['frames']:
                 frames.append(dict((k, v) for k, v in frame.iteritems() if k in keys))
 
-            result['sentry.interfaces.Traceback'] = Stacktrace(
-                frames=frames,
-            ).serialize()
+            if frames:
+                result['sentry.interfaces.Stacktrace'] = Stacktrace(
+                    frames=frames,
+                ).serialize()
 
         if 'template' in sentry:
             template = sentry['template']
diff --git a/tests/tests.py b/tests/tests.py
index f979ed00a9..6094b0de8b 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -568,3 +568,25 @@ class SentryManagerTest(TestCase):
         exc = result['sentry.interfaces.Exception']
         self.assertEquals(exc['type'], 'TypeError')
         self.assertEquals(exc['value'], 'hello world')
+
+        result = Group.objects.convert_legacy_kwargs({'data': {
+            '__sentry__': {
+                'frames': [
+                    {
+                        'filename': 'foo.py',
+                        'function': 'hello_world',
+                        'vars': {},
+                        'pre_context': ['before i did something'],
+                        'context_line': 'i did something',
+                        'post_context': ['after i did something'],
+                        'lineno': 15,
+                    },
+                ],
+            }
+        }})
+        self.assertTrue('sentry.interfaces.Stacktrace' in result)
+        frames = result['sentry.interfaces.Stacktrace']
+        self.assertEquals(len(frames), 1)
+        frame = frames[0]
+        self.assertEquals(frame['filename'], 'foo.py')
+        self.assertEquals(frame['function'], 'hello_world')
