commit f95ead138afd33a5f448302d8801ab97ddf2966b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Jun 10 00:51:14 2015 +0200

    Added improved context data rendering

diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
new file mode 100644
index 0000000000..3280b46f7d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -0,0 +1,92 @@
+/*** @jsx React.DOM */
+
+var React = require('react');
+
+
+function renderValue(value) {
+  function walk(value) {
+    var i = 0, children = [];
+    if (value === null) {
+      return <span className="val-null">null</span>;
+    } else if (value === true || value === false) {
+      return <span className="val-bool">{value + ''}</span>;
+    } else if (typeof value === 'string' || value instanceof String) {
+      // consider auto quoting?
+      return <span className="val-string">{value}</span>;
+    } else if (typeof value === 'number' || value instanceof Number) {
+      return <span className="val-number">{value}</span>;
+    } else if (value instanceof Array) {
+      for (i = 0; i < value.length; i++) {
+        children.push(
+          <span className="val-array-item" key={i}>
+            {walk(value[i])}
+            {i < value.length - 1 ? <span className="val-array-sep">{', '}</span> : null}
+          </span>
+        );
+      }
+      return (
+        <span className="val-array">
+          <span className="val-array-marker">{'['}</span>
+          <span className="val-array-items">{children}</span>
+          <span className="val-array-marker">{']'}</span>
+        </span>
+      );
+    } else {
+      var keys = Object.keys(value);
+      for (i = 0; i < keys.length; i++) {
+        var key = keys[i];
+        children.push(
+          <span className="val-dict-pair" key={key}>
+            <span className="val-dict-key">
+              <span className="val-string">{key}</span>
+            </span>
+            <span className="val-dict-col">{': '}</span>
+            <span className="val-dict-value">
+              {walk(value[key])}
+              {i < keys.length - 1 ? <span className="val-dict-sep">{', '}</span> : null}
+            </span>
+          </span>
+        );
+      }
+      return (
+        <span className="val-dict">
+          <span className="val-dict-marker">{'{'}</span>
+          <span className="val-dict-items">{children}</span>
+          <span className="val-dict-marker">{'}'}</span>
+        </span>
+      );
+    }
+  }
+  return walk(value);
+}
+
+function renderKeyPosValue(value) {
+  if (typeof value === 'string' || value instanceof String) {
+    return <span className="val-string">{value}</span>;
+  }
+  return renderValue(value);
+}
+
+
+var ContextData = React.createClass({
+  propTypes: {
+    data: React.PropTypes.any
+  },
+
+  getDefaultProps() {
+    return {
+      data: null
+    };
+  },
+
+  render() {
+    var {data, className, ...other} = this.props;
+    other.className = 'val ' + (className || '');
+
+    return (
+      <pre {...other}>{renderValue(data)}</pre>
+    );
+  }
+});
+
+module.exports = ContextData;
diff --git a/src/sentry/static/sentry/app/views/groupDetails/eventEntries.jsx b/src/sentry/static/sentry/app/views/groupDetails/eventEntries.jsx
index 05e309dff1..66e2ae461f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/eventEntries.jsx
@@ -6,6 +6,7 @@ var Sticky = require("react-sticky");
 var GroupEventDataSection = require("./eventDataSection");
 var PropTypes = require("../../proptypes");
 var utils = require("../../utils");
+var ContextData = require("../../components/contextData");
 
 var GroupEventExtraData = React.createClass({
   propTypes: {
@@ -24,7 +25,7 @@ var GroupEventExtraData = React.createClass({
       children.push(<dt key={'dt-' + key}>{key}</dt>);
       children.push((
         <dd key={'dd-' + key}>
-          <pre>{JSON.stringify(context[key], null, 2)}</pre>
+          <ContextData data={context[key]} />
         </dd>
       ));
     }
diff --git a/src/sentry/static/sentry/app/views/groupDetails/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/views/groupDetails/interfaces/stacktraceContent.jsx
index 0a5661ce55..b77e1b3a9e 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/interfaces/stacktraceContent.jsx
@@ -7,11 +7,19 @@ var GroupEventDataSection = require("../eventDataSection");
 var PropTypes = require("../../../proptypes");
 var {defined} = require("../../../utils");
 
+var ContextData = require("../../../components/contextData");
+
 var FrameVariables = React.createClass({
   propTypes: {
     data: React.PropTypes.object.isRequired
   },
 
+  // make sure that clicking on the variables does not actually do
+  // anything on the containing element.
+  preventToggling(event) {
+    event.stopPropagation();
+  },
+
   render() {
     var children = [];
     var data = this.props.data;
@@ -21,12 +29,14 @@ var FrameVariables = React.createClass({
       children.push(<dt key={'dt-' + key}>{key}</dt>);
       children.push((
         <dd key={'dd-' + key}>
-          <pre>{JSON.stringify(value, null, 2)}</pre>
+          <ContextData data={value} />
         </dd>
       ));
     }
 
-    return <dl className="vars expandable">{children}</dl>;
+    return (
+      <dl className="vars expandable" onClick={this.preventToggling}>{children}</dl>
+    );
   }
 });
 
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 14ee240387..5d7ed376b1 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -1052,3 +1052,53 @@ div.commands {
     }
   }
 }
+
+pre.val, span.val {
+  span {
+    display: inline;
+  }
+}
+
+.val-string {
+  color: @green;
+}
+
+.val-number {
+  color: @pink;
+}
+
+.val-bool, .val-null {
+  color: @blue;
+  font-weight: bold;
+}
+
+.val-dict {
+  display: block;
+
+  .val-dict-items {
+    display: block;
+    padding: 0 0 0 15px;
+
+    .val-dict-pair {
+      display: block;
+
+    }
+  }
+
+  .val-dict-key, .val-dict-key .val-string {
+    color: @red;
+  }
+}
+
+.val-array {
+  display: block;
+
+  .val-array-items {
+    display: block;
+    padding: 0 0 0 15px;
+
+    .val-array-item {
+      display: block;
+    }
+  }
+}
