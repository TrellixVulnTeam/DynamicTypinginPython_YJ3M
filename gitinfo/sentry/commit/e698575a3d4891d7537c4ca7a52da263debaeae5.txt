commit e698575a3d4891d7537c4ca7a52da263debaeae5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jan 31 12:54:06 2018 -0800

    feat(ui): Small react changes (#7115)
    
    * fix(ui): Fix class method binding in `AsyncComponent`
    
    * feat(ui): Add error boundary to `LazyLoad`
    
    * feat(ui): Increase default settings indicator message duration
    
    * feat(ui): Allow CSS style obj to be passed to `U2fInterface`
    
    * feat(ui): Add "enroll" mode to `U2fSign`
    
    * feat(ui): Add some emotion theme defs
    
    * feat(ui): Allow `Form` to hide footer
    
    * fix(ui): Fix `SettingsPageHeader` title proptype
    
    * rename `theme.js` to use `jsx` ext
    
    * rename theme colors to `success/error`

diff --git a/src/sentry/static/sentry/app/components/asyncComponent.jsx b/src/sentry/static/sentry/app/components/asyncComponent.jsx
index b42d8e4acc..fd6d7ee359 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.jsx
@@ -51,12 +51,11 @@ class AsyncComponent extends React.Component {
     return state;
   }
 
-  remountComponent() {
+  remountComponent = () => {
     this.setState(this.getDefaultState(), this.fetchData);
-  }
+  };
 
-  // TODO(dcramer): we'd like to support multiple initial api requests
-  fetchData() {
+  fetchData = () => {
     let endpoints = this.getEndpoints();
 
     if (!endpoints.length) {
@@ -117,7 +116,7 @@ class AsyncComponent extends React.Component {
         },
       });
     });
-  }
+  };
 
   // DEPRECATED: use getEndpoints()
   getEndpointParams() {
diff --git a/src/sentry/static/sentry/app/components/lazyLoad.jsx b/src/sentry/static/sentry/app/components/lazyLoad.jsx
index eef5a04244..555276c3ba 100644
--- a/src/sentry/static/sentry/app/components/lazyLoad.jsx
+++ b/src/sentry/static/sentry/app/components/lazyLoad.jsx
@@ -57,6 +57,10 @@ class LazyLoad extends React.Component {
     );
   }
 
+  componentDidCatch(error, info) {
+    this.handleFetchError(error);
+  }
+
   getComponentGetter = () => this.props.component || this.props.route.componentPromise;
 
   handleFetchError = error => {
diff --git a/src/sentry/static/sentry/app/components/u2finterface.jsx b/src/sentry/static/sentry/app/components/u2finterface.jsx
index 2e7b35a92e..206024bd24 100644
--- a/src/sentry/static/sentry/app/components/u2finterface.jsx
+++ b/src/sentry/static/sentry/app/components/u2finterface.jsx
@@ -214,8 +214,10 @@ class U2fInterface extends React.Component {
   };
 
   renderPrompt = () => {
+    let {style} = this.props;
     return (
       <div
+        style={style}
         className={
           'u2f-box' +
           (this.state.hasBeenTapped ? ' tapped' : '') +
diff --git a/src/sentry/static/sentry/app/components/u2fsign.jsx b/src/sentry/static/sentry/app/components/u2fsign.jsx
index b159766286..c75a821b50 100644
--- a/src/sentry/static/sentry/app/components/u2fsign.jsx
+++ b/src/sentry/static/sentry/app/components/u2fsign.jsx
@@ -4,6 +4,16 @@ import React from 'react';
 import U2fInterface from './u2finterface';
 import {t} from '../locale';
 
+const MESSAGES = {
+  signin: t(
+    'Insert your U2F device or tap the button on it to confirm the sign-in request.'
+  ),
+  sudo: t('Alternatively you can use your U2F device to confirm the action.'),
+  enroll: t(
+    'To enroll your U2F device insert it now or tap the button on it to activate it.'
+  ),
+};
+
 class U2fSign extends React.Component {
   static propTypes = {
     challengeData: PropTypes.object,
@@ -15,29 +25,15 @@ class U2fSign extends React.Component {
   };
 
   render() {
-    const {displayMode, ...props} = this.props;
+    let {displayMode, ...props} = this.props;
+    let flowMode = displayMode === 'enroll' ? 'enroll' : 'sign';
     return (
       <U2fInterface
         {...props}
         silentIfUnsupported={displayMode === 'sudo'}
-        flowMode={'sign'}
+        flowMode={flowMode}
       >
-        <p>
-          {displayMode === 'signin'
-            ? t(
-                `
-            Insert your U2F device or tap the button on it to confirm the
-            sign-in request.
-          `
-              )
-            : displayMode === 'sudo'
-              ? t(
-                  `
-            Alternatively you can use your U2F device to confirm the action.
-          `
-                )
-              : null}
-        </p>
+        <p>{MESSAGES[displayMode] || null}</p>
       </U2fInterface>
     );
   }
diff --git a/src/sentry/static/sentry/app/constants.jsx b/src/sentry/static/sentry/app/constants.jsx
index 2b1ca216ec..ccaa28080a 100644
--- a/src/sentry/static/sentry/app/constants.jsx
+++ b/src/sentry/static/sentry/app/constants.jsx
@@ -30,4 +30,4 @@ export const DEFAULT_API_SCOPES = [
   'member:read',
 ];
 
-export const DEFAULT_TOAST_DURATION = 2000;
+export const DEFAULT_TOAST_DURATION = 6000;
diff --git a/src/sentry/static/sentry/app/utils/theme.js b/src/sentry/static/sentry/app/utils/theme.jsx
similarity index 92%
rename from src/sentry/static/sentry/app/utils/theme.js
rename to src/sentry/static/sentry/app/utils/theme.jsx
index c73b067a8c..e7e03043a1 100644
--- a/src/sentry/static/sentry/app/utils/theme.js
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -68,6 +68,7 @@ const theme = {
       backgroundLight: '#FFFDF7',
       background: '#f9a66d',
       border: '#E1D697',
+      textDark: '#D3BE2B',
     },
     success: {
       backgroundLight: '#F8FCF7',
@@ -84,7 +85,7 @@ const theme = {
 
   text: {
     family: '"Rubik", "Avenir Next", sans-serif',
-    familyMono: 'Monaco, monospace',
+    familyMono: 'Monaco, Consolas, "Courier New", monospace',
     lineHeightHeading: '1.15',
     lineHeightBody: '1.4',
     size: {
@@ -95,6 +96,9 @@ const theme = {
   },
 };
 
+// Aliases
 theme.textColor = theme.gray5;
+theme.success = theme.green;
+theme.error = theme.red;
 
 export default theme;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
index e71405efad..25e9c5d862 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/form.jsx
@@ -20,6 +20,7 @@ export default class Form extends React.Component {
     extraButton: PropTypes.element,
     initialData: PropTypes.object,
     requireChanges: PropTypes.bool,
+    hideFooter: PropTypes.bool,
     model: PropTypes.object,
     allowUndo: PropTypes.bool,
     saveOnBlur: PropTypes.bool,
@@ -116,8 +117,9 @@ export default class Form extends React.Component {
       extraButton,
       requireChanges,
       saveOnBlur,
+      hideFooter,
     } = this.props;
-    let shouldShowFooter = !saveOnBlur;
+    let shouldShowFooter = typeof hideFooter !== 'undefined' ? !hideFooter : !saveOnBlur;
 
     return (
       <form onSubmit={this.onSubmit} className={className}>
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsPageHeader.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsPageHeader.jsx
index afe0946cc7..06e33788ad 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsPageHeader.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsPageHeader.jsx
@@ -5,7 +5,7 @@ import {Flex} from 'grid-emotion';
 
 class SettingsPageHeading extends React.Component {
   static propTypes = {
-    title: PropTypes.string,
+    title: PropTypes.node,
     action: PropTypes.node,
     tabs: PropTypes.node,
   };
