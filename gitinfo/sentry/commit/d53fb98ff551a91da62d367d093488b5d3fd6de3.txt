commit d53fb98ff551a91da62d367d093488b5d3fd6de3
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Oct 15 16:29:50 2018 -0700

    feat(integrations): Add frontend analytics (#10103)
    
     - Integrations paged viewed
     - Integrations installation modal opened
     - Integration details (configure) viewed

diff --git a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
index 0362e08f2d..c6979a0827 100644
--- a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
+import {analytics} from 'app/utils/analytics';
 import {t} from 'app/locale';
 import AddIntegrationButton from 'app/views/organizationIntegrations/addIntegrationButton';
 import Alert from 'app/components/alert';
@@ -13,8 +14,8 @@ import InlineSvg from 'app/components/inlineSvg';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import SentryTypes from 'app/sentryTypes';
 import Tag from 'app/views/settings/components/tag.jsx';
-import space from 'app/styles/space';
 import marked, {singleLineRenderer} from 'app/utils/marked';
+import space from 'app/styles/space';
 
 const EARLY_ADOPTER_INTEGRATIONS = [];
 
@@ -45,9 +46,16 @@ class IntegrationDetailsModal extends React.Component {
     closeModal: PropTypes.func.isRequired,
     onAddIntegration: PropTypes.func.isRequired,
     provider: PropTypes.object.isRequired,
-    organization: SentryTypes.Organization,
+    organization: SentryTypes.Organization.isRequired,
   };
 
+  componentDidMount() {
+    analytics('integrations.install_modal_opened', {
+      org_id: parseInt(this.props.organization.id, 10),
+      integration: this.props.provider.key,
+    });
+  }
+
   onAddIntegration = integration => {
     this.props.closeModal();
     this.props.onAddIntegration(integration);
@@ -128,7 +136,11 @@ class IntegrationDetailsModal extends React.Component {
           </Flex>
         </Flex>
         <Description dangerouslySetInnerHTML={{__html: description}} />
-        <FeatureList {...featureProps} formatter={singleLineRenderer} />
+        <FeatureList
+          {...featureProps}
+          provider={provider}
+          formatter={singleLineRenderer}
+        />
 
         <Metadata>
           <AuthorName flex={1}>{t('By %s', provider.metadata.author)}</AuthorName>
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 7aa418eaad..d6310348c8 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -5,6 +5,7 @@ import styled from 'react-emotion';
 
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import {addErrorMessage} from 'app/actionCreators/indicator';
+import {analytics} from 'app/utils/analytics';
 import {sortArray} from 'app/utils';
 import {t} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
@@ -12,13 +13,20 @@ import LoadingIndicator from 'app/components/loadingIndicator';
 import MigrationWarnings from 'app/views/organizationIntegrations/migrationWarnings';
 import ProviderRow from 'app/views/organizationIntegrations/providerRow';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import withOrganization from 'app/utils/withOrganization';
 
-export default class OrganizationIntegrations extends AsyncComponent {
+class OrganizationIntegrations extends AsyncComponent {
   // Some integrations require visiting a different website to add them. When
   // we come back to the tab we want to show our integrations as soon as we can.
   reloadOnVisible = true;
   shouldReloadOnVisible = true;
 
+  componentDidMount() {
+    analytics('integrations.index_viewed', {
+      org_id: parseInt(this.props.organization.id, 10),
+    });
+  }
+
   getEndpoints() {
     let {orgId} = this.props.params;
     const query = {plugins: ['vsts', 'github', 'bitbucket']};
@@ -161,3 +169,6 @@ const StyledLoadingIndicator = styled(LoadingIndicator)`
   top: 50%;
   transform: translateY(-16px);
 `;
+
+export default withOrganization(OrganizationIntegrations);
+export {OrganizationIntegrations};
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
index 17671fc5f1..2aae63d0fd 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
@@ -1,7 +1,7 @@
 import {Box, Flex} from 'grid-emotion';
-import styled from 'react-emotion';
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 
 import {t} from 'app/locale';
 import AddIntegrationButton from 'app/views/organizationIntegrations/addIntegrationButton';
diff --git a/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx b/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx
index 603ad7db46..d8c38879e8 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationIntegrations/configureIntegration.jsx
@@ -1,16 +1,18 @@
 import React from 'react';
 
+import {analytics} from 'app/utils/analytics';
 import {t} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
 import BreadcrumbTitle from 'app/views/settings/components/settingsBreadcrumb/breadcrumbTitle';
 import Form from 'app/views/settings/components/forms/form';
-import IntegrationItem from 'app/views/organizationIntegrations/integrationItem';
 import IntegrationAlertRules from 'app/views/organizationIntegrations/integrationAlertRules';
+import IntegrationItem from 'app/views/organizationIntegrations/integrationItem';
 import IntegrationRepos from 'app/views/organizationIntegrations/integrationRepos';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import withOrganization from 'app/utils/withOrganization';
 
-export default class ConfigureIntegration extends AsyncView {
+class ConfigureIntegration extends AsyncView {
   getEndpoints() {
     const {orgId, integrationId} = this.props.params;
 
@@ -20,6 +22,13 @@ export default class ConfigureIntegration extends AsyncView {
     ];
   }
 
+  componentDidMount() {
+    analytics('integrations.details_viewed', {
+      org_id: parseInt(this.props.organization.id, 10),
+      integration: this.props.provider.key,
+    });
+  }
+
   getTitle() {
     return this.state.integration
       ? this.state.integration.provider.name
@@ -67,3 +76,5 @@ export default class ConfigureIntegration extends AsyncView {
     );
   }
 }
+
+export default withOrganization(ConfigureIntegration);
diff --git a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
index a4b3d41dea..32f078896c 100644
--- a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
+++ b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
@@ -4,6 +4,33 @@ exports[`IntegrationDetailsModal renders simple integration 1`] = `
 <IntegrationDetailsModal
   closeModal={[MockFunction]}
   onAddIntegration={[MockFunction]}
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   provider={
     Object {
       "canAdd": true,
@@ -149,6 +176,68 @@ exports[`IntegrationDetailsModal renders simple integration 1`] = `
       ]
     }
     formatter={[Function]}
+    organization={
+      Object {
+        "access": Array [
+          "org:read",
+          "org:write",
+          "org:admin",
+          "project:read",
+          "project:write",
+          "project:admin",
+          "team:read",
+          "team:write",
+          "team:admin",
+        ],
+        "features": Array [],
+        "id": "3",
+        "name": "Organization Name",
+        "onboardingTasks": Array [],
+        "projects": Array [],
+        "scrapeJavaScript": true,
+        "slug": "org-slug",
+        "status": Object {
+          "id": "active",
+          "name": "active",
+        },
+        "teams": Array [],
+      }
+    }
+    provider={
+      Object {
+        "canAdd": true,
+        "config": Array [],
+        "externalIssues": Array [],
+        "features": Array [],
+        "key": "github",
+        "metadata": Object {
+          "aspects": Object {
+            "alerts": Array [
+              Object {
+                "text": "This is a an alert example",
+                "type": "warning",
+              },
+            ],
+          },
+          "author": "Morty",
+          "description": "*markdown* formatted _description_",
+          "features": Array [
+            Object {
+              "description": "*markdown* feature description",
+            },
+          ],
+          "issue_url": "http://example.com/integration_issue_url",
+          "noun": "Installation",
+          "source_url": "http://example.com/integration_source_url",
+        },
+        "name": "GitHub",
+        "setupDialog": Object {
+          "height": 100,
+          "url": "/github-integration-setup-uri/",
+          "width": 100,
+        },
+      }
+    }
   >
     <ul>
       <li
@@ -270,6 +359,33 @@ exports[`IntegrationDetailsModal renders simple integration 1`] = `
         },
       ]
     }
+    organization={
+      Object {
+        "access": Array [
+          "org:read",
+          "org:write",
+          "org:admin",
+          "project:read",
+          "project:write",
+          "project:admin",
+          "team:read",
+          "team:write",
+          "team:admin",
+        ],
+        "features": Array [],
+        "id": "3",
+        "name": "Organization Name",
+        "onboardingTasks": Array [],
+        "projects": Array [],
+        "scrapeJavaScript": true,
+        "slug": "org-slug",
+        "status": Object {
+          "id": "active",
+          "name": "active",
+        },
+        "teams": Array [],
+      }
+    }
   >
     <div
       className="modal-footer"
diff --git a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
index 568f484b6e..857049aec5 100644
--- a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
+++ b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
@@ -6,6 +6,7 @@ import HookStore from 'app/stores/hookStore';
 
 describe('IntegrationDetailsModal', function() {
   const integrationAdded = jest.fn();
+  const org = TestStubs.Organization();
   const routerContext = TestStubs.routerContext();
 
   it('renders simple integration', function() {
@@ -16,6 +17,7 @@ describe('IntegrationDetailsModal', function() {
       <IntegrationDetailsModal
         provider={provider}
         closeModal={onClose}
+        organization={org}
         onAddIntegration={integrationAdded}
       />,
       routerContext
@@ -37,6 +39,7 @@ describe('IntegrationDetailsModal', function() {
       <IntegrationDetailsModal
         provider={provider}
         closeModal={onClose}
+        organization={org}
         onAddIntegration={integrationAdded}
       />,
       routerContext
@@ -63,6 +66,7 @@ describe('IntegrationDetailsModal', function() {
       <IntegrationDetailsModal
         provider={provider}
         onAddIntegration={integrationAdded}
+        organization={org}
         closeModal={() => null}
       />,
       routerContext
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
index 48925ae8a4..a9bc594872 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
@@ -2,6 +2,33 @@
 
 exports[`OrganizationIntegrations render() with installed integrations Displays InstalledIntegration 1`] = `
 <OrganizationIntegrations
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   params={
     Object {
       "orgId": "org-slug",
@@ -2895,6 +2922,33 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
 
 exports[`OrganizationIntegrations render() without integrations Displays integration providers 1`] = `
 <OrganizationIntegrations
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   params={
     Object {
       "orgId": "org-slug",
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index a1fe4bf39c..d01f92a43e 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -4,7 +4,7 @@ import React from 'react';
 import {Client} from 'app/api';
 import {mount} from 'enzyme';
 import {openIntegrationDetails} from 'app/actionCreators/modal';
-import OrganizationIntegrations from 'app/views/organizationIntegrations';
+import {OrganizationIntegrations} from 'app/views/organizationIntegrations';
 
 jest.mock('app/actionCreators/modal', () => ({
   openIntegrationDetails: jest.fn(),
@@ -56,7 +56,10 @@ describe('OrganizationIntegrations', function() {
         body: [],
       });
 
-      const wrapper = mount(<OrganizationIntegrations params={params} />, routerContext);
+      const wrapper = mount(
+        <OrganizationIntegrations organization={org} params={params} />,
+        routerContext
+      );
 
       it('Displays integration providers', function() {
         expect(wrapper).toMatchSnapshot();
@@ -96,7 +99,10 @@ describe('OrganizationIntegrations', function() {
         body: [],
       });
 
-      const wrapper = mount(<OrganizationIntegrations params={params} />, routerContext);
+      const wrapper = mount(
+        <OrganizationIntegrations organization={org} params={params} />,
+        routerContext
+      );
 
       const updatedIntegration = Object.assign({}, githubIntegration, {
         domain_name: 'updated-integration.github.com',
@@ -168,7 +174,10 @@ describe('OrganizationIntegrations', function() {
         ],
       });
 
-      const wrapper = mount(<OrganizationIntegrations params={params} />, routerContext);
+      const wrapper = mount(
+        <OrganizationIntegrations organization={org} params={params} />,
+        routerContext
+      );
 
       it('displays an Upgrade when the Plugin is enabled but a new Integration is not', function() {
         expect(
