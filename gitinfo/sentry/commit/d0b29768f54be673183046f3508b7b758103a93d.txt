commit d0b29768f54be673183046f3508b7b758103a93d
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jun 24 15:05:19 2016 -0700

    Basic rendering for default summaries

diff --git a/src/sentry/static/sentry/app/components/events/contextSummary.jsx b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
index 51375f73e1..b624864f36 100644
--- a/src/sentry/static/sentry/app/components/events/contextSummary.jsx
+++ b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
@@ -1,8 +1,104 @@
 import React from 'react';
 
 import PropTypes from '../../proptypes';
+import {t} from '../../locale';
 import {objectIsEmpty} from '../../utils';
 
+const NoSummary = React.createClass({
+  propTypes: {
+    title: React.PropTypes.string.isRequired,
+  },
+
+  render() {
+    return (
+      <div className="context-item">
+        <span className="icon" />
+        <h3>{this.props.title}</h3>
+      </div>
+    );
+  }
+});
+
+const GenericSummary = React.createClass({
+  propTypes: {
+    data: React.PropTypes.object.isRequired,
+    unknownTitle: React.PropTypes.string.isRequired,
+  },
+
+  render() {
+    let data = this.props.data;
+
+    if (objectIsEmpty(data) || !data.name) {
+      return <NoSummary title={this.props.unknownTitle} />;
+    }
+
+    let className = data.name.split(/\d/)[0].toLowerCase();
+
+    return (
+      <div className={`context-item ${className}`}>
+        <span className="icon" />
+        <h3>{data.name}</h3>
+        <p><strong>{t('Version:')}</strong> {data.version || t('Unknown Version')}</p>
+      </div>
+    );
+  },
+});
+
+const UserSummary = React.createClass({
+  propTypes: {
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    let user = this.props.data;
+
+    if (objectIsEmpty(user)) {
+      return <NoSummary title={t('Unknown User')} />;
+    }
+
+    let userTitle = (user.email ?
+      user.email :
+      user.ipAddress || user.id || user.username);
+
+    return (
+      <div className="context-item user">
+        <span className="icon" />
+        <h3>{userTitle}</h3>
+        {user.id && user.id !== userTitle ?
+          <p><strong>{t('ID:')}</strong> {user.id}</p>
+        : (user.username && user.username !== userTitle &&
+          <p><strong>{t('Username:')}</strong> {user.username}</p>
+        )}
+      </div>
+    );
+  },
+});
+
+const DeviceSummary = React.createClass({
+  propTypes: {
+    data: React.PropTypes.object.isRequired,
+  },
+
+  render() {
+    let data = this.props.data;
+
+    if (objectIsEmpty(data) || !data.model) {
+      return <NoSummary title={t('Unknown Device')} />;
+    }
+
+    // TODO(dcramer): we need a better way to parse it
+    let className = data.model.split(/\d/)[0].toLowerCase();
+
+    return (
+      <div className={`context-item ${className}`}>
+        <span className="icon" />
+        <h3>{data.model}</h3>
+        <p>{data.arch || data.model_id || ''}</p>
+      </div>
+    );
+  },
+});
+
 const EventContextSummary = React.createClass({
   propTypes: {
     group: PropTypes.Group.isRequired,
@@ -11,40 +107,56 @@ const EventContextSummary = React.createClass({
 
   render() {
     let evt = this.props.event;
-    let user = evt.user;
+    let contexts = evt.contexts;
 
-    let userTitle = (!objectIsEmpty(user) && user.email ?
-      user.email :
-      user.ipAddress || user.id || user.username);
+    let children = [<UserSummary key="user" data={evt.user} />];
+    switch (evt.platform) {
+      case 'cocoa':
+        children.push((
+          <DeviceSummary
+            key="device"
+            data={contexts.device} />
+        ));
+        children.push((
+          <GenericSummary
+            key="os"
+            data={contexts.os}
+            unknownTitle={t('Unknown OS')} />
+        ));
+        break;
+      case 'javascript':
+        children.push((
+          <GenericSummary
+            key="browser"
+            data={contexts.browser}
+            unknownTitle={t('Unknown Browser')} />
+        ));
+        children.push((
+          <GenericSummary
+            key="os"
+            data={contexts.os}
+            unknownTitle={t('Unknown OS')} />
+        ));
+        break;
+      default:
+        children.push((
+          <GenericSummary
+            key="runtime"
+            data={contexts.runtime}
+            unknownTitle={t('Unknown Runtime')} />
+        ));
+        children.push((
+          <GenericSummary
+            key="os"
+            data={contexts.os}
+            unknownTitle={t('Unknown OS')} />
+        ));
+        break;
+    }
 
     return (
       <div className="context-summary">
-        {userTitle ?
-          <div className="context-item">
-            <span className="icon" />
-            <h3>{userTitle}</h3>
-            {user.id && user.id !== userTitle ?
-              <p><strong>ID:</strong> {user.id}</p>
-            : (user.username && user.username !== userTitle &&
-              <p><strong>Username:</strong> {user.username}</p>
-            )}
-          </div>
-        :
-          <div className="context-item">
-            <span className="icon" />
-            <h3>Unknown User</h3>
-          </div>
-        }
-        <div className="context-item android">
-          <span className="icon" />
-          <h3>iPod 5 (n78ap)</h3>
-          <p><strong>Architecture:</strong> armv7f</p>
-        </div>
-        <div className="context-item ios">
-          <span className="icon" />
-          <h3>iOS 8.3 (12F69)</h3>
-          <p>Darwin Kernel Version 14.0.0</p>
-        </div>
+        {children}
       </div>
     );
   }
