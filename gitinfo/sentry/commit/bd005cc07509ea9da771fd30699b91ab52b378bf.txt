commit bd005cc07509ea9da771fd30699b91ab52b378bf
Author: MeredithAnya <meredith@getsentry.com>
Date:   Mon Jul 15 15:06:10 2019 -0700

    ref(app-platform): Remove sampling flags (#14009)
    
    * ref(app-platform): Remove sampling flags
    
    * remove options

diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index b642f8ee7b..c3c762d9b7 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -186,8 +186,3 @@ register('symbolicator.minidump-refactor-random-sampling', default=0.0)  # unuse
 # Normalization after processors
 register('store.normalize-after-processing', default=0.0)  # unused
 register('store.disable-trim-in-renormalization', default=0.0)  # unused
-
-# Post Process Error Hook Sampling
-register('post-process.use-error-hook-sampling', default=False)
-# From 0.0 to 1.0: Randomly enqueue process_resource_change task
-register('post-process.error-hook-sample-rate', default=0.0)
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index b21553670e..6453b5e619 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -46,24 +46,6 @@ def _get_service_hooks(project_id):
 
 def _should_send_error_created_hooks(project):
     from sentry.models import ServiceHook, Organization
-    from sentry import options
-    import random
-
-    use_sampling = options.get('post-process.use-error-hook-sampling')
-
-    # XXX(Meredith): Sampling is used to test the process_resource_change task.
-    # We have an option to explicity say we want to use sampling, and the other
-    # to determine what that rate should be.
-    # Going forward the sampling will be removed and the task will only be
-    # gated using the integrations-event-hooks (i.e. gated by plan)
-    #
-    # We also don't want to cache the result in case we need to manually lower the
-    # sample rate immediately, or turn it down completely.
-    if use_sampling:
-        if random.random() >= options.get('post-process.error-hook-sample-rate'):
-            return False
-
-        return True
 
     cache_key = u'servicehooks-error-created:1:{}'.format(project.id)
     result = cache.get(cache_key)
diff --git a/src/sentry/tasks/sentry_apps.py b/src/sentry/tasks/sentry_apps.py
index cf3e76c052..649faf88f2 100644
--- a/src/sentry/tasks/sentry_apps.py
+++ b/src/sentry/tasks/sentry_apps.py
@@ -7,7 +7,6 @@ from django.core.urlresolvers import reverse
 from requests.exceptions import RequestException
 
 from sentry import options
-from sentry import features
 from sentry.http import safe_urlopen
 from sentry.tasks.base import instrumented_task, retry
 from sentry.utils import metrics
@@ -183,10 +182,7 @@ def _process_resource_change(action, sender, instance_id, retryer=None, *args, *
         data = {}
         if issubclass(model, EventCommon):
             data[name] = _webhook_event_data(instance, instance.group_id, instance.project_id)
-            # XXX(Meredith): this flag is in place for testing the load this task creates
-            # and during testing we don't need to send the webhook.
-            if features.has('organizations:integrations-event-hooks', organization=org):
-                send_webhooks(installation, event, data=data)
+            send_webhooks(installation, event, data=data)
         else:
             data[name] = serialize(instance)
             send_webhooks(installation, event, data=data)
diff --git a/tests/sentry/tasks/post_process/tests.py b/tests/sentry/tasks/post_process/tests.py
index a6718742bc..3f00ec6b07 100644
--- a/tests/sentry/tasks/post_process/tests.py
+++ b/tests/sentry/tasks/post_process/tests.py
@@ -7,7 +7,6 @@ from django.utils import timezone
 from mock import Mock, patch
 
 from sentry import tagstore
-from sentry import options
 from sentry.models import Group, GroupSnooze, GroupStatus, ProjectOwnership
 from sentry.ownership.grammar import Rule, Matcher, Owner, dump_schema
 from sentry.testutils import TestCase
@@ -514,47 +513,6 @@ class PostProcessGroupTest(TestCase):
 
         assert not delay.called
 
-    @patch('sentry.tasks.sentry_apps.process_resource_change_bound.delay')
-    def test_processes_resource_change_task_uses_sampling_option(self, delay):
-        options.set('post-process.use-error-hook-sampling', True)
-        options.set('post-process.error-hook-sample-rate', 1)
-        event = self.store_event(
-            data={
-                'message': 'Foo bar',
-                'level': 'error',
-                'exception': {"type": "Foo", "value": "shits on fiah yo"},
-                'timestamp': timezone.now().isoformat()[:19]
-            },
-            project_id=self.project.id,
-            assert_no_errors=False
-        )
-
-        self.create_service_hook(
-            project=self.project,
-            organization=self.project.organization,
-            actor=self.user,
-            events=['error.created'],
-        )
-
-        post_process_group(
-            event=event,
-            is_new=False,
-            is_regression=False,
-            is_sample=False,
-            is_new_group_environment=False,
-        )
-
-        kwargs = {
-            'instance': event,
-        }
-
-        delay.assert_called_once_with(
-            action='created',
-            sender='Error',
-            instance_id=event.event_id,
-            **kwargs
-        )
-
 
 class IndexEventTagsTest(TestCase):
     def test_simple(self):
