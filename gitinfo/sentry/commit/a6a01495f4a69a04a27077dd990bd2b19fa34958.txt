commit a6a01495f4a69a04a27077dd990bd2b19fa34958
Author: Ayesha Omarali <ayesha.omarali@gmail.com>
Date:   Tue Oct 9 13:31:59 2018 -0700

    fix(Project Settings): Add Guard Clause for Error When Changing Project Slugs (#10048)

diff --git a/src/sentry/static/sentry/app/components/asyncComponent.jsx b/src/sentry/static/sentry/app/components/asyncComponent.jsx
index 03e9a5cf4b..1b482b0ff3 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.jsx
@@ -279,7 +279,7 @@ export default class AsyncComponent extends React.Component {
       resp => resp && resp.status === 403
     );
 
-    // If all error responses have status code === 0, then show erorr message but don't
+    // If all error responses have status code === 0, then show error message but don't
     // log it to sentry
     let shouldLogSentry =
       !!Object.values(this.state.errors).find(resp => resp && resp.status !== 0) ||
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index ec371b7227..76fbc764a5 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 import styled, {css} from 'react-emotion';
 import {Box} from 'grid-emotion';
+import sdk from 'app/utils/sdk';
 
 import {removeTeamFromProject, addTeamToProject} from 'app/actionCreators/projects';
 import {getOrganizationState} from 'app/mixins/organizationState';
@@ -170,16 +171,24 @@ class ProjectTeams extends AsyncView {
   renderAddTeamToProject() {
     let projectTeams = new Set(this.state.projectTeams.map(team => team.slug));
     let canCreateTeam = this.canCreateTeam();
+    let teamsToAdd;
 
-    let teamsToAdd = this.state.allTeams
-      .filter(team => {
-        return team.hasAccess && !projectTeams.has(team.slug);
-      })
-      .map(team => ({
-        value: team.id,
-        searchKey: team.slug,
-        label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,
-      }));
+    if (!this.state.allTeams) {
+      teamsToAdd = [];
+      sdk.captureException(new Error('This.state.allTeams is null'), {
+        extra: {state: this.state},
+      });
+    } else {
+      teamsToAdd = this.state.allTeams
+        .filter(team => {
+          return team.hasAccess && !projectTeams.has(team.slug);
+        })
+        .map(team => ({
+          value: team.id,
+          searchKey: team.slug,
+          label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,
+        }));
+    }
 
     let menuHeader = (
       <StyledTeamsLabel>
