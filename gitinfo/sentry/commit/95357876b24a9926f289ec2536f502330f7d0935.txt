commit 95357876b24a9926f289ec2536f502330f7d0935
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Nov 2 10:10:00 2015 -0800

    Santize urls within escaped strings
    
    Fixes GH-2260

diff --git a/src/sentry/utils/data_scrubber.py b/src/sentry/utils/data_scrubber.py
index 55c97c1c18..319a57699c 100644
--- a/src/sentry/utils/data_scrubber.py
+++ b/src/sentry/utils/data_scrubber.py
@@ -9,7 +9,6 @@ from __future__ import absolute_import
 
 import re
 import six
-from urlparse import urlsplit, urlunsplit
 
 from sentry.constants import DEFAULT_SCRUBBED_FIELDS
 
@@ -45,6 +44,7 @@ class SensitiveDataFilter(object):
     """
     MASK = '*' * 8
     VALUES_RE = re.compile(r'\b(?:\d[ -]*?){13,16}\b')
+    URL_PASSWORD_RE = re.compile(r'\b([\'"]?(?:[a-z0-9]+:)?//[^:]+:)([^@]+)@')
 
     def __init__(self, fields=None):
         if fields:
@@ -79,21 +79,8 @@ class SensitiveDataFilter(object):
             # Check if the value is a url-like object
             # that contains a password
             # e.g. postgres://foo:password@example.com/db
-            if '//' in value:
-                pieces = urlsplit(value)
-
-                # The following is slightly modified from CPython
-                # source to avoid repeating ourselves:
-                # https://hg.python.org/cpython/file/2.7/Lib/urlparse.py#l87
-                netloc = pieces.netloc
-                if '@' in netloc:
-                    userinfo, host = netloc.rsplit('@', 1)
-                    if ':' in userinfo:
-                        netloc = '%s:%s@%s' % (userinfo.split(':', 1)[0], self.MASK, host)
-                        # Using urlunsplit here is safe because we're guaranteeing netloc
-                        # has a value. If netloc were empty, we could yield incorrect
-                        # results.
-                        return urlunsplit((pieces[0], netloc) + pieces[2:])
+            if '//' in value and '@' in value:
+                value = self.URL_PASSWORD_RE.sub(r'\1' + self.MASK + '@', value)
 
         if isinstance(key, six.string_types):
             key = key.lower()
diff --git a/tests/sentry/utils/test_data_scrubber.py b/tests/sentry/utils/test_data_scrubber.py
index a7f230abb8..1fe360a6de 100644
--- a/tests/sentry/utils/test_data_scrubber.py
+++ b/tests/sentry/utils/test_data_scrubber.py
@@ -162,6 +162,11 @@ class SensitiveDataFilterTest(TestCase):
         result = proc.sanitize('foo', 'postgres:///path')
         self.assertEquals(result, 'postgres:///path')
 
+    def test_sanitize_url_escaped(self):
+        proc = SensitiveDataFilter()
+        result = proc.sanitize('foo', "'redis://redis:foo@localhost:6379/0'")
+        self.assertEquals(result, "'redis://redis:%s@localhost:6379/0'" % proc.MASK)
+
     def test_sanitize_http_body(self):
         data = {
             'sentry.interfaces.Http': {
