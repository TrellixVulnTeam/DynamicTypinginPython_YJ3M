commit f678818b097007ebfd168e32e7b0acacb0f5f635
Author: Yuri Baburov <burchik@gmail.com>
Date:   Tue Feb 15 13:29:54 2011 +0600

    Better async client termination.

diff --git a/sentry/client/async.py b/sentry/client/async.py
index 3f70def567..489cf70662 100644
--- a/sentry/client/async.py
+++ b/sentry/client/async.py
@@ -1,6 +1,12 @@
 from Queue import Queue
 from sentry.client.base import SentryClient
 from threading import Thread, Lock
+import atexit
+from sentry.client.models import get_client
+import os
+import time
+
+SENTRY_WAIT_SECONDS = 10 
 
 class AsyncSentryClient(SentryClient):
     """This client uses a single background thread to dispatch errors."""
@@ -18,18 +24,19 @@ class AsyncSentryClient(SentryClient):
         try:
             if not self._thread:
                 self._thread = Thread(target=self._target)
-                self._thread.setDaemon(False)
+                self._thread.setDaemon(True)
                 self._thread.start()
         finally:
             self._lock.release()
+            atexit.register(main_thread_terminated)
 
-    def stop(self):
+    def stop(self, timeout=None):
         """Stops the task thread. Synchronous!"""
         self._lock.acquire()
         try:
             if self._thread:
                 self.queue.put_nowait(self._terminator)
-                self._thread.join()
+                self._thread.join(timeout=timeout)
                 self._thread = None
         finally:
             self._lock.release()
@@ -46,3 +53,16 @@ class AsyncSentryClient(SentryClient):
 
     def send(self, **kwargs):
         self.queue.put_nowait(kwargs)
+
+def main_thread_terminated():
+    client = get_client()
+    if isinstance(client, AsyncSentryClient):
+        size = client.queue.qsize()
+        if size:
+            print "Sentry attempts to send %s error messages" % size
+            print "Waiting up to %s seconds" % SENTRY_WAIT_SECONDS
+            if os.name == 'nt':
+                print "Press Ctrl-Break to quit"
+            else:
+                print "Press Ctrl-C to quit"
+            client.stop(timeout = SENTRY_WAIT_SECONDS)
