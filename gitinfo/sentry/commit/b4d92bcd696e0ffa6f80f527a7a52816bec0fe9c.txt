commit b4d92bcd696e0ffa6f80f527a7a52816bec0fe9c
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Oct 29 21:07:53 2014 -0700

    Add create organization member flow

diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index a15f3d0828..af7f194923 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -96,3 +96,13 @@ class OrganizationMember(Model):
         except Exception as e:
             logger = logging.getLogger('sentry.mail.errors')
             logger.exception(e)
+
+    def get_display_name(self):
+        if self.user_id:
+            return self.user.get_display_name()
+        return self.email
+
+    def get_email(self):
+        if self.user_id:
+            return self.user.email
+        return self.email
diff --git a/src/sentry/permissions.py b/src/sentry/permissions.py
index 3a608e658a..400b7e436c 100644
--- a/src/sentry/permissions.py
+++ b/src/sentry/permissions.py
@@ -183,6 +183,47 @@ def can_remove_team_member(user, member):
     return can_manage_team_member(user, member, 'remove_team_member')
 
 
+@requires_login
+def can_add_organization_member(user, organization):
+    # must be an owner of the team
+    if user.is_superuser:
+        return True
+
+    if not organization.member_set.filter(user=user, type=OrganizationMemberType.ADMIN).exists():
+        return False
+
+    result = plugins.first('has_perm', user, 'add_organization_member', organization)
+    if result is False:
+        return False
+
+    return True
+
+
+@requires_login
+def can_manage_organization_member(user, member, perm):
+    # permissions always take precedence
+    if user.is_superuser:
+        return True
+
+    # must be an owner of the team
+    if not member.organization.member_set.filter(user=user, type=OrganizationMemberType.ADMIN).exists():
+        return False
+
+    result = plugins.first('has_perm', user, perm, member)
+    if result is False:
+        return False
+
+    return True
+
+
+def can_edit_organization_member(user, member):
+    return can_manage_organization_member(user, member, 'edit_organization_member')
+
+
+def can_remove_organization_member(user, member):
+    return can_manage_organization_member(user, member, 'remove_organization_member')
+
+
 @requires_login
 def can_remove_team(user, team):
     if user.is_superuser:
diff --git a/src/sentry/templates/sentry/create-organization-member.html b/src/sentry/templates/sentry/create-organization-member.html
new file mode 100644
index 0000000000..e761d43b0f
--- /dev/null
+++ b/src/sentry/templates/sentry/create-organization-member.html
@@ -0,0 +1,25 @@
+{% extends "sentry/bases/organization.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Member Settings" %} | {{ block.super }}{% endblock %}
+
+{% block org_members_nav %} class="active"{% endblock %}
+
+{% block inner %}
+    <fieldset>
+        <legend>{% trans "Add Member" %}</legend>
+        {% if is_invite %}
+            <p>{% trans "Invite a member to join this organization via their email address. If they do not already have an account, they will first be asked to create one." %}</p>
+            <p>{% trans "You will be able to configure permissions and team access on the following page." %}</p>
+            {% trans "Send Invite" as submit_label %}
+            {% include "sentry/partial/_form.html" %}
+        {% else %}
+            <p>{% trans "You may add a user by their username if they already have an account." %}</p>
+            <p>{% trans "You will be able to configure permissions and team access on the following page." %}</p>
+            {% include "sentry/partial/_form.html" %}
+        {% endif %}
+    </fieldset>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/organization-member-settings.html b/src/sentry/templates/sentry/organization-member-settings.html
index 193b8afd75..32c4103f89 100644
--- a/src/sentry/templates/sentry/organization-member-settings.html
+++ b/src/sentry/templates/sentry/organization-member-settings.html
@@ -24,7 +24,18 @@
             <div class="control-group">
                 <label>{% trans "User" %}</label>
                 <div class="controls">
-                    {{ member.user.username }}
+                    {{ member.get_display_name }}
+                </div>
+            </div>
+
+            <div class="control-group">
+                <label>{% trans "Status" %}</label>
+                <div class="controls">
+                    {% if member.is_pending %}
+                        Invited
+                    {% else %}
+                        Active
+                    {% endif %}
                 </div>
             </div>
 
diff --git a/src/sentry/templates/sentry/organization-members.html b/src/sentry/templates/sentry/organization-members.html
index e609a664fc..12c1d74c08 100644
--- a/src/sentry/templates/sentry/organization-members.html
+++ b/src/sentry/templates/sentry/organization-members.html
@@ -11,6 +11,10 @@
 {% block main %}
     <section class="body">
         <div class="page-header">
+            <div class="pull-right">
+                <a href="{% url 'sentry-create-organization-member' organization.id %}"
+                   class="btn btn-primary">New Member</a>
+            </div>
             <h2>Members</h2>
         </div>
 
@@ -29,11 +33,11 @@
                 {% for member, team_list in member_list %}
                     <tr>
                         <td>
-                            <img class="avatar" src="{% gravatar_url member.user.email size 20 %}">
+                            <img class="avatar" src="{% gravatar_url member.get_email size 20 %}">
                         </td>
                         <td>
                             <a href="{% url 'sentry-organization-member-settings' organization.id member.id %}">
-                                {{ member.user.get_display_name }}
+                                {{ member.get_display_name }}
                             </a>
                         </td>
                         <td>
diff --git a/src/sentry/templates/sentry/partial/form_base.html b/src/sentry/templates/sentry/partial/form_base.html
index e1fec4650c..7e3f339af1 100644
--- a/src/sentry/templates/sentry/partial/form_base.html
+++ b/src/sentry/templates/sentry/partial/form_base.html
@@ -1,4 +1,9 @@
 {% load crispy_forms_tags %}
+{% load i18n %}
+
+{% if form.errors %}
+    <div class="alert alert-error">{% trans "Please correct the errors below." %}</div>
+{% endif %}
 
 {{ form|as_crispy_errors }}
 
diff --git a/src/sentry/web/frontend/create_organization_member.py b/src/sentry/web/frontend/create_organization_member.py
new file mode 100644
index 0000000000..fa51849778
--- /dev/null
+++ b/src/sentry/web/frontend/create_organization_member.py
@@ -0,0 +1,120 @@
+from __future__ import absolute_import
+
+from django import forms
+from django.conf import settings
+from django.contrib import messages
+from django.core.urlresolvers import reverse
+from django.db import transaction, IntegrityError
+from django.http import HttpResponseRedirect
+from django.utils.translation import ugettext_lazy as _
+
+from sentry.models import OrganizationMember, OrganizationMemberType
+from sentry.permissions import can_add_organization_member
+from sentry.web.forms.fields import UserField
+from sentry.web.frontend.base import OrganizationView
+
+
+class InviteOrganizationMemberForm(forms.ModelForm):
+    class Meta:
+        fields = ('email',)
+        model = OrganizationMember
+
+    def save(self, organization):
+        om = super(InviteOrganizationMemberForm, self).save(commit=False)
+        om.organization = organization
+        om.type = OrganizationMemberType.MEMBER
+
+        sid = transaction.savepoint(using='default')
+        try:
+            om.save()
+        except IntegrityError:
+            transaction.savepoint_rollback(sid, using='default')
+            return OrganizationMember.objects.get(
+                email=om.email,
+                organization=organization,
+            ), False
+        transaction.savepoint_commit(sid, using='default')
+
+        return om, True
+
+
+class NewOrganizationMemberForm(forms.ModelForm):
+    user = UserField()
+
+    class Meta:
+        fields = ('user',)
+        model = OrganizationMember
+
+    def save(self, organization):
+        om = super(NewOrganizationMemberForm, self).save(commit=False)
+        om.organization = organization
+        om.type = OrganizationMemberType.MEMBER
+
+        sid = transaction.savepoint(using='default')
+        try:
+            om.save()
+        except IntegrityError:
+            transaction.savepoint_rollback(sid, using='default')
+            return OrganizationMember.objects.get(
+                user=om.user,
+                organization=organization,
+            ), False
+        transaction.savepoint_commit(sid, using='default')
+
+        return om, True
+
+
+class CreateOrganizationMemberView(OrganizationView):
+    required_access = OrganizationMemberType.ADMIN
+
+    def get_form(self, request):
+        initial = {
+            'type': OrganizationMemberType.MEMBER,
+        }
+
+        if settings.SENTRY_ENABLE_INVITES:
+            form_cls = InviteOrganizationMemberForm
+        else:
+            form_cls = NewOrganizationMemberForm
+
+        return form_cls(request.POST or None, initial=initial)
+
+    def get(self, request, organization):
+        if not can_add_organization_member(request.user, organization):
+            return HttpResponseRedirect(reverse('sentry'))
+
+        form = self.get_form(request)
+
+        context = {
+            'form': form,
+            'is_invite': settings.SENTRY_ENABLE_INVITES,
+        }
+
+        return self.respond('sentry/create-organization-member.html', context)
+
+    def post(self, request, organization):
+        if not can_add_organization_member(request.user, organization):
+            return HttpResponseRedirect(reverse('sentry'))
+
+        form = self.get_form(request)
+        if form.is_valid():
+            om, created = form.save(organization)
+
+            if created:
+                messages.add_message(request, messages.SUCCESS,
+                    _('The organization member was added.'))
+            else:
+                messages.add_message(request, messages.INFO,
+                    _('The organization member already exists.'))
+
+            redirect = reverse('sentry-organization-member-settings',
+                               args=[organization.id, om.id])
+
+            return HttpResponseRedirect(redirect)
+
+        context = {
+            'form': form,
+            'is_invite': settings.SENTRY_ENABLE_INVITES,
+        }
+
+        return self.respond('sentry/create-organization-member.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 9237495d49..f91e556712 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -41,6 +41,7 @@ from sentry.web.frontend.organization_settings import OrganizationSettingsView
 from sentry.web.frontend.organization_teams import OrganizationTeamsView
 from sentry.web.frontend.create_access_group import CreateAccessGroupView
 from sentry.web.frontend.create_organization import CreateOrganizationView
+from sentry.web.frontend.create_organization_member import CreateOrganizationMemberView
 from sentry.web.frontend.create_project import CreateProjectView
 from sentry.web.frontend.create_team import CreateTeamView
 from sentry.web.frontend.create_team_member import CreateTeamMemberView
@@ -125,6 +126,8 @@ urlpatterns += patterns('',
         name='sentry-organization-home'),
     url(r'^organizations/(?P<organization_id>\d+)/members/$', OrganizationMembersView.as_view(),
         name='sentry-organization-members'),
+    url(r'^organizations/(?P<organization_id>\d+)/members/new/$', CreateOrganizationMemberView.as_view(),
+        name='sentry-create-organization-member'),
     url(r'^organizations/(?P<organization_id>\d+)/members/(?P<member_id>\d+)/$', OrganizationMemberSettingsView.as_view(),
         name='sentry-organization-member-settings'),
     url(r'^organizations/(?P<organization_id>\d+)/settings/$', OrganizationSettingsView.as_view(),
