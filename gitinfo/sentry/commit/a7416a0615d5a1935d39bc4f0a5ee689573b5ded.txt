commit a7416a0615d5a1935d39bc4f0a5ee689573b5ded
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 24 10:04:58 2015 -0800

    Add provider view customization hook

diff --git a/src/sentry/auth/provider.py b/src/sentry/auth/provider.py
index ec58501476..942b5f5dbf 100644
--- a/src/sentry/auth/provider.py
+++ b/src/sentry/auth/provider.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import, print_function
 
 import logging
 
+from .view import ConfigureView
+
 
 class Provider(object):
     """
@@ -15,9 +17,8 @@ class Provider(object):
         self.config = config
         self.logger = logging.getLogger('sentry.auth.%s' % (key,))
 
-    def get_config_form(self, request):
-        # return FormClass(request.POST or None)
-        raise NotImplementedError
+    def get_configure_view(self):
+        return ConfigureView.as_view()
 
     def get_auth_pipeline(self):
         """
diff --git a/src/sentry/auth/providers/google_oauth2.py b/src/sentry/auth/providers/google_oauth2.py
index 975a12e9a7..24fc02eb61 100644
--- a/src/sentry/auth/providers/google_oauth2.py
+++ b/src/sentry/auth/providers/google_oauth2.py
@@ -25,6 +25,8 @@ USER_DETAILS_ENDPOINT = 'https://www.googleapis.com/plus/v1/people/me'
 
 ERR_INVALID_DOMAIN = 'The domain for your Google account is not allowed to authenticate with this provider.'
 
+ERR_NO_DOMAIN = 'You must authenticate via a Google Apps account.'
+
 
 class FetchUser(AuthView):
     def __init__(self, domain=None, *args, **kwargs):
@@ -43,7 +45,11 @@ class FetchUser(AuthView):
         body = safe_urlread(req)
         data = json.loads(body)
 
-        if self.domain and self.domain != data.get('domain'):
+        if not data.get('domain'):
+            return helper.error(ERR_NO_DOMAIN)
+
+        # a domain may not yet be configured as this could be the setup flow
+        if self.domain and self.domain != data['domain']:
             return helper.error(ERR_INVALID_DOMAIN)
 
         helper.bind_state('user', data)
diff --git a/src/sentry/auth/view.py b/src/sentry/auth/view.py
index 5ef3df6760..5c4360e3c0 100644
--- a/src/sentry/auth/view.py
+++ b/src/sentry/auth/view.py
@@ -1,7 +1,8 @@
 from __future__ import absolute_import, print_function
 
-__all__ = ('AuthView',)
+__all__ = ['AuthView', 'ConfigureView']
 
+from sentry.plugins.base.view import PluggableViewMixin
 from sentry.web.frontend.base import BaseView
 
 
@@ -24,3 +25,11 @@ class AuthView(BaseView):
             module=cls.__module__,
             name=cls.__name__,
         )
+
+
+class ConfigureView(BaseView, PluggableViewMixin):
+    """
+    """
+
+    def dispatch(self, request, organization, auth_provider):
+        return ''
diff --git a/src/sentry/templates/sentry/organization-auth-provider-settings.html b/src/sentry/templates/sentry/organization-auth-provider-settings.html
index e5f9ad0453..9e1c32368c 100644
--- a/src/sentry/templates/sentry/organization-auth-provider-settings.html
+++ b/src/sentry/templates/sentry/organization-auth-provider-settings.html
@@ -20,6 +20,12 @@
 
         <p class="clippy" data-text="{{ login_url }}"><a href="{{ login_url }}">{{ login_url }}</a></p>
 
+        {% if content %}
+          <hr>
+
+          {{ content }}
+        {% endif %}
+
         <hr>
 
         <h3>Disable {{ provider_name }} Authentication</h3>
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index 688de53123..4794558ca5 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
+from django.http import HttpResponse
 
 from sentry.auth import manager
 from sentry.auth.helper import AuthHelper
@@ -13,9 +14,8 @@ class OrganizationAuthSettingsView(OrganizationView):
     required_access = OrganizationMemberType.OWNER
 
     def handle_existing_provider(self, request, organization, auth_provider):
-        # TODO(dcramer): providers need to be able to extend this page. There
-        # should always be a disable + login info blurb but each provider may
-        # want to add additional behaviors
+        provider = auth_provider.get_provider()
+
         if request.method == 'POST':
             op = request.POST.get('op')
             if op == 'disable':
@@ -25,12 +25,16 @@ class OrganizationAuthSettingsView(OrganizationView):
                                    args=[organization.slug])
                 return self.redirect(next_uri)
 
-        provider = auth_provider.get_provider()
+        view = provider.get_configure_view()
+        response = view(request, organization, auth_provider)
+        if isinstance(response, HttpResponse):
+            return response
 
         context = {
             'login_url': absolute_uri(reverse('sentry-organization-home', args=[organization.slug])),
             'auth_provider': auth_provider,
             'provider_name': provider.name,
+            'content': response,
         }
 
         return self.respond('sentry/organization-auth-provider-settings.html', context)
