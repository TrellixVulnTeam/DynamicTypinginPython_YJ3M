commit 837f2143fd3898c9c869dd4e992056e71a1144e9
Author: Dan Fuller <dfuller@sentry.io>
Date:   Thu May 23 15:39:56 2019 -0700

    feat(api): Include related groups in `DetailedIncidentSerializer`
    
    We need these for FE to be able to make event search queries.

diff --git a/src/sentry/api/serializers/models/incident.py b/src/sentry/api/serializers/models/incident.py
index fb4137fb3a..35c46a1162 100644
--- a/src/sentry/api/serializers/models/incident.py
+++ b/src/sentry/api/serializers/models/incident.py
@@ -16,6 +16,7 @@ from sentry.incidents.logic import (
 )
 from sentry.incidents.models import (
     Incident,
+    IncidentGroup,
     IncidentProject,
     IncidentSeen,
     IncidentSubscription,
@@ -76,8 +77,15 @@ class DetailedIncidentSerializer(IncidentSerializer):
                 user=user,
             ).values_list('incident_id', flat=True))
 
+        incident_groups = defaultdict(list)
+        for incident_id, group_id in IncidentGroup.objects.filter(
+            incident__in=item_list,
+        ).values_list('incident_id', 'group_id'):
+            incident_groups[incident_id].append(group_id)
+
         for item in item_list:
             results[item]['is_subscribed'] = item.id in subscribed_incidents
+            results[item]['groups'] = incident_groups.get(item.id, [])
         return results
 
     def _get_incident_seen_list(self, incident, user):
@@ -105,5 +113,6 @@ class DetailedIncidentSerializer(IncidentSerializer):
         context['isSubscribed'] = attrs['is_subscribed']
         context['seenBy'] = seen_list['seen_by']
         context['hasSeen'] = seen_list['has_seen']
+        context['groups'] = attrs['groups']
 
         return context
diff --git a/tests/sentry/api/serializers/test_incident.py b/tests/sentry/api/serializers/test_incident.py
index a52eeeab3a..b81c0bf209 100644
--- a/tests/sentry/api/serializers/test_incident.py
+++ b/tests/sentry/api/serializers/test_incident.py
@@ -11,6 +11,7 @@ from freezegun import freeze_time
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.incident import DetailedIncidentSerializer
 from sentry.incidents.logic import subscribe_to_incident
+from sentry.incidents.models import IncidentGroup
 from sentry.testutils import TestCase
 
 
@@ -46,3 +47,12 @@ class DetailedIncidentSerializerTest(TestCase):
         subscribe_to_incident(incident, self.user)
         result = serialize(incident, serializer=serializer, user=self.user)
         assert result['isSubscribed']
+
+    def test_groups(self):
+        incident = self.create_incident()
+        serializer = DetailedIncidentSerializer()
+        result = serialize(incident, serializer=serializer)
+        assert result['groups'] == []
+        IncidentGroup.objects.create(incident=incident, group=self.group)
+        result = serialize(incident, serializer=serializer)
+        assert result['groups'] == [self.group.id]
