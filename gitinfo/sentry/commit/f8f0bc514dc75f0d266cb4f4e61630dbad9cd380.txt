commit f8f0bc514dc75f0d266cb4f4e61630dbad9cd380
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Oct 7 20:46:47 2015 +0200

    Ensure we end up on the register tab for /register/

diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index 07bf419a97..d939479b0b 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -56,6 +56,12 @@ class AuthLoginView(BaseView):
         can_register = features.has('auth:register') or request.session.get('can_register')
 
         op = request.POST.get('op')
+
+        # Detect that we are on the register page by url /register/ and
+        # then activate the register tab by default.
+        if not op and '/register' in request.path_info and can_register:
+            op = 'register'
+
         login_form = self.get_login_form(request)
         if can_register:
             register_form = self.get_register_form(request)
diff --git a/tests/sentry/web/frontend/test_auth_login.py b/tests/sentry/web/frontend/test_auth_login.py
index 1612c713f6..706f6a6791 100644
--- a/tests/sentry/web/frontend/test_auth_login.py
+++ b/tests/sentry/web/frontend/test_auth_login.py
@@ -60,3 +60,11 @@ class AuthLoginTest(TestCase):
         user = User.objects.get(username='test-a-really-long-email-address@example.com')
         assert user.email == 'test-a-really-long-email-address@example.com'
         assert user.check_password('foobar')
+
+    def test_register_renders_correct_template(self):
+        register_path = reverse('sentry-register')
+        resp = self.client.get(register_path)
+
+        assert resp.status_code == 200
+        assert resp.context['op'] == 'register'
+        self.assertTemplateUsed('sentry/login.html')
