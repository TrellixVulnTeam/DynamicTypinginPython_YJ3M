commit cba4cc80a85f301816005c3268106a0762823a2b
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Tue Jun 16 08:41:11 2020 -0700

    fix(slack): Skip over channels with missing channel_ids (#19383)

diff --git a/src/sentry/integrations/slack/integration.py b/src/sentry/integrations/slack/integration.py
index 81fe87f65e..9027a838b5 100644
--- a/src/sentry/integrations/slack/integration.py
+++ b/src/sentry/integrations/slack/integration.py
@@ -387,11 +387,11 @@ def _get_channels_from_rules(organization, integration):
             rule_integration_id = rule_action.get("workspace")
             if rule_integration_id and rule_integration_id == six.text_type(integration.id):
 
-                channel_id = rule_action["channel_id"]
+                channel_id = rule_action.get("channel_id")
                 channel_name = rule_action["channel"]
 
-                # don't care if its a user
-                if channel_name[0] == "@":
+                # skip if its a user or if somehow channel_id is missing
+                if channel_name[0] == "@" or not channel_id:
                     continue
 
                 channels.add(Channel(channel_name, channel_id))
diff --git a/tests/sentry/integrations/slack/test_migration_flow.py b/tests/sentry/integrations/slack/test_migration_flow.py
index 3f8450e89e..2a18c43029 100644
--- a/tests/sentry/integrations/slack/test_migration_flow.py
+++ b/tests/sentry/integrations/slack/test_migration_flow.py
@@ -6,6 +6,7 @@ import six
 from six.moves.urllib.parse import parse_qs, urlencode, urlparse
 
 from sentry.integrations.slack import SlackIntegrationProvider
+from sentry.integrations.slack.integration import _get_channels_from_rules
 from sentry.models import (
     AuditLogEntry,
     AuditLogEntryEvent,
@@ -211,3 +212,15 @@ class SlackMigrationTest(IntegrationTestCase):
         resp = self.client.get(u"{}?{}".format(self.init_path, urlencode({"integration_id": -1})))
         assert resp.status_code == 200
         self.assertContains(resp, "Setup Error")
+
+    def test_get_channels_from_rules(self):
+        new_rule = self.create_slack_project_rule(
+            project=self.project,
+            integration_id=six.text_type(self.integration.id),
+            channel_name="#something",
+        )
+        # test that we don't error out if channel_id isn't saved
+        del new_rule.data["actions"][0]["channel_id"]
+        new_rule.save()
+        channels = _get_channels_from_rules(self.organization, self.integration)
+        assert len(channels) == 1
