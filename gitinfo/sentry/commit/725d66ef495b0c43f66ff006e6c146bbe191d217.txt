commit 725d66ef495b0c43f66ff006e6c146bbe191d217
Author: josh <josh@jrl.ninja>
Date:   Wed Feb 26 20:55:39 2020 +0000

    test: rewrite snapshots without unicode prefixes (#17301)

diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/actix.pysnap
index e6faaf459e..18c767c1bb 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/actix.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/actix.pysnap
@@ -1,784 +1,784 @@
 ---
-created: '2019-09-26T13:46:35.595143Z'
+created: '2020-02-26T19:52:17.861074Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '703d3dd9cb763e3f5037f659d27da947'
+  hash: "703d3dd9cb763e3f5037f659d27da947"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function* (isolated function)
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function* (isolated function)
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function* (isolated function)
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function* (isolated function)
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function* (isolated function)
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function* (isolated function)
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function* (isolated function)
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function* (isolated function)
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function* (isolated function)
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             filename*
-              u'log.rs'
+              "log.rs"
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
 --------------------------------------------------------------------------
 system:
-  hash: '1df163ce3be65319df4fcc9cb34b60c1'
+  hash: "1df163ce3be65319df4fcc9cb34b60c1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame*
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame* (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function* (isolated function)
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function* (isolated function)
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function* (isolated function)
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function* (isolated function)
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function* (isolated function)
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function* (isolated function)
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function* (isolated function)
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function* (isolated function)
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function* (isolated function)
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             filename*
-              u'log.rs'
+              "log.rs"
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/aspnetcore.pysnap
index 9424048320..ae3bba417c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/aspnetcore.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/aspnetcore.pysnap
@@ -1,473 +1,473 @@
 ---
-created: '2019-09-03T07:26:05.646111Z'
+created: '2020-02-26T19:52:17.914317Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (less than 10% of frames are in-app)
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeAsync'
+              "InvokeAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             context-line (discarded because line too long)
             function*
-              u'Execute'
+              "Execute"
           frame (non app frame)
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             context-line*
-              u'System.Object Execute(System.Object, System.Object[])'
+              "System.Object Execute(System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             context-line*
-              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
+              "System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
+              "C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs"
             context-line*
-              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
+              "Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)"
             function (function name is not used if context-line is available)
-              u'Get'
+              "Get"
             lineno (line number is not used if context-line is available)
               27
         type*
-          u'System.Exception'
+          "System.Exception"
         value*
-          u'sync exception'
+          "sync exception"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
+        "An unhandled exception has occurred while executing the request."
 --------------------------------------------------------------------------
 system:
-  hash: '13dfa104801704079b63004347f8fae6'
+  hash: "13dfa104801704079b63004347f8fae6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeAsync'
+              "InvokeAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             context-line (discarded because line too long)
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             context-line*
-              u'System.Object Execute(System.Object, System.Object[])'
+              "System.Object Execute(System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             context-line*
-              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
+              "System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
+              "C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs"
             context-line*
-              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
+              "Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)"
             function (function name is not used if context-line is available)
-              u'Get'
+              "Get"
             lineno (line number is not used if context-line is available)
               27
         type*
-          u'System.Exception'
+          "System.Exception"
         value (stacktrace and type take precedence)
-          u'sync exception'
+          "sync exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/connection_error.pysnap
index e414911907..9f2dc77b55 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/connection_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/connection_error.pysnap
@@ -1,275 +1,275 @@
 ---
-created: '2019-09-03T07:26:05.662941Z'
+created: '2020-02-26T19:52:17.939418Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '8abb6be15864dac05d46e61bfe1dd6d3'
+  hash: "8abb6be15864dac05d46e61bfe1dd6d3"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'            result = func(*args, **kwargs)'
+              "            result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               31
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'sentry/utils/services.py'
+              "sentry/utils/services.py"
             context-line*
-              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
             function (function name is not used if context-line is available)
-              u'<lambda>'
+              "<lambda>"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'getsentry/quotas.py'
+              "getsentry/quotas.py"
             context-line*
-              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               136
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'sentry/quotas/redis.py'
+              "sentry/quotas/redis.py"
             context-line*
-              u'        rejections = is_rate_limited(client, keys, args)'
+              "        rejections = is_rate_limited(client, keys, args)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               189
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'sentry/utils/redis.py'
+              "sentry/utils/redis.py"
             context-line*
-              u'        return script(keys, args, client)'
+              "        return script(keys, args, client)"
             function (function name is not used if context-line is available)
-              u'call_script'
+              "call_script"
             lineno (line number is not used if context-line is available)
               239
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return client.evalsha(self.sha, len(keys), *args)'
+              "            return client.evalsha(self.sha, len(keys), *args)"
             function (function name is not used if context-line is available)
-              u'__call__'
+              "__call__"
             lineno (line number is not used if context-line is available)
               2694
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
             function (function name is not used if context-line is available)
-              u'evalsha'
+              "evalsha"
             lineno (line number is not used if context-line is available)
               1944
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return self.parse_response(connection, command_name, **options)'
+              "            return self.parse_response(connection, command_name, **options)"
             function (function name is not used if context-line is available)
-              u'execute_command'
+              "execute_command"
             lineno (line number is not used if context-line is available)
               579
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'        response = connection.read_response()'
+              "        response = connection.read_response()"
             function (function name is not used if context-line is available)
-              u'parse_response'
+              "parse_response"
             lineno (line number is not used if context-line is available)
               585
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'            response = self._parser.read_response()'
+              "            response = self._parser.read_response()"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               577
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'                                      (e.args,))'
+              "                                      (e.args,))"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               357
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (stacktrace and type take precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '6391c18be56c7e7c95e58be4b3eaf0bd'
+  hash: "6391c18be56c7e7c95e58be4b3eaf0bd"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'            result = func(*args, **kwargs)'
+              "            result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               31
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'sentry/utils/services.py'
+              "sentry/utils/services.py"
             context-line*
-              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
             function (function name is not used if context-line is available)
-              u'<lambda>'
+              "<lambda>"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'getsentry/quotas.py'
+              "getsentry/quotas.py"
             context-line*
-              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               136
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'sentry/quotas/redis.py'
+              "sentry/quotas/redis.py"
             context-line*
-              u'        rejections = is_rate_limited(client, keys, args)'
+              "        rejections = is_rate_limited(client, keys, args)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               189
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'sentry/utils/redis.py'
+              "sentry/utils/redis.py"
             context-line*
-              u'        return script(keys, args, client)'
+              "        return script(keys, args, client)"
             function (function name is not used if context-line is available)
-              u'call_script'
+              "call_script"
             lineno (line number is not used if context-line is available)
               239
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return client.evalsha(self.sha, len(keys), *args)'
+              "            return client.evalsha(self.sha, len(keys), *args)"
             function (function name is not used if context-line is available)
-              u'__call__'
+              "__call__"
             lineno (line number is not used if context-line is available)
               2694
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
             function (function name is not used if context-line is available)
-              u'evalsha'
+              "evalsha"
             lineno (line number is not used if context-line is available)
               1944
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return self.parse_response(connection, command_name, **options)'
+              "            return self.parse_response(connection, command_name, **options)"
             function (function name is not used if context-line is available)
-              u'execute_command'
+              "execute_command"
             lineno (line number is not used if context-line is available)
               579
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'        response = connection.read_response()'
+              "        response = connection.read_response()"
             function (function name is not used if context-line is available)
-              u'parse_response'
+              "parse_response"
             lineno (line number is not used if context-line is available)
               585
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'            response = self._parser.read_response()'
+              "            response = self._parser.read_response()"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               577
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'                                      (e.args,))'
+              "                                      (e.args,))"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               357
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (stacktrace and type take precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp.pysnap
index 2312c1abd2..777dc95156 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-04-07T10:03:30.971425Z'
+created: '2020-02-26T19:52:17.952692Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '666766514295bb52812324097cdaf53e'
+  hash: "666766514295bb52812324097cdaf53e"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'YYY'
+          "YYY"
       message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
+        "Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_img_src.pysnap
index 792bd5b7ec..be4978c496 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_img_src.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_img_src.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-07T10:03:30.979341Z'
+created: '2020-02-26T19:52:17.965049Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1742101e08eb1608f569751dfedd0062'
+  hash: "1742101e08eb1608f569751dfedd0062"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'ftp://example.com'
+          "ftp://example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_no_blocked_uri.pysnap
index 02e4636a7a..37886b5097 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_no_blocked_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_no_blocked_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-07T10:03:30.987667Z'
+created: '2020-02-26T19:52:17.976565Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
+  hash: "efddf1cde918097259aa7d4904fb1942"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
           "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_data_uri.pysnap
index 069e39f0cc..df4fcaaf68 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_data_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_data_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-07T10:03:30.996295Z'
+created: '2020-02-26T19:52:17.987870Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
+  hash: "4e6f2bce9d121aa89f4dc5e5da08afb5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'data:'
+          "data:"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_src_uri.pysnap
index c6eb02f70d..e0a45d1527 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_src_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_script_src_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-07T10:03:31.006212Z'
+created: '2020-02-26T19:52:17.997222Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
+  hash: "223cdacfe5b4b830dc700b5c18cc21b4"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_style_src_elem.pysnap
index 414c438019..30df9d84db 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_style_src_elem.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/csp_style_src_elem.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-04-07T10:03:31.015187Z'
+created: '2020-02-26T19:52:18.008691Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '537a973f594c364842893e9a72af62a5'
+  hash: "537a973f594c364842893e9a72af62a5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'style-src-elem'
+          "style-src-elem"
         violation (not a local script violation)
         uri*
-          u'use.fontawesome.com'
+          "use.fontawesome.com"
       message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
+        "Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/custom_fingerprint.pysnap
index c418ae27f1..0955bfaa43 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/custom_fingerprint.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/custom_fingerprint.pysnap
@@ -1,8 +1,8 @@
 ---
-created: '2019-04-07T10:03:31.025569Z'
+created: '2020-02-26T19:52:18.027754Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
+  hash: "f30afa00b85f5cac5ee0bce01b31f08d"
+  values: ["celery", "SoftTimeLimitExceeded", "sentry.tasks.store.process_event"]
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/empty.pysnap
index 43a994c849..c19747b35e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/empty.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/empty.pysnap
@@ -1,7 +1,7 @@
 ---
-created: '2019-04-07T10:03:31.034571Z'
+created: '2020-02-26T19:52:18.043479Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_comput_hashes.pysnap
index 07200bf3de..86c7b4527c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_comput_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_comput_hashes.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-04-07T10:03:31.043281Z'
+created: '2020-02-26T19:52:18.054750Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'b23ee1963904c2ca87b145febf94b66c'
+  hash: "b23ee1963904c2ca87b145febf94b66c"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes.pysnap
index cd6210ca39..9301c77158 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-04-07T10:03:31.052438Z'
+created: '2020-02-26T19:52:18.065907Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'baf0bfa8bb312627cd5ef4171aec9f4e'
+  hash: "baf0bfa8bb312627cd5ef4171aec9f4e"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_2.pysnap
index 08f9dc4bb0..55efe77686 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_2.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-04-07T10:03:31.061127Z'
+created: '2020-02-26T19:52:18.083193Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'baf0bfa8bb312627cd5ef4171aec9f4e'
+  hash: "baf0bfa8bb312627cd5ef4171aec9f4e"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_3.pysnap
index 2a0974af26..117e6e50ab 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_compute_hashes_3.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-07T10:03:31.070700Z'
+created: '2020-02-26T19:52:18.104871Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       chained-exception (ignored because hash matches system variant)
@@ -12,27 +12,27 @@ app:
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9aef9026a457d312531c07644b271314'
+  hash: "9aef9026a457d312531c07644b271314"
   component:
     system*
       chained-exception*
@@ -40,21 +40,21 @@ system:
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_javascript_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_javascript_no_in_app.pysnap
index d37d55bbc9..3bee40baba 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_javascript_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_javascript_no_in_app.pysnap
@@ -1,66 +1,66 @@
 ---
-created: '2019-09-03T07:26:05.772892Z'
+created: '2020-02-26T19:52:18.123111Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'./app/components/modals/createTeamModal.jsx'
+              "./app/components/modals/createTeamModal.jsx"
             context-line*
-              u'        onError(err);'
+              "        onError(err);"
             lineno (line number is not used if context-line is available)
               27
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'./app/views/settings/components/forms/form.jsx'
+              "./app/views/settings/components/forms/form.jsx"
             context-line*
-              u'    this.model.submitError(error);'
+              "    this.model.submitError(error);"
             function (function name is not used if context-line is available)
-              u'onError'
+              "onError"
             lineno (line number is not used if context-line is available)
               125
         type*
-          u'TypeError'
+          "TypeError"
         value (stacktrace and type take precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
 --------------------------------------------------------------------------
 system:
-  hash: 'd1f185038ed0941ba9e5d2bad519b773'
+  hash: "d1f185038ed0941ba9e5d2bad519b773"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'./app/components/modals/createTeamModal.jsx'
+              "./app/components/modals/createTeamModal.jsx"
             context-line*
-              u'        onError(err);'
+              "        onError(err);"
             lineno (line number is not used if context-line is available)
               27
           frame*
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'./app/views/settings/components/forms/form.jsx'
+              "./app/views/settings/components/forms/form.jsx"
             context-line*
-              u'    this.model.submitError(error);'
+              "    this.model.submitError(error);"
             function (function name is not used if context-line is available)
-              u'onError'
+              "onError"
             lineno (line number is not used if context-line is available)
               125
         type*
-          u'TypeError'
+          "TypeError"
         value (stacktrace and type take precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_type.pysnap
index 2577d9a844..8be6a54895 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_type.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_type.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-04-07T10:03:31.079216Z'
+created: '2020-02-26T19:52:18.139518Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       exception*
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_value.pysnap
index 6c26ec4e11..78947fe680 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_value.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/exception_without_value.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-04-07T10:03:31.087226Z'
+created: '2020-02-26T19:52:18.150799Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/expectct.pysnap
index 3b095cd835..f18eb273ac 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/expectct.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/expectct.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-04-07T10:03:31.101526Z'
+created: '2020-02-26T19:52:18.517764Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
+  hash: "3d2933f4b5ec459ec8d569a398fd328c"
   component:
     default*
       expect-ct*
         salt* (a static salt)
-          'expect-ct'
+          "expect-ct"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
index 650a05b135..922c57371a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.110186Z'
+created: '2020-02-26T19:52:18.531121Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '526b64456c48836a46ec1a89544fd412'
+  hash: "526b64456c48836a46ec1a89544fd412"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap
index ead71d4c1d..59711e640e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.119029Z'
+created: '2020-02-26T19:52:18.550385Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
+  hash: "45c0b0a8c777e7a7040d7c39233a08a5"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
index 93834e2fa2..39fd3009c0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.127614Z'
+created: '2020-02-26T19:52:18.569069Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
+  hash: "353e05904b48bd3ae4fa9623934a70d0"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap
index 7b1ae0719e..cc57d156a4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.136120Z'
+created: '2020-02-26T19:52:18.590574Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
+  hash: "be15ca3d511b96918e087c4f42503ca2"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_from_url_origin_corner_cases.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_from_url_origin_corner_cases.pysnap
index f518d6eb62..86c6567960 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_from_url_origin_corner_cases.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_from_url_origin_corner_cases.pysnap
@@ -1,52 +1,52 @@
 ---
-created: '2019-11-01T10:16:07.487579Z'
+created: '2020-02-26T19:52:18.609773Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line (discarded because from URL origin)
 --------------------------------------------------------------------------
 system:
-  hash: '98f84fd484f8c2273f28cc645935f650'
+  hash: "98f84fd484f8c2273f28cc645935f650"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line (discarded because from URL origin)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap
index 485721b762..697175d172 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:05.860539Z'
+created: '2020-02-26T19:52:18.622768Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_blob.pysnap
index d0a0bb4637..ee57723a0e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_blob.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_blob.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-04-07T10:03:31.152792Z'
+created: '2020-02-26T19:52:18.634801Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           filename (ignored because filename is a URL)
-            u'blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame
           filename (ignored because filename is a URL)
-            u'blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_http.pysnap
index 7631fcc60c..4651586a68 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_http.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:05.877040Z'
+created: '2020-02-26T19:52:18.651244Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_https.pysnap
index 8b9bb8b48d..242220491b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_https.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_filename_if_https.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:05.885617Z'
+created: '2020-02-26T19:52:18.674113Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_function.pysnap
index 2d17c2492e..eef5010aec 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_function.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-07T10:03:31.178431Z'
+created: '2020-02-26T19:52:18.691583Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function*
             salt* (normalized lambda function name)
-              '<function>'
+              "<function>"
 --------------------------------------------------------------------------
 system:
-  hash: 'aee9aaca552e7fd593d085ca5a2260cf'
+  hash: "aee9aaca552e7fd593d085ca5a2260cf"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function*
             salt* (normalized lambda function name)
-              '<function>'
+              "<function>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_module.pysnap
index 51c246b76e..20b7193581 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_module.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_java8_lambda_module.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-07T10:03:31.186754Z'
+created: '2020-02-26T19:52:18.709420Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           function*
-            u'call'
+            "call"
 --------------------------------------------------------------------------
 system:
-  hash: '5fd1358271b3a3dba3287e135029688d'
+  hash: "5fd1358271b3a3dba3287e135029688d"
   component:
     system*
       stacktrace*
         frame*
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           function*
-            u'call'
+            "call"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist.pysnap
index 67265d9a45..b53a2eb259 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.195053Z'
+created: '2020-02-26T19:52:18.726383Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_2.pysnap
index b29954c720..7bcca3dded 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.203697Z'
+created: '2020-02-26T19:52:18.740546Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_3.pysnap
index 74c6532bcb..8037c0b1a7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_javassist_3.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.212042Z'
+created: '2020-02-26T19:52:18.756756Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename* (removed javassist parts)
-            u'EntriesResource_$$_javassist<auto>.java'
+            "EntriesResource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '813856376ba744b15a01916ed2557344'
+  hash: "813856376ba744b15a01916ed2557344"
   component:
     system*
       stacktrace*
         frame*
           filename* (removed javassist parts)
-            u'EntriesResource_$$_javassist<auto>.java'
+            "EntriesResource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url.pysnap
index 85ea749a1c..548fb69bac 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url.pysnap
@@ -1,29 +1,29 @@
 ---
-created: '2019-04-07T10:03:31.220242Z'
+created: '2020-02-26T19:52:18.774353Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame*
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url_2.pysnap
index 480799c10a..033590f48a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_module_if_page_url_2.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-05-08T07:33:27.994271Z'
+created: '2020-02-26T19:52:18.794350Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
 --------------------------------------------------------------------------
 system:
-  hash: '37a2dbfebce02591474d46b7485e9923'
+  hash: "37a2dbfebce02591474d46b7485e9923"
   component:
     system*
       stacktrace*
         frame*
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_safari_native_code.pysnap
index ce20c88a12..3f0157e147 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_safari_native_code.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_safari_native_code.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-09-03T07:26:05.949013Z'
+created: '2020-02-26T19:52:18.810828Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (frame considered in-app because no frame is in-app)
           function (function name is not used if module or filename are available)
-            u'forEach'
+            "forEach"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame (native code indicated by filename)
           function (function name is not used if module or filename are available)
-            u'forEach'
+            "forEach"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap
index cd78697c20..fbf29e7520 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.245710Z'
+created: '2020-02-26T19:52:18.828558Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
+  hash: "07d1a8e5728b3c4c7aa8b8273fd0e753"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap
index 9b1ad89b0e..e0e2b82372 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.253982Z'
+created: '2020-02-26T19:52:18.844424Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '09e0efcab18f545166318118ed4e0292'
+  hash: "09e0efcab18f545166318118ed4e0292"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_methods.pysnap
index 84b1050cd2..0cc73c0b9d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_methods.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_ignores_sun_java_generated_methods.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-05-21T19:16:08.166809Z'
+created: '2020-02-26T19:52:18.862348Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame* (frame considered in-app because no frame is in-app)
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '9bc326575875422d0d4ced3c35d9f916'
+  hash: "9bc326575875422d0d4ced3c35d9f916"
   component:
     system*
       stacktrace*
         frame*
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame*
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_block_functions.pysnap
index 1ea224ce97..a2f26a9563 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_block_functions.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_block_functions.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.270589Z'
+created: '2020-02-26T19:52:18.880650Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
 --------------------------------------------------------------------------
 system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
+  hash: "27eed4125fc13d42163ddb0b8f357b48"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_erb_templates.pysnap
index 9291c57b0a..44b1c62dd1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_erb_templates.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.278758Z'
+created: '2020-02-26T19:52:18.899211Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (trimmed integer suffix)
-            u'_foo_html_erb__<anon>_<anon>'
+            "_foo_html_erb__<anon>_<anon>"
 --------------------------------------------------------------------------
 system:
-  hash: '140d61119ffa316766cf0f710bf1e7f1'
+  hash: "140d61119ffa316766cf0f710bf1e7f1"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (trimmed integer suffix)
-            u'_foo_html_erb__<anon>_<anon>'
+            "_foo_html_erb__<anon>_<anon>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames.pysnap
index ff237c74cb..5fa7bb49bc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.287291Z'
+created: '2020-02-26T19:52:18.917825Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename* (removed version)
-            u'/data/foo/releases/<version>/app/views/foo.html.erb'
+            "/data/foo/releases/<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
 --------------------------------------------------------------------------
 system:
-  hash: '00ffe2f3150414a00633fb5671a918f8'
+  hash: "00ffe2f3150414a00633fb5671a918f8"
   component:
     system*
       stacktrace*
         frame*
           filename* (removed version)
-            u'/data/foo/releases/<version>/app/views/foo.html.erb'
+            "/data/foo/releases/<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap
index a5220a6dfa..3ba9ab5203 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.295860Z'
+created: '2020-02-26T19:52:18.935256Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename* (removed version)
-            u'<version>/app/views/foo.html.erb'
+            "<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
 --------------------------------------------------------------------------
 system:
-  hash: 'babff59ccf75f6cade7c5805f6d9aa59'
+  hash: "babff59ccf75f6cade7c5805f6d9aa59"
   component:
     system*
       stacktrace*
         frame*
           filename* (removed version)
-            u'<version>/app/views/foo.html.erb'
+            "<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_skips_symbol_if_unknown.pysnap
index adf2d85171..2035ab9547 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_skips_symbol_if_unknown.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_skips_symbol_if_unknown.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.304601Z'
+created: '2020-02-26T19:52:18.954687Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
 --------------------------------------------------------------------------
 system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
+  hash: "a972f399399f5566f39b14a7afdd24ff"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_context_line_over_function.pysnap
index 440a913e2b..bd09415c3f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_context_line_over_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_context_line_over_function.pysnap
@@ -1,34 +1,34 @@
 ---
-created: '2019-09-03T07:26:06.021857Z'
+created: '2020-02-26T19:52:18.977727Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'foo bar'
+            "foo bar"
           function (function name is not used if context-line is available)
-            u'bar'
+            "bar"
           lineno (line number is not used if context-line is available)
             1
 --------------------------------------------------------------------------
 system:
-  hash: '60e0a667027bef0d0b7c4882891df7e8'
+  hash: "60e0a667027bef0d0b7c4882891df7e8"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'foo bar'
+            "foo bar"
           function (function name is not used if context-line is available)
-            u'bar'
+            "bar"
           lineno (line number is not used if context-line is available)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_function_over_lineno.pysnap
index c0274b4bfb..6f38c317e7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_function_over_lineno.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_function_over_lineno.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-04-07T10:03:31.321509Z'
+created: '2020-02-26T19:52:18.998400Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
           lineno (function takes precedence)
             1
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
           lineno (function takes precedence)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_module_over_filename.pysnap
index c7542f233b..04223d43a5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_module_over_filename.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_module_over_filename.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-04-07T10:03:31.329732Z'
+created: '2020-02-26T19:52:19.023306Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '299a0be4a5a79e6a59fdd251b19d78bb'
+  hash: "299a0be4a5a79e6a59fdd251b19d78bb"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_symbol_instead_of_function.pysnap
index 58d6b824a9..e94e3ba622 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_symbol_instead_of_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_uses_symbol_instead_of_function.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-04-07T10:03:31.338045Z'
+created: '2020-02-26T19:54:24.415986Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'libfoo'
+            "libfoo"
           symbol*
-            u'_main'
+            "_main"
           function (symbol takes precedence)
-            u'int main()'
+            "int main()"
 --------------------------------------------------------------------------
 system:
-  hash: '01143b49f8875c22617bac5bb1aaf638'
+  hash: "01143b49f8875c22617bac5bb1aaf638"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           symbol*
-            u'_main'
+            "_main"
           function (symbol takes precedence)
-            u'int main()'
+            "int main()"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_with_only_required_vars.pysnap
index 6972ef9b5d..91c173d7a9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_with_only_required_vars.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/frame_with_only_required_vars.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-07T10:03:31.346300Z'
+created: '2020-02-26T19:54:24.431371Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '19fcc04a0c59eaf564ee1a00c58574cc'
+  hash: "19fcc04a0c59eaf564ee1a00c58574cc"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/hpkp.pysnap
index b16f40cba5..38b1060a40 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/hpkp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/hpkp.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-04-07T10:03:31.354920Z'
+created: '2020-02-26T19:54:24.446538Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
+  hash: "1e37a374cb33572622d02ff7a6237c44"
   component:
     default*
       hpkp*
         salt* (a static salt)
-          'hpkp'
+          "hpkp"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_chained.pysnap
index 26ac21e527..0bb85371d8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_chained.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_chained.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-07T10:03:31.387173Z'
+created: '2020-02-26T19:54:24.513814Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'ca1e356d85bc74d82d4ae8f3f8bfbbf7'
+  hash: "ca1e356d85bc74d82d4ae8f3f8bfbbf7"
   component:
     app*
       chained-exception*
@@ -12,496 +12,496 @@ app:
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 993
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'AbstractProtocol.java'
+                "AbstractProtocol.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 573
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'AbstractEndpoint.java'
+                "AbstractEndpoint.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 980
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'NioEndpoint.java'
+                "NioEndpoint.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 210
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'ServerSocketAdaptor.java'
+                "ServerSocketAdaptor.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 74
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'ServerSocketChannelImpl.java'
+                "ServerSocketChannelImpl.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 223
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 425
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 433
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (stacktrace and type take precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 1000
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (stacktrace and type take precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception (exception has no stacktrace)
           stacktrace (less than 10% of frames are in-app)
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 167
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value*
-            u'Failed to start component [Connector[HTTP/1.1-8080]]'
+            "Failed to start component [Connector[HTTP/1.1-8080]]"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/1.1-8080]]'
+        "Failed to start connector [Connector[HTTP/1.1-8080]]"
 --------------------------------------------------------------------------
 system:
-  hash: '8924849495809d42431719c2b9ab65c8'
+  hash: "8924849495809d42431719c2b9ab65c8"
   component:
     system*
       chained-exception*
@@ -509,483 +509,483 @@ system:
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 993
             frame*
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'AbstractProtocol.java'
+                "AbstractProtocol.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 573
             frame*
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'AbstractEndpoint.java'
+                "AbstractEndpoint.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 980
             frame*
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'NioEndpoint.java'
+                "NioEndpoint.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 210
             frame*
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'ServerSocketAdaptor.java'
+                "ServerSocketAdaptor.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 74
             frame*
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'ServerSocketChannelImpl.java'
+                "ServerSocketChannelImpl.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 223
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 425
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 433
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (stacktrace and type take precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 1000
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (stacktrace and type take precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 167
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (stacktrace and type take precedence)
-            u'Failed to start component [Connector[HTTP/1.1-8080]]'
+            "Failed to start component [Connector[HTTP/1.1-8080]]"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_minimal.pysnap
index 31d75ee020..073c44d591 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_minimal.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/java_minimal.pysnap
@@ -1,1019 +1,1019 @@
 ---
-created: '2019-04-07T10:03:31.415919Z'
+created: '2020-02-26T19:54:24.567267Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'Thread.java'
+              "Thread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               844
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'TaskThread.java'
+              "TaskThread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               61
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               641
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
             lineno (function takes precedence)
               1167
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'SocketProcessorBase.java'
+              "SocketProcessorBase.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'NioEndpoint.java'
+              "NioEndpoint.java"
             function*
-              u'doRun'
+              "doRun"
             lineno (function takes precedence)
               1434
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'AbstractProtocol.java'
+              "AbstractProtocol.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               798
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'AbstractProcessorLight.java'
+              "AbstractProcessorLight.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               66
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'Http11Processor.java'
+              "Http11Processor.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               783
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'CoyoteAdapter.java'
+              "CoyoteAdapter.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               349
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'StandardEngineValve.java'
+              "StandardEngineValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               87
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'ErrorReportValve.java'
+              "ErrorReportValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               79
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'StandardHostValve.java'
+              "StandardHostValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               140
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'AuthenticatorBase.java'
+              "AuthenticatorBase.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               474
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'StandardContextValve.java'
+              "StandardContextValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               96
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'StandardWrapperValve.java'
+              "StandardWrapperValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               198
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'CharacterEncodingFilter.java'
+              "CharacterEncodingFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               197
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'HiddenHttpMethodFilter.java'
+              "HiddenHttpMethodFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               81
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'HttpPutFormContentFilter.java'
+              "HttpPutFormContentFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               105
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'RequestContextFilter.java'
+              "RequestContextFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               99
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'WsFilter.java'
+              "WsFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               52
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               230
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               729
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               846
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               622
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'doGet'
+              "doGet"
             lineno (function takes precedence)
               861
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'processRequest'
+              "processRequest"
             lineno (function takes precedence)
               970
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doService'
+              "doService"
             lineno (function takes precedence)
               897
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
             lineno (function takes precedence)
               963
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'AbstractHandlerMethodAdapter.java'
+              "AbstractHandlerMethodAdapter.java"
             function*
-              u'handle'
+              "handle"
             lineno (function takes precedence)
               85
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
             lineno (function takes precedence)
               738
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
             lineno (function takes precedence)
               827
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'ServletInvocableHandlerMethod.java'
+              "ServletInvocableHandlerMethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
             lineno (function takes precedence)
               116
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
             lineno (function takes precedence)
               133
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
             lineno (function takes precedence)
               205
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'Method.java'
+              "Method.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               564
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'DelegatingMethodAccessorImpl.java'
+              "DelegatingMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               62
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'Application.java'
+              "Application.java"
             function*
-              u'home'
+              "home"
             lineno (function takes precedence)
               30
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (stacktrace and type take precedence)
-          u'/ by zero'
+          "/ by zero"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+        "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
 --------------------------------------------------------------------------
 system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  hash: "ec87dd10e4f7512ecccb4a068c5774ae"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'Thread.java'
+              "Thread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               844
           frame*
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'TaskThread.java'
+              "TaskThread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               61
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               641
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
             lineno (function takes precedence)
               1167
           frame*
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'SocketProcessorBase.java'
+              "SocketProcessorBase.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               49
           frame*
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'NioEndpoint.java'
+              "NioEndpoint.java"
             function*
-              u'doRun'
+              "doRun"
             lineno (function takes precedence)
               1434
           frame*
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'AbstractProtocol.java'
+              "AbstractProtocol.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               798
           frame*
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'AbstractProcessorLight.java'
+              "AbstractProcessorLight.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               66
           frame*
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'Http11Processor.java'
+              "Http11Processor.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               783
           frame*
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'CoyoteAdapter.java'
+              "CoyoteAdapter.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               349
           frame*
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'StandardEngineValve.java'
+              "StandardEngineValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               87
           frame*
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'ErrorReportValve.java'
+              "ErrorReportValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               79
           frame*
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'StandardHostValve.java'
+              "StandardHostValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               140
           frame*
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'AuthenticatorBase.java'
+              "AuthenticatorBase.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               474
           frame*
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'StandardContextValve.java'
+              "StandardContextValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               96
           frame*
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'StandardWrapperValve.java'
+              "StandardWrapperValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               198
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'CharacterEncodingFilter.java'
+              "CharacterEncodingFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               197
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'HiddenHttpMethodFilter.java'
+              "HiddenHttpMethodFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               81
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'HttpPutFormContentFilter.java'
+              "HttpPutFormContentFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               105
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'RequestContextFilter.java'
+              "RequestContextFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               99
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'WsFilter.java'
+              "WsFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               52
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               230
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               729
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               846
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               622
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'doGet'
+              "doGet"
             lineno (function takes precedence)
               861
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'processRequest'
+              "processRequest"
             lineno (function takes precedence)
               970
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doService'
+              "doService"
             lineno (function takes precedence)
               897
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
             lineno (function takes precedence)
               963
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'AbstractHandlerMethodAdapter.java'
+              "AbstractHandlerMethodAdapter.java"
             function*
-              u'handle'
+              "handle"
             lineno (function takes precedence)
               85
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
             lineno (function takes precedence)
               738
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
             lineno (function takes precedence)
               827
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'ServletInvocableHandlerMethod.java'
+              "ServletInvocableHandlerMethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
             lineno (function takes precedence)
               116
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
             lineno (function takes precedence)
               133
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
             lineno (function takes precedence)
               205
           frame*
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'Method.java'
+              "Method.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               564
           frame*
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'DelegatingMethodAccessorImpl.java'
+              "DelegatingMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               62
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame*
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'Application.java'
+              "Application.java"
             function*
-              u'home'
+              "home"
             lineno (function takes precedence)
               30
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (stacktrace and type take precedence)
-          u'/ by zero'
+          "/ by zero"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message.pysnap
index 7f6d39a728..4e94bc7a3d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-04-17T20:21:33.425865Z'
+created: '2020-02-26T19:54:24.580588Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value*
-          u'Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)'
+          "Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)"
 --------------------------------------------------------------------------
 system:
-  hash: 'ad1efff799d4f9435077701aee66dde0'
+  hash: "ad1efff799d4f9435077701aee66dde0"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value*
-          u'Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)'
+          "Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message_whistles.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message_whistles.pysnap
index e13a5708a0..43583b3328 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message_whistles.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_fallback_to_message_whistles.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-09-16T13:19:05.835883Z'
+created: '2020-02-26T19:54:24.593893Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value*
-          u'Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef'
+          "Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef"
 --------------------------------------------------------------------------
 system:
-  hash: '6de7447e45ffb49fd4fa5728aebdd488'
+  hash: "6de7447e45ffb49fd4fa5728aebdd488"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value*
-          u'Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef'
+          "Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_no_in_app.pysnap
index 45185924a9..ebcc22d7e1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_exception_no_in_app.pysnap
@@ -1,194 +1,194 @@
 ---
-created: '2019-04-07T10:03:31.428375Z'
+created: '2020-02-26T19:54:24.618377Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
             lineno (function takes precedence)
               4913
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
             lineno (function takes precedence)
               2208
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
             lineno (function takes precedence)
               17557
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
             lineno (function takes precedence)
               17266
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
             lineno (function takes precedence)
               17294
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
             lineno (function takes precedence)
               17386
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
             lineno (function takes precedence)
               16547
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
             lineno (function takes precedence)
               15744
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
             lineno (function takes precedence)
               248
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
             lineno (function takes precedence)
               195
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
+              "webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
             lineno (function takes precedence)
               3197
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
             lineno (function takes precedence)
               145
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (stacktrace and type take precedence)
-          u'varant is not defined'
+          "varant is not defined"
 --------------------------------------------------------------------------
 system:
-  hash: '60443ca22b22a43806f4358109278791'
+  hash: "60443ca22b22a43806f4358109278791"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
             lineno (function takes precedence)
               4913
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
             lineno (function takes precedence)
               2208
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
             lineno (function takes precedence)
               17557
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
             lineno (function takes precedence)
               17266
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
             lineno (function takes precedence)
               17294
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
             lineno (function takes precedence)
               17386
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
             lineno (function takes precedence)
               16547
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
             lineno (function takes precedence)
               15744
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
             lineno (function takes precedence)
               248
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
             lineno (function takes precedence)
               195
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
+              "webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
             lineno (function takes precedence)
               3197
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
             lineno (function takes precedence)
               145
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (stacktrace and type take precedence)
-          u'varant is not defined'
+          "varant is not defined"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_message.pysnap
index 8c9971bc6e..537d0be51a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-07T10:03:31.435518Z'
+created: '2020-02-26T19:54:24.630341Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
+  hash: "4119639092e62c55ea8be348e4d9260d"
   component:
     default*
       message*
-        u'event'
+        "event"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_chrome.pysnap
index 28007f6e54..a90b4e815c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_chrome.pysnap
@@ -1,154 +1,154 @@
 ---
-created: '2019-09-03T07:26:06.199243Z'
+created: '2020-02-26T19:54:24.649681Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (frame considered in-app because no frame is in-app)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.callback'
+              "Object.callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.aha'
+              "Object.aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'be36642f41f047346396f018f62375d3'
+  hash: "be36642f41f047346396f018f62375d3"
   component:
     system*
       exception*
         stacktrace
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.callback'
+              "Object.callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.aha'
+              "Object.aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_edge.pysnap
index 4e6da07bbc..bda577b1c3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_edge.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-09-03T07:26:06.212964Z'
+created: '2020-02-26T19:54:24.669929Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               17
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '7abcb72eb9800b9f38b37f448697a673'
+  hash: "7abcb72eb9800b9f38b37f448697a673"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame*
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               17
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_firefox.pysnap
index 8e35ed9053..4ca54626d0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_firefox.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-09-03T07:26:06.226196Z'
+created: '2020-02-26T19:54:24.690252Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test/<'
+              "test/<"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'be36642f41f047346396f018f62375d3'
+  hash: "be36642f41f047346396f018f62375d3"
   component:
     system*
       exception*
         stacktrace
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test/<'
+              "test/<"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_chrome.pysnap
index ac5158a568..b199be46c2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_chrome.pysnap
@@ -1,190 +1,190 @@
 ---
-created: '2019-09-03T07:26:06.239864Z'
+created: '2020-02-26T19:54:24.714803Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame (frame considered in-app because no frame is in-app)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'a06d7f718dc06157e7b8391cc5e56f10'
+  hash: "a06d7f718dc06157e7b8391cc5e56f10"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_edge.pysnap
index 5015896e07..d8e310a876 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_edge.pysnap
@@ -1,198 +1,198 @@
 ---
-created: '2019-05-08T19:44:33.395858Z'
+created: '2020-02-26T19:54:24.735969Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               17
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'e834aba6bf7b758128da092a68a18e9a'
+  hash: "e834aba6bf7b758128da092a68a18e9a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               17
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_firefox.pysnap
index d8b45120dc..8f10f92233 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_firefox.pysnap
@@ -1,184 +1,184 @@
 ---
-created: '2019-05-10T13:21:29.479938Z'
+created: '2020-02-26T19:54:24.756230Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test/<'
+              "test/<"
             lineno (function takes precedence)
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '71036056ea01a28f0931ab8e951206e2'
+  hash: "71036056ea01a28f0931ab8e951206e2"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test/<'
+              "test/<"
             lineno (function takes precedence)
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_safari.pysnap
index 034fc3b61c..80dfdc15ce 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_http_safari.pysnap
@@ -1,180 +1,180 @@
 ---
-created: '2019-09-03T07:26:06.280118Z'
+created: '2020-02-26T19:54:24.777346Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '1ff8b3514536db084acc996865d7efd6'
+  hash: "1ff8b3514536db084acc996865d7efd6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_safari.pysnap
index 8a46bbecd5..26d713f345 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_safari.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-09-03T07:26:06.293821Z'
+created: '2020-02-26T19:54:24.798650Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'be36642f41f047346396f018f62375d3'
+  hash: "be36642f41f047346396f018f62375d3"
   component:
     system*
       exception*
         stacktrace
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_firefox.pysnap
index 2e1039bec9..4005642f39 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_firefox.pysnap
@@ -1,410 +1,410 @@
 ---
-created: '2019-09-03T07:26:06.319660Z'
+created: '2020-02-26T19:54:24.834042Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '7e5b9ebe8c869ab99af044367bf7d347'
+  hash: "7e5b9ebe8c869ab99af044367bf7d347"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js"
             context-line*
-              u'        fn();'
+              "        fn();"
             function (function name is not used if context-line is available)
-              u'M'
+              "M"
             lineno (line number is not used if context-line is available)
               18
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u"    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               92
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u'            result = handler(value); // may throw'
+              "            result = handler(value); // may throw"
             function (function name is not used if context-line is available)
-              u'run'
+              "run"
             lineno (line number is not used if context-line is available)
               75
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        return this._invoke(method, arg);'
+              "        return this._invoke(method, arg);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               114
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               288
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               100
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               13
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               130
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'If'
+              "If"
             lineno (function takes precedence)
               200
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               204
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               205
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'rh'
+              "rh"
             lineno (function takes precedence)
               213
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'X'
+              "X"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1017871644/events/latest/ 404'
+          "GET /issues/1017871644/events/latest/ 404"
 --------------------------------------------------------------------------
 system:
-  hash: 'e8f6c1a30ea99526223c0bba1bcd8c13'
+  hash: "e8f6c1a30ea99526223c0bba1bcd8c13"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js"
             context-line*
-              u'        fn();'
+              "        fn();"
             function (function name is not used if context-line is available)
-              u'M'
+              "M"
             lineno (line number is not used if context-line is available)
               18
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u"    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               92
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u'            result = handler(value); // may throw'
+              "            result = handler(value); // may throw"
             function (function name is not used if context-line is available)
-              u'run'
+              "run"
             lineno (line number is not used if context-line is available)
               75
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        return this._invoke(method, arg);'
+              "        return this._invoke(method, arg);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               114
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               288
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               100
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               13
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               130
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'If'
+              "If"
             lineno (function takes precedence)
               200
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               204
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               205
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'rh'
+              "rh"
             lineno (function takes precedence)
               213
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'X'
+              "X"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1017871644/events/latest/ 404'
+          "GET /issues/1017871644/events/latest/ 404"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_safari.pysnap
index 7424535224..d48f37ef94 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/javascript_xbrowser_sentryui_safari.pysnap
@@ -1,328 +1,328 @@
 ---
-created: '2019-09-03T07:26:06.363401Z'
+created: '2020-02-26T19:54:24.869442Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '7e5b9ebe8c869ab99af044367bf7d347'
+  hash: "7e5b9ebe8c869ab99af044367bf7d347"
   component:
     app*
       exception*
         stacktrace*
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               288
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'call'
+              "call"
             lineno (line number is not used if context-line is available)
               100
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'setState'
+              "setState"
             lineno (function takes precedence)
               14
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             lineno (function takes precedence)
               130
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'tag'
+              "tag"
             lineno (function takes precedence)
               201
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               205
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               206
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'ih'
+              "ih"
             lineno (function takes precedence)
               214
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'q'
+              "q"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'fetchData'
+              "fetchData"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1018239786/events/latest/ 404'
+          "GET /issues/1018239786/events/latest/ 404"
 --------------------------------------------------------------------------
 system:
-  hash: '6e03a501145e36faab4fa152bb3b6a62'
+  hash: "6e03a501145e36faab4fa152bb3b6a62"
   component:
     system*
       exception*
         stacktrace*
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               288
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'call'
+              "call"
             lineno (line number is not used if context-line is available)
               100
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'setState'
+              "setState"
             lineno (function takes precedence)
               14
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             lineno (function takes precedence)
               130
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'tag'
+              "tag"
             lineno (function takes precedence)
               201
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               205
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               206
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'ih'
+              "ih"
             lineno (function takes precedence)
               214
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'q'
+              "q"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'fetchData'
+              "fetchData"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1018239786/events/latest/ 404'
+          "GET /issues/1018239786/events/latest/ 404"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel.pysnap
index 029d69760a..4450e53802 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel.pysnap
@@ -1,922 +1,922 @@
 ---
-created: '2019-09-03T07:26:06.405461Z'
+created: '2020-02-26T19:54:24.924455Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (less than 10% of frames are in-app)
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/public/index.php'
+              "/public/index.php"
             context-line*
-              u'    $request = Illuminate\\Http\\Request::capture()'
+              "    $request = Illuminate\\Http\\Request::capture()"
             function (function name is not used if context-line is available)
-              u'require_once'
+              "require_once"
             lineno (line number is not used if context-line is available)
               55
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            $response = $this->sendRequestThroughRouter($request);'
+              "            $response = $this->sendRequestThroughRouter($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             lineno (line number is not used if context-line is available)
               116
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'                    ->then($this->dispatchToRouter());'
+              "                    ->then($this->dispatchToRouter());"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             lineno (line number is not used if context-line is available)
               151
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             lineno (line number is not used if context-line is available)
               62
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             lineno (line number is not used if context-line is available)
               27
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/fideloper/proxy/src/TrustProxies.php'
+              "/vendor/fideloper/proxy/src/TrustProxies.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             lineno (line number is not used if context-line is available)
               57
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            return $this->router->dispatch($request);'
+              "            return $this->router->dispatch($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             lineno (line number is not used if context-line is available)
               176
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->dispatchToRoute($request);'
+              "        return $this->dispatchToRoute($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             lineno (line number is not used if context-line is available)
               612
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->runRoute($request, $this->findRoute($request));'
+              "        return $this->runRoute($request, $this->findRoute($request));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             lineno (line number is not used if context-line is available)
               623
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'            $this->runRouteWithinStack($route, $request)'
+              "            $this->runRouteWithinStack($route, $request)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             lineno (line number is not used if context-line is available)
               657
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                        });'
+              "                        });"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             lineno (line number is not used if context-line is available)
               682
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php"
             context-line*
-              u'        return $this->encrypt($next($this->decrypt($request)));'
+              "        return $this->encrypt($next($this->decrypt($request)));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             lineno (line number is not used if context-line is available)
               66
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php"
             context-line*
-              u'        $response = $next($request);'
+              "        $response = $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             lineno (line number is not used if context-line is available)
               37
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
+              "/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php"
             context-line*
-              u'            $response = $next($request), $session'
+              "            $response = $next($request), $session"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             lineno (line number is not used if context-line is available)
               59
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
+              "/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             lineno (line number is not used if context-line is available)
               49
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php"
             context-line*
-              u'            return tap($next($request), function ($response) use ($request) {'
+              "            return tap($next($request), function ($response) use ($request) {"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             lineno (line number is not used if context-line is available)
               75
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             lineno (line number is not used if context-line is available)
               41
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                                $request, $route->run()'
+              "                                $request, $route->run()"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               680
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u'            return $this->runCallable();'
+              "            return $this->runCallable();"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             lineno (line number is not used if context-line is available)
               179
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             lineno (line number is not used if context-line is available)
               205
           frame*
             filename*
-              u'/routes/web.php'
+              "/routes/web.php"
             context-line*
-              u"    throw new Exception('LARAVEL TEST');"
+              "    throw new Exception('LARAVEL TEST');"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             lineno (line number is not used if context-line is available)
               22
         type*
-          u'Exception'
+          "Exception"
         value*
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '89037a724fe48e9f6144c3a14e182b9c'
+  hash: "89037a724fe48e9f6144c3a14e182b9c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/public/index.php'
+              "/public/index.php"
             context-line*
-              u'    $request = Illuminate\\Http\\Request::capture()'
+              "    $request = Illuminate\\Http\\Request::capture()"
             function (function name is not used if context-line is available)
-              u'require_once'
+              "require_once"
             lineno (line number is not used if context-line is available)
               55
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            $response = $this->sendRequestThroughRouter($request);'
+              "            $response = $this->sendRequestThroughRouter($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             lineno (line number is not used if context-line is available)
               116
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'                    ->then($this->dispatchToRouter());'
+              "                    ->then($this->dispatchToRouter());"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             lineno (line number is not used if context-line is available)
               151
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             lineno (line number is not used if context-line is available)
               62
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             lineno (line number is not used if context-line is available)
               27
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/fideloper/proxy/src/TrustProxies.php'
+              "/vendor/fideloper/proxy/src/TrustProxies.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             lineno (line number is not used if context-line is available)
               57
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            return $this->router->dispatch($request);'
+              "            return $this->router->dispatch($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             lineno (line number is not used if context-line is available)
               176
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->dispatchToRoute($request);'
+              "        return $this->dispatchToRoute($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             lineno (line number is not used if context-line is available)
               612
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->runRoute($request, $this->findRoute($request));'
+              "        return $this->runRoute($request, $this->findRoute($request));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             lineno (line number is not used if context-line is available)
               623
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'            $this->runRouteWithinStack($route, $request)'
+              "            $this->runRouteWithinStack($route, $request)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             lineno (line number is not used if context-line is available)
               657
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                        });'
+              "                        });"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             lineno (line number is not used if context-line is available)
               682
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php"
             context-line*
-              u'        return $this->encrypt($next($this->decrypt($request)));'
+              "        return $this->encrypt($next($this->decrypt($request)));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             lineno (line number is not used if context-line is available)
               66
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php"
             context-line*
-              u'        $response = $next($request);'
+              "        $response = $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             lineno (line number is not used if context-line is available)
               37
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
+              "/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php"
             context-line*
-              u'            $response = $next($request), $session'
+              "            $response = $next($request), $session"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             lineno (line number is not used if context-line is available)
               59
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
+              "/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             lineno (line number is not used if context-line is available)
               49
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php"
             context-line*
-              u'            return tap($next($request), function ($response) use ($request) {'
+              "            return tap($next($request), function ($response) use ($request) {"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             lineno (line number is not used if context-line is available)
               75
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             lineno (line number is not used if context-line is available)
               41
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                                $request, $route->run()'
+              "                                $request, $route->run()"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               680
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u'            return $this->runCallable();'
+              "            return $this->runCallable();"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             lineno (line number is not used if context-line is available)
               179
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             lineno (line number is not used if context-line is available)
               205
           frame*
             filename*
-              u'/routes/web.php'
+              "/routes/web.php"
             context-line*
-              u"    throw new Exception('LARAVEL TEST');"
+              "    throw new Exception('LARAVEL TEST');"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             lineno (line number is not used if context-line is available)
               22
         type*
-          u'Exception'
+          "Exception"
         value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap
index 722e7ef0eb..40b1832e4a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap
@@ -1,76 +1,76 @@
 ---
-created: '2020-01-15T14:24:37.613020Z'
+created: '2020-02-26T19:54:24.941635Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '260f8f0a5856cd6db03c549b83080d5d'
+  hash: "260f8f0a5856cd6db03c549b83080d5d"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
         type*
-          u'Exception'
+          "Exception"
         value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: 'babe97015e0a63eaaab253c266bae20d'
+  hash: "babe97015e0a63eaaab253c266bae20d"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
         type*
-          u'Exception'
+          "Exception"
         value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_prefers_message.pysnap
index 20c3e8b47b..e1130522aa 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-07T10:03:31.473459Z'
+created: '2020-02-26T19:54:24.958389Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_uses_formatted.pysnap
index 1c29c1cff1..24d2b46148 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/logentry_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-07T10:03:31.480871Z'
+created: '2020-02-26T19:54:24.974955Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
+  hash: "329b29efcf1f77067a063e34f56e7791"
   component:
     default*
       message*
-        u'Hello there world!'
+        "Hello there world!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_prefers_message.pysnap
index a3eb64af9d..2e3e43a83b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-07T10:03:31.488522Z'
+created: '2020-02-26T19:54:24.990951Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_uses_formatted.pysnap
index b60a0d1bab..847f751ac2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/message_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-07T10:03:31.495958Z'
+created: '2020-02-26T19:54:25.011575Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
+  hash: "d3f5e52d24e9c1eae5abe6c866cced63"
   component:
     default*
       message*
-        u'Hello there Peter!'
+        "Hello there Peter!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/minified_javascript.pysnap
index 3f81d2607c..16337ec126 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/minified_javascript.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/minified_javascript.pysnap
@@ -1,462 +1,462 @@
 ---
-created: '2019-04-07T10:03:31.513544Z'
+created: '2020-02-26T19:54:25.054108Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'M'
+              "M"
             lineno (function takes precedence)
               172
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'S/<'
+              "S/<"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'i'
+              "i"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'b'
+              "b"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/</a</<'
+              "e/</a</<"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/<'
+              "t.exports/<"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'L'
+              "L"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/</<'
+              "t.exports/</<"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'c'
+              "c"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'componentPromise'
+              "componentPromise"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'o.e'
+              "o.e"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
             lineno (function takes precedence)
               14
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
 --------------------------------------------------------------------------
 system:
-  hash: '074e2ed5d89f602d31be5742ac107fef'
+  hash: "074e2ed5d89f602d31be5742ac107fef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'M'
+              "M"
             lineno (function takes precedence)
               172
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'S/<'
+              "S/<"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'i'
+              "i"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'b'
+              "b"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/</a</<'
+              "e/</a</<"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/<'
+              "t.exports/<"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'L'
+              "L"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/</<'
+              "t.exports/</<"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'c'
+              "c"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'componentPromise'
+              "componentPromise"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'o.e'
+              "o.e"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
             lineno (function takes precedence)
               14
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_complex_function_names.pysnap
index 53993d8ec1..2f43f39175 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_complex_function_names.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_complex_function_names.pysnap
@@ -1,40 +1,40 @@
 ---
-created: '2019-09-26T13:52:57.538117Z'
+created: '2020-02-26T19:54:25.081449Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e4dcc3896f798a517fb40f50daace658'
+  hash: "e4dcc3896f798a517fb40f50daace658"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_limit_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_limit_frames.pysnap
index b1f31af633..0357ec0aa5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_limit_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_limit_frames.pysnap
@@ -1,40 +1,40 @@
 ---
-created: '2019-09-26T13:52:57.552389Z'
+created: '2020-02-26T19:54:25.118859Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: '31f85aded5e85e51fb740d675fbfeccc'
+  hash: "31f85aded5e85e51fb740d675fbfeccc"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_no_filenames.pysnap
index 4de7ea862b..ad11763eeb 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_no_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_no_filenames.pysnap
@@ -1,106 +1,106 @@
 ---
-created: '2019-09-26T13:26:22.800091Z'
+created: '2020-02-26T19:54:25.245044Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '418120a66f7031923031f5c52aca0724'
+  hash: "418120a66f7031923031f5c52aca0724"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame (non app frame)
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame (non app frame)
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: '00719910980352c06ba93641057012e0'
+  hash: "00719910980352c06ba93641057012e0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame*
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame*
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_unlimited_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_unlimited_frames.pysnap
index 4370fdd3a7..29fe89b250 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_unlimited_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_unlimited_frames.pysnap
@@ -1,40 +1,40 @@
 ---
-created: '2019-09-26T13:52:57.633610Z'
+created: '2020-02-26T19:54:25.272735Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e4dcc3896f798a517fb40f50daace658'
+  hash: "e4dcc3896f798a517fb40f50daace658"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_windows_anon_namespace.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_windows_anon_namespace.pysnap
index f6794cddbf..a06c15e184 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_windows_anon_namespace.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_windows_anon_namespace.pysnap
@@ -1,72 +1,72 @@
 ---
-created: '2019-09-10T09:51:01.536615Z'
+created: '2020-02-26T19:54:25.318079Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'?A0xc3a0617d::crash'
+              "?A0xc3a0617d::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
 --------------------------------------------------------------------------
 system:
-  hash: '6fc07910e6c6a6d4051f823aed855991'
+  hash: "6fc07910e6c6a6d4051f823aed855991"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'?A0xc3a0617d::crash'
+              "?A0xc3a0617d::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_with_function_name.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_with_function_name.pysnap
index f0b5339dd7..30352d1c49 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_with_function_name.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/native_with_function_name.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-04-27T19:27:04.703573Z'
+created: '2020-02-26T19:54:25.348795Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::something::nested::Foo'
+              "(anonymous namespace)::something::nested::Foo"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
 --------------------------------------------------------------------------
 system:
-  hash: '282d9d4e85027e073026ace9ad3d05fd'
+  hash: "282d9d4e85027e073026ace9ad3d05fd"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::something::nested::Foo'
+              "(anonymous namespace)::something::nested::Foo"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/node_exception_weird.pysnap
index 0b93e5b7f2..4787ce9898 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/node_exception_weird.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/node_exception_weird.pysnap
@@ -1,238 +1,238 @@
 ---
-created: '2019-09-03T07:26:06.580929Z'
+created: '2020-02-26T19:54:25.368649Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'bc6bc0f8bfa8a2fe5f0e4034384bfec1'
+  hash: "bc6bc0f8bfa8a2fe5f0e4034384bfec1"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     */'
+              "     */"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
             lineno (line number is not used if context-line is available)
               171
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
             lineno (function takes precedence)
               808
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return fn.apply(this, arguments);'
+              "        return fn.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
             lineno (line number is not used if context-line is available)
               150
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'          })();'
+              "          })();"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               446
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'                return specificMockImpl.apply(this, arguments);'
+              "                return specificMockImpl.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'finalReturnValue'
+              "finalReturnValue"
             lineno (line number is not used if context-line is available)
               437
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return original.apply(this, arguments);'
+              "        return original.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               806
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts"
             context-line*
-              u'    if (maxBreadcrumbs <= 0) {'
+              "    if (maxBreadcrumbs <= 0) {"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
             lineno (line number is not used if context-line is available)
               255
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     * @returns Scope, the new cloned scope'
+              "     * @returns Scope, the new cloned scope"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts"
             context-line*
-              u'    promisedEvent'
+              "    promisedEvent"
             function (function name is not used if context-line is available)
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
             lineno (line number is not used if context-line is available)
               110
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
             lineno (function takes precedence)
               2093
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bla'
+          "bla"
 --------------------------------------------------------------------------
 system:
-  hash: '6a3275e56067560bf20cb311f724f897'
+  hash: "6a3275e56067560bf20cb311f724f897"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     */'
+              "     */"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
             lineno (line number is not used if context-line is available)
               171
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
             lineno (function takes precedence)
               808
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return fn.apply(this, arguments);'
+              "        return fn.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
             lineno (line number is not used if context-line is available)
               150
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'          })();'
+              "          })();"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               446
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'                return specificMockImpl.apply(this, arguments);'
+              "                return specificMockImpl.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'finalReturnValue'
+              "finalReturnValue"
             lineno (line number is not used if context-line is available)
               437
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return original.apply(this, arguments);'
+              "        return original.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               806
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts"
             context-line*
-              u'    if (maxBreadcrumbs <= 0) {'
+              "    if (maxBreadcrumbs <= 0) {"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
             lineno (line number is not used if context-line is available)
               255
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     * @returns Scope, the new cloned scope'
+              "     * @returns Scope, the new cloned scope"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts"
             context-line*
-              u'    promisedEvent'
+              "    promisedEvent"
             function (function name is not used if context-line is available)
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
             lineno (line number is not used if context-line is available)
               110
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
             lineno (function takes precedence)
               2093
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bla'
+          "bla"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_exception_base.pysnap
index 47d55a13b0..a7d235d14f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_exception_base.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-07T10:03:31.557389Z'
+created: '2020-02-26T19:54:25.382951Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       chained-exception (ignored because hash matches system variant)
@@ -12,27 +12,27 @@ app:
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9aef9026a457d312531c07644b271314'
+  hash: "9aef9026a457d312531c07644b271314"
   component:
     system*
       chained-exception*
@@ -40,21 +40,21 @@ system:
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_away_from_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_away_from_crash.pysnap
index 39f10d855a..ef3d9332b9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_away_from_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_away_from_crash.pysnap
@@ -1,246 +1,246 @@
 ---
-created: '2019-09-03T07:26:06.609215Z'
+created: '2020-02-26T19:54:25.404612Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '79f7443afa4022bb3e5093e765e755bb'
+  hash: "79f7443afa4022bb3e5093e765e755bb"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (stacktrace and type take precedence)
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '5586fbb54ed18866eea266e91cee7f8b'
+  hash: "5586fbb54ed18866eea266e91cee7f8b"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame*
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (stacktrace and type take precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_towards_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_towards_crash.pysnap
index 904208cba8..22eb3a3cba 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_towards_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_grouping_enhancer_towards_crash.pysnap
@@ -1,246 +1,246 @@
 ---
-created: '2019-09-03T07:26:06.628432Z'
+created: '2020-02-26T19:54:25.427715Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value*
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '20fc367de6e7f2dcfd2f08ddd4fd8618'
+  hash: "20fc367de6e7f2dcfd2f08ddd4fd8618"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame*
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame*
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (stacktrace and type take precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_http_error.pysnap
index 3c46480109..59c3e760ee 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_http_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/python_http_error.pysnap
@@ -1,99 +1,99 @@
 ---
-created: '2019-09-03T07:26:06.639222Z'
+created: '2020-02-26T19:54:25.450820Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '55b71821bccfe62d0df089e2f406c651'
+  hash: "55b71821bccfe62d0df089e2f406c651"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'                result = func(*args, **kwargs)'
+              "                result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               29
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'sentry/integrations/slack/notify_action.py'
+              "sentry/integrations/slack/notify_action.py"
             context-line*
-              u'            resp.raise_for_status()'
+              "            resp.raise_for_status()"
             function (function name is not used if context-line is available)
-              u'send_notification'
+              "send_notification"
             lineno (line number is not used if context-line is available)
               119
           frame (non app frame)
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'requests/models.py'
+              "requests/models.py"
             context-line*
-              u'            raise HTTPError(http_error_msg, response=self)'
+              "            raise HTTPError(http_error_msg, response=self)"
             function (function name is not used if context-line is available)
-              u'raise_for_status'
+              "raise_for_status"
             lineno (line number is not used if context-line is available)
               940
         type*
-          u'HTTPError'
+          "HTTPError"
         value (stacktrace and type take precedence)
-          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
+          "429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: 'a140a9ee6bbfb7ca9c21234dc287f2a6'
+  hash: "a140a9ee6bbfb7ca9c21234dc287f2a6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'                result = func(*args, **kwargs)'
+              "                result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               29
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'sentry/integrations/slack/notify_action.py'
+              "sentry/integrations/slack/notify_action.py"
             context-line*
-              u'            resp.raise_for_status()'
+              "            resp.raise_for_status()"
             function (function name is not used if context-line is available)
-              u'send_notification'
+              "send_notification"
             lineno (line number is not used if context-line is available)
               119
           frame*
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'requests/models.py'
+              "requests/models.py"
             context-line*
-              u'            raise HTTPError(http_error_msg, response=self)'
+              "            raise HTTPError(http_error_msg, response=self)"
             function (function name is not used if context-line is available)
-              u'raise_for_status'
+              "raise_for_status"
             lineno (line number is not used if context-line is available)
               940
         type*
-          u'HTTPError'
+          "HTTPError"
         value (stacktrace and type take precedence)
-          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
+          "429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/react_native.pysnap
index 910c2c8454..5732baff10 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/react_native.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/react_native.pysnap
@@ -1,494 +1,494 @@
 ---
-created: '2019-09-03T07:26:06.668409Z'
+created: '2020-02-26T19:54:25.490329Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (less than 10% of frames are in-app)
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'value'
+              "value"
             lineno (line number is not used if context-line is available)
               119
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'      this._inCall--;'
+              "      this._inCall--;"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               318
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'_inCall'
+              "_inCall"
             lineno (line number is not used if context-line is available)
               119
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    this._lastFlush = new Date().getTime();'
+              "    this._lastFlush = new Date().getTime();"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               357
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "      _receiveRootNodeIDEvent(index, eventTopLevelType, i);"
             function (function name is not used if context-line is available)
-              u'_lastFlush'
+              "_lastFlush"
             lineno (line number is not used if context-line is available)
               1160
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  batchedUpdates(function() {'
+              "  batchedUpdates(function() {"
             function (function name is not used if context-line is available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             lineno (line number is not used if context-line is available)
               1095
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    return _batchedUpdates(fn, bookkeeping);'
+              "    return _batchedUpdates(fn, bookkeeping);"
             function (function name is not used if context-line is available)
-              u'batchedUpdates'
+              "batchedUpdates"
             lineno (line number is not used if context-line is available)
               1054
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        return fn(a);'
+              "        return fn(a);"
             function (function name is not used if context-line is available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             lineno (line number is not used if context-line is available)
               5928
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               1113
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
             function (function name is not used if context-line is available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             lineno (line number is not used if context-line is available)
               219
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'[native code] forEach'
+              "[native code] forEach"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "        executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
             function (function name is not used if context-line is available)
-              u'D'
+              "D"
             lineno (line number is not used if context-line is available)
               235
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
             function (function name is not used if context-line is available)
-              u'executeDispatch'
+              "executeDispatch"
             lineno (line number is not used if context-line is available)
               181
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             lineno (line number is not used if context-line is available)
               54
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "    invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               41
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "  var funcArgs = Array.prototype.slice.call(arguments, 3);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               28
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'  touchableHandleResponderRelease: function(e) {'
+              "  touchableHandleResponderRelease: function(e) {"
             function (function name is not used if context-line is available)
-              u'arguments'
+              "arguments"
             lineno (line number is not used if context-line is available)
               430
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "      this._performSideEffectsForTransition(curState, nextState, signal, e);"
             function (function name is not used if context-line is available)
-              u'_receiveSignal'
+              "_receiveSignal"
             lineno (line number is not used if context-line is available)
               662
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'        this.touchableHandlePress(e);'
+              "        this.touchableHandlePress(e);"
             function (function name is not used if context-line is available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             lineno (line number is not used if context-line is available)
               744
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
+              "node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js"
             context-line*
-              u'    this.props.onPress && this.props.onPress(e);'
+              "    this.props.onPress && this.props.onPress(e);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               175
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'onPress'
+              "onPress"
             lineno (line number is not used if context-line is available)
               143
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'Button'
+              "Button"
             lineno (line number is not used if context-line is available)
               115
         type*
-          u'TypeError'
+          "TypeError"
         value*
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
 --------------------------------------------------------------------------
 system:
-  hash: 'f8f4d8cbe0c85758ed193d0f5d9955b3'
+  hash: "f8f4d8cbe0c85758ed193d0f5d9955b3"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'value'
+              "value"
             lineno (line number is not used if context-line is available)
               119
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'      this._inCall--;'
+              "      this._inCall--;"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               318
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'_inCall'
+              "_inCall"
             lineno (line number is not used if context-line is available)
               119
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    this._lastFlush = new Date().getTime();'
+              "    this._lastFlush = new Date().getTime();"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               357
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "      _receiveRootNodeIDEvent(index, eventTopLevelType, i);"
             function (function name is not used if context-line is available)
-              u'_lastFlush'
+              "_lastFlush"
             lineno (line number is not used if context-line is available)
               1160
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  batchedUpdates(function() {'
+              "  batchedUpdates(function() {"
             function (function name is not used if context-line is available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             lineno (line number is not used if context-line is available)
               1095
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    return _batchedUpdates(fn, bookkeeping);'
+              "    return _batchedUpdates(fn, bookkeeping);"
             function (function name is not used if context-line is available)
-              u'batchedUpdates'
+              "batchedUpdates"
             lineno (line number is not used if context-line is available)
               1054
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        return fn(a);'
+              "        return fn(a);"
             function (function name is not used if context-line is available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             lineno (line number is not used if context-line is available)
               5928
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               1113
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
             function (function name is not used if context-line is available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             lineno (line number is not used if context-line is available)
               219
           frame
             function (function name is not used if module or filename are available)
-              u'[native code] forEach'
+              "[native code] forEach"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "        executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
             function (function name is not used if context-line is available)
-              u'D'
+              "D"
             lineno (line number is not used if context-line is available)
               235
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
             function (function name is not used if context-line is available)
-              u'executeDispatch'
+              "executeDispatch"
             lineno (line number is not used if context-line is available)
               181
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             lineno (line number is not used if context-line is available)
               54
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "    invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               41
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "  var funcArgs = Array.prototype.slice.call(arguments, 3);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               28
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'  touchableHandleResponderRelease: function(e) {'
+              "  touchableHandleResponderRelease: function(e) {"
             function (function name is not used if context-line is available)
-              u'arguments'
+              "arguments"
             lineno (line number is not used if context-line is available)
               430
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "      this._performSideEffectsForTransition(curState, nextState, signal, e);"
             function (function name is not used if context-line is available)
-              u'_receiveSignal'
+              "_receiveSignal"
             lineno (line number is not used if context-line is available)
               662
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'        this.touchableHandlePress(e);'
+              "        this.touchableHandlePress(e);"
             function (function name is not used if context-line is available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             lineno (line number is not used if context-line is available)
               744
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
+              "node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js"
             context-line*
-              u'    this.props.onPress && this.props.onPress(e);'
+              "    this.props.onPress && this.props.onPress(e);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               175
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'onPress'
+              "onPress"
             lineno (line number is not used if context-line is available)
               143
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'Button'
+              "Button"
             lineno (line number is not used if context-line is available)
               115
         type*
-          u'TypeError'
+          "TypeError"
         value (stacktrace and type take precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_cocoa.pysnap
index 34fcc05cf7..63c6d992df 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_cocoa.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_cocoa.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-07T10:03:31.598442Z'
+created: '2020-02-26T19:54:25.507185Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb416f98479efa56a77c524602dc9979'
+  hash: "eb416f98479efa56a77c524602dc9979"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame (non app frame)
           filename*
-            u'baz.m'
+            "baz.m"
 --------------------------------------------------------------------------
 system:
-  hash: '1df786c8c266506e1acb6669c8df5154'
+  hash: "1df786c8c266506e1acb6669c8df5154"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame*
           filename*
-            u'baz.m'
+            "baz.m"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_collapse_recursion.pysnap
index b6f017f8c9..b5ecd62190 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_collapse_recursion.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_collapse_recursion.pysnap
@@ -1,142 +1,142 @@
 ---
-created: '2019-04-07T10:03:31.608784Z'
+created: '2020-02-26T19:54:25.524852Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'main'
+            "main"
           lineno (function takes precedence)
             13
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
           lineno (function takes precedence)
             20
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             25
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'throwError'
+            "throwError"
           lineno (function takes precedence)
             32
 --------------------------------------------------------------------------
 system:
-  hash: '894c3489e2ade384dc107bca6829d134'
+  hash: "894c3489e2ade384dc107bca6829d134"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'main'
+            "main"
           lineno (function takes precedence)
             13
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
           lineno (function takes precedence)
             20
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             25
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'throwError'
+            "throwError"
           lineno (function takes precedence)
             32
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_compute_hashes.pysnap
index 53d5a82398..eaa3421d10 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_compute_hashes.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-04-07T10:03:31.617317Z'
+created: '2020-02-26T19:54:25.542279Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'fbad177f80c1eff3bd6b252e09576292'
+  hash: "fbad177f80c1eff3bd6b252e09576292"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'a/foo.py'
+            "a/foo.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'a/bar.py'
+            "a/bar.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '06d370794820bec071005bf2e589d247'
+  hash: "06d370794820bec071005bf2e589d247"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'a/foo.py'
+            "a/foo.py"
           lineno*
             1
         frame*
           filename*
-            u'a/bar.py'
+            "a/bar.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap
index e332d5daff..91d2d02da7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap
@@ -1,31 +1,31 @@
 ---
-created: '2019-09-03T07:26:06.707090Z'
+created: '2020-02-26T19:54:25.562601Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           filename (ignored because filename is a URL)
-            u'foo'
+            "foo"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             1
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame
           filename (ignored because filename is a URL)
-            u'foo'
+            "foo"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_discard_non_urls.pysnap
index 02e14f93f1..90e2d3cbc9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_discard_non_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_discard_non_urls.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:06.715819Z'
+created: '2020-02-26T19:54:25.580624Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo'
+            "foo"
           context-line*
-            u'<HTML>'
+            "<HTML>"
           lineno (line number is not used if context-line is available)
             1
 --------------------------------------------------------------------------
 system:
-  hash: '9b478586e7375aef8bedb80ae2fcaab7'
+  hash: "9b478586e7375aef8bedb80ae2fcaab7"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo'
+            "foo"
           context-line*
-            u'<HTML>'
+            "<HTML>"
           lineno (line number is not used if context-line is available)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap
index 7c31f2c015..eb40763401 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap
@@ -1,31 +1,31 @@
 ---
-created: '2019-09-03T07:26:06.724471Z'
+created: '2020-02-26T19:54:25.598254Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           filename (ignored because filename is a URL)
-            u'/index.js'
+            "/index.js"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             20
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame
           filename (ignored because filename is a URL)
-            u'/index.js'
+            "/index.js"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             20
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_enforce_min_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_enforce_min_frames.pysnap
index f5780056af..5a83f29cdc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_enforce_min_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_enforce_min_frames.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-07-09T13:22:06.178503Z'
+created: '2020-02-26T19:54:25.662237Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (discarded because stacktrace only contains 1 frame which is under the configured threshold by grouping enhancement rule (family:native min-frames=2))
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_excludes_single_frame_urls.pysnap
index 421d5268ca..b0ee194ed8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_excludes_single_frame_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_excludes_single_frame_urls.pysnap
@@ -1,35 +1,35 @@
 ---
-created: '2019-04-07T10:03:31.649772Z'
+created: '2020-02-26T19:54:25.683367Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (module takes precedence)
-            u'/bar/'
+            "/bar/"
           context-line (discarded because from URL origin)
           lineno*
             107
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame*
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (module takes precedence)
-            u'/bar/'
+            "/bar/"
           context-line (discarded because from URL origin)
           lineno*
             107
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_hash_without_system_frames.pysnap
index 947a868be8..f51fd520e6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_hash_without_system_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_hash_without_system_frames.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-04-07T10:03:31.658705Z'
+created: '2020-02-26T19:54:25.716738Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '19fcc04a0c59eaf564ee1a00c58574cc'
+  hash: "19fcc04a0c59eaf564ee1a00c58574cc"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '3aa7e7dacc3a98cf8316a226c4485053'
+  hash: "3aa7e7dacc3a98cf8316a226c4485053"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap
index 4126f4ff66..9df0785b50 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap
@@ -1,53 +1,53 @@
 ---
-created: '2019-09-03T07:26:06.795984Z'
+created: '2020-02-26T19:54:25.750393Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (frame considered in-app because no frame is in-app)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'c'
+            "c"
           lineno (line number is not used if module or filename are available)
             1188
         frame (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
           lineno (line number is not used if module or filename are available)
             1184
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'c'
+            "c"
           lineno (line number is not used if module or filename are available)
             1188
         frame
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
           lineno (line number is not used if module or filename are available)
             1184
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust.pysnap
index e7b459bee1..9bb15a348f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-06-05T11:45:13.234078Z'
+created: '2020-02-26T19:54:25.821472Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust2.pysnap
index 3af1558ed3..eb0b837003 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_rust2.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-06-05T11:45:13.285048Z'
+created: '2020-02-26T19:54:25.883279Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
+  hash: "9b33b65a645c66239cafcd276fcd0659"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (ignored by grouping enhancement rule (family:native function:__* -group))
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (ignored by grouping enhancement rule (family:native function:*::__* -group))
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_with_minimal_app_frames.pysnap
index fc06bf4b19..24f97d1d11 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_with_minimal_app_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/stacktrace_with_minimal_app_frames.pysnap
@@ -1,136 +1,136 @@
 ---
-created: '2019-04-07T10:03:31.710297Z'
+created: '2020-02-26T19:54:25.901175Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (less than 10% of frames are in-app)
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '3aa7e7dacc3a98cf8316a226c4485053'
+  hash: "3aa7e7dacc3a98cf8316a226c4485053"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/template_compute_hashes.pysnap
index ca78d79594..f6c8861f74 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/template_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/template_compute_hashes.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-04-07T10:03:31.718875Z'
+created: '2020-02-26T19:54:25.915505Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '826f66ef602835f68030c04c634df320'
+  hash: "826f66ef602835f68030c04c634df320"
   component:
     default*
       template*
         filename*
-          u'foo.html'
+          "foo.html"
         context-line*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_compute_hashes.pysnap
index 42f9427c2c..492243eb21 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_compute_hashes.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-04-07T10:03:31.728531Z'
+created: '2020-02-26T19:54:25.931779Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (threads of system takes precedence)
       threads (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'foo/baz.c'
+              "foo/baz.c"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               1
 --------------------------------------------------------------------------
 system:
-  hash: '39db5b4edf187e89cec12245e5c9fb3c'
+  hash: "39db5b4edf187e89cec12245e5c9fb3c"
   component:
     system*
       threads*
         stacktrace*
           frame*
             filename*
-              u'foo/baz.c'
+              "foo/baz.c"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_no_hash.pysnap
index 8f9699598f..6abdf3c029 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_no_hash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/threads_no_hash.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-04-07T10:03:31.736771Z'
+created: '2020-02-26T19:54:25.948897Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       threads (ignored because contains 2 threads)
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/actix.pysnap
index 6489a9b353..db1fba5e8b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/actix.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/actix.pysnap
@@ -1,1088 +1,1088 @@
 ---
-created: '2019-09-26T13:46:37.308539Z'
+created: '2020-02-26T19:54:26.341445Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '0b1576b98e87afe7e4de476f6f290c65'
+  hash: "0b1576b98e87afe7e4de476f6f290c65"
   component:
     app*
       exception*
         stacktrace*
           frame
             function (function name is not used if module or filename are available)
-              u'__pthread_start'
+              "__pthread_start"
           frame
             function (function name is not used if module or filename are available)
-              u'__pthread_body'
+              "__pthread_body"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
             lineno (function takes precedence)
               24
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'<F as alloc::boxed::FnBox<A>>::call_box'
+              "<F as alloc::boxed::FnBox<A>>::call_box"
             lineno (function takes precedence)
               673
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
             lineno (function takes precedence)
               476
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
             lineno (function takes precedence)
               398
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
             lineno (function takes precedence)
               289
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
             lineno (function takes precedence)
               102
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
             lineno (function takes precedence)
               310
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once'
+              "<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once"
             lineno (function takes precedence)
               319
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               477
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
             lineno (function takes precedence)
               136
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
             lineno (function takes precedence)
               116
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
             lineno (function takes precedence)
               189
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
             lineno (function takes precedence)
               221
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
             lineno (function takes precedence)
               212
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
             lineno (function takes precedence)
               229
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
             lineno (function takes precedence)
               222
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
             lineno (function takes precedence)
               124
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
             lineno (function takes precedence)
               141
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               223
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
             lineno (function takes precedence)
               81
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
             lineno (function takes precedence)
               94
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               230
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
             lineno (function takes precedence)
               162
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
             lineno (function takes precedence)
               192
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               232
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
             lineno (function takes precedence)
               191
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Entered<'a, P>>::block_on"
+              "<tokio_current_thread::Entered<'a, P>>::block_on"
             lineno (function takes precedence)
               488
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Entered<'a, P>>::tick"
+              "<tokio_current_thread::Entered<'a, P>>::tick"
             lineno (function takes precedence)
               605
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick'
+              "<tokio_current_thread::scheduler::Scheduler<U>>::tick"
             lineno (function takes precedence)
               333
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Borrow<'a, U>>::enter"
+              "<tokio_current_thread::Borrow<'a, U>>::enter"
             lineno (function takes precedence)
               776
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}"
+              "<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}"
             lineno (function takes precedence)
               778
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
             lineno (function takes precedence)
               816
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}"
+              "<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               779
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}'
+              "<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}"
             lineno (function takes precedence)
               333
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u"<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick"
+              "<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick"
             lineno (function takes precedence)
               354
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify'
+              "<futures::task_impl::Spawn<T>>::poll_future_notify"
             lineno (function takes precedence)
               326
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::poll_fn_notify'
+              "<futures::task_impl::Spawn<T>>::poll_fn_notify"
             lineno (function takes precedence)
               288
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::enter'
+              "<futures::task_impl::Spawn<T>>::enter"
             lineno (function takes precedence)
               396
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
             lineno (function takes precedence)
               78
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::enter::{{closure}}'
+              "<futures::task_impl::Spawn<T>>::enter::{{closure}}"
             lineno (function takes precedence)
               396
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}'
+              "<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}"
             lineno (function takes precedence)
               326
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<alloc::boxed::Box<F> as futures::future::Future>::poll'
+              "<alloc::boxed::Box<F> as futures::future::Future>::poll"
             lineno (function takes precedence)
               113
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'<futures::future::then::Then<A, B, F> as futures::future::Future>::poll'
+              "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll"
             lineno (function takes precedence)
               32
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'<futures::future::chain::Chain<A, B, C>>::poll'
+              "<futures::future::chain::Chain<A, B, C>>::poll"
             lineno (function takes precedence)
               26
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+              "<futures::future::either::Either<A, B> as futures::future::Future>::poll"
             lineno (function takes precedence)
               35
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+              "<futures::future::either::Either<A, B> as futures::future::Future>::poll"
             lineno (function takes precedence)
               35
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll'
+              "<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll"
             lineno (function takes precedence)
               378
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll'
+              "<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll"
             lineno (function takes precedence)
               94
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll'
+              "<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll"
             lineno (function takes precedence)
               92
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+              "<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll"
             lineno (function takes precedence)
               155
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+              "<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll"
             lineno (function takes precedence)
               105
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll"
             lineno (function takes precedence)
               223
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler"
             lineno (function takes precedence)
               376
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io"
             lineno (function takes precedence)
               348
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::parse'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::parse"
             lineno (function takes precedence)
               506
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io'
+              "<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io"
             lineno (function takes precedence)
               126
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'<actix_web::pipeline::ProcessResponse<S, H>>::poll_io'
+              "<actix_web::pipeline::ProcessResponse<S, H>>::poll_io"
             lineno (function takes precedence)
               5
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
             lineno (function takes precedence)
               1232
           frame (non app frame)
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'<sentry::integrations::log::Logger as log::Log>::log'
+              "<sentry::integrations::log::Logger as log::Log>::log"
             lineno (function takes precedence)
               184
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
             lineno (function takes precedence)
               208
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
             lineno (function takes precedence)
               190
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
             lineno (function takes precedence)
               192
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
             lineno (function takes precedence)
               210
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (stacktrace and type take precedence)
-          u'Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here"
 --------------------------------------------------------------------------
 system:
-  hash: '4796dda6f2cfa81ec7862cd24bcfb58e'
+  hash: "4796dda6f2cfa81ec7862cd24bcfb58e"
   component:
     system*
       exception*
         stacktrace*
           frame
             function (function name is not used if module or filename are available)
-              u'__pthread_start'
+              "__pthread_start"
           frame
             function (function name is not used if module or filename are available)
-              u'__pthread_body'
+              "__pthread_body"
           frame*
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
             lineno (function takes precedence)
               24
           frame* (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'<F as alloc::boxed::FnBox<A>>::call_box'
+              "<F as alloc::boxed::FnBox<A>>::call_box"
             lineno (function takes precedence)
               673
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
             lineno (function takes precedence)
               476
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
             lineno (function takes precedence)
               398
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
             lineno (function takes precedence)
               289
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
             lineno (function takes precedence)
               102
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
             lineno (function takes precedence)
               310
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once'
+              "<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once"
             lineno (function takes precedence)
               319
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               477
           frame*
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
             lineno (function takes precedence)
               136
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
             lineno (function takes precedence)
               116
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
             lineno (function takes precedence)
               189
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
             lineno (function takes precedence)
               221
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
             lineno (function takes precedence)
               212
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
             lineno (function takes precedence)
               229
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
             lineno (function takes precedence)
               222
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
             lineno (function takes precedence)
               124
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
             lineno (function takes precedence)
               141
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               223
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
             lineno (function takes precedence)
               81
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
             lineno (function takes precedence)
               94
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               230
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
             lineno (function takes precedence)
               162
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
             lineno (function takes precedence)
               192
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               232
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
             lineno (function takes precedence)
               191
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Entered<'a, P>>::block_on"
+              "<tokio_current_thread::Entered<'a, P>>::block_on"
             lineno (function takes precedence)
               488
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Entered<'a, P>>::tick"
+              "<tokio_current_thread::Entered<'a, P>>::tick"
             lineno (function takes precedence)
               605
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick'
+              "<tokio_current_thread::scheduler::Scheduler<U>>::tick"
             lineno (function takes precedence)
               333
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Borrow<'a, U>>::enter"
+              "<tokio_current_thread::Borrow<'a, U>>::enter"
             lineno (function takes precedence)
               776
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}"
+              "<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}"
             lineno (function takes precedence)
               778
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
             lineno (function takes precedence)
               816
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}"
+              "<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}"
             lineno (function takes precedence)
               779
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}'
+              "<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}"
             lineno (function takes precedence)
               333
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u"<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick"
+              "<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick"
             lineno (function takes precedence)
               354
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify'
+              "<futures::task_impl::Spawn<T>>::poll_future_notify"
             lineno (function takes precedence)
               326
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::poll_fn_notify'
+              "<futures::task_impl::Spawn<T>>::poll_fn_notify"
             lineno (function takes precedence)
               288
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::enter'
+              "<futures::task_impl::Spawn<T>>::enter"
             lineno (function takes precedence)
               396
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
             lineno (function takes precedence)
               78
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::enter::{{closure}}'
+              "<futures::task_impl::Spawn<T>>::enter::{{closure}}"
             lineno (function takes precedence)
               396
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}'
+              "<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}"
             lineno (function takes precedence)
               326
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'<alloc::boxed::Box<F> as futures::future::Future>::poll'
+              "<alloc::boxed::Box<F> as futures::future::Future>::poll"
             lineno (function takes precedence)
               113
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'<futures::future::then::Then<A, B, F> as futures::future::Future>::poll'
+              "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll"
             lineno (function takes precedence)
               32
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'<futures::future::chain::Chain<A, B, C>>::poll'
+              "<futures::future::chain::Chain<A, B, C>>::poll"
             lineno (function takes precedence)
               26
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+              "<futures::future::either::Either<A, B> as futures::future::Future>::poll"
             lineno (function takes precedence)
               35
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+              "<futures::future::either::Either<A, B> as futures::future::Future>::poll"
             lineno (function takes precedence)
               35
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll'
+              "<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll"
             lineno (function takes precedence)
               378
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll'
+              "<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll"
             lineno (function takes precedence)
               94
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll'
+              "<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll"
             lineno (function takes precedence)
               92
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+              "<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll"
             lineno (function takes precedence)
               155
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+              "<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll"
             lineno (function takes precedence)
               105
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll"
             lineno (function takes precedence)
               223
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler"
             lineno (function takes precedence)
               376
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io"
             lineno (function takes precedence)
               348
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::parse'
+              "<actix_web::server::h1::Http1Dispatcher<T, H>>::parse"
             lineno (function takes precedence)
               506
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io'
+              "<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io"
             lineno (function takes precedence)
               126
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'<actix_web::pipeline::ProcessResponse<S, H>>::poll_io'
+              "<actix_web::pipeline::ProcessResponse<S, H>>::poll_io"
             lineno (function takes precedence)
               5
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
             lineno (function takes precedence)
               1232
           frame*
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'<sentry::integrations::log::Logger as log::Log>::log'
+              "<sentry::integrations::log::Logger as log::Log>::log"
             lineno (function takes precedence)
               184
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
             lineno (function takes precedence)
               208
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
             lineno (function takes precedence)
               190
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::with'
+              "<std::thread::local::LocalKey<T>>::with"
             lineno (function takes precedence)
               255
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
+              "<std::thread::local::LocalKey<T>>::try_with"
             lineno (function takes precedence)
               309
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
             lineno (function takes precedence)
               192
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
             lineno (function takes precedence)
               210
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (stacktrace and type take precedence)
-          u'Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/aspnetcore.pysnap
index e724e6c03e..3f90dff3b0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/aspnetcore.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/aspnetcore.pysnap
@@ -1,473 +1,473 @@
 ---
-created: '2019-09-03T07:26:07.106321Z'
+created: '2020-02-26T19:54:26.384585Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (less than 10% of frames are in-app)
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeAsync'
+              "InvokeAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             context-line (discarded because line too long)
             function*
-              u'Execute'
+              "Execute"
           frame (non app frame)
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             context-line*
-              u'System.Object Execute(System.Object, System.Object[])'
+              "System.Object Execute(System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             context-line*
-              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
+              "System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
+              "C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs"
             context-line*
-              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
+              "Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)"
             function (function name is not used if context-line is available)
-              u'Get'
+              "Get"
             lineno (line number is not used if context-line is available)
               27
         type*
-          u'System.Exception'
+          "System.Exception"
         value*
-          u'sync exception'
+          "sync exception"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
+        "An unhandled exception has occurred while executing the request."
 --------------------------------------------------------------------------
 system:
-  hash: '13dfa104801704079b63004347f8fae6'
+  hash: "13dfa104801704079b63004347f8fae6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeAsync'
+              "InvokeAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+              "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)"
             function (function name is not used if context-line is available)
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
+              "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"
             function (function name is not used if context-line is available)
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+              "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)"
             function (function name is not used if context-line is available)
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             context-line*
-              u'Void Throw()'
+              "Void Throw()"
             function (function name is not used if context-line is available)
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             context-line*
-              u'Void MoveNext()'
+              "Void MoveNext()"
             function (function name is not used if context-line is available)
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             context-line (discarded because line too long)
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             context-line*
-              u'System.Object Execute(System.Object, System.Object[])'
+              "System.Object Execute(System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             context-line*
-              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
+              "System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])"
             function (function name is not used if context-line is available)
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
+              "C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs"
             context-line*
-              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
+              "Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)"
             function (function name is not used if context-line is available)
-              u'Get'
+              "Get"
             lineno (line number is not used if context-line is available)
               27
         type*
-          u'System.Exception'
+          "System.Exception"
         value (stacktrace and type take precedence)
-          u'sync exception'
+          "sync exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/connection_error.pysnap
index c994462272..7422840dbe 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/connection_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/connection_error.pysnap
@@ -1,275 +1,275 @@
 ---
-created: '2019-09-03T07:26:07.121298Z'
+created: '2020-02-26T19:54:26.416957Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '8abb6be15864dac05d46e61bfe1dd6d3'
+  hash: "8abb6be15864dac05d46e61bfe1dd6d3"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'            result = func(*args, **kwargs)'
+              "            result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               31
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'sentry/utils/services.py'
+              "sentry/utils/services.py"
             context-line*
-              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
             function (function name is not used if context-line is available)
-              u'<lambda>'
+              "<lambda>"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'getsentry/quotas.py'
+              "getsentry/quotas.py"
             context-line*
-              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               136
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'sentry/quotas/redis.py'
+              "sentry/quotas/redis.py"
             context-line*
-              u'        rejections = is_rate_limited(client, keys, args)'
+              "        rejections = is_rate_limited(client, keys, args)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               189
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'sentry/utils/redis.py'
+              "sentry/utils/redis.py"
             context-line*
-              u'        return script(keys, args, client)'
+              "        return script(keys, args, client)"
             function (function name is not used if context-line is available)
-              u'call_script'
+              "call_script"
             lineno (line number is not used if context-line is available)
               239
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return client.evalsha(self.sha, len(keys), *args)'
+              "            return client.evalsha(self.sha, len(keys), *args)"
             function (function name is not used if context-line is available)
-              u'__call__'
+              "__call__"
             lineno (line number is not used if context-line is available)
               2694
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
             function (function name is not used if context-line is available)
-              u'evalsha'
+              "evalsha"
             lineno (line number is not used if context-line is available)
               1944
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return self.parse_response(connection, command_name, **options)'
+              "            return self.parse_response(connection, command_name, **options)"
             function (function name is not used if context-line is available)
-              u'execute_command'
+              "execute_command"
             lineno (line number is not used if context-line is available)
               579
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'        response = connection.read_response()'
+              "        response = connection.read_response()"
             function (function name is not used if context-line is available)
-              u'parse_response'
+              "parse_response"
             lineno (line number is not used if context-line is available)
               585
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'            response = self._parser.read_response()'
+              "            response = self._parser.read_response()"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               577
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'                                      (e.args,))'
+              "                                      (e.args,))"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               357
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (stacktrace and type take precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '6391c18be56c7e7c95e58be4b3eaf0bd'
+  hash: "6391c18be56c7e7c95e58be4b3eaf0bd"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'            result = func(*args, **kwargs)'
+              "            result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               31
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'sentry/utils/services.py'
+              "sentry/utils/services.py"
             context-line*
-              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
             function (function name is not used if context-line is available)
-              u'<lambda>'
+              "<lambda>"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'getsentry/quotas.py'
+              "getsentry/quotas.py"
             context-line*
-              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               136
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'sentry/quotas/redis.py'
+              "sentry/quotas/redis.py"
             context-line*
-              u'        rejections = is_rate_limited(client, keys, args)'
+              "        rejections = is_rate_limited(client, keys, args)"
             function (function name is not used if context-line is available)
-              u'is_rate_limited'
+              "is_rate_limited"
             lineno (line number is not used if context-line is available)
               189
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'sentry/utils/redis.py'
+              "sentry/utils/redis.py"
             context-line*
-              u'        return script(keys, args, client)'
+              "        return script(keys, args, client)"
             function (function name is not used if context-line is available)
-              u'call_script'
+              "call_script"
             lineno (line number is not used if context-line is available)
               239
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return client.evalsha(self.sha, len(keys), *args)'
+              "            return client.evalsha(self.sha, len(keys), *args)"
             function (function name is not used if context-line is available)
-              u'__call__'
+              "__call__"
             lineno (line number is not used if context-line is available)
               2694
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
             function (function name is not used if context-line is available)
-              u'evalsha'
+              "evalsha"
             lineno (line number is not used if context-line is available)
               1944
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'            return self.parse_response(connection, command_name, **options)'
+              "            return self.parse_response(connection, command_name, **options)"
             function (function name is not used if context-line is available)
-              u'execute_command'
+              "execute_command"
             lineno (line number is not used if context-line is available)
               579
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'redis/client.py'
+              "redis/client.py"
             context-line*
-              u'        response = connection.read_response()'
+              "        response = connection.read_response()"
             function (function name is not used if context-line is available)
-              u'parse_response'
+              "parse_response"
             lineno (line number is not used if context-line is available)
               585
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'            response = self._parser.read_response()'
+              "            response = self._parser.read_response()"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               577
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'redis/connection.py'
+              "redis/connection.py"
             context-line*
-              u'                                      (e.args,))'
+              "                                      (e.args,))"
             function (function name is not used if context-line is available)
-              u'read_response'
+              "read_response"
             lineno (line number is not used if context-line is available)
               357
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (stacktrace and type take precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp.pysnap
index f37950093a..fb0242c54c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-03-14T17:12:36.897979Z'
+created: '2020-02-26T19:54:26.429762Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '666766514295bb52812324097cdaf53e'
+  hash: "666766514295bb52812324097cdaf53e"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'YYY'
+          "YYY"
       message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
+        "Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_img_src.pysnap
index ef5494de76..b2a45f17d5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_img_src.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_img_src.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-14T17:12:36.907046Z'
+created: '2020-02-26T19:54:26.440643Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1742101e08eb1608f569751dfedd0062'
+  hash: "1742101e08eb1608f569751dfedd0062"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'ftp://example.com'
+          "ftp://example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_no_blocked_uri.pysnap
index f94894aa85..e444e36c96 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_no_blocked_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_no_blocked_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-14T17:12:36.917584Z'
+created: '2020-02-26T19:54:26.453427Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
+  hash: "efddf1cde918097259aa7d4904fb1942"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
           "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_data_uri.pysnap
index b1892d3b20..cdbd309bec 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_data_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_data_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-14T17:12:36.926311Z'
+created: '2020-02-26T19:54:26.466319Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
+  hash: "4e6f2bce9d121aa89f4dc5e5da08afb5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'data:'
+          "data:"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_src_uri.pysnap
index 662d48cb5a..f7b7f8ec0a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_src_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_script_src_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-14T17:12:36.934338Z'
+created: '2020-02-26T19:54:26.476293Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
+  hash: "223cdacfe5b4b830dc700b5c18cc21b4"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_style_src_elem.pysnap
index 4510b89cd5..49dacbf166 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_style_src_elem.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/csp_style_src_elem.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-03-14T17:12:36.942174Z'
+created: '2020-02-26T19:54:26.490911Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '537a973f594c364842893e9a72af62a5'
+  hash: "537a973f594c364842893e9a72af62a5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'style-src-elem'
+          "style-src-elem"
         violation (not a local script violation)
         uri*
-          u'use.fontawesome.com'
+          "use.fontawesome.com"
       message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
+        "Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/custom_fingerprint.pysnap
index ab712abf7d..3cb0ebcd44 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/custom_fingerprint.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/custom_fingerprint.pysnap
@@ -1,8 +1,8 @@
 ---
-created: '2019-03-14T17:12:36.950437Z'
+created: '2020-02-26T19:54:26.509862Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
+  hash: "f30afa00b85f5cac5ee0bce01b31f08d"
+  values: ["celery", "SoftTimeLimitExceeded", "sentry.tasks.store.process_event"]
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/empty.pysnap
index 9ef359c7dd..41857405a3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/empty.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/empty.pysnap
@@ -1,7 +1,7 @@
 ---
-created: '2019-03-14T17:12:36.961526Z'
+created: '2020-02-26T19:54:26.522644Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_comput_hashes.pysnap
index 53e8132529..6b78a8c57a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_comput_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_comput_hashes.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-03-14T17:12:36.972970Z'
+created: '2020-02-26T19:54:26.534010Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'b23ee1963904c2ca87b145febf94b66c'
+  hash: "b23ee1963904c2ca87b145febf94b66c"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes.pysnap
index bdf8a30f6b..073961ce4f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-04-03T22:37:14.837619Z'
+created: '2020-02-26T19:54:26.549863Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'baf0bfa8bb312627cd5ef4171aec9f4e'
+  hash: "baf0bfa8bb312627cd5ef4171aec9f4e"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_2.pysnap
index 83f6a39f93..623232f489 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_2.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-04-03T22:37:14.848447Z'
+created: '2020-02-26T19:54:26.566831Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'baf0bfa8bb312627cd5ef4171aec9f4e'
+  hash: "baf0bfa8bb312627cd5ef4171aec9f4e"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'foo/baz.py'
+              "foo/baz.py"
             lineno*
               1
         type*
-          u'ValueError'
+          "ValueError"
         value (stacktrace and type take precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_3.pysnap
index 267aa21487..7b343baa16 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_compute_hashes_3.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-03T22:37:14.859523Z'
+created: '2020-02-26T19:54:26.583065Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       chained-exception (ignored because hash matches system variant)
@@ -12,27 +12,27 @@ app:
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9aef9026a457d312531c07644b271314'
+  hash: "9aef9026a457d312531c07644b271314"
   component:
     system*
       chained-exception*
@@ -40,21 +40,21 @@ system:
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_javascript_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_javascript_no_in_app.pysnap
index 2c2723d896..16d184ac14 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_javascript_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_javascript_no_in_app.pysnap
@@ -1,66 +1,66 @@
 ---
-created: '2019-09-03T07:26:07.224005Z'
+created: '2020-02-26T19:54:26.604429Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'./app/components/modals/createTeamModal.jsx'
+              "./app/components/modals/createTeamModal.jsx"
             context-line*
-              u'        onError(err);'
+              "        onError(err);"
             lineno (line number is not used if context-line is available)
               27
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'./app/views/settings/components/forms/form.jsx'
+              "./app/views/settings/components/forms/form.jsx"
             context-line*
-              u'    this.model.submitError(error);'
+              "    this.model.submitError(error);"
             function (function name is not used if context-line is available)
-              u'onError'
+              "onError"
             lineno (line number is not used if context-line is available)
               125
         type*
-          u'TypeError'
+          "TypeError"
         value (stacktrace and type take precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
 --------------------------------------------------------------------------
 system:
-  hash: 'd1f185038ed0941ba9e5d2bad519b773'
+  hash: "d1f185038ed0941ba9e5d2bad519b773"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'./app/components/modals/createTeamModal.jsx'
+              "./app/components/modals/createTeamModal.jsx"
             context-line*
-              u'        onError(err);'
+              "        onError(err);"
             lineno (line number is not used if context-line is available)
               27
           frame*
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'./app/views/settings/components/forms/form.jsx'
+              "./app/views/settings/components/forms/form.jsx"
             context-line*
-              u'    this.model.submitError(error);'
+              "    this.model.submitError(error);"
             function (function name is not used if context-line is available)
-              u'onError'
+              "onError"
             lineno (line number is not used if context-line is available)
               125
         type*
-          u'TypeError'
+          "TypeError"
         value (stacktrace and type take precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_type.pysnap
index 080eb931ab..7f537ac763 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_type.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_type.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-03-14T17:12:37.012963Z'
+created: '2020-02-26T19:54:26.620529Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       exception*
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_value.pysnap
index 55eaedffe3..c156809d37 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_value.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/exception_without_value.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-03-14T17:12:37.022163Z'
+created: '2020-02-26T19:54:26.634106Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/expectct.pysnap
index 3a6564d08e..f38bbe4182 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/expectct.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/expectct.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-03-14T17:12:37.032368Z'
+created: '2020-02-26T19:54:26.650163Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
+  hash: "3d2933f4b5ec459ec8d569a398fd328c"
   component:
     default*
       expect-ct*
         salt* (a static salt)
-          'expect-ct'
+          "expect-ct"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
index dcc26d4964..886f3df181 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.040818Z'
+created: '2020-02-26T19:54:26.672654Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '526b64456c48836a46ec1a89544fd412'
+  hash: "526b64456c48836a46ec1a89544fd412"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_ENHANCED_spring_classes.pysnap
index ff9fb5bd63..4158965b9f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.048511Z'
+created: '2020-02-26T19:54:26.686813Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
+  hash: "45c0b0a8c777e7a7040d7c39233a08a5"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
index a412e0e392..2d4fb1e08c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.057788Z'
+created: '2020-02-26T19:54:26.707292Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
+  hash: "353e05904b48bd3ae4fa9623934a70d0"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_spring_classes.pysnap
index c58e900a5e..da181cf0c1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_extra_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.067596Z'
+created: '2020-02-26T19:54:26.725530Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
+  hash: "be15ca3d511b96918e087c4f42503ca2"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_from_url_origin_corner_cases.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_from_url_origin_corner_cases.pysnap
index bfaba146ab..4efa2ac911 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_from_url_origin_corner_cases.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_from_url_origin_corner_cases.pysnap
@@ -1,52 +1,52 @@
 ---
-created: '2019-11-01T10:16:09.298818Z'
+created: '2020-02-26T19:54:26.743230Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line (discarded because from URL origin)
 --------------------------------------------------------------------------
 system:
-  hash: '98f84fd484f8c2273f28cc645935f650'
+  hash: "98f84fd484f8c2273f28cc645935f650"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
         frame
           filename (ignored because filename is a URL)
-            u'/foo.js'
+            "/foo.js"
           context-line (discarded because from URL origin)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_abs_path_is_http.pysnap
index d3ac2ab27d..cc2ee8b085 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_abs_path_is_http.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:07.287141Z'
+created: '2020-02-26T19:54:26.760930Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_blob.pysnap
index edcd96b467..48ccbc481f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_blob.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_blob.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-03-14T17:12:37.083906Z'
+created: '2020-02-26T19:54:26.775547Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           filename (ignored because filename is a URL)
-            u'blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame
           filename (ignored because filename is a URL)
-            u'blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_http.pysnap
index 8593694131..762ae0ee03 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_http.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:07.303194Z'
+created: '2020-02-26T19:54:26.788098Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_https.pysnap
index c5c4df0880..d4c6bd6698 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_https.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_filename_if_https.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:07.311985Z'
+created: '2020-02-26T19:54:26.806455Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because filename is a URL)
-            u'/foo.py'
+            "/foo.py"
           context-line*
-            u'hello world'
+            "hello world"
           function (function name is not used if context-line is available)
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_function.pysnap
index 6abb734b6e..8e1c8055ce 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_function.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-03-14T17:12:37.107887Z'
+created: '2020-02-26T19:54:26.823824Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function*
             salt* (normalized lambda function name)
-              '<function>'
+              "<function>"
 --------------------------------------------------------------------------
 system:
-  hash: 'aee9aaca552e7fd593d085ca5a2260cf'
+  hash: "aee9aaca552e7fd593d085ca5a2260cf"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function*
             salt* (normalized lambda function name)
-              '<function>'
+              "<function>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_module.pysnap
index 0d89b7fc73..afde35b029 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_module.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_java8_lambda_module.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-03-14T17:12:37.117385Z'
+created: '2020-02-26T19:54:26.836720Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           function*
-            u'call'
+            "call"
 --------------------------------------------------------------------------
 system:
-  hash: '5fd1358271b3a3dba3287e135029688d'
+  hash: "5fd1358271b3a3dba3287e135029688d"
   component:
     system*
       stacktrace*
         frame*
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           function*
-            u'call'
+            "call"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist.pysnap
index ec22932e56..e481a7340c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.126514Z'
+created: '2020-02-26T19:54:26.851859Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_2.pysnap
index 21ee3a67b9..94c75448c6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.134510Z'
+created: '2020-02-26T19:54:26.866072Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_3.pysnap
index 44a5ae3810..ccd58714a5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_javassist_3.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.142802Z'
+created: '2020-02-26T19:54:26.882934Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename* (removed javassist parts)
-            u'EntriesResource_$$_javassist<auto>.java'
+            "EntriesResource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '813856376ba744b15a01916ed2557344'
+  hash: "813856376ba744b15a01916ed2557344"
   component:
     system*
       stacktrace*
         frame*
           filename* (removed javassist parts)
-            u'EntriesResource_$$_javassist<auto>.java'
+            "EntriesResource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url.pysnap
index 60345dedd9..349bad4aa7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url.pysnap
@@ -1,29 +1,29 @@
 ---
-created: '2019-03-14T17:12:37.150408Z'
+created: '2020-02-26T19:54:26.901724Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame*
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url_2.pysnap
index 996ef8200f..4a5e2bca1a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_module_if_page_url_2.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-05-08T07:33:29.046132Z'
+created: '2020-02-26T19:54:26.918697Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
 --------------------------------------------------------------------------
 system:
-  hash: '37a2dbfebce02591474d46b7485e9923'
+  hash: "37a2dbfebce02591474d46b7485e9923"
   component:
     system*
       stacktrace*
         frame*
           module* (ignored module)
             salt* (normalized generated module name)
-              '<module>'
+              "<module>"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_safari_native_code.pysnap
index cf4bcdc456..2eee969865 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_safari_native_code.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_safari_native_code.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-09-03T07:26:07.375364Z'
+created: '2020-02-26T19:54:26.932536Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (frame considered in-app because no frame is in-app)
           function (function name is not used if module or filename are available)
-            u'forEach'
+            "forEach"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame (native code indicated by filename)
           function (function name is not used if module or filename are available)
-            u'forEach'
+            "forEach"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors.pysnap
index 09b3db214b..f74631f59c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.179744Z'
+created: '2020-02-26T19:54:26.947731Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
+  hash: "07d1a8e5728b3c4c7aa8b8273fd0e753"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors_2.pysnap
index 1eaa0b5068..8dc84fd890 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_constructors_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.187615Z'
+created: '2020-02-26T19:54:26.964240Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '09e0efcab18f545166318118ed4e0292'
+  hash: "09e0efcab18f545166318118ed4e0292"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_methods.pysnap
index 406f1a0d7c..bbcf55667a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_methods.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_ignores_sun_java_generated_methods.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-05-21T19:16:09.511284Z'
+created: '2020-02-26T19:54:26.977309Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame* (frame considered in-app because no frame is in-app)
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '9bc326575875422d0d4ced3c35d9f916'
+  hash: "9bc326575875422d0d4ced3c35d9f916"
   component:
     system*
       stacktrace*
         frame*
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame*
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_block_functions.pysnap
index 9d2c8aff72..ae2c7756d4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_block_functions.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_block_functions.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.204718Z'
+created: '2020-02-26T19:54:26.990741Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
 --------------------------------------------------------------------------
 system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
+  hash: "27eed4125fc13d42163ddb0b8f357b48"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_erb_templates.pysnap
index 97f7c36d54..fd726c7df8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_erb_templates.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.214353Z'
+created: '2020-02-26T19:54:27.008523Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (trimmed integer suffix)
-            u'_foo_html_erb__<anon>_<anon>'
+            "_foo_html_erb__<anon>_<anon>"
 --------------------------------------------------------------------------
 system:
-  hash: '140d61119ffa316766cf0f710bf1e7f1'
+  hash: "140d61119ffa316766cf0f710bf1e7f1"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (trimmed integer suffix)
-            u'_foo_html_erb__<anon>_<anon>'
+            "_foo_html_erb__<anon>_<anon>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames.pysnap
index b768275366..3dea5248ec 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.223350Z'
+created: '2020-02-26T19:54:27.026661Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename* (removed version)
-            u'/data/foo/releases/<version>/app/views/foo.html.erb'
+            "/data/foo/releases/<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
 --------------------------------------------------------------------------
 system:
-  hash: '00ffe2f3150414a00633fb5671a918f8'
+  hash: "00ffe2f3150414a00633fb5671a918f8"
   component:
     system*
       stacktrace*
         frame*
           filename* (removed version)
-            u'/data/foo/releases/<version>/app/views/foo.html.erb'
+            "/data/foo/releases/<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames_2.pysnap
index 9f63e59f6c..05a90f062a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_sanitizes_versioned_filenames_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.231184Z'
+created: '2020-02-26T19:54:27.039455Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename* (removed version)
-            u'<version>/app/views/foo.html.erb'
+            "<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
 --------------------------------------------------------------------------
 system:
-  hash: 'babff59ccf75f6cade7c5805f6d9aa59'
+  hash: "babff59ccf75f6cade7c5805f6d9aa59"
   component:
     system*
       stacktrace*
         frame*
           filename* (removed version)
-            u'<version>/app/views/foo.html.erb'
+            "<version>/app/views/foo.html.erb"
           context-line*
-            u'<% if @hotels.size > 0 %>'
+            "<% if @hotels.size > 0 %>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_skips_symbol_if_unknown.pysnap
index d407960564..a5fbfbf591 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_skips_symbol_if_unknown.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_skips_symbol_if_unknown.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.239252Z'
+created: '2020-02-26T19:54:27.058341Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
 --------------------------------------------------------------------------
 system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
+  hash: "a972f399399f5566f39b14a7afdd24ff"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_context_line_over_function.pysnap
index e06cf79e07..8088b0dc19 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_context_line_over_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_context_line_over_function.pysnap
@@ -1,34 +1,34 @@
 ---
-created: '2019-09-03T07:26:07.449753Z'
+created: '2020-02-26T19:54:27.075229Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'foo bar'
+            "foo bar"
           function (function name is not used if context-line is available)
-            u'bar'
+            "bar"
           lineno (line number is not used if context-line is available)
             1
 --------------------------------------------------------------------------
 system:
-  hash: '60e0a667027bef0d0b7c4882891df7e8'
+  hash: "60e0a667027bef0d0b7c4882891df7e8"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           context-line*
-            u'foo bar'
+            "foo bar"
           function (function name is not used if context-line is available)
-            u'bar'
+            "bar"
           lineno (line number is not used if context-line is available)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_function_over_lineno.pysnap
index 3a29127e4c..1d39b0a49d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_function_over_lineno.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_function_over_lineno.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-03-14T17:12:37.254927Z'
+created: '2020-02-26T19:54:27.092053Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
           lineno (function takes precedence)
             1
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
           lineno (function takes precedence)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_module_over_filename.pysnap
index 2b30e3b1b4..ad5b46320c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_module_over_filename.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_module_over_filename.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-03-14T17:12:37.263099Z'
+created: '2020-02-26T19:54:27.113252Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '299a0be4a5a79e6a59fdd251b19d78bb'
+  hash: "299a0be4a5a79e6a59fdd251b19d78bb"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_symbol_instead_of_function.pysnap
index fdf868e9a9..b38376c8d5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_symbol_instead_of_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_uses_symbol_instead_of_function.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-03-14T17:12:37.271236Z'
+created: '2020-02-26T19:54:27.128379Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'libfoo'
+            "libfoo"
           symbol*
-            u'_main'
+            "_main"
           function (symbol takes precedence)
-            u'int main()'
+            "int main()"
 --------------------------------------------------------------------------
 system:
-  hash: '01143b49f8875c22617bac5bb1aaf638'
+  hash: "01143b49f8875c22617bac5bb1aaf638"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           symbol*
-            u'_main'
+            "_main"
           function (symbol takes precedence)
-            u'int main()'
+            "int main()"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_with_only_required_vars.pysnap
index 803533c58d..4d80aa6176 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_with_only_required_vars.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/frame_with_only_required_vars.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-14T17:12:37.278929Z'
+created: '2020-02-26T19:54:27.147598Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '19fcc04a0c59eaf564ee1a00c58574cc'
+  hash: "19fcc04a0c59eaf564ee1a00c58574cc"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/hpkp.pysnap
index bc813a1870..2bf193448c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/hpkp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/hpkp.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-03-14T17:12:37.287074Z'
+created: '2020-02-26T19:54:27.166113Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
+  hash: "1e37a374cb33572622d02ff7a6237c44"
   component:
     default*
       hpkp*
         salt* (a static salt)
-          'hpkp'
+          "hpkp"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_chained.pysnap
index 8a8c7f910c..59d0d2666f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_chained.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_chained.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-03-14T17:12:37.318305Z'
+created: '2020-02-26T19:54:27.224451Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'ca1e356d85bc74d82d4ae8f3f8bfbbf7'
+  hash: "ca1e356d85bc74d82d4ae8f3f8bfbbf7"
   component:
     app*
       chained-exception*
@@ -12,496 +12,496 @@ app:
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 993
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'AbstractProtocol.java'
+                "AbstractProtocol.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 573
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'AbstractEndpoint.java'
+                "AbstractEndpoint.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 980
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'NioEndpoint.java'
+                "NioEndpoint.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 210
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'ServerSocketAdaptor.java'
+                "ServerSocketAdaptor.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 74
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'ServerSocketChannelImpl.java'
+                "ServerSocketChannelImpl.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 223
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 425
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 433
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (stacktrace and type take precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame* (frame considered in-app because no frame is in-app)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 1000
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (stacktrace and type take precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception (exception has no stacktrace)
           stacktrace (less than 10% of frames are in-app)
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 167
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value*
-            u'Failed to start component [Connector[HTTP/1.1-8080]]'
+            "Failed to start component [Connector[HTTP/1.1-8080]]"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/1.1-8080]]'
+        "Failed to start connector [Connector[HTTP/1.1-8080]]"
 --------------------------------------------------------------------------
 system:
-  hash: '8924849495809d42431719c2b9ab65c8'
+  hash: "8924849495809d42431719c2b9ab65c8"
   component:
     system*
       chained-exception*
@@ -509,483 +509,483 @@ system:
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 993
             frame*
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'AbstractProtocol.java'
+                "AbstractProtocol.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 573
             frame*
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'AbstractEndpoint.java'
+                "AbstractEndpoint.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 980
             frame*
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'NioEndpoint.java'
+                "NioEndpoint.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 210
             frame*
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'ServerSocketAdaptor.java'
+                "ServerSocketAdaptor.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 74
             frame*
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'ServerSocketChannelImpl.java'
+                "ServerSocketChannelImpl.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 223
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 425
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind'
+                "bind"
               lineno (function takes precedence)
                 433
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'Net.java'
+                "Net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (stacktrace and type take precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 150
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'Connector.java'
+                "Connector.java"
               function*
-                u'startInternal'
+                "startInternal"
               lineno (function takes precedence)
                 1000
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (stacktrace and type take precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'Application.java'
+                "Application.java"
               function*
-                u'main'
+                "main"
               lineno (function takes precedence)
                 86
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1151
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 1162
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'run'
+                "run"
               lineno (function takes precedence)
                 314
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
               lineno (function takes precedence)
                 370
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'SpringApplication.java'
+                "SpringApplication.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 737
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 122
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'AbstractApplicationContext.java'
+                "AbstractApplicationContext.java"
               function*
-                u'refresh'
+                "refresh"
               lineno (function takes precedence)
                 545
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
               lineno (function takes precedence)
                 145
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
+                "EmbeddedWebApplicationContext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
               lineno (function takes precedence)
                 297
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 190
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
+                "TomcatEmbeddedServletContainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
               lineno (function takes precedence)
                 247
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'StandardService.java'
+                "StandardService.java"
               function*
-                u'addConnector'
+                "addConnector"
               lineno (function takes precedence)
                 225
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'LifecycleBase.java'
+                "LifecycleBase.java"
               function*
-                u'start'
+                "start"
               lineno (function takes precedence)
                 167
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (stacktrace and type take precedence)
-            u'Failed to start component [Connector[HTTP/1.1-8080]]'
+            "Failed to start component [Connector[HTTP/1.1-8080]]"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_minimal.pysnap
index 6b37785ff5..11320a95ae 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_minimal.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/java_minimal.pysnap
@@ -1,1019 +1,1019 @@
 ---
-created: '2019-03-14T17:12:37.349423Z'
+created: '2020-02-26T19:54:27.284036Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'Thread.java'
+              "Thread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               844
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'TaskThread.java'
+              "TaskThread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               61
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               641
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
             lineno (function takes precedence)
               1167
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'SocketProcessorBase.java'
+              "SocketProcessorBase.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'NioEndpoint.java'
+              "NioEndpoint.java"
             function*
-              u'doRun'
+              "doRun"
             lineno (function takes precedence)
               1434
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'AbstractProtocol.java'
+              "AbstractProtocol.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               798
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'AbstractProcessorLight.java'
+              "AbstractProcessorLight.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               66
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'Http11Processor.java'
+              "Http11Processor.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               783
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'CoyoteAdapter.java'
+              "CoyoteAdapter.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               349
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'StandardEngineValve.java'
+              "StandardEngineValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               87
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'ErrorReportValve.java'
+              "ErrorReportValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               79
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'StandardHostValve.java'
+              "StandardHostValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               140
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'AuthenticatorBase.java'
+              "AuthenticatorBase.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               474
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'StandardContextValve.java'
+              "StandardContextValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               96
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'StandardWrapperValve.java'
+              "StandardWrapperValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               198
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'CharacterEncodingFilter.java'
+              "CharacterEncodingFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               197
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'HiddenHttpMethodFilter.java'
+              "HiddenHttpMethodFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               81
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'HttpPutFormContentFilter.java'
+              "HttpPutFormContentFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               105
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'RequestContextFilter.java'
+              "RequestContextFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               99
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'WsFilter.java'
+              "WsFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               52
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               230
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               729
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               846
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               622
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'doGet'
+              "doGet"
             lineno (function takes precedence)
               861
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'processRequest'
+              "processRequest"
             lineno (function takes precedence)
               970
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doService'
+              "doService"
             lineno (function takes precedence)
               897
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
             lineno (function takes precedence)
               963
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'AbstractHandlerMethodAdapter.java'
+              "AbstractHandlerMethodAdapter.java"
             function*
-              u'handle'
+              "handle"
             lineno (function takes precedence)
               85
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
             lineno (function takes precedence)
               738
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
             lineno (function takes precedence)
               827
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'ServletInvocableHandlerMethod.java'
+              "ServletInvocableHandlerMethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
             lineno (function takes precedence)
               116
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
             lineno (function takes precedence)
               133
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
             lineno (function takes precedence)
               205
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'Method.java'
+              "Method.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               564
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'DelegatingMethodAccessorImpl.java'
+              "DelegatingMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               62
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'Application.java'
+              "Application.java"
             function*
-              u'home'
+              "home"
             lineno (function takes precedence)
               30
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (stacktrace and type take precedence)
-          u'/ by zero'
+          "/ by zero"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+        "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
 --------------------------------------------------------------------------
 system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  hash: "ec87dd10e4f7512ecccb4a068c5774ae"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'Thread.java'
+              "Thread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               844
           frame*
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'TaskThread.java'
+              "TaskThread.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               61
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               641
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
+              "ThreadPoolExecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
             lineno (function takes precedence)
               1167
           frame*
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'SocketProcessorBase.java'
+              "SocketProcessorBase.java"
             function*
-              u'run'
+              "run"
             lineno (function takes precedence)
               49
           frame*
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'NioEndpoint.java'
+              "NioEndpoint.java"
             function*
-              u'doRun'
+              "doRun"
             lineno (function takes precedence)
               1434
           frame*
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'AbstractProtocol.java'
+              "AbstractProtocol.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               798
           frame*
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'AbstractProcessorLight.java'
+              "AbstractProcessorLight.java"
             function*
-              u'process'
+              "process"
             lineno (function takes precedence)
               66
           frame*
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'Http11Processor.java'
+              "Http11Processor.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               783
           frame*
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'CoyoteAdapter.java'
+              "CoyoteAdapter.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               349
           frame*
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'StandardEngineValve.java'
+              "StandardEngineValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               87
           frame*
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'ErrorReportValve.java'
+              "ErrorReportValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               79
           frame*
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'StandardHostValve.java'
+              "StandardHostValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               140
           frame*
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'AuthenticatorBase.java'
+              "AuthenticatorBase.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               474
           frame*
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'StandardContextValve.java'
+              "StandardContextValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               96
           frame*
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'StandardWrapperValve.java'
+              "StandardWrapperValve.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               198
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'CharacterEncodingFilter.java'
+              "CharacterEncodingFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               197
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'HiddenHttpMethodFilter.java'
+              "HiddenHttpMethodFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               81
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'HttpPutFormContentFilter.java'
+              "HttpPutFormContentFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               105
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'OncePerRequestFilter.java'
+              "OncePerRequestFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               107
           frame*
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'RequestContextFilter.java'
+              "RequestContextFilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
             lineno (function takes precedence)
               99
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               192
           frame*
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'WsFilter.java'
+              "WsFilter.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               52
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'doFilter'
+              "doFilter"
             lineno (function takes precedence)
               165
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'ApplicationFilterChain.java'
+              "ApplicationFilterChain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
             lineno (function takes precedence)
               230
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               729
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               846
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'HttpServlet.java'
+              "HttpServlet.java"
             function*
-              u'service'
+              "service"
             lineno (function takes precedence)
               622
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'doGet'
+              "doGet"
             lineno (function takes precedence)
               861
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'FrameworkServlet.java'
+              "FrameworkServlet.java"
             function*
-              u'processRequest'
+              "processRequest"
             lineno (function takes precedence)
               970
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doService'
+              "doService"
             lineno (function takes precedence)
               897
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'DispatcherServlet.java'
+              "DispatcherServlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
             lineno (function takes precedence)
               963
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'AbstractHandlerMethodAdapter.java'
+              "AbstractHandlerMethodAdapter.java"
             function*
-              u'handle'
+              "handle"
             lineno (function takes precedence)
               85
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
             lineno (function takes precedence)
               738
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
+              "RequestMappingHandlerAdapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
             lineno (function takes precedence)
               827
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'ServletInvocableHandlerMethod.java'
+              "ServletInvocableHandlerMethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
             lineno (function takes precedence)
               116
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
             lineno (function takes precedence)
               133
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
+              "InvocableHandlerMethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
             lineno (function takes precedence)
               205
           frame*
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'Method.java'
+              "Method.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               564
           frame*
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'DelegatingMethodAccessorImpl.java'
+              "DelegatingMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke'
+              "invoke"
             lineno (function takes precedence)
               62
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
+              "NativeMethodAccessorImpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame*
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'Application.java'
+              "Application.java"
             function*
-              u'home'
+              "home"
             lineno (function takes precedence)
               30
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (stacktrace and type take precedence)
-          u'/ by zero'
+          "/ by zero"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message.pysnap
index 51bf64bb26..d64f8115d1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-04-17T20:26:38.329000Z'
+created: '2020-02-26T19:54:27.298305Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value*
-          u'Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)'
+          "Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)"
 --------------------------------------------------------------------------
 system:
-  hash: 'ad1efff799d4f9435077701aee66dde0'
+  hash: "ad1efff799d4f9435077701aee66dde0"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value*
-          u'Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)'
+          "Loading chunk 158 failed.\n(timeout: https://s1.sentry-cdn.com/_static/34f8a6d11b9f52ebb4e5fd949650088f/sentry/dist/passwordStrength.js)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message_whistles.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message_whistles.pysnap
index 51b0035810..64a8884ab3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message_whistles.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_fallback_to_message_whistles.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-09-16T13:19:07.466034Z'
+created: '2020-02-26T19:54:27.314719Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value*
-          u'Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef'
+          "Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef"
 --------------------------------------------------------------------------
 system:
-  hash: '6de7447e45ffb49fd4fa5728aebdd488'
+  hash: "6de7447e45ffb49fd4fa5728aebdd488"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value*
-          u'Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef'
+          "Wed Apr 17 22:31:45 2019: foobar.bazblafasel@example.invalid logged in (error 42) time spent 1234.33 --- correlation id 88ee7c66-29a9-4a4a-bc26-c72d76c5de14, checksum da39a3ee5e6b4b0d3255bfef95601890afd80709 (md5 d41d8cd98f00b204e9800998ecf8427e); payload timestamp 2019-04-17T20:29:05Z (submitted from 127.0.0.1 via 2001:0db8:85a3:0000:0000:8a2e:0370:7334 via ::1) at offset 0xfeedbeef"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_no_in_app.pysnap
index ff595ec913..c3194a89fe 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_exception_no_in_app.pysnap
@@ -1,194 +1,194 @@
 ---
-created: '2019-03-14T17:12:37.362234Z'
+created: '2020-02-26T19:54:27.342709Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
             lineno (function takes precedence)
               4913
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
             lineno (function takes precedence)
               2208
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
             lineno (function takes precedence)
               17557
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
             lineno (function takes precedence)
               17266
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
             lineno (function takes precedence)
               17294
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
             lineno (function takes precedence)
               17386
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
             lineno (function takes precedence)
               16547
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
             lineno (function takes precedence)
               15744
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
             lineno (function takes precedence)
               248
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
             lineno (function takes precedence)
               195
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
+              "webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
             lineno (function takes precedence)
               3197
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
             lineno (function takes precedence)
               145
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (stacktrace and type take precedence)
-          u'varant is not defined'
+          "varant is not defined"
 --------------------------------------------------------------------------
 system:
-  hash: '60443ca22b22a43806f4358109278791'
+  hash: "60443ca22b22a43806f4358109278791"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
             lineno (function takes precedence)
               4913
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
             lineno (function takes precedence)
               2208
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
             lineno (function takes precedence)
               17557
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
             lineno (function takes precedence)
               17266
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
             lineno (function takes precedence)
               17294
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
             lineno (function takes precedence)
               17386
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
             lineno (function takes precedence)
               16547
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
             lineno (function takes precedence)
               15744
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
             lineno (function takes precedence)
               248
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
             lineno (function takes precedence)
               195
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
+              "webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
             lineno (function takes precedence)
               3197
           frame*
             filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+              "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
             lineno (function takes precedence)
               145
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (stacktrace and type take precedence)
-          u'varant is not defined'
+          "varant is not defined"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_message.pysnap
index 2b177cb601..73b95a0224 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-14T17:12:37.369461Z'
+created: '2020-02-26T19:54:27.354291Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
+  hash: "4119639092e62c55ea8be348e4d9260d"
   component:
     default*
       message*
-        u'event'
+        "event"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_chrome.pysnap
index c8765c8baa..c9ebe323ef 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_chrome.pysnap
@@ -1,154 +1,154 @@
 ---
-created: '2019-09-03T07:26:07.618200Z'
+created: '2020-02-26T19:54:27.375454Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (frame considered in-app because no frame is in-app)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.callback'
+              "Object.callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.aha'
+              "Object.aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'be36642f41f047346396f018f62375d3'
+  hash: "be36642f41f047346396f018f62375d3"
   component:
     system*
       exception*
         stacktrace
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.callback'
+              "Object.callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'Object.aha'
+              "Object.aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_edge.pysnap
index b84f3ef431..d6f31b4e88 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_edge.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-09-03T07:26:07.631524Z'
+created: '2020-02-26T19:54:27.400857Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               17
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '7abcb72eb9800b9f38b37f448697a673'
+  hash: "7abcb72eb9800b9f38b37f448697a673"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame*
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'Anonymous function'
+              "Anonymous function"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               17
           frame
             filename (ignored because filename is a URL)
-              u'/Home/Desktop/test.html'
+              "/Home/Desktop/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_firefox.pysnap
index 6d3b1c687d..79e684b70b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_firefox.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-09-03T07:26:07.644295Z'
+created: '2020-02-26T19:54:27.420542Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test/<'
+              "test/<"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'be36642f41f047346396f018f62375d3'
+  hash: "be36642f41f047346396f018f62375d3"
   component:
     system*
       exception*
         stacktrace
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
             lineno (line number is not used if module or filename are available)
               1
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test/<'
+              "test/<"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame
             filename (ignored because filename is a URL)
-              u'/private/tmp/test.html'
+              "/private/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_chrome.pysnap
index 945ff48d6c..cd403a1c6e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_chrome.pysnap
@@ -1,190 +1,190 @@
 ---
-created: '2019-09-03T07:26:07.657855Z'
+created: '2020-02-26T19:54:27.439751Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame (frame considered in-app because no frame is in-app)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'a06d7f718dc06157e7b8391cc5e56f10'
+  hash: "a06d7f718dc06157e7b8391cc5e56f10"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function (function name is not used if module or filename are available)
-              u'Array.map'
+              "Array.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_edge.pysnap
index cccf2ee591..4997d4cf57 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_edge.pysnap
@@ -1,198 +1,198 @@
 ---
-created: '2019-05-08T19:44:34.480250Z'
+created: '2020-02-26T19:54:27.467317Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               17
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'e834aba6bf7b758128da092a68a18e9a'
+  hash: "e834aba6bf7b758128da092a68a18e9a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
             lineno (function takes precedence)
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               17
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_firefox.pysnap
index 3b2950d960..074222a86f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_firefox.pysnap
@@ -1,184 +1,184 @@
 ---
-created: '2019-05-10T13:21:30.564413Z'
+created: '2020-02-26T19:54:27.486633Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test/<'
+              "test/<"
             lineno (function takes precedence)
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '71036056ea01a28f0931ab8e951206e2'
+  hash: "71036056ea01a28f0931ab8e951206e2"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'eval'
+              "eval"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test/<'
+              "test/<"
             lineno (function takes precedence)
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_safari.pysnap
index 0c0ee92220..0b55998607 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_http_safari.pysnap
@@ -1,180 +1,180 @@
 ---
-created: '2019-09-03T07:26:07.698717Z'
+created: '2020-02-26T19:54:27.507300Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '1ff8b3514536db084acc996865d7efd6'
+  hash: "1ff8b3514536db084acc996865d7efd6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               49
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'testMethod'
+              "testMethod"
             lineno (function takes precedence)
               43
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               38
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'test'
+              "test"
             lineno (function takes precedence)
               32
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             lineno*
               33
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callback'
+              "callback"
             lineno (function takes precedence)
               24
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (function takes precedence)
               19
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'/test.html'
+              "/test.html"
             function*
-              u'aha'
+              "aha"
             lineno (function takes precedence)
               18
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_safari.pysnap
index 7e0d8f3c55..9f6ad87e88 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_safari.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-09-03T07:26:07.711906Z'
+created: '2020-02-26T19:54:27.527586Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame (frame considered in-app because no frame is in-app)
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'be36642f41f047346396f018f62375d3'
+  hash: "be36642f41f047346396f018f62375d3"
   component:
     system*
       exception*
         stacktrace
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               49
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'testMethod'
+              "testMethod"
             lineno (line number is not used if module or filename are available)
               43
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               38
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'eval'
+              "eval"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'test'
+              "test"
             lineno (line number is not used if module or filename are available)
               32
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'map'
+              "map"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             lineno (line number is not used if module or filename are available)
               33
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callback'
+              "callback"
             lineno (line number is not used if module or filename are available)
               24
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'callAnotherThing'
+              "callAnotherThing"
             lineno (line number is not used if module or filename are available)
               19
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
           frame
             filename (ignored because filename is a URL)
-              u'/tmp/test.html'
+              "/tmp/test.html"
             function (function name is not used if module or filename are available)
-              u'aha'
+              "aha"
             lineno (line number is not used if module or filename are available)
               18
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_firefox.pysnap
index 6661c0ca94..ca456a3e84 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_firefox.pysnap
@@ -1,410 +1,410 @@
 ---
-created: '2019-09-03T07:26:07.737231Z'
+created: '2020-02-26T19:54:27.567632Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '7e5b9ebe8c869ab99af044367bf7d347'
+  hash: "7e5b9ebe8c869ab99af044367bf7d347"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js"
             context-line*
-              u'        fn();'
+              "        fn();"
             function (function name is not used if context-line is available)
-              u'M'
+              "M"
             lineno (line number is not used if context-line is available)
               18
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u"    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               92
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u'            result = handler(value); // may throw'
+              "            result = handler(value); // may throw"
             function (function name is not used if context-line is available)
-              u'run'
+              "run"
             lineno (line number is not used if context-line is available)
               75
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        return this._invoke(method, arg);'
+              "        return this._invoke(method, arg);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               114
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               288
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               100
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               13
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               130
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'If'
+              "If"
             lineno (function takes precedence)
               200
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               204
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               205
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'rh'
+              "rh"
             lineno (function takes precedence)
               213
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'X'
+              "X"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1017871644/events/latest/ 404'
+          "GET /issues/1017871644/events/latest/ 404"
 --------------------------------------------------------------------------
 system:
-  hash: 'e8f6c1a30ea99526223c0bba1bcd8c13'
+  hash: "e8f6c1a30ea99526223c0bba1bcd8c13"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask.js"
             context-line*
-              u'        fn();'
+              "        fn();"
             function (function name is not used if context-line is available)
-              u'M'
+              "M"
             lineno (line number is not used if context-line is available)
               18
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u"    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               92
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js'
+              "/usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise.js"
             context-line*
-              u'            result = handler(value); // may throw'
+              "            result = handler(value); // may throw"
             function (function name is not used if context-line is available)
-              u'run'
+              "run"
             lineno (line number is not used if context-line is available)
               75
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        return this._invoke(method, arg);'
+              "        return this._invoke(method, arg);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               114
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               288
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               100
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               13
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'this'
+              "this"
             lineno (function takes precedence)
               130
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'If'
+              "If"
             lineno (function takes precedence)
               200
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               204
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               205
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'rh'
+              "rh"
             lineno (function takes precedence)
               213
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'X'
+              "X"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1017871644/events/latest/ 404'
+          "GET /issues/1017871644/events/latest/ 404"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_safari.pysnap
index 30a33cbc5a..eef318aec4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/javascript_xbrowser_sentryui_safari.pysnap
@@ -1,328 +1,328 @@
 ---
-created: '2019-09-03T07:26:07.759670Z'
+created: '2020-02-26T19:54:27.597109Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '7e5b9ebe8c869ab99af044367bf7d347'
+  hash: "7e5b9ebe8c869ab99af044367bf7d347"
   component:
     app*
       exception*
         stacktrace*
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               288
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'call'
+              "call"
             lineno (line number is not used if context-line is available)
               100
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'setState'
+              "setState"
             lineno (function takes precedence)
               14
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             lineno (function takes precedence)
               130
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'tag'
+              "tag"
             lineno (function takes precedence)
               201
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               205
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               206
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'ih'
+              "ih"
             lineno (function takes precedence)
               214
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'q'
+              "q"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'fetchData'
+              "fetchData"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1018239786/events/latest/ 404'
+          "GET /issues/1018239786/events/latest/ 404"
 --------------------------------------------------------------------------
 system:
-  hash: '6e03a501145e36faab4fa152bb3b6a62'
+  hash: "6e03a501145e36faab4fa152bb3b6a62"
   component:
     system*
       exception*
         stacktrace*
           frame (native code indicated by filename)
             function (function name is not used if module or filename are available)
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
             function (function name is not used if context-line is available)
-              u'_next'
+              "_next"
             lineno (line number is not used if context-line is available)
               25
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
+              "/usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
             context-line*
-              u'    var info = gen[key](arg);'
+              "    var info = gen[key](arg);"
             function (function name is not used if context-line is available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             lineno (line number is not used if context-line is available)
               3
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'        var record = tryCatch(innerFn, self, context);'
+              "        var record = tryCatch(innerFn, self, context);"
             function (function name is not used if context-line is available)
-              u'key'
+              "key"
             lineno (line number is not used if context-line is available)
               288
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js'
+              "/usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime.js"
             context-line*
-              u'      return { type: "normal", arg: fn.call(obj, arg) };'
+              "      return { type: \"normal\", arg: fn.call(obj, arg) };"
             function (function name is not used if context-line is available)
-              u'tryCatch'
+              "tryCatch"
             lineno (line number is not used if context-line is available)
               62
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'./app/components/lazyLoad.jsx'
+              "./app/components/lazyLoad.jsx"
             context-line*
-              u'      this.setState({'
+              "      this.setState({"
             function (function name is not used if context-line is available)
-              u'call'
+              "call"
             lineno (line number is not used if context-line is available)
               100
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'setState'
+              "setState"
             lineno (function takes precedence)
               14
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             lineno (function takes precedence)
               130
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'tag'
+              "tag"
             lineno (function takes precedence)
               201
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Yg'
+              "Yg"
             lineno (function takes precedence)
               205
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'Xg'
+              "Xg"
             lineno (function takes precedence)
               206
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js'
+              "/usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production.min.js"
             context-line (discarded because line too long)
             function*
-              u'ih'
+              "ih"
             lineno (function takes precedence)
               214
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    this.fetchData();'
+              "    this.fetchData();"
             function (function name is not used if context-line is available)
-              u'q'
+              "q"
             lineno (line number is not used if context-line is available)
               42
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'./app/views/groupDetails/shared/groupEventDetails.jsx'
+              "./app/views/groupDetails/shared/groupEventDetails.jsx"
             context-line*
-              u'    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "    fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
             function (function name is not used if context-line is available)
-              u'fetchData'
+              "fetchData"
             lineno (line number is not used if context-line is available)
               96
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'./app/api.jsx'
+              "./app/api.jsx"
             context-line*
-              u'    const preservedError = new Error();'
+              "    const preservedError = new Error();"
             function (function name is not used if context-line is available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             lineno (line number is not used if context-line is available)
               276
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (stacktrace and type take precedence)
-          u'GET /issues/1018239786/events/latest/ 404'
+          "GET /issues/1018239786/events/latest/ 404"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel.pysnap
index 3671685c72..10ebbcc978 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel.pysnap
@@ -1,922 +1,922 @@
 ---
-created: '2019-09-03T07:26:07.801071Z'
+created: '2020-02-26T19:54:27.654897Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (less than 10% of frames are in-app)
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/public/index.php'
+              "/public/index.php"
             context-line*
-              u'    $request = Illuminate\\Http\\Request::capture()'
+              "    $request = Illuminate\\Http\\Request::capture()"
             function (function name is not used if context-line is available)
-              u'require_once'
+              "require_once"
             lineno (line number is not used if context-line is available)
               55
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            $response = $this->sendRequestThroughRouter($request);'
+              "            $response = $this->sendRequestThroughRouter($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             lineno (line number is not used if context-line is available)
               116
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'                    ->then($this->dispatchToRouter());'
+              "                    ->then($this->dispatchToRouter());"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             lineno (line number is not used if context-line is available)
               151
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             lineno (line number is not used if context-line is available)
               62
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             lineno (line number is not used if context-line is available)
               27
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/fideloper/proxy/src/TrustProxies.php'
+              "/vendor/fideloper/proxy/src/TrustProxies.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             lineno (line number is not used if context-line is available)
               57
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            return $this->router->dispatch($request);'
+              "            return $this->router->dispatch($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             lineno (line number is not used if context-line is available)
               176
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->dispatchToRoute($request);'
+              "        return $this->dispatchToRoute($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             lineno (line number is not used if context-line is available)
               612
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->runRoute($request, $this->findRoute($request));'
+              "        return $this->runRoute($request, $this->findRoute($request));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             lineno (line number is not used if context-line is available)
               623
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'            $this->runRouteWithinStack($route, $request)'
+              "            $this->runRouteWithinStack($route, $request)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             lineno (line number is not used if context-line is available)
               657
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                        });'
+              "                        });"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             lineno (line number is not used if context-line is available)
               682
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php"
             context-line*
-              u'        return $this->encrypt($next($this->decrypt($request)));'
+              "        return $this->encrypt($next($this->decrypt($request)));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             lineno (line number is not used if context-line is available)
               66
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php"
             context-line*
-              u'        $response = $next($request);'
+              "        $response = $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             lineno (line number is not used if context-line is available)
               37
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
+              "/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php"
             context-line*
-              u'            $response = $next($request), $session'
+              "            $response = $next($request), $session"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             lineno (line number is not used if context-line is available)
               59
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
+              "/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             lineno (line number is not used if context-line is available)
               49
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php"
             context-line*
-              u'            return tap($next($request), function ($response) use ($request) {'
+              "            return tap($next($request), function ($response) use ($request) {"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             lineno (line number is not used if context-line is available)
               75
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             lineno (line number is not used if context-line is available)
               41
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                                $request, $route->run()'
+              "                                $request, $route->run()"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               680
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u'            return $this->runCallable();'
+              "            return $this->runCallable();"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             lineno (line number is not used if context-line is available)
               179
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             lineno (line number is not used if context-line is available)
               205
           frame*
             filename*
-              u'/routes/web.php'
+              "/routes/web.php"
             context-line*
-              u"    throw new Exception('LARAVEL TEST');"
+              "    throw new Exception('LARAVEL TEST');"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             lineno (line number is not used if context-line is available)
               22
         type*
-          u'Exception'
+          "Exception"
         value*
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '89037a724fe48e9f6144c3a14e182b9c'
+  hash: "89037a724fe48e9f6144c3a14e182b9c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/public/index.php'
+              "/public/index.php"
             context-line*
-              u'    $request = Illuminate\\Http\\Request::capture()'
+              "    $request = Illuminate\\Http\\Request::capture()"
             function (function name is not used if context-line is available)
-              u'require_once'
+              "require_once"
             lineno (line number is not used if context-line is available)
               55
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            $response = $this->sendRequestThroughRouter($request);'
+              "            $response = $this->sendRequestThroughRouter($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             lineno (line number is not used if context-line is available)
               116
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'                    ->then($this->dispatchToRouter());'
+              "                    ->then($this->dispatchToRouter());"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             lineno (line number is not used if context-line is available)
               151
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             lineno (line number is not used if context-line is available)
               62
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             lineno (line number is not used if context-line is available)
               27
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/fideloper/proxy/src/TrustProxies.php'
+              "/vendor/fideloper/proxy/src/TrustProxies.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             lineno (line number is not used if context-line is available)
               57
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php"
             context-line*
-              u'            return $this->router->dispatch($request);'
+              "            return $this->router->dispatch($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             lineno (line number is not used if context-line is available)
               176
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->dispatchToRoute($request);'
+              "        return $this->dispatchToRoute($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             lineno (line number is not used if context-line is available)
               612
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'        return $this->runRoute($request, $this->findRoute($request));'
+              "        return $this->runRoute($request, $this->findRoute($request));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             lineno (line number is not used if context-line is available)
               623
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'            $this->runRouteWithinStack($route, $request)'
+              "            $this->runRouteWithinStack($route, $request)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             lineno (line number is not used if context-line is available)
               657
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                        });'
+              "                        });"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             lineno (line number is not used if context-line is available)
               682
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'        return $pipeline($this->passable);'
+              "        return $pipeline($this->passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             lineno (line number is not used if context-line is available)
               104
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php"
             context-line*
-              u'        return $this->encrypt($next($this->decrypt($request)));'
+              "        return $this->encrypt($next($this->decrypt($request)));"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             lineno (line number is not used if context-line is available)
               66
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
+              "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php"
             context-line*
-              u'        $response = $next($request);'
+              "        $response = $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             lineno (line number is not used if context-line is available)
               37
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
+              "/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php"
             context-line*
-              u'            $response = $next($request), $session'
+              "            $response = $next($request), $session"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             lineno (line number is not used if context-line is available)
               59
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
+              "/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             lineno (line number is not used if context-line is available)
               49
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
+              "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php"
             context-line*
-              u'            return tap($next($request), function ($response) use ($request) {'
+              "            return tap($next($request), function ($response) use ($request) {"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             lineno (line number is not used if context-line is available)
               75
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php"
             context-line*
-              u'        return $next($request);'
+              "        return $next($request);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             lineno (line number is not used if context-line is available)
               41
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                return $destination($passable);'
+              "                return $destination($passable);"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               30
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Router.php"
             context-line*
-              u'                                $request, $route->run()'
+              "                                $request, $route->run()"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             lineno (line number is not used if context-line is available)
               680
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u'            return $this->runCallable();'
+              "            return $this->runCallable();"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             lineno (line number is not used if context-line is available)
               179
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Route.php"
             context-line*
-              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             lineno (line number is not used if context-line is available)
               205
           frame*
             filename*
-              u'/routes/web.php'
+              "/routes/web.php"
             context-line*
-              u"    throw new Exception('LARAVEL TEST');"
+              "    throw new Exception('LARAVEL TEST');"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             lineno (line number is not used if context-line is available)
               22
         type*
-          u'Exception'
+          "Exception"
         value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap
index ecdc5f2566..9e6554dafc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap
@@ -1,76 +1,76 @@
 ---
-created: '2020-01-15T14:24:39.451185Z'
+created: '2020-02-26T19:54:27.675057Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '260f8f0a5856cd6db03c549b83080d5d'
+  hash: "260f8f0a5856cd6db03c549b83080d5d"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
             lineno (line number is not used if context-line is available)
               53
           frame (non app frame)
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
         type*
-          u'Exception'
+          "Exception"
         value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: 'babe97015e0a63eaaab253c266bae20d'
+  hash: "babe97015e0a63eaaab253c266bae20d"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'/server.php'
+              "/server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
             lineno (line number is not used if context-line is available)
               21
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php"
             context-line*
-              u'                    return $callable($passable);'
+              "                    return $callable($passable);"
             function (function name is not used if context-line is available)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
             lineno (line number is not used if context-line is available)
               53
           frame*
             filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+              "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php"
             context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
+              "                                ? $pipe->{$this->method}(...$parameters)"
             function (function name is not used if context-line is available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             lineno (line number is not used if context-line is available)
               163
         type*
-          u'Exception'
+          "Exception"
         value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_prefers_message.pysnap
index d5df591a29..4acbd660a9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-14T17:12:37.403262Z'
+created: '2020-02-26T19:54:27.688954Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_uses_formatted.pysnap
index 7787efae49..f814050e40 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/logentry_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-14T17:12:37.410278Z'
+created: '2020-02-26T19:54:27.705952Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
+  hash: "329b29efcf1f77067a063e34f56e7791"
   component:
     default*
       message*
-        u'Hello there world!'
+        "Hello there world!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_prefers_message.pysnap
index 3fd39f009a..612551e205 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-14T17:12:37.416778Z'
+created: '2020-02-26T19:54:27.721503Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_uses_formatted.pysnap
index 7589e8ba68..8de16af5b9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/message_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-14T17:12:37.424210Z'
+created: '2020-02-26T19:54:27.734195Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
+  hash: "d3f5e52d24e9c1eae5abe6c866cced63"
   component:
     default*
       message*
-        u'Hello there Peter!'
+        "Hello there Peter!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/minified_javascript.pysnap
index 32b3f9b007..110e219f5c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/minified_javascript.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/minified_javascript.pysnap
@@ -1,462 +1,462 @@
 ---
-created: '2019-03-14T17:12:37.439615Z'
+created: '2020-02-26T19:54:27.774505Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'M'
+              "M"
             lineno (function takes precedence)
               172
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'S/<'
+              "S/<"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'i'
+              "i"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'b'
+              "b"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/</a</<'
+              "e/</a</<"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/<'
+              "t.exports/<"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'L'
+              "L"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/</<'
+              "t.exports/</<"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'c'
+              "c"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'componentPromise'
+              "componentPromise"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'o.e'
+              "o.e"
             lineno (function takes precedence)
               1
           frame* (frame considered in-app because no frame is in-app)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
             lineno (function takes precedence)
               14
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
 --------------------------------------------------------------------------
 system:
-  hash: '074e2ed5d89f602d31be5742ac107fef'
+  hash: "074e2ed5d89f602d31be5742ac107fef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'M'
+              "M"
             lineno (function takes precedence)
               172
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'S/<'
+              "S/<"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'i'
+              "i"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'b'
+              "b"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/</a</<'
+              "e/</a</<"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/<'
+              "t.exports/<"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'L'
+              "L"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u't.exports/</<'
+              "t.exports/</<"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'c'
+              "c"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'n'
+              "n"
             lineno (function takes precedence)
               64
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'W'
+              "W"
             lineno (function takes precedence)
               147
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'e/<'
+              "e/<"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'componentPromise'
+              "componentPromise"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js"
             context-line (discarded because line too long)
             function*
-              u'o.e'
+              "o.e"
             lineno (function takes precedence)
               1
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
+              "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js"
             context-line (discarded because line too long)
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
             lineno (function takes precedence)
               14
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_complex_function_names.pysnap
index 931673a9aa..a7dced73d0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_complex_function_names.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_complex_function_names.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-09-03T07:26:07.864619Z'
+created: '2020-02-26T19:54:27.988807Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)"
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)"
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)"
           frame
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)"
           frame
             function (function name is not used if module or filename are available)
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_limit_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_limit_frames.pysnap
index e9cc795582..975b0167bc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_limit_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_limit_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-09-03T07:26:07.881126Z'
+created: '2020-02-26T19:54:28.119869Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)"
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)"
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)"
           frame
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)"
           frame
             function (function name is not used if module or filename are available)
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_no_filenames.pysnap
index c11e5e95e0..63c5c09470 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_no_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_no_filenames.pysnap
@@ -1,110 +1,110 @@
 ---
-created: '2019-09-17T14:11:55.451365Z'
+created: '2020-02-26T19:54:28.326044Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'<sentry::integrations::log::Logger as log::Log>::log'
+              "<sentry::integrations::log::Logger as log::Log>::log"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'<unknown>'
+              "<unknown>"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'<redacted>'
+              "<redacted>"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame
             function (function name is not used if module or filename are available)
-              u'<sentry::integrations::log::Logger as log::Log>::log'
+              "<sentry::integrations::log::Logger as log::Log>::log"
           frame
             function (function name is not used if module or filename are available)
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame
             function (function name is not used if module or filename are available)
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame
             function (function name is not used if module or filename are available)
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame
             function (function name is not used if module or filename are available)
-              u'<unknown>'
+              "<unknown>"
           frame
             function (function name is not used if module or filename are available)
-              u'<redacted>'
+              "<redacted>"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_unlimited_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_unlimited_frames.pysnap
index 635f3c0b37..ede2de1c6e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_unlimited_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_unlimited_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-09-03T07:26:07.932400Z'
+created: '2020-02-26T19:54:28.351104Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)"
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)"
           frame (frame considered in-app because no frame is in-app)
             function (function name is not used if module or filename are available)
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated(unsigned long,unsigned short,_GUID const &,_GUID const &,_GUID const &,HKL__ *,unsigned long)"
           frame
             function (function name is not used if module or filename are available)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent(char const *,char const *,char const *)"
           frame
             function (function name is not used if module or filename are available)
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_windows_anon_namespace.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_windows_anon_namespace.pysnap
index 6f830b1770..eb0cc2bb8d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_windows_anon_namespace.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_windows_anon_namespace.pysnap
@@ -1,96 +1,96 @@
 ---
-created: '2019-09-10T09:51:02.717347Z'
+created: '2020-02-26T19:54:28.397519Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
             lineno (function takes precedence)
               288
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
             lineno (function takes precedence)
               78
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               35
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
             lineno (function takes precedence)
               28
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'?A0xc3a0617d::crash'
+              "?A0xc3a0617d::crash"
             lineno (function takes precedence)
               24
         type*
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value (stacktrace and type take precedence)
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
 --------------------------------------------------------------------------
 system:
-  hash: 'f133068802b8a7f6162e0c7d8fc6b984'
+  hash: "f133068802b8a7f6162e0c7d8fc6b984"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
             lineno (function takes precedence)
               288
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
             lineno (function takes precedence)
               78
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               35
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
             lineno (function takes precedence)
               28
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'?A0xc3a0617d::crash'
+              "?A0xc3a0617d::crash"
             lineno (function takes precedence)
               24
         type*
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value (stacktrace and type take precedence)
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_with_function_name.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_with_function_name.pysnap
index c5c83ce043..e298cb10f8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_with_function_name.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/native_with_function_name.pysnap
@@ -1,96 +1,96 @@
 ---
-created: '2019-04-27T19:27:05.532842Z'
+created: '2020-02-26T19:54:28.432813Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               47
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             symbol*
-              u'_ZN12_GLOBAL__N_15startEv'
+              "_ZN12_GLOBAL__N_15startEv"
             function (symbol takes precedence)
-              u'(anonymous namespace)::start()'
+              "(anonymous namespace)::start()"
             lineno (symbol takes precedence)
               40
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             symbol*
-              u'_ZN12_GLOBAL__N_15crashEii'
+              "_ZN12_GLOBAL__N_15crashEii"
             function (symbol takes precedence)
-              u'(anonymous namespace)::crash(int, int)'
+              "(anonymous namespace)::crash(int, int)"
             lineno (symbol takes precedence)
               36
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             symbol*
-              u'_ZN12_GLOBAL__N_19something6nested3FooINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEE5crashEii'
+              "_ZN12_GLOBAL__N_19something6nested3FooINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEE5crashEii"
             function (symbol takes precedence)
-              u'(anonymous namespace)::something::nested::Foo<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std:...'
+              "(anonymous namespace)::something::nested::Foo<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std:..."
             lineno (symbol takes precedence)
               28
         type*
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value (stacktrace and type take precedence)
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
 --------------------------------------------------------------------------
 system:
-  hash: '7b28306805da7fea54ee3441e8e1dc1a'
+  hash: "7b28306805da7fea54ee3441e8e1dc1a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               47
           frame*
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             symbol*
-              u'_ZN12_GLOBAL__N_15startEv'
+              "_ZN12_GLOBAL__N_15startEv"
             function (symbol takes precedence)
-              u'(anonymous namespace)::start()'
+              "(anonymous namespace)::start()"
             lineno (symbol takes precedence)
               40
           frame*
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             symbol*
-              u'_ZN12_GLOBAL__N_15crashEii'
+              "_ZN12_GLOBAL__N_15crashEii"
             function (symbol takes precedence)
-              u'(anonymous namespace)::crash(int, int)'
+              "(anonymous namespace)::crash(int, int)"
             lineno (symbol takes precedence)
               36
           frame*
             filename*
-              u'../macos/main.cpp'
+              "../macos/main.cpp"
             symbol*
-              u'_ZN12_GLOBAL__N_19something6nested3FooINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEE5crashEii'
+              "_ZN12_GLOBAL__N_19something6nested3FooINSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEE5crashEii"
             function (symbol takes precedence)
-              u'(anonymous namespace)::something::nested::Foo<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std:...'
+              "(anonymous namespace)::something::nested::Foo<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std:..."
             lineno (symbol takes precedence)
               28
         type*
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value (stacktrace and type take precedence)
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/node_exception_weird.pysnap
index 32a5e4d379..4ab1931dcc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/node_exception_weird.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/node_exception_weird.pysnap
@@ -1,238 +1,238 @@
 ---
-created: '2019-09-03T07:26:07.963390Z'
+created: '2020-02-26T19:54:28.459367Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'bc6bc0f8bfa8a2fe5f0e4034384bfec1'
+  hash: "bc6bc0f8bfa8a2fe5f0e4034384bfec1"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     */'
+              "     */"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
             lineno (line number is not used if context-line is available)
               171
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
             lineno (function takes precedence)
               808
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return fn.apply(this, arguments);'
+              "        return fn.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
             lineno (line number is not used if context-line is available)
               150
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'          })();'
+              "          })();"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               446
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'                return specificMockImpl.apply(this, arguments);'
+              "                return specificMockImpl.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'finalReturnValue'
+              "finalReturnValue"
             lineno (line number is not used if context-line is available)
               437
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return original.apply(this, arguments);'
+              "        return original.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               806
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts"
             context-line*
-              u'    if (maxBreadcrumbs <= 0) {'
+              "    if (maxBreadcrumbs <= 0) {"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
             lineno (line number is not used if context-line is available)
               255
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     * @returns Scope, the new cloned scope'
+              "     * @returns Scope, the new cloned scope"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts"
             context-line*
-              u'    promisedEvent'
+              "    promisedEvent"
             function (function name is not used if context-line is available)
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
             lineno (line number is not used if context-line is available)
               110
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
             lineno (function takes precedence)
               2093
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bla'
+          "bla"
 --------------------------------------------------------------------------
 system:
-  hash: '6a3275e56067560bf20cb311f724f897'
+  hash: "6a3275e56067560bf20cb311f724f897"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     */'
+              "     */"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
             lineno (line number is not used if context-line is available)
               171
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
             lineno (function takes precedence)
               808
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return fn.apply(this, arguments);'
+              "        return fn.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
             lineno (line number is not used if context-line is available)
               150
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'          })();'
+              "          })();"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               446
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'                return specificMockImpl.apply(this, arguments);'
+              "                return specificMockImpl.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'finalReturnValue'
+              "finalReturnValue"
             lineno (line number is not used if context-line is available)
               437
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+              "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js"
             context-line*
-              u'        return original.apply(this, arguments);'
+              "        return original.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
             lineno (line number is not used if context-line is available)
               806
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts"
             context-line*
-              u'    if (maxBreadcrumbs <= 0) {'
+              "    if (maxBreadcrumbs <= 0) {"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
             lineno (line number is not used if context-line is available)
               255
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+              "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js"
             context-line*
-              u'     * @returns Scope, the new cloned scope'
+              "     * @returns Scope, the new cloned scope"
             function (function name is not used if context-line is available)
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
             lineno (line number is not used if context-line is available)
               91
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts"
             context-line*
-              u'    promisedEvent'
+              "    promisedEvent"
             function (function name is not used if context-line is available)
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
             lineno (line number is not used if context-line is available)
               110
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
+              "/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
             lineno (function takes precedence)
               2093
         type*
-          u'Error'
+          "Error"
         value (stacktrace and type take precedence)
-          u'bla'
+          "bla"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_exception_base.pysnap
index ba1d7e9e79..422c1dc400 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_exception_base.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-03T22:37:15.346805Z'
+created: '2020-02-26T19:54:28.472520Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       chained-exception (ignored because hash matches system variant)
@@ -12,27 +12,27 @@ app:
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame* (frame considered in-app because no frame is in-app)
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9aef9026a457d312531c07644b271314'
+  hash: "9aef9026a457d312531c07644b271314"
   component:
     system*
       chained-exception*
@@ -40,21 +40,21 @@ system:
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'foo/baz.py'
+                "foo/baz.py"
               lineno*
                 1
           type*
-            u'ValueError'
+            "ValueError"
           value (stacktrace and type take precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_away_from_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_away_from_crash.pysnap
index a99de29e68..75d5275941 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_away_from_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_away_from_crash.pysnap
@@ -1,246 +1,246 @@
 ---
-created: '2019-09-03T07:26:07.991355Z'
+created: '2020-02-26T19:54:28.502977Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '79f7443afa4022bb3e5093e765e755bb'
+  hash: "79f7443afa4022bb3e5093e765e755bb"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (stacktrace and type take precedence)
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '5586fbb54ed18866eea266e91cee7f8b'
+  hash: "5586fbb54ed18866eea266e91cee7f8b"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame*
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (stacktrace and type take precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_towards_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_towards_crash.pysnap
index f287371727..99142a0cd1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_towards_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_grouping_enhancer_towards_crash.pysnap
@@ -1,246 +1,246 @@
 ---
-created: '2019-09-03T07:26:08.010099Z'
+created: '2020-02-26T19:54:28.562850Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value*
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '20fc367de6e7f2dcfd2f08ddd4fd8618'
+  hash: "20fc367de6e7f2dcfd2f08ddd4fd8618"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'django/core/handlers/base.py'
+              "django/core/handlers/base.py"
             context-line*
-              u'                    response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "                    response = wrapped_callback(request, *callback_args, **callback_kwargs)"
             function (function name is not used if context-line is available)
-              u'get_response'
+              "get_response"
             lineno (line number is not used if context-line is available)
               112
           frame*
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'            return self.dispatch(request, *args, **kwargs)'
+              "            return self.dispatch(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'view'
+              "view"
             lineno (line number is not used if context-line is available)
               69
           frame*
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'            return bound_func(*args, **kwargs)'
+              "            return bound_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'_wrapper'
+              "_wrapper"
             lineno (line number is not used if context-line is available)
               29
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'django/views/decorators/csrf.py'
+              "django/views/decorators/csrf.py"
             context-line*
-              u'        return view_func(*args, **kwargs)'
+              "        return view_func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'wrapped_view'
+              "wrapped_view"
             lineno (line number is not used if context-line is available)
               57
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'django/utils/decorators.py'
+              "django/utils/decorators.py"
             context-line*
-              u'                return func(self, *args2, **kwargs2)'
+              "                return func(self, *args2, **kwargs2)"
             function (function name is not used if context-line is available)
-              u'bound_func'
+              "bound_func"
             lineno (line number is not used if context-line is available)
               25
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "        return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               37
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'django/views/generic/base.py'
+              "django/views/generic/base.py"
             context-line*
-              u'        return handler(request, *args, **kwargs)'
+              "        return handler(request, *args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'dispatch'
+              "dispatch"
             lineno (line number is not used if context-line is available)
               87
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'sentry/web/frontend/release_webhook.py'
+              "sentry/web/frontend/release_webhook.py"
             context-line*
-              u'            hook.handle(request)'
+              "            hook.handle(request)"
             function (function name is not used if context-line is available)
-              u'post'
+              "post"
             lineno (line number is not used if context-line is available)
               127
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'sentry_plugins/heroku/plugin.py'
+              "sentry_plugins/heroku/plugin.py"
             context-line*
-              u"        email = request.POST['user']"
+              "        email = request.POST['user']"
             function (function name is not used if context-line is available)
-              u'handle'
+              "handle"
             lineno (line number is not used if context-line is available)
               17
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'django/utils/datastructures.py'
+              "django/utils/datastructures.py"
             context-line*
-              u'            raise MultiValueDictKeyError(repr(key))'
+              "            raise MultiValueDictKeyError(repr(key))"
             function (function name is not used if context-line is available)
-              u'__getitem__'
+              "__getitem__"
             lineno (line number is not used if context-line is available)
               301
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (stacktrace and type take precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_http_error.pysnap
index faed4eb32b..ffa8af5acf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_http_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/python_http_error.pysnap
@@ -1,99 +1,99 @@
 ---
-created: '2019-09-03T07:26:08.021024Z'
+created: '2020-02-26T19:54:28.601685Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '55b71821bccfe62d0df089e2f406c651'
+  hash: "55b71821bccfe62d0df089e2f406c651"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'                result = func(*args, **kwargs)'
+              "                result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               29
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'sentry/integrations/slack/notify_action.py'
+              "sentry/integrations/slack/notify_action.py"
             context-line*
-              u'            resp.raise_for_status()'
+              "            resp.raise_for_status()"
             function (function name is not used if context-line is available)
-              u'send_notification'
+              "send_notification"
             lineno (line number is not used if context-line is available)
               119
           frame (non app frame)
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'requests/models.py'
+              "requests/models.py"
             context-line*
-              u'            raise HTTPError(http_error_msg, response=self)'
+              "            raise HTTPError(http_error_msg, response=self)"
             function (function name is not used if context-line is available)
-              u'raise_for_status'
+              "raise_for_status"
             lineno (line number is not used if context-line is available)
               940
         type*
-          u'HTTPError'
+          "HTTPError"
         value (stacktrace and type take precedence)
-          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
+          "429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: 'a140a9ee6bbfb7ca9c21234dc287f2a6'
+  hash: "a140a9ee6bbfb7ca9c21234dc287f2a6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'sentry/utils/safe.py'
+              "sentry/utils/safe.py"
             context-line*
-              u'                result = func(*args, **kwargs)'
+              "                result = func(*args, **kwargs)"
             function (function name is not used if context-line is available)
-              u'safe_execute'
+              "safe_execute"
             lineno (line number is not used if context-line is available)
               29
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'sentry/integrations/slack/notify_action.py'
+              "sentry/integrations/slack/notify_action.py"
             context-line*
-              u'            resp.raise_for_status()'
+              "            resp.raise_for_status()"
             function (function name is not used if context-line is available)
-              u'send_notification'
+              "send_notification"
             lineno (line number is not used if context-line is available)
               119
           frame*
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'requests/models.py'
+              "requests/models.py"
             context-line*
-              u'            raise HTTPError(http_error_msg, response=self)'
+              "            raise HTTPError(http_error_msg, response=self)"
             function (function name is not used if context-line is available)
-              u'raise_for_status'
+              "raise_for_status"
             lineno (line number is not used if context-line is available)
               940
         type*
-          u'HTTPError'
+          "HTTPError"
         value (stacktrace and type take precedence)
-          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
+          "429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/react_native.pysnap
index e4e2f150b9..1454a6134b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/react_native.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/react_native.pysnap
@@ -1,494 +1,494 @@
 ---
-created: '2019-09-03T07:26:08.049873Z'
+created: '2020-02-26T19:54:28.763183Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (less than 10% of frames are in-app)
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'value'
+              "value"
             lineno (line number is not used if context-line is available)
               119
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'      this._inCall--;'
+              "      this._inCall--;"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               318
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'_inCall'
+              "_inCall"
             lineno (line number is not used if context-line is available)
               119
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    this._lastFlush = new Date().getTime();'
+              "    this._lastFlush = new Date().getTime();"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               357
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "      _receiveRootNodeIDEvent(index, eventTopLevelType, i);"
             function (function name is not used if context-line is available)
-              u'_lastFlush'
+              "_lastFlush"
             lineno (line number is not used if context-line is available)
               1160
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  batchedUpdates(function() {'
+              "  batchedUpdates(function() {"
             function (function name is not used if context-line is available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             lineno (line number is not used if context-line is available)
               1095
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    return _batchedUpdates(fn, bookkeeping);'
+              "    return _batchedUpdates(fn, bookkeeping);"
             function (function name is not used if context-line is available)
-              u'batchedUpdates'
+              "batchedUpdates"
             lineno (line number is not used if context-line is available)
               1054
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        return fn(a);'
+              "        return fn(a);"
             function (function name is not used if context-line is available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             lineno (line number is not used if context-line is available)
               5928
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               1113
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
             function (function name is not used if context-line is available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             lineno (line number is not used if context-line is available)
               219
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'[native code] forEach'
+              "[native code] forEach"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "        executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
             function (function name is not used if context-line is available)
-              u'D'
+              "D"
             lineno (line number is not used if context-line is available)
               235
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
             function (function name is not used if context-line is available)
-              u'executeDispatch'
+              "executeDispatch"
             lineno (line number is not used if context-line is available)
               181
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             lineno (line number is not used if context-line is available)
               54
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "    invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               41
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "  var funcArgs = Array.prototype.slice.call(arguments, 3);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               28
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'  touchableHandleResponderRelease: function(e) {'
+              "  touchableHandleResponderRelease: function(e) {"
             function (function name is not used if context-line is available)
-              u'arguments'
+              "arguments"
             lineno (line number is not used if context-line is available)
               430
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "      this._performSideEffectsForTransition(curState, nextState, signal, e);"
             function (function name is not used if context-line is available)
-              u'_receiveSignal'
+              "_receiveSignal"
             lineno (line number is not used if context-line is available)
               662
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'        this.touchableHandlePress(e);'
+              "        this.touchableHandlePress(e);"
             function (function name is not used if context-line is available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             lineno (line number is not used if context-line is available)
               744
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
+              "node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js"
             context-line*
-              u'    this.props.onPress && this.props.onPress(e);'
+              "    this.props.onPress && this.props.onPress(e);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               175
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'onPress'
+              "onPress"
             lineno (line number is not used if context-line is available)
               143
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'Button'
+              "Button"
             lineno (line number is not used if context-line is available)
               115
         type*
-          u'TypeError'
+          "TypeError"
         value*
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
 --------------------------------------------------------------------------
 system:
-  hash: 'f8f4d8cbe0c85758ed193d0f5d9955b3'
+  hash: "f8f4d8cbe0c85758ed193d0f5d9955b3"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'value'
+              "value"
             lineno (line number is not used if context-line is available)
               119
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'      this._inCall--;'
+              "      this._inCall--;"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               318
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    return this.flushedQueue();'
+              "    return this.flushedQueue();"
             function (function name is not used if context-line is available)
-              u'_inCall'
+              "_inCall"
             lineno (line number is not used if context-line is available)
               119
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+              "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"
             context-line*
-              u'    this._lastFlush = new Date().getTime();'
+              "    this._lastFlush = new Date().getTime();"
             function (function name is not used if context-line is available)
-              u'flushedQueue'
+              "flushedQueue"
             lineno (line number is not used if context-line is available)
               357
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "      _receiveRootNodeIDEvent(index, eventTopLevelType, i);"
             function (function name is not used if context-line is available)
-              u'_lastFlush'
+              "_lastFlush"
             lineno (line number is not used if context-line is available)
               1160
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  batchedUpdates(function() {'
+              "  batchedUpdates(function() {"
             function (function name is not used if context-line is available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             lineno (line number is not used if context-line is available)
               1095
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    return _batchedUpdates(fn, bookkeeping);'
+              "    return _batchedUpdates(fn, bookkeeping);"
             function (function name is not used if context-line is available)
-              u'batchedUpdates'
+              "batchedUpdates"
             lineno (line number is not used if context-line is available)
               1054
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        return fn(a);'
+              "        return fn(a);"
             function (function name is not used if context-line is available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             lineno (line number is not used if context-line is available)
               5928
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
             function (function name is not used if context-line is available)
-              u'fn'
+              "fn"
             lineno (line number is not used if context-line is available)
               1113
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
             function (function name is not used if context-line is available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             lineno (line number is not used if context-line is available)
               219
           frame
             function (function name is not used if module or filename are available)
-              u'[native code] forEach'
+              "[native code] forEach"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "        executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
             function (function name is not used if context-line is available)
-              u'D'
+              "D"
             lineno (line number is not used if context-line is available)
               235
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
             function (function name is not used if context-line is available)
-              u'executeDispatch'
+              "executeDispatch"
             lineno (line number is not used if context-line is available)
               181
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
             function (function name is not used if context-line is available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             lineno (line number is not used if context-line is available)
               54
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "    invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               41
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+              "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js"
             context-line*
-              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "  var funcArgs = Array.prototype.slice.call(arguments, 3);"
             function (function name is not used if context-line is available)
-              u'apply'
+              "apply"
             lineno (line number is not used if context-line is available)
               28
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'  touchableHandleResponderRelease: function(e) {'
+              "  touchableHandleResponderRelease: function(e) {"
             function (function name is not used if context-line is available)
-              u'arguments'
+              "arguments"
             lineno (line number is not used if context-line is available)
               430
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "      this._performSideEffectsForTransition(curState, nextState, signal, e);"
             function (function name is not used if context-line is available)
-              u'_receiveSignal'
+              "_receiveSignal"
             lineno (line number is not used if context-line is available)
               662
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+              "node_modules/react-native/Libraries/Components/Touchable/Touchable.js"
             context-line*
-              u'        this.touchableHandlePress(e);'
+              "        this.touchableHandlePress(e);"
             function (function name is not used if context-line is available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             lineno (line number is not used if context-line is available)
               744
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
+              "node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js"
             context-line*
-              u'    this.props.onPress && this.props.onPress(e);'
+              "    this.props.onPress && this.props.onPress(e);"
             function (function name is not used if context-line is available)
-              u'this'
+              "this"
             lineno (line number is not used if context-line is available)
               175
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'onPress'
+              "onPress"
             lineno (line number is not used if context-line is available)
               143
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'App.js'
+              "App.js"
             context-line*
-              u'        <Button'
+              "        <Button"
             function (function name is not used if context-line is available)
-              u'Button'
+              "Button"
             lineno (line number is not used if context-line is available)
               115
         type*
-          u'TypeError'
+          "TypeError"
         value (stacktrace and type take precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_cocoa.pysnap
index ecb167bd6d..75c5d91422 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_cocoa.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_cocoa.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-03-14T17:12:37.497091Z'
+created: '2020-02-26T19:54:28.785640Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '84ed5488c9c498282e0f1691b658f17f'
+  hash: "84ed5488c9c498282e0f1691b658f17f"
   component:
     app*
       stacktrace*
         frame*
           filename* (stripped to basename)
-            u'bar.m'
+            "bar.m"
           lineno*
             1
         frame (non app frame)
           filename* (stripped to basename)
-            u'baz.m'
+            "baz.m"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '41156b93307634d3815da88429911825'
+  hash: "41156b93307634d3815da88429911825"
   component:
     system*
       stacktrace*
         frame*
           filename* (stripped to basename)
-            u'bar.m'
+            "bar.m"
           lineno*
             1
         frame*
           filename* (stripped to basename)
-            u'baz.m'
+            "baz.m"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_collapse_recursion.pysnap
index 5fc312ba4c..4921dbc140 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_collapse_recursion.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_collapse_recursion.pysnap
@@ -1,142 +1,142 @@
 ---
-created: '2019-03-14T17:12:37.506994Z'
+created: '2020-02-26T19:54:28.809960Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'main'
+            "main"
           lineno (function takes precedence)
             13
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
           lineno (function takes precedence)
             20
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             25
         frame* (frame considered in-app because no frame is in-app)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'throwError'
+            "throwError"
           lineno (function takes precedence)
             32
 --------------------------------------------------------------------------
 system:
-  hash: '894c3489e2ade384dc107bca6829d134'
+  hash: "894c3489e2ade384dc107bca6829d134"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'main'
+            "main"
           lineno (function takes precedence)
             13
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
           lineno (function takes precedence)
             20
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             27
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
           lineno (function takes precedence)
             25
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'Application.java'
+            "Application.java"
           function*
-            u'throwError'
+            "throwError"
           lineno (function takes precedence)
             32
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_compute_hashes.pysnap
index a70ce671ac..d354461807 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_compute_hashes.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-03-14T17:12:37.514957Z'
+created: '2020-02-26T19:54:28.830007Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'fbad177f80c1eff3bd6b252e09576292'
+  hash: "fbad177f80c1eff3bd6b252e09576292"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'a/foo.py'
+            "a/foo.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'a/bar.py'
+            "a/bar.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '06d370794820bec071005bf2e589d247'
+  hash: "06d370794820bec071005bf2e589d247"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'a/foo.py'
+            "a/foo.py"
           lineno*
             1
         frame*
           filename*
-            u'a/bar.py'
+            "a/bar.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_discards_seemingly_useless_stack.pysnap
index 39f7b31118..46643f5683 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_discards_seemingly_useless_stack.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_discards_seemingly_useless_stack.pysnap
@@ -1,31 +1,31 @@
 ---
-created: '2019-09-03T07:26:08.088010Z'
+created: '2020-02-26T19:54:28.843497Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           filename (ignored because filename is a URL)
-            u'foo'
+            "foo"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             1
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame
           filename (ignored because filename is a URL)
-            u'foo'
+            "foo"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_discard_non_urls.pysnap
index bbcf83efa6..6e8125e0b0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_discard_non_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_discard_non_urls.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-09-03T07:26:08.097043Z'
+created: '2020-02-26T19:54:28.870371Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (ignored because hash matches system variant)
         frame* (frame considered in-app because no frame is in-app)
           filename*
-            u'foo'
+            "foo"
           context-line*
-            u'<HTML>'
+            "<HTML>"
           lineno (line number is not used if context-line is available)
             1
 --------------------------------------------------------------------------
 system:
-  hash: '9b478586e7375aef8bedb80ae2fcaab7'
+  hash: "9b478586e7375aef8bedb80ae2fcaab7"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo'
+            "foo"
           context-line*
-            u'<HTML>'
+            "<HTML>"
           lineno (line number is not used if context-line is available)
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_group_different_js_errors.pysnap
index 4528e525b4..fde030b07a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_group_different_js_errors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_does_not_group_different_js_errors.pysnap
@@ -1,31 +1,31 @@
 ---
-created: '2019-09-03T07:26:08.106341Z'
+created: '2020-02-26T19:54:28.910289Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           filename (ignored because filename is a URL)
-            u'/index.js'
+            "/index.js"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             20
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame
           filename (ignored because filename is a URL)
-            u'/index.js'
+            "/index.js"
           context-line (discarded because from URL origin)
           lineno (line number is not used if module or filename are available)
             20
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_enforce_min_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_enforce_min_frames.pysnap
index 329588000f..e31c6402d4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_enforce_min_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_enforce_min_frames.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-09-03T07:26:08.155900Z'
+created: '2020-02-26T19:54:28.994908Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_excludes_single_frame_urls.pysnap
index 9437afc2db..1a68777f24 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_excludes_single_frame_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_excludes_single_frame_urls.pysnap
@@ -1,35 +1,35 @@
 ---
-created: '2019-03-14T17:12:37.546177Z'
+created: '2020-02-26T19:54:29.005269Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace (ignored single frame stack)
         frame (non app frame)
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (module takes precedence)
-            u'/bar/'
+            "/bar/"
           context-line (discarded because from URL origin)
           lineno*
             107
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace (ignored single frame stack)
         frame*
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (module takes precedence)
-            u'/bar/'
+            "/bar/"
           context-line (discarded because from URL origin)
           lineno*
             107
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_hash_without_system_frames.pysnap
index 3066a43496..8387521e46 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_hash_without_system_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_hash_without_system_frames.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-03-14T17:12:37.554580Z'
+created: '2020-02-26T19:54:29.024347Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '19fcc04a0c59eaf564ee1a00c58574cc'
+  hash: "19fcc04a0c59eaf564ee1a00c58574cc"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '3aa7e7dacc3a98cf8316a226c4485053'
+  hash: "3aa7e7dacc3a98cf8316a226c4485053"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_ignores_singular_anonymous_frame.pysnap
index 0f1eb0b877..de7778ae2d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_ignores_singular_anonymous_frame.pysnap
@@ -1,53 +1,53 @@
 ---
-created: '2019-09-03T07:26:08.181598Z'
+created: '2020-02-26T19:54:29.043130Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (frame considered in-app because no frame is in-app)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'c'
+            "c"
           lineno (line number is not used if module or filename are available)
             1188
         frame (frame considered in-app because no frame is in-app)
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
           lineno (line number is not used if module or filename are available)
             1184
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'c'
+            "c"
           lineno (line number is not used if module or filename are available)
             1188
         frame
           filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
+            "/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js"
           function (function name is not used if module or filename are available)
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
           lineno (line number is not used if module or filename are available)
             1184
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust.pysnap
index 81831131ac..587a206471 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-09-03T07:26:08.229703Z'
+created: '2020-02-26T19:54:29.104123Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust2.pysnap
index 303cfcef67..4e0b89df8f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_rust2.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-09-03T07:26:08.279303Z'
+created: '2020-02-26T19:54:29.176667Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
+  hash: "3e0ae2ce25cce2fca3390f3416e6a82a"
   component:
     system*
       exception*
         stacktrace
           frame
             function (function name is not used if module or filename are available)
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame
             function (function name is not used if module or filename are available)
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function (function name is not used if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function (function name is not used if module or filename are available)
-              u'log_demo::main'
+              "log_demo::main"
           frame
             function (function name is not used if module or filename are available)
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_with_minimal_app_frames.pysnap
index d656aeadd2..387f9f8eab 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_with_minimal_app_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/stacktrace_with_minimal_app_frames.pysnap
@@ -1,136 +1,136 @@
 ---
-created: '2019-03-14T17:12:37.574060Z'
+created: '2020-02-26T19:54:29.204416Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace (less than 10% of frames are in-app)
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
 --------------------------------------------------------------------------
 system:
-  hash: '3aa7e7dacc3a98cf8316a226c4485053'
+  hash: "3aa7e7dacc3a98cf8316a226c4485053"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           lineno*
             1
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
           lineno*
             1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/template_compute_hashes.pysnap
index 25e73d3f60..0c45b95fc1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/template_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/template_compute_hashes.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-03-14T17:12:37.581287Z'
+created: '2020-02-26T19:54:29.219402Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '826f66ef602835f68030c04c634df320'
+  hash: "826f66ef602835f68030c04c634df320"
   component:
     default*
       template*
         filename*
-          u'foo.html'
+          "foo.html"
         context-line*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_compute_hashes.pysnap
index df395f33bd..268e5c17c7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_compute_hashes.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-04-03T22:37:15.506746Z'
+created: '2020-02-26T19:54:29.234297Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (threads of system takes precedence)
       threads (ignored because hash matches system variant)
         stacktrace*
           frame* (frame considered in-app because no frame is in-app)
             filename*
-              u'foo/baz.c'
+              "foo/baz.c"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               1
 --------------------------------------------------------------------------
 system:
-  hash: '39db5b4edf187e89cec12245e5c9fb3c'
+  hash: "39db5b4edf187e89cec12245e5c9fb3c"
   component:
     system*
       threads*
         stacktrace*
           frame*
             filename*
-              u'foo/baz.c'
+              "foo/baz.c"
             function*
-              u'main'
+              "main"
             lineno (function takes precedence)
               1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_no_hash.pysnap
index 796519d2f1..7644e77594 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_no_hash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/threads_no_hash.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-03-14T17:12:37.597519Z'
+created: '2020-02-26T19:54:29.249031Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       threads (ignored because contains 2 threads)
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/actix.pysnap
index 5db7801f62..36737b539f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/actix.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/actix.pysnap
@@ -1,784 +1,784 @@
 ---
-created: '2019-09-26T13:46:38.943177Z'
+created: '2020-02-26T19:54:29.725411Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '703d3dd9cb763e3f5037f659d27da947'
+  hash: "703d3dd9cb763e3f5037f659d27da947"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function* (isolated function)
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function* (isolated function)
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function* (isolated function)
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function* (isolated function)
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function* (isolated function)
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function* (isolated function)
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function* (isolated function)
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function* (isolated function)
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function* (isolated function)
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             filename*
-              u'log.rs'
+              "log.rs"
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
 --------------------------------------------------------------------------
 system:
-  hash: '1df163ce3be65319df4fcc9cb34b60c1'
+  hash: "1df163ce3be65319df4fcc9cb34b60c1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame*
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame* (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function* (isolated function)
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function* (isolated function)
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function* (isolated function)
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function* (isolated function)
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function* (isolated function)
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function* (isolated function)
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function* (isolated function)
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function* (isolated function)
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function* (isolated function)
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function* (isolated function)
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function* (isolated function)
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function* (isolated function)
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function* (isolated function)
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function* (isolated function)
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function* (isolated function)
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             filename*
-              u'log.rs'
+              "log.rs"
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function* (isolated function)
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/aspnetcore.pysnap
index 46a06fc1a5..63a0f3bf3b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/aspnetcore.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/aspnetcore.pysnap
@@ -1,343 +1,343 @@
 ---
-created: '2019-03-15T18:36:59.292407Z'
+created: '2020-02-26T19:54:29.774186Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '228c649a3aa0901622c0a0e66ab0522c'
+  hash: "228c649a3aa0901622c0a0e66ab0522c"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame (non app frame)
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
+        "An unhandled exception has occurred while executing the request."
 --------------------------------------------------------------------------
 system:
-  hash: '4ccd0f1953483581ba360c7518f90332'
+  hash: "4ccd0f1953483581ba360c7518f90332"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/connection_error.pysnap
index 710bdbffe0..a0b6966042 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/connection_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/connection_error.pysnap
@@ -1,183 +1,183 @@
 ---
-created: '2019-03-15T18:36:59.302474Z'
+created: '2020-02-26T19:54:29.799133Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'a3bcd79525a31922367598b0e6b6fda4'
+  hash: "a3bcd79525a31922367598b0e6b6fda4"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
         type*
-          u'ConnectionError'
+          "ConnectionError"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '011c0e7a2decebaeb1897a7f08baeb1a'
+  hash: "011c0e7a2decebaeb1897a7f08baeb1a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
         type*
-          u'ConnectionError'
+          "ConnectionError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp.pysnap
index 51432d1064..0cb43ce35c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-03-15T11:58:32.710283Z'
+created: '2020-02-26T19:54:29.811902Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '666766514295bb52812324097cdaf53e'
+  hash: "666766514295bb52812324097cdaf53e"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'YYY'
+          "YYY"
       message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
+        "Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_img_src.pysnap
index 8b86b08699..e23f5da175 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_img_src.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_img_src.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-15T11:58:32.717281Z'
+created: '2020-02-26T19:54:29.822631Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1742101e08eb1608f569751dfedd0062'
+  hash: "1742101e08eb1608f569751dfedd0062"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'ftp://example.com'
+          "ftp://example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_no_blocked_uri.pysnap
index 0c1d0775fe..b691dd967f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_no_blocked_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_no_blocked_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-15T11:58:32.723860Z'
+created: '2020-02-26T19:54:29.833694Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
+  hash: "efddf1cde918097259aa7d4904fb1942"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
           "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_data_uri.pysnap
index 412d5f7f33..fa301b0e65 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_data_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_data_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-15T11:58:32.730957Z'
+created: '2020-02-26T19:54:29.850049Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
+  hash: "4e6f2bce9d121aa89f4dc5e5da08afb5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'data:'
+          "data:"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_src_uri.pysnap
index 39dae7e9f7..34b1164d25 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_src_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_script_src_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-03-15T11:58:32.738703Z'
+created: '2020-02-26T19:54:29.861138Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
+  hash: "223cdacfe5b4b830dc700b5c18cc21b4"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_style_src_elem.pysnap
index 05d1494994..8397d4b9c2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_style_src_elem.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/csp_style_src_elem.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-03-15T11:58:32.746086Z'
+created: '2020-02-26T19:54:29.873771Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '537a973f594c364842893e9a72af62a5'
+  hash: "537a973f594c364842893e9a72af62a5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'style-src-elem'
+          "style-src-elem"
         violation (not a local script violation)
         uri*
-          u'use.fontawesome.com'
+          "use.fontawesome.com"
       message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
+        "Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/custom_fingerprint.pysnap
index a0d66a4a7e..3b5df29510 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/custom_fingerprint.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/custom_fingerprint.pysnap
@@ -1,8 +1,8 @@
 ---
-created: '2019-03-15T11:58:32.754266Z'
+created: '2020-02-26T19:54:29.890839Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
+  hash: "f30afa00b85f5cac5ee0bce01b31f08d"
+  values: ["celery", "SoftTimeLimitExceeded", "sentry.tasks.store.process_event"]
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/empty.pysnap
index de8fee2e19..2e8d29cede 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/empty.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/empty.pysnap
@@ -1,7 +1,7 @@
 ---
-created: '2019-03-15T11:58:32.761027Z'
+created: '2020-02-26T19:54:29.920429Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_comput_hashes.pysnap
index 5fca46d60e..87867a6692 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_comput_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_comput_hashes.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-03-15T11:58:32.781427Z'
+created: '2020-02-26T19:54:29.935475Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes.pysnap
index bdb43f6f12..e29f57cb68 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-09T18:49:36.299638Z'
+created: '2020-02-26T19:54:30.029678Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_2.pysnap
index 1110a4da07..b4c06592c9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_2.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-09T18:49:36.308557Z'
+created: '2020-02-26T19:54:30.045131Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_3.pysnap
index 5b9940b704..2160c1ffe3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_compute_hashes_3.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-03T22:37:15.751245Z'
+created: '2020-02-26T19:54:30.068024Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '9c694b5c648e2e8a0822dcbd4c7f9c36'
+  hash: "9c694b5c648e2e8a0822dcbd4c7f9c36"
   component:
     app*
       chained-exception*
@@ -12,19 +12,19 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -32,13 +32,13 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_javascript_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_javascript_no_in_app.pysnap
index 90f0d3922f..b588e08b5d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_javascript_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_javascript_no_in_app.pysnap
@@ -1,46 +1,46 @@
 ---
-created: '2019-04-09T18:49:36.326246Z'
+created: '2020-02-26T19:54:30.100981Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
           frame (non app frame)
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function*
-              u'onError'
+              "onError"
         type*
-          u'TypeError'
+          "TypeError"
 --------------------------------------------------------------------------
 system:
-  hash: '8717a0fb8a1ddcabdd21bc2b7ca9ebee'
+  hash: "8717a0fb8a1ddcabdd21bc2b7ca9ebee"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
           frame*
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function*
-              u'onError'
+              "onError"
         type*
-          u'TypeError'
+          "TypeError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_type.pysnap
index 31a6d644f8..d8cd47e70c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_type.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_type.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-03-15T11:58:32.812943Z'
+created: '2020-02-26T19:54:30.120122Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       exception
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       exception
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_value.pysnap
index be228244f0..8076de656b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_value.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/exception_without_value.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-03-15T11:58:32.820167Z'
+created: '2020-02-26T19:54:30.147777Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/expectct.pysnap
index 925196d061..bbc0cfb154 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/expectct.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/expectct.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-03-15T11:58:32.827837Z'
+created: '2020-02-26T19:54:30.176445Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
+  hash: "3d2933f4b5ec459ec8d569a398fd328c"
   component:
     default*
       expect-ct*
         salt* (a static salt)
-          'expect-ct'
+          "expect-ct"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
index 95ace86873..fb76349001 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:32.850844Z'
+created: '2020-02-26T19:54:30.209181Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '526b64456c48836a46ec1a89544fd412'
+  hash: "526b64456c48836a46ec1a89544fd412"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_ENHANCED_spring_classes.pysnap
index 8855a39818..7088d71f24 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:32.858492Z'
+created: '2020-02-26T19:54:30.226781Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
+  hash: "45c0b0a8c777e7a7040d7c39233a08a5"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
index e98010a647..6bb7650aa2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:32.866529Z'
+created: '2020-02-26T19:54:30.250185Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
+  hash: "353e05904b48bd3ae4fa9623934a70d0"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_spring_classes.pysnap
index a7f86dedab..bd6468d5b4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_extra_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:32.874891Z'
+created: '2020-02-26T19:54:30.276497Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
+  hash: "be15ca3d511b96918e087c4f42503ca2"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_from_url_origin_corner_cases.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_from_url_origin_corner_cases.pysnap
index a426c40435..629da3ea57 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_from_url_origin_corner_cases.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_from_url_origin_corner_cases.pysnap
@@ -1,42 +1,42 @@
 ---
-created: '2019-11-01T10:16:11.092009Z'
+created: '2020-02-26T19:54:30.292740Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
 --------------------------------------------------------------------------
 system:
-  hash: '05a671c66aefea124cc08b76ea6d30bb'
+  hash: "05a671c66aefea124cc08b76ea6d30bb"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_abs_path_is_http.pysnap
index 28f86b5bc1..cfae8d681c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_abs_path_is_http.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-16T15:38:20.671804Z'
+created: '2020-02-26T19:54:30.324929Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_blob.pysnap
index c18d11178a..2ced743c62 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_blob.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_blob.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-03-16T15:38:20.680003Z'
+created: '2020-02-26T19:54:30.338623Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_http.pysnap
index 28260f65fe..013b94ad84 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_http.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-16T15:38:20.688269Z'
+created: '2020-02-26T19:54:30.359124Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_https.pysnap
index 3c7c82d8db..83d9a475a2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_https.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_filename_if_https.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-16T15:38:20.696133Z'
+created: '2020-02-26T19:54:30.377673Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_function.pysnap
index 518d7b1e00..d6a5505a2b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-19T23:02:04.755730Z'
+created: '2020-02-26T19:54:30.397065Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
 --------------------------------------------------------------------------
 system:
-  hash: 'be7f1b8b4014de623c533a8218dba5bd'
+  hash: "be7f1b8b4014de623c533a8218dba5bd"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_module.pysnap
index f9eeb8853d..d7d926b6f8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_module.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_java8_lambda_module.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-19T22:59:40.767479Z'
+created: '2020-02-26T19:54:30.422087Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
 --------------------------------------------------------------------------
 system:
-  hash: '53b9e9679a8ea25880376080b76f98ad'
+  hash: "53b9e9679a8ea25880376080b76f98ad"
   component:
     system*
       stacktrace*
         frame*
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist.pysnap
index b94a0fffb2..d365581253 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:32.942554Z'
+created: '2020-02-26T19:54:30.433685Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_2.pysnap
index cb51dbffba..207546d22e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:32.950378Z'
+created: '2020-02-26T19:54:30.451993Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_3.pysnap
index 1f03ba5e5e..739583ffac 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_javassist_3.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-19T22:59:40.810787Z'
+created: '2020-02-26T19:54:30.472275Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: 'dc3d511120ce04996b1eef3496516e5c'
+  hash: "dc3d511120ce04996b1eef3496516e5c"
   component:
     system*
       stacktrace*
         frame*
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url.pysnap
index bd7e5c9ead..25a5f59931 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url.pysnap
@@ -1,29 +1,29 @@
 ---
-created: '2019-07-10T12:18:43.528621Z'
+created: '2020-02-26T19:54:30.488085Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame (ignored single non-URL JavaScript frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url_2.pysnap
index 4d4c91855b..5c74c41be9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_module_if_page_url_2.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-05-08T07:33:29.941068Z'
+created: '2020-02-26T19:54:30.506357Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
 --------------------------------------------------------------------------
 system:
-  hash: '0cc175b9c0f1b6a831c399e269772661'
+  hash: "0cc175b9c0f1b6a831c399e269772661"
   component:
     system*
       stacktrace*
         frame*
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_safari_native_code.pysnap
index 601b9ade6c..21135c232d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_safari_native_code.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_safari_native_code.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-19T22:59:40.852252Z'
+created: '2020-02-26T19:54:30.524754Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
 --------------------------------------------------------------------------
 system:
-  hash: '30eb5001914d29dd8461898b5b8094fe'
+  hash: "30eb5001914d29dd8461898b5b8094fe"
   component:
     system*
       stacktrace*
         frame*
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors.pysnap
index 38cc039a88..3b64a93ca5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:33.001770Z'
+created: '2020-02-26T19:54:30.537012Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
+  hash: "07d1a8e5728b3c4c7aa8b8273fd0e753"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors_2.pysnap
index cb2b25c88d..a81f16b381 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_constructors_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:33.009933Z'
+created: '2020-02-26T19:54:30.558076Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '09e0efcab18f545166318118ed4e0292'
+  hash: "09e0efcab18f545166318118ed4e0292"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_methods.pysnap
index 04e740c105..22aa2c8b9a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_methods.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_ignores_sun_java_generated_methods.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-05-21T19:16:10.811034Z'
+created: '2020-02-26T19:54:30.574731Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame (non app frame)
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '9bc326575875422d0d4ced3c35d9f916'
+  hash: "9bc326575875422d0d4ced3c35d9f916"
   component:
     system*
       stacktrace*
         frame*
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame*
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_block_functions.pysnap
index 76712fafdc..fefadf924d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_block_functions.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_block_functions.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:33.026218Z'
+created: '2020-02-26T19:54:30.586500Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
 --------------------------------------------------------------------------
 system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
+  hash: "27eed4125fc13d42163ddb0b8f357b48"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_erb_templates.pysnap
index 447407d945..7e00f70d63 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_erb_templates.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-01T17:31:12.333493Z'
+created: '2020-02-26T19:54:30.602444Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
 --------------------------------------------------------------------------
 system:
-  hash: '4067a71d7098866f87c746a57a77b2bb'
+  hash: "4067a71d7098866f87c746a57a77b2bb"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames.pysnap
index 29d1d3cc25..be3f3d08f4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-03-15T18:36:59.810594Z'
+created: '2020-02-26T19:54:30.620077Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames_2.pysnap
index b60a6ea4df..ab86087b67 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_sanitizes_versioned_filenames_2.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-03-15T18:36:59.817082Z'
+created: '2020-02-26T19:54:30.646296Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_skips_symbol_if_unknown.pysnap
index 349b15ea51..6577c55760 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_skips_symbol_if_unknown.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_skips_symbol_if_unknown.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:33.067372Z'
+created: '2020-02-26T19:54:30.667304Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
 --------------------------------------------------------------------------
 system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
+  hash: "a972f399399f5566f39b14a7afdd24ff"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_context_line_over_function.pysnap
index e6da2df059..bddf8a05b9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_context_line_over_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_context_line_over_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T18:36:59.879998Z'
+created: '2020-02-26T19:54:30.686684Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_function_over_lineno.pysnap
index 8a79aa7ca2..be0c295acf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_function_over_lineno.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_function_over_lineno.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:33.083177Z'
+created: '2020-02-26T19:54:30.711390Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_module_over_filename.pysnap
index 2902c0486c..a221a9aaea 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_module_over_filename.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_module_over_filename.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T11:58:33.091187Z'
+created: '2020-02-26T19:54:30.736445Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_symbol_instead_of_function.pysnap
index 6e1762b081..35161e1ee3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_symbol_instead_of_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_uses_symbol_instead_of_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-15T18:36:59.902749Z'
+created: '2020-02-26T19:54:30.754545Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
 --------------------------------------------------------------------------
 system:
-  hash: '23db4a9e73800923f345d2b868993345'
+  hash: "23db4a9e73800923f345d2b868993345"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_with_only_required_vars.pysnap
index 0c9887dea8..30f9c5ca86 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_with_only_required_vars.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/frame_with_only_required_vars.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-03-15T11:58:33.118766Z'
+created: '2020-02-26T19:54:30.778675Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/hpkp.pysnap
index f1eaf4e339..9a9008cce5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/hpkp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/hpkp.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-03-15T11:58:33.127190Z'
+created: '2020-02-26T19:54:30.795977Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
+  hash: "1e37a374cb33572622d02ff7a6237c44"
   component:
     default*
       hpkp*
         salt* (a static salt)
-          'hpkp'
+          "hpkp"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_chained.pysnap
index 8a766a2bb5..41110eb1b5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_chained.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_chained.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-03-15T11:57:19.776895Z'
+created: '2020-02-26T19:54:30.919728Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6492c5a2c66315cff20930ec07f587ad'
+  hash: "6492c5a2c66315cff20930ec07f587ad"
   component:
     app*
       chained-exception*
@@ -12,388 +12,388 @@ app:
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame (non app frame)
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
         exception*
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/1.1-8080]]'
+        "Failed to start connector [Connector[HTTP/1.1-8080]]"
 --------------------------------------------------------------------------
 system:
-  hash: '8924849495809d42431719c2b9ab65c8'
+  hash: "8924849495809d42431719c2b9ab65c8"
   component:
     system*
       chained-exception*
@@ -401,375 +401,375 @@ system:
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame*
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_minimal.pysnap
index bdf634df28..a0d66d2997 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_minimal.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/java_minimal.pysnap
@@ -1,799 +1,799 @@
 ---
-created: '2019-04-09T18:49:36.619808Z'
+created: '2020-02-26T19:54:31.081309Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame (non app frame)
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame (non app frame)
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+        "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
 --------------------------------------------------------------------------
 system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  hash: "ec87dd10e4f7512ecccb4a068c5774ae"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame*
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame*
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame*
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame*
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message.pysnap
index eac7be7ef4..ab2f9a0d69 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-04-17T20:21:35.232896Z'
+created: '2020-02-26T19:54:31.107195Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: '902b0d55fddef6f8d651fe1035b7d4bd'
+  hash: "902b0d55fddef6f8d651fe1035b7d4bd"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message_whistles.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message_whistles.pysnap
index 7e2dfe5ff3..e89e44c9ff 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message_whistles.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_fallback_to_message_whistles.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-04-17T20:35:10.497138Z'
+created: '2020-02-26T19:54:31.135156Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: '902b0d55fddef6f8d651fe1035b7d4bd'
+  hash: "902b0d55fddef6f8d651fe1035b7d4bd"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_no_in_app.pysnap
index 30f1c0f5b9..5a327c8811 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_exception_no_in_app.pysnap
@@ -1,142 +1,142 @@
 ---
-created: '2019-04-09T18:49:36.630959Z'
+created: '2020-02-26T19:54:31.189842Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
           frame (non app frame)
             filename*
-              u'index.js'
+              "index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
 --------------------------------------------------------------------------
 system:
-  hash: 'c792aaace0c1a534a115ece18c376538'
+  hash: "c792aaace0c1a534a115ece18c376538"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
           frame*
             filename*
-              u'index.js'
+              "index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_message.pysnap
index 11c1152236..84f7d43fd2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-15T11:58:33.199508Z'
+created: '2020-02-26T19:54:31.208567Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
+  hash: "4119639092e62c55ea8be348e4d9260d"
   component:
     default*
       message*
-        u'event'
+        "event"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_chrome.pysnap
index 50a88accbc..a602aaf446 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_chrome.pysnap
@@ -1,114 +1,114 @@
 ---
-created: '2019-05-08T19:13:31.245118Z'
+created: '2020-02-26T19:54:31.241563Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: 'f1eafcdff05ffb12bb43880c5d0da248'
+  hash: "f1eafcdff05ffb12bb43880c5d0da248"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_edge.pysnap
index 53bad36574..a8ae9a8a91 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_edge.pysnap
@@ -1,122 +1,122 @@
 ---
-created: '2019-05-08T19:13:31.256675Z'
+created: '2020-02-26T19:54:31.283991Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: '11b10a754e6caa4f763377efecb5505e'
+  hash: "11b10a754e6caa4f763377efecb5505e"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_firefox.pysnap
index 63d55ca5f8..bb32ff2080 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_firefox.pysnap
@@ -1,108 +1,108 @@
 ---
-created: '2019-05-10T13:21:31.567127Z'
+created: '2020-02-26T19:54:31.318410Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: 'fe1acbd354c812ab2969a76083b84e7f'
+  hash: "fe1acbd354c812ab2969a76083b84e7f"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_chrome.pysnap
index 5ec9360384..1b5995b0fe 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_chrome.pysnap
@@ -1,150 +1,150 @@
 ---
-created: '2019-05-08T19:44:35.503850Z'
+created: '2020-02-26T19:54:31.351405Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: 'ae807192d4f922c3f0513ce4df585ce6'
+  hash: "ae807192d4f922c3f0513ce4df585ce6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_edge.pysnap
index 2aa9238dab..80ddf77508 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_edge.pysnap
@@ -1,158 +1,158 @@
 ---
-created: '2019-05-08T19:44:35.515454Z'
+created: '2020-02-26T19:54:31.391561Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: 'e834aba6bf7b758128da092a68a18e9a'
+  hash: "e834aba6bf7b758128da092a68a18e9a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_firefox.pysnap
index 6409a5cd2c..f19755e0b6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_firefox.pysnap
@@ -1,144 +1,144 @@
 ---
-created: '2019-05-10T13:21:31.600141Z'
+created: '2020-02-26T19:54:31.428124Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: '7eb6de53ca3380ea437501f940974f21'
+  hash: "7eb6de53ca3380ea437501f940974f21"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_safari.pysnap
index ec00b691cc..0429c954da 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_http_safari.pysnap
@@ -1,156 +1,156 @@
 ---
-created: '2019-05-08T19:44:35.537132Z'
+created: '2020-02-26T19:54:31.532183Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: '1c374ace6b13add91c6824b945dce4c3'
+  hash: "1c374ace6b13add91c6824b945dce4c3"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_safari.pysnap
index bc9330ab30..3ef4e75c68 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_safari.pysnap
@@ -1,124 +1,124 @@
 ---
-created: '2019-05-08T19:13:31.280258Z'
+created: '2020-02-26T19:54:31.591749Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: 'fc72313a47981f6b86536e727d84c2d4'
+  hash: "fc72313a47981f6b86536e727d84c2d4"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_firefox.pysnap
index aaab98e309..4c14ea2381 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_firefox.pysnap
@@ -1,274 +1,274 @@
 ---
-created: '2019-05-08T21:58:34.922612Z'
+created: '2020-02-26T19:54:31.667719Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '9a671640bcd8830976947f4975a79427'
+  hash: "9a671640bcd8830976947f4975a79427"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function*
-              u'M'
+              "M"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'fn'
+              "fn"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'this'
+              "this"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'fn'
+              "fn"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'X'
+              "X"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
 --------------------------------------------------------------------------
 system:
-  hash: '272b303fa2cd65124456c87f30cdf3d5'
+  hash: "272b303fa2cd65124456c87f30cdf3d5"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function*
-              u'M'
+              "M"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'fn'
+              "fn"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'fn'
+              "fn"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'X'
+              "X"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_safari.pysnap
index 971c34e2ef..b7a3422fe9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/javascript_xbrowser_sentryui_safari.pysnap
@@ -1,228 +1,228 @@
 ---
-created: '2019-05-08T21:58:34.939916Z'
+created: '2020-02-26T19:54:31.715742Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '503cd0a69d1bdcfb9bdc7fa560201d73'
+  hash: "503cd0a69d1bdcfb9bdc7fa560201d73"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'call'
+              "call"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'q'
+              "q"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'fetchData'
+              "fetchData"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
 --------------------------------------------------------------------------
 system:
-  hash: '6404c9ce987071526293aa0b5456e60b'
+  hash: "6404c9ce987071526293aa0b5456e60b"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'call'
+              "call"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'q'
+              "q"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'fetchData'
+              "fetchData"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel.pysnap
index ce12b4e1d1..188e64f630 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel.pysnap
@@ -1,518 +1,518 @@
 ---
-created: '2019-03-15T18:37:00.063525Z'
+created: '2020-02-26T19:54:31.812849Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '294cfb8d1aa7ab375c4b49ce2733092c'
+  hash: "294cfb8d1aa7ab375c4b49ce2733092c"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
         type*
-          u'Exception'
+          "Exception"
 --------------------------------------------------------------------------
 system:
-  hash: 'a3719dac43d28c56931056d073154398'
+  hash: "a3719dac43d28c56931056d073154398"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
         type*
-          u'Exception'
+          "Exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap
index 1cd03bd02a..a49661b3f5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap
@@ -1,48 +1,48 @@
 ---
-created: '2020-01-15T14:24:41.163911Z'
+created: '2020-02-26T19:54:31.833190Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6c99fc6b18e4fa4040a94e10729969db'
+  hash: "6c99fc6b18e4fa4040a94e10729969db"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function (ignored anonymous function)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
         type*
-          u'Exception'
+          "Exception"
 --------------------------------------------------------------------------
 system:
-  hash: '64809e005de3afd90f703a70e36a2591'
+  hash: "64809e005de3afd90f703a70e36a2591"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function (ignored anonymous function)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
         type*
-          u'Exception'
+          "Exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_prefers_message.pysnap
index 3032f46f47..d10579205b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-15T11:58:33.233602Z'
+created: '2020-02-26T19:54:31.843016Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_uses_formatted.pysnap
index 41b0058765..5cc5abc139 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/logentry_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-15T11:58:33.241914Z'
+created: '2020-02-26T19:54:31.859725Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
+  hash: "329b29efcf1f77067a063e34f56e7791"
   component:
     default*
       message*
-        u'Hello there world!'
+        "Hello there world!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_prefers_message.pysnap
index 55d0a34bbc..583be0011f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-15T11:58:33.249164Z'
+created: '2020-02-26T19:54:31.875917Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_uses_formatted.pysnap
index ba6d5a61bd..02563480b2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/message_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-03-15T11:58:33.255636Z'
+created: '2020-02-26T19:54:31.887441Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
+  hash: "d3f5e52d24e9c1eae5abe6c866cced63"
   component:
     default*
       message*
-        u'Hello there Peter!'
+        "Hello there Peter!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/minified_javascript.pysnap
index 8e472af3df..f5f5b8b0b5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/minified_javascript.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/minified_javascript.pysnap
@@ -1,330 +1,330 @@
 ---
-created: '2019-04-09T18:49:36.705412Z'
+created: '2020-02-26T19:54:31.931747Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'S/<'
+              "S/<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/</a</<'
+              "e/</a</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/<'
+              "t.exports/<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/</<'
+              "t.exports/</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'o.e'
+              "o.e"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
 --------------------------------------------------------------------------
 system:
-  hash: '074e2ed5d89f602d31be5742ac107fef'
+  hash: "074e2ed5d89f602d31be5742ac107fef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'S/<'
+              "S/<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/</a</<'
+              "e/</a</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/<'
+              "t.exports/<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/</<'
+              "t.exports/</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'o.e'
+              "o.e"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_complex_function_names.pysnap
index 8ccba91708..7adc38037d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_complex_function_names.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_complex_function_names.pysnap
@@ -1,40 +1,40 @@
 ---
-created: '2019-09-26T13:53:00.592370Z'
+created: '2020-02-26T19:54:31.965032Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e4dcc3896f798a517fb40f50daace658'
+  hash: "e4dcc3896f798a517fb40f50daace658"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_limit_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_limit_frames.pysnap
index 34443a00be..927d1677d0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_limit_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_limit_frames.pysnap
@@ -1,40 +1,40 @@
 ---
-created: '2019-09-26T13:53:00.606697Z'
+created: '2020-02-26T19:54:31.994782Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: '31f85aded5e85e51fb740d675fbfeccc'
+  hash: "31f85aded5e85e51fb740d675fbfeccc"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_no_filenames.pysnap
index 5e1535d1cc..1e50e30c85 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_no_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_no_filenames.pysnap
@@ -1,106 +1,106 @@
 ---
-created: '2019-09-26T13:26:25.915829Z'
+created: '2020-02-26T19:54:32.105652Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '418120a66f7031923031f5c52aca0724'
+  hash: "418120a66f7031923031f5c52aca0724"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame (non app frame)
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame (non app frame)
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: '00719910980352c06ba93641057012e0'
+  hash: "00719910980352c06ba93641057012e0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame*
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame*
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             function* (isolated function)
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_unlimited_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_unlimited_frames.pysnap
index 635f92e564..f000273ff3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_unlimited_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_unlimited_frames.pysnap
@@ -1,40 +1,40 @@
 ---
-created: '2019-09-26T13:53:00.686525Z'
+created: '2020-02-26T19:54:32.132221Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e4dcc3896f798a517fb40f50daace658'
+  hash: "e4dcc3896f798a517fb40f50daace658"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()'
+              "<lambda_5db80dab47756d3e72c2dcd38b80b1dd>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_windows_anon_namespace.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_windows_anon_namespace.pysnap
index e67328d814..5510e279b1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_windows_anon_namespace.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_windows_anon_namespace.pysnap
@@ -1,72 +1,72 @@
 ---
-created: '2019-09-10T09:51:03.965040Z'
+created: '2020-02-26T19:54:32.178858Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'?A0xc3a0617d::crash'
+              "?A0xc3a0617d::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
 --------------------------------------------------------------------------
 system:
-  hash: '6fc07910e6c6a6d4051f823aed855991'
+  hash: "6fc07910e6c6a6d4051f823aed855991"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'?A0xc3a0617d::crash'
+              "?A0xc3a0617d::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_with_function_name.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_with_function_name.pysnap
index 9a4bcd7184..bbf8370f05 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_with_function_name.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/native_with_function_name.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-04-27T19:27:06.288229Z'
+created: '2020-02-26T19:54:32.209283Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::something::nested::Foo'
+              "(anonymous namespace)::something::nested::Foo"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
 --------------------------------------------------------------------------
 system:
-  hash: '282d9d4e85027e073026ace9ad3d05fd'
+  hash: "282d9d4e85027e073026ace9ad3d05fd"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function* (isolated function)
-              u'(anonymous namespace)::something::nested::Foo'
+              "(anonymous namespace)::something::nested::Foo"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/node_exception_weird.pysnap
index 08c12ecb34..6e0217518a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/node_exception_weird.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/node_exception_weird.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-03-15T18:37:00.163979Z'
+created: '2020-02-26T19:54:32.230020Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6e721dc6a6f261cc9ce994fe8dc2c917'
+  hash: "6e721dc6a6f261cc9ce994fe8dc2c917"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function*
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function*
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
         type*
-          u'Error'
+          "Error"
 --------------------------------------------------------------------------
 system:
-  hash: '4dc62db23de39a20e1274015ee07d202'
+  hash: "4dc62db23de39a20e1274015ee07d202"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function*
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function*
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
         type*
-          u'Error'
+          "Error"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_exception_base.pysnap
index 81ed8d9c38..05c43cf6ae 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_exception_base.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-03T22:37:16.216837Z'
+created: '2020-02-26T19:54:32.243964Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '9c694b5c648e2e8a0822dcbd4c7f9c36'
+  hash: "9c694b5c648e2e8a0822dcbd4c7f9c36"
   component:
     app*
       chained-exception*
@@ -12,19 +12,19 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -32,13 +32,13 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_away_from_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_away_from_crash.pysnap
index d86e844872..6326bae1a6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_away_from_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_away_from_crash.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-06-05T11:45:15.828631Z'
+created: '2020-02-26T19:54:32.266048Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '3871df283cbb705bfcfd22a44039a6d7'
+  hash: "3871df283cbb705bfcfd22a44039a6d7"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
 --------------------------------------------------------------------------
 system:
-  hash: '193e32de84a65a6423cc047e47619ab8'
+  hash: "193e32de84a65a6423cc047e47619ab8"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame*
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_towards_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_towards_crash.pysnap
index 0cc48cf8e1..902d9d0579 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_towards_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_grouping_enhancer_towards_crash.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-06-05T11:45:15.848265Z'
+created: '2020-02-26T19:54:32.288385Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
 --------------------------------------------------------------------------
 system:
-  hash: '761cbc1236089dd8bd96706c896d7087'
+  hash: "761cbc1236089dd8bd96706c896d7087"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame*
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame*
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_http_error.pysnap
index ba26bafe27..b922bfd93b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_http_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/python_http_error.pysnap
@@ -1,71 +1,71 @@
 ---
-created: '2019-03-15T18:37:00.180889Z'
+created: '2020-02-26T19:54:32.306466Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '86a7a80de1a3e572aeb20b28ae8d62c6'
+  hash: "86a7a80de1a3e572aeb20b28ae8d62c6"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
           frame (non app frame)
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
         type*
-          u'HTTPError'
+          "HTTPError"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '07a725d19885057d03eccfa450a274f4'
+  hash: "07a725d19885057d03eccfa450a274f4"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
           frame*
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
         type*
-          u'HTTPError'
+          "HTTPError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/react_native.pysnap
index 42d3fc336a..5badbf839b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/react_native.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/react_native.pysnap
@@ -1,322 +1,322 @@
 ---
-created: '2019-03-15T18:37:00.200137Z'
+created: '2020-02-26T19:54:32.353548Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '93c2d97697ba4aa34b91557c1c217641'
+  hash: "93c2d97697ba4aa34b91557c1c217641"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'value'
+              "value"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'_inCall'
+              "_inCall"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_lastFlush'
+              "_lastFlush"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'batchedUpdates'
+              "batchedUpdates"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_batchedUpdates'
+              "_batchedUpdates"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'fn'
+              "fn"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'forEachAccumulated'
+              "forEachAccumulated"
           frame (non app frame)
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'D'
+              "D"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'executeDispatch'
+              "executeDispatch"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'arguments'
+              "arguments"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_receiveSignal'
+              "_receiveSignal"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'onPress'
+              "onPress"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'Button'
+              "Button"
         type*
-          u'TypeError'
+          "TypeError"
 --------------------------------------------------------------------------
 system:
-  hash: '53f5eee7a48d6754dcc87aee2be66195'
+  hash: "53f5eee7a48d6754dcc87aee2be66195"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'value'
+              "value"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'_inCall'
+              "_inCall"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_lastFlush'
+              "_lastFlush"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'batchedUpdates'
+              "batchedUpdates"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_batchedUpdates'
+              "_batchedUpdates"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'fn'
+              "fn"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'forEachAccumulated'
+              "forEachAccumulated"
           frame*
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'D'
+              "D"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'executeDispatch'
+              "executeDispatch"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'arguments'
+              "arguments"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_receiveSignal'
+              "_receiveSignal"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'onPress'
+              "onPress"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'Button'
+              "Button"
         type*
-          u'TypeError'
+          "TypeError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_cocoa.pysnap
index 685785838d..de1f1b3bd7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_cocoa.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_cocoa.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-03-15T11:58:33.343577Z'
+created: '2020-02-26T19:54:32.376344Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb416f98479efa56a77c524602dc9979'
+  hash: "eb416f98479efa56a77c524602dc9979"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame (non app frame)
           filename*
-            u'baz.m'
+            "baz.m"
 --------------------------------------------------------------------------
 system:
-  hash: '1df786c8c266506e1acb6669c8df5154'
+  hash: "1df786c8c266506e1acb6669c8df5154"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame*
           filename*
-            u'baz.m'
+            "baz.m"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_collapse_recursion.pysnap
index aa3ae2f23d..05a0e3bd67 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_collapse_recursion.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_collapse_recursion.pysnap
@@ -1,114 +1,114 @@
 ---
-created: '2019-03-15T11:58:33.353841Z'
+created: '2020-02-26T19:54:32.394999Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
 --------------------------------------------------------------------------
 system:
-  hash: '894c3489e2ade384dc107bca6829d134'
+  hash: "894c3489e2ade384dc107bca6829d134"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_compute_hashes.pysnap
index 35a86dbfe5..cb5c50f792 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-03-15T11:58:33.361642Z'
+created: '2020-02-26T19:54:32.413901Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_discards_seemingly_useless_stack.pysnap
index 28f7fe7daa..2304d2096b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_discards_seemingly_useless_stack.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_discards_seemingly_useless_stack.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-03-16T15:38:21.159098Z'
+created: '2020-02-26T19:54:32.431036Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_discard_non_urls.pysnap
index 401cc2c42f..41bfce2657 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_discard_non_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_discard_non_urls.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-03-15T18:37:00.256352Z'
+created: '2020-02-26T19:54:32.446018Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_group_different_js_errors.pysnap
index 48a2135cca..0567ebdb2e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_group_different_js_errors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_does_not_group_different_js_errors.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-03-16T15:38:21.174028Z'
+created: '2020-02-26T19:54:32.464281Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_enforce_min_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_enforce_min_frames.pysnap
index 9ebd34d1ad..f9b8bde8e2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_enforce_min_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_enforce_min_frames.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-07-09T13:22:08.877627Z'
+created: '2020-02-26T19:54:32.544470Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (discarded because stacktrace only contains 1 frame which is under the configured threshold by grouping enhancement rule (family:native min-frames=2))
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_excludes_single_frame_urls.pysnap
index 61d2e7fba4..e96dd6370e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_excludes_single_frame_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_excludes_single_frame_urls.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-03-16T15:38:21.182114Z'
+created: '2020-02-26T19:54:32.560713Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
 --------------------------------------------------------------------------
 system:
-  hash: 'cd2a9fd0cdaa8cd55ed22b101fc65882'
+  hash: "cd2a9fd0cdaa8cd55ed22b101fc65882"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_hash_without_system_frames.pysnap
index a4fe89c934..6d6de943c3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_hash_without_system_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_hash_without_system_frames.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-03-15T11:58:33.403251Z'
+created: '2020-02-26T19:54:32.577595Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_ignores_singular_anonymous_frame.pysnap
index 70be7a74e9..900efa79ca 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_ignores_singular_anonymous_frame.pysnap
@@ -1,42 +1,42 @@
 ---
-created: '2019-03-16T15:38:21.198348Z'
+created: '2020-02-26T19:54:32.591904Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
 --------------------------------------------------------------------------
 system:
-  hash: 'e61225523929cf925f6ac3b1f7f26d85'
+  hash: "e61225523929cf925f6ac3b1f7f26d85"
   component:
     system*
       stacktrace*
         frame
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame*
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame*
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust.pysnap
index 8115f8a189..c2caf66ecb 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-06-05T11:45:16.027962Z'
+created: '2020-02-26T19:54:32.662003Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust2.pysnap
index d42e342202..02fd522f71 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_rust2.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2019-06-05T11:45:16.085243Z'
+created: '2020-02-26T19:54:32.728234Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
 --------------------------------------------------------------------------
 system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
+  hash: "9b33b65a645c66239cafcd276fcd0659"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (ignored by grouping enhancement rule (family:native function:__* -group))
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (ignored by grouping enhancement rule (family:native function:*::__* -group))
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_with_minimal_app_frames.pysnap
index 6a3adf9bd7..ccb35df3bd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_with_minimal_app_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/stacktrace_with_minimal_app_frames.pysnap
@@ -1,88 +1,88 @@
 ---
-created: '2019-03-15T11:58:33.422866Z'
+created: '2020-02-26T19:54:32.748191Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/template_compute_hashes.pysnap
index fc4c01b706..d2267c2225 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/template_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/template_compute_hashes.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-03-15T11:58:33.430952Z'
+created: '2020-02-26T19:54:32.761849Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '826f66ef602835f68030c04c634df320'
+  hash: "826f66ef602835f68030c04c634df320"
   component:
     default*
       template*
         filename*
-          u'foo.html'
+          "foo.html"
         context-line*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_compute_hashes.pysnap
index 5c7f481445..1318b7e808 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-09T18:57:09.573418Z'
+created: '2020-02-26T19:54:32.774204Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (threads of system takes precedence)
       threads (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
 --------------------------------------------------------------------------
 system:
-  hash: '1a11687556cf74559f0ae90b1c87e2fd'
+  hash: "1a11687556cf74559f0ae90b1c87e2fd"
   component:
     system*
       threads*
         stacktrace*
           frame*
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_no_hash.pysnap
index 7cf323ca37..578068d79c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_no_hash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/threads_no_hash.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-03-15T11:58:33.451870Z'
+created: '2020-02-26T19:54:32.786370Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       threads (ignored because contains 2 threads)
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/actix.pysnap
index 03aaabf991..716eee4226 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/actix.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/actix.pysnap
@@ -1,788 +1,788 @@
 ---
-created: '2019-09-26T13:46:40.468198Z'
+created: '2020-02-26T19:54:33.550038Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '703d3dd9cb763e3f5037f659d27da947'
+  hash: "703d3dd9cb763e3f5037f659d27da947"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (ignored because stacktrace takes precedence)
-          u'Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here"
 --------------------------------------------------------------------------
 system:
-  hash: '1df163ce3be65319df4fcc9cb34b60c1'
+  hash: "1df163ce3be65319df4fcc9cb34b60c1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame*
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame* (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (ignored because stacktrace takes precedence)
-          u'Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/aspnetcore.pysnap
index bc79f44638..96360f7414 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/aspnetcore.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/aspnetcore.pysnap
@@ -1,347 +1,347 @@
 ---
-created: '2019-04-17T20:07:50.067739Z'
+created: '2020-02-26T19:54:33.594397Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '228c649a3aa0901622c0a0e66ab0522c'
+  hash: "228c649a3aa0901622c0a0e66ab0522c"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame (non app frame)
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
         value (ignored because stacktrace takes precedence)
-          u'sync exception'
+          "sync exception"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
+        "An unhandled exception has occurred while executing the request."
 --------------------------------------------------------------------------
 system:
-  hash: '4ccd0f1953483581ba360c7518f90332'
+  hash: "4ccd0f1953483581ba360c7518f90332"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
         value (ignored because stacktrace takes precedence)
-          u'sync exception'
+          "sync exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/connection_error.pysnap
index 1b927fa7e8..dffda50bc0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/connection_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/connection_error.pysnap
@@ -1,187 +1,187 @@
 ---
-created: '2019-04-17T20:02:28.191952Z'
+created: '2020-02-26T19:54:33.623832Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'a3bcd79525a31922367598b0e6b6fda4'
+  hash: "a3bcd79525a31922367598b0e6b6fda4"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (ignored because stacktrace takes precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '011c0e7a2decebaeb1897a7f08baeb1a'
+  hash: "011c0e7a2decebaeb1897a7f08baeb1a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (ignored because stacktrace takes precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp.pysnap
index 9e6545cc22..aaacb6bcbf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-04-17T20:02:28.201100Z'
+created: '2020-02-26T19:54:33.635662Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '666766514295bb52812324097cdaf53e'
+  hash: "666766514295bb52812324097cdaf53e"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'YYY'
+          "YYY"
       message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
+        "Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_img_src.pysnap
index 8c9c3cf8fc..a7a42822bf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_img_src.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_img_src.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-17T20:07:50.096382Z'
+created: '2020-02-26T19:54:33.645626Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1742101e08eb1608f569751dfedd0062'
+  hash: "1742101e08eb1608f569751dfedd0062"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'ftp://example.com'
+          "ftp://example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_no_blocked_uri.pysnap
index 1ea0e2552c..7b533cbaf6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_no_blocked_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_no_blocked_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-17T20:02:28.217626Z'
+created: '2020-02-26T19:54:33.659682Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
+  hash: "efddf1cde918097259aa7d4904fb1942"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
           "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_data_uri.pysnap
index e0ffccb0af..0eddfe54d9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_data_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_data_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-17T20:07:50.110881Z'
+created: '2020-02-26T19:54:33.675285Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
+  hash: "4e6f2bce9d121aa89f4dc5e5da08afb5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'data:'
+          "data:"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_src_uri.pysnap
index 042b9d40f4..edd8c38c71 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_src_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_script_src_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-17T20:07:50.119361Z'
+created: '2020-02-26T19:54:33.690577Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
+  hash: "223cdacfe5b4b830dc700b5c18cc21b4"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_style_src_elem.pysnap
index 5e868cc029..68d0d8a028 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_style_src_elem.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/csp_style_src_elem.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-04-17T20:02:28.242350Z'
+created: '2020-02-26T19:54:33.710918Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '537a973f594c364842893e9a72af62a5'
+  hash: "537a973f594c364842893e9a72af62a5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'style-src-elem'
+          "style-src-elem"
         violation (not a local script violation)
         uri*
-          u'use.fontawesome.com'
+          "use.fontawesome.com"
       message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
+        "Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/custom_fingerprint.pysnap
index bbea3b4f80..ff83c32ffe 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/custom_fingerprint.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/custom_fingerprint.pysnap
@@ -1,8 +1,8 @@
 ---
-created: '2019-04-17T20:07:50.137754Z'
+created: '2020-02-26T19:54:33.728031Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
+  hash: "f30afa00b85f5cac5ee0bce01b31f08d"
+  values: ["celery", "SoftTimeLimitExceeded", "sentry.tasks.store.process_event"]
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/empty.pysnap
index 43e2844a8c..9957906fe0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/empty.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/empty.pysnap
@@ -1,7 +1,7 @@
 ---
-created: '2019-04-17T20:07:50.146616Z'
+created: '2020-02-26T19:54:33.739395Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_comput_hashes.pysnap
index 9eab1d394d..ccfddab381 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_comput_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_comput_hashes.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-04-17T20:07:50.155718Z'
+created: '2020-02-26T19:54:33.752183Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'b23ee1963904c2ca87b145febf94b66c'
+  hash: "b23ee1963904c2ca87b145febf94b66c"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes.pysnap
index 5a2f03b694..6c16e9c761 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-04-17T20:02:28.278116Z'
+created: '2020-02-26T19:54:33.771031Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value (ignored because stacktrace takes precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_2.pysnap
index ee27be9480..1b0cf28d8f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_2.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-04-17T20:07:50.174875Z'
+created: '2020-02-26T19:54:33.788300Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value (ignored because stacktrace takes precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_3.pysnap
index 6dd37dc997..f25d5da1be 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_compute_hashes_3.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-17T20:02:28.297190Z'
+created: '2020-02-26T19:54:33.806547Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'b4c29e2a2a2681fbaf9fd8f5b09e4154'
+  hash: "b4c29e2a2a2681fbaf9fd8f5b09e4154"
   component:
     app*
       chained-exception*
@@ -12,23 +12,23 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -36,17 +36,17 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_javascript_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_javascript_no_in_app.pysnap
index c1805362be..a6e6500596 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_javascript_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_javascript_no_in_app.pysnap
@@ -1,50 +1,50 @@
 ---
-created: '2019-04-17T20:07:50.196282Z'
+created: '2020-02-26T19:54:33.826276Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
           frame (non app frame)
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function*
-              u'onError'
+              "onError"
         type*
-          u'TypeError'
+          "TypeError"
         value*
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
 --------------------------------------------------------------------------
 system:
-  hash: '8717a0fb8a1ddcabdd21bc2b7ca9ebee'
+  hash: "8717a0fb8a1ddcabdd21bc2b7ca9ebee"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
           frame*
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function*
-              u'onError'
+              "onError"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_type.pysnap
index ec7a237e45..a5f99acc93 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_type.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_type.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-04-17T20:02:28.316208Z'
+created: '2020-02-26T19:54:33.838679Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       exception*
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_value.pysnap
index faa540aaa6..397ac7eec7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_value.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/exception_without_value.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-04-17T20:07:50.227912Z'
+created: '2020-02-26T19:54:33.848559Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/expectct.pysnap
index 2581b14edf..2b9c829280 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/expectct.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/expectct.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-04-17T20:07:50.237599Z'
+created: '2020-02-26T19:54:33.867822Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
+  hash: "3d2933f4b5ec459ec8d569a398fd328c"
   component:
     default*
       expect-ct*
         salt* (a static salt)
-          'expect-ct'
+          "expect-ct"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
index b6d80e5ee4..7102d5cba8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.246903Z'
+created: '2020-02-26T19:54:33.897986Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '526b64456c48836a46ec1a89544fd412'
+  hash: "526b64456c48836a46ec1a89544fd412"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_ENHANCED_spring_classes.pysnap
index 81df74dd60..e83f1086f7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.256752Z'
+created: '2020-02-26T19:54:33.919644Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
+  hash: "45c0b0a8c777e7a7040d7c39233a08a5"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
index 3a2d46f89a..dbf9ee13b7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.361231Z'
+created: '2020-02-26T19:54:33.935682Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
+  hash: "353e05904b48bd3ae4fa9623934a70d0"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_spring_classes.pysnap
index dfb7a8c901..4b0f91ce0d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_extra_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.275606Z'
+created: '2020-02-26T19:54:33.947070Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
+  hash: "be15ca3d511b96918e087c4f42503ca2"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_from_url_origin_corner_cases.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_from_url_origin_corner_cases.pysnap
index 08e5c72130..994661c54d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_from_url_origin_corner_cases.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_from_url_origin_corner_cases.pysnap
@@ -1,42 +1,42 @@
 ---
-created: '2019-11-01T10:16:12.760098Z'
+created: '2020-02-26T19:54:33.970179Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
 --------------------------------------------------------------------------
 system:
-  hash: '05a671c66aefea124cc08b76ea6d30bb'
+  hash: "05a671c66aefea124cc08b76ea6d30bb"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
         frame
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_abs_path_is_http.pysnap
index de20adb7e8..00fd4c9703 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_abs_path_is_http.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.285154Z'
+created: '2020-02-26T19:54:33.984433Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_blob.pysnap
index e57ac1413a..2560dcb44b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_blob.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_blob.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-04-17T20:07:50.295173Z'
+created: '2020-02-26T19:54:33.997618Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_http.pysnap
index a97eb2d9b8..6ebc004814 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_http.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.304837Z'
+created: '2020-02-26T19:54:34.022825Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_https.pysnap
index 64859e1eb9..b39a962f6a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_https.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_filename_if_https.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.314645Z'
+created: '2020-02-26T19:54:34.035999Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_function.pysnap
index a400d8b508..8aafab72ee 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.418294Z'
+created: '2020-02-26T19:54:34.075028Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
 --------------------------------------------------------------------------
 system:
-  hash: 'be7f1b8b4014de623c533a8218dba5bd'
+  hash: "be7f1b8b4014de623c533a8218dba5bd"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_module.pysnap
index 2796cf8b80..42b8b80dc3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_module.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_java8_lambda_module.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.334132Z'
+created: '2020-02-26T19:54:34.137544Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
 --------------------------------------------------------------------------
 system:
-  hash: '53b9e9679a8ea25880376080b76f98ad'
+  hash: "53b9e9679a8ea25880376080b76f98ad"
   component:
     system*
       stacktrace*
         frame*
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist.pysnap
index 225f32da8d..05c52ee89c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.437263Z'
+created: '2020-02-26T19:54:34.167014Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_2.pysnap
index 635bba898b..fa9f18c61d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.353119Z'
+created: '2020-02-26T19:54:34.199151Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_3.pysnap
index 8a23641adf..ac4cc0e66b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_javassist_3.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.455437Z'
+created: '2020-02-26T19:54:34.232494Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: 'dc3d511120ce04996b1eef3496516e5c'
+  hash: "dc3d511120ce04996b1eef3496516e5c"
   component:
     system*
       stacktrace*
         frame*
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url.pysnap
index 3e2b07dedb..61387baf3e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url.pysnap
@@ -1,29 +1,29 @@
 ---
-created: '2019-07-10T12:18:44.713927Z'
+created: '2020-02-26T19:54:34.268711Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame (ignored single non-URL JavaScript frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url_2.pysnap
index d68c696e75..e8df5b7f3c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_module_if_page_url_2.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-05-08T07:33:30.841461Z'
+created: '2020-02-26T19:54:34.297861Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
 --------------------------------------------------------------------------
 system:
-  hash: '0cc175b9c0f1b6a831c399e269772661'
+  hash: "0cc175b9c0f1b6a831c399e269772661"
   component:
     system*
       stacktrace*
         frame*
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_safari_native_code.pysnap
index 012d69a27b..64442d464f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_safari_native_code.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_safari_native_code.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.390585Z'
+created: '2020-02-26T19:54:34.333260Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
 --------------------------------------------------------------------------
 system:
-  hash: '30eb5001914d29dd8461898b5b8094fe'
+  hash: "30eb5001914d29dd8461898b5b8094fe"
   component:
     system*
       stacktrace*
         frame*
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors.pysnap
index 9c75d83813..677c76a2d3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.400714Z'
+created: '2020-02-26T19:54:34.363067Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
+  hash: "07d1a8e5728b3c4c7aa8b8273fd0e753"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors_2.pysnap
index c603d7c675..e31184464c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_constructors_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.410557Z'
+created: '2020-02-26T19:54:34.387948Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '09e0efcab18f545166318118ed4e0292'
+  hash: "09e0efcab18f545166318118ed4e0292"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_methods.pysnap
index 0abbcc9676..a9bb5c2ce0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_methods.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_ignores_sun_java_generated_methods.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-05-21T19:16:12.157909Z'
+created: '2020-02-26T19:54:34.428193Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame (non app frame)
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '9bc326575875422d0d4ced3c35d9f916'
+  hash: "9bc326575875422d0d4ced3c35d9f916"
   component:
     system*
       stacktrace*
         frame*
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame*
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_block_functions.pysnap
index 1d3e76d1ec..9998301e40 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_block_functions.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_block_functions.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.523687Z'
+created: '2020-02-26T19:54:34.460095Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
 --------------------------------------------------------------------------
 system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
+  hash: "27eed4125fc13d42163ddb0b8f357b48"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_erb_templates.pysnap
index 01dd524e9d..f25dc0359e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_erb_templates.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.533322Z'
+created: '2020-02-26T19:54:34.491630Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
 --------------------------------------------------------------------------
 system:
-  hash: '4067a71d7098866f87c746a57a77b2bb'
+  hash: "4067a71d7098866f87c746a57a77b2bb"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames.pysnap
index 3318555c57..6bb55f7c0e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-04-17T20:02:28.542399Z'
+created: '2020-02-26T19:54:34.530701Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames_2.pysnap
index 7aba165fce..bb15030e86 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_sanitizes_versioned_filenames_2.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-04-17T20:07:50.456820Z'
+created: '2020-02-26T19:54:34.564733Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_skips_symbol_if_unknown.pysnap
index aba680ea61..f57958131f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_skips_symbol_if_unknown.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_skips_symbol_if_unknown.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.466994Z'
+created: '2020-02-26T19:54:34.596794Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
 --------------------------------------------------------------------------
 system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
+  hash: "a972f399399f5566f39b14a7afdd24ff"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_context_line_over_function.pysnap
index bd869826e3..8b6981bb4d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_context_line_over_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_context_line_over_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:02:28.570816Z'
+created: '2020-02-26T19:54:34.655231Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_function_over_lineno.pysnap
index 0379baeb55..23250cdb50 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_function_over_lineno.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_function_over_lineno.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.487612Z'
+created: '2020-02-26T19:54:34.735205Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_module_over_filename.pysnap
index 8a9a622d28..054f12e696 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_module_over_filename.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_module_over_filename.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.497809Z'
+created: '2020-02-26T19:54:34.786314Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_symbol_instead_of_function.pysnap
index 943fb8fbe7..5ad3cf073a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_symbol_instead_of_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_uses_symbol_instead_of_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.507465Z'
+created: '2020-02-26T19:54:34.816184Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
 --------------------------------------------------------------------------
 system:
-  hash: '23db4a9e73800923f345d2b868993345'
+  hash: "23db4a9e73800923f345d2b868993345"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_with_only_required_vars.pysnap
index b68f5cdb7d..1efaf0a5dd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_with_only_required_vars.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/frame_with_only_required_vars.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-04-17T20:07:50.517534Z'
+created: '2020-02-26T19:54:34.836914Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/hpkp.pysnap
index d903486bd8..394e421197 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/hpkp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/hpkp.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-04-17T20:07:50.527542Z'
+created: '2020-02-26T19:54:34.852325Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
+  hash: "1e37a374cb33572622d02ff7a6237c44"
   component:
     default*
       hpkp*
         salt* (a static salt)
-          'hpkp'
+          "hpkp"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_chained.pysnap
index 46bf0d5ce0..697c07d7a7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_chained.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_chained.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-17T20:02:28.650833Z'
+created: '2020-02-26T19:54:34.930429Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '750486b8d8c51500fa0dfbb6f1577af0'
+  hash: "750486b8d8c51500fa0dfbb6f1577af0"
   component:
     app*
       chained-exception*
@@ -12,394 +12,394 @@ app:
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame (non app frame)
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value*
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value*
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'Failed to start component [Connector[HTTP/<float><int>]]'
+            "Failed to start component [Connector[HTTP/<float><int>]]"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/<float><int>]]'
+        "Failed to start connector [Connector[HTTP/<float><int>]]"
 --------------------------------------------------------------------------
 system:
-  hash: '8924849495809d42431719c2b9ab65c8'
+  hash: "8924849495809d42431719c2b9ab65c8"
   component:
     system*
       chained-exception*
@@ -407,381 +407,381 @@ system:
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame*
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (ignored because stacktrace takes precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'Failed to start component [Connector[HTTP/<float><int>]]'
+            "Failed to start component [Connector[HTTP/<float><int>]]"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_minimal.pysnap
index 10d61dd8b7..f973e117a2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_minimal.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/java_minimal.pysnap
@@ -1,803 +1,803 @@
 ---
-created: '2019-04-17T20:07:50.591394Z'
+created: '2020-02-26T19:54:34.999336Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame (non app frame)
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame (non app frame)
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value*
-          u'/ by zero'
+          "/ by zero"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+        "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
 --------------------------------------------------------------------------
 system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  hash: "ec87dd10e4f7512ecccb4a068c5774ae"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame*
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame*
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame*
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame*
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (ignored because stacktrace takes precedence)
-          u'/ by zero'
+          "/ by zero"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message.pysnap
index 60b2b59287..ce95c68589 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-04-17T20:26:40.111823Z'
+created: '2020-02-26T19:54:35.019266Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'Loading chunk <int> failed.\n(timeout: <url>'
+          "Loading chunk <int> failed.\n(timeout: <url>"
 --------------------------------------------------------------------------
 system:
-  hash: '10dfd81e2df31e96fae451b9e205ad81'
+  hash: "10dfd81e2df31e96fae451b9e205ad81"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'Loading chunk <int> failed.\n(timeout: <url>'
+          "Loading chunk <int> failed.\n(timeout: <url>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message_whistles.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message_whistles.pysnap
index 62bc791785..035a114583 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message_whistles.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_fallback_to_message_whistles.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-09-16T13:22:22.844249Z'
+created: '2020-02-26T19:54:35.031817Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>'
+          "<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>"
 --------------------------------------------------------------------------
 system:
-  hash: 'b8e2a347e75266ca7bb565e2b3c0722e'
+  hash: "b8e2a347e75266ca7bb565e2b3c0722e"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>'
+          "<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_no_in_app.pysnap
index 7cf29e14b5..c52efa61ad 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_exception_no_in_app.pysnap
@@ -1,146 +1,146 @@
 ---
-created: '2019-04-17T20:07:50.604570Z'
+created: '2020-02-26T19:54:35.057576Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
           frame (non app frame)
             filename*
-              u'index.js'
+              "index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value*
-          u'varant is not defined'
+          "varant is not defined"
 --------------------------------------------------------------------------
 system:
-  hash: 'c792aaace0c1a534a115ece18c376538'
+  hash: "c792aaace0c1a534a115ece18c376538"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'Object.invokeGuardedCallbackDev'
+              "Object.invokeGuardedCallbackDev"
           frame*
             filename*
-              u'index.js'
+              "index.js"
             function*
-              u'HTMLUnknownElement.sentryWrapped'
+              "HTMLUnknownElement.sentryWrapped"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'HTMLUnknownElement.callCallback'
+              "HTMLUnknownElement.callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (ignored because stacktrace takes precedence)
-          u'varant is not defined'
+          "varant is not defined"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_message.pysnap
index a663ff09ff..2272fce3cf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-17T20:02:28.701389Z'
+created: '2020-02-26T19:54:35.075524Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
+  hash: "4119639092e62c55ea8be348e4d9260d"
   component:
     default*
       message*
-        u'event'
+        "event"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_chrome.pysnap
index ceef786e59..b3c55e91f2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_chrome.pysnap
@@ -1,118 +1,118 @@
 ---
-created: '2019-05-08T19:13:32.221404Z'
+created: '2020-02-26T19:54:35.099293Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'f1eafcdff05ffb12bb43880c5d0da248'
+  hash: "f1eafcdff05ffb12bb43880c5d0da248"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_edge.pysnap
index 60d3c9b6b6..9bef3577ff 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_edge.pysnap
@@ -1,126 +1,126 @@
 ---
-created: '2019-05-08T19:13:32.233022Z'
+created: '2020-02-26T19:54:35.128223Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '11b10a754e6caa4f763377efecb5505e'
+  hash: "11b10a754e6caa4f763377efecb5505e"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename*
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_firefox.pysnap
index a937bf56ff..3b0c5468fd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_firefox.pysnap
@@ -1,112 +1,112 @@
 ---
-created: '2019-05-10T13:21:32.625659Z'
+created: '2020-02-26T19:54:35.162449Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'fe1acbd354c812ab2969a76083b84e7f'
+  hash: "fe1acbd354c812ab2969a76083b84e7f"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_chrome.pysnap
index 3c5c3eafc0..5fcffe3dc9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_chrome.pysnap
@@ -1,154 +1,154 @@
 ---
-created: '2019-05-08T19:44:36.504663Z'
+created: '2020-02-26T19:54:35.199613Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'ae807192d4f922c3f0513ce4df585ce6'
+  hash: "ae807192d4f922c3f0513ce4df585ce6"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.testMethod'
+              "Foo.testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function*
-              u'Array.map'
+              "Array.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.callback'
+              "Object.callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Object.aha'
+              "Object.aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_edge.pysnap
index 8da7cd5337..d9398a87f9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_edge.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-05-08T19:44:36.516776Z'
+created: '2020-02-26T19:54:35.232617Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'e834aba6bf7b758128da092a68a18e9a'
+  hash: "e834aba6bf7b758128da092a68a18e9a"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Foo.prototype.testMethod'
+              "Foo.prototype.testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function*
-              u'Array.prototype.map'
+              "Array.prototype.map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_firefox.pysnap
index 2904879dce..6b6493282a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_firefox.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-05-10T13:21:32.663146Z'
+created: '2020-02-26T19:54:35.257219Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '7eb6de53ca3380ea437501f940974f21'
+  hash: "7eb6de53ca3380ea437501f940974f21"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test/<'
+              "test/<"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_safari.pysnap
index b7badd1fa8..c26f22ed42 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_http_safari.pysnap
@@ -1,160 +1,160 @@
 ---
-created: '2019-05-08T19:44:36.540489Z'
+created: '2020-02-26T19:54:35.283218Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: '1c374ace6b13add91c6824b945dce4c3'
+  hash: "1c374ace6b13add91c6824b945dce4c3"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_safari.pysnap
index 732b7bed7c..63ca110aea 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_safari.pysnap
@@ -1,128 +1,128 @@
 ---
-created: '2019-05-08T19:13:32.255912Z'
+created: '2020-02-26T19:54:35.312813Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'fc72313a47981f6b86536e727d84c2d4'
+  hash: "fc72313a47981f6b86536e727d84c2d4"
   component:
     system*
       exception*
         stacktrace*
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_firefox.pysnap
index c98ec57b68..5db1a6186a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_firefox.pysnap
@@ -1,278 +1,278 @@
 ---
-created: '2019-05-08T21:58:35.987471Z'
+created: '2020-02-26T19:54:35.352065Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '9a671640bcd8830976947f4975a79427'
+  hash: "9a671640bcd8830976947f4975a79427"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function*
-              u'M'
+              "M"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'fn'
+              "fn"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'this'
+              "this"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'fn'
+              "fn"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'X'
+              "X"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
 --------------------------------------------------------------------------
 system:
-  hash: '272b303fa2cd65124456c87f30cdf3d5'
+  hash: "272b303fa2cd65124456c87f30cdf3d5"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function*
-              u'M'
+              "M"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'fn'
+              "fn"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'fn'
+              "fn"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'X'
+              "X"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_safari.pysnap
index d1f9df038d..9161fa7529 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/javascript_xbrowser_sentryui_safari.pysnap
@@ -1,232 +1,232 @@
 ---
-created: '2019-05-08T21:58:36.005336Z'
+created: '2020-02-26T19:54:35.388863Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '503cd0a69d1bdcfb9bdc7fa560201d73'
+  hash: "503cd0a69d1bdcfb9bdc7fa560201d73"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'call'
+              "call"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'q'
+              "q"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'fetchData'
+              "fetchData"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
 --------------------------------------------------------------------------
 system:
-  hash: '6404c9ce987071526293aa0b5456e60b'
+  hash: "6404c9ce987071526293aa0b5456e60b"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'_next'
+              "_next"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function*
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'key'
+              "key"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function*
-              u'tryCatch'
+              "tryCatch"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function*
-              u'call'
+              "call"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'q'
+              "q"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function*
-              u'fetchData'
+              "fetchData"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function*
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel.pysnap
index e21a47298b..5963a9f654 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel.pysnap
@@ -1,522 +1,522 @@
 ---
-created: '2019-04-17T20:07:50.642378Z'
+created: '2020-02-26T19:54:35.462927Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '294cfb8d1aa7ab375c4b49ce2733092c'
+  hash: "294cfb8d1aa7ab375c4b49ce2733092c"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame (non app frame)
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: 'a3719dac43d28c56931056d073154398'
+  hash: "a3719dac43d28c56931056d073154398"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
           frame*
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap
index 8a9446a7b2..b25667228f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap
@@ -1,52 +1,52 @@
 ---
-created: '2020-01-15T14:24:42.837532Z'
+created: '2020-02-26T19:54:35.499807Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6c99fc6b18e4fa4040a94e10729969db'
+  hash: "6c99fc6b18e4fa4040a94e10729969db"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function (ignored anonymous function)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '64809e005de3afd90f703a70e36a2591'
+  hash: "64809e005de3afd90f703a70e36a2591"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function (ignored anonymous function)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_prefers_message.pysnap
index 19364ba96c..ef14e62df5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-17T20:02:28.738214Z'
+created: '2020-02-26T19:54:35.537228Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_uses_formatted.pysnap
index 6d7e8211b0..051ecec78e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/logentry_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-17T20:07:50.658523Z'
+created: '2020-02-26T19:54:35.576479Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
+  hash: "329b29efcf1f77067a063e34f56e7791"
   component:
     default*
       message*
-        u'Hello there world!'
+        "Hello there world!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_prefers_message.pysnap
index 6b2f6e130d..6f48683456 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-17T20:02:28.754190Z'
+created: '2020-02-26T19:54:35.675938Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_uses_formatted.pysnap
index 2f1ebcb299..91f8451edf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/message_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-04-17T20:02:28.761775Z'
+created: '2020-02-26T19:54:35.697475Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
+  hash: "d3f5e52d24e9c1eae5abe6c866cced63"
   component:
     default*
       message*
-        u'Hello there Peter!'
+        "Hello there Peter!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/minified_javascript.pysnap
index a315fd82e4..b65efb7b63 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/minified_javascript.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/minified_javascript.pysnap
@@ -1,330 +1,330 @@
 ---
-created: '2019-04-17T20:09:17.479725Z'
+created: '2020-02-26T19:54:35.752369Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'S/<'
+              "S/<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/</a</<'
+              "e/</a</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/<'
+              "t.exports/<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/</<'
+              "t.exports/</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'o.e'
+              "o.e"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
 --------------------------------------------------------------------------
 system:
-  hash: '074e2ed5d89f602d31be5742ac107fef'
+  hash: "074e2ed5d89f602d31be5742ac107fef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'S/<'
+              "S/<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/</a</<'
+              "e/</a</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/<'
+              "t.exports/<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u't.exports/</<'
+              "t.exports/</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'h/p._invoke</<'
+              "h/p._invoke</<"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'e/<'
+              "e/<"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'o.e'
+              "o.e"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
+              "Pt</t.prototype.wrapTimeFunction/<"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_complex_function_names.pysnap
index 7529979476..28110a3dd6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_complex_function_names.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_complex_function_names.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-05-11T09:56:06.984699Z'
+created: '2020-02-26T19:54:35.788493Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '61d21e6d53c0837718af047c20e5e7ea'
+  hash: "61d21e6d53c0837718af047c20e5e7ea"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_limit_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_limit_frames.pysnap
index 5332ddab1e..9576b7949f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_limit_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_limit_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-06-05T11:45:17.138928Z'
+created: '2020-02-26T19:54:35.825002Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '9bb5de55b854491dacc677184c9b019a'
+  hash: "9bb5de55b854491dacc677184c9b019a"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_no_filenames.pysnap
index 1723d9c86b..544b61daaf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_no_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_no_filenames.pysnap
@@ -1,110 +1,110 @@
 ---
-created: '2019-09-26T13:26:27.401817Z'
+created: '2020-02-26T19:54:35.971988Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '418120a66f7031923031f5c52aca0724'
+  hash: "418120a66f7031923031f5c52aca0724"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame (non app frame)
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame (non app frame)
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '00719910980352c06ba93641057012e0'
+  hash: "00719910980352c06ba93641057012e0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame*
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame*
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_unlimited_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_unlimited_frames.pysnap
index ee8e496b72..9e3d00d599 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_unlimited_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_unlimited_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-05-16T18:21:48.924332Z'
+created: '2020-02-26T19:54:36.006026Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '61d21e6d53c0837718af047c20e5e7ea'
+  hash: "61d21e6d53c0837718af047c20e5e7ea"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_windows_anon_namespace.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_windows_anon_namespace.pysnap
index 492c23de67..4ece2bac3c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_windows_anon_namespace.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_windows_anon_namespace.pysnap
@@ -1,76 +1,76 @@
 ---
-created: '2019-09-10T09:49:13.787660Z'
+created: '2020-02-26T19:54:36.092768Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::crash"
+              "`anonymous namespace'::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value*
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
 --------------------------------------------------------------------------
 system:
-  hash: '15d397771f229af8dc42783542f81dd4'
+  hash: "15d397771f229af8dc42783542f81dd4"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::crash"
+              "`anonymous namespace'::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value (ignored because stacktrace takes precedence)
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_with_function_name.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_with_function_name.pysnap
index 7bdc0ad759..ba1fbc894f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_with_function_name.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/native_with_function_name.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-04-27T19:27:07.008394Z'
+created: '2020-02-26T19:54:36.131597Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::something::nested::Foo<T>::crash'
+              "(anonymous namespace)::something::nested::Foo<T>::crash"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value*
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
 --------------------------------------------------------------------------
 system:
-  hash: 'c29439027eafcf7642f641554ab0f0ef'
+  hash: "c29439027eafcf7642f641554ab0f0ef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::something::nested::Foo<T>::crash'
+              "(anonymous namespace)::something::nested::Foo<T>::crash"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value (ignored because stacktrace takes precedence)
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/node_exception_weird.pysnap
index 1356a22c92..cdc5a7f9ba 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/node_exception_weird.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/node_exception_weird.pysnap
@@ -1,166 +1,166 @@
 ---
-created: '2019-04-17T20:07:50.747578Z'
+created: '2020-02-26T19:54:36.158642Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6e721dc6a6f261cc9ce994fe8dc2c917'
+  hash: "6e721dc6a6f261cc9ce994fe8dc2c917"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function*
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function*
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bla'
+          "bla"
 --------------------------------------------------------------------------
 system:
-  hash: '4dc62db23de39a20e1274015ee07d202'
+  hash: "4dc62db23de39a20e1274015ee07d202"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.withScope'
+              "Hub.Object.<anonymous>.Hub.withScope"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function*
-              u'null.<anonymous>'
+              "null.<anonymous>"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.mockConstructor [as captureException]'
+              "Hub.mockConstructor [as captureException]"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'Hub.<anonymous>'
+              "Hub.<anonymous>"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function*
-              u'Hub.Object.<anonymous>.Hub.captureException'
+              "Hub.Object.<anonymous>.Hub.captureException"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function*
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
+              "Hub.Object.<anonymous>.Hub.invokeClient"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function*
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
+              "NodeClient.Object.<anonymous>.BaseClient.captureException"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+              "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bla'
+          "bla"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_exception_base.pysnap
index 5f64f2bcb6..cc8a4d04ea 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_exception_base.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-04-17T20:07:50.757292Z'
+created: '2020-02-26T19:54:36.177823Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'b4c29e2a2a2681fbaf9fd8f5b09e4154'
+  hash: "b4c29e2a2a2681fbaf9fd8f5b09e4154"
   component:
     app*
       chained-exception*
@@ -12,23 +12,23 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -36,17 +36,17 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_away_from_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_away_from_crash.pysnap
index 8639f7b18a..bf4a3a2f03 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_away_from_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_away_from_crash.pysnap
@@ -1,166 +1,166 @@
 ---
-created: '2019-06-05T11:45:17.250141Z'
+created: '2020-02-26T19:54:36.203844Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '3871df283cbb705bfcfd22a44039a6d7'
+  hash: "3871df283cbb705bfcfd22a44039a6d7"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '193e32de84a65a6423cc047e47619ab8'
+  hash: "193e32de84a65a6423cc047e47619ab8"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame*
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_towards_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_towards_crash.pysnap
index 8d18259c53..5e2d34c4eb 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_towards_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_grouping_enhancer_towards_crash.pysnap
@@ -1,166 +1,166 @@
 ---
-created: '2019-06-05T11:45:17.268197Z'
+created: '2020-02-26T19:54:36.230357Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value*
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '761cbc1236089dd8bd96706c896d7087'
+  hash: "761cbc1236089dd8bd96706c896d7087"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
           frame*
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
           frame*
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_http_error.pysnap
index 03a62808e8..98fbac391a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_http_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/python_http_error.pysnap
@@ -1,75 +1,75 @@
 ---
-created: '2019-04-17T20:07:50.767883Z'
+created: '2020-02-26T19:54:36.273690Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '86a7a80de1a3e572aeb20b28ae8d62c6'
+  hash: "86a7a80de1a3e572aeb20b28ae8d62c6"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
           frame (non app frame)
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
         type*
-          u'HTTPError'
+          "HTTPError"
         value (ignored because stacktrace takes precedence)
-          u'<int> Client Error: Too Many Requests for url: <url>'
+          "<int> Client Error: Too Many Requests for url: <url>"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '07a725d19885057d03eccfa450a274f4'
+  hash: "07a725d19885057d03eccfa450a274f4"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
           frame*
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
         type*
-          u'HTTPError'
+          "HTTPError"
         value (ignored because stacktrace takes precedence)
-          u'<int> Client Error: Too Many Requests for url: <url>'
+          "<int> Client Error: Too Many Requests for url: <url>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/react_native.pysnap
index bf54767f55..54add46cc9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/react_native.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/react_native.pysnap
@@ -1,326 +1,326 @@
 ---
-created: '2019-04-17T20:02:28.878165Z'
+created: '2020-02-26T19:54:36.325267Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '93c2d97697ba4aa34b91557c1c217641'
+  hash: "93c2d97697ba4aa34b91557c1c217641"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'value'
+              "value"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'_inCall'
+              "_inCall"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_lastFlush'
+              "_lastFlush"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'batchedUpdates'
+              "batchedUpdates"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_batchedUpdates'
+              "_batchedUpdates"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'fn'
+              "fn"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'forEachAccumulated'
+              "forEachAccumulated"
           frame (non app frame)
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'D'
+              "D"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'executeDispatch'
+              "executeDispatch"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'arguments'
+              "arguments"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_receiveSignal'
+              "_receiveSignal"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'onPress'
+              "onPress"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'Button'
+              "Button"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
 --------------------------------------------------------------------------
 system:
-  hash: '53f5eee7a48d6754dcc87aee2be66195'
+  hash: "53f5eee7a48d6754dcc87aee2be66195"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'value'
+              "value"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'_inCall'
+              "_inCall"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function*
-              u'flushedQueue'
+              "flushedQueue"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_lastFlush'
+              "_lastFlush"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'batchedUpdates'
+              "batchedUpdates"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'_batchedUpdates'
+              "_batchedUpdates"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'fn'
+              "fn"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'forEachAccumulated'
+              "forEachAccumulated"
           frame*
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'D'
+              "D"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'executeDispatch'
+              "executeDispatch"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function*
-              u'apply'
+              "apply"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'arguments'
+              "arguments"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_receiveSignal'
+              "_receiveSignal"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function*
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function*
-              u'this'
+              "this"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'onPress'
+              "onPress"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function*
-              u'Button'
+              "Button"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_cocoa.pysnap
index d6130c38c0..eb17bce8a3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_cocoa.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_cocoa.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-17T20:02:28.888856Z'
+created: '2020-02-26T19:54:36.349135Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb416f98479efa56a77c524602dc9979'
+  hash: "eb416f98479efa56a77c524602dc9979"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame (non app frame)
           filename*
-            u'baz.m'
+            "baz.m"
 --------------------------------------------------------------------------
 system:
-  hash: '1df786c8c266506e1acb6669c8df5154'
+  hash: "1df786c8c266506e1acb6669c8df5154"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame*
           filename*
-            u'baz.m'
+            "baz.m"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_collapse_recursion.pysnap
index 9a166a0c41..f53a679350 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_collapse_recursion.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_collapse_recursion.pysnap
@@ -1,114 +1,114 @@
 ---
-created: '2019-04-17T20:02:28.900220Z'
+created: '2020-02-26T19:54:36.377022Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
 --------------------------------------------------------------------------
 system:
-  hash: '894c3489e2ade384dc107bca6829d134'
+  hash: "894c3489e2ade384dc107bca6829d134"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_compute_hashes.pysnap
index 359bf9c738..c23f19a07f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-17T20:07:50.821045Z'
+created: '2020-02-26T19:54:36.393985Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_discards_seemingly_useless_stack.pysnap
index a32e1cddaf..617f434880 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_discards_seemingly_useless_stack.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_discards_seemingly_useless_stack.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-04-17T20:02:28.918152Z'
+created: '2020-02-26T19:54:36.411861Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_discard_non_urls.pysnap
index c9a366d980..d0b6a8cdaa 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_discard_non_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_discard_non_urls.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-04-17T20:07:50.840132Z'
+created: '2020-02-26T19:54:36.427553Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_group_different_js_errors.pysnap
index 10256f1492..dd5c4920aa 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_group_different_js_errors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_does_not_group_different_js_errors.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-04-17T20:02:28.936612Z'
+created: '2020-02-26T19:54:36.441365Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_enforce_min_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_enforce_min_frames.pysnap
index fe9ac000cb..b010ec0c0d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_enforce_min_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_enforce_min_frames.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-07-09T13:22:10.137941Z'
+created: '2020-02-26T19:54:36.536021Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (discarded because stacktrace only contains 1 frame which is under the configured threshold by grouping enhancement rule (family:native min-frames=2))
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_excludes_single_frame_urls.pysnap
index 620c61752f..ace0d7c39a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_excludes_single_frame_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_excludes_single_frame_urls.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-04-17T20:07:50.858441Z'
+created: '2020-02-26T19:54:36.554400Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
 --------------------------------------------------------------------------
 system:
-  hash: 'cd2a9fd0cdaa8cd55ed22b101fc65882'
+  hash: "cd2a9fd0cdaa8cd55ed22b101fc65882"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_hash_without_system_frames.pysnap
index fe1f448275..16dfe9bc12 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_hash_without_system_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_hash_without_system_frames.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-17T20:02:28.958253Z'
+created: '2020-02-26T19:54:36.579003Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_ignores_singular_anonymous_frame.pysnap
index 216427ffce..bb3f678c4d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_ignores_singular_anonymous_frame.pysnap
@@ -1,42 +1,42 @@
 ---
-created: '2019-04-17T20:07:50.878689Z'
+created: '2020-02-26T19:54:36.596644Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
 --------------------------------------------------------------------------
 system:
-  hash: 'e61225523929cf925f6ac3b1f7f26d85'
+  hash: "e61225523929cf925f6ac3b1f7f26d85"
   component:
     system*
       stacktrace*
         frame
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame*
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame*
           filename (ignored because frame points to a URL)
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'Object._createDocumentViewModel'
+            "Object._createDocumentViewModel"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust.pysnap
index 2bba69e095..04b981134c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-06-05T11:45:17.444061Z'
+created: '2020-02-26T19:54:36.722640Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust2.pysnap
index 1687e51fdf..822c9e88f9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_rust2.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-06-05T11:45:17.499314Z'
+created: '2020-02-26T19:54:36.814970Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
+  hash: "9b33b65a645c66239cafcd276fcd0659"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (ignored by grouping enhancement rule (family:native function:__* -group))
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (ignored by grouping enhancement rule (family:native function:*::__* -group))
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_with_minimal_app_frames.pysnap
index 08f0c91186..8979c88285 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_with_minimal_app_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/stacktrace_with_minimal_app_frames.pysnap
@@ -1,88 +1,88 @@
 ---
-created: '2019-04-17T20:07:50.980149Z'
+created: '2020-02-26T19:54:36.843534Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/template_compute_hashes.pysnap
index ab79564b37..879286203d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/template_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/template_compute_hashes.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-04-17T20:07:50.987961Z'
+created: '2020-02-26T19:54:36.857228Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '826f66ef602835f68030c04c634df320'
+  hash: "826f66ef602835f68030c04c634df320"
   component:
     default*
       template*
         filename*
-          u'foo.html'
+          "foo.html"
         context-line*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_compute_hashes.pysnap
index 7e7d2501bd..4e9d550ddd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-17T20:02:29.122896Z'
+created: '2020-02-26T19:54:36.876767Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (threads of system takes precedence)
       threads (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
 --------------------------------------------------------------------------
 system:
-  hash: '1a11687556cf74559f0ae90b1c87e2fd'
+  hash: "1a11687556cf74559f0ae90b1c87e2fd"
   component:
     system*
       threads*
         stacktrace*
           frame*
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_no_hash.pysnap
index f40237c38d..39c8ce101a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_no_hash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/threads_no_hash.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-04-17T20:02:29.134183Z'
+created: '2020-02-26T19:54:36.892756Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       threads (ignored because contains 2 threads)
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/actix.pysnap
index 96c225c696..05a6c2c384 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/actix.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/actix.pysnap
@@ -1,788 +1,788 @@
 ---
-created: '2019-09-26T13:46:41.968243Z'
+created: '2020-02-26T19:54:37.382098Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '703d3dd9cb763e3f5037f659d27da947'
+  hash: "703d3dd9cb763e3f5037f659d27da947"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (ignored because stacktrace takes precedence)
-          u'Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here"
 --------------------------------------------------------------------------
 system:
-  hash: '1df163ce3be65319df4fcc9cb34b60c1'
+  hash: "1df163ce3be65319df4fcc9cb34b60c1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame*
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame* (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (ignored because stacktrace takes precedence)
-          u'Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/aspnetcore.pysnap
index c791405cbd..5d21dd15f1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/aspnetcore.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/aspnetcore.pysnap
@@ -1,347 +1,347 @@
 ---
-created: '2019-05-08T07:29:41.980976Z'
+created: '2020-02-26T19:54:37.424317Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '228c649a3aa0901622c0a0e66ab0522c'
+  hash: "228c649a3aa0901622c0a0e66ab0522c"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame (non app frame)
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
         value (ignored because stacktrace takes precedence)
-          u'sync exception'
+          "sync exception"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
+        "An unhandled exception has occurred while executing the request."
 --------------------------------------------------------------------------
 system:
-  hash: '4ccd0f1953483581ba360c7518f90332'
+  hash: "4ccd0f1953483581ba360c7518f90332"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
         value (ignored because stacktrace takes precedence)
-          u'sync exception'
+          "sync exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/connection_error.pysnap
index 49393eeac7..ef5c204a4a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/connection_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/connection_error.pysnap
@@ -1,231 +1,231 @@
 ---
-created: '2019-05-08T07:31:17.178420Z'
+created: '2020-02-26T19:54:37.450121Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6b059b9febc815ac18ac4d2082e38a9b'
+  hash: "6b059b9febc815ac18ac4d2082e38a9b"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
             context-line*
-              u'context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'rejections = is_rate_limited(client, keys, args)'
+              "rejections = is_rate_limited(client, keys, args)"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
             context-line*
-              u'return script(keys, args, client)'
+              "return script(keys, args, client)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
             context-line*
-              u'return client.evalsha(self.sha, len(keys), *args)'
+              "return client.evalsha(self.sha, len(keys), *args)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
             context-line*
-              u"return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
             context-line*
-              u'return self.parse_response(connection, command_name, **options)'
+              "return self.parse_response(connection, command_name, **options)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
             context-line*
-              u'response = connection.read_response()'
+              "response = connection.read_response()"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'response = self._parser.read_response()'
+              "response = self._parser.read_response()"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'(e.args,))'
+              "(e.args,))"
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (ignored because stacktrace takes precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '013d3477a774fe20c468dc8accd516f1'
+  hash: "013d3477a774fe20c468dc8accd516f1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
             context-line*
-              u'context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'rejections = is_rate_limited(client, keys, args)'
+              "rejections = is_rate_limited(client, keys, args)"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
             context-line*
-              u'return script(keys, args, client)'
+              "return script(keys, args, client)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
             context-line*
-              u'return client.evalsha(self.sha, len(keys), *args)'
+              "return client.evalsha(self.sha, len(keys), *args)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
             context-line*
-              u"return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
             context-line*
-              u'return self.parse_response(connection, command_name, **options)'
+              "return self.parse_response(connection, command_name, **options)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
             context-line*
-              u'response = connection.read_response()'
+              "response = connection.read_response()"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'response = self._parser.read_response()'
+              "response = self._parser.read_response()"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'(e.args,))'
+              "(e.args,))"
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (ignored because stacktrace takes precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp.pysnap
index dd2093ea30..cab2c5fe57 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-05-08T07:29:42.002642Z'
+created: '2020-02-26T19:54:37.468314Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '666766514295bb52812324097cdaf53e'
+  hash: "666766514295bb52812324097cdaf53e"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'YYY'
+          "YYY"
       message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
+        "Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_img_src.pysnap
index d82a399ecd..2f4a796384 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_img_src.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_img_src.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.010851Z'
+created: '2020-02-26T19:54:37.480874Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1742101e08eb1608f569751dfedd0062'
+  hash: "1742101e08eb1608f569751dfedd0062"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'ftp://example.com'
+          "ftp://example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_no_blocked_uri.pysnap
index 8a2753861d..920fb6699f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_no_blocked_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_no_blocked_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.017119Z'
+created: '2020-02-26T19:54:37.494031Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
+  hash: "efddf1cde918097259aa7d4904fb1942"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
           "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_data_uri.pysnap
index 95ef30eb10..0431f05181 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_data_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_data_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.024939Z'
+created: '2020-02-26T19:54:37.510732Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
+  hash: "4e6f2bce9d121aa89f4dc5e5da08afb5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'data:'
+          "data:"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_src_uri.pysnap
index caf6d13917..a3e3be0347 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_src_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_script_src_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.031984Z'
+created: '2020-02-26T19:54:37.529024Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
+  hash: "223cdacfe5b4b830dc700b5c18cc21b4"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_style_src_elem.pysnap
index 1009bad119..b5ecb3d498 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_style_src_elem.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/csp_style_src_elem.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-05-08T07:29:42.039516Z'
+created: '2020-02-26T19:54:37.543865Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '537a973f594c364842893e9a72af62a5'
+  hash: "537a973f594c364842893e9a72af62a5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'style-src-elem'
+          "style-src-elem"
         violation (not a local script violation)
         uri*
-          u'use.fontawesome.com'
+          "use.fontawesome.com"
       message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
+        "Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/custom_fingerprint.pysnap
index 18bef30cdb..1ef73fa076 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/custom_fingerprint.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/custom_fingerprint.pysnap
@@ -1,8 +1,8 @@
 ---
-created: '2019-05-08T07:29:42.048653Z'
+created: '2020-02-26T19:54:37.567280Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
+  hash: "f30afa00b85f5cac5ee0bce01b31f08d"
+  values: ["celery", "SoftTimeLimitExceeded", "sentry.tasks.store.process_event"]
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/empty.pysnap
index 304efa6a24..59dad617c3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/empty.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/empty.pysnap
@@ -1,7 +1,7 @@
 ---
-created: '2019-05-08T07:29:42.056458Z'
+created: '2020-02-26T19:54:37.580708Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_comput_hashes.pysnap
index 0e64a9ea45..e53d2b85e1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_comput_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_comput_hashes.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-05-08T07:29:42.065046Z'
+created: '2020-02-26T19:54:37.595609Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'b23ee1963904c2ca87b145febf94b66c'
+  hash: "b23ee1963904c2ca87b145febf94b66c"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes.pysnap
index b33c41eef0..2d46f56b56 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-05-08T07:29:42.073921Z'
+created: '2020-02-26T19:54:37.617221Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value (ignored because stacktrace takes precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_2.pysnap
index 718df996a4..9f0e0070a0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_2.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-05-08T07:29:42.082698Z'
+created: '2020-02-26T19:54:37.634320Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value (ignored because stacktrace takes precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_3.pysnap
index fa55228f41..79199a9d78 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_compute_hashes_3.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-05-08T07:29:42.092362Z'
+created: '2020-02-26T19:54:37.652993Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'b4c29e2a2a2681fbaf9fd8f5b09e4154'
+  hash: "b4c29e2a2a2681fbaf9fd8f5b09e4154"
   component:
     app*
       chained-exception*
@@ -12,23 +12,23 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -36,17 +36,17 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_javascript_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_javascript_no_in_app.pysnap
index 10d3c724b8..2a1842dd79 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_javascript_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_javascript_no_in_app.pysnap
@@ -1,58 +1,58 @@
 ---
-created: '2019-11-01T10:06:05.465176Z'
+created: '2020-02-26T19:54:37.676056Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
             context-line*
-              u'onError(err);'
+              "onError(err);"
           frame (non app frame)
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function (ignored because sourcemap used and context line available)
-              u'onError'
+              "onError"
             context-line*
-              u'this.model.submitError(error);'
+              "this.model.submitError(error);"
         type*
-          u'TypeError'
+          "TypeError"
         value*
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
 --------------------------------------------------------------------------
 system:
-  hash: '26552f86ca2368e708afa1df6effc1c5'
+  hash: "26552f86ca2368e708afa1df6effc1c5"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
             context-line*
-              u'onError(err);'
+              "onError(err);"
           frame*
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function (ignored because sourcemap used and context line available)
-              u'onError'
+              "onError"
             context-line*
-              u'this.model.submitError(error);'
+              "this.model.submitError(error);"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_type.pysnap
index 9a642bad73..1a4aea4e71 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_type.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_type.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-05-08T07:29:42.110803Z'
+created: '2020-02-26T19:54:37.692097Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       exception*
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_value.pysnap
index 6f87de617d..421a1a5fca 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_value.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/exception_without_value.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-05-08T07:29:42.118745Z'
+created: '2020-02-26T19:54:37.706789Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/expectct.pysnap
index d153799bdd..9fe4d40ad2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/expectct.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/expectct.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-05-08T07:29:42.127596Z'
+created: '2020-02-26T19:54:37.726616Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
+  hash: "3d2933f4b5ec459ec8d569a398fd328c"
   component:
     default*
       expect-ct*
         salt* (a static salt)
-          'expect-ct'
+          "expect-ct"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
index d46642a406..c93291e9d7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.135625Z'
+created: '2020-02-26T19:54:37.743245Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '526b64456c48836a46ec1a89544fd412'
+  hash: "526b64456c48836a46ec1a89544fd412"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_ENHANCED_spring_classes.pysnap
index 78f06178b9..a90e10cf81 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.143860Z'
+created: '2020-02-26T19:54:37.763198Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
+  hash: "45c0b0a8c777e7a7040d7c39233a08a5"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
index f17d7fd2cb..fbad554fee 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.152945Z'
+created: '2020-02-26T19:54:37.778807Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
+  hash: "353e05904b48bd3ae4fa9623934a70d0"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_spring_classes.pysnap
index 2715a734d1..52e9cd48bb 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_extra_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.161510Z'
+created: '2020-02-26T19:54:37.793977Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
+  hash: "be15ca3d511b96918e087c4f42503ca2"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_from_url_origin_corner_cases.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_from_url_origin_corner_cases.pysnap
index 7b75c12de3..d8c1c5c954 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_from_url_origin_corner_cases.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_from_url_origin_corner_cases.pysnap
@@ -1,54 +1,54 @@
 ---
-created: '2019-11-01T10:16:14.268235Z'
+created: '2020-02-26T19:54:37.816777Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
         frame (non app frame)
           filename*
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'bd8c868a3914eeb4f48e7ef46f19a0df'
+  hash: "bd8c868a3914eeb4f48e7ef46f19a0df"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
         frame*
           filename*
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
         frame
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_abs_path_is_http.pysnap
index ed70404561..52091bd0f4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_abs_path_is_http.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.169865Z'
+created: '2020-02-26T19:54:37.833174Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_blob.pysnap
index 013f2527d3..1ac9daff39 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_blob.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_blob.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-11-01T10:06:05.544041Z'
+created: '2020-02-26T19:54:37.851426Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_http.pysnap
index 6736875293..f7263fa885 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_http.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-11-01T10:02:43.394263Z'
+created: '2020-02-26T19:54:37.870382Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_https.pysnap
index f49e4026ae..5819c21ab7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_https.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_filename_if_https.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-11-01T10:02:43.404327Z'
+created: '2020-02-26T19:54:37.886136Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line (discarded because from URL origin)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_function.pysnap
index 8be3c1e7b0..82a4cb5620 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.203242Z'
+created: '2020-02-26T19:54:37.901852Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
 --------------------------------------------------------------------------
 system:
-  hash: 'be7f1b8b4014de623c533a8218dba5bd'
+  hash: "be7f1b8b4014de623c533a8218dba5bd"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_module.pysnap
index 2b7179dea3..0826216f94 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_module.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_java8_lambda_module.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.212235Z'
+created: '2020-02-26T19:54:37.921782Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
 --------------------------------------------------------------------------
 system:
-  hash: '53b9e9679a8ea25880376080b76f98ad'
+  hash: "53b9e9679a8ea25880376080b76f98ad"
   component:
     system*
       stacktrace*
         frame*
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist.pysnap
index f48514c291..a6f56cdd73 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.220823Z'
+created: '2020-02-26T19:54:37.937295Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_2.pysnap
index d069f640e7..8475ef2690 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.229148Z'
+created: '2020-02-26T19:54:37.955687Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_3.pysnap
index 8f11227a35..a04ebe11f1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_javassist_3.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.237627Z'
+created: '2020-02-26T19:54:37.975599Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: 'dc3d511120ce04996b1eef3496516e5c'
+  hash: "dc3d511120ce04996b1eef3496516e5c"
   component:
     system*
       stacktrace*
         frame*
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url.pysnap
index 2d9d2a2376..3d01040be4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url.pysnap
@@ -1,29 +1,29 @@
 ---
-created: '2019-11-01T10:06:05.611880Z'
+created: '2020-02-26T19:54:37.990011Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame (ignored single non-URL JavaScript frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url_2.pysnap
index f87f0eea03..9b2bcb11ff 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_module_if_page_url_2.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-05-08T07:33:31.730952Z'
+created: '2020-02-26T19:54:38.006050Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
 --------------------------------------------------------------------------
 system:
-  hash: '0cc175b9c0f1b6a831c399e269772661'
+  hash: "0cc175b9c0f1b6a831c399e269772661"
   component:
     system*
       stacktrace*
         frame*
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_safari_native_code.pysnap
index 48b40b692b..e20f6a7ed8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_safari_native_code.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_safari_native_code.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.263032Z'
+created: '2020-02-26T19:54:38.025362Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
 --------------------------------------------------------------------------
 system:
-  hash: '30eb5001914d29dd8461898b5b8094fe'
+  hash: "30eb5001914d29dd8461898b5b8094fe"
   component:
     system*
       stacktrace*
         frame*
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors.pysnap
index 18e58ac5d5..43f4975a79 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.272169Z'
+created: '2020-02-26T19:54:38.040990Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
+  hash: "07d1a8e5728b3c4c7aa8b8273fd0e753"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors_2.pysnap
index 66b46815bb..e3e6caa06d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_constructors_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.280719Z'
+created: '2020-02-26T19:54:38.057001Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '09e0efcab18f545166318118ed4e0292'
+  hash: "09e0efcab18f545166318118ed4e0292"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_methods.pysnap
index 3e9c3119e6..cd02c16f48 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_methods.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_ignores_sun_java_generated_methods.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-05-21T19:16:13.403893Z'
+created: '2020-02-26T19:54:38.076395Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame (non app frame)
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '9bc326575875422d0d4ced3c35d9f916'
+  hash: "9bc326575875422d0d4ced3c35d9f916"
   component:
     system*
       stacktrace*
         frame*
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame*
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_block_functions.pysnap
index 4881acdc35..a69325d882 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_block_functions.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_block_functions.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.297875Z'
+created: '2020-02-26T19:54:38.092722Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
 --------------------------------------------------------------------------
 system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
+  hash: "27eed4125fc13d42163ddb0b8f357b48"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_erb_templates.pysnap
index 8df7e5ae00..e7e298a716 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_erb_templates.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.306583Z'
+created: '2020-02-26T19:54:38.110078Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
 --------------------------------------------------------------------------
 system:
-  hash: '4067a71d7098866f87c746a57a77b2bb'
+  hash: "4067a71d7098866f87c746a57a77b2bb"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames.pysnap
index 3318555c57..22e22f693a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-04-17T20:02:28.542399Z'
+created: '2020-02-26T19:54:38.127506Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames_2.pysnap
index 7fed522973..653cf27e95 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_sanitizes_versioned_filenames_2.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-05-08T07:29:42.323867Z'
+created: '2020-02-26T19:54:38.142312Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_skips_symbol_if_unknown.pysnap
index 6327b2dbfd..350f18169b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_skips_symbol_if_unknown.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_skips_symbol_if_unknown.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.332442Z'
+created: '2020-02-26T19:54:38.161422Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
 --------------------------------------------------------------------------
 system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
+  hash: "a972f399399f5566f39b14a7afdd24ff"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_context_line_over_function.pysnap
index 1fe67ea181..ca1de1ecb6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_context_line_over_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_context_line_over_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.340686Z'
+created: '2020-02-26T19:54:38.180396Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_function_over_lineno.pysnap
index 7b56ea05a3..36bb9fb86c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_function_over_lineno.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_function_over_lineno.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.349235Z'
+created: '2020-02-26T19:54:38.195410Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_module_over_filename.pysnap
index acb115f768..d7ebf999f5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_module_over_filename.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_module_over_filename.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.357628Z'
+created: '2020-02-26T19:54:38.216829Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_symbol_instead_of_function.pysnap
index 0259e459ce..dae7a16f50 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_symbol_instead_of_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_uses_symbol_instead_of_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.365989Z'
+created: '2020-02-26T19:54:38.233074Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
 --------------------------------------------------------------------------
 system:
-  hash: '23db4a9e73800923f345d2b868993345'
+  hash: "23db4a9e73800923f345d2b868993345"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_with_only_required_vars.pysnap
index d82984f372..b1ecaf4409 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_with_only_required_vars.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/frame_with_only_required_vars.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-05-08T07:29:42.374452Z'
+created: '2020-02-26T19:54:38.248062Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/hpkp.pysnap
index 727b31bb1e..bb1dd98b1a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/hpkp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/hpkp.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-05-08T07:29:42.382950Z'
+created: '2020-02-26T19:54:38.270973Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
+  hash: "1e37a374cb33572622d02ff7a6237c44"
   component:
     default*
       hpkp*
         salt* (a static salt)
-          'hpkp'
+          "hpkp"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_chained.pysnap
index f20dd86a9b..4ebf20e392 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_chained.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_chained.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-05-08T07:29:42.412753Z'
+created: '2020-02-26T19:54:38.338250Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '750486b8d8c51500fa0dfbb6f1577af0'
+  hash: "750486b8d8c51500fa0dfbb6f1577af0"
   component:
     app*
       chained-exception*
@@ -12,394 +12,394 @@ app:
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame (non app frame)
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value*
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value*
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'Failed to start component [Connector[HTTP/<float><int>]]'
+            "Failed to start component [Connector[HTTP/<float><int>]]"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/<float><int>]]'
+        "Failed to start connector [Connector[HTTP/<float><int>]]"
 --------------------------------------------------------------------------
 system:
-  hash: '8924849495809d42431719c2b9ab65c8'
+  hash: "8924849495809d42431719c2b9ab65c8"
   component:
     system*
       chained-exception*
@@ -407,381 +407,381 @@ system:
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame*
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (ignored because stacktrace takes precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'Failed to start component [Connector[HTTP/<float><int>]]'
+            "Failed to start component [Connector[HTTP/<float><int>]]"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_minimal.pysnap
index 41fa52a755..795783f767 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_minimal.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/java_minimal.pysnap
@@ -1,803 +1,803 @@
 ---
-created: '2019-05-08T07:29:42.493256Z'
+created: '2020-02-26T19:54:38.423672Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame (non app frame)
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame (non app frame)
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value*
-          u'/ by zero'
+          "/ by zero"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+        "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
 --------------------------------------------------------------------------
 system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  hash: "ec87dd10e4f7512ecccb4a068c5774ae"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame*
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame*
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame*
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame*
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (ignored because stacktrace takes precedence)
-          u'/ by zero'
+          "/ by zero"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message.pysnap
index 4031d4c1b2..1002dde510 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-05-08T07:29:42.503455Z'
+created: '2020-02-26T19:54:38.455840Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'Loading chunk <int> failed.\n(timeout: <url>'
+          "Loading chunk <int> failed.\n(timeout: <url>"
 --------------------------------------------------------------------------
 system:
-  hash: '10dfd81e2df31e96fae451b9e205ad81'
+  hash: "10dfd81e2df31e96fae451b9e205ad81"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'Loading chunk <int> failed.\n(timeout: <url>'
+          "Loading chunk <int> failed.\n(timeout: <url>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message_whistles.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message_whistles.pysnap
index c8c3222e67..5ae269366b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message_whistles.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_fallback_to_message_whistles.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-09-16T13:22:24.055225Z'
+created: '2020-02-26T19:54:38.496936Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>'
+          "<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>"
 --------------------------------------------------------------------------
 system:
-  hash: 'b8e2a347e75266ca7bb565e2b3c0722e'
+  hash: "b8e2a347e75266ca7bb565e2b3c0722e"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>'
+          "<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_no_in_app.pysnap
index 91f769b157..9ec12a73b2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_exception_no_in_app.pysnap
@@ -1,146 +1,146 @@
 ---
-created: '2019-05-08T07:33:31.998496Z'
+created: '2020-02-26T19:54:38.550497Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'invokeGuardedCallbackDev'
+              "invokeGuardedCallbackDev"
           frame (non app frame)
             filename*
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'sentryWrapped'
+              "sentryWrapped"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'callCallback'
+              "callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value*
-          u'varant is not defined'
+          "varant is not defined"
 --------------------------------------------------------------------------
 system:
-  hash: 'c0f3f7d6deb17aec9d07259ac684fad0'
+  hash: "c0f3f7d6deb17aec9d07259ac684fad0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'invokeGuardedCallbackDev'
+              "invokeGuardedCallbackDev"
           frame*
             filename*
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'sentryWrapped'
+              "sentryWrapped"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'callCallback'
+              "callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (ignored because stacktrace takes precedence)
-          u'varant is not defined'
+          "varant is not defined"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_message.pysnap
index 1121c14c84..d5488c438a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.537223Z'
+created: '2020-02-26T19:54:38.576076Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
+  hash: "4119639092e62c55ea8be348e4d9260d"
   component:
     default*
       message*
-        u'event'
+        "event"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_chrome.pysnap
index 90309f893e..1e32ac16c1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_chrome.pysnap
@@ -1,118 +1,118 @@
 ---
-created: '2019-11-01T10:06:05.886134Z'
+created: '2020-02-26T19:54:38.603805Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_edge.pysnap
index 8c4feee01e..9c73424675 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_edge.pysnap
@@ -1,126 +1,126 @@
 ---
-created: '2019-05-10T12:45:55.643244Z'
+created: '2020-02-26T19:54:38.636819Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename*
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename*
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_firefox.pysnap
index 43a5bea2bb..5296e507fd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_firefox.pysnap
@@ -1,112 +1,112 @@
 ---
-created: '2019-11-01T10:06:05.916131Z'
+created: '2020-02-26T19:54:38.667342Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_chrome.pysnap
index db79f4bbbe..01b657cbf6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_chrome.pysnap
@@ -1,154 +1,154 @@
 ---
-created: '2019-11-01T10:06:05.932358Z'
+created: '2020-02-26T19:54:38.693715Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_edge.pysnap
index c628a2b1ac..84e2024137 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_edge.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-05-10T12:45:55.687880Z'
+created: '2020-02-26T19:54:38.725744Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_firefox.pysnap
index 2635aac41b..dfc02b25f9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_firefox.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-11-01T10:06:05.963211Z'
+created: '2020-02-26T19:54:38.747385Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_safari.pysnap
index 5dd2352fe3..cab9c86f60 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_http_safari.pysnap
@@ -1,160 +1,160 @@
 ---
-created: '2019-11-01T10:06:05.980442Z'
+created: '2020-02-26T19:54:38.782914Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_safari.pysnap
index f27b2ebe19..5bb0371f49 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_safari.pysnap
@@ -1,128 +1,128 @@
 ---
-created: '2019-11-01T10:06:05.997494Z'
+created: '2020-02-26T19:54:38.816076Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_firefox.pysnap
index fd98ffac76..e427c4ce14 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_firefox.pysnap
@@ -1,350 +1,350 @@
 ---
-created: '2019-10-31T12:42:10.480833Z'
+created: '2020-02-26T19:54:38.858833Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '4a3cf3893b6485428dd02da116c8370e'
+  hash: "4a3cf3893b6485428dd02da116c8370e"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function (ignored because sourcemap used and context line available)
-              u'M'
+              "M"
             context-line*
-              u'fn();'
+              "fn();"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u"while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'run'
+              "run"
             context-line*
-              u'result = handler(value); // may throw'
+              "result = handler(value); // may throw"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'return this._invoke(method, arg);'
+              "return this._invoke(method, arg);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} !==typeof a&&"function"!==typeof a&&null!=a?B("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=functi {snip}'
+              "{snip} !==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=functi {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}'
+              "{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
             context-line (discarded because line too long)
-              u'{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t("185"))}} {snip}'
+              "{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}} {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}'
+              "{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'{snip} t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}'
+              "{snip} t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
             context-line (discarded because line too long)
-              u'{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}'
+              "{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'X'
+              "X"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
 --------------------------------------------------------------------------
 system:
-  hash: 'd5456487ea8dccfe96c1968b19870978'
+  hash: "d5456487ea8dccfe96c1968b19870978"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function (ignored because sourcemap used and context line available)
-              u'M'
+              "M"
             context-line*
-              u'fn();'
+              "fn();"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u"while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'run'
+              "run"
             context-line*
-              u'result = handler(value); // may throw'
+              "result = handler(value); // may throw"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'return this._invoke(method, arg);'
+              "return this._invoke(method, arg);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} !==typeof a&&"function"!==typeof a&&null!=a?B("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=functi {snip}'
+              "{snip} !==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=functi {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}'
+              "{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
             context-line (discarded because line too long)
-              u'{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t("185"))}} {snip}'
+              "{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}} {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}'
+              "{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'{snip} t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}'
+              "{snip} t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
             context-line (discarded because line too long)
-              u'{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}'
+              "{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'X'
+              "X"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_safari.pysnap
index 8c8641afbf..c586977432 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/javascript_xbrowser_sentryui_safari.pysnap
@@ -1,288 +1,288 @@
 ---
-created: '2019-10-31T12:42:10.507542Z'
+created: '2020-02-26T19:54:38.896175Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '4a3cf3893b6485428dd02da116c8370e'
+  hash: "4a3cf3893b6485428dd02da116c8370e"
   component:
     app*
       exception*
         stacktrace*
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'call'
+              "call"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
             context-line (discarded because line too long)
-              u'{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}'
+              "{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             context-line (discarded because line too long)
-              u'{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=='
+              "{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=="
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
             context-line (discarded because line too long)
-              u'var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}'
+              "var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'function Xg(a,b,c){V?t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}'
+              "function Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}'
+              "function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
             context-line (discarded because line too long)
-              u'{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}'
+              "{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'q'
+              "q"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchData'
+              "fetchData"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
 --------------------------------------------------------------------------
 system:
-  hash: '0b81da6ea3d7cc82b1d4825b7aac0b8d'
+  hash: "0b81da6ea3d7cc82b1d4825b7aac0b8d"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'call'
+              "call"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
             context-line (discarded because line too long)
-              u'{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}'
+              "{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             context-line (discarded because line too long)
-              u'{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=='
+              "{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=="
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
             context-line (discarded because line too long)
-              u'var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}'
+              "var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'function Xg(a,b,c){V?t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}'
+              "function Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}'
+              "function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
             context-line (discarded because line too long)
-              u'{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}'
+              "{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'q'
+              "q"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchData'
+              "fetchData"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel.pysnap
index 29386623d2..c2f1544a03 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel.pysnap
@@ -1,722 +1,722 @@
 ---
-created: '2019-05-08T07:33:32.041454Z'
+created: '2020-02-26T19:54:38.988317Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '4665d486184740231357ab63f4543a8d'
+  hash: "4665d486184740231357ab63f4543a8d"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
             context-line*
-              u'$request = Illuminate\\Http\\Request::capture()'
+              "$request = Illuminate\\Http\\Request::capture()"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             context-line*
-              u'$response = $this->sendRequestThroughRouter($request);'
+              "$response = $this->sendRequestThroughRouter($request);"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             context-line*
-              u'->then($this->dispatchToRouter());'
+              "->then($this->dispatchToRouter());"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             context-line*
-              u'return $this->router->dispatch($request);'
+              "return $this->router->dispatch($request);"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             context-line*
-              u'return $this->dispatchToRoute($request);'
+              "return $this->dispatchToRoute($request);"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             context-line*
-              u'return $this->runRoute($request, $this->findRoute($request));'
+              "return $this->runRoute($request, $this->findRoute($request));"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             context-line*
-              u'$this->runRouteWithinStack($route, $request)'
+              "$this->runRouteWithinStack($route, $request)"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             context-line*
-              u'});'
+              "});"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             context-line*
-              u'return $this->encrypt($next($this->decrypt($request)));'
+              "return $this->encrypt($next($this->decrypt($request)));"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             context-line*
-              u'$response = $next($request);'
+              "$response = $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             context-line*
-              u'$response = $next($request), $session'
+              "$response = $next($request), $session"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             context-line*
-              u'return tap($next($request), function ($response) use ($request) {'
+              "return tap($next($request), function ($response) use ($request) {"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             context-line*
-              u'$request, $route->run()'
+              "$request, $route->run()"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             context-line*
-              u'return $this->runCallable();'
+              "return $this->runCallable();"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             context-line*
-              u"$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             context-line*
-              u"throw new Exception('LARAVEL TEST');"
+              "throw new Exception('LARAVEL TEST');"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '107ed03036d901157372f260bc3df446'
+  hash: "107ed03036d901157372f260bc3df446"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
             context-line*
-              u'$request = Illuminate\\Http\\Request::capture()'
+              "$request = Illuminate\\Http\\Request::capture()"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             context-line*
-              u'$response = $this->sendRequestThroughRouter($request);'
+              "$response = $this->sendRequestThroughRouter($request);"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             context-line*
-              u'->then($this->dispatchToRouter());'
+              "->then($this->dispatchToRouter());"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             context-line*
-              u'return $this->router->dispatch($request);'
+              "return $this->router->dispatch($request);"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             context-line*
-              u'return $this->dispatchToRoute($request);'
+              "return $this->dispatchToRoute($request);"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             context-line*
-              u'return $this->runRoute($request, $this->findRoute($request));'
+              "return $this->runRoute($request, $this->findRoute($request));"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             context-line*
-              u'$this->runRouteWithinStack($route, $request)'
+              "$this->runRouteWithinStack($route, $request)"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             context-line*
-              u'});'
+              "});"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             context-line*
-              u'return $this->encrypt($next($this->decrypt($request)));'
+              "return $this->encrypt($next($this->decrypt($request)));"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             context-line*
-              u'$response = $next($request);'
+              "$response = $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             context-line*
-              u'$response = $next($request), $session'
+              "$response = $next($request), $session"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             context-line*
-              u'return tap($next($request), function ($response) use ($request) {'
+              "return tap($next($request), function ($response) use ($request) {"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             context-line*
-              u'$request, $route->run()'
+              "$request, $route->run()"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             context-line*
-              u'return $this->runCallable();'
+              "return $this->runCallable();"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             context-line*
-              u"$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             context-line*
-              u"throw new Exception('LARAVEL TEST');"
+              "throw new Exception('LARAVEL TEST');"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap
index c6592aef29..f998735556 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2020-01-15T14:24:44.628338Z'
+created: '2020-02-26T19:54:39.018799Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'a728cdf5d62c8e017c35c3fe04051b6e'
+  hash: "a728cdf5d62c8e017c35c3fe04051b6e"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function (ignored anonymous function)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '38f89a430b4a251a06a5a15b382638b5'
+  hash: "38f89a430b4a251a06a5a15b382638b5"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function (ignored anonymous function)
-              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+              "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_prefers_message.pysnap
index 5e036c1661..021fe952e8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.577620Z'
+created: '2020-02-26T19:54:39.045636Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_uses_formatted.pysnap
index b823795fce..af9953323a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/logentry_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.584879Z'
+created: '2020-02-26T19:54:39.066462Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
+  hash: "329b29efcf1f77067a063e34f56e7791"
   component:
     default*
       message*
-        u'Hello there world!'
+        "Hello there world!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_prefers_message.pysnap
index b7265213e2..f841d8a8d1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.592184Z'
+created: '2020-02-26T19:54:39.083505Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_uses_formatted.pysnap
index 3b86ef421f..b0f1044975 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/message_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.599996Z'
+created: '2020-02-26T19:54:39.098534Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
+  hash: "d3f5e52d24e9c1eae5abe6c866cced63"
   component:
     default*
       message*
-        u'Hello there Peter!'
+        "Hello there Peter!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/minified_javascript.pysnap
index 93cf04ec79..1803f05b33 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/minified_javascript.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/minified_javascript.pysnap
@@ -1,418 +1,418 @@
 ---
-created: '2019-10-31T12:42:10.619408Z'
+created: '2020-02-26T19:54:39.152108Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
             context-line (discarded because line too long)
-              u'{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}'
+              "{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'S/<'
+              "S/<"
             context-line (discarded because line too long)
-              u'{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}'
+              "{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
             context-line (discarded because line too long)
-              u'{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y("Promise-chain cycle")):(p=N(n))?p.cal {snip}'
+              "{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y(\"Promise-chain cycle\")):(p=N(n))?p.cal {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
             context-line (discarded because line too long)
-              u'{snip} ply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}'
+              "{snip} ply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt("return",a());case 12:throw e.t0;case 13:case"end":return e.stop()}},e,this,[[0,7]])}));re {snip}'
+              "{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt(\"return\",a());case 12:throw e.t0;case 13:case\"end\":return e.stop()}},e,this,[[0,7]])}));re {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/</a</<'
+              "e/</a</<"
             context-line (discarded because line too long)
-              u'{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt("return",a());case 3:case"end":return e.stop {snip}'
+              "{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt(\"return\",a());case 3:case\"end\":return e.stop {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/<'
+              "exports/<"
             context-line (discarded because line too long)
-              u'{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)} {snip}'
+              "{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)} {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
             context-line (discarded because line too long)
-              u'{snip} function(t){O(this,L,"Promise","_h"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}'
+              "{snip} function(t){O(this,L,\"Promise\",\"_h\"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/</<'
+              "exports/</<"
             context-line (discarded because line too long)
-              u'{snip} n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}'
+              "{snip} n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
             context-line (discarded because line too long)
-              u'{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,funct {snip}'
+              "{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,funct {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt("return",r.default||r);case 7:if(e.prev=7,e.t {snip}'
+              "{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt(\"return\",r.default||r);case 7:if(e.prev=7,e.t {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
             context-line (discarded because line too long)
-              u'{snip} orgId/issues/:groupId/",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}'
+              "{snip} orgId/issues/:groupId/\",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function* (trimmed javascript function)
-              u'e'
+              "e"
             context-line (discarded because line too long)
-              u'{snip} "+i+")");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:"timeout",target:s})},12e4);s.onerror=s.onload=i,do {snip}'
+              "{snip} \"+i+\")\");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:\"timeout\",target:s})},12e4);s.onerror=s.onload=i,do {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'wrapTimeFunction/<'
+              "wrapTimeFunction/<"
             context-line (discarded because line too long)
-              u'{snip} ism:{data:{function:Dt(t)},handled:!0,type:"instrument"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}'
+              "{snip} ism:{data:{function:Dt(t)},handled:!0,type:\"instrument\"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
 --------------------------------------------------------------------------
 system:
-  hash: 'dcfcd48a02c100bbe4023cbc783054f0'
+  hash: "dcfcd48a02c100bbe4023cbc783054f0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
             context-line (discarded because line too long)
-              u'{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}'
+              "{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'S/<'
+              "S/<"
             context-line (discarded because line too long)
-              u'{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}'
+              "{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
             context-line (discarded because line too long)
-              u'{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y("Promise-chain cycle")):(p=N(n))?p.cal {snip}'
+              "{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y(\"Promise-chain cycle\")):(p=N(n))?p.cal {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
             context-line (discarded because line too long)
-              u'{snip} ply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}'
+              "{snip} ply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt("return",a());case 12:throw e.t0;case 13:case"end":return e.stop()}},e,this,[[0,7]])}));re {snip}'
+              "{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt(\"return\",a());case 12:throw e.t0;case 13:case\"end\":return e.stop()}},e,this,[[0,7]])}));re {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/</a</<'
+              "e/</a</<"
             context-line (discarded because line too long)
-              u'{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt("return",a());case 3:case"end":return e.stop {snip}'
+              "{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt(\"return\",a());case 3:case\"end\":return e.stop {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/<'
+              "exports/<"
             context-line (discarded because line too long)
-              u'{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)} {snip}'
+              "{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)} {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
             context-line (discarded because line too long)
-              u'{snip} function(t){O(this,L,"Promise","_h"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}'
+              "{snip} function(t){O(this,L,\"Promise\",\"_h\"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/</<'
+              "exports/</<"
             context-line (discarded because line too long)
-              u'{snip} n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}'
+              "{snip} n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
             context-line (discarded because line too long)
-              u'{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,funct {snip}'
+              "{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,funct {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt("return",r.default||r);case 7:if(e.prev=7,e.t {snip}'
+              "{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt(\"return\",r.default||r);case 7:if(e.prev=7,e.t {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
             context-line (discarded because line too long)
-              u'{snip} orgId/issues/:groupId/",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}'
+              "{snip} orgId/issues/:groupId/\",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function* (trimmed javascript function)
-              u'e'
+              "e"
             context-line (discarded because line too long)
-              u'{snip} "+i+")");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:"timeout",target:s})},12e4);s.onerror=s.onload=i,do {snip}'
+              "{snip} \"+i+\")\");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:\"timeout\",target:s})},12e4);s.onerror=s.onload=i,do {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'wrapTimeFunction/<'
+              "wrapTimeFunction/<"
             context-line (discarded because line too long)
-              u'{snip} ism:{data:{function:Dt(t)},handled:!0,type:"instrument"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}'
+              "{snip} ism:{data:{function:Dt(t)},handled:!0,type:\"instrument\"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_complex_function_names.pysnap
index 2bc5c3e8be..4da2cc0f30 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_complex_function_names.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_complex_function_names.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-05-11T09:56:08.384459Z'
+created: '2020-02-26T19:54:39.183941Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '61d21e6d53c0837718af047c20e5e7ea'
+  hash: "61d21e6d53c0837718af047c20e5e7ea"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_limit_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_limit_frames.pysnap
index c8d962d413..904a3740ef 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_limit_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_limit_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-06-05T11:45:18.542023Z'
+created: '2020-02-26T19:54:39.224248Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '9bb5de55b854491dacc677184c9b019a'
+  hash: "9bb5de55b854491dacc677184c9b019a"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_no_filenames.pysnap
index f92dbf5f1f..1a2ee30b34 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_no_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_no_filenames.pysnap
@@ -1,110 +1,110 @@
 ---
-created: '2019-09-26T13:26:28.893497Z'
+created: '2020-02-26T19:54:39.440098Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '418120a66f7031923031f5c52aca0724'
+  hash: "418120a66f7031923031f5c52aca0724"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame (non app frame)
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame (non app frame)
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '00719910980352c06ba93641057012e0'
+  hash: "00719910980352c06ba93641057012e0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame*
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame*
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_unlimited_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_unlimited_frames.pysnap
index 5d65312e16..e533b6b05f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_unlimited_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_unlimited_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-05-16T18:21:49.807173Z'
+created: '2020-02-26T19:54:39.480854Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '61d21e6d53c0837718af047c20e5e7ea'
+  hash: "61d21e6d53c0837718af047c20e5e7ea"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_windows_anon_namespace.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_windows_anon_namespace.pysnap
index af23381c96..dd2f656843 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_windows_anon_namespace.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_windows_anon_namespace.pysnap
@@ -1,76 +1,76 @@
 ---
-created: '2019-09-10T09:49:14.992868Z'
+created: '2020-02-26T19:54:39.537362Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::crash"
+              "`anonymous namespace'::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value*
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
 --------------------------------------------------------------------------
 system:
-  hash: '15d397771f229af8dc42783542f81dd4'
+  hash: "15d397771f229af8dc42783542f81dd4"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::crash"
+              "`anonymous namespace'::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value (ignored because stacktrace takes precedence)
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_with_function_name.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_with_function_name.pysnap
index 2291d48c5d..83ca400123 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_with_function_name.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/native_with_function_name.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-05-08T07:29:42.664783Z'
+created: '2020-02-26T19:54:39.576294Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::something::nested::Foo<T>::crash'
+              "(anonymous namespace)::something::nested::Foo<T>::crash"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value*
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
 --------------------------------------------------------------------------
 system:
-  hash: 'c29439027eafcf7642f641554ab0f0ef'
+  hash: "c29439027eafcf7642f641554ab0f0ef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::something::nested::Foo<T>::crash'
+              "(anonymous namespace)::something::nested::Foo<T>::crash"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value (ignored because stacktrace takes precedence)
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/node_exception_weird.pysnap
index fec0d63678..44609a6597 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/node_exception_weird.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/node_exception_weird.pysnap
@@ -1,198 +1,198 @@
 ---
-created: '2019-05-10T12:45:55.934160Z'
+created: '2020-02-26T19:54:39.605065Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'a20509269752c9a1bea6078851e4d39c'
+  hash: "a20509269752c9a1bea6078851e4d39c"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'withScope'
+              "withScope"
             context-line*
-              u'*/'
+              "*/"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'mockConstructor [as captureException]'
+              "mockConstructor [as captureException]"
             context-line*
-              u'return fn.apply(this, arguments);'
+              "return fn.apply(this, arguments);"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'})();'
+              "})();"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
             context-line*
-              u'return specificMockImpl.apply(this, arguments);'
+              "return specificMockImpl.apply(this, arguments);"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'return original.apply(this, arguments);'
+              "return original.apply(this, arguments);"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'if (maxBreadcrumbs <= 0) {'
+              "if (maxBreadcrumbs <= 0) {"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'invokeClient'
+              "invokeClient"
             context-line*
-              u'* @returns Scope, the new cloned scope'
+              "* @returns Scope, the new cloned scope"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'promisedEvent'
+              "promisedEvent"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function* (trimmed javascript function)
-              u'eventFromException'
+              "eventFromException"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bla'
+          "bla"
 --------------------------------------------------------------------------
 system:
-  hash: '252dc79eb5653bf822e2684d90734cb8'
+  hash: "252dc79eb5653bf822e2684d90734cb8"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'withScope'
+              "withScope"
             context-line*
-              u'*/'
+              "*/"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'mockConstructor [as captureException]'
+              "mockConstructor [as captureException]"
             context-line*
-              u'return fn.apply(this, arguments);'
+              "return fn.apply(this, arguments);"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'})();'
+              "})();"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
             context-line*
-              u'return specificMockImpl.apply(this, arguments);'
+              "return specificMockImpl.apply(this, arguments);"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'return original.apply(this, arguments);'
+              "return original.apply(this, arguments);"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'if (maxBreadcrumbs <= 0) {'
+              "if (maxBreadcrumbs <= 0) {"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'invokeClient'
+              "invokeClient"
             context-line*
-              u'* @returns Scope, the new cloned scope'
+              "* @returns Scope, the new cloned scope"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'promisedEvent'
+              "promisedEvent"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function* (trimmed javascript function)
-              u'eventFromException'
+              "eventFromException"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bla'
+          "bla"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_exception_base.pysnap
index 400e5eea95..1c953e63e8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_exception_base.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-05-08T07:29:42.684400Z'
+created: '2020-02-26T19:54:39.627048Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'b4c29e2a2a2681fbaf9fd8f5b09e4154'
+  hash: "b4c29e2a2a2681fbaf9fd8f5b09e4154"
   component:
     app*
       chained-exception*
@@ -12,23 +12,23 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -36,17 +36,17 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_away_from_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_away_from_crash.pysnap
index 20b517cc30..e9394f74c4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_away_from_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_away_from_crash.pysnap
@@ -1,206 +1,206 @@
 ---
-created: '2019-06-05T11:45:18.661659Z'
+created: '2020-02-26T19:54:39.652323Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '121caa876de75ec51bf72ed4c852cd75'
+  hash: "121caa876de75ec51bf72ed4c852cd75"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: 'a5af2577d4caca8f983657c5d1919e14'
+  hash: "a5af2577d4caca8f983657c5d1919e14"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame*
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_towards_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_towards_crash.pysnap
index ac7cd66036..ccd978bef7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_towards_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_grouping_enhancer_towards_crash.pysnap
@@ -1,206 +1,206 @@
 ---
-created: '2019-06-05T11:45:18.682125Z'
+created: '2020-02-26T19:54:39.683097Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value*
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '90888e813b09fa25061af2883c0fb9bd'
+  hash: "90888e813b09fa25061af2883c0fb9bd"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame*
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame*
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_http_error.pysnap
index 0c7a9dfd8d..d0a70dc7da 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_http_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/python_http_error.pysnap
@@ -1,87 +1,87 @@
 ---
-created: '2019-05-08T07:33:32.167071Z'
+created: '2020-02-26T19:54:39.709423Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'd59239f5aad3304d60beb1fde3369b78'
+  hash: "d59239f5aad3304d60beb1fde3369b78"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
             context-line*
-              u'resp.raise_for_status()'
+              "resp.raise_for_status()"
           frame (non app frame)
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
             context-line*
-              u'raise HTTPError(http_error_msg, response=self)'
+              "raise HTTPError(http_error_msg, response=self)"
         type*
-          u'HTTPError'
+          "HTTPError"
         value (ignored because stacktrace takes precedence)
-          u'<int> Client Error: Too Many Requests for url: <url>'
+          "<int> Client Error: Too Many Requests for url: <url>"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '133db3f366b1327dab4e661f66dfb961'
+  hash: "133db3f366b1327dab4e661f66dfb961"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
             context-line*
-              u'resp.raise_for_status()'
+              "resp.raise_for_status()"
           frame*
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
             context-line*
-              u'raise HTTPError(http_error_msg, response=self)'
+              "raise HTTPError(http_error_msg, response=self)"
         type*
-          u'HTTPError'
+          "HTTPError"
         value (ignored because stacktrace takes precedence)
-          u'<int> Client Error: Too Many Requests for url: <url>'
+          "<int> Client Error: Too Many Requests for url: <url>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/react_native.pysnap
index c9ed099570..281ceeba8f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/react_native.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/react_native.pysnap
@@ -1,410 +1,410 @@
 ---
-created: '2019-05-08T22:36:44.224971Z'
+created: '2020-02-26T19:54:39.764850Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '73470e545e51eea9cff8a6c006f68f57'
+  hash: "73470e545e51eea9cff8a6c006f68f57"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'value'
+              "value"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._inCall--;'
+              "this._inCall--;"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'_inCall'
+              "_inCall"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._lastFlush = new Date().getTime();'
+              "this._lastFlush = new Date().getTime();"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_lastFlush'
+              "_lastFlush"
             context-line*
-              u'_receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "_receiveRootNodeIDEvent(index, eventTopLevelType, i);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             context-line*
-              u'batchedUpdates(function() {'
+              "batchedUpdates(function() {"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'batchedUpdates'
+              "batchedUpdates"
             context-line*
-              u'return _batchedUpdates(fn, bookkeeping);'
+              "return _batchedUpdates(fn, bookkeeping);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             context-line*
-              u'return fn(a);'
+              "return fn(a);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             context-line*
-              u'Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
           frame (non app frame)
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'D'
+              "D"
             context-line*
-              u'executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'executeDispatch'
+              "executeDispatch"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "var funcArgs = Array.prototype.slice.call(arguments, 3);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'arguments'
+              "arguments"
             context-line*
-              u'touchableHandleResponderRelease: function(e) {'
+              "touchableHandleResponderRelease: function(e) {"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveSignal'
+              "_receiveSignal"
             context-line*
-              u'this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "this._performSideEffectsForTransition(curState, nextState, signal, e);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             context-line*
-              u'this.touchableHandlePress(e);'
+              "this.touchableHandlePress(e);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'this.props.onPress && this.props.onPress(e);'
+              "this.props.onPress && this.props.onPress(e);"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'onPress'
+              "onPress"
             context-line*
-              u'<Button'
+              "<Button"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'Button'
+              "Button"
             context-line*
-              u'<Button'
+              "<Button"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
 --------------------------------------------------------------------------
 system:
-  hash: 'ecd413627f0d90a5a25cb28d1ba9c39f'
+  hash: "ecd413627f0d90a5a25cb28d1ba9c39f"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'value'
+              "value"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._inCall--;'
+              "this._inCall--;"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'_inCall'
+              "_inCall"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._lastFlush = new Date().getTime();'
+              "this._lastFlush = new Date().getTime();"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_lastFlush'
+              "_lastFlush"
             context-line*
-              u'_receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "_receiveRootNodeIDEvent(index, eventTopLevelType, i);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             context-line*
-              u'batchedUpdates(function() {'
+              "batchedUpdates(function() {"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'batchedUpdates'
+              "batchedUpdates"
             context-line*
-              u'return _batchedUpdates(fn, bookkeeping);'
+              "return _batchedUpdates(fn, bookkeeping);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             context-line*
-              u'return fn(a);'
+              "return fn(a);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             context-line*
-              u'Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
           frame*
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'D'
+              "D"
             context-line*
-              u'executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'executeDispatch'
+              "executeDispatch"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "var funcArgs = Array.prototype.slice.call(arguments, 3);"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'arguments'
+              "arguments"
             context-line*
-              u'touchableHandleResponderRelease: function(e) {'
+              "touchableHandleResponderRelease: function(e) {"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveSignal'
+              "_receiveSignal"
             context-line*
-              u'this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "this._performSideEffectsForTransition(curState, nextState, signal, e);"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             context-line*
-              u'this.touchableHandlePress(e);'
+              "this.touchableHandlePress(e);"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'this.props.onPress && this.props.onPress(e);'
+              "this.props.onPress && this.props.onPress(e);"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'onPress'
+              "onPress"
             context-line*
-              u'<Button'
+              "<Button"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'Button'
+              "Button"
             context-line*
-              u'<Button'
+              "<Button"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_cocoa.pysnap
index 508240b676..09951bd9b7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_cocoa.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_cocoa.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-05-08T07:29:42.727072Z'
+created: '2020-02-26T19:54:39.793164Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb416f98479efa56a77c524602dc9979'
+  hash: "eb416f98479efa56a77c524602dc9979"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame (non app frame)
           filename*
-            u'baz.m'
+            "baz.m"
 --------------------------------------------------------------------------
 system:
-  hash: '1df786c8c266506e1acb6669c8df5154'
+  hash: "1df786c8c266506e1acb6669c8df5154"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame*
           filename*
-            u'baz.m'
+            "baz.m"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_collapse_recursion.pysnap
index cb5390e92c..c3e8661056 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_collapse_recursion.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_collapse_recursion.pysnap
@@ -1,114 +1,114 @@
 ---
-created: '2019-05-08T07:29:42.737426Z'
+created: '2020-02-26T19:54:39.823461Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
 --------------------------------------------------------------------------
 system:
-  hash: '894c3489e2ade384dc107bca6829d134'
+  hash: "894c3489e2ade384dc107bca6829d134"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_compute_hashes.pysnap
index 60fe9ef13c..dbb83b8116 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-05-08T07:29:42.746009Z'
+created: '2020-02-26T19:54:39.841107Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_discards_seemingly_useless_stack.pysnap
index 9e92eaeb83..edd8b9b905 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_discards_seemingly_useless_stack.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_discards_seemingly_useless_stack.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-05-08T07:29:42.754535Z'
+created: '2020-02-26T19:54:39.861883Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_discard_non_urls.pysnap
index 18a4b823ef..881b41f1e2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_discard_non_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_discard_non_urls.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-05-08T07:29:42.762763Z'
+created: '2020-02-26T19:54:39.881778Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_group_different_js_errors.pysnap
index 340c08039d..5dcc863ec2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_group_different_js_errors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_does_not_group_different_js_errors.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-05-08T07:29:42.770977Z'
+created: '2020-02-26T19:54:39.896798Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_enforce_min_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_enforce_min_frames.pysnap
index d46f5358b4..4043ebb359 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_enforce_min_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_enforce_min_frames.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-07-09T13:22:11.421699Z'
+created: '2020-02-26T19:54:39.990724Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (discarded because stacktrace only contains 1 frame which is under the configured threshold by grouping enhancement rule (family:native min-frames=2))
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_excludes_single_frame_urls.pysnap
index 01f2adff52..9c662a6ffd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_excludes_single_frame_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_excludes_single_frame_urls.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.779313Z'
+created: '2020-02-26T19:54:40.010450Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
 --------------------------------------------------------------------------
 system:
-  hash: 'cd2a9fd0cdaa8cd55ed22b101fc65882'
+  hash: "cd2a9fd0cdaa8cd55ed22b101fc65882"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_hash_without_system_frames.pysnap
index 6d37131ffb..e2e9ce00ef 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_hash_without_system_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_hash_without_system_frames.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-05-08T07:29:42.787707Z'
+created: '2020-02-26T19:54:40.032091Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_ignores_singular_anonymous_frame.pysnap
index 5d334273e9..c01812ae9a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_ignores_singular_anonymous_frame.pysnap
@@ -1,42 +1,42 @@
 ---
-created: '2019-11-01T10:06:06.520539Z'
+created: '2020-02-26T19:54:40.071450Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame (non app frame)
           filename*
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame (non app frame)
           filename*
-            u'dojo.js'
+            "dojo.js"
           function* (trimmed javascript function)
-            u'_createDocumentViewModel'
+            "_createDocumentViewModel"
 --------------------------------------------------------------------------
 system:
-  hash: 'c5da56c71b31f34c5880d734cbc8f5bb'
+  hash: "c5da56c71b31f34c5880d734cbc8f5bb"
   component:
     system*
       stacktrace*
         frame (ignored low quality javascript frame)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame*
           filename*
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame*
           filename*
-            u'dojo.js'
+            "dojo.js"
           function* (trimmed javascript function)
-            u'_createDocumentViewModel'
+            "_createDocumentViewModel"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust.pysnap
index 39b1761cec..278627f089 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-06-05T11:45:18.857944Z'
+created: '2020-02-26T19:54:40.163083Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust2.pysnap
index 96e9c1f865..db5013d487 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_rust2.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-06-05T11:45:18.906457Z'
+created: '2020-02-26T19:54:40.243472Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
+  hash: "9b33b65a645c66239cafcd276fcd0659"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (ignored by grouping enhancement rule (family:native function:__* -group))
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (ignored by grouping enhancement rule (family:native function:*::__* -group))
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_with_minimal_app_frames.pysnap
index 7edfa161a2..7a368039a7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_with_minimal_app_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/stacktrace_with_minimal_app_frames.pysnap
@@ -1,88 +1,88 @@
 ---
-created: '2019-05-08T07:29:42.883513Z'
+created: '2020-02-26T19:54:40.266253Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/template_compute_hashes.pysnap
index bb82589faa..70555ef8ac 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/template_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/template_compute_hashes.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-05-08T07:29:42.889892Z'
+created: '2020-02-26T19:54:40.282910Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '826f66ef602835f68030c04c634df320'
+  hash: "826f66ef602835f68030c04c634df320"
   component:
     default*
       template*
         filename*
-          u'foo.html'
+          "foo.html"
         context-line*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_compute_hashes.pysnap
index 7e7d2501bd..3d5bf55a4e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-17T20:02:29.122896Z'
+created: '2020-02-26T19:54:40.300879Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (threads of system takes precedence)
       threads (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
 --------------------------------------------------------------------------
 system:
-  hash: '1a11687556cf74559f0ae90b1c87e2fd'
+  hash: "1a11687556cf74559f0ae90b1c87e2fd"
   component:
     system*
       threads*
         stacktrace*
           frame*
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_no_hash.pysnap
index 2dd67d9889..67bfd1557b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_no_hash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/threads_no_hash.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-05-08T07:29:42.906320Z'
+created: '2020-02-26T19:54:40.320852Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       threads (ignored because contains 2 threads)
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/actix.pysnap
index 96c225c696..d8728b95be 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/actix.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/actix.pysnap
@@ -1,788 +1,788 @@
 ---
-created: '2019-09-26T13:46:41.968243Z'
+created: '2020-02-26T19:54:40.883412Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '703d3dd9cb763e3f5037f659d27da947'
+  hash: "703d3dd9cb763e3f5037f659d27da947"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame (non app frame)
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (ignored because stacktrace takes precedence)
-          u'Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here"
 --------------------------------------------------------------------------
 system:
-  hash: '1df163ce3be65319df4fcc9cb34b60c1'
+  hash: "1df163ce3be65319df4fcc9cb34b60c1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'__pthread_start'
+              "__pthread_start"
           frame*
             function*
-              u'__pthread_body'
+              "__pthread_body"
           frame*
             filename*
-              u'thread.rs'
+              "thread.rs"
             function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
+              "std::sys::unix::thread::Thread::new::thread_start"
           frame* (marked out of app by grouping enhancement rule (family:native function:alloc::* -app))
             filename*
-              u'boxed.rs'
+              "boxed.rs"
             function*
-              u'alloc::boxed::FnBox<T>::call_box'
+              "alloc::boxed::FnBox<T>::call_box"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::catch_unwind'
+              "std::panic::catch_unwind"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try'
+              "std::panicking::try"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             filename*
-              u'panicking.rs'
+              "panicking.rs"
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             filename*
-              u'panic.rs'
+              "panic.rs"
             function*
-              u'std::panic::AssertUnwindSafe<T>::call_once'
+              "std::panic::AssertUnwindSafe<T>::call_once"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+              "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'backtrace.rs'
+              "backtrace.rs"
             function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+              "std::sys_common::backtrace::__rust_begin_short_backtrace"
           frame*
             filename*
-              u'arbiter.rs'
+              "arbiter.rs"
             function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+              "actix::arbiter::Arbiter::new_with_builder::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+              "tokio::runtime::current_thread::runtime::Runtime::enter"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default'
+              "tokio_reactor::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_reactor::with_default::{{closure}}'
+              "tokio_reactor::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default'
+              "tokio_timer::clock::clock::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'clock.rs'
+              "clock.rs"
             function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
+              "tokio_timer::clock::clock::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default'
+              "tokio_timer::timer::handle::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'handle.rs'
+              "handle.rs"
             function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
+              "tokio_timer::timer::handle::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default'
+              "tokio_executor::global::with_default"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'global.rs'
+              "global.rs"
             function*
-              u'tokio_executor::global::with_default::{{closure}}'
+              "tokio_executor::global::with_default::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'runtime.rs'
+              "runtime.rs"
             function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+              "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::block_on'
+              "tokio_current_thread::Entered<T>::block_on"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Entered<T>::tick'
+              "tokio_current_thread::Entered<T>::tick"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter'
+              "tokio_current_thread::Borrow<T>::enter"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
+              "tokio_current_thread::CurrentRunner::set_spawn"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}'
+              "tokio_current_thread::Borrow<T>::enter::{{closure}}::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}'
+              "tokio_current_thread::scheduler::Scheduler<T>::tick::{{closure}}"
           frame*
             filename*
-              u'scheduler.rs'
+              "scheduler.rs"
             function*
-              u'tokio_current_thread::scheduler::Scheduled<T>::tick'
+              "tokio_current_thread::scheduler::Scheduled<T>::tick"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify'
+              "futures::task_impl::Spawn<T>::poll_future_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_fn_notify'
+              "futures::task_impl::Spawn<T>::poll_fn_notify"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter'
+              "futures::task_impl::Spawn<T>::enter"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::std::set'
+              "futures::task_impl::std::set"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::enter::{{closure}}'
+              "futures::task_impl::Spawn<T>::enter::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}'
+              "futures::task_impl::Spawn<T>::poll_future_notify::{{closure}}"
           frame*
             filename*
-              u'mod.rs'
+              "mod.rs"
             function*
-              u'alloc::boxed::Box<T>::poll'
+              "alloc::boxed::Box<T>::poll"
           frame*
             filename*
-              u'then.rs'
+              "then.rs"
             function*
-              u'futures::future::then::Then<T>::poll'
+              "futures::future::then::Then<T>::poll"
           frame*
             filename*
-              u'chain.rs'
+              "chain.rs"
             function*
-              u'futures::future::chain::Chain<T>::poll'
+              "futures::future::chain::Chain<T>::poll"
           frame*
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame (ignored due to recursion)
             filename*
-              u'either.rs'
+              "either.rs"
             function*
-              u'futures::future::either::Either<T>::poll'
+              "futures::future::either::Either<T>::poll"
           frame*
             filename*
-              u'acceptor.rs'
+              "acceptor.rs"
             function*
-              u'actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll'
+              "actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T>::poll"
           frame*
             filename*
-              u'and_then.rs'
+              "and_then.rs"
             function*
-              u'actix_net::service::and_then::AndThenFuture<T>::poll'
+              "actix_net::service::and_then::AndThenFuture<T>::poll"
           frame*
             filename*
-              u'map_err.rs'
+              "map_err.rs"
             function*
-              u'actix_net::service::map_err::MapErrFuture<T>::poll'
+              "actix_net::service::map_err::MapErrFuture<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'channel.rs'
+              "channel.rs"
             function*
-              u'actix_web::server::channel::HttpChannel<T>::poll'
+              "actix_web::server::channel::HttpChannel<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_handler'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_handler"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::poll_io'
+              "actix_web::server::h1::Http1Dispatcher<T>::poll_io"
           frame*
             filename*
-              u'h1.rs'
+              "h1.rs"
             function*
-              u'actix_web::server::h1::Http1Dispatcher<T>::parse'
+              "actix_web::server::h1::Http1Dispatcher<T>::parse"
           frame*
             filename*
-              u'pipeline.rs'
+              "pipeline.rs"
             function*
-              u'actix_web::pipeline::Pipeline<T>::poll_io'
+              "actix_web::pipeline::Pipeline<T>::poll_io"
           frame*
             filename*
-              u'<::log::macros::log macros>'
+              "<::log::macros::log macros>"
             function*
-              u'actix_web::pipeline::ProcessResponse<T>::poll_io'
+              "actix_web::pipeline::ProcessResponse<T>::poll_io"
           frame*
             filename*
-              u'lib.rs'
+              "lib.rs"
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             filename*
-              u'log.rs'
+              "log.rs"
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::with'
+              "std::thread::local::LocalKey<T>::with"
           frame*
             filename*
-              u'local.rs'
+              "local.rs"
             function*
-              u'std::thread::local::LocalKey<T>::try_with'
+              "std::thread::local::LocalKey<T>::try_with"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with::{{closure}}'
+              "sentry::hub::Hub::with::{{closure}}"
           frame*
             filename*
-              u'hub.rs'
+              "hub.rs"
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
         type*
-          u'actix_web::pipeline'
+          "actix_web::pipeline"
         value (ignored because stacktrace takes precedence)
-          u'Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here'
+          "Error occurred during request handling, status: <int> Internal Server Error Something went really wrong here"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/aspnetcore.pysnap
index c791405cbd..6762806624 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/aspnetcore.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/aspnetcore.pysnap
@@ -1,347 +1,347 @@
 ---
-created: '2019-05-08T07:29:41.980976Z'
+created: '2020-02-26T19:54:40.917238Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '228c649a3aa0901622c0a0e66ab0522c'
+  hash: "228c649a3aa0901622c0a0e66ab0522c"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame (non app frame)
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame (non app frame)
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame (non app frame)
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame (non app frame)
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
         value (ignored because stacktrace takes precedence)
-          u'sync exception'
+          "sync exception"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
+        "An unhandled exception has occurred while executing the request."
 --------------------------------------------------------------------------
 system:
-  hash: '4ccd0f1953483581ba360c7518f90332'
+  hash: "4ccd0f1953483581ba360c7518f90332"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+              "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+              "Microsoft.AspNetCore.Routing.EndpointMiddleware"
             function*
-              u'Invoke'
+              "Invoke"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeAsync'
+              "InvokeAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeFilterPipelineAsync'
+              "InvokeFilterPipelineAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker"
             function*
-              u'InvokeNextResourceFilter'
+              "InvokeNextResourceFilter"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeInnerFilterAsync'
+              "InvokeInnerFilterAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Next'
+              "Next"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'Rethrow'
+              "Rethrow"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeNextActionFilterAsync'
+              "InvokeNextActionFilterAsync"
           frame*
             module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
+              "System.Runtime.CompilerServices.TaskAwaiter"
             function*
-              u'HandleNonSuccessAndDebuggerNotification'
+              "HandleNonSuccessAndDebuggerNotification"
           frame*
             module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+              "System.Runtime.ExceptionServices.ExceptionDispatchInfo"
             function*
-              u'Throw'
+              "Throw"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+              "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker"
             function*
-              u'InvokeActionMethodAsync'
+              "InvokeActionMethodAsync"
           frame*
             module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+              "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+              "Microsoft.Extensions.Internal.ObjectMethodExecutor"
             function*
-              u'Execute'
+              "Execute"
           frame*
             module*
-              u'(unknown)'
+              "(unknown)"
             function*
-              u'lambda_method'
+              "lambda_method"
           frame*
             module*
-              u'SentryTest2.Controllers.ValuesController'
+              "SentryTest2.Controllers.ValuesController"
             filename (module takes precedence)
-              u'valuescontroller.cs'
+              "valuescontroller.cs"
             function*
-              u'Get'
+              "Get"
         type*
-          u'System.Exception'
+          "System.Exception"
         value (ignored because stacktrace takes precedence)
-          u'sync exception'
+          "sync exception"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/connection_error.pysnap
index 49393eeac7..e713fd33b0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/connection_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/connection_error.pysnap
@@ -1,231 +1,231 @@
 ---
-created: '2019-05-08T07:31:17.178420Z'
+created: '2020-02-26T19:54:40.940477Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '6b059b9febc815ac18ac4d2082e38a9b'
+  hash: "6b059b9febc815ac18ac4d2082e38a9b"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
             context-line*
-              u'context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'rejections = is_rate_limited(client, keys, args)'
+              "rejections = is_rate_limited(client, keys, args)"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
             context-line*
-              u'return script(keys, args, client)'
+              "return script(keys, args, client)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
             context-line*
-              u'return client.evalsha(self.sha, len(keys), *args)'
+              "return client.evalsha(self.sha, len(keys), *args)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
             context-line*
-              u"return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
             context-line*
-              u'return self.parse_response(connection, command_name, **options)'
+              "return self.parse_response(connection, command_name, **options)"
           frame (non app frame)
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
             context-line*
-              u'response = connection.read_response()'
+              "response = connection.read_response()"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'response = self._parser.read_response()'
+              "response = self._parser.read_response()"
           frame (non app frame)
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'(e.args,))'
+              "(e.args,))"
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (ignored because stacktrace takes precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '013d3477a774fe20c468dc8accd516f1'
+  hash: "013d3477a774fe20c468dc8accd516f1"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.utils.services'
+              "sentry.utils.services"
             filename (module takes precedence)
-              u'services.py'
+              "services.py"
             function*
-              u'<lambda>'
+              "<lambda>"
             context-line*
-              u'context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+              "context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)"
           frame*
             module*
-              u'getsentry.quotas'
+              "getsentry.quotas"
             filename (module takes precedence)
-              u'quotas.py'
+              "quotas.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+              "return super(SubscriptionQuota, self).is_rate_limited(project, key=key)"
           frame*
             module*
-              u'sentry.quotas.redis'
+              "sentry.quotas.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'is_rate_limited'
+              "is_rate_limited"
             context-line*
-              u'rejections = is_rate_limited(client, keys, args)'
+              "rejections = is_rate_limited(client, keys, args)"
           frame*
             module*
-              u'sentry.utils.redis'
+              "sentry.utils.redis"
             filename (module takes precedence)
-              u'redis.py'
+              "redis.py"
             function*
-              u'call_script'
+              "call_script"
             context-line*
-              u'return script(keys, args, client)'
+              "return script(keys, args, client)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'__call__'
+              "__call__"
             context-line*
-              u'return client.evalsha(self.sha, len(keys), *args)'
+              "return client.evalsha(self.sha, len(keys), *args)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'evalsha'
+              "evalsha"
             context-line*
-              u"return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+              "return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'execute_command'
+              "execute_command"
             context-line*
-              u'return self.parse_response(connection, command_name, **options)'
+              "return self.parse_response(connection, command_name, **options)"
           frame*
             module*
-              u'redis.client'
+              "redis.client"
             filename (module takes precedence)
-              u'client.py'
+              "client.py"
             function*
-              u'parse_response'
+              "parse_response"
             context-line*
-              u'response = connection.read_response()'
+              "response = connection.read_response()"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'response = self._parser.read_response()'
+              "response = self._parser.read_response()"
           frame*
             module*
-              u'redis.connection'
+              "redis.connection"
             filename (module takes precedence)
-              u'connection.py'
+              "connection.py"
             function*
-              u'read_response'
+              "read_response"
             context-line*
-              u'(e.args,))'
+              "(e.args,))"
         type*
-          u'ConnectionError'
+          "ConnectionError"
         value (ignored because stacktrace takes precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
+          "Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp.pysnap
index dd2093ea30..7cfaf100b1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-05-08T07:29:42.002642Z'
+created: '2020-02-26T19:54:40.951438Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '666766514295bb52812324097cdaf53e'
+  hash: "666766514295bb52812324097cdaf53e"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'YYY'
+          "YYY"
       message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
+        "Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_img_src.pysnap
index d82a399ecd..b0928890d3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_img_src.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_img_src.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.010851Z'
+created: '2020-02-26T19:54:40.963396Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1742101e08eb1608f569751dfedd0062'
+  hash: "1742101e08eb1608f569751dfedd0062"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'ftp://example.com'
+          "ftp://example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_no_blocked_uri.pysnap
index 8a2753861d..c0c088a6e6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_no_blocked_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_no_blocked_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.017119Z'
+created: '2020-02-26T19:54:40.976074Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
+  hash: "efddf1cde918097259aa7d4904fb1942"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
           "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_data_uri.pysnap
index 95ef30eb10..6da4f61002 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_data_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_data_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.024939Z'
+created: '2020-02-26T19:54:40.985709Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
+  hash: "4e6f2bce9d121aa89f4dc5e5da08afb5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'img-src'
+          "img-src"
         violation (not a local script violation)
         uri*
-          u'data:'
+          "data:"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_src_uri.pysnap
index caf6d13917..6c97e1ba08 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_src_uri.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_script_src_uri.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-05-08T07:29:42.031984Z'
+created: '2020-02-26T19:54:40.998068Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
+  hash: "223cdacfe5b4b830dc700b5c18cc21b4"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'script-src'
+          "script-src"
         violation (not a local script violation)
         uri*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_style_src_elem.pysnap
index 1009bad119..98fb072b55 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_style_src_elem.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/csp_style_src_elem.pysnap
@@ -1,17 +1,17 @@
 ---
-created: '2019-05-08T07:29:42.039516Z'
+created: '2020-02-26T19:54:41.012465Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '537a973f594c364842893e9a72af62a5'
+  hash: "537a973f594c364842893e9a72af62a5"
   component:
     default*
       csp*
         salt* (a static salt)
-          u'style-src-elem'
+          "style-src-elem"
         violation (not a local script violation)
         uri*
-          u'use.fontawesome.com'
+          "use.fontawesome.com"
       message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
+        "Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/custom_fingerprint.pysnap
index 18bef30cdb..4c2676bc48 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/custom_fingerprint.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/custom_fingerprint.pysnap
@@ -1,8 +1,8 @@
 ---
-created: '2019-05-08T07:29:42.048653Z'
+created: '2020-02-26T19:54:41.033060Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
+  hash: "f30afa00b85f5cac5ee0bce01b31f08d"
+  values: ["celery", "SoftTimeLimitExceeded", "sentry.tasks.store.process_event"]
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/empty.pysnap
index 304efa6a24..bbbfd957be 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/empty.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/empty.pysnap
@@ -1,7 +1,7 @@
 ---
-created: '2019-05-08T07:29:42.056458Z'
+created: '2020-02-26T19:54:41.045729Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_comput_hashes.pysnap
index 0e64a9ea45..3233f83147 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_comput_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_comput_hashes.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-05-08T07:29:42.065046Z'
+created: '2020-02-26T19:54:41.058758Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'b23ee1963904c2ca87b145febf94b66c'
+  hash: "b23ee1963904c2ca87b145febf94b66c"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes.pysnap
index b33c41eef0..34ae5c2e84 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-05-08T07:29:42.073921Z'
+created: '2020-02-26T19:54:41.080865Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value (ignored because stacktrace takes precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_2.pysnap
index 718df996a4..0e746d8d0f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_2.pysnap
@@ -1,32 +1,32 @@
 ---
-created: '2019-05-08T07:29:42.082698Z'
+created: '2020-02-26T19:54:41.097579Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '9509e122c6175606d52862fa4f64853c'
+  hash: "9509e122c6175606d52862fa4f64853c"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'baz.py'
+              "baz.py"
         type*
-          u'ValueError'
+          "ValueError"
         value (ignored because stacktrace takes precedence)
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_3.pysnap
index fa55228f41..bf34ff1b52 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_compute_hashes_3.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-05-08T07:29:42.092362Z'
+created: '2020-02-26T19:54:41.122993Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'b4c29e2a2a2681fbaf9fd8f5b09e4154'
+  hash: "b4c29e2a2a2681fbaf9fd8f5b09e4154"
   component:
     app*
       chained-exception*
@@ -12,23 +12,23 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -36,17 +36,17 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_javascript_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_javascript_no_in_app.pysnap
index 80351200fc..19bb70b5d3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_javascript_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_javascript_no_in_app.pysnap
@@ -1,58 +1,58 @@
 ---
-created: '2019-11-01T10:06:07.091791Z'
+created: '2020-02-26T19:54:41.149808Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
             context-line*
-              u'onError(err);'
+              "onError(err);"
           frame (non app frame)
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function (ignored because sourcemap used and context line available)
-              u'onError'
+              "onError"
             context-line*
-              u'this.model.submitError(error);'
+              "this.model.submitError(error);"
         type*
-          u'TypeError'
+          "TypeError"
         value*
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
 --------------------------------------------------------------------------
 system:
-  hash: '26552f86ca2368e708afa1df6effc1c5'
+  hash: "26552f86ca2368e708afa1df6effc1c5"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'app/components/modals/createTeamModal'
+              "app/components/modals/createTeamModal"
             filename (module takes precedence)
-              u'createteammodal.jsx'
+              "createteammodal.jsx"
             context-line*
-              u'onError(err);'
+              "onError(err);"
           frame*
             module*
-              u'app/views/settings/components/forms/form'
+              "app/views/settings/components/forms/form"
             filename (module takes precedence)
-              u'form.jsx'
+              "form.jsx"
             function (ignored because sourcemap used and context line available)
-              u'onError'
+              "onError"
             context-line*
-              u'this.model.submitError(error);'
+              "this.model.submitError(error);"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"Cannot read property 'submitError' of null"
+          "Cannot read property 'submitError' of null"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_type.pysnap
index 9a642bad73..54ad613ebc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_type.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_type.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-05-08T07:29:42.110803Z'
+created: '2020-02-26T19:54:41.169294Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         value*
-          u'hello world'
+          "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
+  hash: "5eb63bbbe01eeed093cb22bb8f5acdc3"
   component:
     system*
       exception*
         value*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_value.pysnap
index 6f87de617d..bf490a2663 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_value.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/exception_without_value.pysnap
@@ -1,20 +1,20 @@
 ---
-created: '2019-05-08T07:29:42.118745Z'
+created: '2020-02-26T19:54:41.185720Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'ValueError'
+          "ValueError"
 --------------------------------------------------------------------------
 system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: "5a2cfd89b7b171fd7b4794b08023d04f"
   component:
     system*
       exception*
         type*
-          u'ValueError'
+          "ValueError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/expectct.pysnap
index d153799bdd..edb90f9443 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/expectct.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/expectct.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-05-08T07:29:42.127596Z'
+created: '2020-02-26T19:54:41.214688Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
+  hash: "3d2933f4b5ec459ec8d569a398fd328c"
   component:
     default*
       expect-ct*
         salt* (a static salt)
-          'expect-ct'
+          "expect-ct"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
index d46642a406..3394324f61 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.135625Z'
+created: '2020-02-26T19:54:41.240456Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '526b64456c48836a46ec1a89544fd412'
+  hash: "526b64456c48836a46ec1a89544fd412"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_ENHANCED_spring_classes.pysnap
index 78f06178b9..c7b6d81b73 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.143860Z'
+created: '2020-02-26T19:54:41.291521Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
+  hash: "45c0b0a8c777e7a7040d7c39233a08a5"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
index f17d7fd2cb..14fbd47fb5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.152945Z'
+created: '2020-02-26T19:54:41.320814Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
+  hash: "353e05904b48bd3ae4fa9623934a70d0"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
+            "sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_spring_classes.pysnap
index 2715a734d1..450acf9f22 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_extra_ENHANCED_spring_classes.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.161510Z'
+created: '2020-02-26T19:54:41.345110Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
 --------------------------------------------------------------------------
 system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
+  hash: "be15ca3d511b96918e087c4f42503ca2"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
+            "invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>"
           function*
-            u'jipJipManagementApplication'
+            "jipJipManagementApplication"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_from_url_origin_corner_cases.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_from_url_origin_corner_cases.pysnap
index 0f1474797c..08ff38b64d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_from_url_origin_corner_cases.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_from_url_origin_corner_cases.pysnap
@@ -1,54 +1,54 @@
 ---
-created: '2019-11-01T10:16:15.758523Z'
+created: '2020-02-26T19:54:41.375761Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
         frame (non app frame)
           filename*
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           context-line (discarded because from URL origin and no function)
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: 'e04dce7550635e05dbd7f656102cf304'
+  hash: "e04dce7550635e05dbd7f656102cf304"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
         frame*
           filename*
-            u'foo.js'
+            "foo.js"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
         frame
           filename (ignored because frame points to a URL)
-            u'foo.js'
+            "foo.js"
           context-line (discarded because from URL origin and no function)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_abs_path_is_http.pysnap
index ed70404561..5c86c344d8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_abs_path_is_http.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.169865Z'
+created: '2020-02-26T19:54:41.393203Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
 --------------------------------------------------------------------------
 system:
-  hash: '098f6bcd4621d373cade4e832627b4f6'
+  hash: "098f6bcd4621d373cade4e832627b4f6"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_blob.pysnap
index ca9dfe7786..1c322168e6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_blob.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_blob.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-11-01T10:06:07.176433Z'
+created: '2020-02-26T19:54:41.414147Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
+            "7f7aaadf-a006-4217-9ed5-5fbf8585c6c0"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_http.pysnap
index 9627653df9..a6e0a153b7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_http.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_http.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-11-01T10:02:45.139871Z'
+created: '2020-02-26T19:54:41.436719Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '64a0e0a34d99dce03a8c5a4c237a4b5a'
+  hash: "64a0e0a34d99dce03a8c5a4c237a4b5a"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_https.pysnap
index 46cfd1d8b2..22c0601ca4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_https.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_filename_if_https.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-11-01T10:02:45.149838Z'
+created: '2020-02-26T19:54:41.458306Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '64a0e0a34d99dce03a8c5a4c237a4b5a'
+  hash: "64a0e0a34d99dce03a8c5a4c237a4b5a"
   component:
     system*
       stacktrace*
         frame*
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'test'
+            "test"
           context-line*
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_function.pysnap
index 8be3c1e7b0..95e884a656 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.203242Z'
+created: '2020-02-26T19:54:41.479090Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
 --------------------------------------------------------------------------
 system:
-  hash: 'be7f1b8b4014de623c533a8218dba5bd'
+  hash: "be7f1b8b4014de623c533a8218dba5bd"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo.bar.Baz'
+            "foo.bar.Baz"
           function (ignored lambda function)
-            u'lambda$work$1'
+            "lambda$work$1"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_module.pysnap
index 2b7179dea3..0e4ae983fa 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_module.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_java8_lambda_module.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.212235Z'
+created: '2020-02-26T19:54:41.500404Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
 --------------------------------------------------------------------------
 system:
-  hash: '53b9e9679a8ea25880376080b76f98ad'
+  hash: "53b9e9679a8ea25880376080b76f98ad"
   component:
     system*
       stacktrace*
         frame*
           module (ignored java lambda)
-            u'foo.bar.Baz$$Lambda$40/1673859467'
+            "foo.bar.Baz$$Lambda$40/1673859467"
           function*
-            u'call'
+            "call"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist.pysnap
index f48514c291..94ada6916c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.220823Z'
+created: '2020-02-26T19:54:41.523246Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_2.pysnap
index d069f640e7..3c222b58be 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.229148Z'
+created: '2020-02-26T19:54:41.541997Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
+  hash: "538bdfd8d7bb2495d0d6429c3689a420"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
+            "com.example.api.entry.EntriesResource_$$_javassist<auto>"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_3.pysnap
index 8f11227a35..5bed6941f7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_javassist_3.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.237627Z'
+created: '2020-02-26T19:54:41.561905Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
 --------------------------------------------------------------------------
 system:
-  hash: 'dc3d511120ce04996b1eef3496516e5c'
+  hash: "dc3d511120ce04996b1eef3496516e5c"
   component:
     system*
       stacktrace*
         frame*
           filename* (cleaned javassist parts)
-            u'entriesresource_$$_javassist<auto>.java'
+            "entriesresource_$$_javassist<auto>.java"
           function*
-            u'fn'
+            "fn"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url.pysnap
index 784700cc25..ea92f8c824 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url.pysnap
@@ -1,29 +1,29 @@
 ---
-created: '2019-11-01T10:06:07.249591Z'
+created: '2020-02-26T19:54:41.584191Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame (ignored single non-URL JavaScript frame)
           module*
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url_2.pysnap
index f87f0eea03..d3fa31920e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_module_if_page_url_2.pysnap
@@ -1,30 +1,30 @@
 ---
-created: '2019-05-08T07:33:31.730952Z'
+created: '2020-02-26T19:54:41.601344Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
 --------------------------------------------------------------------------
 system:
-  hash: '0cc175b9c0f1b6a831c399e269772661'
+  hash: "0cc175b9c0f1b6a831c399e269772661"
   component:
     system*
       stacktrace*
         frame*
           module (ignored bad javascript module)
-            u'foo/bar/baz'
+            "foo/bar/baz"
           filename (ignored because frame points to a URL)
-            u'foo.py'
+            "foo.py"
           function*
-            u'a'
+            "a"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_safari_native_code.pysnap
index 48b40b692b..0df74318e9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_safari_native_code.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_safari_native_code.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.263032Z'
+created: '2020-02-26T19:54:41.621228Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
 --------------------------------------------------------------------------
 system:
-  hash: '30eb5001914d29dd8461898b5b8094fe'
+  hash: "30eb5001914d29dd8461898b5b8094fe"
   component:
     system*
       stacktrace*
         frame*
           filename (native code indicated by filename)
-            u'[native code]'
+            "[native code]"
           function*
-            u'forEach'
+            "forEach"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors.pysnap
index 18e58ac5d5..0644aa3107 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.272169Z'
+created: '2020-02-26T19:54:41.638974Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
+  hash: "07d1a8e5728b3c4c7aa8b8273fd0e753"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
+            "sun.reflect.GeneratedSerializationConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors_2.pysnap
index 66b46815bb..eba1419b0d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_constructors_2.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.280719Z'
+created: '2020-02-26T19:54:41.660295Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '09e0efcab18f545166318118ed4e0292'
+  hash: "09e0efcab18f545166318118ed4e0292"
   component:
     system*
       stacktrace*
         frame*
           module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
+            "sun.reflect.GeneratedConstructorAccessor<auto>"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_methods.pysnap
index 3e9c3119e6..926a23e325 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_methods.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_ignores_sun_java_generated_methods.pysnap
@@ -1,36 +1,36 @@
 ---
-created: '2019-05-21T19:16:13.403893Z'
+created: '2020-02-26T19:54:41.680262Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame (non app frame)
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
 --------------------------------------------------------------------------
 system:
-  hash: '9bc326575875422d0d4ced3c35d9f916'
+  hash: "9bc326575875422d0d4ced3c35d9f916"
   component:
     system*
       stacktrace*
         frame*
           module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
+            "sun.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
         frame*
           module* (removed reflection marker)
-            'jdk.internal.reflect.GeneratedMethodAccessor'
+            "jdk.internal.reflect.GeneratedMethodAccessor"
           function*
-            u'invoke'
+            "invoke"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_block_functions.pysnap
index 4881acdc35..126ba0d018 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_block_functions.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_block_functions.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.297875Z'
+created: '2020-02-26T19:54:41.697075Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
 --------------------------------------------------------------------------
 system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
+  hash: "27eed4125fc13d42163ddb0b8f357b48"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function* (ruby block)
-            'block'
+            "block"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_erb_templates.pysnap
index 8df7e5ae00..06e31a4b2f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_erb_templates.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.306583Z'
+created: '2020-02-26T19:54:41.714986Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
 --------------------------------------------------------------------------
 system:
-  hash: '4067a71d7098866f87c746a57a77b2bb'
+  hash: "4067a71d7098866f87c746a57a77b2bb"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
           function* (removed generated erb template suffix)
-            u'_foo_html_erb'
+            "_foo_html_erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames.pysnap
index 3318555c57..52d328e7a5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-04-17T20:02:28.542399Z'
+created: '2020-02-26T19:54:41.733027Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames_2.pysnap
index 7fed522973..b7024cab22 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_sanitizes_versioned_filenames_2.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-05-08T07:29:42.323867Z'
+created: '2020-02-26T19:54:41.748575Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
 --------------------------------------------------------------------------
 system:
-  hash: '2f908c015ad77a50595512fcf65d344c'
+  hash: "2f908c015ad77a50595512fcf65d344c"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.html.erb'
+            "foo.html.erb"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_skips_symbol_if_unknown.pysnap
index 6327b2dbfd..7dbed0a9c4 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_skips_symbol_if_unknown.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_skips_symbol_if_unknown.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.332442Z'
+created: '2020-02-26T19:54:41.770915Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
 --------------------------------------------------------------------------
 system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
+  hash: "a972f399399f5566f39b14a7afdd24ff"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'main'
+            "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_context_line_over_function.pysnap
index 1fe67ea181..7ac14a056a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_context_line_over_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_context_line_over_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.340686Z'
+created: '2020-02-26T19:54:41.787544Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_function_over_lineno.pysnap
index 7b56ea05a3..d5252ab129 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_function_over_lineno.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_function_over_lineno.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.349235Z'
+created: '2020-02-26T19:54:41.803644Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
 --------------------------------------------------------------------------
 system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
+  hash: "fb73cb54ced59b1c0c60d9bb40b7336b"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
           function*
-            u'bar'
+            "bar"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_module_over_filename.pysnap
index acb115f768..b6a52a40b7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_module_over_filename.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_module_over_filename.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.357628Z'
+created: '2020-02-26T19:54:41.824366Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'foo'
+            "foo"
           filename (module takes precedence)
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_symbol_instead_of_function.pysnap
index 0259e459ce..075ea13b09 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_symbol_instead_of_function.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_uses_symbol_instead_of_function.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.365989Z'
+created: '2020-02-26T19:54:41.840190Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
 --------------------------------------------------------------------------
 system:
-  hash: '23db4a9e73800923f345d2b868993345'
+  hash: "23db4a9e73800923f345d2b868993345"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'libfoo'
+            "libfoo"
           function*
-            u'int main()'
+            "int main()"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_with_only_required_vars.pysnap
index d82984f372..2b4165fd92 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_with_only_required_vars.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/frame_with_only_required_vars.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-05-08T07:29:42.374452Z'
+created: '2020-02-26T19:54:41.854977Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo.py'
+            "foo.py"
 --------------------------------------------------------------------------
 system:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/hpkp.pysnap
index 727b31bb1e..f07c2740f2 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/hpkp.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/hpkp.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-05-08T07:29:42.382950Z'
+created: '2020-02-26T19:54:41.877137Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
+  hash: "1e37a374cb33572622d02ff7a6237c44"
   component:
     default*
       hpkp*
         salt* (a static salt)
-          'hpkp'
+          "hpkp"
         hostname*
-          u'example.com'
+          "example.com"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_chained.pysnap
index f20dd86a9b..ef5d0e28dc 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_chained.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_chained.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-05-08T07:29:42.412753Z'
+created: '2020-02-26T19:54:41.945780Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '750486b8d8c51500fa0dfbb6f1577af0'
+  hash: "750486b8d8c51500fa0dfbb6f1577af0"
   component:
     app*
       chained-exception*
@@ -12,394 +12,394 @@ app:
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame (non app frame)
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame (non app frame)
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value*
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace
             frame (non app frame)
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value*
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame (non app frame)
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame (non app frame)
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame (non app frame)
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame (non app frame)
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'Failed to start component [Connector[HTTP/<float><int>]]'
+            "Failed to start component [Connector[HTTP/<float><int>]]"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/<float><int>]]'
+        "Failed to start connector [Connector[HTTP/<float><int>]]"
 --------------------------------------------------------------------------
 system:
-  hash: '8924849495809d42431719c2b9ab65c8'
+  hash: "8924849495809d42431719c2b9ab65c8"
   component:
     system*
       chained-exception*
@@ -407,381 +407,381 @@ system:
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
             frame*
               module*
-                u'org.apache.coyote.AbstractProtocol'
+                "org.apache.coyote.AbstractProtocol"
               filename (module takes precedence)
-                u'abstractprotocol.java'
+                "abstractprotocol.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
+                "org.apache.tomcat.util.net.AbstractEndpoint"
               filename (module takes precedence)
-                u'abstractendpoint.java'
+                "abstractendpoint.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
+                "org.apache.tomcat.util.net.NioEndpoint"
               filename (module takes precedence)
-                u'nioendpoint.java'
+                "nioendpoint.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketAdaptor'
+                "sun.nio.ch.ServerSocketAdaptor"
               filename (module takes precedence)
-                u'serversocketadaptor.java'
+                "serversocketadaptor.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
+                "sun.nio.ch.ServerSocketChannelImpl"
               filename (module takes precedence)
-                u'serversocketchannelimpl.java'
+                "serversocketchannelimpl.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind'
+                "bind"
             frame*
               module*
-                u'sun.nio.ch.Net'
+                "sun.nio.ch.Net"
               filename (module takes precedence)
-                u'net.java'
+                "net.java"
               function*
-                u'bind0'
+                "bind0"
           type*
-            u'BindException'
+            "BindException"
           value (ignored because stacktrace takes precedence)
-            u'Address already in use'
+            "Address already in use"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.apache.catalina.connector.Connector'
+                "org.apache.catalina.connector.Connector"
               filename (module takes precedence)
-                u'connector.java'
+                "connector.java"
               function*
-                u'startInternal'
+                "startInternal"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
+            "service.getName(): \"Tomcat\";  Protocol handler start failed"
         exception*
           stacktrace*
             frame*
               module*
-                u'io.sentry.example.Application'
+                "io.sentry.example.Application"
               filename (module takes precedence)
-                u'application.java'
+                "application.java"
               function*
-                u'main'
+                "main"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'run'
+                "run"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refreshContext'
+                "refreshContext"
             frame*
               module*
-                u'org.springframework.boot.SpringApplication'
+                "org.springframework.boot.SpringApplication"
               filename (module takes precedence)
-                u'springapplication.java'
+                "springapplication.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.context.support.AbstractApplicationContext'
+                "org.springframework.context.support.AbstractApplicationContext"
               filename (module takes precedence)
-                u'abstractapplicationcontext.java'
+                "abstractapplicationcontext.java"
               function*
-                u'refresh'
+                "refresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'finishRefresh'
+                "finishRefresh"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+                "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext"
               filename (module takes precedence)
-                u'embeddedwebapplicationcontext.java'
+                "embeddedwebapplicationcontext.java"
               function*
-                u'startEmbeddedServletContainer'
+                "startEmbeddedServletContainer"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'start'
+                "start"
             frame*
               module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+                "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer"
               filename (module takes precedence)
-                u'tomcatembeddedservletcontainer.java'
+                "tomcatembeddedservletcontainer.java"
               function*
-                u'addPreviouslyRemovedConnectors'
+                "addPreviouslyRemovedConnectors"
             frame*
               module*
-                u'org.apache.catalina.core.StandardService'
+                "org.apache.catalina.core.StandardService"
               filename (module takes precedence)
-                u'standardservice.java'
+                "standardservice.java"
               function*
-                u'addConnector'
+                "addConnector"
             frame*
               module*
-                u'org.apache.catalina.util.LifecycleBase'
+                "org.apache.catalina.util.LifecycleBase"
               filename (module takes precedence)
-                u'lifecyclebase.java'
+                "lifecyclebase.java"
               function*
-                u'start'
+                "start"
           type*
-            u'LifecycleException'
+            "LifecycleException"
           value (ignored because stacktrace takes precedence)
-            u'Failed to start component [Connector[HTTP/<float><int>]]'
+            "Failed to start component [Connector[HTTP/<float><int>]]"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_minimal.pysnap
index 41fa52a755..b9dd356aee 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_minimal.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/java_minimal.pysnap
@@ -1,803 +1,803 @@
 ---
-created: '2019-05-08T07:29:42.493256Z'
+created: '2020-02-26T19:54:42.020404Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame (non app frame)
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame (non app frame)
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame (non app frame)
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame (non app frame)
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame (non app frame)
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame (non app frame)
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame (non app frame)
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value*
-          u'/ by zero'
+          "/ by zero"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of system takes precedence)
       message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+        "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
 --------------------------------------------------------------------------
 system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  hash: "ec87dd10e4f7512ecccb4a068c5774ae"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'java.lang.Thread'
+              "java.lang.Thread"
             filename (module takes precedence)
-              u'thread.java'
+              "thread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+              "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
             filename (module takes precedence)
-              u'taskthread.java'
+              "taskthread.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+              "java.util.concurrent.ThreadPoolExecutor$Worker"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'java.util.concurrent.ThreadPoolExecutor'
+              "java.util.concurrent.ThreadPoolExecutor"
             filename (module takes precedence)
-              u'threadpoolexecutor.java'
+              "threadpoolexecutor.java"
             function*
-              u'runWorker'
+              "runWorker"
           frame*
             module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
+              "org.apache.tomcat.util.net.SocketProcessorBase"
             filename (module takes precedence)
-              u'socketprocessorbase.java'
+              "socketprocessorbase.java"
             function*
-              u'run'
+              "run"
           frame*
             module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+              "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
             filename (module takes precedence)
-              u'nioendpoint.java'
+              "nioendpoint.java"
             function*
-              u'doRun'
+              "doRun"
           frame*
             module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+              "org.apache.coyote.AbstractProtocol$ConnectionHandler"
             filename (module takes precedence)
-              u'abstractprotocol.java'
+              "abstractprotocol.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.AbstractProcessorLight'
+              "org.apache.coyote.AbstractProcessorLight"
             filename (module takes precedence)
-              u'abstractprocessorlight.java'
+              "abstractprocessorlight.java"
             function*
-              u'process'
+              "process"
           frame*
             module*
-              u'org.apache.coyote.http11.Http11Processor'
+              "org.apache.coyote.http11.Http11Processor"
             filename (module takes precedence)
-              u'http11processor.java'
+              "http11processor.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
+              "org.apache.catalina.connector.CoyoteAdapter"
             filename (module takes precedence)
-              u'coyoteadapter.java'
+              "coyoteadapter.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.apache.catalina.core.StandardEngineValve'
+              "org.apache.catalina.core.StandardEngineValve"
             filename (module takes precedence)
-              u'standardenginevalve.java'
+              "standardenginevalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.valves.ErrorReportValve'
+              "org.apache.catalina.valves.ErrorReportValve"
             filename (module takes precedence)
-              u'errorreportvalve.java'
+              "errorreportvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardHostValve'
+              "org.apache.catalina.core.StandardHostValve"
             filename (module takes precedence)
-              u'standardhostvalve.java'
+              "standardhostvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
+              "org.apache.catalina.authenticator.AuthenticatorBase"
             filename (module takes precedence)
-              u'authenticatorbase.java'
+              "authenticatorbase.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardContextValve'
+              "org.apache.catalina.core.StandardContextValve"
             filename (module takes precedence)
-              u'standardcontextvalve.java'
+              "standardcontextvalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.StandardWrapperValve'
+              "org.apache.catalina.core.StandardWrapperValve"
             filename (module takes precedence)
-              u'standardwrappervalve.java'
+              "standardwrappervalve.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
+              "org.springframework.web.filter.CharacterEncodingFilter"
             filename (module takes precedence)
-              u'characterencodingfilter.java'
+              "characterencodingfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+              "org.springframework.web.filter.HiddenHttpMethodFilter"
             filename (module takes precedence)
-              u'hiddenhttpmethodfilter.java'
+              "hiddenhttpmethodfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
+              "org.springframework.web.filter.HttpPutFormContentFilter"
             filename (module takes precedence)
-              u'httpputformcontentfilter.java'
+              "httpputformcontentfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
+              "org.springframework.web.filter.OncePerRequestFilter"
             filename (module takes precedence)
-              u'onceperrequestfilter.java'
+              "onceperrequestfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.springframework.web.filter.RequestContextFilter'
+              "org.springframework.web.filter.RequestContextFilter"
             filename (module takes precedence)
-              u'requestcontextfilter.java'
+              "requestcontextfilter.java"
             function*
-              u'doFilterInternal'
+              "doFilterInternal"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
+              "org.apache.tomcat.websocket.server.WsFilter"
             filename (module takes precedence)
-              u'wsfilter.java'
+              "wsfilter.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'doFilter'
+              "doFilter"
           frame*
             module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
+              "org.apache.catalina.core.ApplicationFilterChain"
             filename (module takes precedence)
-              u'applicationfilterchain.java'
+              "applicationfilterchain.java"
             function*
-              u'internalDoFilter'
+              "internalDoFilter"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'javax.servlet.http.HttpServlet'
+              "javax.servlet.http.HttpServlet"
             filename (module takes precedence)
-              u'httpservlet.java'
+              "httpservlet.java"
             function*
-              u'service'
+              "service"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'doGet'
+              "doGet"
           frame*
             module*
-              u'org.springframework.web.servlet.FrameworkServlet'
+              "org.springframework.web.servlet.FrameworkServlet"
             filename (module takes precedence)
-              u'frameworkservlet.java'
+              "frameworkservlet.java"
             function*
-              u'processRequest'
+              "processRequest"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doService'
+              "doService"
           frame*
             module*
-              u'org.springframework.web.servlet.DispatcherServlet'
+              "org.springframework.web.servlet.DispatcherServlet"
             filename (module takes precedence)
-              u'dispatcherservlet.java'
+              "dispatcherservlet.java"
             function*
-              u'doDispatch'
+              "doDispatch"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+              "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter"
             filename (module takes precedence)
-              u'abstracthandlermethodadapter.java'
+              "abstracthandlermethodadapter.java"
             function*
-              u'handle'
+              "handle"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'handleInternal'
+              "handleInternal"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+              "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
             filename (module takes precedence)
-              u'requestmappinghandleradapter.java'
+              "requestmappinghandleradapter.java"
             function*
-              u'invokeHandlerMethod'
+              "invokeHandlerMethod"
           frame*
             module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+              "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
             filename (module takes precedence)
-              u'servletinvocablehandlermethod.java'
+              "servletinvocablehandlermethod.java"
             function*
-              u'invokeAndHandle'
+              "invokeAndHandle"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'invokeForRequest'
+              "invokeForRequest"
           frame*
             module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
+              "org.springframework.web.method.support.InvocableHandlerMethod"
             filename (module takes precedence)
-              u'invocablehandlermethod.java'
+              "invocablehandlermethod.java"
             function*
-              u'doInvoke'
+              "doInvoke"
           frame*
             module*
-              u'java.lang.reflect.Method'
+              "java.lang.reflect.Method"
             filename (module takes precedence)
-              u'method.java'
+              "method.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+              "jdk.internal.reflect.DelegatingMethodAccessorImpl"
             filename (module takes precedence)
-              u'delegatingmethodaccessorimpl.java'
+              "delegatingmethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke'
+              "invoke"
           frame*
             module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+              "jdk.internal.reflect.NativeMethodAccessorImpl"
             filename (module takes precedence)
-              u'nativemethodaccessorimpl.java'
+              "nativemethodaccessorimpl.java"
             function*
-              u'invoke0'
+              "invoke0"
           frame*
             module*
-              u'io.sentry.example.Application'
+              "io.sentry.example.Application"
             filename (module takes precedence)
-              u'application.java'
+              "application.java"
             function*
-              u'home'
+              "home"
         type*
-          u'ArithmeticException'
+          "ArithmeticException"
         value (ignored because stacktrace takes precedence)
-          u'/ by zero'
+          "/ by zero"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message.pysnap
index 4031d4c1b2..5ccf072caa 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-05-08T07:29:42.503455Z'
+created: '2020-02-26T19:54:42.037252Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'Loading chunk <int> failed.\n(timeout: <url>'
+          "Loading chunk <int> failed.\n(timeout: <url>"
 --------------------------------------------------------------------------
 system:
-  hash: '10dfd81e2df31e96fae451b9e205ad81'
+  hash: "10dfd81e2df31e96fae451b9e205ad81"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'Loading chunk <int> failed.\n(timeout: <url>'
+          "Loading chunk <int> failed.\n(timeout: <url>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message_whistles.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message_whistles.pysnap
index c8c3222e67..f9f36f9402 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message_whistles.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_fallback_to_message_whistles.pysnap
@@ -1,24 +1,24 @@
 ---
-created: '2019-09-16T13:22:24.055225Z'
+created: '2020-02-26T19:54:42.052537Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>'
+          "<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>"
 --------------------------------------------------------------------------
 system:
-  hash: 'b8e2a347e75266ca7bb565e2b3c0722e'
+  hash: "b8e2a347e75266ca7bb565e2b3c0722e"
   component:
     system*
       exception*
         type*
-          u'Error'
+          "Error"
         value* (stripped common values)
-          u'<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>'
+          "<date>: <email> logged in (error <int>) time spent <float> --- correlation id <uuid>, checksum <sha1> (md5 <md5>); payload timestamp <date> (submitted from <ip> via <ip> via <ip>) at offset <hex>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_no_in_app.pysnap
index 91f769b157..533c635da1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_no_in_app.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_exception_no_in_app.pysnap
@@ -1,146 +1,146 @@
 ---
-created: '2019-05-08T07:33:31.998496Z'
+created: '2020-02-26T19:54:42.092360Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'invokeGuardedCallbackDev'
+              "invokeGuardedCallbackDev"
           frame (non app frame)
             filename*
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'sentryWrapped'
+              "sentryWrapped"
           frame (non app frame)
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'callCallback'
+              "callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value*
-          u'varant is not defined'
+          "varant is not defined"
 --------------------------------------------------------------------------
 system:
-  hash: 'c0f3f7d6deb17aec9d07259ac684fad0'
+  hash: "c0f3f7d6deb17aec9d07259ac684fad0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'dispatchInteractiveEvent'
+              "dispatchInteractiveEvent"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates'
+              "interactiveUpdates"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'interactiveUpdates$1'
+              "interactiveUpdates$1"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performSyncWork'
+              "performSyncWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWork'
+              "performWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'performWorkOnRoot'
+              "performWorkOnRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'renderRoot'
+              "renderRoot"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'replayUnitOfWork'
+              "replayUnitOfWork"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function*
-              u'invokeGuardedCallback'
+              "invokeGuardedCallback"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'invokeGuardedCallbackDev'
+              "invokeGuardedCallbackDev"
           frame*
             filename*
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'sentryWrapped'
+              "sentryWrapped"
           frame*
             filename*
-              u'react-dom.development.js'
+              "react-dom.development.js"
             function* (trimmed javascript function)
-              u'callCallback'
+              "callCallback"
         type*
-          u'ReferenceError'
+          "ReferenceError"
         value (ignored because stacktrace takes precedence)
-          u'varant is not defined'
+          "varant is not defined"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_message.pysnap
index 1121c14c84..2f769f2d52 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.537223Z'
+created: '2020-02-26T19:54:42.116127Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
+  hash: "4119639092e62c55ea8be348e4d9260d"
   component:
     default*
       message*
-        u'event'
+        "event"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_chrome.pysnap
index a36fe82c7b..bfe8e64054 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_chrome.pysnap
@@ -1,118 +1,118 @@
 ---
-created: '2019-11-01T10:06:07.530279Z'
+created: '2020-02-26T19:54:42.147528Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_edge.pysnap
index 8c4feee01e..399e2ecc1b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_edge.pysnap
@@ -1,126 +1,126 @@
 ---
-created: '2019-05-10T12:45:55.643244Z'
+created: '2020-02-26T19:54:42.181080Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename*
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename*
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_firefox.pysnap
index 80ac491fc3..53701fd90f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_firefox.pysnap
@@ -1,112 +1,112 @@
 ---
-created: '2019-11-01T10:06:07.560274Z'
+created: '2020-02-26T19:54:42.207014Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_chrome.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_chrome.pysnap
index 4114541063..c2d2a5a1ca 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_chrome.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_chrome.pysnap
@@ -1,154 +1,154 @@
 ---
-created: '2019-11-01T10:06:07.576506Z'
+created: '2020-02-26T19:54:42.233368Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (anonymous filename discarded)
-              u'<anonymous>'
+              "<anonymous>"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_edge.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_edge.pysnap
index c628a2b1ac..58ce116f21 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_edge.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_edge.pysnap
@@ -1,162 +1,162 @@
 ---
-created: '2019-05-10T12:45:55.687880Z'
+created: '2020-02-26T19:54:42.259937Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function* (trimmed javascript function)
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename*
-              u'eval code'
+              "eval code"
             function*
-              u'eval code'
+              "eval code"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             module*
-              u'test'
+              "test"
             filename (module takes precedence)
-              u'native code'
+              "native code"
             function* (trimmed javascript function)
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'Anonymous function'
+              "Anonymous function"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_firefox.pysnap
index 2362215bde..d871eb5470 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_firefox.pysnap
@@ -1,148 +1,148 @@
 ---
-created: '2019-11-01T10:06:07.606626Z'
+created: '2020-02-26T19:54:42.285667Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function (ignored unknown function name)
-              u'test/<'
+              "test/<"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_safari.pysnap
index 268e7772c2..153d7b5994 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_http_safari.pysnap
@@ -1,160 +1,160 @@
 ---
-created: '2019-11-01T10:06:07.621619Z'
+created: '2020-02-26T19:54:42.315367Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'b2602ad455472dede8e4c340d8a7eaba'
+  hash: "b2602ad455472dede8e4c340d8a7eaba"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             module*
-              u'test'
+              "test"
             filename (ignored because frame points to a URL)
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_safari.pysnap
index f8118ba2b3..c6184de9cd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_safari.pysnap
@@ -1,128 +1,128 @@
 ---
-created: '2019-11-01T10:06:07.636851Z'
+created: '2020-02-26T19:54:42.344202Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (non app frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame (non app frame)
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value*
-          u'bad'
+          "bad"
 --------------------------------------------------------------------------
 system:
-  hash: 'c63e8727af1a8fe75872b6a762797113'
+  hash: "c63e8727af1a8fe75872b6a762797113"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'testMethod'
+              "testMethod"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'eval'
+              "eval"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'test'
+              "test"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'map'
+              "map"
           frame*
             filename*
-              u'test.html'
+              "test.html"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callback'
+              "callback"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'callAnotherThing'
+              "callAnotherThing"
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'aha'
+              "aha"
           frame*
             filename*
-              u'test.html'
+              "test.html"
             function*
-              u'aha'
+              "aha"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bad'
+          "bad"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_firefox.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_firefox.pysnap
index 8fcf872fda..cbb82acbdd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_firefox.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_firefox.pysnap
@@ -1,350 +1,350 @@
 ---
-created: '2019-10-31T12:42:12.354951Z'
+created: '2020-02-26T19:54:42.402505Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '4a3cf3893b6485428dd02da116c8370e'
+  hash: "4a3cf3893b6485428dd02da116c8370e"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function (ignored because sourcemap used and context line available)
-              u'M'
+              "M"
             context-line*
-              u'fn();'
+              "fn();"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u"while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'run'
+              "run"
             context-line*
-              u'result = handler(value); // may throw'
+              "result = handler(value); // may throw"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'return this._invoke(method, arg);'
+              "return this._invoke(method, arg);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} !==typeof a&&"function"!==typeof a&&null!=a?B("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=functi {snip}'
+              "{snip} !==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=functi {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}'
+              "{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
             context-line (discarded because line too long)
-              u'{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t("185"))}} {snip}'
+              "{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}} {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}'
+              "{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'{snip} t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}'
+              "{snip} t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
             context-line (discarded because line too long)
-              u'{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}'
+              "{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'X'
+              "X"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
 --------------------------------------------------------------------------
 system:
-  hash: 'd5456487ea8dccfe96c1968b19870978'
+  hash: "d5456487ea8dccfe96c1968b19870978"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/_microtask"
             filename (module takes precedence)
-              u'_microtask.js'
+              "_microtask.js"
             function (ignored because sourcemap used and context line available)
-              u'M'
+              "M"
             context-line*
-              u'fn();'
+              "fn();"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u"while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
+              "while (chain.length > i) run(chain[i++]); // variable length - can't use forEach"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise'
+              "usr/src/getsentry/src/sentry/node_modules/core-js/modules/es6.promise"
             filename (module takes precedence)
-              u'es6.promise.js'
+              "es6.promise.js"
             function (ignored because sourcemap used and context line available)
-              u'run'
+              "run"
             context-line*
-              u'result = handler(value); // may throw'
+              "result = handler(value); // may throw"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'return this._invoke(method, arg);'
+              "return this._invoke(method, arg);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} !==typeof a&&"function"!==typeof a&&null!=a?B("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=functi {snip}'
+              "{snip} !==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=functi {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'this'
+              "this"
             context-line (discarded because line too long)
-              u'{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}'
+              "{snip} );e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'If'
+              "If"
             context-line (discarded because line too long)
-              u'{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t("185"))}} {snip}'
+              "{snip} );else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}} {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}'
+              "{snip} ),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=n {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'{snip} t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}'
+              "{snip} t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh( {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'rh'
+              "rh"
             context-line (discarded because line too long)
-              u'{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}'
+              "{snip} nate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'X'
+              "X"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_safari.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_safari.pysnap
index fae0ccf8fa..ffc7bc37fd 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_safari.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/javascript_xbrowser_sentryui_safari.pysnap
@@ -1,288 +1,288 @@
 ---
-created: '2019-10-31T12:42:12.381966Z'
+created: '2020-02-26T19:54:42.450770Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '4a3cf3893b6485428dd02da116c8370e'
+  hash: "4a3cf3893b6485428dd02da116c8370e"
   component:
     app*
       exception*
         stacktrace*
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'call'
+              "call"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
             context-line (discarded because line too long)
-              u'{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}'
+              "{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             context-line (discarded because line too long)
-              u'{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=='
+              "{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=="
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
             context-line (discarded because line too long)
-              u'var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}'
+              "var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'function Xg(a,b,c){V?t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}'
+              "function Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}'
+              "function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}"
           frame (non app frame)
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
             context-line (discarded because line too long)
-              u'{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}'
+              "{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'q'
+              "q"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchData'
+              "fetchData"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
 --------------------------------------------------------------------------
 system:
-  hash: '0b81da6ea3d7cc82b1d4825b7aac0b8d'
+  hash: "0b81da6ea3d7cc82b1d4825b7aac0b8d"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored low quality javascript frame)
             filename (native code indicated by filename)
-              u'[native code]'
+              "[native code]"
             function*
-              u'promiseReactionJob'
+              "promiseReactionJob"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'_next'
+              "_next"
             context-line*
-              u'asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);'
+              "asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator'
+              "usr/src/getsentry/src/sentry/node_modules/@babel/runtime/helpers/asyncToGenerator"
             filename (module takes precedence)
-              u'asynctogenerator.js'
+              "asynctogenerator.js"
             function (ignored because sourcemap used and context line available)
-              u'asyncGeneratorStep'
+              "asyncGeneratorStep"
             context-line*
-              u'var info = gen[key](arg);'
+              "var info = gen[key](arg);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'key'
+              "key"
             context-line*
-              u'var record = tryCatch(innerFn, self, context);'
+              "var record = tryCatch(innerFn, self, context);"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime'
+              "usr/src/getsentry/src/sentry/node_modules/regenerator-runtime/runtime"
             filename (module takes precedence)
-              u'runtime.js'
+              "runtime.js"
             function (ignored because sourcemap used and context line available)
-              u'tryCatch'
+              "tryCatch"
             context-line*
-              u'return { type: "normal", arg: fn.call(obj, arg) };'
+              "return { type: \"normal\", arg: fn.call(obj, arg) };"
           frame*
             module*
-              u'app/components/lazyLoad'
+              "app/components/lazyLoad"
             filename (module takes precedence)
-              u'lazyload.jsx'
+              "lazyload.jsx"
             function (ignored because sourcemap used and context line available)
-              u'call'
+              "call"
             context-line*
-              u'this.setState({'
+              "this.setState({"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production'
+              "usr/src/getsentry/src/sentry/node_modules/react/cjs/react.production"
             filename (module takes precedence)
-              u'react.production.min.js'
+              "react.production.min.js"
             function*
-              u'setState'
+              "setState"
             context-line (discarded because line too long)
-              u'{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}'
+              "{snip} ructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0, {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'enqueueSetState'
+              "enqueueSetState"
             context-line (discarded because line too long)
-              u'{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=='
+              "{snip} &(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!=="
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'tag'
+              "tag"
             context-line (discarded because line too long)
-              u'var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}'
+              "var U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0) {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Yg'
+              "Yg"
             context-line (discarded because line too long)
-              u'function Xg(a,b,c){V?t("245"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}'
+              "function Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finis {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'Xg'
+              "Xg"
             context-line (discarded because line too long)
-              u'function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}'
+              "function rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirati {snip}"
           frame*
             module*
-              u'usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production'
+              "usr/src/getsentry/src/sentry/node_modules/react-dom/cjs/react-dom.production"
             filename (module takes precedence)
-              u'react-dom.production.min.js'
+              "react-dom.production.min.js"
             function*
-              u'ih'
+              "ih"
             context-line (discarded because line too long)
-              u'{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}'
+              "{snip} .__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;c {snip}"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'q'
+              "q"
             context-line*
-              u'this.fetchData();'
+              "this.fetchData();"
           frame*
             module*
-              u'app/views/groupDetails/shared/groupEventDetails'
+              "app/views/groupDetails/shared/groupEventDetails"
             filename (module takes precedence)
-              u'groupeventdetails.jsx'
+              "groupeventdetails.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchData'
+              "fetchData"
             context-line*
-              u'fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)'
+              "fetchGroupEventAndMarkSeen(api, orgSlug, projSlug, groupId, eventId, envNames)"
           frame*
             module*
-              u'app/api'
+              "app/api"
             filename (module takes precedence)
-              u'api.jsx'
+              "api.jsx"
             function (ignored because sourcemap used and context line available)
-              u'fetchGroupEventAndMarkSeen'
+              "fetchGroupEventAndMarkSeen"
             context-line*
-              u'const preservedError = new Error();'
+              "const preservedError = new Error();"
         type*
-          u'NotFoundError'
+          "NotFoundError"
         value (ignored because stacktrace takes precedence)
-          u'GET /issues/<int>/events/latest/ <int>'
+          "GET /issues/<int>/events/latest/ <int>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel.pysnap
index 29386623d2..689ad747b6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel.pysnap
@@ -1,722 +1,722 @@
 ---
-created: '2019-05-08T07:33:32.041454Z'
+created: '2020-02-26T19:54:42.520856Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '4665d486184740231357ab63f4543a8d'
+  hash: "4665d486184740231357ab63f4543a8d"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
             context-line*
-              u'$request = Illuminate\\Http\\Request::capture()'
+              "$request = Illuminate\\Http\\Request::capture()"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             context-line*
-              u'$response = $this->sendRequestThroughRouter($request);'
+              "$response = $this->sendRequestThroughRouter($request);"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             context-line*
-              u'->then($this->dispatchToRouter());'
+              "->then($this->dispatchToRouter());"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame (non app frame)
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             context-line*
-              u'return $this->router->dispatch($request);'
+              "return $this->router->dispatch($request);"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             context-line*
-              u'return $this->dispatchToRoute($request);'
+              "return $this->dispatchToRoute($request);"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             context-line*
-              u'return $this->runRoute($request, $this->findRoute($request));'
+              "return $this->runRoute($request, $this->findRoute($request));"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             context-line*
-              u'$this->runRouteWithinStack($route, $request)'
+              "$this->runRouteWithinStack($route, $request)"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             context-line*
-              u'});'
+              "});"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             context-line*
-              u'return $this->encrypt($next($this->decrypt($request)));'
+              "return $this->encrypt($next($this->decrypt($request)));"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             context-line*
-              u'$response = $next($request);'
+              "$response = $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             context-line*
-              u'$response = $next($request), $session'
+              "$response = $next($request), $session"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             context-line*
-              u'return tap($next($request), function ($response) use ($request) {'
+              "return tap($next($request), function ($response) use ($request) {"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame (non app frame)
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame (non app frame)
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             context-line*
-              u'$request, $route->run()'
+              "$request, $route->run()"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             context-line*
-              u'return $this->runCallable();'
+              "return $this->runCallable();"
           frame (non app frame)
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             context-line*
-              u"$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             context-line*
-              u"throw new Exception('LARAVEL TEST');"
+              "throw new Exception('LARAVEL TEST');"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '107ed03036d901157372f260bc3df446'
+  hash: "107ed03036d901157372f260bc3df446"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame*
             filename*
-              u'index.php'
+              "index.php"
             function*
-              u'require_once'
+              "require_once"
             context-line*
-              u'$request = Illuminate\\Http\\Request::capture()'
+              "$request = Illuminate\\Http\\Request::capture()"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
+              "Illuminate\\Foundation\\Http\\Kernel::handle"
             context-line*
-              u'$response = $this->sendRequestThroughRouter($request);'
+              "$response = $this->sendRequestThroughRouter($request);"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
+              "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter"
             context-line*
-              u'->then($this->dispatchToRouter());'
+              "->then($this->dispatchToRouter());"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'checkformaintenancemode.php'
+              "checkformaintenancemode.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'validatepostsize.php'
+              "validatepostsize.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'transformsrequest.php'
+              "transformsrequest.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'trustproxies.php'
+              "trustproxies.php"
             function*
-              u'Fideloper\\Proxy\\TrustProxies::handle'
+              "Fideloper\\Proxy\\TrustProxies::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame*
             filename*
-              u'kernel.php'
+              "kernel.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
+              "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}"
             context-line*
-              u'return $this->router->dispatch($request);'
+              "return $this->router->dispatch($request);"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatch'
+              "Illuminate\\Routing\\Router::dispatch"
             context-line*
-              u'return $this->dispatchToRoute($request);'
+              "return $this->dispatchToRoute($request);"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
+              "Illuminate\\Routing\\Router::dispatchToRoute"
             context-line*
-              u'return $this->runRoute($request, $this->findRoute($request));'
+              "return $this->runRoute($request, $this->findRoute($request));"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRoute'
+              "Illuminate\\Routing\\Router::runRoute"
             context-line*
-              u'$this->runRouteWithinStack($route, $request)'
+              "$this->runRouteWithinStack($route, $request)"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
+              "Illuminate\\Routing\\Router::runRouteWithinStack"
             context-line*
-              u'});'
+              "});"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::then'
+              "Illuminate\\Pipeline\\Pipeline::then"
             context-line*
-              u'return $pipeline($this->passable);'
+              "return $pipeline($this->passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'encryptcookies.php'
+              "encryptcookies.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
+              "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle"
             context-line*
-              u'return $this->encrypt($next($this->decrypt($request)));'
+              "return $this->encrypt($next($this->decrypt($request)));"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'addqueuedcookiestoresponse.php'
+              "addqueuedcookiestoresponse.php"
             function*
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
+              "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle"
             context-line*
-              u'$response = $next($request);'
+              "$response = $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'startsession.php'
+              "startsession.php"
             function*
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
+              "Illuminate\\Session\\Middleware\\StartSession::handle"
             context-line*
-              u'$response = $next($request), $session'
+              "$response = $next($request), $session"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'shareerrorsfromsession.php'
+              "shareerrorsfromsession.php"
             function*
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
+              "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'verifycsrftoken.php'
+              "verifycsrftoken.php"
             function*
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
+              "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle"
             context-line*
-              u'return tap($next($request), function ($response) use ($request) {'
+              "return tap($next($request), function ($response) use ($request) {"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
           frame*
             filename*
-              u'substitutebindings.php'
+              "substitutebindings.php"
             function*
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
+              "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle"
             context-line*
-              u'return $next($request);'
+              "return $next($request);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}"
             context-line*
-              u'return $destination($passable);'
+              "return $destination($passable);"
           frame*
             filename*
-              u'router.php'
+              "router.php"
             function*
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
+              "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}"
             context-line*
-              u'$request, $route->run()'
+              "$request, $route->run()"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::run'
+              "Illuminate\\Routing\\Route::run"
             context-line*
-              u'return $this->runCallable();'
+              "return $this->runCallable();"
           frame*
             filename*
-              u'route.php'
+              "route.php"
             function*
-              u'Illuminate\\Routing\\Route::runCallable'
+              "Illuminate\\Routing\\Route::runCallable"
             context-line*
-              u"$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+              "$this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
           frame*
             filename*
-              u'web.php'
+              "web.php"
             function*
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
+              "Illuminate\\Routing\\RouteFileRegistrar::{closure}"
             context-line*
-              u"throw new Exception('LARAVEL TEST');"
+              "throw new Exception('LARAVEL TEST');"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap
index 9eefebb060..33d2e9c267 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap
@@ -1,64 +1,64 @@
 ---
-created: '2020-01-15T14:24:46.412146Z'
+created: '2020-02-26T19:54:42.536997Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'a728cdf5d62c8e017c35c3fe04051b6e'
+  hash: "a728cdf5d62c8e017c35c3fe04051b6e"
   component:
     app*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function* (anonymous class method)
-              u'run'
+              "run"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame (non app frame)
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
 --------------------------------------------------------------------------
 system:
-  hash: '63c67781779781d9b0a442a5b2bdb976'
+  hash: "63c67781779781d9b0a442a5b2bdb976"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'server.php'
+              "server.php"
             context-line*
-              u"require_once __DIR__.'/public/index.php';"
+              "require_once __DIR__.'/public/index.php';"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function* (anonymous class method)
-              u'run'
+              "run"
             context-line*
-              u'return $callable($passable);'
+              "return $callable($passable);"
           frame*
             filename*
-              u'pipeline.php'
+              "pipeline.php"
             function*
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+              "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}"
             context-line*
-              u'? $pipe->{$this->method}(...$parameters)'
+              "? $pipe->{$this->method}(...$parameters)"
         type*
-          u'Exception'
+          "Exception"
         value (ignored because stacktrace takes precedence)
-          u'LARAVEL TEST'
+          "LARAVEL TEST"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_prefers_message.pysnap
index 5e036c1661..b7446294a0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.577620Z'
+created: '2020-02-26T19:54:42.547671Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_uses_formatted.pysnap
index b823795fce..0461040c0a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/logentry_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.584879Z'
+created: '2020-02-26T19:54:42.561617Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
+  hash: "329b29efcf1f77067a063e34f56e7791"
   component:
     default*
       message*
-        u'Hello there world!'
+        "Hello there world!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_prefers_message.pysnap
index b7265213e2..acb989532f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_prefers_message.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_prefers_message.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.592184Z'
+created: '2020-02-26T19:54:42.577694Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
+  hash: "8ec8bbc71eb6e2af7fbe5076a8534f96"
   component:
     default*
       message*
-        u'Hello there %s!'
+        "Hello there %s!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_uses_formatted.pysnap
index 3b86ef421f..4ee850edcf 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_uses_formatted.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/message_uses_formatted.pysnap
@@ -1,11 +1,11 @@
 ---
-created: '2019-05-08T07:29:42.599996Z'
+created: '2020-02-26T19:54:42.588028Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
+  hash: "d3f5e52d24e9c1eae5abe6c866cced63"
   component:
     default*
       message*
-        u'Hello there Peter!'
+        "Hello there Peter!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/minified_javascript.pysnap
index 3136b43cdc..f83f610747 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/minified_javascript.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/minified_javascript.pysnap
@@ -1,418 +1,418 @@
 ---
-created: '2019-10-31T12:42:12.504325Z'
+created: '2020-02-26T19:54:42.632833Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
             context-line (discarded because line too long)
-              u'{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}'
+              "{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'S/<'
+              "S/<"
             context-line (discarded because line too long)
-              u'{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}'
+              "{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
             context-line (discarded because line too long)
-              u'{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y("Promise-chain cycle")):(p=N(n))?p.cal {snip}'
+              "{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y(\"Promise-chain cycle\")):(p=N(n))?p.cal {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
             context-line (discarded because line too long)
-              u'{snip} ply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}'
+              "{snip} ply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt("return",a());case 12:throw e.t0;case 13:case"end":return e.stop()}},e,this,[[0,7]])}));re {snip}'
+              "{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt(\"return\",a());case 12:throw e.t0;case 13:case\"end\":return e.stop()}},e,this,[[0,7]])}));re {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/</a</<'
+              "e/</a</<"
             context-line (discarded because line too long)
-              u'{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt("return",a());case 3:case"end":return e.stop {snip}'
+              "{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt(\"return\",a());case 3:case\"end\":return e.stop {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/<'
+              "exports/<"
             context-line (discarded because line too long)
-              u'{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)} {snip}'
+              "{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)} {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
             context-line (discarded because line too long)
-              u'{snip} function(t){O(this,L,"Promise","_h"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}'
+              "{snip} function(t){O(this,L,\"Promise\",\"_h\"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/</<'
+              "exports/</<"
             context-line (discarded because line too long)
-              u'{snip} n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}'
+              "{snip} n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
             context-line (discarded because line too long)
-              u'{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,funct {snip}'
+              "{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,funct {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt("return",r.default||r);case 7:if(e.prev=7,e.t {snip}'
+              "{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt(\"return\",r.default||r);case 7:if(e.prev=7,e.t {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
             context-line (discarded because line too long)
-              u'{snip} orgId/issues/:groupId/",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}'
+              "{snip} orgId/issues/:groupId/\",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function* (trimmed javascript function)
-              u'e'
+              "e"
             context-line (discarded because line too long)
-              u'{snip} "+i+")");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:"timeout",target:s})},12e4);s.onerror=s.onload=i,do {snip}'
+              "{snip} \"+i+\")\");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:\"timeout\",target:s})},12e4);s.onerror=s.onload=i,do {snip}"
           frame (non app frame)
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'wrapTimeFunction/<'
+              "wrapTimeFunction/<"
             context-line (discarded because line too long)
-              u'{snip} ism:{data:{function:Dt(t)},handled:!0,type:"instrument"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}'
+              "{snip} ism:{data:{function:Dt(t)},handled:!0,type:\"instrument\"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
 --------------------------------------------------------------------------
 system:
-  hash: 'dcfcd48a02c100bbe4023cbc783054f0'
+  hash: "dcfcd48a02c100bbe4023cbc783054f0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'M'
+              "M"
             context-line (discarded because line too long)
-              u'{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}'
+              "{snip} o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'S/<'
+              "S/<"
             context-line (discarded because line too long)
-              u'{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}'
+              "{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'i'
+              "i"
             context-line (discarded because line too long)
-              u'{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y("Promise-chain cycle")):(p=N(n))?p.cal {snip}'
+              "{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y(\"Promise-chain cycle\")):(p=N(n))?p.cal {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'b'
+              "b"
             context-line (discarded because line too long)
-              u'{snip} ply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}'
+              "{snip} ply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt("return",a());case 12:throw e.t0;case 13:case"end":return e.stop()}},e,this,[[0,7]])}));re {snip}'
+              "{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt(\"return\",a());case 12:throw e.t0;case 13:case\"end\":return e.stop()}},e,this,[[0,7]])}));re {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/</a</<'
+              "e/</a</<"
             context-line (discarded because line too long)
-              u'{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt("return",a());case 3:case"end":return e.stop {snip}'
+              "{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt(\"return\",a());case 3:case\"end\":return e.stop {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/<'
+              "exports/<"
             context-line (discarded because line too long)
-              u'{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)} {snip}'
+              "{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)} {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'L'
+              "L"
             context-line (discarded because line too long)
-              u'{snip} function(t){O(this,L,"Promise","_h"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}'
+              "{snip} function(t){O(this,L,\"Promise\",\"_h\"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'exports/</<'
+              "exports/</<"
             context-line (discarded because line too long)
-              u'{snip} n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}'
+              "{snip} n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'c'
+              "c"
             context-line (discarded because line too long)
-              u'{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,"next",t)}function b(t){n(i,r,p,c,b,"throw",t)}c(void 0)})}}},,,funct {snip}'
+              "{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,funct {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'n'
+              "n"
             context-line (discarded because line too long)
-              u'{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}'
+              "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'g/</t[e]'
+              "g/</t[e]"
             context-line (discarded because line too long)
-              u'{snip} row","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}'
+              "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'_invoke</<'
+              "_invoke</<"
             context-line (discarded because line too long)
-              u'{snip} lse"return"===n.method&&n.abrupt("return",n.arg);o=s;var b=W(t,e,n);if("normal"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}'
+              "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function*
-              u'W'
+              "W"
             context-line (discarded because line too long)
-              u'{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function v(){}function y(){}fun {snip}'
+              "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function (ignored unknown function name)
-              u'e/<'
+              "e/<"
             context-line (discarded because line too long)
-              u'{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt("return",r.default||r);case 7:if(e.prev=7,e.t {snip}'
+              "{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt(\"return\",r.default||r);case 7:if(e.prev=7,e.t {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function*
-              u'componentPromise'
+              "componentPromise"
             context-line (discarded because line too long)
-              u'{snip} orgId/issues/:groupId/",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}'
+              "{snip} orgId/issues/:groupId/\",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}"
           frame*
             module*
-              u'sentry/dist/app'
+              "sentry/dist/app"
             filename (ignored because frame points to a URL)
-              u'app.js'
+              "app.js"
             function* (trimmed javascript function)
-              u'e'
+              "e"
             context-line (discarded because line too long)
-              u'{snip} "+i+")");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:"timeout",target:s})},12e4);s.onerror=s.onload=i,do {snip}'
+              "{snip} \"+i+\")\");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:\"timeout\",target:s})},12e4);s.onerror=s.onload=i,do {snip}"
           frame*
             module*
-              u'sentry/dist/vendor'
+              "sentry/dist/vendor"
             filename (ignored because frame points to a URL)
-              u'vendor.js'
+              "vendor.js"
             function (ignored unknown function name)
-              u'wrapTimeFunction/<'
+              "wrapTimeFunction/<"
             context-line (discarded because line too long)
-              u'{snip} ism:{data:{function:Dt(t)},handled:!0,type:"instrument"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}'
+              "{snip} ism:{data:{function:Dt(t)},handled:!0,type:\"instrument\"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}"
         type*
-          u'NS_ERROR_NOT_INITIALIZED'
+          "NS_ERROR_NOT_INITIALIZED"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_complex_function_names.pysnap
index 2bc5c3e8be..0841312bb9 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_complex_function_names.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_complex_function_names.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-05-11T09:56:08.384459Z'
+created: '2020-02-26T19:54:42.676363Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '61d21e6d53c0837718af047c20e5e7ea'
+  hash: "61d21e6d53c0837718af047c20e5e7ea"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_limit_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_limit_frames.pysnap
index c8d962d413..efd091ead0 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_limit_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_limit_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-06-05T11:45:18.542023Z'
+created: '2020-02-26T19:54:42.704656Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '9bb5de55b854491dacc677184c9b019a'
+  hash: "9bb5de55b854491dacc677184c9b019a"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (ignored because only 1 frame is considered by grouping enhancement rule (family:native max-frames=1))
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_no_filenames.pysnap
index f92dbf5f1f..0e172ff53c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_no_filenames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_no_filenames.pysnap
@@ -1,110 +1,110 @@
 ---
-created: '2019-09-26T13:26:28.893497Z'
+created: '2020-02-26T19:54:42.831206Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '418120a66f7031923031f5c52aca0724'
+  hash: "418120a66f7031923031f5c52aca0724"
   component:
     app*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame (non app frame)
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame (non app frame)
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame (non app frame)
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame (non app frame)
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '00719910980352c06ba93641057012e0'
+  hash: "00719910980352c06ba93641057012e0"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame*
             function*
-              u'std::rt::lang_start'
+              "std::rt::lang_start"
           frame*
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame*
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame*
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame*
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
           frame*
             function*
-              u'sentry::integrations::log::Logger::log'
+              "sentry::integrations::log::Logger::log"
           frame*
             function*
-              u'sentry::hub::Hub::with_active'
+              "sentry::hub::Hub::with_active"
           frame*
             function*
-              u'sentry::hub::Hub::with'
+              "sentry::hub::Hub::with"
           frame*
             function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
+              "sentry::hub::Hub::with_active::{{closure}}"
           frame
             function (ignored unknown function)
-              u'<unknown>'
+              "<unknown>"
           frame
             function (ignored unknown function)
-              u'<redacted>'
+              "<redacted>"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_unlimited_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_unlimited_frames.pysnap
index 5d65312e16..5998285775 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_unlimited_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_unlimited_frames.pysnap
@@ -1,44 +1,44 @@
 ---
-created: '2019-05-16T18:21:49.807173Z'
+created: '2020-02-26T19:54:42.858642Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame (non app frame)
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame (non app frame)
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '61d21e6d53c0837718af047c20e5e7ea'
+  hash: "61d21e6d53c0837718af047c20e5e7ea"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
+              "Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated"
           frame*
             function*
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
+              "Scaleform::GFx::AS3::IMEManager::DispatchEvent"
           frame*
             function*
-              u'<lambda>::operator()'
+              "<lambda>::operator()"
         type (ignored because exception is synthetic)
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_windows_anon_namespace.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_windows_anon_namespace.pysnap
index af23381c96..593b79e249 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_windows_anon_namespace.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_windows_anon_namespace.pysnap
@@ -1,76 +1,76 @@
 ---
-created: '2019-09-10T09:49:14.992868Z'
+created: '2020-02-26T19:54:42.929939Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame (non app frame)
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::crash"
+              "`anonymous namespace'::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value*
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
 --------------------------------------------------------------------------
 system:
-  hash: '15d397771f229af8dc42783542f81dd4'
+  hash: "15d397771f229af8dc42783542f81dd4"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'__scrt_common_main_seh'
+              "__scrt_common_main_seh"
           frame*
             filename*
-              u'exe_common.inl'
+              "exe_common.inl"
             function*
-              u'invoke_main'
+              "invoke_main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::start"
+              "`anonymous namespace'::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u"`anonymous namespace'::crash"
+              "`anonymous namespace'::crash"
         type (ignored because exception is synthetic)
-          u'EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "EXCEPTION_ACCESS_VIOLATION_WRITE"
         value (ignored because stacktrace takes precedence)
-          u'Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE'
+          "Fatal Error: EXCEPTION_ACCESS_VIOLATION_WRITE"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_with_function_name.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_with_function_name.pysnap
index 2291d48c5d..d147fb0ce7 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_with_function_name.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/native_with_function_name.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-05-08T07:29:42.664783Z'
+created: '2020-02-26T19:54:42.968100Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame (non app frame)
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::something::nested::Foo<T>::crash'
+              "(anonymous namespace)::something::nested::Foo<T>::crash"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value*
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
 --------------------------------------------------------------------------
 system:
-  hash: 'c29439027eafcf7642f641554ab0f0ef'
+  hash: "c29439027eafcf7642f641554ab0f0ef"
   component:
     system*
       exception*
         stacktrace*
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'main'
+              "main"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::start'
+              "(anonymous namespace)::start"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::crash'
+              "(anonymous namespace)::crash"
           frame*
             filename*
-              u'main.cpp'
+              "main.cpp"
             function*
-              u'(anonymous namespace)::something::nested::Foo<T>::crash'
+              "(anonymous namespace)::something::nested::Foo<T>::crash"
         type (ignored because exception is synthetic)
-          u'EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
         value (ignored because stacktrace takes precedence)
-          u'Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS'
+          "Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS"
       threads (thread has no stacktrace)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/node_exception_weird.pysnap
index fec0d63678..df1b3764ea 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/node_exception_weird.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/node_exception_weird.pysnap
@@ -1,198 +1,198 @@
 ---
-created: '2019-05-10T12:45:55.934160Z'
+created: '2020-02-26T19:54:42.992896Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'a20509269752c9a1bea6078851e4d39c'
+  hash: "a20509269752c9a1bea6078851e4d39c"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'withScope'
+              "withScope"
             context-line*
-              u'*/'
+              "*/"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'mockConstructor [as captureException]'
+              "mockConstructor [as captureException]"
             context-line*
-              u'return fn.apply(this, arguments);'
+              "return fn.apply(this, arguments);"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'})();'
+              "})();"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
             context-line*
-              u'return specificMockImpl.apply(this, arguments);'
+              "return specificMockImpl.apply(this, arguments);"
           frame (non app frame)
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'return original.apply(this, arguments);'
+              "return original.apply(this, arguments);"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'if (maxBreadcrumbs <= 0) {'
+              "if (maxBreadcrumbs <= 0) {"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'invokeClient'
+              "invokeClient"
             context-line*
-              u'* @returns Scope, the new cloned scope'
+              "* @returns Scope, the new cloned scope"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'promisedEvent'
+              "promisedEvent"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function* (trimmed javascript function)
-              u'eventFromException'
+              "eventFromException"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bla'
+          "bla"
 --------------------------------------------------------------------------
 system:
-  hash: '252dc79eb5653bf822e2684d90734cb8'
+  hash: "252dc79eb5653bf822e2684d90734cb8"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'withScope'
+              "withScope"
             context-line*
-              u'*/'
+              "*/"
           frame*
             module*
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             filename (module takes precedence)
-              u'onunhandledrejection.ts'
+              "onunhandledrejection.ts"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function* (trimmed javascript function)
-              u'mockConstructor [as captureException]'
+              "mockConstructor [as captureException]"
             context-line*
-              u'return fn.apply(this, arguments);'
+              "return fn.apply(this, arguments);"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'})();'
+              "})();"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function*
-              u'finalReturnValue'
+              "finalReturnValue"
             context-line*
-              u'return specificMockImpl.apply(this, arguments);'
+              "return specificMockImpl.apply(this, arguments);"
           frame*
             module*
-              u'jest-mock.build:index'
+              "jest-mock.build:index"
             filename (module takes precedence)
-              u'index.js'
+              "index.js"
             function (ignored unknown function name)
-              u'<anonymous>'
+              "<anonymous>"
             context-line*
-              u'return original.apply(this, arguments);'
+              "return original.apply(this, arguments);"
           frame*
             module*
-              u'hub.ts'
+              "hub.ts"
             filename (module takes precedence)
-              u'hub.ts'
+              "hub.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'if (maxBreadcrumbs <= 0) {'
+              "if (maxBreadcrumbs <= 0) {"
           frame*
             module*
-              u'hub'
+              "hub"
             filename (module takes precedence)
-              u'hub.js'
+              "hub.js"
             function* (trimmed javascript function)
-              u'invokeClient'
+              "invokeClient"
             context-line*
-              u'* @returns Scope, the new cloned scope'
+              "* @returns Scope, the new cloned scope"
           frame*
             module*
-              u'baseclient.ts'
+              "baseclient.ts"
             filename (module takes precedence)
-              u'baseclient.ts'
+              "baseclient.ts"
             function* (trimmed javascript function)
-              u'captureException'
+              "captureException"
             context-line*
-              u'promisedEvent'
+              "promisedEvent"
           frame*
             module*
-              u'backend.ts'
+              "backend.ts"
             filename (module takes precedence)
-              u'backend.ts'
+              "backend.ts"
             function* (trimmed javascript function)
-              u'eventFromException'
+              "eventFromException"
         type*
-          u'Error'
+          "Error"
         value (ignored because stacktrace takes precedence)
-          u'bla'
+          "bla"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_exception_base.pysnap
index 400e5eea95..be45885a0a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_exception_base.pysnap
@@ -1,10 +1,10 @@
 ---
-created: '2019-05-08T07:29:42.684400Z'
+created: '2020-02-26T19:54:43.010583Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'b4c29e2a2a2681fbaf9fd8f5b09e4154'
+  hash: "b4c29e2a2a2681fbaf9fd8f5b09e4154"
   component:
     app*
       chained-exception*
@@ -12,23 +12,23 @@ app:
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
         exception*
           stacktrace
             frame (non app frame)
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value*
-            u'hello world'
+            "hello world"
 --------------------------------------------------------------------------
 system:
-  hash: '669cb6664e0f5fed38665da04e464f7e'
+  hash: "669cb6664e0f5fed38665da04e464f7e"
   component:
     system*
       chained-exception*
@@ -36,17 +36,17 @@ system:
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
         exception*
           stacktrace*
             frame*
               filename*
-                u'baz.py'
+                "baz.py"
           type*
-            u'ValueError'
+            "ValueError"
           value (ignored because stacktrace takes precedence)
-            u'hello world'
+            "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_away_from_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_away_from_crash.pysnap
index 20b517cc30..46a54708a1 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_away_from_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_away_from_crash.pysnap
@@ -1,206 +1,206 @@
 ---
-created: '2019-06-05T11:45:18.661659Z'
+created: '2020-02-26T19:54:43.036627Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '121caa876de75ec51bf72ed4c852cd75'
+  hash: "121caa876de75ec51bf72ed4c852cd75"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: 'a5af2577d4caca8f983657c5d1919e14'
+  hash: "a5af2577d4caca8f983657c5d1919e14"
   component:
     system*
       exception*
         stacktrace*
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (path:**/release_webhook.py v-group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame*
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame*
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame*
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_towards_crash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_towards_crash.pysnap
index ac7cd66036..56a2ecd635 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_towards_crash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_grouping_enhancer_towards_crash.pysnap
@@ -1,206 +1,206 @@
 ---
-created: '2019-06-05T11:45:18.682125Z'
+created: '2020-02-26T19:54:43.064225Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (non app frame)
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame (non app frame)
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value*
-          u'"\'user\'"'
+          "\"'user'\""
 --------------------------------------------------------------------------
 system:
-  hash: '90888e813b09fa25061af2883c0fb9bd'
+  hash: "90888e813b09fa25061af2883c0fb9bd"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'django.core.handlers.base'
+              "django.core.handlers.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'get_response'
+              "get_response"
             context-line*
-              u'response = wrapped_callback(request, *callback_args, **callback_kwargs)'
+              "response = wrapped_callback(request, *callback_args, **callback_kwargs)"
           frame*
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'view'
+              "view"
             context-line*
-              u'return self.dispatch(request, *args, **kwargs)'
+              "return self.dispatch(request, *args, **kwargs)"
           frame*
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'_wrapper'
+              "_wrapper"
             context-line*
-              u'return bound_func(*args, **kwargs)'
+              "return bound_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.decorators.csrf'
+              "django.views.decorators.csrf"
             filename (module takes precedence)
-              u'csrf.py'
+              "csrf.py"
             function*
-              u'wrapped_view'
+              "wrapped_view"
             context-line*
-              u'return view_func(*args, **kwargs)'
+              "return view_func(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.decorators'
+              "django.utils.decorators"
             filename (module takes precedence)
-              u'decorators.py'
+              "decorators.py"
             function*
-              u'bound_func'
+              "bound_func"
             context-line*
-              u'return func(self, *args2, **kwargs2)'
+              "return func(self, *args2, **kwargs2)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)'
+              "return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.views.generic.base'
+              "django.views.generic.base"
             filename (module takes precedence)
-              u'base.py'
+              "base.py"
             function*
-              u'dispatch'
+              "dispatch"
             context-line*
-              u'return handler(request, *args, **kwargs)'
+              "return handler(request, *args, **kwargs)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry.web.frontend.release_webhook'
+              "sentry.web.frontend.release_webhook"
             filename (module takes precedence)
-              u'release_webhook.py'
+              "release_webhook.py"
             function*
-              u'post'
+              "post"
             context-line*
-              u'hook.handle(request)'
+              "hook.handle(request)"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'sentry_plugins.heroku.plugin'
+              "sentry_plugins.heroku.plugin"
             filename (module takes precedence)
-              u'plugin.py'
+              "plugin.py"
             function*
-              u'handle'
+              "handle"
             context-line*
-              u"email = request.POST['user']"
+              "email = request.POST['user']"
           frame (ignored by grouping enhancement rule (function:wrapped_view ^-group -group))
             module*
-              u'django.utils.datastructures'
+              "django.utils.datastructures"
             filename (module takes precedence)
-              u'datastructures.py'
+              "datastructures.py"
             function*
-              u'__getitem__'
+              "__getitem__"
             context-line*
-              u'raise MultiValueDictKeyError(repr(key))'
+              "raise MultiValueDictKeyError(repr(key))"
         type*
-          u'MultiValueDictKeyError'
+          "MultiValueDictKeyError"
         value (ignored because stacktrace takes precedence)
-          u'"\'user\'"'
+          "\"'user'\""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_http_error.pysnap
index 0c7a9dfd8d..ac70755a54 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_http_error.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/python_http_error.pysnap
@@ -1,87 +1,87 @@
 ---
-created: '2019-05-08T07:33:32.167071Z'
+created: '2020-02-26T19:54:43.084483Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'd59239f5aad3304d60beb1fde3369b78'
+  hash: "d59239f5aad3304d60beb1fde3369b78"
   component:
     app*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
             context-line*
-              u'resp.raise_for_status()'
+              "resp.raise_for_status()"
           frame (non app frame)
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
             context-line*
-              u'raise HTTPError(http_error_msg, response=self)'
+              "raise HTTPError(http_error_msg, response=self)"
         type*
-          u'HTTPError'
+          "HTTPError"
         value (ignored because stacktrace takes precedence)
-          u'<int> Client Error: Too Many Requests for url: <url>'
+          "<int> Client Error: Too Many Requests for url: <url>"
 --------------------------------------------------------------------------
 default:
-  hash: None
+  hash: null
   component:
     default (exception of app takes precedence)
       message (exception of app takes precedence)
-        u'%s.process_error'
+        "%s.process_error"
 --------------------------------------------------------------------------
 system:
-  hash: '133db3f366b1327dab4e661f66dfb961'
+  hash: "133db3f366b1327dab4e661f66dfb961"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'sentry.utils.safe'
+              "sentry.utils.safe"
             filename (module takes precedence)
-              u'safe.py'
+              "safe.py"
             function*
-              u'safe_execute'
+              "safe_execute"
             context-line*
-              u'result = func(*args, **kwargs)'
+              "result = func(*args, **kwargs)"
           frame*
             module*
-              u'sentry.integrations.slack.notify_action'
+              "sentry.integrations.slack.notify_action"
             filename (module takes precedence)
-              u'notify_action.py'
+              "notify_action.py"
             function*
-              u'send_notification'
+              "send_notification"
             context-line*
-              u'resp.raise_for_status()'
+              "resp.raise_for_status()"
           frame*
             module*
-              u'requests.models'
+              "requests.models"
             filename (module takes precedence)
-              u'models.py'
+              "models.py"
             function*
-              u'raise_for_status'
+              "raise_for_status"
             context-line*
-              u'raise HTTPError(http_error_msg, response=self)'
+              "raise HTTPError(http_error_msg, response=self)"
         type*
-          u'HTTPError'
+          "HTTPError"
         value (ignored because stacktrace takes precedence)
-          u'<int> Client Error: Too Many Requests for url: <url>'
+          "<int> Client Error: Too Many Requests for url: <url>"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/react_native.pysnap
index c9ed099570..fba241bf98 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/react_native.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/react_native.pysnap
@@ -1,410 +1,410 @@
 ---
-created: '2019-05-08T22:36:44.224971Z'
+created: '2020-02-26T19:54:43.138153Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '73470e545e51eea9cff8a6c006f68f57'
+  hash: "73470e545e51eea9cff8a6c006f68f57"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'value'
+              "value"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._inCall--;'
+              "this._inCall--;"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'_inCall'
+              "_inCall"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame (non app frame)
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._lastFlush = new Date().getTime();'
+              "this._lastFlush = new Date().getTime();"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_lastFlush'
+              "_lastFlush"
             context-line*
-              u'_receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "_receiveRootNodeIDEvent(index, eventTopLevelType, i);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             context-line*
-              u'batchedUpdates(function() {'
+              "batchedUpdates(function() {"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'batchedUpdates'
+              "batchedUpdates"
             context-line*
-              u'return _batchedUpdates(fn, bookkeeping);'
+              "return _batchedUpdates(fn, bookkeeping);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             context-line*
-              u'return fn(a);'
+              "return fn(a);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             context-line*
-              u'Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
           frame (non app frame)
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'D'
+              "D"
             context-line*
-              u'executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'executeDispatch'
+              "executeDispatch"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "var funcArgs = Array.prototype.slice.call(arguments, 3);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'arguments'
+              "arguments"
             context-line*
-              u'touchableHandleResponderRelease: function(e) {'
+              "touchableHandleResponderRelease: function(e) {"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveSignal'
+              "_receiveSignal"
             context-line*
-              u'this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "this._performSideEffectsForTransition(curState, nextState, signal, e);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             context-line*
-              u'this.touchableHandlePress(e);'
+              "this.touchableHandlePress(e);"
           frame (non app frame)
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'this.props.onPress && this.props.onPress(e);'
+              "this.props.onPress && this.props.onPress(e);"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'onPress'
+              "onPress"
             context-line*
-              u'<Button'
+              "<Button"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'Button'
+              "Button"
             context-line*
-              u'<Button'
+              "<Button"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
 --------------------------------------------------------------------------
 system:
-  hash: 'ecd413627f0d90a5a25cb28d1ba9c39f'
+  hash: "ecd413627f0d90a5a25cb28d1ba9c39f"
   component:
     system*
       exception*
         stacktrace*
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'value'
+              "value"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._inCall--;'
+              "this._inCall--;"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'_inCall'
+              "_inCall"
             context-line*
-              u'return this.flushedQueue();'
+              "return this.flushedQueue();"
           frame*
             module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
+              "react-native/Libraries/BatchedBridge/MessageQueue"
             filename (module takes precedence)
-              u'messagequeue.js'
+              "messagequeue.js"
             function (ignored because sourcemap used and context line available)
-              u'flushedQueue'
+              "flushedQueue"
             context-line*
-              u'this._lastFlush = new Date().getTime();'
+              "this._lastFlush = new Date().getTime();"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_lastFlush'
+              "_lastFlush"
             context-line*
-              u'_receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+              "_receiveRootNodeIDEvent(index, eventTopLevelType, i);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveRootNodeIDEvent'
+              "_receiveRootNodeIDEvent"
             context-line*
-              u'batchedUpdates(function() {'
+              "batchedUpdates(function() {"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'batchedUpdates'
+              "batchedUpdates"
             context-line*
-              u'return _batchedUpdates(fn, bookkeeping);'
+              "return _batchedUpdates(fn, bookkeeping);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'_batchedUpdates'
+              "_batchedUpdates"
             context-line*
-              u'return fn(a);'
+              "return fn(a);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'fn'
+              "fn"
             context-line*
-              u'(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+              "(forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'forEachAccumulated'
+              "forEachAccumulated"
             context-line*
-              u'Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+              "Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);"
           frame*
             function*
-              u'[native code] forEach'
+              "[native code] forEach"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'D'
+              "D"
             context-line*
-              u'executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+              "executeDispatch(e, !1, dispatchListeners, dispatchInstances);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'executeDispatch'
+              "executeDispatch"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+              "ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError("
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'invokeGuardedCallbackAndCatchFirstError'
+              "invokeGuardedCallbackAndCatchFirstError"
             context-line*
-              u'ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+              "ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+              "invokeGuardedCallback.apply(ReactErrorUtils, arguments);"
           frame*
             module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+              "react-native/Libraries/Renderer/ReactNativeRenderer-prod"
             filename (module takes precedence)
-              u'reactnativerenderer-prod.js'
+              "reactnativerenderer-prod.js"
             function (ignored because sourcemap used and context line available)
-              u'apply'
+              "apply"
             context-line*
-              u'var funcArgs = Array.prototype.slice.call(arguments, 3);'
+              "var funcArgs = Array.prototype.slice.call(arguments, 3);"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'arguments'
+              "arguments"
             context-line*
-              u'touchableHandleResponderRelease: function(e) {'
+              "touchableHandleResponderRelease: function(e) {"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_receiveSignal'
+              "_receiveSignal"
             context-line*
-              u'this._performSideEffectsForTransition(curState, nextState, signal, e);'
+              "this._performSideEffectsForTransition(curState, nextState, signal, e);"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
+              "react-native/Libraries/Components/Touchable/Touchable"
             filename (module takes precedence)
-              u'touchable.js'
+              "touchable.js"
             function (ignored because sourcemap used and context line available)
-              u'_performSideEffectsForTransition'
+              "_performSideEffectsForTransition"
             context-line*
-              u'this.touchableHandlePress(e);'
+              "this.touchableHandlePress(e);"
           frame*
             module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+              "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android"
             filename (module takes precedence)
-              u'touchablenativefeedback.android.js'
+              "touchablenativefeedback.android.js"
             function (ignored because sourcemap used and context line available)
-              u'this'
+              "this"
             context-line*
-              u'this.props.onPress && this.props.onPress(e);'
+              "this.props.onPress && this.props.onPress(e);"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'onPress'
+              "onPress"
             context-line*
-              u'<Button'
+              "<Button"
           frame*
             module*
-              u'App'
+              "App"
             filename (module takes precedence)
-              u'app.js'
+              "app.js"
             function (ignored because sourcemap used and context line available)
-              u'Button'
+              "Button"
             context-line*
-              u'<Button'
+              "<Button"
         type*
-          u'TypeError'
+          "TypeError"
         value (ignored because stacktrace takes precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+          "undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_cocoa.pysnap
index 508240b676..7ceb266638 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_cocoa.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_cocoa.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-05-08T07:29:42.727072Z'
+created: '2020-02-26T19:54:43.168648Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb416f98479efa56a77c524602dc9979'
+  hash: "eb416f98479efa56a77c524602dc9979"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame (non app frame)
           filename*
-            u'baz.m'
+            "baz.m"
 --------------------------------------------------------------------------
 system:
-  hash: '1df786c8c266506e1acb6669c8df5154'
+  hash: "1df786c8c266506e1acb6669c8df5154"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'bar.m'
+            "bar.m"
         frame*
           filename*
-            u'baz.m'
+            "baz.m"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_collapse_recursion.pysnap
index cb5390e92c..2bc6042e13 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_collapse_recursion.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_collapse_recursion.pysnap
@@ -1,114 +1,114 @@
 ---
-created: '2019-05-08T07:29:42.737426Z'
+created: '2020-02-26T19:54:43.190432Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (non app frame)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
 --------------------------------------------------------------------------
 system:
-  hash: '894c3489e2ade384dc107bca6829d134'
+  hash: "894c3489e2ade384dc107bca6829d134"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'main'
+            "main"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'normalFunc'
+            "normalFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame (ignored due to recursion)
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'recurFunc'
+            "recurFunc"
         frame*
           module*
-            u'io.sentry.example.Application'
+            "io.sentry.example.Application"
           filename (module takes precedence)
-            u'application.java'
+            "application.java"
           function*
-            u'throwError'
+            "throwError"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_compute_hashes.pysnap
index 60fe9ef13c..066c72c89f 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-05-08T07:29:42.746009Z'
+created: '2020-02-26T19:54:43.209884Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_discards_seemingly_useless_stack.pysnap
index 9e92eaeb83..0049ca11ab 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_discards_seemingly_useless_stack.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_discards_seemingly_useless_stack.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-05-08T07:29:42.754535Z'
+created: '2020-02-26T19:54:43.229542Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_discard_non_urls.pysnap
index 18a4b823ef..bfbd32535e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_discard_non_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_discard_non_urls.pysnap
@@ -1,22 +1,22 @@
 ---
-created: '2019-05-08T07:29:42.762763Z'
+created: '2020-02-26T19:54:43.247501Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename*
-            u'foo'
+            "foo"
 --------------------------------------------------------------------------
 system:
-  hash: 'acbd18db4cc2f85cedef654fccc4a4d8'
+  hash: "acbd18db4cc2f85cedef654fccc4a4d8"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo'
+            "foo"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_group_different_js_errors.pysnap
index 340c08039d..afab5e888e 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_group_different_js_errors.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_does_not_group_different_js_errors.pysnap
@@ -1,25 +1,25 @@
 ---
-created: '2019-05-08T07:29:42.770977Z'
+created: '2020-02-26T19:54:43.268685Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       stacktrace
         frame (non app frame)
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       stacktrace
         frame
           filename (ignored because frame points to a URL)
-            u'index.js'
+            "index.js"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_enforce_min_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_enforce_min_frames.pysnap
index d46f5358b4..3d6d22f233 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_enforce_min_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_enforce_min_frames.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-07-09T13:22:11.421699Z'
+created: '2020-02-26T19:54:43.353938Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (exception of system takes precedence)
       exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace (discarded because stacktrace only contains 1 frame which is under the configured threshold by grouping enhancement rule (family:native min-frames=2))
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value*
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_excludes_single_frame_urls.pysnap
index 01f2adff52..33c3862f1a 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_excludes_single_frame_urls.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_excludes_single_frame_urls.pysnap
@@ -1,26 +1,26 @@
 ---
-created: '2019-05-08T07:29:42.779313Z'
+created: '2020-02-26T19:54:43.372155Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
 --------------------------------------------------------------------------
 system:
-  hash: 'cd2a9fd0cdaa8cd55ed22b101fc65882'
+  hash: "cd2a9fd0cdaa8cd55ed22b101fc65882"
   component:
     system*
       stacktrace*
         frame*
           module*
-            u'<unknown module>'
+            "<unknown module>"
           filename (ignored because frame points to a URL)
-            u''
+            ""
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_hash_without_system_frames.pysnap
index 6d37131ffb..9263ca9e7c 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_hash_without_system_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_hash_without_system_frames.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-05-08T07:29:42.787707Z'
+created: '2020-02-26T19:54:43.388071Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_ignores_singular_anonymous_frame.pysnap
index 8fb716263a..ae8928c291 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_ignores_singular_anonymous_frame.pysnap
@@ -1,42 +1,42 @@
 ---
-created: '2019-11-01T10:06:08.174490Z'
+created: '2020-02-26T19:54:43.404771Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (stacktrace of system takes precedence)
       stacktrace
         frame (non app frame)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame (non app frame)
           filename*
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame (non app frame)
           filename*
-            u'dojo.js'
+            "dojo.js"
           function* (trimmed javascript function)
-            u'_createDocumentViewModel'
+            "_createDocumentViewModel"
 --------------------------------------------------------------------------
 system:
-  hash: 'c5da56c71b31f34c5880d734cbc8f5bb'
+  hash: "c5da56c71b31f34c5880d734cbc8f5bb"
   component:
     system*
       stacktrace*
         frame (ignored low quality javascript frame)
           filename (anonymous filename discarded)
-            u'<anonymous>'
+            "<anonymous>"
         frame*
           filename*
-            u'dojo.js'
+            "dojo.js"
           function*
-            u'c'
+            "c"
         frame*
           filename*
-            u'dojo.js'
+            "dojo.js"
           function* (trimmed javascript function)
-            u'_createDocumentViewModel'
+            "_createDocumentViewModel"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust.pysnap
index 39b1761cec..cad2bb5a11 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-06-05T11:45:18.857944Z'
+created: '2020-02-26T19:54:43.488340Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
+  hash: "e0b4eea234ff891472cb927c00153bbe"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame*
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame*
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust2.pysnap
index 96e9c1f865..7b246c8d66 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_rust2.pysnap
@@ -1,68 +1,68 @@
 ---
-created: '2019-06-05T11:45:18.906457Z'
+created: '2020-02-26T19:54:43.566288Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
+  hash: "eb87c1031dba55b67df86fb9fff59dc6"
   component:
     app*
       exception*
         stacktrace*
           frame (non app frame)
             function*
-              u'_main'
+              "_main"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (non app frame)
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (non app frame)
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
 --------------------------------------------------------------------------
 system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
+  hash: "9b33b65a645c66239cafcd276fcd0659"
   component:
     system*
       exception*
         stacktrace*
           frame*
             function*
-              u'_main'
+              "_main"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start_internal'
+              "std::rt::lang_start_internal"
           frame (ignored by grouping enhancement rule (family:native function:__* -group))
             function*
-              u'___rust_maybe_catch_panic'
+              "___rust_maybe_catch_panic"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::panicking::try::do_call'
+              "std::panicking::try::do_call"
           frame* (marked out of app by grouping enhancement rule (family:native function:std::* -app))
             function*
-              u'std::rt::lang_start::{{closure}}'
+              "std::rt::lang_start::{{closure}}"
           frame* (marked in-app by grouping enhancement rule (family:native function:log_demo::* +app))
             function*
-              u'log_demo::main'
+              "log_demo::main"
           frame (ignored by grouping enhancement rule (family:native function:*::__* -group))
             function*
-              u'log::__private_api_log'
+              "log::__private_api_log"
         type*
-          u'log_demo'
+          "log_demo"
         value (ignored because stacktrace takes precedence)
-          u'Holy shit everything is on fire!'
+          "Holy shit everything is on fire!"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_with_minimal_app_frames.pysnap
index 7edfa161a2..ee50be430d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_with_minimal_app_frames.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/stacktrace_with_minimal_app_frames.pysnap
@@ -1,88 +1,88 @@
 ---
-created: '2019-05-08T07:29:42.883513Z'
+created: '2020-02-26T19:54:43.585864Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '1effb24729ae4c43efa36b460511136a'
+  hash: "1effb24729ae4c43efa36b460511136a"
   component:
     app*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (non app frame)
           filename*
-            u'bar.py'
+            "bar.py"
 --------------------------------------------------------------------------
 system:
-  hash: '659ad79e2e70c822d30a53d7d889529e'
+  hash: "659ad79e2e70c822d30a53d7d889529e"
   component:
     system*
       stacktrace*
         frame*
           filename*
-            u'foo.py'
+            "foo.py"
         frame*
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
         frame (ignored due to recursion)
           filename*
-            u'bar.py'
+            "bar.py"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/template_compute_hashes.pysnap
index bb82589faa..bdbdc9258d 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/template_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/template_compute_hashes.pysnap
@@ -1,14 +1,14 @@
 ---
-created: '2019-05-08T07:29:42.889892Z'
+created: '2020-02-26T19:54:43.597288Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 default:
-  hash: '826f66ef602835f68030c04c634df320'
+  hash: "826f66ef602835f68030c04c634df320"
   component:
     default*
       template*
         filename*
-          u'foo.html'
+          "foo.html"
         context-line*
-          u'hello world'
+          "hello world"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_compute_hashes.pysnap
index 7e7d2501bd..97752704c3 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_compute_hashes.pysnap
@@ -1,28 +1,28 @@
 ---
-created: '2019-04-17T20:02:29.122896Z'
+created: '2020-02-26T19:54:43.612839Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app (threads of system takes precedence)
       threads (ignored because this variant does not have a contributing stacktrace, but the system variant does)
         stacktrace
           frame (non app frame)
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
 --------------------------------------------------------------------------
 system:
-  hash: '1a11687556cf74559f0ae90b1c87e2fd'
+  hash: "1a11687556cf74559f0ae90b1c87e2fd"
   component:
     system*
       threads*
         stacktrace*
           frame*
             filename*
-              u'baz.c'
+              "baz.c"
             function*
-              u'main'
+              "main"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_no_hash.pysnap
index 2dd67d9889..5f4662f984 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_no_hash.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/threads_no_hash.pysnap
@@ -1,19 +1,19 @@
 ---
-created: '2019-05-08T07:29:42.906320Z'
+created: '2020-02-26T19:54:43.629205Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: None
+  hash: null
   component:
     app
       threads (ignored because contains 2 threads)
 --------------------------------------------------------------------------
 fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
+  hash: "d41d8cd98f00b204e9800998ecf8427e"
 --------------------------------------------------------------------------
 system:
-  hash: None
+  hash: null
   component:
     system
       threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/test_variants.py b/tests/sentry/grouping/test_variants.py
index 2a1e75ac01..e5f583d82b 100644
--- a/tests/sentry/grouping/test_variants.py
+++ b/tests/sentry/grouping/test_variants.py
@@ -33,9 +33,9 @@ def dump_variant(variant, lines=None, indent=0):
             if isinstance(value, GroupingComponent):
                 _dump_component(value, indent + 1)
             else:
-                lines.append("  " * (indent + 1) + repr(value))
+                lines.append("%s%s" % ("  " * (indent + 1), json.dumps(value)))
 
-    lines.append("%shash: %r" % ("  " * indent, variant.get_hash()))
+    lines.append("%shash: %s" % ("  " * indent, json.dumps(variant.get_hash())))
     for (key, value) in sorted(variant.__dict__.items()):
         if isinstance(value, GroupingComponent):
             lines.append("%s%s:" % ("  " * indent, key))
@@ -44,7 +44,7 @@ def dump_variant(variant, lines=None, indent=0):
             # We do not want to dump the config
             continue
         else:
-            lines.append("%s%s: %r" % ("  " * indent, key, value))
+            lines.append("%s%s: %s" % ("  " * indent, key, json.dumps(value)))
 
     return lines
 
