commit 8d1d66ccf06851d76e2754c238b75b387a965be5
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 26 16:19:55 2013 -0800

    Update users pages and tests

diff --git a/src/sentry/templates/sentry/get_started.html b/src/sentry/templates/sentry/get_started.html
index 0c79088f1a..f4c83947d5 100644
--- a/src/sentry/templates/sentry/get_started.html
+++ b/src/sentry/templates/sentry/get_started.html
@@ -7,7 +7,7 @@
 {% block breadcrumb %}
     {{ block.super }}
     <li class="divider"></li>
-    <li><a href="{% url sentry-get-started project.slug %}">{% trans "Getting Started" %}</a></li>
+    <li><a href="{% url sentry-get-started project.team.slug project.slug %}">{% trans "Getting Started" %}</a></li>
 {% endblock %}
 
 {% block bodyclass %}{% endblock %}
diff --git a/src/sentry/templates/sentry/users/list.html b/src/sentry/templates/sentry/users/list.html
index bde32c7ecc..974096e607 100644
--- a/src/sentry/templates/sentry/users/list.html
+++ b/src/sentry/templates/sentry/users/list.html
@@ -1,17 +1,17 @@
-{% extends "sentry/layout.html" %}
+{% extends "sentry/bases/team.html" %}
 
 {% load i18n %}
 {% load sentry_helpers %}
 {% load sentry_plugins %}
 
-{% block title %}Users | {{ project.name }} | {{ block.super }}{% endblock %}
+{% block title %}Users | {{ team.name }} | {{ block.super }}{% endblock %}
 
 {% block bodyclass %}{% endblock %}
 
 {% block breadcrumb %}
     {{ block.super }}
     <li class="divider"></li>
-    <li><a href="{% url sentry-users project.slug %}">{% trans "Users" %}</a></li>
+    <li><a href="{% url sentry-users team.slug %}">{% trans "Users" %}</a></li>
 {% endblock %}
 
 {% block main %}
@@ -48,7 +48,7 @@
                 <tbody>
                     {% for tuser in tuser_list.paginator.objects %}
                         <tr>
-                            <td><a href="{% url sentry-user-details project.slug tuser.id %}">{% if tuser.email %}{{ tuser.email }}{% else %}{{ tuser.ident }}{% endif %}</a></td>
+                            <td><a href="{% url sentry-user-details team.slug tuser.id %}">{% if tuser.email %}{{ tuser.email }}{% else %}{{ tuser.ident }}{% endif %}</a></td>
                             <td style="text-align:center">{{ tuser.last_seen|timesince }}</td>
                             <td style="text-align:center">{{ tuser.num_events|small_count }}</td>
                         </tr>
diff --git a/src/sentry/web/frontend/projects.py b/src/sentry/web/frontend/projects.py
index 282b07ce7d..c1d510715d 100644
--- a/src/sentry/web/frontend/projects.py
+++ b/src/sentry/web/frontend/projects.py
@@ -28,7 +28,7 @@ from sentry.web.helpers import (render_to_response, get_project_list,
 
 @login_required
 @has_access
-def get_started(request, project):
+def get_started(request, team, project):
     return render_to_response('sentry/get_started.html', {
         'project': project,
         'team': project.team,
diff --git a/src/sentry/web/frontend/users.py b/src/sentry/web/frontend/users.py
index 64a9f26ebb..5726d7fcf6 100644
--- a/src/sentry/web/frontend/users.py
+++ b/src/sentry/web/frontend/users.py
@@ -24,7 +24,8 @@ def user_list(request, team):
     if sort not in SORT_OPTIONS:
         sort = DEFAULT_SORT_OPTION
 
-    user_list = TrackedUser.objects.filter(team=team)
+    # TODO: TrackedUser needs to be team-bound before we can launch it
+    user_list = TrackedUser.objects.filter(project__team=team)
 
     if sort == 'recent':
         user_list = user_list.order_by('-last_seen')
@@ -48,7 +49,7 @@ def user_list(request, team):
 @has_access
 @login_required
 def user_details(request, team, user_id):
-    user = TrackedUser.objects.get(team=team, id=user_id)
+    user = TrackedUser.objects.get(project__team=team, id=user_id)
 
     event_list = user.groups.all()
 
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index 23c838cd30..8963aeaebd 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -9,7 +9,7 @@ from mock_django.managers import ManagerMock
 from django.core.urlresolvers import reverse
 
 from sentry.constants import MEMBER_OWNER
-from sentry.models import Project, ProjectKey, Group
+from sentry.models import Project, ProjectKey
 from sentry.testutils import TestCase, fixture, before
 
 logger = logging.getLogger(__name__)
@@ -196,7 +196,7 @@ class DashboardTest(TestCase):
 class GetStartedTest(TestCase):
     @fixture
     def path(self):
-        return reverse('sentry-get-started', args=[self.project.id])
+        return reverse('sentry-get-started', args=[self.team.slug, self.project.slug])
 
     def test_requires_authentication(self):
         self.assertRequiresAuthentication(self.path)
@@ -206,6 +206,8 @@ class GetStartedTest(TestCase):
 
         resp = self.client.get(self.path)
         assert resp.status_code == 200
-        self.assertTemplateUsed('sentry/get_started.html')
-        assert 'project' in resp.context
+        self.assertTemplateUsed(resp, 'sentry/get_started.html')
         assert resp.context['project'] == self.project
+        assert resp.context['team'] == self.team
+        assert resp.context['SECTION'] == 'team'
+        assert resp.context['SUBSECTION'] == 'projects'
diff --git a/tests/sentry/web/frontend/users/tests.py b/tests/sentry/web/frontend/users/tests.py
index f7ae9c1b56..09bc60dd8b 100644
--- a/tests/sentry/web/frontend/users/tests.py
+++ b/tests/sentry/web/frontend/users/tests.py
@@ -6,6 +6,7 @@ import logging
 
 from django.core.urlresolvers import reverse
 
+from sentry.models import TrackedUser
 from sentry.testutils import TestCase, fixture
 
 logger = logging.getLogger(__name__)
@@ -14,15 +15,65 @@ logger = logging.getLogger(__name__)
 class UserListTest(TestCase):
     @fixture
     def path(self):
-        return reverse('sentry-users', args=[self.project.slug])
+        return reverse('sentry-users', args=[self.team.slug])
 
     def test_missing_permission(self):
         resp = self.client.get(self.path)
         assert resp.status_code == 302
 
+    def test_invalid_team_slug(self):
+        resp = self.client.get(reverse('sentry-users', args=['a']))
+        assert resp.status_code == 302
+
+    def test_does_render(self):
+        self.login_as(self.user)
+
+        tuser = TrackedUser.objects.create(
+            project=self.project,
+            ident='foo',
+            email='foo@example.com',
+        )
+
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed('sentry/users/list.html')
+        assert resp.context['team'] == self.team
+        assert resp.context['SECTION'] == 'users'
+        assert list(resp.context['tuser_list']) == [tuser]
+
+
+class UserDetailsTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-user-details', args=[self.team.slug, self.tuser.id])
+
+    @fixture
+    def tuser(self):
+        return TrackedUser.objects.create(
+            project=self.project,
+            ident='foo',
+            email='foo@example.com',
+        )
+
+    def test_missing_permission(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 302
+
+    def test_invalid_team_slug(self):
+        resp = self.client.get(reverse('sentry-user-details', args=['a', self.tuser.id]))
+        assert resp.status_code == 302
+
+    def test_invalid_tuser_id(self):
+        resp = self.client.get(reverse('sentry-user-details', args=[self.team.slug, 0]))
+        assert resp.status_code == 302
+
     def test_does_load(self):
         self.login_as(self.user)
 
         resp = self.client.get(self.path)
         self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed('sentry/users/list.html')
+        assert resp.status_code == 200
+        self.assertTemplateUsed('sentry/users/details.html')
+        assert resp.context['team'] == self.team
+        assert resp.context['tuser'] == self.tuser
+        assert resp.context['SECTION'] == 'users'
