commit a060367b8b4f13cd662025e5d3800c6adae068df
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Nov 26 13:17:34 2015 +0100

    Marked translations in groupDetails

diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 0c2a313373..d7e2086fdc 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -7,6 +7,7 @@ import IndicatorStore from '../../stores/indicatorStore';
 import MenuItem from '../../components/menuItem';
 import LinkWithConfirmation from '../../components/linkWithConfirmation';
 import TooltipMixin from '../../mixins/tooltip';
+import {t} from '../../locale';
 
 const Snooze = {
   // all values in minutes
@@ -28,7 +29,7 @@ const GroupActions = React.createClass({
     let group = this.getGroup();
     let project = this.getProject();
     let org = this.getOrganization();
-    let loadingIndicator = IndicatorStore.add('Delete event..');
+    let loadingIndicator = IndicatorStore.add(t('Delete event..'));
 
     api.bulkDelete({
       orgId: org.slug,
@@ -47,7 +48,7 @@ const GroupActions = React.createClass({
     let group = this.getGroup();
     let project = this.getProject();
     let org = this.getOrganization();
-    let loadingIndicator = IndicatorStore.add('Saving changes..');
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
     api.bulkUpdate({
       orgId: org.slug,
@@ -100,7 +101,7 @@ const GroupActions = React.createClass({
           {group.status === 'resolved' ? (
             group.statusDetails.autoResolved ?
              <a className={resolveClassName + ' tip'}
-                 title="This event is resolved due to the Auto Resolve configuration for this project">
+                 title={t('This event is resolved due to the Auto Resolve configuration for this project')}>
                 <span className="icon-checkmark" />
               </a>
             :
@@ -124,13 +125,13 @@ const GroupActions = React.createClass({
               <MenuItem noAnchor={true}>
                 {hasRelease ?
                   <a onClick={this.onUpdate.bind(this, {status: 'resolvedInNextRelease'})}>
-                    <strong>Resolved in next release</strong>
-                    <div className="help-text">Snooze notifications until this issue reoccurs in a future release.</div>
+                    <strong>{t('Resolved in next release')}</strong>
+                    <div className="help-text">{t('Snooze notifications until this issue reoccurs in a future release.')}</div>
                   </a>
                 :
                   <a className="disabled tip" title="You need to send release data to Sentry in order to use this feature.">
-                    <strong>Resolved in next release</strong>
-                    <div className="help-text">Snooze notifications until this issue reoccurs in a future release.</div>
+                    <strong>{t('Resolved in next release.')}</strong>
+                    <div className="help-text">{t('Snooze notifications until this issue reoccurs in a future release.')}</div>
                   </a>
                 }
               </MenuItem>
@@ -142,7 +143,7 @@ const GroupActions = React.createClass({
             <a className={snoozeClassName}
                title="Remove Snooze"
                onClick={this.onUpdate.bind(this, {status: 'unresolved'})}>
-              Snooze
+             {t('Snooze')}
             </a>
           :
             <DropdownLink
@@ -150,23 +151,23 @@ const GroupActions = React.createClass({
               className={snoozeClassName}
               title="Snooze">
               <MenuItem noAnchor={true}>
-                <a onClick={this.onSnooze.bind(this, Snooze['30MINUTES'])}>for 30 minutes</a>
+                <a onClick={this.onSnooze.bind(this, Snooze['30MINUTES'])}>{t('for 30 minutes')}</a>
               </MenuItem>
               <MenuItem noAnchor={true}>
-                <a onClick={this.onSnooze.bind(this, Snooze['2HOURS'])}>for 2 hours</a>
+                <a onClick={this.onSnooze.bind(this, Snooze['2HOURS'])}>{t('for 2 hours')}</a>
               </MenuItem>
               <MenuItem noAnchor={true}>
-                <a onClick={this.onSnooze.bind(this, Snooze['24HOURS'])}>for 24 hours</a>
+                <a onClick={this.onSnooze.bind(this, Snooze['24HOURS'])}>{t('for 24 hours')}</a>
               </MenuItem>
               <MenuItem noAnchor={true}>
-                <a onClick={this.onUpdate.bind(this, {status: 'muted'})}>forever</a>
+                <a onClick={this.onUpdate.bind(this, {status: 'muted'})}>{t('forever')}</a>
               </MenuItem>
             </DropdownLink>
           }
         </div>
         <div className="btn-group">
           <a className={bookmarkClassName}
-             title="Bookmark"
+             title={t('Bookmark')}
              onClick={this.onToggleBookmark}>
             <span className="icon-bookmark" />
           </a>
@@ -174,8 +175,8 @@ const GroupActions = React.createClass({
         <div className="btn-group">
           <LinkWithConfirmation
                className="group-remove btn btn-default btn-sm"
-               title="Delete"
-               message="Deleting this event is permanent. Are you sure you wish to continue?"
+               title={t('Delete')}
+               message={t('Deleting this event is permanent. Are you sure you wish to continue?')}
                onConfirm={this.onDelete}>
             <span className="icon-trash"></span>
           </LinkWithConfirmation>
@@ -184,7 +185,7 @@ const GroupActions = React.createClass({
           <div className="btn-group more">
             <DropdownLink
                 className="btn btn-default btn-sm"
-                title="More">
+                title={t('More')}>
               {group.pluginActions.map((action, actionIdx) => {
                 return (
                   <MenuItem key={actionIdx} href={action[1]}>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
index 73a82a229e..1a715f3a23 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import PropTypes from '../../proptypes';
 import DateTime from '../../components/dateTime';
 import FileSize from '../../components/fileSize';
+import {t} from '../../locale';
 
 let GroupEventToolbar  = React.createClass({
   propTypes: {
@@ -24,7 +25,7 @@ let GroupEventToolbar  = React.createClass({
             key="oldest"
             to={`/${orgId}/${projectId}/group/${groupId}/events/oldest/`}
             className="btn btn-default"
-            title="Oldest">
+            title={t('Oldest')}>
             <span className="icon-skip-back"></span>
         </Link>
       :
@@ -35,26 +36,26 @@ let GroupEventToolbar  = React.createClass({
         <Link
             key="prev"
             to={`/${orgId}/${projectId}/group/${groupId}/events/${evt.previousEventID}/`}
-            className="btn btn-default">Older</Link>
+            className="btn btn-default">{t('Older')}</Link>
       :
         <a key="prev"
-           className="btn btn-default disabled">Older</a>
+           className="btn btn-default disabled">{t('Older')}</a>
       ),
       (evt.nextEventID ?
         <Link
             key="next"
             to={`/${orgId}/${projectId}/group/${groupId}/events/${evt.nextEventID}/`}
-            className="btn btn-default">Newer</Link>
+            className="btn btn-default">{t('Newer')}</Link>
       :
         <a key="next"
-           className="btn btn-default disabled">Newer</a>
+           className="btn btn-default disabled">{t('Newer')}</a>
       ),
       (evt.nextEventID ?
         <Link
           key="latest"
           to={`/${orgId}/${projectId}/group/${groupId}/events/latest/`}
           className="btn btn-default"
-          title="Newest">
+          title={t('Newest')}>
           <span className="icon-skip-forward"></span>
         </Link>
       :
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index 4dd5c63fa2..3816682b01 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -9,6 +9,7 @@ import GroupSeenBy from './seenBy';
 import IndicatorStore from '../../stores/indicatorStore';
 import ListLink from '../../components/listLink';
 import ProjectState from '../../mixins/projectState';
+import {t} from '../../locale';
 
 const GroupHeader = React.createClass({
   propTypes: {
@@ -28,7 +29,7 @@ const GroupHeader = React.createClass({
     let group = this.props.group;
     let project = this.getProject();
     let org = this.getOrganization();
-    let loadingIndicator = IndicatorStore.add('Saving changes..');
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
     api.bulkUpdate({
       orgId: org.slug,
@@ -53,7 +54,7 @@ const GroupHeader = React.createClass({
     let group = this.props.group;
     let project = this.getProject();
     let org = this.getOrganization();
-    let loadingIndicator = IndicatorStore.add('Saving changes..');
+    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
 
     api.bulkUpdate({
       orgId: org.slug,
@@ -117,17 +118,17 @@ const GroupHeader = React.createClass({
           <div className="col-sm-4 stats">
             <div className="row">
               <div className="col-xs-4 assigned-to">
-                <h6 className="nav-header">Assigned</h6>
+                <h6 className="nav-header">{t('Assigned')}</h6>
                 <AssigneeSelector id={group.id} />
               </div>
               <div className="col-xs-4 count align-right">
-                <h6 className="nav-header">Events</h6>
+                <h6 className="nav-header">{t('Events')}</h6>
                 <Link to={`/${orgId}/${projectId}/group/${groupId}/events/`}>
                   <Count className="count" value={group.count} />
                 </Link>
               </div>
               <div className="col-xs-4 count align-right">
-                <h6 className="nav-header">Users</h6>
+                <h6 className="nav-header">{t('Users')}</h6>
                 {userCount !== 0 ?
                   <Link to={`/${orgId}/${projectId}/group/${groupId}/tags/user/`}>
                     <Count className="count" value={userCount} />
@@ -144,7 +145,7 @@ const GroupHeader = React.createClass({
         <div className="pull-right">
           <div className="group-privacy">
             <a onClick={this.onShare}>
-              <span className="icon" /> Share this event
+              <span className="icon" /> {t('Share this event')}
             </a>
           </div>
         </div>
@@ -156,21 +157,21 @@ const GroupHeader = React.createClass({
             // Because react-router 1.0 removes router.isActive(route)
             return pathname === rootGroupPath || /events\/\w+\/$/.test(pathname);
           }.bind(this)}>
-            Details
+            {t('Details')}
           </ListLink>
           <ListLink to={`/${orgId}/${projectId}/group/${groupId}/activity/`}>
-            Comments <span className="badge animated">{group.numComments}</span>
+            {t('Comments')} <span className="badge animated">{group.numComments}</span>
           </ListLink>
           {features.has('user-reports') &&
             <ListLink to={`/${orgId}/${projectId}/group/${groupId}/reports/`}>
-              User Reports <span className="badge animated">{group.userReportCount}</span>
+              {t('User Reports')} <span className="badge animated">{group.userReportCount}</span>
             </ListLink>
           }
           <ListLink to={`/${orgId}/${projectId}/group/${groupId}/tags/`}>
-            Tags
+            {t('Tags')}
           </ListLink>
           <ListLink to={`/${orgId}/${projectId}/group/${groupId}/events/`}>
-            Related Events
+            {t('Related Events')}
           </ListLink>
         </ul>
       </div>
