commit 3cc37bbb13fa1dd0b456456cf18e2508b1e7c6b3
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jun 6 10:20:40 2016 -0700

    Update docs for `run {worker,cron}` (#3420)

diff --git a/docs/faq.rst b/docs/faq.rst
index 686db02cbc..1c95e2f9a6 100644
--- a/docs/faq.rst
+++ b/docs/faq.rst
@@ -39,7 +39,7 @@ Counts on events aren't increasing.
 
     Counts are incremented in bulk asynchronously utilizing the buffer and
     queue subsystems. Check your configuration on those.  Also make sure
-    that you have the celery workers and celery beat running.
+    that you have the workers and cron running.
 
 .. class:: qa
 
diff --git a/docs/installation.rst b/docs/installation.rst
index b8686b13bb..2c474fe0de 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -111,25 +111,35 @@ via ``sentry``, and get something like the following:
 
     Sentry is cross-platform crash reporting built with love.
 
+    The configuration file is looked up in the `~/.sentry` config directory but this can
+    be overridden with the `SENTRY_CONF` environment variable or be explicitly provided
+    through the `--config` parameter.
+
   Options:
     --config PATH  Path to configuration files.
     --version      Show the version and exit.
     --help         Show this message and exit.
 
   Commands:
-    celery      Start background workers.
+    celery      DEPRECATED see `sentry run` instead.
     cleanup     Delete a portion of trailing data based on...
     config      Manage runtime config options.
     createuser  Create a new user.
-    devserver   Start a light Web server for development.
+    devserver   Starts a lightweight web server for...
     django      Execute Django subcommands.
+    dsym        Manage system symbols in Sentry.
     export      Exports core metadata for the Sentry...
+    files       Manage files from filestore.
     help        Show this message and exit.
     import      Imports data from a Sentry export.
     init        Initialize new configuration directory.
+    plugins     Manage Sentry plugins.
+    queues      Manage Sentry queues.
     repair      Attempt to repair any invalid data.
+    run         Run a service.
     shell       Run a Python interactive interpreter.
-    start       Start running a service.
+    start       DEPRECATED see `sentry run` instead.
+    tsdb        Tools for interacting with the time series...
     upgrade     Perform any pending database migrations and...
 
 
@@ -316,7 +326,7 @@ in addition to the web service workers:
 
 ::
 
-  SENTRY_CONF=/etc/sentry sentry celery worker
+  SENTRY_CONF=/etc/sentry sentry run worker
 
 See :doc:`queue` for more details on configuring workers.
 
@@ -326,11 +336,11 @@ See :doc:`queue` for more details on configuring workers.
 Starting the Cron Process
 -------------------------
 
-Sentry also needs a cron process which is called "celery beat":
+Sentry also needs a cron process:
 
 ::
 
-  SENTRY_CONF=/etc/sentry sentry celery beat
+  SENTRY_CONF=/etc/sentry sentry run cron
 
 It's recommended to only run one of them at the time or you will see
 unnecessary extra tasks being pushed onto the queues but the system will
@@ -418,7 +428,7 @@ go.
   [program:sentry-worker]
   directory=/www/sentry/
   environment=SENTRY_CONF="/etc/sentry"
-  command=/www/sentry/bin/sentry celery worker
+  command=/www/sentry/bin/sentry run worker
   autostart=true
   autorestart=true
   redirect_stderr=true
@@ -428,7 +438,7 @@ go.
   [program:sentry-cron]
   directory=/www/sentry/
   environment=SENTRY_CONF="/etc/sentry"
-  command=/www/sentry/bin/sentry celery beat
+  command=/www/sentry/bin/sentry run cron
   autostart=true
   autorestart=true
   redirect_stderr=true
@@ -477,7 +487,7 @@ To ensure that the services start up on reboots, run the following command: ``sy
   Group=sentry
   WorkingDirectory=/www/sentry
   Environment=SENTRY_CONF=/etc/sentry
-  ExecStart=/www/sentry/bin/sentry celery worker
+  ExecStart=/www/sentry/bin/sentry run worker
 
   [Install]
   WantedBy=multi-user.target
@@ -496,7 +506,7 @@ To ensure that the services start up on reboots, run the following command: ``sy
   Group=sentry
   WorkingDirectory=/www/sentry
   Environment=SENTRY_CONF=/etc/sentry
-  ExecStart=/www/sentry/bin/sentry celery beat
+  ExecStart=/www/sentry/bin/sentry run cron
 
   [Install]
   WantedBy=multi-user.target
diff --git a/docs/performance.rst b/docs/performance.rst
index 888fc086b1..dd24fa315c 100644
--- a/docs/performance.rst
+++ b/docs/performance.rst
@@ -70,10 +70,10 @@ See `uWSGI's official documentation <https://uwsgi-docs.readthedocs.org/en/lates
 for more options that can be configured in ``SENTRY_WEB_OPTIONS``.
 
 
-Celery
-------
+Workers
+-------
 
-Celery can be difficult to tune. Your goal is to maximize the CPU usage
+The workers can be difficult to tune. Your goal is to maximize the CPU usage
 without running out of memory. If you have JavaScript clients this becomes
 more difficult, as currently the sourcemap and context scraping can buffer
 large amounts of memory depending on your configurations and the size of
@@ -81,8 +81,8 @@ your source files.
 
 We can leverage supervisord to do this for us::
 
-	[program:celeryd]
-	command=/www/sentry/bin/sentry celery worker -c 4 -l WARNING -n worker-%(process_num)02d
+	[program:worker]
+	command=/www/sentry/bin/sentry run worker -c 4 -l WARNING -n worker-%(process_num)02d
 	process_name=%(program_name)s_%(process_num)02d
 	numprocs=16
 	numprocs_start=0
@@ -104,14 +104,14 @@ e.g. if you had something like:
 ::
 
     numprocs=1
-    command=sentry celery worker -c 64
+    command=sentry run worker -c 64
 
 change it to:
 
 ::
 
     numprocs=16
-    command=sentry celery worker -c 4
+    command=sentry run worker -c 4
 
 
 Monitoring Memory
diff --git a/docs/queue.rst b/docs/queue.rst
index ac4ea9d9f9..e21b7574d1 100644
--- a/docs/queue.rst
+++ b/docs/queue.rst
@@ -11,19 +11,18 @@ away, and the background workers handle actually saving that data.
 Running a Worker
 ----------------
 
-Workers can be run by using the Sentry CLI. Specifically, you call out to celery,
-which is the worker manager process of the Celery library.
+Workers can be run by using the Sentry CLI.
 
 .. code-block:: bash
 
-    $ sentry celery worker
+    $ sentry run worker
 
 We again recommend running this as a service. Below is an example
 configuration with supervisor::
 
     [program:sentry-worker]
     directory=/www/sentry/
-    command=/www/sentry/bin/sentry celery worker -l WARNING
+    command=/www/sentry/bin/sentry run worker -l WARNING
     autostart=true
     autorestart=true
     redirect_stderr=true
@@ -32,18 +31,18 @@ configuration with supervisor::
 Starting the Cron Process
 -------------------------
 
-Sentry also needs a cron process which is called "celery beat":
+Sentry also needs a cron process:
 
 ::
 
-  SENTRY_CONF=/etc/sentry sentry celery beat
+  SENTRY_CONF=/etc/sentry sentry run cron
 
 We again recommend running this as a service. Below is an example
 configuration with supervisor::
 
     [program:sentry-cron]
     directory=/www/sentry/
-    command=/www/sentry/bin/sentry celery beat
+    command=/www/sentry/bin/sentry run cron
     autostart=true
     autorestart=true
     redirect_stderr=true
diff --git a/docs/upgrading.rst b/docs/upgrading.rst
index 1f115bebd0..170d65d52c 100644
--- a/docs/upgrading.rst
+++ b/docs/upgrading.rst
@@ -61,8 +61,8 @@ code changes will not be reflected until a restart.
 These services include:
 
 - webserver -- ``sentry run web``
-- celery workers -- ``sentry celery worker``
-- celery beat (cron) -- ``sentry celery beat``
+- workers -- ``sentry run worker``
+- cron -- ``sentry run cron``
 
 Version Notes
 -------------
