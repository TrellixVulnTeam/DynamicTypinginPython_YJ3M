commit 9950383c48674634665ab159a77dc12eecbe6cf4
Author: Stephen Cefali <scefali@sentry.io>
Date:   Thu Jul 25 09:26:24 2019 -0700

    Feat/multiple stack trace integrations (#14079)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx b/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx
index e44040f1e5..a7937f63e0 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx
@@ -21,26 +21,37 @@ class OpenInContextLine extends React.Component {
     };
   }
 
-  getUrl() {
-    const {filename, lineNo, components} = this.props;
+  getUrl(component) {
+    const {filename, lineNo} = this.props;
 
     const queryParams = {
       lineNo,
       filename,
     };
-    return addQueryParamsToExistingUrl(components[0].schema.url, queryParams);
+    return addQueryParamsToExistingUrl(component.schema.url, queryParams);
   }
 
+  renderOpenInLink = component => {
+    const url = this.getUrl(component);
+    const {slug} = component.sentryApp;
+    return (
+      <OpenInLink
+        key={component.uuid}
+        data-test-id={`stacktrace-link-${slug}`}
+        href={url}
+      >
+        <OpenInIcon slug={slug} />
+        <OpenInName>{t(`${component.sentryApp.name}`)}</OpenInName>
+      </OpenInLink>
+    );
+  };
+
   render() {
     const {components} = this.props;
-    const url = this.getUrl();
     return (
       <OpenInContainer>
         <span>{t('Open this line in:')}</span>
-        <OpenInLink data-test-id="stacktrace-link" href={url}>
-          <OpenInIcon slug={components[0].sentryApp.slug} />
-          <OpenInName>{t(`${components[0].sentryApp.name}`)}</OpenInName>
-        </OpenInLink>
+        {components.map(this.renderOpenInLink)}
       </OpenInContainer>
     );
   }
@@ -56,6 +67,8 @@ const OpenInContainer = styled('div')`
   background-color: white;
   color: ${p => p.theme.purple2};
   box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
+  overflow: auto;
+  white-space: nowrap;
 `;
 
 const OpenInIcon = styled(SentryAppIcon)`
@@ -63,15 +76,23 @@ const OpenInIcon = styled(SentryAppIcon)`
   height: 15px;
   width: 15px;
   margin-left: ${space(1)};
+  margin-right: 4px;
 `;
 
 const OpenInLink = styled('a')`
   color: ${p => p.theme.gray2};
   cursor: pointer;
+  margin-left: 5px;
+  &:not(:last-child):after {
+    border-right: 1px solid ${p => p.theme.gray1};
+    content: '';
+    height: 60%;
+    margin-top: 15%;
+    margin-left: 10px;
+  }
 `;
 
 const OpenInName = styled('span')`
   font-weight: bold;
   color: ${p => p.theme.gray3};
-  margin-left: 5px;
 `;
diff --git a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
index ca902340a8..c9ad7c2704 100644
--- a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
@@ -24,12 +24,28 @@ describe('OpenInContextLine', function() {
         name: 'Foo',
       },
     },
+    {
+      uuid: 'dd9cc6d7-17f9-4d25-9017-4802821e694f',
+      type: 'stacktrace-link',
+      schema: {
+        url:
+          'http://localhost:4000/something?installationId=25d10adb-7b89-45ac-99b5-edaa714341ba&projectSlug=internal',
+        type: 'stacktrace-link',
+        params: ['project', 'filename', 'lineno'],
+        uri: '/something',
+      },
+      sentryApp: {
+        uuid: '92cd01e6-0ca0-4bfc-8dcd-38fdc8960cf6',
+        name: 'Tesla',
+        slug: 'tesla',
+      },
+    },
   ];
 
   const lineNo = 233;
 
   describe('with stacktrace-link component', function() {
-    it('renders button', function() {
+    it('renders multiple buttons', function() {
       const wrapper = mount(
         <OpenInContextLine filename={filename} lineNo={lineNo} components={components} />,
         TestStubs.routerContext()
@@ -47,8 +63,13 @@ describe('OpenInContextLine', function() {
         filename,
       };
       const url = addQueryParamsToExistingUrl(baseUrl, queryParams);
-      expect(wrapper.find('a[data-test-id="stacktrace-link"]').prop('href')).toEqual(url);
-      expect(wrapper.find('a[data-test-id="stacktrace-link"]').text()).toEqual('Foo');
+      expect(wrapper.find('a[data-test-id="stacktrace-link-foo"]').prop('href')).toEqual(
+        url
+      );
+      expect(wrapper.find('a[data-test-id="stacktrace-link-foo"]').text()).toEqual('Foo');
+      expect(wrapper.find('a[data-test-id="stacktrace-link-tesla"]').text()).toEqual(
+        'Tesla'
+      );
     });
   });
 });
