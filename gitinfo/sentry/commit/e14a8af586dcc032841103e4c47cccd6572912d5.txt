commit e14a8af586dcc032841103e4c47cccd6572912d5
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Apr 23 14:52:08 2020 -0700

    feat(alerts): Add GlobalSelectionHeader (#18397)
    
    This just magically works since the API already handles envs and
    projects filtering

diff --git a/src/sentry/static/sentry/app/views/alerts/list/index.tsx b/src/sentry/static/sentry/app/views/alerts/list/index.tsx
index c9e5fb1eb3..3e61ab7d57 100644
--- a/src/sentry/static/sentry/app/views/alerts/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/list/index.tsx
@@ -26,6 +26,7 @@ import Projects from 'app/utils/projects';
 import space from 'app/styles/space';
 import withOrganization from 'app/utils/withOrganization';
 import Access from 'app/components/acl/access';
+import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 
 import {Incident} from '../types';
 import {TableLayout, TitleAndSparkLine} from './styles';
@@ -245,83 +246,91 @@ class IncidentsListContainer extends React.Component<Props> {
     const status = getQueryStatus(query.status);
 
     return (
-      <DocumentTitle title={`Alerts- ${orgId} - Sentry`}>
-        <PageContent>
-          <PageHeader>
-            <StyledPageHeading>
-              {t('Alerts')}{' '}
-              <BetaTag title={t('This page is in beta and may change in the future.')} />
-            </StyledPageHeading>
-
-            <Actions>
-              <Access organization={organization} access={['project:write']}>
-                {({hasAccess}) => (
-                  <Button
-                    disabled={!hasAccess}
-                    title={
-                      !hasAccess
-                        ? t('You do not have permission to add alert rules.')
-                        : undefined
-                    }
-                    onClick={this.handleAddAlertRule}
-                    priority="primary"
-                    href="#"
-                    size="small"
-                    icon={<IconAdd circle size="xs" />}
-                  >
-                    {t('Add Alert Rule')}
-                  </Button>
-                )}
-              </Access>
-
-              <Button
-                onClick={this.handleNavigateToSettings}
-                href="#"
-                size="small"
-                icon={<IconSettings size="xs" />}
-              >
-                {t('Settings')}
-              </Button>
-
-              <ButtonBar merged active={status}>
-                <Button
-                  to={{pathname, query: openIncidentsQuery}}
-                  barId="open"
-                  size="small"
-                >
-                  {t('Active')}
-                </Button>
-                <Button
-                  to={{pathname, query: closedIncidentsQuery}}
-                  barId="closed"
-                  size="small"
-                >
-                  {t('Resolved')}
-                </Button>
+      <React.Fragment>
+        <GlobalSelectionHeader organization={organization} showDateSelector={false} />
+        <DocumentTitle title={`Alerts- ${orgId} - Sentry`}>
+          <PageContent>
+            <PageHeader>
+              <StyledPageHeading>
+                {t('Alerts')}{' '}
+                <BetaTag
+                  title={t('This page is in beta and may change in the future.')}
+                />
+              </StyledPageHeading>
+
+              <Actions>
+                <Access organization={organization} access={['project:write']}>
+                  {({hasAccess}) => (
+                    <Button
+                      disabled={!hasAccess}
+                      title={
+                        !hasAccess
+                          ? t('You do not have permission to add alert rules.')
+                          : undefined
+                      }
+                      onClick={this.handleAddAlertRule}
+                      priority="primary"
+                      href="#"
+                      size="small"
+                      icon={<IconAdd circle size="xs" />}
+                    >
+                      {t('Add Alert Rule')}
+                    </Button>
+                  )}
+                </Access>
+
                 <Button
-                  to={{pathname, query: allIncidentsQuery}}
-                  barId="all"
+                  onClick={this.handleNavigateToSettings}
+                  href="#"
                   size="small"
+                  icon={<IconSettings size="xs" />}
                 >
-                  {t('All')}
+                  {t('Settings')}
                 </Button>
-              </ButtonBar>
-            </Actions>
-          </PageHeader>
-
-          <Alert type="info" icon="icon-circle-info">
-            {tct('This page is in beta and currently only shows [link:metric alerts]. ', {
-              link: (
-                <ExternalLink href="https://docs.sentry.io/workflow/alerts-notifications/alerts/" />
-              ),
-            })}
-            <ExternalLink href="mailto:alerting-feedback@sentry.io">
-              {t('Please contact us if you have any feedback.')}
-            </ExternalLink>
-          </Alert>
-          <IncidentsList {...this.props} />
-        </PageContent>
-      </DocumentTitle>
+
+                <ButtonBar merged active={status}>
+                  <Button
+                    to={{pathname, query: openIncidentsQuery}}
+                    barId="open"
+                    size="small"
+                  >
+                    {t('Active')}
+                  </Button>
+                  <Button
+                    to={{pathname, query: closedIncidentsQuery}}
+                    barId="closed"
+                    size="small"
+                  >
+                    {t('Resolved')}
+                  </Button>
+                  <Button
+                    to={{pathname, query: allIncidentsQuery}}
+                    barId="all"
+                    size="small"
+                  >
+                    {t('All')}
+                  </Button>
+                </ButtonBar>
+              </Actions>
+            </PageHeader>
+
+            <Alert type="info" icon="icon-circle-info">
+              {tct(
+                'This page is in beta and currently only shows [link:metric alerts]. ',
+                {
+                  link: (
+                    <ExternalLink href="https://docs.sentry.io/workflow/alerts-notifications/alerts/" />
+                  ),
+                }
+              )}
+              <ExternalLink href="mailto:alerting-feedback@sentry.io">
+                {t('Please contact us if you have any feedback.')}
+              </ExternalLink>
+            </Alert>
+            <IncidentsList {...this.props} />
+          </PageContent>
+        </DocumentTitle>
+      </React.Fragment>
     );
   }
 }
diff --git a/tests/js/spec/views/alerts/list/index.spec.jsx b/tests/js/spec/views/alerts/list/index.spec.jsx
index 6c5529c1eb..b38fe49771 100644
--- a/tests/js/spec/views/alerts/list/index.spec.jsx
+++ b/tests/js/spec/views/alerts/list/index.spec.jsx
@@ -78,7 +78,11 @@ describe('IncidentsList', function() {
     expect(items).toHaveLength(2);
     expect(items.at(0).text()).toContain('First incident');
     expect(items.at(1).text()).toContain('Second incident');
-    expect(projectMock).toHaveBeenCalledTimes(1);
+
+    // GlobalSelectionHeader loads projects + the Projects render-prop
+    // component to load projects for all rows.
+    expect(projectMock).toHaveBeenCalledTimes(2);
+
     expect(projectMock).toHaveBeenCalledWith(
       expect.anything(),
       expect.objectContaining({
