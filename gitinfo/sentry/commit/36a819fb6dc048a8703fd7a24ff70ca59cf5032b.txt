commit 36a819fb6dc048a8703fd7a24ff70ca59cf5032b
Author: Bruno Garcia <github@brunogarcia.com>
Date:   Wed Dec 19 16:38:32 2018 +0100

    feat(unreal): Breadcrumbs from crash logs (#11098)
    
    * feat(unreal): Add logs as breadcrumbs
    * dep: bump symbolic 5.7.6

diff --git a/requirements-base.txt b/requirements-base.txt
index b54caff563..ded3874de2 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -63,7 +63,7 @@ sqlparse>=0.1.16,<0.2.0
 statsd>=3.1.0,<3.2.0
 strict-rfc3339>=0.7
 structlog==16.1.0
-symbolic>=5.7.3,<6.0.0
+symbolic>=5.7.6,<6.0.0
 toronado>=0.0.11,<0.1.0
 ua-parser>=0.6.1,<0.8.0
 # for bitbucket client
diff --git a/src/sentry/lang/native/unreal.py b/src/sentry/lang/native/unreal.py
index b84f21c696..3d7cb36ddd 100644
--- a/src/sentry/lang/native/unreal.py
+++ b/src/sentry/lang/native/unreal.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 from symbolic import Unreal4Crash
 from sentry.lang.native.minidump import MINIDUMP_ATTACHMENT_TYPE
 from sentry.models import UserReport
-from sentry.utils.safe import set_path
+from sentry.utils.safe import set_path, setdefault_path
 
 import re
 import uuid
@@ -112,3 +112,15 @@ def merge_unreal_context_event(unreal_context, event, project):
         'name': 'sentry.unreal.crashreporter',
         'version': runtime_prop.pop('crash_reporter_client_version', '0.0.0')
     }
+
+
+def merge_unreal_logs_event(unreal_logs, event):
+    setdefault_path(event, 'breadcrumbs', 'values', value=[])
+    breadcrumbs = event['breadcrumbs']['values']
+
+    for log in unreal_logs:
+        breadcrumbs.append({
+            'timestamp': log.get('timestamp'),
+            'category': log.get('component'),
+            'message': log.get('message'),
+        })
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index b99ba89f23..50bfd4f96b 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -37,7 +37,7 @@ from sentry.coreapi import (
 from sentry.event_manager import EventManager
 from sentry.interfaces import schemas
 from sentry.interfaces.base import get_interface
-from sentry.lang.native.unreal import process_unreal_crash, unreal_attachment_type, merge_unreal_context_event
+from sentry.lang.native.unreal import process_unreal_crash, unreal_attachment_type, merge_unreal_context_event, merge_unreal_logs_event
 from sentry.lang.native.minidump import merge_process_state_event, process_minidump, MINIDUMP_ATTACHMENT_TYPE
 from sentry.models import Project, OrganizationOption, Organization
 from sentry.signals import (
@@ -828,6 +828,14 @@ class UnrealView(StoreView):
             # we'll continue without the context data
             minidumps_logger.exception(e)
 
+        try:
+            unreal_logs = unreal.get_logs()
+            if unreal_logs is not None:
+                merge_unreal_logs_event(unreal_logs, data)
+        except Unreal4Error as e:
+            # we'll continue without the breadcrumbs
+            minidumps_logger.exception(e)
+
         for file in unreal.files():
             # Always store the minidump in attachments so we can access it during
             # processing, regardless of the event-attachments feature. This will
diff --git a/tests/sentry/lang/native/test_unreal.py b/tests/sentry/lang/native/test_unreal.py
index 65e39ac548..34191604e2 100644
--- a/tests/sentry/lang/native/test_unreal.py
+++ b/tests/sentry/lang/native/test_unreal.py
@@ -8,7 +8,7 @@ from django.core.files.uploadedfile import SimpleUploadedFile
 
 from sentry.testutils import TestCase
 from sentry.lang.native.minidump import MINIDUMP_ATTACHMENT_TYPE
-from sentry.lang.native.unreal import process_unreal_crash, unreal_attachment_type, merge_unreal_context_event
+from sentry.lang.native.unreal import process_unreal_crash, unreal_attachment_type, merge_unreal_context_event, merge_unreal_logs_event
 from sentry.models import Event, EventAttachment
 
 
@@ -55,6 +55,20 @@ class UnrealIntegrationTest(TestCase):
             assert 'YetAnother' == event['stacktrace']['frames'][2]['package']
             assert 'YetAnother' == event['stacktrace']['frames'][2]['package']
 
+    def test_merge_unreal_logs_event(self):
+        with open(get_unreal_crash_file(), 'rb') as f:
+            unreal_crash = process_unreal_crash(f.read())
+            event = {}
+            merge_unreal_logs_event(unreal_crash.get_logs(), event)
+            breadcrumbs = event['breadcrumbs']['values']
+            assert len(breadcrumbs) == 100
+            assert breadcrumbs[0]['timestamp'] == '2018-11-20T11:47:14Z'
+            assert breadcrumbs[0]['message'] == '   4. \'Parallels Display Adapter (WDDM)\' (P:0 D:0)'
+            assert breadcrumbs[0]['category'] == 'LogWindows'
+            assert breadcrumbs[99]['timestamp'] == '2018-11-20T11:47:15Z'
+            assert breadcrumbs[99]['message'] == 'Texture pool size now 1000 MB'
+            assert breadcrumbs[99]['category'] == 'LogContentStreaming'
+
     def upload_symbols(self):
         url = reverse(
             'sentry-api-0-dsym-files',
