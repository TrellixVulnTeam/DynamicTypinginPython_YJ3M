commit 555f84e698023127114873e7e6bb8d91319b0b14
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Dec 7 21:15:23 2015 -0800

    Use `django.middleware.csrf:get_token` instead

diff --git a/src/sentry/templates/sentry/bases/react.html b/src/sentry/templates/sentry/bases/react.html
index 607cb64052..5505e42612 100644
--- a/src/sentry/templates/sentry/bases/react.html
+++ b/src/sentry/templates/sentry/bases/react.html
@@ -3,7 +3,6 @@
 {% load sentry_api %}
 
 {% block body %}
-  {% csrf_token %}
   <div id="blk_router">
     <div class="loading triangle">
       <div class="loading-mask"></div>
diff --git a/src/sentry/web/frontend/react_page.py b/src/sentry/web/frontend/react_page.py
index 0ee4e2eec2..5405ab79dc 100644
--- a/src/sentry/web/frontend/react_page.py
+++ b/src/sentry/web/frontend/react_page.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from django.core.context_processors import csrf
+from django.middleware.csrf import get_token as get_csrf_token
 from django.http import HttpResponse
 from django.template import loader, Context
 
@@ -10,7 +10,12 @@ from sentry.web.frontend.base import BaseView, OrganizationView
 class ReactMixin(object):
     def handle_react(self, request):
         context = Context({'request': request})
-        context.update(csrf(request))
+
+        # Force a new CSRF token to be generated and set in user's
+        # Cookie. Alternatively, we could use context_processor +
+        # template tag, but in this case, we don't need a form on the
+        # page. So there's no point in rendering a random `<input>` field.
+        get_csrf_token(request)
 
         template = loader.render_to_string('sentry/bases/react.html', context)
 
