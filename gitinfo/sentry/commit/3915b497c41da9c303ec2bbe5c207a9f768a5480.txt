commit 3915b497c41da9c303ec2bbe5c207a9f768a5480
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Thu Jan 17 11:03:28 2019 -0800

    fix(settings): re-add back to project button

diff --git a/src/sentry/static/sentry/app/icons/icon-arrow-left.svg b/src/sentry/static/sentry/app/icons/icon-arrow-left.svg
new file mode 100644
index 0000000000..7a2d0f0c2a
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-arrow-left.svg
@@ -0,0 +1 @@
+<svg width="17" height="15" xmlns="http://www.w3.org/2000/svg"><path d="M4.573 8.652l4.151 4.247c.39.4.392 1.049.004 1.45a.976.976 0 0 1-1.408.005L.79 7.672 7.316.952a.976.976 0 0 1 1.41 0c.388.4.388 1.05 0 1.45l-4.129 4.25H15.98c.447 0 .81.448.81 1s-.363 1-.81 1H4.573z" fill="#493E54" fill-rule="nonzero"/></svg>
\ No newline at end of file
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBackButton.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBackButton.jsx
new file mode 100644
index 0000000000..b81a71a585
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBackButton.jsx
@@ -0,0 +1,99 @@
+import {Link} from 'react-router';
+import React from 'react';
+import PropTypes from 'prop-types';
+import Cookies from 'js-cookie';
+import styled from 'react-emotion';
+
+import {t, tct} from 'app/locale';
+import InlineSvg from 'app/components/inlineSvg';
+import SentryTypes from 'app/sentryTypes';
+import replaceRouterParams from 'app/utils/replaceRouterParams';
+import withLatestContext from 'app/utils/withLatestContext';
+import space from 'app/styles/space';
+
+const BackButtonWrapper = styled(Link)`
+  display: flex;
+  align-items: center;
+  color: ${p => p.theme.gray3};
+  background: ${p => p.theme.whiteDark};
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  padding: ${space(1.5)} ${space(2)};
+  font-size: ${p => p.theme.fontSizeMedium};
+  &:hover {
+    color: ${p => p.theme.gray5};
+  }
+`;
+
+const Icon = styled(InlineSvg)`
+  margin: 0 6px 0 -3px;
+  background: ${p => p.theme.offWhite2};
+  border-radius: 50%;
+  padding: ${space(0.5)};
+  box-sizing: content-box;
+
+  /* To ensure proper vertical centering */
+  svg {
+    display: block;
+  }
+`;
+
+class BackButton extends React.Component {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+    lastRoute: PropTypes.string,
+  };
+
+  static contextTypes = {
+    lastAppContext: PropTypes.oneOf(['project', 'organization']),
+  };
+
+  render() {
+    let {params, organization, lastRoute} = this.props;
+    let {lastAppContext} = this.context;
+    // lastAppContext is set when Settings is initial loaded,
+    // so if that is truthy, determine if we have project context at that point
+    // otherwise use what we have in latest context (e.g. if you navigated to settings directly)
+    let shouldGoBackToProject = lastRoute && lastAppContext === 'project';
+
+    let projectId = shouldGoBackToProject || !lastAppContext ? params.projectId : null;
+    let orgId = params.orgId || (organization && organization.slug);
+    let url = projectId ? '/:orgId/:projectId/' : '/:orgId/';
+    let label =
+      shouldGoBackToProject || (!lastAppContext && projectId)
+        ? t('Project')
+        : t('Organization');
+
+    // if the user needs to setup 2fa as part of the org invite flow,
+    // send them back to accept the invite
+    let pendingInvite = Cookies.get('pending-invite');
+
+    if (pendingInvite) {
+      return (
+        <BackButtonWrapper href={pendingInvite}>
+          <Icon src="icon-arrow-left" size="10px" />
+          {t('Back to Invite')}
+        </BackButtonWrapper>
+      );
+    }
+
+    return (
+      <BackButtonWrapper
+        to={
+          lastRoute ||
+          replaceRouterParams(url, {
+            orgId,
+            projectId,
+          })
+        }
+      >
+        <Icon src="icon-arrow-left" size="10px" />
+        {tct('Back to [label]', {label})}
+      </BackButtonWrapper>
+    );
+  }
+}
+
+const SettingsBackButton = withLatestContext(BackButton);
+
+export {BackButton};
+export default SettingsBackButton;
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
index 398c55a198..b10e7488e6 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsLayout.jsx
@@ -7,6 +7,7 @@ import Sidebar from 'app/components/sidebar';
 import Footer from 'app/components/footer';
 import space from 'app/styles/space';
 
+import SettingsBackButton from './settingsBackButton';
 import SettingsBreadcrumb from './settingsBreadcrumb';
 import SettingsHeader from './settingsHeader';
 import SettingsSearch from './settingsSearch';
@@ -44,7 +45,10 @@ class SettingsLayout extends React.Component {
 
           <MaxWidthContainer>
             {typeof renderNavigation === 'function' && (
-              <SidebarWrapper>{renderNavigation()}</SidebarWrapper>
+              <SidebarWrapper>
+                <SettingsBackButton params={params} />
+                <SidebarWrapperContent>{renderNavigation()}</SidebarWrapperContent>
+              </SidebarWrapper>
             )}
             <Content>{children}</Content>
           </MaxWidthContainer>
@@ -55,16 +59,20 @@ class SettingsLayout extends React.Component {
   }
 }
 
-const MaxWidthContainer = styled(Flex)`
+const MaxWidthContainer = styled('div')`
+  display: flex;
   max-width: ${p => p.theme.settings.containerWidth};
   flex: 1;
 `;
 
-const SidebarWrapper = styled(Box)`
+const SidebarWrapper = styled('div')`
   flex-shrink: 0;
   width: ${p => p.theme.settings.sidebarWidth};
   background: #fff;
   border-right: 1px solid ${p => p.theme.borderLight};
+`;
+
+const SidebarWrapperContent = styled('div')`
   padding: ${space(4)};
 `;
 
@@ -81,7 +89,7 @@ const SettingsColumn = styled('div')`
  * Note: `overflow: hidden` will cause some buttons in `SettingsPageHeader` to be cut off because it has negative margin.
  * Will also cut off tooltips.
  */
-const Content = styled(Box)`
+const Content = styled('div')`
   flex: 1;
   padding: ${space(4)};
   min-width: 0; /* keep children from stretching container */
