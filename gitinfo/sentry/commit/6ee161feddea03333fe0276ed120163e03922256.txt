commit 6ee161feddea03333fe0276ed120163e03922256
Author: Jan Michael Auer <account@jauer.org>
Date:   Tue Oct 23 15:29:31 2018 +0200

    fix(native): Fix a race during debug file deletion (#10211)
    
    * fix(native): Fix a race during debug file deletion
    
    * fix(native): Do not cascade deletes to debug caches
    
    * fix: Work around InnoDB constraint checking behavior
    
    * ref: Review feedback

diff --git a/src/sentry/models/debugfile.py b/src/sentry/models/debugfile.py
index 703a112ae7..12d18e1243 100644
--- a/src/sentry/models/debugfile.py
+++ b/src/sentry/models/debugfile.py
@@ -39,6 +39,7 @@ from sentry.models.file import File, ChunkFileState
 from sentry.reprocessing import resolve_processing_issue, \
     bump_reprocessing_revision
 from sentry.utils import metrics
+from sentry.utils.db import mysql_disabled_integrity
 from sentry.utils.zip import safe_extract_zip
 from sentry.utils.decorators import classproperty
 
@@ -304,15 +305,32 @@ class ProjectDebugFile(Model):
         return frozenset((self.data or {}).get('features', []))
 
     def delete(self, *args, **kwargs):
-        symcache = self.projectsymcachefile.select_related('cache_file').first()
-        if symcache is not None:
-            symcache.delete()
+        dif_id = self.id
 
-        cficache = self.projectcficachefile.select_related('cache_file').first()
-        if cficache is not None:
-            cficache.delete()
+        with mysql_disabled_integrity(db=ProjectDebugFile.objects.db):
+            with transaction.atomic():
+                # First, delete the debug file entity. This ensures no other
+                # worker can attach caches to it. Integrity checks are deferred
+                # within this transaction, so existing caches stay intact.
+                super(ProjectDebugFile, self).delete(*args, **kwargs)
+
+                # Explicitly select referencing caches and delete them. Using
+                # the backref does not work, since `dif.id` is None after the
+                # delete.
+                symcache = ProjectSymCacheFile.objects \
+                    .filter(debug_file_id=dif_id) \
+                    .select_related('cache_file') \
+                    .first()
+                if symcache:
+                    symcache.delete()
+
+                cficache = ProjectCfiCacheFile.objects \
+                    .filter(debug_file_id=dif_id) \
+                    .select_related('cache_file') \
+                    .first()
+                if cficache:
+                    cficache.delete()
 
-        super(ProjectDebugFile, self).delete(*args, **kwargs)
         self.file.delete()
 
 
@@ -325,7 +343,9 @@ class ProjectCacheFile(Model):
     debug_file = FlexibleForeignKey(
         'sentry.ProjectDebugFile',
         rel_class=OneToOneRel,
-        db_column='dsym_file_id')
+        db_column='dsym_file_id',
+        on_delete=models.DO_NOTHING,
+    )
     checksum = models.CharField(max_length=40)
     version = BoundedPositiveIntegerField()
 
diff --git a/src/sentry/utils/db.py b/src/sentry/utils/db.py
index a8563b3bb3..0500532405 100644
--- a/src/sentry/utils/db.py
+++ b/src/sentry/utils/db.py
@@ -8,6 +8,7 @@ sentry.utils.db
 from __future__ import absolute_import
 
 import six
+from contextlib import contextmanager, closing
 
 from django.conf import settings
 from django.db import connections, DEFAULT_DB_ALIAS
@@ -104,3 +105,19 @@ def attach_foreignkey(objects, field, related=[], database=None):
 
 def table_exists(name, using=DEFAULT_DB_ALIAS):
     return name in connections[using].introspection.table_names()
+
+
+def _set_mysql_foreign_key_checks(flag, using=DEFAULT_DB_ALIAS):
+    if is_mysql():
+        query = 'SET FOREIGN_KEY_CHECKS=%s' % (1 if flag else 0)
+        with closing(connections[using].cursor()) as cursor:
+            cursor.execute(query)
+
+
+@contextmanager
+def mysql_disabled_integrity(db=DEFAULT_DB_ALIAS):
+    try:
+        _set_mysql_foreign_key_checks(False, using=db)
+        yield
+    finally:
+        _set_mysql_foreign_key_checks(True, using=db)
diff --git a/tests/sentry/models/test_debugfile.py b/tests/sentry/models/test_debugfile.py
index 86a3918e21..d2ee6aa983 100644
--- a/tests/sentry/models/test_debugfile.py
+++ b/tests/sentry/models/test_debugfile.py
@@ -62,9 +62,10 @@ class DebugFileTest(TestCase):
             version=SYMCACHE_LATEST_VERSION,
         )
 
+        dif_id = dif.id
         dif.delete()
 
-        assert not ProjectDebugFile.objects.filter(id=dif.id).exists()
+        assert not ProjectDebugFile.objects.filter(id=dif_id).exists()
         assert not File.objects.filter(id=dif.file.id).exists()
         assert not ProjectSymCacheFile.objects.filter(id=symcache.id).exists()
         assert not File.objects.filter(id=symcache_file.id).exists()
