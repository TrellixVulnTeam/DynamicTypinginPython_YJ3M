commit 0854950607f7ade05c8c34d6d52c936b5392a9f2
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Apr 18 13:48:23 2016 -0700

    fix TypeError: t.toUpperCase is not a function

diff --git a/src/sentry/static/sentry/app/components/letterAvatar.jsx b/src/sentry/static/sentry/app/components/letterAvatar.jsx
index 29e0cf7294..f72d7507fe 100644
--- a/src/sentry/static/sentry/app/components/letterAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/letterAvatar.jsx
@@ -47,11 +47,11 @@ const LetterAvatar = React.createClass({
 
   getDisplayName() {
     let user = this.props.user;
-    return user.name || user.email || user.username || '?';
+    return user.name || user.email || user.username || '';
   },
 
   getInitials() {
-    let names = this.getDisplayName().split(' ');
+    let names = (this.getDisplayName().trim() || '?').split(' ');
     let initials = names[0][0] + (names.length > 1 ? names[names.length - 1][0] : '');
     return initials.toUpperCase();
   },
diff --git a/tests/js/spec/components/lettarAvatar.spec.jsx b/tests/js/spec/components/lettarAvatar.spec.jsx
index cfe415fcd5..198561a945 100644
--- a/tests/js/spec/components/lettarAvatar.spec.jsx
+++ b/tests/js/spec/components/lettarAvatar.spec.jsx
@@ -22,6 +22,16 @@ describe('LetterAvatar', function() {
   const USER_5 = {
     ip_address: '127.0.0.1'
   };
+  const USER_6 = {
+    id: 1,
+    name: 'Jane Doe ',
+    email: 'janedoe@example.com'
+  };
+  const USER_7 = {
+    id: 1,
+    name: ' ',
+    email: 'janedoe@example.com'
+  };
 
   describe('getInitials()', function() {
     it('should get initials based on name', function() {
@@ -39,10 +49,20 @@ describe('LetterAvatar', function() {
       expect(this.letterAvatar.getInitials()).to.eql('F');
     });
 
-    it('should get show question mark if user has no display name', function() {
+    it('should show question mark if user has no display name', function() {
       this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_4}/>);
       expect(this.letterAvatar.getInitials()).to.eql('?');
     });
+
+    it('should show question mark even if display name is a space', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_7}/>);
+      expect(this.letterAvatar.getInitials()).to.eql('?');
+    });
+
+    it('should get initials based on name even if there are trailing spaces', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_6}/>);
+      expect(this.letterAvatar.getInitials()).to.eql('JD');
+    });
   });
 
 
