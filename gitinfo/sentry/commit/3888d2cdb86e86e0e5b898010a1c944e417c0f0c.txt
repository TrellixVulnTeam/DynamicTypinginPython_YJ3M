commit 3888d2cdb86e86e0e5b898010a1c944e417c0f0c
Author: Leander Rodrigues <leandergrodrigues@gmail.com>
Date:   Fri Apr 17 17:18:03 2020 -0400

    fix(async-csv): Reset the export button when the payload changes (#18316)

diff --git a/src/sentry/static/sentry/app/components/dataExport.tsx b/src/sentry/static/sentry/app/components/dataExport.tsx
index 7f42a7b5aa..b4c08bb04e 100644
--- a/src/sentry/static/sentry/app/components/dataExport.tsx
+++ b/src/sentry/static/sentry/app/components/dataExport.tsx
@@ -1,4 +1,5 @@
 import styled from '@emotion/styled';
+import isEqual from 'lodash/isEqual';
 import React from 'react';
 
 import {Client} from 'app/api';
@@ -35,8 +36,22 @@ type State = {
 };
 
 class DataExport extends React.Component<Props, State> {
-  state: State = {
-    inProgress: false,
+  state = this.initialState;
+
+  componentDidUpdate({payload: prevPayload}) {
+    const {payload} = this.props;
+    if (!isEqual(prevPayload, payload)) this.resetState();
+  }
+
+  get initialState() {
+    return {
+      inProgress: false,
+      dataExportId: undefined,
+    };
+  }
+
+  resetState = () => {
+    this.setState(this.initialState);
   };
 
   startDataExport = async () => {
diff --git a/tests/js/spec/components/dataExport.spec.jsx b/tests/js/spec/components/dataExport.spec.jsx
index 2a91a244f3..670594de16 100644
--- a/tests/js/spec/components/dataExport.spec.jsx
+++ b/tests/js/spec/components/dataExport.spec.jsx
@@ -97,4 +97,25 @@ describe('DataExport', function() {
       dataExportId: 721,
     });
   });
+
+  it('should reset the state when receiving a new payload', async function() {
+    const url = `/organizations/${mockAuthorizedOrg.slug}/data-export/`;
+    MockApiClient.addMockResponse({
+      url,
+      method: 'POST',
+      body: {id: 721},
+    });
+    const wrapper = mountWithTheme(
+      <WrappedDataExport payload={mockPayload} />,
+      mockRouterContext(mockAuthorizedOrg)
+    );
+    wrapper.find('button').simulate('click');
+    await tick();
+    wrapper.update();
+    expect(wrapper.find(DataExport).state('inProgress')).toEqual(true);
+    expect(wrapper.find(DataExport).state('dataExportId')).toEqual(721);
+    wrapper.setProps({payload: {...mockPayload, queryType: 'Discover'}});
+    expect(wrapper.find(DataExport).state('inProgress')).toEqual(false);
+    expect(wrapper.find(DataExport).state('dataExportId')).toBeUndefined();
+  });
 });
