commit 2e107be1c7508f10d176ed71931bb4be60ddff59
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Nov 20 00:48:42 2015 -0800

    Remove unused test views

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 064a0c3319..b430ba95aa 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -40,7 +40,7 @@ from .helpers import AuthProvider, Feature, get_auth_header, TaskRunner
 
 
 class BaseTestCase(Fixtures, Exam):
-    urls = 'tests.sentry.web.urls'
+    urls = 'sentry.web.urls'
 
     def assertRequiresAuthentication(self, path, method='GET'):
         resp = getattr(self.client, method.lower())(path)
diff --git a/tests/sentry/web/urls.py b/tests/sentry/web/urls.py
deleted file mode 100644
index a50501ee4c..0000000000
--- a/tests/sentry/web/urls.py
+++ /dev/null
@@ -1,24 +0,0 @@
-from __future__ import absolute_import
-
-try:
-    from django.conf.urls import *  # NOQA
-except ImportError:
-    # django < 1.5 compat
-    from django.conf.urls.defaults import *  # NOQA
-from django.contrib import admin
-
-admin.autodiscover()
-
-from . import views
-
-urlpatterns = patterns(
-    '',
-    url(r'^admin/', include(admin.site.urls)),
-    url(r'^fake-login$', views.fake_login, name='sentry-fake-login'),
-    url(r'^trigger-500$', views.raise_exc, name='sentry-raise-exc'),
-    url(r'^trigger-500-decorated$', views.decorated_raise_exc, name='sentry-raise-exc-decor'),
-    url(r'^trigger-500-django$', views.django_exc, name='sentry-django-exc'),
-    url(r'^trigger-500-template$', views.template_exc, name='sentry-template-exc'),
-    url(r'^trigger-500-log-request$', views.logging_request_exc, name='sentry-log-request-exc'),
-    url(r'', include('sentry.web.urls')),
-)
diff --git a/tests/sentry/web/views.py b/tests/sentry/web/views.py
deleted file mode 100644
index 924d65b0a1..0000000000
--- a/tests/sentry/web/views.py
+++ /dev/null
@@ -1,35 +0,0 @@
-from __future__ import absolute_import, print_function
-
-from django.http import HttpResponse
-from django.shortcuts import get_object_or_404, render_to_response
-
-import logging
-
-
-def fake_login(request):
-    return HttpResponse('')
-
-
-def django_exc(request):
-    return get_object_or_404(Exception, pk=1)
-
-
-def raise_exc(request):
-    raise Exception(request.GET.get('message', 'view exception'))
-
-
-def decorated_raise_exc(request):
-    return raise_exc(request)
-
-
-def template_exc(request):
-    return render_to_response('sentry-tests/error.html')
-
-
-def logging_request_exc(request):
-    logger = logging.getLogger('sentry.test')
-    try:
-        raise Exception(request.GET.get('message', 'view exception'))
-    except Exception as e:
-        logger.error(e, exc_info=True, extra={'request': request})
-    return HttpResponse('')
