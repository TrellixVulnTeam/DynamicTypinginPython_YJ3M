commit bd3c826da6f94219f7c0003c5b6d34b60a242bd0
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Jan 21 11:21:55 2019 +0100

    fix: Query strings in curl command (#11606)
    
    * fix: Query strings in curl command
    
    * fix: Fix element selector
    
    * fix: JS Linting and testsuite

diff --git a/src/sentry/data/samples/javascript.json b/src/sentry/data/samples/javascript.json
index fd26cec761..4ce2711ef1 100644
--- a/src/sentry/data/samples/javascript.json
+++ b/src/sentry/data/samples/javascript.json
@@ -219,6 +219,7 @@
     },
     "sentry.interfaces.Http": {
         "url": "https://sentry.io/sentry/sentry/issues/231/",
+        "query_string": "foo=bar&bam=baz",
         "headers": [
             [
                 "User-Agent",
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
index a573518807..e7744464f1 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
@@ -56,7 +56,11 @@ export function getCurlCommand(data) {
   result += ' \\\n "' + data.url;
 
   if (defined(data.query) && data.query) {
-    result += '?' + data.query;
+    let queryObj = {};
+    for (let [k, v] of data.query) {
+      queryObj[k] = v;
+    }
+    result += '?' + queryString.stringify(queryObj);
   }
 
   result += '"';
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index 92f91574fb..a9f39ac72c 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -92,6 +92,9 @@ class IssueDetailsTest(AcceptanceTestCase):
         self.wait_until_loaded()
         self.browser.snapshot('issue details javascript - event details')
 
+        self.browser.find_element_by_xpath("//a//code[contains(text(), 'curl')]").click()
+        self.browser.snapshot('issue details javascript - event details - curl command')
+
     def test_rust_event(self):
         # TODO: This should become its own "rust" platform type
         event = self.create_sample_event(
diff --git a/tests/js/spec/components/events/interfaces/utils.spec.jsx b/tests/js/spec/components/events/interfaces/utils.spec.jsx
index c5918ab7e2..8aac7b85c9 100644
--- a/tests/js/spec/components/events/interfaces/utils.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/utils.spec.jsx
@@ -23,7 +23,7 @@ describe('components/interfaces/utils', function() {
             ENV: 'prod',
           },
           fragment: '',
-          query: 'foo=bar',
+          query: [['foo', 'bar']],
           data: '{"hello": "world"}',
           method: 'GET',
         })
@@ -49,7 +49,7 @@ describe('components/interfaces/utils', function() {
             ENV: 'prod',
           },
           fragment: '',
-          query: 'foo=bar',
+          query: [['foo', 'bar']],
           data: '{"hello": "world"}',
           method: 'GET',
         })
@@ -72,7 +72,7 @@ describe('components/interfaces/utils', function() {
             ENV: 'prod',
           },
           fragment: '',
-          query: 'foo=bar',
+          query: [['foo', 'bar']],
           method: 'GET',
         })
       ).toEqual('curl \\\n "http://example.com/foo?foo=bar"');
@@ -101,7 +101,7 @@ describe('components/interfaces/utils', function() {
           ['Accept-Encoding', 'gzip'],
         ],
         url: 'https://www.sentry.io',
-        query: '',
+        query: [],
         data: null,
         method: 'GET',
       };
