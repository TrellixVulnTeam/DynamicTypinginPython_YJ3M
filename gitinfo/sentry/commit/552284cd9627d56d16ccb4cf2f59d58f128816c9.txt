commit 552284cd9627d56d16ccb4cf2f59d58f128816c9
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 2 10:27:50 2015 -0800

    Add Plugin2.get_actions

diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index fbac38e60c..194f7e0b2c 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -208,15 +208,28 @@ class IPlugin2(local):
         """
         return self.resource_links
 
-    def get_rules(self):
+    def get_rules(self, **kwargs):
         """
         Return a list of Rule classes to add to the registry.
 
-        >>> def get_rules(self):
+        >>> def get_rules(self, **kwargs):
         >>>     return [MyCustomRule]
         """
         return []
 
+    def get_actions(self, request, group):
+        """
+        Return a list of available actions to append to aggregates.
+
+        An action is a tuple containing two elements:
+
+            ('Action Label', '/uri/to/action/')
+
+        >>> def get_actions(self, request, group, **kwargs):
+        >>>     return [('Google', 'http://google.com')]
+        """
+        return []
+
 
 class Plugin2(IPlugin2):
     """
diff --git a/src/sentry/templatetags/sentry_plugins.py b/src/sentry/templatetags/sentry_plugins.py
index 1f82c2414f..3c788bb0b1 100644
--- a/src/sentry/templatetags/sentry_plugins.py
+++ b/src/sentry/templatetags/sentry_plugins.py
@@ -20,7 +20,7 @@ def get_actions(group, request):
     project = group.project
 
     action_list = []
-    for plugin in plugins.for_project(project):
+    for plugin in plugins.for_project(project, version=1):
         results = safe_execute(plugin.actions, request, group, action_list)
 
         if not results:
@@ -28,6 +28,10 @@ def get_actions(group, request):
 
         action_list = results
 
+    for plugin in plugins.for_project(project, version=2):
+        for action in (safe_execute(plugin.get_actions, request, group) or ()):
+            action_list.append(action)
+
     return [(a[0], a[1], request.path == a[1]) for a in action_list]
 
 
diff --git a/tests/sentry/templatetags/test_plugins.py b/tests/sentry/templatetags/test_plugins.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/templatetags/test_sentry_plugins.py b/tests/sentry/templatetags/test_sentry_plugins.py
new file mode 100644
index 0000000000..411fa20419
--- /dev/null
+++ b/tests/sentry/templatetags/test_sentry_plugins.py
@@ -0,0 +1,45 @@
+from __future__ import absolute_import
+
+from django.template import Context, Template
+from mock import Mock
+
+from sentry.plugins import plugins, Plugin2
+from sentry.testutils import TestCase
+
+
+class SamplePlugin(Plugin2):
+    def get_actions(self, request, group):
+        return [('Example Action', 'http://example.com?id=%s' % (group.id,))]
+
+    def is_enabled(self, project=None):
+        return True
+
+
+class PluginTestCase(TestCase):
+    plugin = None
+
+    def setUp(self):
+        super(PluginTestCase, self).setUp()
+        plugins.register(self.plugin)
+        self.addCleanup(plugins.unregister, self.plugin)
+
+
+class GetActionsTest(PluginTestCase):
+    plugin = SamplePlugin
+
+    TEMPLATE = Template("""
+        {% load sentry_plugins %}
+        {% for k, v in group|get_actions:request %}
+            <span>{{ k }} - {{ v }}</span>
+        {% endfor %}
+    """)
+
+    def test_includes_v2_plugins(self):
+        group = self.create_group()
+
+        result = self.TEMPLATE.render(Context({
+            'request': Mock(),
+            'group': group,
+        }))
+
+        assert '<span>Example Action - http://example.com?id=%s</span>' % (group.id,) in result
