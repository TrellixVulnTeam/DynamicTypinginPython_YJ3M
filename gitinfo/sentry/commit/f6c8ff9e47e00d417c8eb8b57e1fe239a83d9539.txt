commit f6c8ff9e47e00d417c8eb8b57e1fe239a83d9539
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 23 13:59:24 2015 -0800

    Initial work on event header

diff --git a/src/sentry/api/serializers/models/event.py b/src/sentry/api/serializers/models/event.py
index e9abec01c9..992c1ea367 100644
--- a/src/sentry/api/serializers/models/event.py
+++ b/src/sentry/api/serializers/models/event.py
@@ -33,6 +33,7 @@ class EventSerializer(Serializer):
         d = {
             'id': str(obj.id),
             'eventID': str(obj.event_id),
+            'size': obj.size,
             'entries': attrs['entries'],
             'message': obj.message,
             'platform': obj.platform,
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index cbe3239b48..b8a16c5992 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -9,7 +9,7 @@ var Client = function(){
 Client.prototype.request = function(path, options) {
   $.ajax({
     url: this.baseUrl + path,
-    method: options.method,
+    method: options.method || 'GET',
     success: options.success,
     error: options.error,
     complete: options.complete
diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index c57a002cc5..5e280c1421 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -2,8 +2,14 @@
 var React = require("react");
 
 var PropTypes = {
+  AnyModel: React.PropTypes.shape({
+    id: React.PropTypes.string.isRequired
+  }),
   Aggregate: React.PropTypes.shape({
     id: React.PropTypes.string.isRequired
+  }),
+  Event: React.PropTypes.shape({
+    id: React.PropTypes.string.isRequired
   })
 };
 
diff --git a/src/sentry/static/sentry/app/views/aggregate/activity.jsx b/src/sentry/static/sentry/app/views/aggregate/activity.jsx
index fd1a2e837b..f48732628d 100644
--- a/src/sentry/static/sentry/app/views/aggregate/activity.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate/activity.jsx
@@ -20,7 +20,6 @@ var AggregateActivity = React.createClass({
       </div>
     );
   }
-
 });
 
 module.exports = AggregateActivity;
diff --git a/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx b/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
new file mode 100644
index 0000000000..57eb866f5e
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/aggregate/eventHeader.jsx
@@ -0,0 +1,40 @@
+/*** @jsx React.DOM */
+var React = require("react");
+
+var PropTypes = require("../../proptypes");
+
+var AggregateEventHeader = React.createClass({
+  propTypes: {
+    aggregate: PropTypes.Aggregate.isRequired,
+    event: PropTypes.Event
+  },
+
+  render: function() {
+    var event = this.props.event;
+
+    if (!event) {
+      return <div />;
+    }
+
+    return (
+      <div className="btn-toolbar event-toolbar">
+        <a className="btn btn-default btn-lg pull-left prev">
+          <span></span> Newer Sample
+        </a>
+        <a className="btn btn-default btn-lg pull-right next">
+          Older Sample <span></span>
+        </a>
+        <h4>
+          <span>Datetime</span>
+          <span>[{event.size}]</span>
+          <div>
+            <small>ID: {event.eventID}</small>
+          </div>
+        </h4>
+      </div>
+    );
+  }
+});
+
+module.exports = AggregateEventHeader;
+
diff --git a/src/sentry/static/sentry/app/views/aggregateOverview.jsx b/src/sentry/static/sentry/app/views/aggregateOverview.jsx
index 5df6bd6076..88a37b81a8 100644
--- a/src/sentry/static/sentry/app/views/aggregateOverview.jsx
+++ b/src/sentry/static/sentry/app/views/aggregateOverview.jsx
@@ -7,24 +7,59 @@ var Router = require("react-router");
 var api = require("../api");
 var AggregateActivity = require("./aggregate/activity");
 var AggregateChart = require("./aggregate/chart");
+var AggregateEventHeader = require("./aggregate/eventHeader");
 var AggregateListStore = require("../stores/aggregateListStore");
 var MemberListStore = require("../stores/memberListStore");
 var PropTypes = require("../proptypes");
 var utils = require("../utils");
 
 var AggregateOverview = React.createClass({
+  mixins: [Router.State],
+
   propTypes: {
     aggregate: PropTypes.Aggregate.isRequired,
     statsPeriod: React.PropTypes.string.isRequired
   },
 
-  render: function() {
+  getInitialState: function(){
+    return {
+      event: null
+    };
+  },
+
+  componentWillMount: function(){
+    this.fetchEventData();
+  },
+
+  componentWillReceiveProps: function(nextProps) {
+    var eventId = this.getParams().eventId || 'latest';
+    console.log(nextProps);
+    // if (this.)
+    // this.fetchEventData();
+  },
+
+  fetchEventData: function(){
+    var eventId = this.getParams().eventId || 'latest';
+    api.request('/groups/' + this.props.aggregate.id + '/events/' + eventId + '/', {
+      success: function(data) {
+        this.setState({event: data});
+      }.bind(this),
+      error: function() {
+        // TODO(dcramer):
+      }
+    });
+  },
+
+  render: function(){
     return (
       <div>
         <AggregateChart
             aggregate={this.props.aggregate}
             statsPeriod={this.props.statsPeriod} />
         <AggregateActivity aggregate={this.props.aggregate} />
+        <AggregateEventHeader
+            aggregate={this.props.aggregate}
+            event={this.state.event} />
       </div>
     );
   }
