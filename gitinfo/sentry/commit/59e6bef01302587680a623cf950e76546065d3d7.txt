commit 59e6bef01302587680a623cf950e76546065d3d7
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu May 19 16:23:50 2016 +0200

    Generate iOS culprit in the default location

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 8b48f78a18..0c649acc34 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -437,6 +437,11 @@ class Frame(Interface):
         }).strip('\n')
 
     def get_culprit_string(self, platform=None):
+        if platform in ('objc', 'cocoa'):
+            return '%s (%s)' % (
+                self.function or '?',
+                self.package or '?',
+            )
         fileloc = self.module or self.filename
         if not fileloc:
             return ''
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 47172061f9..2d32fd789d 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -34,15 +34,6 @@ def exception_from_apple_error_or_diagnosis(error, diagnosis=None):
         }
 
 
-def get_culprit(exc, frames):
-    if not frames:
-        return exc['type']
-    return '%s in %s' % (
-        exc['type'],
-        frames[-1]['package'],
-    )
-
-
 def inject_apple_backtrace(data, frames, diagnosis=None, error=None,
                            system=None):
     # TODO:
@@ -104,12 +95,9 @@ def inject_apple_backtrace(data, frames, diagnosis=None, error=None,
         error = error or {}
         exc = exception_from_apple_error_or_diagnosis(error, diagnosis)
         if exc is not None:
-            data['culprit'] = get_culprit(exc, converted_frames)
             exc['stacktrace'] = stacktrace
             data['sentry.interfaces.Exception'] = exc
             return
-        if diagnosis is not None:
-            data['culprit'] = diagnosis
 
     data['sentry.interfaces.Stacktrace'] = stacktrace
 
