commit f8fbea9864538a88a91321482e50270ace065fbb
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 7 18:25:46 2017 -0700

    releases: improve ui perf
    
    remove deploy query and utilize cached attributes

diff --git a/bin/load-mocks b/bin/load-mocks
index 2671ff539a..1953f0ed26 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -360,20 +360,24 @@ def main(num_events=1, extra_events=False):
                 }
             )
 
+            authors = set()
+
             for commit_index, raw_commit in enumerate(raw_commits):
+                author = CommitAuthor.objects.get_or_create(
+                    organization_id=org.id,
+                    email=raw_commit['author'][1],
+                    defaults={'name': raw_commit['author'][0]}
+                )[0]
                 commit = Commit.objects.get_or_create(
                     organization_id=org.id,
                     repository_id=repo[0].id,
                     key=raw_commit['key'],
                     defaults={
-                        'author': CommitAuthor.objects.get_or_create(
-                            organization_id=org.id,
-                            email=raw_commit['author'][1],
-                            defaults={'name': raw_commit['author'][0]}
-                        )[0],
+                        'author': author,
                         'message': raw_commit['message'],
                     },
                 )[0]
+                authors.add(author)
 
                 for file in raw_commit['files']:
                     ReleaseFile.objects.get_or_create(
@@ -422,6 +426,14 @@ def main(num_events=1, extra_events=False):
                 environment_id=environment.id,
             )
 
+            release.update(
+                commit_count=len(raw_commits),
+                last_commit_id=commit.id,
+                total_deploys=Deploy.objects.filter(release=release).count(),
+                last_deploy_id=deploy.id,
+                authors=[six.text_type(a.id) for a in authors],
+            )
+
             Activity.objects.create(
                 type=Activity.DEPLOY,
                 project=project,
diff --git a/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx b/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
index d6855b0b9b..48cd51ec15 100644
--- a/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
+++ b/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
@@ -1,16 +1,13 @@
 import React from 'react';
 import ApiMixin from '../mixins/apiMixin';
 import TooltipMixin from '../mixins/tooltip';
-import LoadingIndicator from './loadingIndicator';
-import LoadingError from './loadingError';
 import TimeSince from './timeSince';
 import {t} from '../locale';
 
 const LatestDeployOrReleaseTime = React.createClass({
   propTypes: {
     orgId: React.PropTypes.string.isRequired,
-    version: React.PropTypes.string.isRequired,
-    releaseDateCreated: React.PropTypes.string.isRequired
+    release: React.PropTypes.object.isRequired
   },
 
   mixins: [
@@ -20,59 +17,21 @@ const LatestDeployOrReleaseTime = React.createClass({
     })
   ],
 
-  getInitialState() {
-    return {
-      deploys: [],
-      loading: true
-    };
-  },
-
-  componentWillMount() {
-    this.fetchData();
-  },
-
   componentDidUpdate(prevProps, prevState) {
-    if (prevState.loading && !this.state.loading) {
-      this.removeTooltips();
-      this.attachTooltips();
-    }
+    this.removeTooltips();
+    this.attachTooltips();
   },
 
-  fetchData() {
-    let deployPath = `/organizations/${this.props.orgId}/releases/${encodeURIComponent(this.props.version)}/deploys/`;
-    this.api.request(deployPath, {
-      method: 'GET',
-      success: data => {
-        this.setState({
-          deploys: data,
-          loading: false
-        });
-      },
-      error: () => {
-        this.setState({
-          error: true,
-          loading: false
-        });
-      }
-    });
-  },
   render() {
-    if (this.state.loading) {
-      return <LoadingIndicator mini={true} />;
-    }
-    if (this.state.error) {
-      return <LoadingError />;
-    }
-    let {releaseDateCreated} = this.props;
-    let {deploys} = this.state;
-    let earlierDeploysNum = deploys.length - 1;
-    let latestDeploy = deploys[0];
+    let {release} = this.props;
+    let earlierDeploysNum = release.totalDeploys - 1;
+    let latestDeploy = release.lastDeploy;
     // if there are deploys associated with the release
     // render the most recent deploy (API will return data ordered by dateFinished)
     // otherwise, render the dateCreated associated with release
     return (
       <div>
-        {deploys.length > 0 && latestDeploy.dateFinished
+        {latestDeploy && latestDeploy.dateFinished
           ? <div className="deploy">
               <p className="m-b-0 text-light">
                 <span
@@ -100,7 +59,7 @@ const LatestDeployOrReleaseTime = React.createClass({
           : <p className="m-b-0 text-light">
               <span className="icon icon-clock" />
               {' '}
-              <TimeSince date={releaseDateCreated} />
+              <TimeSince date={release.dateCreated} />
             </p>}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx b/src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx
index 5e1bb102cc..f35b3fe8b8 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx
@@ -29,11 +29,7 @@ const ReleaseList = React.createClass({
                       version={release.version}
                     />
                   </h2>
-                  <LatestDeployOrReleaseTime
-                    orgId={orgId}
-                    releaseDateCreated={release.dateCreated}
-                    version={release.version}
-                  />
+                  <LatestDeployOrReleaseTime orgId={orgId} release={release} />
                 </div>
                 <div className="col-sm-4 hidden-xs">
                   <ReleaseStats release={release} />
