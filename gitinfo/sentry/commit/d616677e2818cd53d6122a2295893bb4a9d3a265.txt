commit d616677e2818cd53d6122a2295893bb4a9d3a265
Author: Brendan MacDonell <brendan@macdonell.net>
Date:   Sat Jun 16 16:59:07 2012 -0700

    Correct logging problems from deferred interpolation
    
    When commit a157229ca97 deferred interpolation of internal logs,
    several interpolations which were already deferred by escaping
    were not updated. These statements caused TypeErrors when not all
    of the log arguments were consumed.

diff --git a/sentry/utils/safe.py b/sentry/utils/safe.py
index 7a02109e24..2ad5508225 100644
--- a/sentry/utils/safe.py
+++ b/sentry/utils/safe.py
@@ -22,7 +22,7 @@ def safe_execute(func, *args, **kwargs):
         else:
             cls = func.__class__
         logger = logging.getLogger('sentry.plugins')
-        logger.error('Error processing %r on %%r: %%s', func.__name__, cls.__name__, e, extra={
+        logger.error('Error processing %r on %r: %s', func.__name__, cls.__name__, e, extra={
             'func_module': cls.__module__,
             'func_args': args,
             'func_kwargs': kwargs,
diff --git a/sentry/web/api.py b/sentry/web/api.py
index 181bf36fc8..0d6d212a0a 100644
--- a/sentry/web/api.py
+++ b/sentry/web/api.py
@@ -177,7 +177,7 @@ def store(request, project=None):
             }, exc_info=True)
             response = HttpResponse(unicode(error.msg), status=error.http_status)
         else:
-            logger.info('New event from client %r (id=%%s)', client, data['event_id'])
+            logger.info('New event from client %r (id=%s)', client, data['event_id'])
 
     return response
 
