commit a90f65b08a95950223318fbd37107d9632291b9c
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Nov 8 13:35:01 2018 -0800

    fix(discard-delete): Project must be passed to Feature (#10494)
    
    The Feature component is not able to infer the project via the component
    context as it's being rendered in the global modal which is out of
    context of the project.

diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index ef9d324427..775e055049 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -3,40 +3,34 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
-import FeatureDisabled from 'app/components/acl/featureDisabled';
 import {openModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
 import Button from 'app/components/button';
 import DropdownLink from 'app/components/dropdownLink';
 import Feature from 'app/components/acl/feature';
+import FeatureDisabled from 'app/components/acl/featureDisabled';
 import GroupActions from 'app/actions/groupActions';
 import GroupState from 'app/mixins/groupState';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
-import HookStore from 'app/stores/hookStore';
 import IgnoreActions from 'app/components/actions/ignore';
 import IndicatorStore from 'app/stores/indicatorStore';
 import IssuePluginActions from 'app/components/group/issuePluginActions';
 import LinkWithConfirmation from 'app/components/linkWithConfirmation';
 import MenuItem from 'app/components/menuItem';
 import ResolveActions from 'app/components/actions/resolve';
+import SentryTypes from 'app/sentryTypes';
 import ShareIssue from 'app/components/shareIssue';
 import space from 'app/styles/space';
 
 class DeleteActions extends React.Component {
   static propTypes = {
-    organization: PropTypes.object.isRequired,
+    organization: SentryTypes.Organization.isRequired,
+    project: SentryTypes.Project.isRequired,
     onDelete: PropTypes.func.isRequired,
     onDiscard: PropTypes.func.isRequired,
   };
 
-  constructor(...args) {
-    super(...args);
-    this.state = {
-      hooksDisabled: HookStore.get('project:discard-groups:disabled'),
-    };
-  }
-
   renderDiscardDisabled = ({children, ...props}) =>
     children({
       ...props,
@@ -49,6 +43,7 @@ class DeleteActions extends React.Component {
     <Feature
       features={['projects:discard-groups']}
       organization={this.props.organization}
+      project={this.props.project}
       renderDisabled={this.renderDiscardDisabled}
     >
       {({hasFeature, renderDisabled, ...props}) => (
@@ -269,6 +264,7 @@ const GroupDetailsActions = createReactClass({
         </div>
         <DeleteActions
           organization={org}
+          project={project}
           onDelete={this.onDelete}
           onDiscard={this.onDiscard}
         />
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index 758aede8f6..b21f882a19 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -61,6 +61,43 @@ exports[`GroupActions render() renders correctly 1`] = `
         "teams": Array [],
       }
     }
+    project={
+      Object {
+        "allowedDomains": Array [
+          "example.com",
+          "https://example.com",
+        ],
+        "dataScrubber": false,
+        "dataScrubberDefaults": false,
+        "digestsMaxDelay": 60,
+        "digestsMinDelay": 5,
+        "features": Array [],
+        "hasAccess": true,
+        "id": "2448",
+        "isBookmarked": false,
+        "isMember": true,
+        "name": "project name",
+        "resolveAge": 48,
+        "safeFields": Array [
+          "business-email",
+          "company",
+        ],
+        "scrapeJavaScript": true,
+        "scrubIPAddresses": false,
+        "securityToken": "security-token",
+        "securityTokenHeader": "x-security-header",
+        "sensitiveFields": Array [
+          "creditcard",
+          "ssn",
+        ],
+        "slug": "project",
+        "storeCrashReports": false,
+        "subjectPrefix": "[my-org]",
+        "subjectTemplate": "[$project] \${tag:level}: $title",
+        "teams": Array [],
+        "verifySSL": true,
+      }
+    }
   />
 </div>
 `;
