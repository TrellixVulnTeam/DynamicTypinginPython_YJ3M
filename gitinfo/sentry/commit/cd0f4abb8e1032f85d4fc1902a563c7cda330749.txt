commit cd0f4abb8e1032f85d4fc1902a563c7cda330749
Author: Mark Story <mark@sentry.io>
Date:   Thu Sep 19 14:23:46 2019 -0400

    tests: Add tests for Discover2Item (#14774)
    
    This sidebar item is complex enough to justify some basic functionality
    tests.

diff --git a/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx b/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx
index 29b4d488f9..39186b9e82 100644
--- a/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/discover2Item.tsx
@@ -171,7 +171,7 @@ class Discover2Item extends React.Component<Props, State> {
               return (
                 <Hitbox role="menu" id={this.menuId} isOpen={isOpen}>
                   <InputContainer>
-                    <StyledLabel for={inputId}>
+                    <StyledLabel htmlFor={inputId}>
                       <InlineSvg src="icon-search" size="16" />
                     </StyledLabel>
                     <StyledInput
@@ -253,7 +253,7 @@ const QueryName = styled('span')`
   line-height: 1.2;
 `;
 
-const StyledLabel = styled('label')<{for: string}>`
+const StyledLabel = styled('label')<{htmlFor: string}>`
   margin: 0;
   color: ${p => p.theme.gray2};
   padding: ${space(1.5)} ${space(1)} ${space(1.5)} ${space(2)};
diff --git a/tests/js/spec/components/sidebar/discover2Item.spec.jsx b/tests/js/spec/components/sidebar/discover2Item.spec.jsx
new file mode 100644
index 0000000000..eb16887375
--- /dev/null
+++ b/tests/js/spec/components/sidebar/discover2Item.spec.jsx
@@ -0,0 +1,117 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import {browserHistory} from 'react-router';
+
+import {Client} from 'app/api';
+import Discover2Item from 'app/components/sidebar/discover2Item';
+import DiscoverSavedQueriesStore from 'app/stores/discoverSavedQueriesStore';
+
+const makeWrapper = props =>
+  mount(
+    <Discover2Item {...props} label="Discover" icon="icon-search" />,
+    TestStubs.routerContext()
+  );
+
+describe('Sidebar > Discover2Item', function() {
+  let client, organization;
+  beforeEach(function() {
+    const now = new Date();
+    Client.addMockResponse({
+      url: '/organizations/org-slug/discover/saved/',
+      body: [
+        {
+          id: '1',
+          name: 'first query',
+          fields: ['title', 'count()'],
+          dateCreated: now,
+          dateUpdated: now,
+          createdBy: '1',
+        },
+        {
+          id: '2',
+          name: 'second query',
+          fields: ['transaction', 'count()'],
+          dateCreated: now,
+          dateUpdated: now,
+          createdBy: '1',
+        },
+      ],
+    });
+    client = new Client();
+    organization = TestStubs.Organization();
+  });
+
+  afterEach(function() {
+    DiscoverSavedQueriesStore.reset();
+  });
+
+  it('renders no menu when feature is off', async function() {
+    const wrapper = makeWrapper({organization, client});
+    // Wait for reflux
+    await tick();
+
+    const menu = wrapper.find('AutoComplete');
+    expect(menu).toHaveLength(0);
+  });
+
+  it('renders a menu when feature is on', async function() {
+    organization.features.push('discover-v2-query-builder');
+    const wrapper = makeWrapper({organization, client});
+    // Wait for reflux
+    await tick();
+
+    const menu = wrapper.find('AutoComplete');
+    expect(menu).toHaveLength(1);
+  });
+
+  it('opens the menu', async function() {
+    organization.features.push('discover-v2-query-builder');
+    const wrapper = makeWrapper({organization, client});
+    // Wait for reflux
+    await tick();
+
+    const nav = wrapper.find('nav');
+    nav.simulate('mouseEnter');
+
+    const menu = wrapper.find('Menu');
+    expect(menu).toHaveLength(1);
+
+    const menuItems = menu.find('MenuItem');
+    expect(menuItems).toHaveLength(2);
+  });
+
+  it('handles delete buttons', async function() {
+    const deleteRequest = Client.addMockResponse({
+      url: '/organizations/org-slug/discover/saved/1/',
+      method: 'DELETE',
+    });
+    organization.features.push('discover-v2-query-builder');
+    const wrapper = makeWrapper({organization, client});
+    // Wait for reflux
+    await tick();
+
+    const nav = wrapper.find('nav');
+    nav.simulate('mouseEnter');
+    await tick();
+
+    const item = wrapper.find('Menu MenuItem').first();
+    item.find('MenuItemButton[icon="icon-trash"]').simulate('click');
+
+    expect(deleteRequest).toHaveBeenCalled();
+  });
+
+  it('handles edit buttons', async function() {
+    organization.features.push('discover-v2-query-builder');
+    const wrapper = makeWrapper({organization, client});
+    // Wait for reflux
+    await tick();
+
+    const nav = wrapper.find('nav');
+    nav.simulate('mouseEnter');
+    await tick();
+
+    const item = wrapper.find('Menu MenuItem').first();
+    item.find('MenuItemButton[icon="icon-edit"]').simulate('click');
+    expect(browserHistory.push).toHaveBeenCalled();
+  });
+});
