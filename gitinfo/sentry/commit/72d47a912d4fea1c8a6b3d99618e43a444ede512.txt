commit 72d47a912d4fea1c8a6b3d99618e43a444ede512
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jan 20 19:16:42 2015 -0800

    Some initial work on moving more updates into actions

diff --git a/src/sentry/static/sentry/app/actions/aggregateListActions.jsx b/src/sentry/static/sentry/app/actions/aggregateListActions.jsx
index 4c8d6e472e..cbf16cccb4 100644
--- a/src/sentry/static/sentry/app/actions/aggregateListActions.jsx
+++ b/src/sentry/static/sentry/app/actions/aggregateListActions.jsx
@@ -2,13 +2,19 @@
 
 var Reflux = require("reflux");
 
+// TODO(dcramer): we should probably just make every parameter update
+// work on bulk aggregates
+// TODO(dcramer): define a spec for action parameterization and children
+// i.e. in(params) => out(params, response)
 var AggregateListActions = Reflux.createActions({
   "assignTo": {
     children: ["completed", "failed"]
+  },
+  "bulkUpdate": {
+    children: ["completed", "failed"]
   }
 });
 
-
 AggregateListActions.assignTo.listen(function(itemId, userEmail){
   if (!itemId) {
     this.failed(itemId, userEmail);
@@ -31,5 +37,22 @@ AggregateListActions.assignTo.listen(function(itemId, userEmail){
   });
 });
 
+AggregateListActions.bulkUpdate.listen(function(params){
+  var url = '/api/0/projects/' + params.orgId + '/' + params.projectId + '/groups/';
+  url += '?id=' + params.itemIds.join('&id=');
+
+  $.ajax({
+    url: url,
+    method: 'PUT',
+    data: JSON.stringify(params.data),
+    contentType: 'application/json',
+    success: function(data){
+      this.completed(params, data);
+    }.bind(this),
+    error: function(){
+      this.failed(params);
+    }.bind(this)
+  });
+});
 
 module.exports = AggregateListActions;
diff --git a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
index c021a9e154..040791752b 100644
--- a/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
+++ b/src/sentry/static/sentry/app/stores/aggregateListStore.jsx
@@ -23,6 +23,8 @@ var AggregateListStore = Reflux.createStore({
     // TODO(dcramer): theres no documented way to do listenables via these
     this.listenTo(AggregateListActions.assignTo.completed, this.onAssignToCompleted);
     this.listenTo(AggregateListActions.assignTo.failed, this.onAssignToFailed);
+
+    this.listenTo(AggregateListActions.bulkUpdate.completed, this.onBulkUpdateCompleted);
   },
 
   // TODO(dcramer): this should actually come from an action of some sorts
@@ -33,10 +35,28 @@ var AggregateListStore = Reflux.createStore({
   },
 
   onAssignToCompleted: function(id, email, data) {
-    this.items.update(data);
+    var idx = this.items.indexOf({id: id});
+    if (idx === -1) {
+      return;
+    }
+    // TODO(dcramer): we want to be able to pull the member information from
+    // MemberListStore so we can ignore the return params (which will help us
+    // sort out bulk actions)
+    var item = this.items[idx];
+    $.extend(true, item, data);
+    this.trigger(this.items);
+  },
+
+  onBulkUpdateCompleted: function(params) {
+    this.items.forEach(function(item){
+      if (params.itemIds.indexOf(item.id) !== -1) {
+        $.extend(true, item, data);
+      }
+    });
     this.trigger(this.items);
   },
 
+
   // TODO(dcramer): This is not really the best place for this
   onAssignToFailed: function(id, email) {
     AlertActions.addAlert(ERR_CHANGE_ASSIGNEE, 'error');
