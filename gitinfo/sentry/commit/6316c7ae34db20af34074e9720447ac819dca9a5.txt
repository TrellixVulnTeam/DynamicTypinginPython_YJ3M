commit 6316c7ae34db20af34074e9720447ac819dca9a5
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sat Jun 25 00:18:00 2016 +0200

    Improved leads-to-app rendering

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index a2fcca60c5..a2973afddf 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -142,7 +142,7 @@ const Frame = React.createClass({
     // indicate lack of source information for native setups.  We could
     // TODO(mitsuhiko): only do this for events from native platforms?
     if (defined(data.lineNo) && data.lineNo != 0) {
-      title.push(<span className="in-at" key="no"> at line </span>);
+      title.push(<span className="in-at in-at-line" key="no"> at line </span>);
       title.push((
         <code key="line" className="lineno">
           {defined(data.colNo) ? `${data.lineNo}:${data.colNo}` : data.lineNo}
@@ -229,10 +229,29 @@ const Frame = React.createClass({
     );
   },
 
+  leadsToApp() {
+    return !this.props.data.inApp && this.props.nextFrameInApp;
+  },
+
+  renderLeadHint() {
+    if (this.leadsToApp() && !this.state.isExpanded) {
+      return (
+        <span className="leads-to-app-hint">
+          {'Called from: '}
+        </span>
+      );
+    } else {
+      return null;
+    }
+  },
+
   renderDefaultLine() {
     return (
       <StrictClick onClick={this.isExpandable() ? this.toggleContext : null}>
-        <div className="title">{this.renderDefaultTitle()}</div>
+        <div className="title">
+          {this.renderLeadHint()}
+          {this.renderDefaultTitle()}
+        </div>
       </StrictClick>
     );
   },
@@ -242,6 +261,7 @@ const Frame = React.createClass({
     return (
       <StrictClick onClick={this.isExpandable() ? this.toggleContext : null}>
         <div className="title as-table">
+          {this.renderLeadHint()}
           {defined(data.package)
             ? (
               <span className="package" title={data.package}>
@@ -285,9 +305,10 @@ const Frame = React.createClass({
       'frame': true,
       'is-expandable': this.isExpandable(),
       'expanded': this.state.isExpanded,
+      'collapsed': !this.state.isExpanded,
       'system-frame': !data.inApp,
       'frame-errors': data.errors,
-      'leads-to-app': !data.inApp && this.props.nextFrameInApp
+      'leads-to-app': this.leadsToApp(),
     });
     let props = {className: className};
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
index b17b2c82a0..e82063372c 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktraceContent.jsx
@@ -92,6 +92,12 @@ const StacktraceContent = React.createClass({
     let className = this.props.className || '';
     className += ' traceback';
 
+    if (this.props.includeSystemFrames) {
+      className += ' full-traceback';
+    } else {
+      className += ' in-app-traceback';
+    }
+
     return (
       <div className={className}>
         <ul>{frames}</ul>
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 893338db42..8c89b8bf09 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -969,8 +969,6 @@ div.traceback > ul {
 
     &.system-frame { }
 
-    &.leads-to-app {}
-
     h3 {
       font-size: 22px;
     }
@@ -1239,6 +1237,34 @@ div.traceback > ul {
     }
   }
 
+  &.full-traceback {
+    .leads-to-app-hint {
+      display: none;
+    }
+  }
+
+  &.in-app-traceback .frame.leads-to-app {
+    .leads-to-app-hint {
+      display: none;
+    }
+
+    &.collapsed {
+      .title {
+        opacity: 0.7;
+        font-size: 12px;
+        padding: 4px 20px 4px 20px;
+        background: lighten(@blue-light, 30);
+        &:hover {
+          opacity: 1.0;
+        }
+      }
+      .in-at-line, .lineno, .btn-toggle {
+        display: none;
+      }
+      .leads-to-app-hint { display: inline; }
+    }
+  }
+
   .expandable {
     height: 0;
     overflow: hidden;
