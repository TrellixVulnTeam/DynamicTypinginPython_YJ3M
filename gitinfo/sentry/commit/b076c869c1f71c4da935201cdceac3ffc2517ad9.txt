commit b076c869c1f71c4da935201cdceac3ffc2517ad9
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 16 19:43:40 2015 -0700

    Initial working basic requests (for open membership)

diff --git a/src/sentry/api/endpoints/organization_member_team_details.py b/src/sentry/api/endpoints/organization_member_team_details.py
index 6bacb2e21c..67ef125e90 100644
--- a/src/sentry/api/endpoints/organization_member_team_details.py
+++ b/src/sentry/api/endpoints/organization_member_team_details.py
@@ -80,6 +80,7 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
         if result.get('isActive') is not None:
             omt.is_active = result['isActive']
             omt.save()
+
         return Response({
             'slug': team.slug,
             'isActive': omt.is_active,
diff --git a/src/sentry/models/team.py b/src/sentry/models/team.py
index 5be396c32c..a849599a1e 100644
--- a/src/sentry/models/team.py
+++ b/src/sentry/models/team.py
@@ -34,7 +34,8 @@ class TeamManager(BaseManager):
         OrganizationMemberType value.
         """
         from sentry.models import (
-            AccessGroup, OrganizationMember, OrganizationMemberType, Project
+            AccessGroup, OrganizationMember, OrganizationMemberTeam,
+            OrganizationMemberType, Project
         )
 
         if not user.is_authenticated():
@@ -45,15 +46,25 @@ class TeamManager(BaseManager):
             status=TeamStatus.VISIBLE
         )
 
-        if user.is_superuser:
-            team_list = list(base_team_qs)
-            for team in team_list:
-                team.access_type = OrganizationMemberType.OWNER
+        if user.is_superuser or (settings.SENTRY_PUBLIC and access is None):
+            inactive = list(OrganizationMemberTeam.objects.filter(
+                organizationmember__user=user,
+                organizationmember__organization=organization,
+                is_active=False,
+            ).values_list('team', flat=True))
+
+            team_list = base_team_qs
+            if inactive:
+                team_list = team_list.exclude(id__in=inactive)
+
+            team_list = list(team_list)
 
-        elif settings.SENTRY_PUBLIC and access is None:
-            team_list = list(base_team_qs)
+            if user.is_superuser:
+                access = OrganizationMemberType.OWNER
+            else:
+                access = OrganizationMemberType.MEMBER
             for team in team_list:
-                team.access_type = OrganizationMemberType.MEMBER
+                team.access_type = access
 
         else:
             om_qs = OrganizationMember.objects.filter(
@@ -69,12 +80,20 @@ class TeamManager(BaseManager):
                 team_qs = self.none()
             else:
                 # TODO(dcramer):
+                om_teams = om.teams.filter(
+                    status=TeamStatus.VISIBLE
+                )
+
                 if om.has_global_access:
+                    inactive = list(om_teams.filter(
+                        is_active=False,
+                    ).values_list('team', flat=True))
+
                     team_qs = base_team_qs
+                    if inactive:
+                        team_qs = team_qs.exclude(id__in=inactive)
                 else:
-                    team_qs = om.teams.filter(
-                        status=TeamStatus.VISIBLE
-                    )
+                    team_qs = om_teams
 
                 for team in team_qs:
                     team.access_type = om.type
diff --git a/src/sentry/templates/sentry/organization-home.html b/src/sentry/templates/sentry/organization-home.html
index e983cfc8f4..f118c2892a 100644
--- a/src/sentry/templates/sentry/organization-home.html
+++ b/src/sentry/templates/sentry/organization-home.html
@@ -58,11 +58,19 @@
           <tr>
             <td><h4>{{ team.name }}</h4></td>
             <td style="text-align: right">
-              {% if is_member %}
-                <a class="btn btn-default">Leave Team</a>
-              {% else %}
-                <a class="btn btn-default">Request Access</a>
-              {% endif %}
+              <form method="POST" action="." style="display:inline">
+                {% csrf_token %}
+                <input type="hidden" name="team" value="{{ team.slug }}" />
+                {% if is_member %}
+                  <button name="op" value="leave" type="submit" class="btn btn-default">Leave Team</button>
+                {% else %}
+                  {% if open_membership %}
+                    <button name="op" value="join" type="submit" class="btn btn-primary">Join Team</button>
+                  {% else %}
+                    <button name="op" value="join" type="submit" class="btn btn-primary">Request Access</button>
+                  {% endif %}
+                {% endif %}
+              </form>
             </td>
           </tr>
         {% endfor %}
diff --git a/src/sentry/web/frontend/organization_home.py b/src/sentry/web/frontend/organization_home.py
index e5444e4053..ccf1b987ba 100644
--- a/src/sentry/web/frontend/organization_home.py
+++ b/src/sentry/web/frontend/organization_home.py
@@ -1,6 +1,10 @@
 from __future__ import absolute_import
 
-from sentry.models import Team
+from django.contrib import messages
+from django.http import HttpResponseRedirect
+
+from sentry.api import client
+from sentry.models import OrganizationMember, Team
 from sentry.web.frontend.base import OrganizationView
 
 
@@ -21,6 +25,48 @@ class OrganizationHomeView(OrganizationView):
         context = {
             'active_teams': active_teams,
             'all_teams': all_teams,
+            'open_membership': True,
         }
 
         return self.respond('sentry/organization-home.html', context)
+
+    def post(self, request, organization):
+        op = request.POST.get('op')
+        team = request.POST.get('team')
+
+        om = OrganizationMember.objects.get(
+            user=request.user,
+            organization=organization,
+        )
+
+        if op == 'leave':
+            try:
+                client.put('/organizations/{}/members/{}/teams/{}/'.format(
+                    organization.slug, om.id, team,
+                ), request.user, data={'isActive': False})
+            except client.ApiError:
+                messages.add_message(
+                    request, messages.ERROR,
+                    'We were unable to remove you from the team.',
+                )
+            else:
+                messages.add_message(
+                    request, messages.SUCCESS,
+                    'Your team membership has been deactivated.',
+                )
+        elif op == 'join':
+            try:
+                client.put('/organizations/{}/members/{}/teams/{}/'.format(
+                    organization.slug, om.id, team,
+                ), request.user, data={'isActive': True})
+            except client.ApiError:
+                messages.add_message(
+                    request, messages.ERROR,
+                    'We were unable to join the team.',
+                )
+            else:
+                messages.add_message(
+                    request, messages.SUCCESS,
+                    'Your team membership has been activated.',
+                )
+        return HttpResponseRedirect(request.path)
