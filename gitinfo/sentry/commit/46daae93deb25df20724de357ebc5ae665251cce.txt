commit 46daae93deb25df20724de357ebc5ae665251cce
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Fri May 24 13:25:24 2019 +0200

    ref(unreal): Remove portable callstack parsing (#13385)
    
    Minidump stackwalking should be working well enough for this to no longer be necessary.

diff --git a/src/sentry/lang/native/minidump.py b/src/sentry/lang/native/minidump.py
index e2d37da5c1..64b727f39b 100644
--- a/src/sentry/lang/native/minidump.py
+++ b/src/sentry/lang/native/minidump.py
@@ -27,12 +27,6 @@ def is_minidump_event(data):
     return get_path(exceptions, 0, 'mechanism', 'type') in ('minidump', 'unreal')
 
 
-def is_unreal_exception_stacktrace(data):
-    # TODO(markus): Remove after unreal portable callstacks are parsed in enhancers
-    exceptions = get_path(data, 'exception', 'values', filter=True)
-    return get_path(exceptions, 0, 'mechanism', 'type') == 'unreal'
-
-
 def write_minidump_placeholder(data):
     # Minidump events must be native platform.
     data['platform'] = 'native'
@@ -185,13 +179,6 @@ def merge_symbolicator_minidump_response(data, response):
         if is_requesting:
             data_exception['thread_id'] = thread_id
             data_stacktrace = data_exception.setdefault('stacktrace', {})
-            # Make exemption specifically for unreal portable callstacks
-            # TODO(markus): Allow overriding stacktrace more generically
-            # (without looking into unreal context) once we no longer parse
-            # minidump in the endpoint (right now we can't distinguish that
-            # from user json).
-            if data_stacktrace.get('frames') and is_unreal_exception_stacktrace(data):
-                continue
             data_stacktrace['frames'] = []
         else:
             data_thread['stacktrace'] = data_stacktrace = {'frames': []}
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index ae4612e24b..4c8a301dbb 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -12,7 +12,6 @@ from sentry.cache import default_cache
 from sentry.coreapi import cache_key_for_event
 from sentry.plugins import Plugin2
 from sentry.lang.native.minidump import get_attached_minidump, is_minidump_event, merge_symbolicator_minidump_response
-from sentry.lang.native.unreal import is_unreal_event, reprocess_unreal_crash
 from sentry.lang.native.symbolizer import Symbolizer, SymbolicationFailed
 from sentry.lang.native.symbolicator import run_symbolicator, merge_symbolicator_image, create_minidump_task, handle_symbolicator_response_status
 from sentry.lang.native.utils import get_sdk_from_event, handle_symbolication_failed, cpu_name_from_data, \
@@ -400,9 +399,6 @@ class NativePlugin(Plugin2):
         if is_minidump_event(data):
             rv.append(reprocess_minidump)
 
-        if is_unreal_event(data):
-            rv.append(reprocess_unreal_crash)
-
         return rv
 
     def get_stacktrace_processors(self, data, stacktrace_infos, platforms, **kwargs):
diff --git a/src/sentry/lang/native/unreal.py b/src/sentry/lang/native/unreal.py
index 626209faa7..ab0abe3f6e 100644
--- a/src/sentry/lang/native/unreal.py
+++ b/src/sentry/lang/native/unreal.py
@@ -4,17 +4,6 @@ from sentry.lang.native.minidump import MINIDUMP_ATTACHMENT_TYPE
 from sentry.models import UserReport
 from sentry.utils.safe import set_path, setdefault_path, get_path
 
-import re
-
-_portable_callstack_regexp = re.compile(r'''(?x)
-    (?:^|\s)
-    (?P<package>[^\s]+)
-    \s
-    (?P<baseaddr>0x[\da-fA-F]+)
-    \s\+\s
-    (?P<offset>[\da-fA-F]+)
-''')
-
 
 def is_unreal_event(data):
     """Whether this event is an Unreal crash that should be processed in
@@ -22,35 +11,6 @@ def is_unreal_event(data):
     return get_path(data, 'contexts', 'unreal', 'type') == 'unreal'
 
 
-def reprocess_unreal_crash(data):
-    exception = get_path(data, 'exception', 'values', 0)
-    if len(get_path(exception, 'stacktrace', 'frames', filter=True) or ()) > 1:
-        return
-
-    context = get_path(data, 'contexts', 'unreal')
-    portable_call_stack = get_path(context, 'portable_call_stack')
-
-    if not portable_call_stack:
-        return
-
-    images = get_path(data, 'debug_meta', 'images', filter=True, default=())
-
-    frames = parse_portable_callstack(portable_call_stack, images)
-    if not frames:
-        return
-
-    if not exception:
-        assert not data.get('stacktrace')
-        exception = {'type': 'Unreal'}
-        data['exception'] = {'values': [exception]}
-
-    exception['mechanism'] = {'type': 'unreal', 'handled': False, 'synthetic': True}
-    exception['stacktrace'] = {'frames': frames}
-    exception.pop('raw_stacktrace', None)
-
-    return data
-
-
 def process_unreal_crash(payload, user_id, environment, event):
     """Initial processing of the event from the Unreal Crash Reporter data.
     Processes the raw bytes of the unreal crash by returning a Unreal4Crash"""
@@ -129,40 +89,6 @@ def merge_apple_crash_report(apple_crash_report, event):
     event.setdefault('debug_meta', {})['images'] = images
 
 
-def parse_portable_callstack(portable_callstack, images):
-    frames = []
-    for match in _portable_callstack_regexp.finditer(portable_callstack):
-        baseaddr = int(match.group('baseaddr'), 16)
-        offset = int(match.group('offset'), 16)
-        # Crashes without PDB in the client report: 0x00000000ffffffff + ffffffff
-        if baseaddr == 0xffffffff and offset == 0xffffffff:
-            continue
-
-        package_re = re.escape(match.group('package')) + r"(\.dll|\.exe)?$"
-        image = next((
-            image for image in images
-            if image.get('code_file')
-            and re.search(package_re, image['code_file'], re.IGNORECASE)
-        ), {})
-
-        # baseaddr reported in the pcallstack missing most relevant bits:
-        # i.e: 0x0000000080db0000
-        # The image address should be used instead with the offset:
-        image_addr = image.get('image_addr')
-        if image_addr:
-            # Rebase with the image address if available.
-            baseaddr = int(image_addr, 16)
-
-        frames.append({
-            'package': image.get('code_file') or match.group('package'),
-            'instruction_addr': hex(baseaddr + offset),
-            'trust': 'prewalked',
-        })
-
-    frames.reverse()
-    return frames
-
-
 def merge_unreal_context_event(unreal_context, event, project):
     """Merges the context from an Unreal Engine 4 crash
     with the given event."""
diff --git a/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_apple_crash_with_attachments.pysnap b/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_apple_crash_with_attachments.pysnap
index 170a0c3ea4..f166957806 100644
--- a/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_apple_crash_with_attachments.pysnap
+++ b/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_apple_crash_with_attachments.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-05-22T09:06:38.138552Z'
+created: '2019-05-24T09:16:55.810879Z'
 creator: sentry
 source: tests/symbolicator/test_unreal_full.py
 ---
@@ -105,145 +105,7 @@ contexts:
     seconds_since_start: 0
     time_of_crash: 636826526632420000
     type: unreal
-exception:
-  values:
-  - mechanism:
-      handled: false
-      synthetic: true
-      type: unreal
-    raw_stacktrace:
-      frames:
-      - in_app: false
-        instruction_addr: '0x7fff30932234'
-        package: /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x1095aab27'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x108b6fd8e'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x108b65169'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x108b55d76'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10c28647e'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10c2a6f41'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10ce48e4a'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10ce4f8f5'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10cfadb9e'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10c2e4621'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10cfe80be'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10bc5eb21'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10bc5fc29'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10bc3b85b'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x1090a0132'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-    stacktrace:
-      frames:
-      - in_app: false
-        instruction_addr: '0x7fff30932234'
-        package: /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x1095aab27'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x108b6fd8e'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x108b65169'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x108b55d76'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10c28647e'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10c2a6f41'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10ce48e4a'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10ce4f8f5'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10cfadb9e'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10c2e4621'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10cfe80be'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10bc5eb21'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10bc5fc29'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x10bc3b85b'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-      - in_app: true
-        instruction_addr: '0x1090a0132'
-        package: /Users/bruno/Documents/Unreal Projects/YetAnotherMac/MacNoEditor/YetAnotherMac.app/Contents/MacOS/YetAnotherMac
-        trust: prewalked
-    type: Unreal
+exception: null
 extra: null
 stacktrace: null
 threads:
diff --git a/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_crash_with_attachments.pysnap b/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_crash_with_attachments.pysnap
index aa350af8ac..6c9f110cb4 100644
--- a/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_crash_with_attachments.pysnap
+++ b/tests/symbolicator/snapshots/SymbolicatorUnrealIntegrationTest/test_unreal_crash_with_attachments.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-05-22T09:06:42.168164Z'
+created: '2019-05-24T09:16:59.256685Z'
 creator: sentry
 source: tests/symbolicator/test_unreal_full.py
 ---
@@ -104,167 +104,9 @@ exception:
   - mechanism:
       handled: false
       synthetic: true
-      type: unreal
-    raw_stacktrace:
-      frames:
-      - in_app: false
-        instruction_addr: '0x7ffe100d1471'
-        package: C:\Windows\System32\ntdll.dll
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ffe0fd53034'
-        package: C:\Windows\System32\kernel32.dll
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff7589c73c6'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff7548229e6'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754814eaa'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754814e4c'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754805258'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff7571fcd39'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff75739984f'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff75739082f'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757aafb58'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757aa121d'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754d8cf00'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754d8cc56'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757a56186'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757a3e77e'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff756f2f984'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff756f06dd3'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff756cff2ee'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754be3394'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
+      type: minidump
     stacktrace:
       frames:
-      - in_app: false
-        instruction_addr: '0x7ffe100d1471'
-        package: C:\Windows\System32\ntdll.dll
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ffe0fd53034'
-        package: C:\Windows\System32\kernel32.dll
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff7589c73c6'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff7548229e6'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754814eaa'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754814e4c'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754805258'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff7571fcd39'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff75739984f'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff75739082f'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757aafb58'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757aa121d'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754d8cf00'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff754d8cc56'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757a56186'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff757a3e77e'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff756f2f984'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff756f06dd3'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
-      - in_app: false
-        instruction_addr: '0x7ff756cff2ee'
-        package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
-        trust: prewalked
       - data:
           symbolicator_status: symbolicated
         function: AActor::IsPendingKillPending
@@ -273,7 +115,25 @@ exception:
         package: \\Mac\Home\Desktop\WindowsNoEditor\YetAnother\Binaries\Win64\YetAnother.exe
         raw_function: AActor::IsPendingKillPending()
         symbol: AActor::IsPendingKillPending()
-        trust: prewalked
+        trust: context
+      registers:
+        r10: '0x7ffef000'
+        r11: '0x23d82c75ab0'
+        r12: '0x23d82c7d000'
+        r13: '0x3'
+        r14: '0x23df8f48bc0'
+        r15: '0x23df9a35d48'
+        r8: '0x8c3f2cd401'
+        r9: '0x7ffe03a9c86e'
+        rax: '0x64'
+        rbp: '0x8c3f2cd650'
+        rbx: '0x0'
+        rcx: '0x0'
+        rdi: '0x1'
+        rdx: '0x0'
+        rip: '0x7ff754be3394'
+        rsi: '0x0'
+        rsp: '0x8c3f2cd4c0'
     thread_id: 6900
     type: EXCEPTION_ACCESS_VIOLATION_READ
     value: 'Fatal Error: EXCEPTION_ACCESS_VIOLATION_READ'
diff --git a/tests/symbolicator/snapshots/test_unreal/test_parse_portable_callstack.pysnap b/tests/symbolicator/snapshots/test_unreal/test_parse_portable_callstack.pysnap
deleted file mode 100644
index b2126babc4..0000000000
--- a/tests/symbolicator/snapshots/test_unreal/test_parse_portable_callstack.pysnap
+++ /dev/null
@@ -1,20 +0,0 @@
----
-created: '2019-04-25T13:52:31.678000Z'
-creator: sentry
-source: tests/symbolicator/test_unreal.py
----
-- instruction_addr: '0x7ff8b7293691'
-  package: C:\Windows\System32\ntdll.dll
-  trust: prewalked
-- instruction_addr: '0x7ff8b5aa3034'
-  package: C:\Windows\System32\kernel32.dll
-  trust: prewalked
-- instruction_addr: '0x7ff84e1e0a28'
-  package: C:\Unreal\UE4Editor-Renderer.dll
-  trust: prewalked
-- instruction_addr: '0x7ff84e1e3ee2'
-  package: C:\Unreal\UE4Editor-Renderer.dll
-  trust: prewalked
-- instruction_addr: '0x7ff881116998'
-  package: C:\Unreal\UE4Editor-ShaderCore.dll
-  trust: prewalked
diff --git a/tests/symbolicator/test_unreal.py b/tests/symbolicator/test_unreal.py
index 95f14c880c..db5a8f6622 100644
--- a/tests/symbolicator/test_unreal.py
+++ b/tests/symbolicator/test_unreal.py
@@ -5,8 +5,7 @@ import os
 from sentry.testutils import TestCase
 from sentry.lang.native.minidump import MINIDUMP_ATTACHMENT_TYPE
 from sentry.lang.native.unreal import process_unreal_crash, unreal_attachment_type, \
-    merge_unreal_context_event, merge_unreal_logs_event, merge_apple_crash_report, \
-    parse_portable_callstack
+    merge_unreal_context_event, merge_unreal_logs_event, merge_apple_crash_report
 from sentry.models import UserReport
 
 
@@ -142,55 +141,3 @@ class UnrealIntegrationTest(TestCase):
             unreal_crash = process_unreal_crash(f.read(), None, None, event)
             merge_apple_crash_report(unreal_crash.get_apple_crash_report(), event)
             self.insta_snapshot(event)
-
-
-def test_parse_portable_callstack(insta_snapshot):
-    portable_callstack = (
-        'UE4Editor-ShaderCore 0x0000000081060000 + b6998 '
-        'UE4Editor-Renderer 0x000000004da80000 + 763ee2 '
-        'UE4Editor-Renderer 0x000000004da80000 + 760a28 '
-        'KERNEL32 0x00000000b5a90000 + 13034 '
-        'ntdll 0x00000000b7220000 + 73691'
-    )
-
-    images = [
-        {
-            "code_file": "C:\\Unreal\\UE4Editor-ShaderCore.dll",
-            "code_id": "5CB4A59512a000",
-            "image_addr": "0x7ff881060000",
-            "debug_file": "UE4Editor-ShaderCore.pdb",
-            "image_size": 1220608,
-            "type": "pe",
-            "debug_id": "19978799-526a-4d94-a18d-4a18ea7e989f-1"
-        },
-        {
-            "code_file": "C:\\Unreal\\UE4Editor-Renderer.dll",
-            "code_id": "5CB4A5A6e77000",
-            "image_addr": "0x7ff84da80000",
-            "debug_file": "UE4Editor-Renderer.pdb",
-            "image_size": 15167488,
-            "type": "pe",
-            "debug_id": "70bad0d5-0da7-459c-b854-0bb41a753eac-1"
-        },
-        {
-            "code_file": "C:\\Windows\\System32\\kernel32.dll",
-            "code_id": "5F488A51b2000",
-            "image_addr": "0x7ff8b5a90000",
-            "debug_file": "kernel32.pdb",
-            "image_size": 729088,
-            "type": "pe",
-            "debug_id": "63816243-ec70-4dc0-91bc-31470bac48a3-1"
-        },
-        {
-            "code_file": "C:\\Windows\\System32\\ntdll.dll",
-            "code_id": "7E614C221e1000",
-            "image_addr": "0x7ff8b7220000",
-            "debug_file": "ntdll.pdb",
-            "image_size": 1970176,
-            "type": "pe",
-            "debug_id": "338c83b3-1707-66b1-728d-0b2ff2f39588-1"
-        },
-    ]
-
-    frames = parse_portable_callstack(portable_callstack, images)
-    insta_snapshot(frames)
