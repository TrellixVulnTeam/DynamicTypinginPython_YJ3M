commit cb05ef36e581008a9cca240a36269d965b0cf709
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jun 10 22:45:32 2014 -0700

    Remove excess logic from team settings

diff --git a/src/sentry/templates/sentry/teams/manage.html b/src/sentry/templates/sentry/teams/manage.html
index cf88e6cb42..5f8b5bd14a 100644
--- a/src/sentry/templates/sentry/teams/manage.html
+++ b/src/sentry/templates/sentry/teams/manage.html
@@ -28,37 +28,22 @@
 
               <fieldset>
                   {% for field in form %}
-                      {% if field.name != 'owner' %}
-                          {{ field|as_crispy_field }}
-                      {% endif %}
+                        {{ field|as_crispy_field }}
                   {% endfor %}
               </fieldset>
 
-              {% if form.owner %}
-                  <fieldset>
-                      <p>If you wish to transfer ownership of this project, enter the new owner's username:</p>
-                      {{ form.owner|as_crispy_field }}
-                  </fieldset>
-              {% endif %}
-
               <div class="form-actions">
                   <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
-                  {% if can_remove_team %}
-                      <a href="{% url 'sentry-remove-team' team.slug %}" class="btn btn-danger">{% trans "Remove Team" %}</a>
-                  {% else %}
-                      <div class="pull-right note">{% trans "You cannot remove this team because it has projects assigned to it" %}</div>
-                  {% endif %}
               </div>
           </form>
       </div>
   </div>
   {% endblock %}
 
-
-    <script type="text/javascript">
-        require(['config', 'app/init'], function(_, app){
-            new app.TeamDetailsPage();
-        });
-    </script>
+  <script type="text/javascript">
+      require(['config', 'app/init'], function(_, app){
+          new app.TeamDetailsPage();
+      });
+  </script>
 
 {% endblock %}
diff --git a/src/sentry/web/forms/teams.py b/src/sentry/web/forms/teams.py
index 56b3a6ad6b..2b9bbef7cc 100644
--- a/src/sentry/web/forms/teams.py
+++ b/src/sentry/web/forms/teams.py
@@ -41,10 +41,8 @@ class EditTeamForm(forms.ModelForm):
 
 
 class EditTeamAdminForm(EditTeamForm):
-    owner = UserField(required=True)
-
     class Meta:
-        fields = ('name', 'slug', 'owner',)
+        fields = ('name', 'slug',)
         model = Team
 
     def clean_slug(self):
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index d6a0e0dc74..40693dc946 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -25,7 +25,7 @@ from sentry.utils.samples import create_sample_event
 from sentry.web.decorators import login_required, has_access
 from sentry.web.forms.teams import (
     NewTeamForm, NewTeamAdminForm,
-    EditTeamForm, EditTeamAdminForm, EditTeamMemberForm, NewTeamMemberForm,
+    EditTeamForm, EditTeamMemberForm, NewTeamMemberForm,
     InviteTeamMemberForm, RemoveTeamForm, AcceptInviteForm, NewAccessGroupForm,
     EditAccessGroupForm, NewAccessGroupMemberForm, NewAccessGroupProjectForm,
     RemoveAccessGroupForm)
@@ -81,36 +81,11 @@ def manage_team(request, team):
     if result is False and not request.user.is_superuser:
         return HttpResponseRedirect(reverse('sentry'))
 
-    can_admin_team = request.user == team.owner or request.user.is_superuser
-
-    if can_admin_team:
-        form_cls = EditTeamAdminForm
-    else:
-        form_cls = EditTeamForm
-
-    form = form_cls(request.POST or None, initial={
+    form = EditTeamForm(request.POST or None, initial={
         'owner': team.owner,
     }, instance=team)
-
-    # XXX: form.is_valid() changes the foreignkey
-    original_owner = team.owner
     if form.is_valid():
-
         team = form.save()
-        if team.owner != original_owner:
-            # Update access for new membership if it's changed
-            # (e.g. member used to be USER, but is now OWNER)
-            TeamMember.objects.create_or_update(
-                user=team.owner,
-                team=team,
-                defaults={
-                    'type': MEMBER_OWNER,
-                }
-            )
-            team.project_set.update(
-                owner=team.owner,
-            )
-
         messages.add_message(request, messages.SUCCESS,
             _('Changes to your team were saved.'))
 
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 3529227e12..aa76958f17 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -109,30 +109,12 @@ class ManageTeamTest(BaseTeamTest):
         resp = self.client.post(self.path, {
             'name': 'bar',
             'slug': self.team.slug,
-            'owner': self.team.owner.username,
         })
         assert resp.status_code == 302
         self.assertEquals(resp['Location'], 'http://testserver' + self.path)
         team = Team.objects.get(pk=self.team.pk)
         self.assertEquals(team.name, 'bar')
 
-    def test_superuser_can_set_owner(self):
-        resp = self.client.post(self.path, {
-            'name': self.team.name,
-            'slug': self.team.slug,
-            'owner': self.user2.username,
-        })
-        assert resp.status_code == 302
-
-        team = Team.objects.get(id=self.team.id)
-
-        assert team.owner == self.user2
-
-        members = [(t.user, t.type) for t in self.team.member_set.all()]
-
-        assert (self.user2, MEMBER_OWNER) in members
-        assert (self.user, MEMBER_OWNER) in members
-
 
 class RemoveTeamTest(BaseTeamTest):
     @fixture
