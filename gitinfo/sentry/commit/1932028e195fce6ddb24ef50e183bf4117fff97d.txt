commit 1932028e195fce6ddb24ef50e183bf4117fff97d
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Mar 16 11:30:28 2020 -0700

    chore(ts): Convert pullRequestLink (#17683)

diff --git a/src/sentry/static/sentry/app/components/pullRequestLink.jsx b/src/sentry/static/sentry/app/components/pullRequestLink.jsx
deleted file mode 100644
index b33f5c28c4..0000000000
--- a/src/sentry/static/sentry/app/components/pullRequestLink.jsx
+++ /dev/null
@@ -1,61 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import ExternalLink from 'app/components/links/externalLink';
-import {IconBitbucket, IconGithub, IconGitlab} from 'app/icons';
-
-class PullRequestLink extends React.Component {
-  static propTypes = {
-    pullRequest: PropTypes.object,
-    repository: PropTypes.object,
-    inline: PropTypes.bool,
-  };
-
-  get providerId() {
-    if (!this.props.repository.provider) {
-      return null;
-    }
-
-    const id = this.props.repository.provider.id;
-    if (id.indexOf(':') > -1) {
-      return id.split(':').pop();
-    }
-    return id;
-  }
-
-  renderIcon() {
-    const providerId = this.providerId;
-
-    switch (providerId) {
-      case 'github':
-        return <IconGithub size="xs" />;
-      case 'gitlab':
-        return <IconGitlab size="xs" />;
-      case 'bitbucket':
-        return <IconBitbucket size="xs" />;
-      default:
-        return null;
-    }
-  }
-
-  render() {
-    const {pullRequest, repository} = this.props;
-    const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;
-
-    return pullRequest.externalUrl ? (
-      <ExternalLink
-        className={this.props.inline ? 'inline-commit' : 'btn btn-default btn-sm'}
-        href={pullRequest.externalUrl}
-        target="_blank"
-      >
-        {this.renderIcon()}
-        {this.props.inline ? '' : ' '}
-        {displayId}
-      </ExternalLink>
-    ) : (
-      <span>{displayId}</span>
-    );
-  }
-}
-
-export default PullRequestLink;
diff --git a/src/sentry/static/sentry/app/components/pullRequestLink.tsx b/src/sentry/static/sentry/app/components/pullRequestLink.tsx
new file mode 100644
index 0000000000..329bac3090
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/pullRequestLink.tsx
@@ -0,0 +1,50 @@
+import React from 'react';
+
+import ExternalLink from 'app/components/links/externalLink';
+import {IconBitbucket, IconGithub, IconGitlab} from 'app/icons';
+import {Repository, PullRequest} from 'app/types';
+
+function renderIcon(repo: Repository) {
+  if (!repo.provider) {
+    return null;
+  }
+
+  const {id} = repo.provider;
+  const providerId = id.includes(':') ? id.split(':').pop() : id;
+
+  switch (providerId) {
+    case 'github':
+      return <IconGithub size="xs" />;
+    case 'gitlab':
+      return <IconGitlab size="xs" />;
+    case 'bitbucket':
+      return <IconBitbucket size="xs" />;
+    default:
+      return null;
+  }
+}
+
+type Props = {
+  pullRequest: PullRequest;
+  repository: Repository;
+  inline?: boolean;
+};
+
+const PullRequestLink = ({pullRequest, repository, inline}: Props) => {
+  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;
+
+  return pullRequest.externalUrl ? (
+    <ExternalLink
+      className={inline ? 'inline-commit' : 'btn btn-default btn-sm'}
+      href={pullRequest.externalUrl}
+    >
+      {renderIcon(repository)}
+      {inline ? '' : ' '}
+      {displayId}
+    </ExternalLink>
+  ) : (
+    <span>{displayId}</span>
+  );
+};
+
+export default PullRequestLink;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index d885ffe440..dd379224be 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -573,6 +573,7 @@ export type Repository = {
   status: RepositoryStatus;
   url: string;
 };
+
 export enum RepositoryStatus {
   ACTIVE = 'active',
   DISABLED = 'disabled',
@@ -581,6 +582,12 @@ export enum RepositoryStatus {
   DELETION_IN_PROGRESS = 'deletion_in_progress',
 }
 
+export type PullRequest = {
+  id: string;
+  title: string;
+  externalUrl: string;
+};
+
 type BaseIntegrationProvider = {
   key: string;
   slug: string;
@@ -1006,6 +1013,8 @@ export enum ResolutionStatus {
   UNRESOLVED = 'unresolved',
 }
 export type ResolutionStatusDetails = {
+  actor?: AvatarUser;
+  inCommit?: Commit;
   inRelease?: string;
   inNextRelease?: boolean;
 };
