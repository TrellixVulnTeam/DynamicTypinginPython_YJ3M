commit fe4260d4faf8207b88fd70fd328d49a96f7a3fdb
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 20 22:00:40 2013 -0800

    Add syntax highlighting to source code

diff --git a/setup.py b/setup.py
index 6c7db32f51..23a9bb6f8a 100755
--- a/setup.py
+++ b/setup.py
@@ -61,6 +61,7 @@ install_requires = [
     'django-templatetag-sugar>=0.1.0',
     'gunicorn>=0.14.6',
     'logan>=0.5.4',
+    'Pygments>=1.5',
     'pynliner>=0.4.0',
     'python-dateutil>=1.5.0,<2.0.0',
     'raven>=3.0.0',
diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index b5ae474874..ff061469ec 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -12,24 +12,40 @@ validated and rendered.
 import itertools
 import urlparse
 
+from pygments import highlight
+from pygments.lexers import (TextLexer, PythonLexer, RubyLexer, ObjectiveCLexer,
+    GoLexer, ErlangLexer, JavaLexer, JavascriptLexer)
+from pygments.formatters import HtmlFormatter
+
 from django.http import QueryDict
+from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext as _
 
 from sentry.app import env
 from sentry.models import UserOption
 from sentry.web.helpers import render_to_string
 
-
 _Exception = Exception
 
 
+LEXERS = {
+    'erlang': ErlangLexer,
+    'java': JavaLexer,
+    'javascript': JavascriptLexer,
+    'go': GoLexer,
+    'objc': ObjectiveCLexer,
+    'python': PythonLexer,
+    'ruby': RubyLexer,
+}
+
+
 def unserialize(klass, data):
     value = object.__new__(klass)
     value.__setstate__(data)
     return value
 
 
-def get_context(lineno, context_line, pre_context=None, post_context=None):
+def get_context(lineno, context_line, pre_context=None, post_context=None, lang=None):
     lineno = int(lineno)
     context = []
     start_lineno = lineno - len(pre_context or [])
@@ -51,6 +67,10 @@ def get_context(lineno, context_line, pre_context=None, post_context=None):
             context.append((at_lineno, line))
             at_lineno += 1
 
+    lexer = LEXERS.get(lang, TextLexer)()
+    formatter = HtmlFormatter()
+    context = tuple((n, mark_safe(highlight(l, lexer, formatter))) for n, l in context)
+
     return context
 
 
@@ -333,7 +353,13 @@ class Stacktrace(Interface):
         frames = []
         for frame in self.frames:
             if frame.get('context_line') and frame.get('lineno') is not None:
-                context = get_context(frame['lineno'], frame['context_line'], frame.get('pre_context'), frame.get('post_context'))
+                context = get_context(
+                    lineno=frame['lineno'],
+                    context_line=frame['context_line'],
+                    pre_context=frame.get('pre_context'),
+                    post_context=frame.get('post_context'),
+                    lang=event.platform,
+                )
                 start_lineno = context[0][0]
             else:
                 context = []
diff --git a/src/sentry/static/sentry/less/pygments.less b/src/sentry/static/sentry/less/pygments.less
new file mode 100644
index 0000000000..7f22942cb1
--- /dev/null
+++ b/src/sentry/static/sentry/less/pygments.less
@@ -0,0 +1,62 @@
+.highlight .hll { background-color: #ffffcc }
+.highlight .c { color: #408080; font-style: italic } /* Comment */
+.highlight .err { border: 1px solid #FF0000 } /* Error */
+.highlight .k { color: #008000; font-weight: bold } /* Keyword */
+.highlight .o { color: #666666 } /* Operator */
+.highlight .cm { color: #408080; font-style: italic } /* Comment.Multiline */
+.highlight .cp { color: #BC7A00 } /* Comment.Preproc */
+.highlight .c1 { color: #408080; font-style: italic } /* Comment.Single */
+.highlight .cs { color: #408080; font-style: italic } /* Comment.Special */
+.highlight .gd { color: #A00000 } /* Generic.Deleted */
+.highlight .ge { font-style: italic } /* Generic.Emph */
+.highlight .gr { color: #FF0000 } /* Generic.Error */
+.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
+.highlight .gi { color: #00A000 } /* Generic.Inserted */
+.highlight .go { color: #888888 } /* Generic.Output */
+.highlight .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
+.highlight .gs { font-weight: bold } /* Generic.Strong */
+.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
+.highlight .gt { color: #0044DD } /* Generic.Traceback */
+.highlight .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
+.highlight .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
+.highlight .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
+.highlight .kp { color: #008000 } /* Keyword.Pseudo */
+.highlight .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
+.highlight .kt { color: #B00040 } /* Keyword.Type */
+.highlight .m { color: #666666 } /* Literal.Number */
+.highlight .s { color: #BA2121 } /* Literal.String */
+.highlight .na { color: #7D9029 } /* Name.Attribute */
+.highlight .nb { color: #008000 } /* Name.Builtin */
+.highlight .nc { color: #0000FF; font-weight: bold } /* Name.Class */
+.highlight .no { color: #880000 } /* Name.Constant */
+.highlight .nd { color: #AA22FF } /* Name.Decorator */
+.highlight .ni { color: #999999; font-weight: bold } /* Name.Entity */
+.highlight .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
+.highlight .nf { color: #0000FF } /* Name.Function */
+.highlight .nl { color: #A0A000 } /* Name.Label */
+.highlight .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
+.highlight .nt { color: #008000; font-weight: bold } /* Name.Tag */
+.highlight .nv { color: #19177C } /* Name.Variable */
+.highlight .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
+.highlight .w { color: #bbbbbb } /* Text.Whitespace */
+.highlight .mf { color: #666666 } /* Literal.Number.Float */
+.highlight .mh { color: #666666 } /* Literal.Number.Hex */
+.highlight .mi { color: #666666 } /* Literal.Number.Integer */
+.highlight .mo { color: #666666 } /* Literal.Number.Oct */
+.highlight .sb { color: #BA2121 } /* Literal.String.Backtick */
+.highlight .sc { color: #BA2121 } /* Literal.String.Char */
+.highlight .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
+.highlight .s2 { color: #BA2121 } /* Literal.String.Double */
+.highlight .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
+.highlight .sh { color: #BA2121 } /* Literal.String.Heredoc */
+.highlight .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
+.highlight .sx { color: #008000 } /* Literal.String.Other */
+.highlight .sr { color: #BB6688 } /* Literal.String.Regex */
+.highlight .s1 { color: #BA2121 } /* Literal.String.Single */
+.highlight .ss { color: #19177C } /* Literal.String.Symbol */
+.highlight .bp { color: #008000 } /* Name.Builtin.Pseudo */
+.highlight .vc { color: #19177C } /* Name.Variable.Class */
+.highlight .vg { color: #19177C } /* Name.Variable.Global */
+.highlight .vi { color: #19177C } /* Name.Variable.Instance */
+.highlight .il { color: #666666 } /* Literal.Number.Integer.Long */
+.highlight .hll { background-color: #ffffcc }
diff --git a/src/sentry/static/sentry/less/sentry.less b/src/sentry/static/sentry/less/sentry.less
index 4039d9a77a..6b3b69c0de 100644
--- a/src/sentry/static/sentry/less/sentry.less
+++ b/src/sentry/static/sentry/less/sentry.less
@@ -1,6 +1,7 @@
 @import url("../bootstrap/less/bootstrap.less");
 @import url("datepicker.less");
 @import url("github.less");
+@import url("pygments.less");
 
 @baseFontSize: 13px;
 @grayDark: #404f60;
@@ -957,7 +958,6 @@ ul.traceback { list-style-type: none; margin-left: 0; }
   }
 }
 
-
 .expandable {
   height: 0;
   overflow: hidden;
@@ -990,12 +990,11 @@ ol.context {
 
   > li {
     padding-left: 20px;
-    font-family:monospace;
-    white-space:pre;
-    color:rgba(0,0,0,.75);
-    background-color: #f5f5f5;
+    font-family: monospace;
+    color: rgba(0,0,0,.75);
+    background-color: #f8f8f8;
 
-    > pre {
+    pre {
       background-color: inherit;
       color: rgba(0,0,0,.5);
       margin: 0;
@@ -1010,7 +1009,7 @@ ol.context {
     }
   }
   > li.active {
-    background-color: #ddd;
+    background-color: #e8e8e8;
 
     pre {
       color: @black;
@@ -1019,9 +1018,9 @@ ol.context {
 
   &:hover {
     li {
-      background-color: #f0f0f0;
+      background-color: #f3f3f3;
       &.active {
-        background-color: #d3d3d3;
+        background-color: #e0e0e0;
       }
     }
   }
diff --git a/src/sentry/static/sentry/styles/sentry.css b/src/sentry/static/sentry/styles/sentry.css
index 0a4e94ab08..07e365dba4 100644
--- a/src/sentry/static/sentry/styles/sentry.css
+++ b/src/sentry/static/sentry/styles/sentry.css
@@ -6647,19 +6647,6 @@ ol.context > li {
   color: rgba(0, 0, 0, 0.75);
   background-color: #f5f5f5;
 }
-ol.context > li > pre {
-  background-color: inherit;
-  color: rgba(0, 0, 0, 0.5);
-  margin: 0;
-  padding: 0;
-  border: 0;
-  display: inline;
-  line-height: 20px;
-  font-size: 12px;
-  white-space: pre;
-  white-space: pre-wrap;
-  word-wrap: break-word;
-}
 ol.context > li.active {
   background-color: #ddd;
 }
diff --git a/src/sentry/templates/sentry/partial/interfaces/stacktrace.html b/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
index 4b6e46f74d..6b0e40236d 100644
--- a/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
+++ b/src/sentry/templates/sentry/partial/interfaces/stacktrace.html
@@ -40,7 +40,7 @@
                     {% if frame.context %}
                         <ol start="{{ frame.start_lineno }}" class="context">
                         {% for num, line in frame.context %}
-                            <li{% if num == frame.lineno %} class="active"{% else %} class="expandable"{% endif %} onclick="$('.frame-{{ forloop.parentloop.counter0 }}').toggleClass('expanded')"><pre>{{ line|default_if_none:"<i>No line</i>" }}</pre></li>
+                            <li{% if num == frame.lineno %} class="active"{% else %} class="expandable"{% endif %} onclick="$('.frame-{{ forloop.parentloop.counter0 }}').toggleClass('expanded')">{{ line }}</li>
                         {% endfor %}
                         </ol>
                     {% endif %}
diff --git a/src/sentry/templates/sentry/partial/interfaces/template.html b/src/sentry/templates/sentry/partial/interfaces/template.html
index 6a1402d27e..51cd50f820 100644
--- a/src/sentry/templates/sentry/partial/interfaces/template.html
+++ b/src/sentry/templates/sentry/partial/interfaces/template.html
@@ -14,7 +14,7 @@
 
             <ol start="{{ start_lineno }}" class="context">
                 {% for num, line in context %}
-                    <li class="{% if num == lineno %} active{% else %} expandable{% endif %}" onclick="$('#template .module-content').toggleClass('expanded')"><pre>{{ line }}</pre></li>
+                    <li class="{% if num == lineno %} active{% else %} expandable{% endif %}" onclick="$('#template .module-content').toggleClass('expanded')">{{ line }}</li>
                 {% endfor %}
             </ol>
         {% endif %}
