commit 04f9063cb4ec159280e1175eed6433b3e297d2c7
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Sat Dec 8 09:18:03 2018 -0800

    fix(events-stream): Fix initial search query and search query results in charts (#10979)
    
    Fixes APP-880

diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
index 75e37285f2..f742affa36 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
@@ -1,4 +1,4 @@
-import {pick, isDate, isEqualWith} from 'lodash';
+import {pick, isDate, isEqual, isEqualWith} from 'lodash';
 import {withRouter} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
@@ -35,6 +35,7 @@ class EventsChart extends React.Component {
     organization: SentryTypes.Organization,
     actions: PropTypes.object,
     period: PropTypes.string,
+    query: PropTypes.string,
     start: PropTypes.instanceOf(Date),
     end: PropTypes.instanceOf(Date),
     utc: PropTypes.bool,
@@ -59,6 +60,15 @@ class EventsChart extends React.Component {
     const periodKeys = ['period', 'start', 'end'];
     const nextPeriod = pick(nextProps, periodKeys);
     const currentPeriod = pick(this.props, periodKeys);
+    const otherKeys = ['query', 'project', 'environment'];
+
+    // Exception for these parameters -- needs to re-render chart
+    if (
+      !nextProps.zoom &&
+      !isEqual(pick(nextProps, otherKeys), pick(this.props, otherKeys))
+    ) {
+      return true;
+    }
 
     // do not update if we are zooming or if period via props does not change
     if (nextProps.zoom || isEqualWithDates(currentPeriod, nextPeriod)) {
@@ -211,7 +221,7 @@ class EventsChart extends React.Component {
   };
 
   render() {
-    const {period, utc, location} = this.props;
+    const {period, utc, query} = this.props;
 
     let interval = '1d';
     let xAxisOptions = {};
@@ -230,7 +240,7 @@ class EventsChart extends React.Component {
           {...this.props}
           interval={interval}
           showLoading
-          query={(location.query && location.query.query) || ''}
+          query={query}
           getCategory={DEFAULT_GET_CATEGORY}
           includePrevious={!!period}
         >
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
index cdb40d1a24..851e1b20dc 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
@@ -89,6 +89,7 @@ class OrganizationEventsContainer extends React.Component {
       project,
       environment,
       period: query.statsPeriod || (hasAbsolute ? null : DEFAULT_STATS_PERIOD),
+      query: query.query || null,
       start: start || null,
       end: end || null,
 
@@ -197,16 +198,16 @@ class OrganizationEventsContainer extends React.Component {
     let {router, location} = this.props;
     router.push({
       pathname: location.pathname,
-      query: {
+      query: getParams({
         ...(location.query || {}),
         query,
         zoom: null,
-      },
+      }),
     });
   };
 
   render() {
-    const {organization, children} = this.props;
+    const {organization, location, children} = this.props;
     const {period, start, end, utc} = this.state;
 
     const projects =
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx
index 5f5056dcde..870b66c9a3 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import {DEFAULT_STATS_PERIOD, DEFAULT_USE_UTC} from 'app/constants';
 
 const EventsContext = React.createContext({
+  query: null,
   project: [],
   environment: [],
   period: DEFAULT_STATS_PERIOD,
diff --git a/tests/js/spec/views/organizationEvents/events.spec.jsx b/tests/js/spec/views/organizationEvents/events.spec.jsx
index 5d1157e927..94c90a1298 100644
--- a/tests/js/spec/views/organizationEvents/events.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/events.spec.jsx
@@ -164,6 +164,7 @@ describe('OrganizationEventsErrors', function() {
           router={router}
           organization={org}
           selection={{projects: []}}
+          location={location}
         >
           <OrganizationEvents
             location={location}
diff --git a/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx b/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx
index 7ebd43517f..3771405429 100644
--- a/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/eventsChart.spec.jsx
@@ -42,10 +42,16 @@ describe('EventsChart', function() {
     expect(render).toHaveBeenCalledTimes(2);
   });
 
+  it('re-renders if query from props changes', function() {
+    wrapper.setProps({query: 'newQuery'});
+    wrapper.update();
+    expect(render).toHaveBeenCalledTimes(2);
+  });
+
   it('re-renders if project from props changes', function() {
     wrapper.setProps({project: [2]});
     wrapper.update();
-    expect(render).toHaveBeenCalledTimes(1);
+    expect(render).toHaveBeenCalledTimes(2);
   });
 
   it('does not re-render if zoomed', function() {
diff --git a/tests/js/spec/views/organizationEvents/index.spec.jsx b/tests/js/spec/views/organizationEvents/index.spec.jsx
index caeb147966..f5b7c21ce7 100644
--- a/tests/js/spec/views/organizationEvents/index.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/index.spec.jsx
@@ -42,6 +42,7 @@ describe('OrganizationEvents', function() {
           router={router}
           organization={organization}
           selection={{projects: []}}
+          location={router.location}
         >
           <div />
         </OrganizationEventsContainer>,
