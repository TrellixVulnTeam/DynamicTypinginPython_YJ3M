commit 90b1274b2ae18525c0a7a30ed5b8492209ed22e1
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Fri Nov 22 16:06:13 2019 -0500

    fix(discover2): Add loading indicators for the minigraphs (#15771)

diff --git a/src/sentry/static/sentry/app/components/loading/loadingContainer.tsx b/src/sentry/static/sentry/app/components/loading/loadingContainer.tsx
index 33e7e0af81..4c3ff4441c 100644
--- a/src/sentry/static/sentry/app/components/loading/loadingContainer.tsx
+++ b/src/sentry/static/sentry/app/components/loading/loadingContainer.tsx
@@ -3,10 +3,12 @@ import PropTypes from 'prop-types';
 import styled from 'react-emotion';
 
 import LoadingIndicator from 'app/components/loadingIndicator';
+import theme from 'app/utils/theme';
 
 const defaultProps = {
   isLoading: false,
   isReloading: false,
+  maskBackgroundColor: theme.white,
 };
 
 type DefaultProps = Readonly<typeof defaultProps>;
@@ -18,17 +20,21 @@ type Props = {
 
 type MaskProps = {
   isReloading: boolean;
+  maskBackgroundColor: string;
 };
 
 export default function LoadingContainer(props: Props) {
-  const {className, children, isReloading, isLoading} = props;
+  const {className, children, isReloading, isLoading, maskBackgroundColor} = props;
   const isLoadingOrReloading = isLoading || isReloading;
 
   return (
     <Container className={className}>
       {isLoadingOrReloading && (
         <div>
-          <LoadingMask isReloading={isReloading} />
+          <LoadingMask
+            isReloading={isReloading}
+            maskBackgroundColor={maskBackgroundColor}
+          />
           <Indicator />
         </div>
       )}
@@ -52,7 +58,7 @@ const Container = styled('div')`
 const LoadingMask = styled('div')<MaskProps>`
   position: absolute;
   z-index: 1;
-  background-color: ${p => p.theme.white};
+  background-color: ${p => p.maskBackgroundColor};
   width: 100%;
   height: 100%;
   opacity: ${p => (p.isReloading ? '0.6' : '1')};
diff --git a/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
index 39b21e506a..ae4a7ecee4 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import isEqual from 'lodash/isEqual';
 import {Location} from 'history';
+import styled from 'react-emotion';
 
 import withApi from 'app/utils/withApi';
 import {Client} from 'app/api';
@@ -9,6 +10,8 @@ import EventsRequest from 'app/views/events/utils/eventsRequest';
 import AreaChart from 'app/components/charts/areaChart';
 import {getInterval} from 'app/components/charts/utils';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
+import LoadingIndicator from 'app/components/loadingIndicator';
+import LoadingContainer from 'app/components/loading/loadingContainer';
 
 import EventView from './eventView';
 
@@ -68,7 +71,11 @@ class MiniGraph extends React.Component<Props> {
       >
         {({loading, timeseriesData}) => {
           if (loading) {
-            return null;
+            return (
+              <StyledLoadingContainer>
+                <LoadingIndicator mini />
+              </StyledLoadingContainer>
+            );
           }
 
           const data = (timeseriesData || []).map(series => {
@@ -122,4 +129,14 @@ class MiniGraph extends React.Component<Props> {
   }
 }
 
+const StyledLoadingContainer = styled(props => {
+  return <LoadingContainer {...props} maskBackgroundColor="transparent" />;
+})`
+  height: 100px;
+
+  display: flex;
+  justify-content: center;
+  align-items: center;
+`;
+
 export default withApi(MiniGraph);
