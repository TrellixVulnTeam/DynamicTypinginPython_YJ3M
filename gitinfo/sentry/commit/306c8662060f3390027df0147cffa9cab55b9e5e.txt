commit 306c8662060f3390027df0147cffa9cab55b9e5e
Author: Lovepreet Sangha <lovepreetssangha@gmail.com>
Date:   Fri May 4 13:35:21 2018 -0700

    feat: Continuation of Project Settings Audit Log (#8275)
    
    * feat: Continuation of Audit Log
    
    Can now view Subject Template and Auto Resolve change(s) in the audit log
    
    * potential fix for codecov
    
    * feat: Continuation of Project Settings Audit Log
    
    Can now view change(s) made to a project's Data Scrubbers and IP Address in the audit log.
    
    * feat: Continuation of Project Settings Audit Log
    
    Can now view change(s) made to a project's Data Scrubbers, Safe Fields, Additional Fields, Default Data Scrubbers and IP Address in the audit log.
    
    * Fixed the linting error

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 2f9d2b35c2..c6981f0f2a 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -351,7 +351,8 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             project.update_option('mail:subject_template',
                                   result['subjectTemplate'])
         if result.get('scrubIPAddresses') is not None:
-            project.update_option('sentry:scrub_ip_address', result['scrubIPAddresses'])
+            if project.update_option('sentry:scrub_ip_address', result['scrubIPAddresses']):
+                changed_proj_settings['sentry:scrub_ip_address'] = result['scrubIPAddresses']
         if result.get('securityToken') is not None:
             project.update_option('sentry:token', result['securityToken'])
         if result.get('securityTokenHeader') is not None:
@@ -359,13 +360,17 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
         if result.get('verifySSL') is not None:
             project.update_option('sentry:verify_ssl', result['verifySSL'])
         if result.get('dataScrubber') is not None:
-            project.update_option('sentry:scrub_data', result['dataScrubber'])
+            if project.update_option('sentry:scrub_data', result['dataScrubber']):
+                changed_proj_settings['sentry:scrub_data'] = result['dataScrubber']
         if result.get('dataScrubberDefaults') is not None:
-            project.update_option('sentry:scrub_defaults', result['dataScrubberDefaults'])
+            if project.update_option('sentry:scrub_defaults', result['dataScrubberDefaults']):
+                changed_proj_settings['sentry:scrub_defaults'] = result['dataScrubberDefaults']
         if result.get('sensitiveFields') is not None:
-            project.update_option('sentry:sensitive_fields', result['sensitiveFields'])
+            if project.update_option('sentry:sensitive_fields', result['sensitiveFields']):
+                changed_proj_settings['sentry:sensitive_fields'] = result['sensitiveFields']
         if result.get('safeFields') is not None:
-            project.update_option('sentry:safe_fields', result['safeFields'])
+            if project.update_option('sentry:safe_fields', result['safeFields']):
+                changed_proj_settings['sentry:safe_fields'] = result['safeFields']
         if 'defaultEnvironment' in result:
             if result['defaultEnvironment'] is None:
                 project.delete_option('sentry:default_environment')
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index be8c4dfffd..8dae518143 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -245,7 +245,7 @@ class ProjectUpdateTest(APITestCase):
             'filters:releases': '1.*\n2.1.*',
             'filters:error_messages': 'TypeError*\n*: integer division by modulo or zero',
             'mail:subject_prefix': '[Sentry]',
-            'sentry:resolve_age': 1
+            'sentry:scrub_ip_address': False
         }
         with self.feature('projects:custom-inbound-filters'):
             resp = self.client.put(self.path, data={'options': options})
@@ -254,10 +254,26 @@ class ProjectUpdateTest(APITestCase):
         assert project.get_option('sentry:origins', []) == options['sentry:origins'].split('\n')
         assert project.get_option('sentry:resolve_age', 0) == options['sentry:resolve_age']
         assert project.get_option('sentry:scrub_data', True) == options['sentry:scrub_data']
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_EDIT,
+        ).exists()
         assert project.get_option('sentry:scrub_defaults', True) == options['sentry:scrub_defaults']
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_EDIT,
+        ).exists()
         assert project.get_option('sentry:sensitive_fields',
                                   []) == options['sentry:sensitive_fields']
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_EDIT,
+        ).exists()
         assert project.get_option('sentry:safe_fields', []) == options['sentry:safe_fields']
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_EDIT,
+        ).exists()
         assert project.get_option('sentry:csp_ignored_sources_defaults',
                                   True) == options['sentry:csp_ignored_sources_defaults']
         assert project.get_option('sentry:csp_ignored_sources',
@@ -277,6 +293,13 @@ class ProjectUpdateTest(APITestCase):
             organization=project.organization,
             event=AuditLogEntryEvent.PROJECT_EDIT,
         ).exists()
+        assert project.get_option(
+            'sentry:scrub_ip_address',
+            True) == options['sentry:scrub_ip_address']
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_EDIT,
+        ).exists()
 
     def test_bookmarks(self):
         resp = self.client.put(self.path, data={
