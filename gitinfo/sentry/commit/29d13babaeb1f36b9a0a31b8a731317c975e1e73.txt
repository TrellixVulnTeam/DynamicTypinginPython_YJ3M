commit 29d13babaeb1f36b9a0a31b8a731317c975e1e73
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Tue Dec 4 13:33:03 2018 -0800

    feat(integrations): Add annotations for issue tracker integrations (#10836)
    
    * add annotations for integrations

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 7aafab1738..9edbb42e3b 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -16,7 +16,7 @@ from sentry.api.fields.actor import Actor
 from sentry.constants import LOG_LEVELS, StatsPeriod
 from sentry.models import (
     Commit, Environment, Group, GroupAssignee, GroupBookmark, GroupLink, GroupMeta, GroupResolution, GroupSeen, GroupSnooze,
-    GroupShare, GroupStatus, GroupSubscription, GroupSubscriptionReason, User, UserOption,
+    GroupShare, GroupStatus, GroupSubscription, GroupSubscriptionReason, Integration, User, UserOption,
     UserOptionValue
 )
 from sentry.utils.db import attach_foreignkey
@@ -254,6 +254,18 @@ class GroupSerializer(Serializer):
                     safe_execute(plugin.get_annotations, group=item, _with_transaction=False) or ()
                 )
 
+            from sentry.integrations import IntegrationFeatures
+            for integration in Integration.objects.filter(
+                    organizations=item.project.organization_id):
+                if not (integration.has_feature(IntegrationFeatures.ISSUE_BASIC) or integration.has_feature(
+                        IntegrationFeatures.ISSUE_SYNC)):
+                    continue
+
+                install = integration.get_installation(item.project.organization_id)
+                annotations.extend(
+                    safe_execute(install.get_annotations, group=item, _with_transaction=False) or ()
+                )
+
             resolution_actor = None
             resolution_type = None
             resolution = release_resolutions.get(item.id)
diff --git a/src/sentry/integrations/issues.py b/src/sentry/integrations/issues.py
index afa9c900cd..0b4b040d4e 100644
--- a/src/sentry/integrations/issues.py
+++ b/src/sentry/integrations/issues.py
@@ -5,7 +5,7 @@ import six
 
 from sentry import features
 from sentry.integrations.exceptions import ApiError, IntegrationError
-from sentry.models import Activity, Event, Group, GroupStatus, Organization
+from sentry.models import Activity, Event, ExternalIssue, Group, GroupLink, GroupStatus, Organization
 from sentry.utils.http import absolute_uri
 from sentry.utils.safe import safe_execute
 
@@ -239,6 +239,26 @@ class IssueBasicMixin(object):
         """
         return (default_repo, default_repo)
 
+    def get_annotations(self, group):
+        external_issue_ids = GroupLink.objects.filter(
+            group_id=group.id,
+            project_id=group.project_id,
+            linked_type=GroupLink.LinkedType.issue,
+            relationship=GroupLink.Relationship.references,
+        ).values_list('linked_id', flat=True)
+
+        external_issues = ExternalIssue.objects.filter(
+            id__in=external_issue_ids,
+            integration_id=self.model.id,
+        )
+        annotations = []
+        for ei in external_issues:
+            link = self.get_issue_url(ei.key)
+            label = self.get_issue_display_name(ei) or ei.key
+            annotations.append('<a href="%s">%s</a>' % (link, label))
+
+        return annotations
+
 
 class IssueSyncMixin(IssueBasicMixin):
     comment_key = None
diff --git a/tests/sentry/integrations/test_issues.py b/tests/sentry/integrations/test_issues.py
index 77bb125a14..505b752e8d 100644
--- a/tests/sentry/integrations/test_issues.py
+++ b/tests/sentry/integrations/test_issues.py
@@ -123,17 +123,17 @@ class IssueDefaultTest(TestCase):
         )
         integration.add_organization(self.group.organization, self.user)
 
-        external_issue = ExternalIssue.objects.create(
+        self.external_issue = ExternalIssue.objects.create(
             organization_id=self.group.organization.id,
             integration_id=integration.id,
             key='APP-123',
         )
 
-        GroupLink.objects.create(
+        self.group_link = GroupLink.objects.create(
             group_id=self.group.id,
             project_id=self.group.project_id,
             linked_type=GroupLink.LinkedType.issue,
-            linked_id=external_issue.id,
+            linked_id=self.external_issue.id,
             relationship=GroupLink.Relationship.references,
         )
 
@@ -170,3 +170,19 @@ class IssueDefaultTest(TestCase):
         default_repo, repo_choice = self.installation.get_repository_choices(self.group)
         assert default_repo == 'user/repo2'
         assert repo_choice == [('user/repo1', 'repo1'), ('user/repo2', 'repo2')]
+
+    def test_annotations(self):
+        label = self.installation.get_issue_display_name(self.external_issue)
+        link = self.installation.get_issue_url(self.external_issue.key)
+
+        assert self.installation.get_annotations(self.group) == \
+            ['<a href="%s">%s</a>' % (link, label)]
+
+        integration = Integration.objects.create(
+            provider='example',
+            external_id='4444',
+        )
+        integration.add_organization(self.group.organization, self.user)
+        installation = integration.get_installation(self.group.organization.id)
+
+        assert installation.get_annotations(self.group) == []
