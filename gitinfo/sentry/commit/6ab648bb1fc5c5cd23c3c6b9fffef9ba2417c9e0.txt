commit 6ab648bb1fc5c5cd23c3c6b9fffef9ba2417c9e0
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 20 09:30:54 2015 -0700

    Handle ZeroReturnError

diff --git a/src/sentry/http.py b/src/sentry/http.py
index 752ead3d72..1e2d3ed857 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -8,6 +8,7 @@ sentry.utils.http
 from __future__ import absolute_import
 
 import sentry
+import six
 import socket
 import requests
 import warnings
@@ -16,6 +17,8 @@ from django.conf import settings
 from django.core.exceptions import SuspiciousOperation
 from ipaddr import IPNetwork
 from requests.adapters import HTTPAdapter
+from requests.exceptions import SSLError
+from OpenSSL.SSL import ZeroReturnError
 from urlparse import urlparse
 
 USER_AGENT = 'sentry/{version} (https://getsentry.com)'.format(
@@ -93,13 +96,18 @@ def safe_urlopen(url, method=None, params=None, data=None, json=None,
     if method is None:
         method = 'POST' if (data or json) else 'GET'
 
-    return getattr(session, method.lower())(
-        url,
-        allow_redirects=allow_redirects,
-        timeout=timeout,
-        verify=verify_ssl,
-        **kwargs
-    )
+    try:
+        return getattr(session, method.lower())(
+            url,
+            allow_redirects=allow_redirects,
+            timeout=timeout,
+            verify=verify_ssl,
+            **kwargs
+        )
+    # Our version of requests does not transform ZeroReturnError into an
+    # appropriately generically catchable exception
+    except ZeroReturnError as exc:
+        six.reraise(SSLError, exc)
 
 
 def safe_urlread(response):
