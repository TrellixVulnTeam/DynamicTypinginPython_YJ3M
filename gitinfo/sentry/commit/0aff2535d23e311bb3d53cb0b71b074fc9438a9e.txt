commit 0aff2535d23e311bb3d53cb0b71b074fc9438a9e
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 29 22:55:44 2015 -0700

    Various fixes for selectize

diff --git a/src/sentry/static/sentry/app/components/selectize.jsx b/src/sentry/static/sentry/app/components/selectize.jsx
index 8afdfd4bf2..8e0f5fee17 100644
--- a/src/sentry/static/sentry/app/components/selectize.jsx
+++ b/src/sentry/static/sentry/app/components/selectize.jsx
@@ -20,7 +20,7 @@ var Selectize = React.createClass({
 
       // Component options
       value: '',
-      handleChange: $.noop
+      onChange: $.noop
     };
   },
 
@@ -111,14 +111,14 @@ var Selectize = React.createClass({
     return false;
   },
 
-  onChange(value) {
+  onChange(...args) {
     // Because handleChange often triggers state
     // changes in containing components, we need to
     // make sure that we're not currently updating from
     // within another state change (otherwise react
     // will throw an InvariantError).
     if (!this._updating) {
-      this.props.handleChange(value);
+      this.props.onChange.call(this, this.selectize, ...args);
     }
   },
 
@@ -149,7 +149,13 @@ var Selectize = React.createClass({
     if (this.props.multiple) {
       opts.multiple = true;
     }
-    return <div className="form-group"><select {...opts} /></div>;
+    return (
+      <div className="form-group">
+        <select {...opts}>
+          {this.props.children}
+        </select>
+      </div>
+    );
   }
 });
 
@@ -198,10 +204,11 @@ const selectizeOptNames = [
 ];
 
 var handledProps = {
+  children:     true,
   value:        true,
   disabled:     true,
   placeholder:  true,
-  handleChange: true,
+  onChange:     true,
   options:      true,
 };
 
diff --git a/src/sentry/static/sentry/app/views/ruleEditor.jsx b/src/sentry/static/sentry/app/views/ruleEditor.jsx
index d2e3190159..ba52e19bae 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor.jsx
@@ -5,8 +5,32 @@ var $ = require("jquery");
 
 var api = require("../api");
 var IndicatorStore = require('../stores/indicatorStore');
+var Selectize = require("../components/selectize");
 var utils = require("../utils");
 
+var RuleNode = React.createClass({
+  componentDidMount() {
+    $(this.refs.html.getDOMNode()).find('select').selectize();
+  },
+
+  render() {
+    var {id, node} = this.props;
+    return (
+      <tr>
+        <td className="rule-form">
+          <input type="hidden" name="id" value={id} />
+          <span ref="html" dangerouslySetInnerHTML={{__html: node.html}} />
+        </td>
+        <td className="align-right">
+          <a onClick={this.props.onDelete}>
+            <span className="icon-trash" />
+          </a>
+        </td>
+      </tr>
+    );
+  }
+});
+
 var RuleNodeList = React.createClass({
   getInitialState() {
     return {
@@ -21,14 +45,11 @@ var RuleNodeList = React.createClass({
     });
   },
 
-  onAddRow(e) {
-    var $el = $(e.target);
-    var nodeId = $el.val();
-
-    $el.val('');
-
+  onAddRow(sel, nodeId) {
     if (!nodeId) return;
 
+    sel.setValue('', true);
+
     this.state.items.push({
       id: nodeId
     });
@@ -57,28 +78,23 @@ var RuleNodeList = React.createClass({
           <tbody>
             {this.state.items.map((item, idx) => {
               return (
-                <tr key={idx}>
-                  <td className="rule-form">
-                    <input type="hidden" name="id" value={item.id} />
-                    <span dangerouslySetInnerHTML={{__html: this.getNode(item.id).html}} />
-                  </td>
-                  <td className="align-right">
-                    <a onClick={this.onDeleteRow.bind(this, idx)}><span className="icon-trash" /></a>
-                  </td>
-                </tr>
+                <RuleNode key={idx}
+                  id={item.id}
+                  node={this.getNode(item.id)}
+                  onDelete={this.onDeleteRow.bind(this, idx)} />
               );
             })}
           </tbody>
         </table>
         <fieldset>
-          <select onChange={this.onAddRow}>
+          <Selectize onChange={this.onAddRow}>
             <option key="blank" />
             {this.props.nodes.map((node) => {
               return (
                 <option value={node.id} key={node.id}>{node.label}</option>
               );
             })}
-          </select>
+          </Selectize>
         </fieldset>
       </div>
     );
@@ -183,14 +199,14 @@ var RuleEditor = React.createClass({
             <hr/>
             <h6>
               Every time
-              <select ref="actionMatch"
+              <Selectize ref="actionMatch"
                       className="selectize-inline"
                       defaultValue={actionMatch}
                       required={true}>
                 <option value="all">all</option>
                 <option value="any">any</option>
                 <option value="none">none</option>
-              </select>
+              </Selectize>
               of these conditions are met:
             </h6>
 
