commit 781a82eb10a7ce0a9ba6510d21cb3e56b18ebb92
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Mar 26 10:17:52 2018 -0700

    ref(ui): Have single interface for `<Avatar>` (#7689)
    
    * update avatars to set a size as prop
    * fix assigneeSelector + other components
    * change SlugAvatar to replace  special chars with spaces

diff --git a/docs-ui/components/avatar.stories.js b/docs-ui/components/avatar.stories.js
index e29a93d7ed..0ed7eea474 100644
--- a/docs-ui/components/avatar.stories.js
+++ b/docs-ui/components/avatar.stories.js
@@ -1,10 +1,8 @@
 import React from 'react';
 import {storiesOf} from '@storybook/react';
-// import {action} from '@storybook/addon-actions';
 import {withInfo} from '@storybook/addon-info';
 
 import Avatar from 'sentry-ui/avatar';
-import TeamAvatar from 'sentry-ui/teamAvatar';
 
 const USER = {
   id: 1,
@@ -55,6 +53,6 @@ storiesOf('Avatar', module)
         name: 'Captain Planet',
         slug: 'captain-planet',
       };
-      return <TeamAvatar team={team} />;
+      return <Avatar team={team} />;
     })
   );
diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index e618750479..af7e6fd833 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -297,7 +297,7 @@ class ActivityItem extends React.Component {
     }
 
     let avatar = item.user ? (
-      <Avatar user={item.user} size={64} className="avatar" />
+      <Avatar user={item.user} size={36} className="avatar" />
     ) : (
       <div className="avatar sentry">
         <span className="icon-sentry-logo" />
diff --git a/src/sentry/static/sentry/app/components/actorAvatar.jsx b/src/sentry/static/sentry/app/components/actorAvatar.jsx
index 3c95f91d8d..36a1706a21 100644
--- a/src/sentry/static/sentry/app/components/actorAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/actorAvatar.jsx
@@ -2,7 +2,6 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 import Avatar from './avatar';
-import TeamAvatar from './teamAvatar';
 import MemberListStore from '../stores/memberListStore';
 import TeamStore from '../stores/teamStore';
 import {Actor} from '../proptypes';
@@ -24,7 +23,7 @@ class ActorAvatar extends React.Component {
     }
     if (actor.type == 'team') {
       let team = TeamStore.getById(actor.id);
-      return <TeamAvatar team={team} hasTooltip {...props} />;
+      return <Avatar team={team} hasTooltip {...props} />;
     }
 
     Raven.captureException('Unknown avatar type', {
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index fe0e16f017..82eec41ae9 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -1,31 +1,35 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 import classNames from 'classnames';
+import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
 
+import {assignToUser, assignToActor, clearAssignment} from '../actionCreators/group';
 import {t} from '../locale';
 import {valueIsEqual, buildUserId, buildTeamId} from '../utils';
-import SentryTypes from '../proptypes';
-import Avatar from '../components/avatar';
-import TeamAvatar from '../components/teamAvatar';
 import ActorAvatar from '../components/actorAvatar';
+import Avatar from '../components/avatar';
+import ConfigStore from '../stores/configStore';
 import DropdownLink from './dropdownLink';
 import FlowLayout from './flowLayout';
-import MenuItem from './menuItem';
-import {assignToUser, assignToActor, clearAssignment} from '../actionCreators/group';
 import GroupStore from '../stores/groupStore';
-import ProjectsStore from '../stores/projectsStore';
+import InlineSvg from './inlineSvg';
 import LoadingIndicator from '../components/loadingIndicator';
 import MemberListStore from '../stores/memberListStore';
-import ConfigStore from '../stores/configStore';
+import MenuItem from './menuItem';
+import ProjectsStore from '../stores/projectsStore';
+import SentryTypes from '../proptypes';
+import TextOverflow from './textOverflow';
 
 const AssigneeSelector = createReactClass({
   displayName: 'AssigneeSelector',
 
   propTypes: {
     id: PropTypes.string.isRequired,
+    size: PropTypes.number,
   },
+
   contextTypes: {
     organization: SentryTypes.Organization,
   },
@@ -63,6 +67,12 @@ const AssigneeSelector = createReactClass({
     },
   },
 
+  getDefaultProps() {
+    return {
+      size: 20,
+    };
+  },
+
   getInitialState() {
     let group = GroupStore.get(this.props.id);
     return {
@@ -204,16 +214,17 @@ const AssigneeSelector = createReactClass({
       return text;
     }
     return (
-      <span>
+      <React.Fragment>
         {text.substr(0, idx)}
         <strong className="highlight">{text.substr(idx, highlightText.length)}</strong>
         {text.substr(idx + highlightText.length)}
-      </span>
+      </React.Fragment>
     );
   },
 
   renderMemberNodes() {
     let {filter, memberList} = this.state;
+    let {size} = this.props;
     let members = AssigneeSelector.filterAssignees(memberList, filter);
     members = AssigneeSelector.putSessionUserFirst(members);
 
@@ -223,8 +234,12 @@ const AssigneeSelector = createReactClass({
           key={buildUserId(item.id)}
           onSelect={this.assignToUser.bind(this, item)}
         >
-          <Avatar user={item} className="avatar" size={48} />
-          {this.highlight(item.name || item.email, filter)}
+          <MenuItemWrapper>
+            <IconContainer>
+              <Avatar user={item} size={size} />
+            </IconContainer>
+            <Label>{this.highlight(item.name || item.email, filter)}</Label>
+          </MenuItemWrapper>
         </MenuItem>
       );
     });
@@ -232,6 +247,7 @@ const AssigneeSelector = createReactClass({
 
   renderTeamNodes() {
     let {filter} = this.state;
+    let {size} = this.props;
     let teamNodes = [];
     let org = this.context.organization;
     let features = new Set(org.features);
@@ -240,8 +256,12 @@ const AssigneeSelector = createReactClass({
       teamNodes = this.assignableTeams().map(({id, display, team}) => {
         return (
           <MenuItem key={id} onSelect={this.assignToTeam.bind(this, team)}>
-            <TeamAvatar team={team} className="avatar" size={48} />
-            {this.highlight(display, filter)}
+            <MenuItemWrapper>
+              <IconContainer>
+                <Avatar team={team} size={size} />
+              </IconContainer>
+              <Label>{this.highlight(display, filter)}</Label>
+            </MenuItemWrapper>
           </MenuItem>
         );
       });
@@ -282,14 +302,19 @@ const AssigneeSelector = createReactClass({
             disabled={!loading}
             onSelect={this.clearAssignTo}
           >
-            <span className="icon-circle-cross" /> {t('Clear Assignee')}
+            <MenuItemWrapper py={0}>
+              <IconContainer>
+                <ClearAssigneeIcon />
+              </IconContainer>
+              <Label>{t('Clear Assignee')}</Label>
+            </MenuItemWrapper>
           </MenuItem>
         )}
 
         <li>
           <ul>
             {teams}
-            {hasTeamsAndMembers ? <hr key="divider" style={{margin: 0}} /> : null}
+            {hasTeamsAndMembers ? <Divider key="divider" /> : null}
             {members}
             {!hasTeamsOrMembers && (
               <li className="not-found">
@@ -336,7 +361,7 @@ const AssigneeSelector = createReactClass({
             alwaysRenderMenu={false}
             title={
               assignedTo ? (
-                <ActorAvatar actor={assignedTo} className="avatar" size={48} />
+                <ActorAvatar actor={assignedTo} className="avatar" size={24} />
               ) : (
                 <span className="icon-user" />
               )
@@ -355,14 +380,19 @@ const AssigneeSelector = createReactClass({
             {ConfigStore.get('invitesEnabled') &&
               access.has('org:write') && (
                 <React.Fragment>
-                  <hr key="divider" style={{margin: 0}} />
+                  <Divider />
                   <MenuItem
                     className="invite-member"
                     disabled={!loading}
                     to={`/settings/${this.context.organization.slug}/members/new/`}
                     query={{referrer: 'assignee_selector'}}
                   >
-                    <span className="icon-plus" /> {t('Invite Member')}
+                    <MenuItemWrapper>
+                      <IconContainer>
+                        <InviteMemberIcon />
+                      </IconContainer>
+                      <Label>{t('Invite Member')}</Label>
+                    </MenuItemWrapper>
                   </MenuItem>
                 </React.Fragment>
               )}
@@ -374,3 +404,47 @@ const AssigneeSelector = createReactClass({
 });
 
 export default AssigneeSelector;
+
+const getSvgStyle = () => `
+  font-size: 16px;
+  opacity: 0.3;
+`;
+
+const Divider = styled.hr`
+  margin: 0;
+`;
+
+const IconContainer = styled.div`
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  width: 24px;
+  height: 24px;
+  flex-shrink: 0;
+`;
+
+const MenuItemWrapper = styled(({py, ...props}) => <div {...props} />)`
+  display: flex;
+  align-items: center;
+  padding: 5px 8px;
+  ${p =>
+    typeof p.py !== 'undefined' &&
+    `
+      padding-top: ${p.py};
+      padding-bottom: ${p.py};
+    `};
+`;
+
+const Label = styled(TextOverflow)`
+  margin-left: 6px;
+`;
+
+const ClearAssigneeIcon = styled(props => (
+  <InlineSvg {...props} src="icon-circle-close" />
+))`
+  ${getSvgStyle};
+`;
+
+const InviteMemberIcon = styled(props => <InlineSvg {...props} src="icon-circle-add" />)`
+  ${getSvgStyle};
+`;
diff --git a/src/sentry/static/sentry/app/components/avatar.jsx b/src/sentry/static/sentry/app/components/avatar.jsx
deleted file mode 100644
index b2804db186..0000000000
--- a/src/sentry/static/sentry/app/components/avatar.jsx
+++ /dev/null
@@ -1,112 +0,0 @@
-import classNames from 'classnames';
-import PropTypes from 'prop-types';
-import React from 'react';
-import qs from 'query-string';
-import MD5 from 'crypto-js/md5';
-import ConfigStore from '../stores/configStore';
-import UserLetterAvatar from '../components/userLetterAvatar';
-import {userDisplayName} from '../utils/formatters';
-import Tooltip from './tooltip';
-
-class Avatar extends React.Component {
-  static propTypes = {
-    user: PropTypes.object,
-    size: PropTypes.number,
-    default: PropTypes.string,
-    gravatar: PropTypes.bool,
-    hasTooltip: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    size: 64,
-    gravatar: true,
-    hasTooltip: false,
-  };
-
-  constructor(...args) {
-    super(...args);
-    this.state = {
-      showBackupAvatar: false,
-      loadError: false,
-    };
-  }
-
-  buildGravatarUrl = () => {
-    let url = ConfigStore.getConfig().gravatarBaseUrl + '/avatar/';
-
-    url += MD5(this.props.user.email.toLowerCase());
-
-    let query = {
-      s: this.props.size || undefined,
-      d: this.props.default || 'blank',
-    };
-
-    url += '?' + qs.stringify(query);
-
-    return url;
-  };
-
-  buildProfileUrl = () => {
-    let url = '/avatar/' + this.props.user.avatar.avatarUuid + '/';
-    if (this.props.size) {
-      url += '?' + qs.stringify({s: this.props.size});
-    }
-    return url;
-  };
-
-  onLoad = () => {
-    this.setState({showBackupAvatar: true});
-  };
-
-  onError = () => {
-    this.setState({showBackupAvatar: true, loadError: true});
-  };
-
-  renderImg = () => {
-    if (this.state.loadError) {
-      return null;
-    }
-    let user = this.props.user;
-    let avatarType = null;
-    if (user.avatar) {
-      avatarType = user.avatar.avatarType;
-    } else {
-      avatarType = user.email && this.props.gravatar ? 'gravatar' : 'letter_avatar';
-    }
-    let props = {
-      onError: this.onError,
-      onLoad: this.onLoad,
-    };
-    if (user.options && user.options.avatarType) {
-      avatarType = user.options.avatarType;
-    }
-    if (avatarType === 'gravatar') {
-      return <img src={this.buildGravatarUrl()} {...props} />;
-    } else if (avatarType === 'upload') {
-      return <img src={this.buildProfileUrl()} {...props} />;
-    } else {
-      return <UserLetterAvatar user={user} />;
-    }
-  };
-
-  render() {
-    let {user, hasTooltip} = this.props;
-    if (!user) {
-      return null;
-    }
-
-    return (
-      <Tooltip title={userDisplayName(user)} disabled={!hasTooltip}>
-        <span
-          className={classNames('avatar', this.props.className)}
-          style={this.props.style}
-        >
-          {this.state.showBackupAvatar && <UserLetterAvatar user={user} />}
-          {this.renderImg()}
-        </span>
-      </Tooltip>
-    );
-  }
-}
-
-export default Avatar;
diff --git a/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx
new file mode 100644
index 0000000000..2ffa1f8708
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/avatar/baseAvatar.jsx
@@ -0,0 +1,143 @@
+import {sortedIndexOf} from 'lodash';
+import MD5 from 'crypto-js/md5';
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+import qs from 'query-string';
+
+import ConfigStore from '../../stores/configStore';
+import LetterAvatar from '../letterAvatar';
+import Tooltip from '../tooltip';
+
+const DEFAULT_GRAVATAR_SIZE = 64;
+const ALLOWED_SIZES = [20, 32, 36, 48, 52, 64, 80, 96, 120];
+
+class BaseAvatar extends React.Component {
+  static propTypes = {
+    size: PropTypes.number,
+    /**
+     * This is the size of the remote image to request.
+     */
+    remoteImageSize: PropTypes.oneOf(ALLOWED_SIZES),
+    default: PropTypes.string,
+    hasTooltip: PropTypes.bool,
+    type: PropTypes.string,
+    uploadId: PropTypes.string,
+    gravatarId: PropTypes.string,
+    letterId: PropTypes.string,
+    title: PropTypes.string,
+    tooltip: PropTypes.string,
+  };
+
+  static defaultProps = {
+    // No default size to ease transition from CSS defined sizes
+    // size: 64,
+    style: {},
+    hasTooltip: false,
+    type: 'letter_avatar',
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      showBackupAvatar: false,
+      loadError: false,
+    };
+  }
+
+  getRemoteImageSize = () => {
+    let {remoteImageSize, size} = this.props;
+
+    return (
+      remoteImageSize ||
+      (size && ALLOWED_SIZES[sortedIndexOf(ALLOWED_SIZES, size)]) ||
+      DEFAULT_GRAVATAR_SIZE
+    );
+  };
+
+  buildGravatarUrl = () => {
+    let {gravatarId} = this.props;
+    let url = ConfigStore.getConfig().gravatarBaseUrl + '/avatar/';
+
+    url += MD5(gravatarId);
+
+    let query = {
+      s: this.getRemoteImageSize() || undefined,
+      d: this.props.default || 'blank',
+    };
+
+    url += '?' + qs.stringify(query);
+
+    return url;
+  };
+
+  buildUploadUrl = () => {
+    let {uploadId} = this.props;
+
+    return `/avatar/${uploadId}/?${qs.stringify({s: this.getRemoteImageSize()})}`;
+  };
+
+  handleLoad = () => {
+    this.setState({showBackupAvatar: true});
+  };
+
+  handleError = () => {
+    this.setState({showBackupAvatar: true, loadError: true});
+  };
+
+  renderImg = () => {
+    if (this.state.loadError) {
+      return null;
+    }
+
+    let {type} = this.props;
+
+    let props = {
+      onError: this.handleError,
+      onLoad: this.handleLoad,
+    };
+    if (type === 'gravatar') {
+      return <img src={this.buildGravatarUrl()} {...props} />;
+    }
+
+    if (type === 'upload') {
+      return <img src={this.buildUploadUrl()} {...props} />;
+    }
+
+    return this.renderLetterAvatar();
+  };
+
+  renderLetterAvatar() {
+    let {title, letterId} = this.props;
+    return <LetterAvatar displayName={title} identifier={letterId} />;
+  }
+
+  render() {
+    let {hasTooltip, size, tooltip} = this.props;
+    let sizeStyle = {};
+
+    if (size) {
+      sizeStyle = {
+        width: `${size}px`,
+        height: `${size}px`,
+      };
+    }
+
+    return (
+      <Tooltip title={tooltip} disabled={!hasTooltip}>
+        <span
+          className={classNames('avatar', this.props.className)}
+          style={{
+            ...sizeStyle,
+            ...this.props.style,
+          }}
+        >
+          {this.state.showBackupAvatar && this.renderLetterAvatar()}
+          {this.renderImg()}
+        </span>
+      </Tooltip>
+    );
+  }
+}
+
+export default BaseAvatar;
diff --git a/src/sentry/static/sentry/app/components/avatar/index.jsx b/src/sentry/static/sentry/app/components/avatar/index.jsx
new file mode 100644
index 0000000000..547e3c6e09
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/avatar/index.jsx
@@ -0,0 +1,36 @@
+import React from 'react';
+
+import SentryTypes from '../../proptypes';
+import SlugAvatar from './slugAvatar';
+import TeamAvatar from './teamAvatar';
+import UserAvatar from './userAvatar';
+
+class Avatar extends React.Component {
+  static propTypes = {
+    team: SentryTypes.Team,
+    organization: SentryTypes.Organization,
+    ...UserAvatar.propTypes,
+    ...SlugAvatar.propTypes,
+  };
+
+  static defaultProps = {
+    hasTooltip: false,
+  };
+
+  render() {
+    let {user, team, organization, ...props} = this.props;
+
+    if (user) {
+      return <UserAvatar user={user} {...props} />;
+    }
+
+    if (team) {
+      return <TeamAvatar team={team} {...props} />;
+    }
+
+    // Could support project too
+    return <SlugAvatar model={organization} {...props} />;
+  }
+}
+
+export default Avatar;
diff --git a/src/sentry/static/sentry/app/components/avatar/slugAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/slugAvatar.jsx
new file mode 100644
index 0000000000..3203547c7d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/avatar/slugAvatar.jsx
@@ -0,0 +1,36 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {explodeSlug} from '../../utils';
+import BaseAvatar from './baseAvatar';
+
+class SlugAvatar extends React.Component {
+  static propTypes = {
+    model: PropTypes.shape({
+      slug: PropTypes.string.isRequired,
+    }),
+    ...BaseAvatar.propTypes,
+  };
+
+  render() {
+    let {model, ...props} = this.props;
+    if (!model) return null;
+    let slug = (model && model.slug) || '';
+
+    // Letter avatar uses letters from first 2 words
+    // Previously we used displayName (which allows spaces) but is deprecated in
+    // favor of using slugs only (which do not allow spaces)
+    let title = explodeSlug(slug);
+
+    return (
+      <BaseAvatar
+        {...props}
+        type="letter_avatar"
+        letterId={slug}
+        tooltip={slug}
+        title={title}
+      />
+    );
+  }
+}
+export default SlugAvatar;
diff --git a/src/sentry/static/sentry/app/components/avatar/teamAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/teamAvatar.jsx
new file mode 100644
index 0000000000..593103505b
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/avatar/teamAvatar.jsx
@@ -0,0 +1,31 @@
+import React from 'react';
+
+import {explodeSlug} from '../../utils';
+import BaseAvatar from './baseAvatar';
+import SentryTypes from '../../proptypes';
+
+class TeamAvatar extends React.Component {
+  static propTypes = {
+    team: SentryTypes.Team.isRequired,
+    ...BaseAvatar.propTypes,
+  };
+
+  render() {
+    let {team, ...props} = this.props;
+    if (!team) return null;
+    let slug = (team && team.slug) || '';
+    let title = explodeSlug(slug);
+    let tooltip = `#${title}`;
+
+    return (
+      <BaseAvatar
+        {...props}
+        type="letter_avatar"
+        letterId={slug}
+        tooltip={tooltip}
+        title={title}
+      />
+    );
+  }
+}
+export default TeamAvatar;
diff --git a/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx b/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx
new file mode 100644
index 0000000000..c05a616778
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/avatar/userAvatar.jsx
@@ -0,0 +1,51 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {userDisplayName} from '../../utils/formatters';
+import BaseAvatar from './baseAvatar';
+
+class UserAvatar extends React.Component {
+  static propTypes = {
+    user: PropTypes.object,
+    gravatar: PropTypes.bool,
+    ...BaseAvatar.propTypes,
+  };
+
+  static defaultProps = {
+    gravatar: true,
+  };
+
+  getType = () => {
+    let {user, gravatar} = this.props;
+
+    if (user.avatar) {
+      return user.avatar.avatarType;
+    }
+    if (user.options && user.options.avatarType) {
+      return user.options.avatarType;
+    }
+
+    return user.email && gravatar ? 'gravatar' : 'letter_avatar';
+  };
+
+  render() {
+    let {user, ...props} = this.props;
+
+    if (!user) return null;
+
+    let type = this.getType();
+
+    return (
+      <BaseAvatar
+        {...props}
+        type={type}
+        uploadId={user.avatar && user.avatar.avatarUuid}
+        gravatarId={user && user.email && user.email.toLowerCase()}
+        letterId={user.email || user.username || user.id || user.ip_address}
+        tooltip={userDisplayName(user)}
+        title={user.name || user.email || user.username || ''}
+      />
+    );
+  }
+}
+export default UserAvatar;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user.jsx b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
index 59c34e18da..7ff13dfe35 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
@@ -41,7 +41,7 @@ class UserContextType extends React.Component {
     return (
       <div className="user-widget">
         <div className="pull-left">
-          <Avatar user={user} size={96} gravatar={false} />
+          <Avatar user={user} size={48} gravatar={false} />
         </div>
         <table className="key-value table">
           <tbody>
diff --git a/src/sentry/static/sentry/app/components/group/participants.jsx b/src/sentry/static/sentry/app/components/group/participants.jsx
index 4ea36bcbe3..3c1141a4e3 100644
--- a/src/sentry/static/sentry/app/components/group/participants.jsx
+++ b/src/sentry/static/sentry/app/components/group/participants.jsx
@@ -34,7 +34,7 @@ const GroupParticipants = createReactClass({
           {participants.map((user, i) => {
             return (
               <li key={user.username} className="tip" title={userDisplayName(user)}>
-                <Avatar size={32} user={user} />
+                <Avatar size={28} user={user} />
               </li>
             );
           })}
diff --git a/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx b/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
index 55c4296411..5257815c7d 100644
--- a/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/organizationSelector.jsx
@@ -1,15 +1,14 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import Link from '../link';
-import SidebarPanel from '../sidebarPanel';
-import LetterAvatar from '../letterAvatar';
 
+import {t} from '../../locale';
 import AppState from '../../mixins/appState';
-import OrganizationsStore from '../../stores/organizationsStore';
+import Avatar from '../avatar';
 import ConfigStore from '../../stores/configStore';
-
-import {t} from '../../locale';
+import Link from '../link';
+import OrganizationsStore from '../../stores/organizationsStore';
+import SidebarPanel from '../sidebarPanel';
 
 let RouterOrBrowserLink = ({isRouter, path, ...props}) =>
   isRouter ? <Link to={path} {...props} /> : <a href={path} {...props} />;
@@ -74,7 +73,7 @@ const OrganizationSelector = createReactClass({
     return (
       <div className={classNames}>
         <a className="active-org" onClick={this.props.togglePanel}>
-          <LetterAvatar displayName={activeOrg.name} identifier={activeOrg.slug} />
+          <Avatar size={32} organization={activeOrg} />
         </a>
 
         {this.props.showPanel &&
@@ -89,7 +88,11 @@ const OrganizationSelector = createReactClass({
                     >
                       {this.getLinkNode(
                         org,
-                        <LetterAvatar displayName={org.name} identifier={org.slug} />,
+                        <Avatar
+                          style={{verticalAlign: 'inherit'}}
+                          size={36}
+                          organization={org}
+                        />,
                         'org-avatar'
                       )}
                       <h5>{this.getLinkNode(org, org.name)}</h5>
diff --git a/src/sentry/static/sentry/app/components/sidebar/userNav.jsx b/src/sentry/static/sentry/app/components/sidebar/userNav.jsx
index 5a26e265dc..2e39e40bb8 100644
--- a/src/sentry/static/sentry/app/components/sidebar/userNav.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/userNav.jsx
@@ -25,7 +25,7 @@ class UserNav extends React.Component {
       return null;
     }
 
-    let title = <Avatar user={user} className="avatar" />;
+    let title = <Avatar size={32} user={user} className="avatar" />;
 
     // "to" attribute => in-app router
     // "href" attribute => Django-powered views
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 88a73bb311..f1c8c25709 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -127,7 +127,7 @@ const StreamGroup = createReactClass({
           />
         </div>
         <div className="event-assignee col-md-1 hidden-sm hidden-xs">
-          <AssigneeSelector id={data.id} />
+          <AssigneeSelector size={24} id={data.id} />
         </div>
         <div className="col-md-2 hidden-sm hidden-xs event-graph align-right">
           <GroupChart id={data.id} statsPeriod={this.props.statsPeriod} data={data} />
diff --git a/src/sentry/static/sentry/app/components/teamAvatar.jsx b/src/sentry/static/sentry/app/components/teamAvatar.jsx
deleted file mode 100644
index ad745ed8b0..0000000000
--- a/src/sentry/static/sentry/app/components/teamAvatar.jsx
+++ /dev/null
@@ -1,37 +0,0 @@
-import classNames from 'classnames';
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import LetterAvatar from './letterAvatar';
-import Tooltip from './tooltip';
-
-class TeamAvatar extends React.Component {
-  static propTypes = {
-    team: PropTypes.object.isRequired,
-    hasTooltip: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    className: 'avatar',
-    hasTooltip: false,
-  };
-
-  getDisplayName = () => {
-    let team = this.props.team;
-    return team.slug;
-  };
-
-  render() {
-    let {team, hasTooltip} = this.props;
-    let displayName = this.getDisplayName();
-    return (
-      <Tooltip title={`#${displayName}`} disabled={!hasTooltip}>
-        <span className={classNames('avatar', this.props.className)}>
-          <LetterAvatar identifier={team.slug} displayName={displayName} />
-        </span>
-      </Tooltip>
-    );
-  }
-}
-
-export default TeamAvatar;
diff --git a/src/sentry/static/sentry/app/components/userLetterAvatar.jsx b/src/sentry/static/sentry/app/components/userLetterAvatar.jsx
deleted file mode 100644
index da39071320..0000000000
--- a/src/sentry/static/sentry/app/components/userLetterAvatar.jsx
+++ /dev/null
@@ -1,30 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import LetterAvatar from './letterAvatar';
-
-class UserLetterAvatar extends React.Component {
-  static propTypes = {
-    user: PropTypes.object.isRequired,
-  };
-
-  getIdentifier = () => {
-    let user = this.props.user;
-    return user.email || user.username || user.id || user.ip_address;
-  };
-
-  getDisplayName = () => {
-    let user = this.props.user;
-    return user.name || user.email || user.username || '';
-  };
-
-  render() {
-    return (
-      <LetterAvatar
-        identifier={this.getIdentifier()}
-        displayName={this.getDisplayName()}
-      />
-    );
-  }
-}
-
-export default UserLetterAvatar;
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index 90a1e41aa5..0338b8043b 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -118,6 +118,13 @@ export function trim(str) {
   return str.replace(/^\s+|\s+$/g, '');
 }
 
+/**
+ * Replaces slug special chars with a space
+ */
+export function explodeSlug(slug) {
+  return trim(slug.replace(/[-_]+/g, ' '));
+}
+
 export function defined(item) {
   return !_.isUndefined(item) && item !== null;
 }
diff --git a/src/sentry/static/sentry/app/views/groupActivity/index.jsx b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
index 4518cdfdb0..b58d339bda 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
@@ -233,7 +233,7 @@ const GroupActivity = createReactClass({
 
     let children = group.activity.map((item, itemIdx) => {
       let avatar = item.user ? (
-        <Avatar user={item.user} size={64} className="avatar" />
+        <Avatar user={item.user} size={18} />
       ) : (
         <div className="avatar sentry">
           <span className="icon-sentry-logo" />
@@ -283,7 +283,7 @@ const GroupActivity = createReactClass({
           <div className="activity-container">
             <ul className="activity">
               <li className="activity-note" key="activity-note">
-                <Avatar user={me} size={64} className="avatar" />
+                <Avatar user={me} size={38} />
                 <div className="activity-bubble">
                   <NoteInput group={group} memberList={memberList} sessionUser={me} />
                 </div>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
index 56a5b6aad3..2311b07870 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
@@ -48,7 +48,7 @@ const GroupSeenBy = createReactClass({
           _.escape(moment(user.lastSeen).format('LL'));
         return (
           <li key={userIdx} className="tip" data-title={title}>
-            <Avatar size={52} user={user} />
+            <Avatar size={28} user={user} />
           </li>
         );
       });
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index 2f4c457221..93793ac5d1 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -190,7 +190,7 @@ const ProjectEvents = createReactClass({
           <td className="event-user table-user-info" style={{textAlign: 'right'}}>
             {event.user ? (
               <div>
-                <Avatar user={event.user} size={64} className="avatar" />
+                <Avatar user={event.user} />
                 {event.user.email}
               </div>
             ) : (
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberRow.jsx b/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberRow.jsx
index 6dbc39985c..b5616c9c7a 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberRow.jsx
@@ -103,7 +103,7 @@ export default class OrganizationMemberRow extends React.PureComponent {
     return (
       <PanelItem align="center" p={0} py={2}>
         <Box pl={2}>
-          <Avatar style={{width: 32, height: 32}} user={user ? user : {email}} />
+          <Avatar size={32} user={user ? user : {email}} />
         </Box>
 
         <Box pl={1} pr={2} flex="1">
diff --git a/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx b/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx
index 5a499b67e0..734caa5d78 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsIndex.jsx
@@ -1,9 +1,10 @@
 import {Flex, Box} from 'grid-emotion';
 import DocumentTitle from 'react-document-title';
 import React from 'react';
-import styled from 'react-emotion';
+import styled, {css} from 'react-emotion';
 
 import {t} from '../../locale';
+import Avatar from '../../components/avatar';
 import ConfigStore from '../../stores/configStore';
 import ExternalLink from '../../components/externalLink';
 import InlineSvg from '../../components/inlineSvg';
@@ -31,6 +32,8 @@ const LINKS = {
   SERVICE_STATUS: 'https://status.sentry.io/',
 };
 
+const HOME_ICON_SIZE = 76;
+
 const HomePanelHeader = styled(PanelHeader)`
   background: #fff;
   flex-direction: column;
@@ -58,14 +61,17 @@ const HomePanelBody = styled(PanelBody)`
   }
 `;
 
+const getHomeIconMargin = css`
+  margin-bottom: 20px;
+`;
+
 const HomeIcon = styled.div`
   background: ${p => p.theme[p.color || 'gray2']};
   color: #fff;
-  width: 76px;
-  height: 76px;
-  border-radius: 76px;
-  margin: 0 auto 20px;
-  > svg {
+  width: ${HOME_ICON_SIZE}px;
+  height: ${HOME_ICON_SIZE}px;
+  border-radius: ${HOME_ICON_SIZE}px;
+  ${getHomeIconMargin} > svg {
     margin-top: 14px;
   }
 `;
@@ -78,6 +84,16 @@ const HomeLink = styled(Link)`
   }
 `;
 
+const flexCenter = css`
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+`;
+
+const HomeLinkIcon = styled(HomeLink)`
+  ${flexCenter};
+`;
+
 const ExternalHomeLink = styled(ExternalLink)`
   color: ${p => p.theme.purple};
 
@@ -86,6 +102,10 @@ const ExternalHomeLink = styled(ExternalLink)`
   }
 `;
 
+const AvatarContainer = styled.div`
+  margin-bottom: 20px;
+`;
+
 class SettingsIndex extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
@@ -113,12 +133,12 @@ class SettingsIndex extends React.Component {
             <Box w={1 / 3} px={2}>
               <Panel>
                 <HomePanelHeader>
-                  <HomeLink to="/settings/account/">
-                    <HomeIcon color="blue">
-                      <InlineSvg src="icon-user" size="44px" />
-                    </HomeIcon>
+                  <HomeLinkIcon to="/settings/account/">
+                    <AvatarContainer>
+                      <Avatar user={user} size={HOME_ICON_SIZE} />
+                    </AvatarContainer>
                     {t('My Account')}
-                  </HomeLink>
+                  </HomeLinkIcon>
                 </HomePanelHeader>
 
                 <HomePanelBody>
@@ -147,14 +167,20 @@ class SettingsIndex extends React.Component {
               <Panel>
                 {!organization && <LoadingIndicator overlay />}
                 <HomePanelHeader>
-                  <HomeLink to={organizationSettingsUrl}>
-                    <HomeIcon color="green">
-                      <InlineSvg src="icon-stack" size="44px" />
-                    </HomeIcon>
+                  <HomeLinkIcon to={organizationSettingsUrl}>
+                    {organization ? (
+                      <AvatarContainer>
+                        <Avatar organization={organization} size={HOME_ICON_SIZE} />
+                      </AvatarContainer>
+                    ) : (
+                      <HomeIcon color="green">
+                        <InlineSvg src="icon-stack" size="44px" />
+                      </HomeIcon>
+                    )}
                     <TextOverflow css={{lineHeight: '1.1em'}}>
                       {organization ? organization.slug : t('Organization')}
                     </TextOverflow>
-                  </HomeLink>
+                  </HomeLinkIcon>
                 </HomePanelHeader>
                 <HomePanelBody>
                   <h3>{t('Quick links')}:</h3>
@@ -182,7 +208,7 @@ class SettingsIndex extends React.Component {
             <Box w={1 / 3} px={2}>
               <Panel>
                 <HomePanelHeader>
-                  <ExternalHomeLink href={LINKS.DOCUMENTATION}>
+                  <ExternalHomeLink css={flexCenter} href={LINKS.DOCUMENTATION}>
                     <HomeIcon color="orange">
                       <InlineSvg src="icon-docs" size="48px" />
                     </HomeIcon>
@@ -218,7 +244,7 @@ class SettingsIndex extends React.Component {
             <Box w={1 / 3} px={2}>
               <Panel>
                 <HomePanelHeader>
-                  <SupportLinkComponent {...supportLinkProps}>
+                  <SupportLinkComponent css={flexCenter} {...supportLinkProps}>
                     <HomeIcon color="purple">
                       <InlineSvg src="icon-support" size="48px" />
                     </HomeIcon>
@@ -252,12 +278,12 @@ class SettingsIndex extends React.Component {
             <Box w={1 / 3} px={2}>
               <Panel>
                 <HomePanelHeader>
-                  <HomeLink to={LINKS.API}>
+                  <HomeLinkIcon to={LINKS.API}>
                     <HomeIcon>
                       <InlineSvg src="icon-lock" size="48px" />
                     </HomeIcon>
                     {t('API Keys')}
-                  </HomeLink>
+                  </HomeLinkIcon>
                 </HomePanelHeader>
 
                 <HomePanelBody>
@@ -283,12 +309,12 @@ class SettingsIndex extends React.Component {
               <Box w={1 / 3} px={2}>
                 <Panel>
                   <HomePanelHeader>
-                    <HomeLink href={LINKS.MANAGE}>
+                    <HomeLinkIcon href={LINKS.MANAGE}>
                       <HomeIcon color="red">
                         <InlineSvg src="icon-laptop" size="48px" />
                       </HomeIcon>
                       {t('Server Admin')}
-                    </HomeLink>
+                    </HomeLinkIcon>
                   </HomePanelHeader>
                   <HomePanelBody>
                     <h3>{t('Quick links')}:</h3>
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index d9d9643eaa..5a4258d9ac 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -595,7 +595,6 @@ table.integrations {
   width: 20px;
   height: 20px;
   vertical-align: middle;
-  border-radius: 2px;
   position: relative;
   display: inline-block;
 
@@ -1665,10 +1664,6 @@ ul.faces {
   li {
     float: left;
     margin: 0 5px 5px 0;
-
-    .avatar {
-      .square(28px);
-    }
   }
 }
 
@@ -1756,10 +1751,6 @@ ul.faces {
   display: flex;
   justify-content: flex-end;
 
-  .avatar {
-    .square(24px);
-  }
-
   .icon-arrow-down {
     position: static;
     top: 0;
@@ -1809,17 +1800,7 @@ ul.faces {
       }
 
       a {
-        display: flex;
-        align-items: center;
-        height: 34px;
-        overflow: hidden;
-        text-overflow: ellipsis;
-        white-space: nowrap;
-
-        span.avatar {
-          margin-right: 5px;
-          .square(20px);
-        }
+        padding: 0;
       }
     }
   }
@@ -1843,12 +1824,6 @@ ul.faces {
   .clear-assignee a {
     background: rgba(52, 60, 69, 0.03);
     border-bottom: 1px solid rgba(52, 60, 69, 0.06);
-
-    .icon-circle-cross {
-      font-size: 16px;
-      margin-right: 5px;
-      opacity: 0.3;
-    }
   }
 
   .list-loading-container {
diff --git a/src/sentry/static/sentry/less/sidebar.less b/src/sentry/static/sentry/less/sidebar.less
index e246d4e934..c912fd4dce 100644
--- a/src/sentry/static/sentry/less/sidebar.less
+++ b/src/sentry/static/sentry/less/sidebar.less
@@ -338,8 +338,7 @@
 
   .user-settings {
     .avatar {
-      .square(32px);
-      box-shadow: 0 1px 1px rggba(0, 0, 0, 0.3);
+      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
     }
 
     .dropdown-toggle {
diff --git a/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap b/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap
index 79eb951c2d..537fa688f4 100644
--- a/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/actorAvatar.spec.jsx.snap
@@ -1,8 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`Avatar render() should show a gravatar when actor type is a team 1`] = `
-<TeamAvatar
-  className="avatar"
+<Avatar
   hasTooltip={true}
   team={
     Object {
@@ -13,6 +12,7 @@ exports[`Avatar render() should show a gravatar when actor type is a team 1`] =
           "slug": 2,
         },
       ],
+      "slug": "cool-team",
     }
   }
 />
@@ -20,9 +20,7 @@ exports[`Avatar render() should show a gravatar when actor type is a team 1`] =
 
 exports[`Avatar render() should show a gravatar when actor type is a user 1`] = `
 <Avatar
-  gravatar={true}
   hasTooltip={true}
-  size={64}
   user={
     Object {
       "email": "janedoe@example.com",
diff --git a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
index 6912b0284c..96d883b704 100644
--- a/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/resolutionBox.spec.jsx.snap
@@ -42,7 +42,6 @@ exports[`ResolutionBox render() handles inNextRelease with actor 1`] = `
       >
         <Avatar
           className="avatar"
-          gravatar={true}
           hasTooltip={false}
           size={20}
           user={
@@ -121,7 +120,6 @@ exports[`ResolutionBox render() handles inRelease with actor 1`] = `
       >
         <Avatar
           className="avatar"
-          gravatar={true}
           hasTooltip={false}
           size={20}
           user={
diff --git a/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap b/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap
deleted file mode 100644
index 3f2f3d3aec..0000000000
--- a/tests/js/spec/components/__snapshots__/teamAvatar.spec.jsx.snap
+++ /dev/null
@@ -1,17 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`TeamAvatar render() renders 1`] = `
-<Tooltip
-  disabled={true}
-  title="#team-slug"
->
-  <span
-    className="avatar avatar"
-  >
-    <LetterAvatar
-      displayName="team-slug"
-      identifier="team-slug"
-    />
-  </span>
-</Tooltip>
-`;
diff --git a/tests/js/spec/components/actorAvatar.spec.jsx b/tests/js/spec/components/actorAvatar.spec.jsx
index e49dc99b01..9ef04d2b70 100644
--- a/tests/js/spec/components/actorAvatar.spec.jsx
+++ b/tests/js/spec/components/actorAvatar.spec.jsx
@@ -14,6 +14,7 @@ describe('Avatar', function() {
   };
   const TEAM_1 = {
     id: '3',
+    slug: 'cool-team',
     name: 'COOL TEAM',
     projects: [
       {
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index ccf86fcbaf..aa844a24df 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -179,7 +179,8 @@ describe('AssigneeSelector', function() {
       assigneeSelector.update();
       expect(assigneeSelector.instance().assignableTeams().length).toBe(1);
 
-      expect(assigneeSelector.find('Avatar').length).toBe(2);
+      expect(assigneeSelector.find('Avatar').length).toBe(3);
+      expect(assigneeSelector.find('UserAvatar').length).toBe(2);
       expect(assigneeSelector.find('TeamAvatar').length).toBe(1);
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
     });
@@ -189,13 +190,13 @@ describe('AssigneeSelector', function() {
       MemberListStore.loadInitialData([USER_1, USER_2]);
       assigneeSelector.update();
 
-      expect(assigneeSelector.find('Avatar').length).toBe(2);
+      expect(assigneeSelector.find('Avatar').length).toBe(3);
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
 
       MemberListStore.loadInitialData([USER_1, USER_2, USER_3]);
       assigneeSelector.update();
 
-      expect(assigneeSelector.find('Avatar').length).toBe(2);
+      expect(assigneeSelector.find('Avatar').length).toBe(3);
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(false);
     });
 
diff --git a/tests/js/spec/components/avatar.spec.jsx b/tests/js/spec/components/avatar.spec.jsx
index 0a86a6766d..c569a20369 100644
--- a/tests/js/spec/components/avatar.spec.jsx
+++ b/tests/js/spec/components/avatar.spec.jsx
@@ -1,24 +1,22 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {mount} from 'enzyme';
 import Avatar from 'app/components/avatar';
 
-describe('Avatar', function() {
-  let sandbox;
+jest.mock('app/stores/configStore', () => {
+  return {
+    getConfig: () => ({
+      gravatarBaseUrl: 'gravatarBaseUrl',
+    }),
+  };
+});
 
+describe('Avatar', function() {
   const USER = {
-    id: 1,
+    id: '1',
     name: 'Jane Doe',
     email: 'janedoe@example.com',
   };
 
-  beforeEach(function() {
-    sandbox = sinon.sandbox.create();
-  });
-
-  afterEach(function() {
-    sandbox.restore();
-  });
-
   describe('render()', function() {
     it('has `avatar` className', function() {
       let user = Object.assign({}, USER, {
@@ -27,7 +25,7 @@ describe('Avatar', function() {
           avatarUuid: '2d641b5d-8c74-44de-9cb6-fbd54701b35e',
         },
       });
-      let avatar = shallow(<Avatar user={user} />);
+      let avatar = mount(<Avatar user={user} />);
       expect(avatar.find('.avatar')).toHaveLength(1);
     });
 
@@ -38,12 +36,12 @@ describe('Avatar', function() {
           avatarUuid: '2d641b5d-8c74-44de-9cb6-fbd54701b35e',
         },
       });
-      let avatar = shallow(<Avatar user={user} />).instance();
-      sandbox.stub(avatar, 'buildGravatarUrl');
-      sandbox.stub(avatar, 'buildProfileUrl');
-      avatar.renderImg();
-      expect(avatar.buildGravatarUrl.calledOnce).toBeTruthy();
-      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
+      let avatar = mount(<Avatar user={user} />);
+
+      expect(avatar.find('BaseAvatar').prop('type')).toBe('gravatar');
+      expect(avatar.find('BaseAvatar img').prop('src')).toMatch(
+        'gravatarBaseUrl/avatar/'
+      );
     });
 
     it('should show an upload when avatar type is upload', function() {
@@ -53,12 +51,14 @@ describe('Avatar', function() {
           avatarUuid: '2d641b5d-8c74-44de-9cb6-fbd54701b35e',
         },
       });
-      let avatar = shallow(<Avatar user={user} />).instance();
-      sandbox.stub(avatar, 'buildGravatarUrl');
-      sandbox.stub(avatar, 'buildProfileUrl');
-      avatar.renderImg();
-      expect(avatar.buildProfileUrl.calledOnce).toBeTruthy();
-      expect(avatar.buildGravatarUrl.called).not.toBeTruthy();
+      let avatar = mount(<Avatar user={user} />);
+      expect(avatar.find('BaseAvatar').prop('type')).toBe('upload');
+      expect(avatar.find('BaseAvatar').prop('uploadId')).toBe(
+        '2d641b5d-8c74-44de-9cb6-fbd54701b35e'
+      );
+      expect(avatar.find('BaseAvatar img').prop('src')).toMatch(
+        '/avatar/2d641b5d-8c74-44de-9cb6-fbd54701b35e'
+      );
     });
 
     it('should not show upload or gravatar when avatar type is letter', function() {
@@ -68,32 +68,35 @@ describe('Avatar', function() {
           avatarUuid: '2d641b5d-8c74-44de-9cb6-fbd54701b35e',
         },
       });
-      let avatar = shallow(<Avatar user={user} />).instance();
-      sandbox.stub(avatar, 'buildGravatarUrl');
-      sandbox.stub(avatar, 'buildProfileUrl');
-      avatar.renderImg();
-      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
-      expect(avatar.buildGravatarUrl.called).not.toBeTruthy();
+      let avatar = mount(<Avatar user={user} />);
+      expect(avatar.find('BaseAvatar').prop('type')).toBe('letter_avatar');
     });
 
     it('should show a gravatar when no avatar type is set and user has an email address', function() {
-      let avatar = shallow(<Avatar user={USER} />).instance();
-      sandbox.stub(avatar, 'buildGravatarUrl');
-      sandbox.stub(avatar, 'buildProfileUrl');
-      avatar.renderImg();
-      expect(avatar.buildGravatarUrl.calledOnce).toBeTruthy();
-      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
+      let avatar = mount(<Avatar user={USER} />);
+      expect(avatar.find('BaseAvatar').prop('type')).toBe('gravatar');
     });
 
     it('should not show a gravatar when no avatar type is set and user has no email address', function() {
       let user = Object.assign({}, USER);
       delete user.email;
-      let avatar = shallow(<Avatar user={user} />).instance();
-      sandbox.stub(avatar, 'buildGravatarUrl');
-      sandbox.stub(avatar, 'buildProfileUrl');
-      avatar.renderImg();
-      expect(avatar.buildGravatarUrl.called).not.toBeTruthy();
-      expect(avatar.buildProfileUrl.called).not.toBeTruthy();
+      let avatar = mount(<Avatar user={user} />);
+
+      expect(avatar.find('BaseAvatar').prop('type')).toBe('letter_avatar');
+    });
+
+    it('can display a team Avatar', function() {
+      let team = TestStubs.Team({slug: 'test-team_test'});
+      let avatar = mount(<Avatar team={team} />);
+      expect(avatar.find('LetterAvatar').prop('displayName')).toBe('test team test');
+      expect(avatar.find('LetterAvatar').prop('identifier')).toBe('test-team_test');
+    });
+
+    it('can display an organization Avatar', function() {
+      let organization = TestStubs.Organization({slug: 'test-organization'});
+      let avatar = mount(<Avatar organization={organization} />);
+      expect(avatar.find('LetterAvatar').prop('displayName')).toBe('test organization');
+      expect(avatar.find('LetterAvatar').prop('identifier')).toBe('test-organization');
     });
   });
 });
diff --git a/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap
index cd40945106..db013af069 100644
--- a/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/suggestedOwners.spec.jsx.snap
@@ -78,9 +78,7 @@ exports[`SuggestedOwners render() should show owners when enable 1`] = `
           >
             <Avatar
               className="tip"
-              gravatar={true}
               hasTooltip={false}
-              size={64}
               title="<div><div class=\\"tooltip-owners-name\\">Jane Doe</div><ul class=\\"tooltip-owners-commits\\">Assigned based on your Project&#x27;s Issue Ownership settings</ul><ul class=\\"tooltip-owners-commits\\">path matched: sentry/tagstore/*</ul></div>"
               user={
                 Object {
@@ -90,20 +88,47 @@ exports[`SuggestedOwners render() should show owners when enable 1`] = `
                 }
               }
             >
-              <Tooltip
-                disabled={true}
-                title="Jane Doe (janedoe@example.com)"
+              <UserAvatar
+                className="tip"
+                gravatar={true}
+                hasTooltip={false}
+                title="<div><div class=\\"tooltip-owners-name\\">Jane Doe</div><ul class=\\"tooltip-owners-commits\\">Assigned based on your Project&#x27;s Issue Ownership settings</ul><ul class=\\"tooltip-owners-commits\\">path matched: sentry/tagstore/*</ul></div>"
+                user={
+                  Object {
+                    "email": "janedoe@example.com",
+                    "id": "1",
+                    "name": "Jane Doe",
+                  }
+                }
               >
-                <span
-                  className="avatar tip"
+                <BaseAvatar
+                  className="tip"
+                  gravatar={true}
+                  gravatarId="janedoe@example.com"
+                  hasTooltip={false}
+                  letterId="janedoe@example.com"
+                  style={Object {}}
+                  title="Jane Doe"
+                  tooltip="Jane Doe (janedoe@example.com)"
+                  type="gravatar"
                 >
-                  <img
-                    onError={[Function]}
-                    onLoad={[Function]}
-                    src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=64"
-                  />
-                </span>
-              </Tooltip>
+                  <Tooltip
+                    disabled={true}
+                    title="Jane Doe (janedoe@example.com)"
+                  >
+                    <span
+                      className="avatar tip"
+                      style={Object {}}
+                    >
+                      <img
+                        onError={[Function]}
+                        onLoad={[Function]}
+                        src="undefined/avatar/e1f3994f2632af3d1c8c2dcc168a10e6?d=blank&s=64"
+                      />
+                    </span>
+                  </Tooltip>
+                </BaseAvatar>
+              </UserAvatar>
             </Avatar>
           </ActorAvatar>
         </Tooltip>
diff --git a/tests/js/spec/components/teamAvatar.spec.jsx b/tests/js/spec/components/teamAvatar.spec.jsx
deleted file mode 100644
index a15a8c70db..0000000000
--- a/tests/js/spec/components/teamAvatar.spec.jsx
+++ /dev/null
@@ -1,14 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import TeamAvatar from 'app/components/teamAvatar';
-
-describe('TeamAvatar', function() {
-  describe('render()', function() {
-    it('renders', function() {
-      let team = TestStubs.Team();
-      let wrapper = shallow(<TeamAvatar team={team} />);
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
diff --git a/tests/js/spec/components/userLetterAvatar.spec.jsx b/tests/js/spec/components/userLetterAvatar.spec.jsx
deleted file mode 100644
index c8c6112cd5..0000000000
--- a/tests/js/spec/components/userLetterAvatar.spec.jsx
+++ /dev/null
@@ -1,85 +0,0 @@
-import React from 'react';
-import TestUtils from 'react-dom/test-utils';
-import UserLetterAvatar from 'app/components/userLetterAvatar';
-
-describe('LetterAvatar', function() {
-  const USER_1 = {
-    id: '1',
-    name: 'Jane Doe',
-    email: 'janedoe@example.com',
-  };
-  const USER_2 = {
-    id: '2',
-    email: 'johnsmith@example.com',
-  };
-  const USER_3 = {
-    id: '2',
-    username: 'foo@example.com',
-  };
-  const USER_4 = {
-    id: '2',
-  };
-  const USER_5 = {
-    ip_address: '127.0.0.1',
-  };
-
-  describe('getDisplayName()', function() {
-    it('should set displayName based on name', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_1} />
-      );
-      expect(this.letterAvatar.getDisplayName()).toEqual('Jane Doe');
-    });
-
-    it('should set displayName based on email', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_2} />
-      );
-      expect(this.letterAvatar.getDisplayName()).toEqual('johnsmith@example.com');
-    });
-
-    it('should set displayName based on username', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_3} />
-      );
-      expect(this.letterAvatar.getDisplayName()).toEqual('foo@example.com');
-    });
-
-    it('should set displayName to empty string if nothing useful', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_4} />
-      );
-      expect(this.letterAvatar.getDisplayName()).toEqual('');
-    });
-  });
-
-  describe('getIdentifier()', function() {
-    it('should use email', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_1} />
-      );
-      expect(this.letterAvatar.getIdentifier()).toEqual('janedoe@example.com');
-    });
-
-    it('should use username', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_3} />
-      );
-      expect(this.letterAvatar.getIdentifier()).toEqual('foo@example.com');
-    });
-
-    it('should use id', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_4} />
-      );
-      expect(this.letterAvatar.getIdentifier()).toEqual('2');
-    });
-
-    it('should use ip address', function() {
-      this.letterAvatar = TestUtils.renderIntoDocument(
-        <UserLetterAvatar user={USER_5} />
-      );
-      expect(this.letterAvatar.getIdentifier()).toEqual('127.0.0.1');
-    });
-  });
-});
diff --git a/tests/js/spec/utils/utils.spec.jsx b/tests/js/spec/utils/utils.spec.jsx
index 8955c98991..2991d72aa4 100644
--- a/tests/js/spec/utils/utils.spec.jsx
+++ b/tests/js/spec/utils/utils.spec.jsx
@@ -1,4 +1,4 @@
-import {valueIsEqual, extractMultilineFields, parseRepo} from 'app/utils';
+import {valueIsEqual, extractMultilineFields, parseRepo, explodeSlug} from 'app/utils';
 
 describe('utils.valueIsEqual', function() {
   it('should return true when objects are deeply equal', function() {
@@ -162,3 +162,9 @@ describe('utils.parseRepo', function() {
     expect(parseRepo()).toEqual();
   });
 });
+
+describe('utils.explodeSlug', function() {
+  it('replaces slug special chars with whitespace', function() {
+    expect(explodeSlug('test--slug__replace-')).toEqual('test slug replace');
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
index 6ce4a05432..d96c082354 100644
--- a/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/auditLogView.spec.jsx.snap
@@ -1094,9 +1094,7 @@ exports[`AuditLogView renders 1`] = `
                                   >
                                     <div>
                                       <Avatar
-                                        gravatar={true}
                                         hasTooltip={false}
-                                        size={64}
                                         style={
                                           Object {
                                             "height": 36,
@@ -1175,12 +1173,92 @@ exports[`AuditLogView renders 1`] = `
                                           }
                                         }
                                       >
-                                        <Tooltip
-                                          disabled={true}
-                                          title="billy vong (billy@sentry.io)"
+                                        <UserAvatar
+                                          gravatar={true}
+                                          hasTooltip={false}
+                                          style={
+                                            Object {
+                                              "height": 36,
+                                              "marginRight": 8,
+                                              "width": 36,
+                                            }
+                                          }
+                                          user={
+                                            Object {
+                                              "avatar": Object {
+                                                "avatarType": "letter_avatar",
+                                                "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
+                                              },
+                                              "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                                              "dateJoined": "2018-01-10T00:19:59Z",
+                                              "email": "billy@sentry.io",
+                                              "emails": Array [
+                                                Object {
+                                                  "email": "billy@sentry.io",
+                                                  "id": "5",
+                                                  "is_verified": true,
+                                                },
+                                                Object {
+                                                  "email": "billy36@sentry.io",
+                                                  "id": "17",
+                                                  "is_verified": false,
+                                                },
+                                                Object {
+                                                  "email": "awerawer@awe.com",
+                                                  "id": "11",
+                                                  "is_verified": false,
+                                                },
+                                                Object {
+                                                  "email": "test@test.com",
+                                                  "id": "28",
+                                                  "is_verified": false,
+                                                },
+                                                Object {
+                                                  "email": "billy2@sentry.io",
+                                                  "id": "10",
+                                                  "is_verified": true,
+                                                },
+                                              ],
+                                              "has2fa": true,
+                                              "id": "1",
+                                              "identities": Array [
+                                                Object {
+                                                  "dateSynced": "2018-02-21T17:09:46.248Z",
+                                                  "dateVerified": "2018-02-21T17:09:46.248Z",
+                                                  "id": "1",
+                                                  "name": "79684",
+                                                  "organization": Object {
+                                                    "name": "default",
+                                                    "slug": "default",
+                                                  },
+                                                  "provider": Object {
+                                                    "id": "github",
+                                                    "name": "GitHub",
+                                                  },
+                                                },
+                                              ],
+                                              "isActive": true,
+                                              "isManaged": false,
+                                              "lastActive": "2018-02-21T17:40:31.555Z",
+                                              "lastLogin": "2018-02-14T07:09:37.536Z",
+                                              "name": "billy vong",
+                                              "options": Object {
+                                                "clock24Hours": false,
+                                                "language": "en",
+                                                "seenReleaseBroadcast": true,
+                                                "stacktraceOrder": -1,
+                                                "timezone": "America/Los_Angeles",
+                                              },
+                                              "permissions": Array [],
+                                              "username": "billy@sentry.io",
+                                            }
+                                          }
                                         >
-                                          <span
-                                            className="avatar"
+                                          <BaseAvatar
+                                            gravatar={true}
+                                            gravatarId="billy@sentry.io"
+                                            hasTooltip={false}
+                                            letterId="billy@sentry.io"
                                             style={
                                               Object {
                                                 "height": 36,
@@ -1188,114 +1266,61 @@ exports[`AuditLogView renders 1`] = `
                                                 "width": 36,
                                               }
                                             }
+                                            title="billy vong"
+                                            tooltip="billy vong (billy@sentry.io)"
+                                            type="letter_avatar"
+                                            uploadId="483ed7478a2248d59211f538c2997e0b"
                                           >
-                                            <UserLetterAvatar
-                                              user={
-                                                Object {
-                                                  "avatar": Object {
-                                                    "avatarType": "letter_avatar",
-                                                    "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
-                                                  },
-                                                  "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
-                                                  "dateJoined": "2018-01-10T00:19:59Z",
-                                                  "email": "billy@sentry.io",
-                                                  "emails": Array [
-                                                    Object {
-                                                      "email": "billy@sentry.io",
-                                                      "id": "5",
-                                                      "is_verified": true,
-                                                    },
-                                                    Object {
-                                                      "email": "billy36@sentry.io",
-                                                      "id": "17",
-                                                      "is_verified": false,
-                                                    },
-                                                    Object {
-                                                      "email": "awerawer@awe.com",
-                                                      "id": "11",
-                                                      "is_verified": false,
-                                                    },
-                                                    Object {
-                                                      "email": "test@test.com",
-                                                      "id": "28",
-                                                      "is_verified": false,
-                                                    },
-                                                    Object {
-                                                      "email": "billy2@sentry.io",
-                                                      "id": "10",
-                                                      "is_verified": true,
-                                                    },
-                                                  ],
-                                                  "has2fa": true,
-                                                  "id": "1",
-                                                  "identities": Array [
-                                                    Object {
-                                                      "dateSynced": "2018-02-21T17:09:46.248Z",
-                                                      "dateVerified": "2018-02-21T17:09:46.248Z",
-                                                      "id": "1",
-                                                      "name": "79684",
-                                                      "organization": Object {
-                                                        "name": "default",
-                                                        "slug": "default",
-                                                      },
-                                                      "provider": Object {
-                                                        "id": "github",
-                                                        "name": "GitHub",
-                                                      },
-                                                    },
-                                                  ],
-                                                  "isActive": true,
-                                                  "isManaged": false,
-                                                  "lastActive": "2018-02-21T17:40:31.555Z",
-                                                  "lastLogin": "2018-02-14T07:09:37.536Z",
-                                                  "name": "billy vong",
-                                                  "options": Object {
-                                                    "clock24Hours": false,
-                                                    "language": "en",
-                                                    "seenReleaseBroadcast": true,
-                                                    "stacktraceOrder": -1,
-                                                    "timezone": "America/Los_Angeles",
-                                                  },
-                                                  "permissions": Array [],
-                                                  "username": "billy@sentry.io",
-                                                }
-                                              }
+                                            <Tooltip
+                                              disabled={true}
+                                              title="billy vong (billy@sentry.io)"
                                             >
-                                              <LetterAvatar
-                                                displayName="billy vong"
-                                                identifier="billy@sentry.io"
+                                              <span
+                                                className="avatar"
+                                                style={
+                                                  Object {
+                                                    "height": 36,
+                                                    "marginRight": 8,
+                                                    "width": 36,
+                                                  }
+                                                }
                                               >
-                                                <svg
-                                                  viewBox="0 0 120 120"
+                                                <LetterAvatar
+                                                  displayName="billy vong"
+                                                  identifier="billy@sentry.io"
                                                 >
-                                                  <rect
-                                                    fill="#f868bc"
-                                                    height="120"
-                                                    rx="15"
-                                                    ry="15"
-                                                    width="120"
-                                                    x="0"
-                                                    y="0"
-                                                  />
-                                                  <text
-                                                    fill="#FFFFFF"
-                                                    fontSize="65"
-                                                    style={
-                                                      Object {
-                                                        "dominantBaseline": "central",
-                                                      }
-                                                    }
-                                                    textAnchor="middle"
-                                                    x="50%"
-                                                    y="50%"
+                                                  <svg
+                                                    viewBox="0 0 120 120"
                                                   >
-                                                    BV
-                                                  </text>
-                                                </svg>
-                                              </LetterAvatar>
-                                            </UserLetterAvatar>
-                                          </span>
-                                        </Tooltip>
+                                                    <rect
+                                                      fill="#f868bc"
+                                                      height="120"
+                                                      rx="15"
+                                                      ry="15"
+                                                      width="120"
+                                                      x="0"
+                                                      y="0"
+                                                    />
+                                                    <text
+                                                      fill="#FFFFFF"
+                                                      fontSize="65"
+                                                      style={
+                                                        Object {
+                                                          "dominantBaseline": "central",
+                                                        }
+                                                      }
+                                                      textAnchor="middle"
+                                                      x="50%"
+                                                      y="50%"
+                                                    >
+                                                      BV
+                                                    </text>
+                                                  </svg>
+                                                </LetterAvatar>
+                                              </span>
+                                            </Tooltip>
+                                          </BaseAvatar>
+                                        </UserAvatar>
                                       </Avatar>
                                     </div>
                                     <NameContainer>
@@ -1412,9 +1437,7 @@ exports[`AuditLogView renders 1`] = `
                                   >
                                     <div>
                                       <Avatar
-                                        gravatar={true}
                                         hasTooltip={false}
-                                        size={64}
                                         style={
                                           Object {
                                             "height": 36,
@@ -1493,12 +1516,92 @@ exports[`AuditLogView renders 1`] = `
                                           }
                                         }
                                       >
-                                        <Tooltip
-                                          disabled={true}
-                                          title="billy vong (billy@sentry.io)"
+                                        <UserAvatar
+                                          gravatar={true}
+                                          hasTooltip={false}
+                                          style={
+                                            Object {
+                                              "height": 36,
+                                              "marginRight": 8,
+                                              "width": 36,
+                                            }
+                                          }
+                                          user={
+                                            Object {
+                                              "avatar": Object {
+                                                "avatarType": "letter_avatar",
+                                                "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
+                                              },
+                                              "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
+                                              "dateJoined": "2018-01-10T00:19:59Z",
+                                              "email": "billy@sentry.io",
+                                              "emails": Array [
+                                                Object {
+                                                  "email": "billy@sentry.io",
+                                                  "id": "5",
+                                                  "is_verified": true,
+                                                },
+                                                Object {
+                                                  "email": "billy36@sentry.io",
+                                                  "id": "17",
+                                                  "is_verified": false,
+                                                },
+                                                Object {
+                                                  "email": "awerawer@awe.com",
+                                                  "id": "11",
+                                                  "is_verified": false,
+                                                },
+                                                Object {
+                                                  "email": "test@test.com",
+                                                  "id": "28",
+                                                  "is_verified": false,
+                                                },
+                                                Object {
+                                                  "email": "billy2@sentry.io",
+                                                  "id": "10",
+                                                  "is_verified": true,
+                                                },
+                                              ],
+                                              "has2fa": true,
+                                              "id": "1",
+                                              "identities": Array [
+                                                Object {
+                                                  "dateSynced": "2018-02-21T17:09:46.248Z",
+                                                  "dateVerified": "2018-02-21T17:09:46.248Z",
+                                                  "id": "1",
+                                                  "name": "79684",
+                                                  "organization": Object {
+                                                    "name": "default",
+                                                    "slug": "default",
+                                                  },
+                                                  "provider": Object {
+                                                    "id": "github",
+                                                    "name": "GitHub",
+                                                  },
+                                                },
+                                              ],
+                                              "isActive": true,
+                                              "isManaged": false,
+                                              "lastActive": "2018-02-21T17:40:31.555Z",
+                                              "lastLogin": "2018-02-14T07:09:37.536Z",
+                                              "name": "billy vong",
+                                              "options": Object {
+                                                "clock24Hours": false,
+                                                "language": "en",
+                                                "seenReleaseBroadcast": true,
+                                                "stacktraceOrder": -1,
+                                                "timezone": "America/Los_Angeles",
+                                              },
+                                              "permissions": Array [],
+                                              "username": "billy@sentry.io",
+                                            }
+                                          }
                                         >
-                                          <span
-                                            className="avatar"
+                                          <BaseAvatar
+                                            gravatar={true}
+                                            gravatarId="billy@sentry.io"
+                                            hasTooltip={false}
+                                            letterId="billy@sentry.io"
                                             style={
                                               Object {
                                                 "height": 36,
@@ -1506,114 +1609,61 @@ exports[`AuditLogView renders 1`] = `
                                                 "width": 36,
                                               }
                                             }
+                                            title="billy vong"
+                                            tooltip="billy vong (billy@sentry.io)"
+                                            type="letter_avatar"
+                                            uploadId="483ed7478a2248d59211f538c2997e0b"
                                           >
-                                            <UserLetterAvatar
-                                              user={
-                                                Object {
-                                                  "avatar": Object {
-                                                    "avatarType": "letter_avatar",
-                                                    "avatarUuid": "483ed7478a2248d59211f538c2997e0b",
-                                                  },
-                                                  "avatarUrl": "https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm",
-                                                  "dateJoined": "2018-01-10T00:19:59Z",
-                                                  "email": "billy@sentry.io",
-                                                  "emails": Array [
-                                                    Object {
-                                                      "email": "billy@sentry.io",
-                                                      "id": "5",
-                                                      "is_verified": true,
-                                                    },
-                                                    Object {
-                                                      "email": "billy36@sentry.io",
-                                                      "id": "17",
-                                                      "is_verified": false,
-                                                    },
-                                                    Object {
-                                                      "email": "awerawer@awe.com",
-                                                      "id": "11",
-                                                      "is_verified": false,
-                                                    },
-                                                    Object {
-                                                      "email": "test@test.com",
-                                                      "id": "28",
-                                                      "is_verified": false,
-                                                    },
-                                                    Object {
-                                                      "email": "billy2@sentry.io",
-                                                      "id": "10",
-                                                      "is_verified": true,
-                                                    },
-                                                  ],
-                                                  "has2fa": true,
-                                                  "id": "1",
-                                                  "identities": Array [
-                                                    Object {
-                                                      "dateSynced": "2018-02-21T17:09:46.248Z",
-                                                      "dateVerified": "2018-02-21T17:09:46.248Z",
-                                                      "id": "1",
-                                                      "name": "79684",
-                                                      "organization": Object {
-                                                        "name": "default",
-                                                        "slug": "default",
-                                                      },
-                                                      "provider": Object {
-                                                        "id": "github",
-                                                        "name": "GitHub",
-                                                      },
-                                                    },
-                                                  ],
-                                                  "isActive": true,
-                                                  "isManaged": false,
-                                                  "lastActive": "2018-02-21T17:40:31.555Z",
-                                                  "lastLogin": "2018-02-14T07:09:37.536Z",
-                                                  "name": "billy vong",
-                                                  "options": Object {
-                                                    "clock24Hours": false,
-                                                    "language": "en",
-                                                    "seenReleaseBroadcast": true,
-                                                    "stacktraceOrder": -1,
-                                                    "timezone": "America/Los_Angeles",
-                                                  },
-                                                  "permissions": Array [],
-                                                  "username": "billy@sentry.io",
-                                                }
-                                              }
+                                            <Tooltip
+                                              disabled={true}
+                                              title="billy vong (billy@sentry.io)"
                                             >
-                                              <LetterAvatar
-                                                displayName="billy vong"
-                                                identifier="billy@sentry.io"
+                                              <span
+                                                className="avatar"
+                                                style={
+                                                  Object {
+                                                    "height": 36,
+                                                    "marginRight": 8,
+                                                    "width": 36,
+                                                  }
+                                                }
                                               >
-                                                <svg
-                                                  viewBox="0 0 120 120"
+                                                <LetterAvatar
+                                                  displayName="billy vong"
+                                                  identifier="billy@sentry.io"
                                                 >
-                                                  <rect
-                                                    fill="#f868bc"
-                                                    height="120"
-                                                    rx="15"
-                                                    ry="15"
-                                                    width="120"
-                                                    x="0"
-                                                    y="0"
-                                                  />
-                                                  <text
-                                                    fill="#FFFFFF"
-                                                    fontSize="65"
-                                                    style={
-                                                      Object {
-                                                        "dominantBaseline": "central",
-                                                      }
-                                                    }
-                                                    textAnchor="middle"
-                                                    x="50%"
-                                                    y="50%"
+                                                  <svg
+                                                    viewBox="0 0 120 120"
                                                   >
-                                                    BV
-                                                  </text>
-                                                </svg>
-                                              </LetterAvatar>
-                                            </UserLetterAvatar>
-                                          </span>
-                                        </Tooltip>
+                                                    <rect
+                                                      fill="#f868bc"
+                                                      height="120"
+                                                      rx="15"
+                                                      ry="15"
+                                                      width="120"
+                                                      x="0"
+                                                      y="0"
+                                                    />
+                                                    <text
+                                                      fill="#FFFFFF"
+                                                      fontSize="65"
+                                                      style={
+                                                        Object {
+                                                          "dominantBaseline": "central",
+                                                        }
+                                                      }
+                                                      textAnchor="middle"
+                                                      x="50%"
+                                                      y="50%"
+                                                    >
+                                                      BV
+                                                    </text>
+                                                  </svg>
+                                                </LetterAvatar>
+                                              </span>
+                                            </Tooltip>
+                                          </BaseAvatar>
+                                        </UserAvatar>
                                       </Avatar>
                                     </div>
                                     <NameContainer>
diff --git a/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
index 7f3369aecc..68c3f66823 100644
--- a/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationMembersView.spec.jsx.snap
@@ -530,15 +530,8 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                   is={null}
                                 >
                                   <Avatar
-                                    gravatar={true}
                                     hasTooltip={false}
-                                    size={64}
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                    size={32}
                                     user={
                                       Object {
                                         "email": "sentry1@test.com",
@@ -549,26 +542,53 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                       }
                                     }
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sentry 1 Name (sentry1@test.com)"
-                                    >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 32,
-                                            "width": 32,
-                                          }
+                                    <UserAvatar
+                                      gravatar={true}
+                                      hasTooltip={false}
+                                      size={32}
+                                      user={
+                                        Object {
+                                          "email": "sentry1@test.com",
+                                          "has2fa": false,
+                                          "id": "1",
+                                          "name": "Sentry 1 Name",
+                                          "username": "Sentry 1 Username",
                                         }
+                                      }
+                                    >
+                                      <BaseAvatar
+                                        gravatar={true}
+                                        gravatarId="sentry1@test.com"
+                                        hasTooltip={false}
+                                        letterId="sentry1@test.com"
+                                        size={32}
+                                        style={Object {}}
+                                        title="Sentry 1 Name"
+                                        tooltip="Sentry 1 Name (sentry1@test.com)"
+                                        type="gravatar"
                                       >
-                                        <img
-                                          onError={[Function]}
-                                          onLoad={[Function]}
-                                          src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?d=blank&s=64"
-                                        />
-                                      </span>
-                                    </Tooltip>
+                                        <Tooltip
+                                          disabled={true}
+                                          title="Sentry 1 Name (sentry1@test.com)"
+                                        >
+                                          <span
+                                            className="avatar"
+                                            style={
+                                              Object {
+                                                "height": "32px",
+                                                "width": "32px",
+                                              }
+                                            }
+                                          >
+                                            <img
+                                              onError={[Function]}
+                                              onLoad={[Function]}
+                                              src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?d=blank&s=32"
+                                            />
+                                          </span>
+                                        </Tooltip>
+                                      </BaseAvatar>
+                                    </UserAvatar>
                                   </Avatar>
                                 </div>
                               </Base>
@@ -805,15 +825,8 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                   is={null}
                                 >
                                   <Avatar
-                                    gravatar={true}
                                     hasTooltip={false}
-                                    size={64}
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                    size={32}
                                     user={
                                       Object {
                                         "email": "sentry2@test.com",
@@ -824,26 +837,53 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                       }
                                     }
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sentry 2 Name (sentry2@test.com)"
-                                    >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 32,
-                                            "width": 32,
-                                          }
+                                    <UserAvatar
+                                      gravatar={true}
+                                      hasTooltip={false}
+                                      size={32}
+                                      user={
+                                        Object {
+                                          "email": "sentry2@test.com",
+                                          "has2fa": true,
+                                          "id": "2",
+                                          "name": "Sentry 2 Name",
+                                          "username": "Sentry 2 Username",
                                         }
+                                      }
+                                    >
+                                      <BaseAvatar
+                                        gravatar={true}
+                                        gravatarId="sentry2@test.com"
+                                        hasTooltip={false}
+                                        letterId="sentry2@test.com"
+                                        size={32}
+                                        style={Object {}}
+                                        title="Sentry 2 Name"
+                                        tooltip="Sentry 2 Name (sentry2@test.com)"
+                                        type="gravatar"
                                       >
-                                        <img
-                                          onError={[Function]}
-                                          onLoad={[Function]}
-                                          src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?d=blank&s=64"
-                                        />
-                                      </span>
-                                    </Tooltip>
+                                        <Tooltip
+                                          disabled={true}
+                                          title="Sentry 2 Name (sentry2@test.com)"
+                                        >
+                                          <span
+                                            className="avatar"
+                                            style={
+                                              Object {
+                                                "height": "32px",
+                                                "width": "32px",
+                                              }
+                                            }
+                                          >
+                                            <img
+                                              onError={[Function]}
+                                              onLoad={[Function]}
+                                              src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?d=blank&s=32"
+                                            />
+                                          </span>
+                                        </Tooltip>
+                                      </BaseAvatar>
+                                    </UserAvatar>
                                   </Avatar>
                                 </div>
                               </Base>
@@ -1075,15 +1115,8 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                   is={null}
                                 >
                                   <Avatar
-                                    gravatar={true}
                                     hasTooltip={false}
-                                    size={64}
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                    size={32}
                                     user={
                                       Object {
                                         "email": "sentry3@test.com",
@@ -1094,26 +1127,53 @@ exports[`OrganizationMembersView No Require Link does not have 2fa warning if us
                                       }
                                     }
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sentry 3 Name (sentry3@test.com)"
-                                    >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 32,
-                                            "width": 32,
-                                          }
+                                    <UserAvatar
+                                      gravatar={true}
+                                      hasTooltip={false}
+                                      size={32}
+                                      user={
+                                        Object {
+                                          "email": "sentry3@test.com",
+                                          "has2fa": true,
+                                          "id": "3",
+                                          "name": "Sentry 3 Name",
+                                          "username": "Sentry 3 Username",
                                         }
+                                      }
+                                    >
+                                      <BaseAvatar
+                                        gravatar={true}
+                                        gravatarId="sentry3@test.com"
+                                        hasTooltip={false}
+                                        letterId="sentry3@test.com"
+                                        size={32}
+                                        style={Object {}}
+                                        title="Sentry 3 Name"
+                                        tooltip="Sentry 3 Name (sentry3@test.com)"
+                                        type="gravatar"
                                       >
-                                        <img
-                                          onError={[Function]}
-                                          onLoad={[Function]}
-                                          src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?d=blank&s=64"
-                                        />
-                                      </span>
-                                    </Tooltip>
+                                        <Tooltip
+                                          disabled={true}
+                                          title="Sentry 3 Name (sentry3@test.com)"
+                                        >
+                                          <span
+                                            className="avatar"
+                                            style={
+                                              Object {
+                                                "height": "32px",
+                                                "width": "32px",
+                                              }
+                                            }
+                                          >
+                                            <img
+                                              onError={[Function]}
+                                              onLoad={[Function]}
+                                              src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?d=blank&s=32"
+                                            />
+                                          </span>
+                                        </Tooltip>
+                                      </BaseAvatar>
+                                    </UserAvatar>
                                   </Avatar>
                                 </div>
                               </Base>
@@ -1801,15 +1861,8 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                   is={null}
                                 >
                                   <Avatar
-                                    gravatar={true}
                                     hasTooltip={false}
-                                    size={64}
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                    size={32}
                                     user={
                                       Object {
                                         "email": "sentry1@test.com",
@@ -1820,26 +1873,53 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                       }
                                     }
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sentry 1 Name (sentry1@test.com)"
-                                    >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 32,
-                                            "width": 32,
-                                          }
+                                    <UserAvatar
+                                      gravatar={true}
+                                      hasTooltip={false}
+                                      size={32}
+                                      user={
+                                        Object {
+                                          "email": "sentry1@test.com",
+                                          "has2fa": false,
+                                          "id": "1",
+                                          "name": "Sentry 1 Name",
+                                          "username": "Sentry 1 Username",
                                         }
+                                      }
+                                    >
+                                      <BaseAvatar
+                                        gravatar={true}
+                                        gravatarId="sentry1@test.com"
+                                        hasTooltip={false}
+                                        letterId="sentry1@test.com"
+                                        size={32}
+                                        style={Object {}}
+                                        title="Sentry 1 Name"
+                                        tooltip="Sentry 1 Name (sentry1@test.com)"
+                                        type="gravatar"
                                       >
-                                        <img
-                                          onError={[Function]}
-                                          onLoad={[Function]}
-                                          src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?d=blank&s=64"
-                                        />
-                                      </span>
-                                    </Tooltip>
+                                        <Tooltip
+                                          disabled={true}
+                                          title="Sentry 1 Name (sentry1@test.com)"
+                                        >
+                                          <span
+                                            className="avatar"
+                                            style={
+                                              Object {
+                                                "height": "32px",
+                                                "width": "32px",
+                                              }
+                                            }
+                                          >
+                                            <img
+                                              onError={[Function]}
+                                              onLoad={[Function]}
+                                              src="undefined/avatar/c68ca8af553301ae11c5607b8bb672b4?d=blank&s=32"
+                                            />
+                                          </span>
+                                        </Tooltip>
+                                      </BaseAvatar>
+                                    </UserAvatar>
                                   </Avatar>
                                 </div>
                               </Base>
@@ -2110,15 +2190,8 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                   is={null}
                                 >
                                   <Avatar
-                                    gravatar={true}
                                     hasTooltip={false}
-                                    size={64}
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                    size={32}
                                     user={
                                       Object {
                                         "email": "sentry2@test.com",
@@ -2129,26 +2202,53 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                       }
                                     }
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sentry 2 Name (sentry2@test.com)"
-                                    >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 32,
-                                            "width": 32,
-                                          }
+                                    <UserAvatar
+                                      gravatar={true}
+                                      hasTooltip={false}
+                                      size={32}
+                                      user={
+                                        Object {
+                                          "email": "sentry2@test.com",
+                                          "has2fa": true,
+                                          "id": "2",
+                                          "name": "Sentry 2 Name",
+                                          "username": "Sentry 2 Username",
                                         }
+                                      }
+                                    >
+                                      <BaseAvatar
+                                        gravatar={true}
+                                        gravatarId="sentry2@test.com"
+                                        hasTooltip={false}
+                                        letterId="sentry2@test.com"
+                                        size={32}
+                                        style={Object {}}
+                                        title="Sentry 2 Name"
+                                        tooltip="Sentry 2 Name (sentry2@test.com)"
+                                        type="gravatar"
                                       >
-                                        <img
-                                          onError={[Function]}
-                                          onLoad={[Function]}
-                                          src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?d=blank&s=64"
-                                        />
-                                      </span>
-                                    </Tooltip>
+                                        <Tooltip
+                                          disabled={true}
+                                          title="Sentry 2 Name (sentry2@test.com)"
+                                        >
+                                          <span
+                                            className="avatar"
+                                            style={
+                                              Object {
+                                                "height": "32px",
+                                                "width": "32px",
+                                              }
+                                            }
+                                          >
+                                            <img
+                                              onError={[Function]}
+                                              onLoad={[Function]}
+                                              src="undefined/avatar/4eca4e68b0a900e542fdf17e57d04dcd?d=blank&s=32"
+                                            />
+                                          </span>
+                                        </Tooltip>
+                                      </BaseAvatar>
+                                    </UserAvatar>
                                   </Avatar>
                                 </div>
                               </Base>
@@ -2419,15 +2519,8 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                   is={null}
                                 >
                                   <Avatar
-                                    gravatar={true}
                                     hasTooltip={false}
-                                    size={64}
-                                    style={
-                                      Object {
-                                        "height": 32,
-                                        "width": 32,
-                                      }
-                                    }
+                                    size={32}
                                     user={
                                       Object {
                                         "email": "sentry3@test.com",
@@ -2438,26 +2531,53 @@ exports[`OrganizationMembersView Require Link does not have 2fa warning if user
                                       }
                                     }
                                   >
-                                    <Tooltip
-                                      disabled={true}
-                                      title="Sentry 3 Name (sentry3@test.com)"
-                                    >
-                                      <span
-                                        className="avatar"
-                                        style={
-                                          Object {
-                                            "height": 32,
-                                            "width": 32,
-                                          }
+                                    <UserAvatar
+                                      gravatar={true}
+                                      hasTooltip={false}
+                                      size={32}
+                                      user={
+                                        Object {
+                                          "email": "sentry3@test.com",
+                                          "has2fa": true,
+                                          "id": "3",
+                                          "name": "Sentry 3 Name",
+                                          "username": "Sentry 3 Username",
                                         }
+                                      }
+                                    >
+                                      <BaseAvatar
+                                        gravatar={true}
+                                        gravatarId="sentry3@test.com"
+                                        hasTooltip={false}
+                                        letterId="sentry3@test.com"
+                                        size={32}
+                                        style={Object {}}
+                                        title="Sentry 3 Name"
+                                        tooltip="Sentry 3 Name (sentry3@test.com)"
+                                        type="gravatar"
                                       >
-                                        <img
-                                          onError={[Function]}
-                                          onLoad={[Function]}
-                                          src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?d=blank&s=64"
-                                        />
-                                      </span>
-                                    </Tooltip>
+                                        <Tooltip
+                                          disabled={true}
+                                          title="Sentry 3 Name (sentry3@test.com)"
+                                        >
+                                          <span
+                                            className="avatar"
+                                            style={
+                                              Object {
+                                                "height": "32px",
+                                                "width": "32px",
+                                              }
+                                            }
+                                          >
+                                            <img
+                                              onError={[Function]}
+                                              onLoad={[Function]}
+                                              src="undefined/avatar/40d78e2a4587a53a171944ffe71ee3d4?d=blank&s=32"
+                                            />
+                                          </span>
+                                        </Tooltip>
+                                      </BaseAvatar>
+                                    </UserAvatar>
                                   </Avatar>
                                 </div>
                               </Base>
