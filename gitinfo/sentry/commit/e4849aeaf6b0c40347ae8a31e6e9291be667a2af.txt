commit e4849aeaf6b0c40347ae8a31e6e9291be667a2af
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Oct 15 14:26:01 2010 -0700

    Removed GroupListProvider. Added in tag support for GroupActionProvider.

diff --git a/sentry/plugins/__init__.py b/sentry/plugins/__init__.py
index 7c57e62a1c..2950155cd4 100644
--- a/sentry/plugins/__init__.py
+++ b/sentry/plugins/__init__.py
@@ -69,6 +69,10 @@ class GroupActionProvider:
         Handles the view logic. If no response is given, we continue to the next action provider.
         """
 
+    def tags(self, request, tag_list, group):
+        """Modifies the tag list for a grouped message."""
+        return tag_list
+
     def actions(self, request, action_list, group):
         """Modifies the action list for a grouped message."""
         return action_list
@@ -80,25 +84,4 @@ class GroupActionProvider:
     def widget(self, request, group):
         """
         Renders as a widget in the group details sidebar.
-        """
-
-class GroupListProvider:
-    __metaclass__ = PluginMount
-
-    def before(self, request, group_list):
-        """
-        Called after pagination, before the list is iterated.
-        
-        No return value.
-        """
-
-    def actions(self, request, action_list, group):
-        """Modifies the action list for a grouped message."""
-        return action_list
-
-    def tags(self, request, group, tags=[]):
-        """
-        Happens before rendering of a list of messages, but after pagination.
-        
-        Should return a list of tags.
         """
\ No newline at end of file
diff --git a/sentry/plugins/sentry_redmine/models.py b/sentry/plugins/sentry_redmine/models.py
index 0806db7071..41810ec16c 100644
--- a/sentry/plugins/sentry_redmine/models.py
+++ b/sentry/plugins/sentry_redmine/models.py
@@ -5,10 +5,11 @@ from django.db import models
 from django.http import HttpResponseRedirect
 from django.shortcuts import render_to_response
 from django.utils import simplejson
+from django.utils.safestring import mark_safe
 
 from sentry.helpers import urlread
 from sentry.models import GroupedMessage
-from sentry.plugins import GroupActionProvider, GroupListProvider
+from sentry.plugins import GroupActionProvider
 
 import conf
 
@@ -36,6 +37,7 @@ class CreateRedmineIssue(GroupActionProvider):
             form = RedmineIssueForm(request.POST)
             if form.is_valid():
                 data = simplejson.dumps({
+                    'key': conf.REDMINE_API_KEY,
                     'issue': {
                         'subject': form.cleaned_data['subject'],
                         'description': form.cleaned_data['description'],
@@ -60,7 +62,7 @@ class CreateRedmineIssue(GroupActionProvider):
                 return HttpResponseRedirect(reverse('sentry-group', args=[group.pk]))
         else:
             description = 'Sentry Message: %s' % request.build_absolute_uri(group.get_absolute_url())
-            description += '\n\n' + (group.traceback or group.message)
+            description += '\n\n<pre>' + (group.traceback or group.message) + '</pre>'
 
             form = RedmineIssueForm(initial={
                 'subject': group.error(),
@@ -74,14 +76,11 @@ class CreateRedmineIssue(GroupActionProvider):
 
         return render_to_response('sentry/plugins/redmine/create_issue.html', context)
 
-class RedmineTagIssue(GroupListProvider):
-    title = 'Redmine Issue IDs'
-    
-    def tags(self, request, group, tags=[]):
+    def tags(self, request, tags, group):
         if 'redmine' in group.data:
             issue_id = group.data['redmine']['issue_id']
             tags.append(mark_safe('<a href="%s">#%s</a>' % (
-                '%sissues/%s' % (conf.REDMINE_URL, issue_id),
+                '%s/issues/%s' % (conf.REDMINE_URL, issue_id),
                 issue_id,
             )))
         return tags
\ No newline at end of file
diff --git a/sentry/plugins/sentry_redmine/templates/sentry/plugins/redmine/create_issue.html b/sentry/plugins/sentry_redmine/templates/sentry/plugins/redmine/create_issue.html
index 7af016c491..495f875539 100644
--- a/sentry/plugins/sentry_redmine/templates/sentry/plugins/redmine/create_issue.html
+++ b/sentry/plugins/sentry_redmine/templates/sentry/plugins/redmine/create_issue.html
@@ -4,9 +4,8 @@
 
 {% block inner %}
 	<h2>Create Redmine Issue</h2>
-    <form method="post" action="">
+	<form method="post" action="">
 		<input type="hidden" name="next" value="{{ next }}" />
-	
 		{% csrf_token %}
 		<table>
 			<colgroup>
@@ -14,16 +13,16 @@
 				<col/>
 			</colgroup>
 			<tr>
-			    <td>{{ form.subject.label_tag }}</td>
-			    <td>{{ form.subject }}</td>
+				<td>{{ form.subject.label_tag }}</td>
+				<td>{{ form.subject }}</td>
 			</tr>
 			<tr>
-			    <td>{{ form.description.label_tag }}</td>
-			    <td>{{ form.description }}</td>
+				<td>{{ form.description.label_tag }}</td>
+				<td>{{ form.description }}</td>
 			</tr>
 		</table>
 		<div class="submit">
-		    <button type="submit" class="button">Create Issue</button>
+			<button type="submit" class="button">Create Issue</button>
 		</div>
 	</form>
 {% endblock %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/group/details.html b/sentry/templates/sentry/group/details.html
index a34ec386be..1c7dcb0a8c 100644
--- a/sentry/templates/sentry/group/details.html
+++ b/sentry/templates/sentry/group/details.html
@@ -48,7 +48,12 @@
 				<h3>{% if group.view %}{{ group.view }}{% else %}{{ group.message }}{% endif %}</h3>
 				<span class="last_seen">{{ group.last_seen|timesince }}</span>
 				<span class="status status-{{ group.status }}">{{ group.get_status_display }}</span>
-				<p class="message"><span class="tag tag-level">{{ group.get_level_display }}</span> {{ group.error }}</p>
+				<p class="message">
+					<span class="tag tag-level">{{ group.get_level_display }}</span> 
+					<span class="tag tag-logger">{{ group.logger }}</span> 
+					{% for tag in group|get_tags:request %}<span class="tag">{{ tag }}</span> {% endfor %}
+					{{ group.error }}
+				</p>
 				{% if group.status == 0 %}
 					<a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" class="hidden button button_resolve">&#10003;</a>
 				{% endif %}
diff --git a/sentry/templates/sentry/partial/_group.html b/sentry/templates/sentry/partial/_group.html
index a736b28a74..3ebe829ca4 100644
--- a/sentry/templates/sentry/partial/_group.html
+++ b/sentry/templates/sentry/partial/_group.html
@@ -8,6 +8,7 @@
 	<p class="message">
 		<span class="tag tag-level">{{ group.get_level_display }}</span> 
 		<span class="tag tag-logger">{{ group.logger }}</span> 
+		{% for tag in group|get_tags:request %}<span class="tag">{{ tag }}</span> {% endfor %}
 		{{ group.error }}
 	</p>
 	<a href="{% url sentry-group group.pk %}" class="row_link"></a>
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index 60f12f7210..a698510a60 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -12,10 +12,11 @@ except ImportError:
 
 register = template.Library()
 
+@register.filter
 def is_dict(value):
     return isinstance(value, dict)
-register.filter(is_dict)
 
+@register.filter
 def with_priority(result_list, key='score'):
     if result_list:
         if isinstance(result_list[0], dict):
@@ -38,17 +39,17 @@ def with_priority(result_list, key='score'):
             else:
                 priority = 'verylow'
             yield result, priority
-register.filter(with_priority)
 
+@register.filter
 def num_digits(value):
     return len(str(value))
-register.filter(num_digits)
 
+@register.filter
 def can_chart(group):
     engine = get_db_engine()
     return SimpleLineChart and not engine.startswith('sqlite')
-register.filter(can_chart)
 
+@register.filter
 def chart_url(group):
     today = datetime.datetime.now()
 
@@ -73,13 +74,13 @@ def chart_url(group):
     chart.set_colours(['eeeeee', '999999', 'eeeeee'])
     chart.set_line_style(1, 1)
     return chart.get_url()
-register.filter(chart_url)
 
 def sentry_version():
     from sentry import get_version
     return get_version()
 register.simple_tag(sentry_version)
 
+@register.filter
 def get_actions(group, request):
     action_list = []
     for cls in GroupActionProvider.plugins.itervalues():
@@ -87,8 +88,8 @@ def get_actions(group, request):
         action_list = inst.actions(request, action_list, group)
     for action in action_list:
         yield action[0], action[1], request.META['PATH_INFO'] == action[1]
-register.filter(get_actions)
 
+@register.filter
 def get_panels(group, request):
     panel_list = []
     for cls in GroupActionProvider.plugins.itervalues():
@@ -96,16 +97,25 @@ def get_panels(group, request):
         panel_list = inst.panels(request, panel_list, group)
     for panel in panel_list:
         yield panel[0], panel[1], request.META['PATH_INFO'] == panel[1]
-register.filter(get_panels)
 
+@register.filter
 def get_widgets(group, request):
     for cls in GroupActionProvider.plugins.itervalues():
         inst = cls(group.pk)
         resp = inst.widget(request, group)
         if resp:
             yield resp
-register.filter(get_widgets)
 
+@register.filter
+def get_tags(group, request):
+    tag_list = []
+    for cls in GroupActionProvider.plugins.itervalues():
+        inst = cls(group.pk)
+        tag_list = inst.tags(request, tag_list, group)
+    for tag in tag_list:
+        yield tag
+
+@register.filter
 def timesince(value):
     from django.template.defaultfilters import timesince
     if not value:
@@ -117,5 +127,4 @@ def timesince(value):
         return 'Just now'
     if value == '1 day':
         return 'Yesterday'
-    return value + ' ago'
-register.filter(timesince)
\ No newline at end of file
+    return value + ' ago'
\ No newline at end of file
