commit 027ba611b7098912641976901f612aef4694243d
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu May 9 09:23:30 2019 -0700

    perf(ui): Skip `/committers/` API request if no `firstRelease` (#13137)
    
    On Issue Details page, we make duplicate requests to a committers endpoint for suspect commits. There will be no suspect commits if you do not have releases setup.

diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 120b285487..afef273473 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -156,7 +156,9 @@ class EventEntries extends React.Component {
         {!utils.objectIsEmpty(event.errors) && (
           <EventErrors group={group} event={event} />
         )}{' '}
-        {!isShare && <EventCause event={event} orgId={orgId} projectId={project.slug} />}
+        {!isShare && !!group.firstRelease && (
+          <EventCause event={event} orgId={orgId} projectId={project.slug} />
+        )}
         {event.userReport && (
           <StyledEventUserFeedback
             report={event.userReport}
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index f739e696cb..055de55662 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -7,25 +7,24 @@ import {openCreateOwnershipRule} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
 import Access from 'app/components/acl/access';
 import ActorAvatar from 'app/components/actorAvatar';
-import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
-import OrganizationState from 'app/mixins/organizationState';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
 import SentryTypes from 'app/sentryTypes';
 import SuggestedOwnerHovercard from 'app/components/group/suggestedOwnerHovercard';
+import withApi from 'app/utils/withApi';
+import withOrganization from 'app/utils/withOrganization';
 
 const SuggestedOwners = createReactClass({
   displayName: 'SuggestedOwners',
 
   propTypes: {
     api: PropTypes.object,
+    organization: SentryTypes.Organization,
     project: SentryTypes.Project,
     group: SentryTypes.Group,
     event: SentryTypes.Event,
   },
 
-  mixins: [OrganizationState],
-
   getInitialState() {
     return {
       rules: null,
@@ -54,26 +53,31 @@ const SuggestedOwners = createReactClass({
     if (!event) {
       return;
     }
-    const org = this.getOrganization();
-    const project = this.props.project;
 
-    this.props.api.request(
-      `/projects/${org.slug}/${project.slug}/events/${event.id}/committers/`,
-      {
-        success: (data, _, jqXHR) => {
-          this.setState({
-            committers: data.committers,
-          });
-        },
-        error: error => {
-          this.setState({
-            committers: [],
-          });
-        },
-      }
-    );
-    this.props.api.request(
-      `/projects/${org.slug}/${project.slug}/events/${event.id}/owners/`,
+    const {api, project, group, organization} = this.props;
+
+    // No committers if you don't have any releases
+    if (!!group.firstRelease) {
+      // TODO: move this into a store since `EventCause` makes this exact request as well
+      api.request(
+        `/projects/${organization.slug}/${project.slug}/events/${event.id}/committers/`,
+        {
+          success: (data, _, jqXHR) => {
+            this.setState({
+              committers: data.committers,
+            });
+          },
+          error: error => {
+            this.setState({
+              committers: [],
+            });
+          },
+        }
+      );
+    }
+
+    api.request(
+      `/projects/${organization.slug}/${project.slug}/events/${event.id}/owners/`,
       {
         success: (data, _, jqXHR) => {
           this.setState({
@@ -150,9 +154,8 @@ const SuggestedOwners = createReactClass({
   },
 
   render() {
-    const {group, project} = this.props;
+    const {group, organization, project} = this.props;
     const owners = this.getOwnerList();
-    const org = this.getOrganization();
 
     return (
       <React.Fragment>
@@ -194,7 +197,7 @@ const SuggestedOwners = createReactClass({
               onClick={() =>
                 openCreateOwnershipRule({
                   project,
-                  organization: org,
+                  organization,
                   issueId: group.id,
                 })
               }
@@ -210,7 +213,7 @@ const SuggestedOwners = createReactClass({
   },
 });
 export {SuggestedOwners};
-export default withApi(SuggestedOwners);
+export default withApi(withOrganization(SuggestedOwners));
 
 /**
  * Given a list of rule objects returned from the API, locate the matching
diff --git a/tests/js/spec/components/group/suggestedOwners.spec.jsx b/tests/js/spec/components/group/suggestedOwners.spec.jsx
index 713de28185..7a01553ad8 100644
--- a/tests/js/spec/components/group/suggestedOwners.spec.jsx
+++ b/tests/js/spec/components/group/suggestedOwners.spec.jsx
@@ -10,7 +10,7 @@ describe('SuggestedOwners', function() {
 
   const organization = TestStubs.Organization();
   const project = TestStubs.Project();
-  const group = TestStubs.Group();
+  const group = TestStubs.Group({firstRelease: {}});
 
   const routerContext = TestStubs.routerContext([
     {
@@ -71,6 +71,36 @@ describe('SuggestedOwners', function() {
     ).toBe(true);
   });
 
+  it('does not call committers endpoint if `group.firstRelease` does not exist', function() {
+    const committers = Client.addMockResponse({
+      url: `${endpoint}/committers/`,
+      body: {
+        committers: [
+          {
+            author: TestStubs.CommitAuthor(),
+            commits: [TestStubs.Commit()],
+          },
+        ],
+      },
+    });
+
+    Client.addMockResponse({
+      url: `${endpoint}/owners/`,
+      body: {
+        owners: [{type: 'user', ...user}],
+        rules: [[['path', 'sentry/tagstore/*'], [['user', user.email]]]],
+      },
+    });
+
+    const wrapper = mount(
+      <SuggestedOwners project={project} group={TestStubs.Group()} event={event} />,
+      routerContext
+    );
+
+    expect(committers).not.toHaveBeenCalled();
+    expect(wrapper.find('ActorAvatar')).toHaveLength(1);
+  });
+
   it('Merges owner matching rules and having suspect commits', function() {
     const author = TestStubs.CommitAuthor();
 
