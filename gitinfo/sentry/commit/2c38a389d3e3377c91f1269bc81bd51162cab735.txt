commit 2c38a389d3e3377c91f1269bc81bd51162cab735
Author: Matej Minar <matej.minar@sentry.io>
Date:   Wed Jun 17 11:06:16 2020 +0200

    feat: Uncomment delete source maps archive endpoint (#19396)
    
    The file blobs are cleaned up by a nightly job already, so we don't have to worry about them.

diff --git a/src/sentry/api/endpoints/debug_files.py b/src/sentry/api/endpoints/debug_files.py
index f1b9fde821..af0d2f457a 100644
--- a/src/sentry/api/endpoints/debug_files.py
+++ b/src/sentry/api/endpoints/debug_files.py
@@ -445,8 +445,6 @@ class SourceMapsEndpoint(ProjectEndpoint):
         :qparam string id: The id of the archive to delete.
         :auth: required
         """
-        # TODO: wip, we need to delete release_file.file too (in async way)
-        return Response(status=404)
 
         archive_id = request.GET.get("id")
 
@@ -457,8 +455,6 @@ class SourceMapsEndpoint(ProjectEndpoint):
                 )
                 if release is not None:
                     release_files = ReleaseFile.objects.filter(release=release)
-                    # TODO: do we need to delete release_file.file too?
-                    # src/sentry/api/endpoints/project_release_file_details.py:191
                     release_files.delete()
                     return Response(status=204)
 
diff --git a/tests/sentry/api/endpoints/test_debug_files.py b/tests/sentry/api/endpoints/test_debug_files.py
index 313e42264c..9148448f7f 100644
--- a/tests/sentry/api/endpoints/test_debug_files.py
+++ b/tests/sentry/api/endpoints/test_debug_files.py
@@ -303,29 +303,28 @@ class DebugFilesUploadTest(APITestCase):
         assert response.data[0]["name"] == text_type(release.version)
         assert response.data[0]["fileCount"] == 2
 
-    # TODO: endpoint is wip
-    # def test_source_maps_delete_archive(self):
-    #     project = self.create_project(name="foo")
-
-    #     release = Release.objects.create(
-    #         organization_id=project.organization_id, version="1", id="1"
-    #     )
-    #     release.add_project(project)
-
-    #     ReleaseFile.objects.create(
-    #         organization_id=project.organization_id,
-    #         release=release,
-    #         file=File.objects.create(name="application.js", type="release.file"),
-    #         name="http://example.com/application.js",
-    #     )
-
-    #     url = reverse(
-    #         "sentry-api-0-source-maps",
-    #         kwargs={"organization_slug": project.organization.slug, "project_slug": project.slug},
-    #     )
-
-    #     self.login_as(user=self.user)
-
-    #     response = self.client.delete(url + "?id=1")
-    #     assert response.status_code == 204
-    #     assert not ReleaseFile.objects.filter(release=release).exists()
+    def test_source_maps_delete_archive(self):
+        project = self.create_project(name="foo")
+
+        release = Release.objects.create(
+            organization_id=project.organization_id, version="1", id="1"
+        )
+        release.add_project(project)
+
+        ReleaseFile.objects.create(
+            organization_id=project.organization_id,
+            release=release,
+            file=File.objects.create(name="application.js", type="release.file"),
+            name="http://example.com/application.js",
+        )
+
+        url = reverse(
+            "sentry-api-0-source-maps",
+            kwargs={"organization_slug": project.organization.slug, "project_slug": project.slug},
+        )
+
+        self.login_as(user=self.user)
+
+        response = self.client.delete(url + "?id=1")
+        assert response.status_code == 204
+        assert not ReleaseFile.objects.filter(release=release).exists()
