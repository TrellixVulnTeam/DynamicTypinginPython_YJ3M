commit 29833d8dc0eca2a5d4bd1cfcb9376e99da72b8ae
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Oct 10 13:50:01 2017 -0700

    feat(workflow): Change Org->API Keys to react (#6177)
    
    * ref(react): move api scopes to constants file
    
    * feat(react): Add label border for `<MultipleCheckboxField>`
    
    * feat(workflow): Change Org->Api keys to react

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index a09170e87c..0cc154ca1b 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -92,6 +92,15 @@ class OrganizationIntegrationsPermission(OrganizationPermission):
     }
 
 
+class OrganizationApiKeysPermission(OrganizationPermission):
+    scope_map = {
+        'GET': ['org:admin'],
+        'POST': ['org:admin'],
+        'PUT': ['org:admin'],
+        'DELETE': ['org:admin'],
+    }
+
+
 class OrganizationEndpoint(Endpoint):
     permission_classes = (OrganizationPermission, )
 
diff --git a/src/sentry/api/endpoints/organization_api_key_details.py b/src/sentry/api/endpoints/organization_api_key_details.py
new file mode 100644
index 0000000000..f99c408d6f
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_api_key_details.py
@@ -0,0 +1,110 @@
+from __future__ import absolute_import
+
+from rest_framework import serializers, status
+from rest_framework.response import Response
+
+from sentry.api.bases.organization import OrganizationEndpoint, OrganizationApiKeysPermission
+from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.serializers import serialize
+from sentry.models import ApiKey, AuditLogEntryEvent
+
+
+class ApiKeySerializer(serializers.ModelSerializer):
+    class Meta:
+        model = ApiKey
+        fields = ('label', 'scope_list', 'allowed_origins')
+
+
+class OrganizationApiKeyDetailsEndpoint(OrganizationEndpoint):
+    permission_classes = (OrganizationApiKeysPermission, )
+
+    def get(self, request, organization, api_key_id):
+        """
+        Retrieves API Key details
+        `````````````````````````
+
+        :pparam string organization_slug: the slug of the organization the
+                                          team belongs to.
+        :pparam string api_key_id: the ID of the api key to delete
+        :auth: required
+        """
+        try:
+            api_key = ApiKey.objects.get(
+                id=api_key_id,
+                organization_id=organization.id,
+            )
+        except ApiKey.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        return Response(serialize(api_key, request.user))
+
+    def put(self, request, organization, api_key_id):
+        """
+        Update an API Key
+        `````````````````
+
+        :pparam string organization_slug: the slug of the organization the
+                                          team belongs to.
+        :pparam string api_key_id: the ID of the api key to delete
+        :param string label: the new label for the api key
+        :param array scope_list: an array of scopes available for api key
+        :param string allowed_origins: list of allowed origins
+        :auth: required
+        """
+
+        try:
+            api_key = ApiKey.objects.get(
+                id=api_key_id,
+                organization_id=organization.id,
+            )
+        except ApiKey.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        serializer = ApiKeySerializer(api_key, data=request.DATA, partial=True)
+
+        if serializer.is_valid():
+            api_key = serializer.save()
+
+            self.create_audit_entry(
+                request=request,
+                organization=organization,
+                target_object=api_key_id,
+                event=AuditLogEntryEvent.APIKEY_EDIT,
+                data=api_key.get_audit_log_data(),
+            )
+
+            return Response(serialize(api_key, request.user))
+
+        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
+
+    def delete(self, request, organization, api_key_id):
+        """
+        Deletes an API Key
+        ``````````````````
+
+        :pparam string organization_slug: the slug of the organization the
+                                          team belongs to.
+        :pparam string api_key_id: the ID of the api key to delete
+        :auth: required
+        """
+        try:
+            api_key = ApiKey.objects.get(
+                id=api_key_id,
+                organization_id=organization.id,
+            )
+        except ApiKey.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        audit_data = api_key.get_audit_log_data()
+
+        api_key.delete()
+
+        self.create_audit_entry(
+            request,
+            organization=organization,
+            target_object=api_key.id,
+            event=AuditLogEntryEvent.APIKEY_REMOVE,
+            data=audit_data,
+        )
+
+        return Response(status=status.HTTP_204_NO_CONTENT)
diff --git a/src/sentry/api/endpoints/organization_api_key_index.py b/src/sentry/api/endpoints/organization_api_key_index.py
new file mode 100644
index 0000000000..027b0957b4
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_api_key_index.py
@@ -0,0 +1,59 @@
+from __future__ import absolute_import
+
+from rest_framework import status
+from rest_framework.response import Response
+
+from sentry.api.bases.organization import OrganizationEndpoint, OrganizationApiKeysPermission
+from sentry.api.serializers import serialize
+from sentry.models import ApiKey, AuditLogEntryEvent
+
+DEFAULT_SCOPES = [
+    'project:read',
+    'event:read',
+    'team:read',
+    'org:read',
+    'member:read',
+]
+
+
+class OrganizationApiKeyIndexEndpoint(OrganizationEndpoint):
+    permission_classes = (OrganizationApiKeysPermission, )
+
+    def get(self, request, organization):
+        """
+        List an Organization's API Keys
+        ```````````````````````````````````
+
+        :pparam string organization_slug: the organization short name
+        :auth: required
+        """
+        queryset = sorted(
+            ApiKey.objects.filter(
+                organization=organization,
+            ), key=lambda x: x.label
+        )
+
+        return Response(serialize(queryset, request.user))
+
+    def post(self, request, organization):
+        """
+        Create an Organization API Key
+        ```````````````````````````````````
+
+        :pparam string organization_slug: the organization short name
+        :auth: required
+        """
+        key = ApiKey.objects.create(
+            organization=organization,
+            scope_list=DEFAULT_SCOPES,
+        )
+
+        self.create_audit_entry(
+            request,
+            organization=organization,
+            target_object=key.id,
+            event=AuditLogEntryEvent.APIKEY_ADD,
+            data=key.get_audit_log_data(),
+        )
+
+        return Response(serialize(key, request.user), status=status.HTTP_201_CREATED)
diff --git a/src/sentry/api/serializers/models/apikey.py b/src/sentry/api/serializers/models/apikey.py
new file mode 100644
index 0000000000..ae88ddbe9d
--- /dev/null
+++ b/src/sentry/api/serializers/models/apikey.py
@@ -0,0 +1,19 @@
+from __future__ import absolute_import
+
+import six
+
+from sentry.api.serializers import Serializer, register
+from sentry.models import ApiKey
+
+
+@register(ApiKey)
+class ApiKeySerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        return {
+            'id': six.text_type(obj.id),
+            'label': obj.label,
+            'key': obj.key,
+            'scope_list': obj.scope_list,
+            'status': obj.status,
+            'allowed_origins': '' if obj.allowed_origins is None else six.text_type(obj.allowed_origins),
+        }
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 7173b2e7f9..a1c971b58e 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -35,6 +35,8 @@ from .endpoints.legacy_project_redirect import LegacyProjectRedirectEndpoint
 from .endpoints.organization_access_request_details import OrganizationAccessRequestDetailsEndpoint
 from .endpoints.organization_activity import OrganizationActivityEndpoint
 from .endpoints.organization_auditlogs import OrganizationAuditLogsEndpoint
+from .endpoints.organization_api_key_index import OrganizationApiKeyIndexEndpoint
+from .endpoints.organization_api_key_details import OrganizationApiKeyDetailsEndpoint
 from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_shortid import ShortIdLookupEndpoint
 from .endpoints.organization_slugs import SlugsUpdateEndpoint
@@ -210,6 +212,16 @@ urlpatterns = patterns(
         OrganizationActivityEndpoint.as_view(),
         name='sentry-api-0-organization-activity'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/api-keys/$',
+        OrganizationApiKeyIndexEndpoint.as_view(),
+        name='sentry-api-0-organization-api-key-index'
+    ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/api-keys/(?P<api_key_id>[^\/]+)/$',
+        OrganizationApiKeyDetailsEndpoint.as_view(),
+        name='sentry-api-0-organization-api-key-details'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/audit-logs/$',
         OrganizationAuditLogsEndpoint.as_view(),
diff --git a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
index 523c5b37c5..30a7bd775e 100644
--- a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
@@ -9,6 +9,7 @@ import FormField from './formField';
 export default class MultipleCheckboxField extends FormField {
   static propTypes = {
     ...FormField.propTypes,
+    hideLabelDivider: PropTypes.bool,
     choices: PropTypes.array.isRequired
   };
 
@@ -53,6 +54,7 @@ export default class MultipleCheckboxField extends FormField {
       label,
       help,
       choices,
+      hideLabelDivider,
       style
     } = this.props;
     let error = this.getError();
@@ -70,7 +72,13 @@ export default class MultipleCheckboxField extends FormField {
       <div style={style} className={cx}>
         <div className={labelCx}>
           <div className="controls">
-            <label className="control-label">
+            <label
+              className="control-label"
+              style={{
+                display: 'block',
+                marginBottom: !hideLabelDivider ? 10 : undefined,
+                borderBottom: !hideLabelDivider ? '1px solid #f1eff3' : undefined
+              }}>
               {label}
               {shouldShowDisabledReason &&
                 <span className="disabled-indicator tip" title={disabledReason}>
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
index 6f23f46b2f..2ee99343af 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
@@ -88,11 +88,13 @@ const HomeSidebar = React.createClass({
               {features.has('sso') &&
                 access.has('org:admin') &&
                 <li><a href={`/organizations/${orgId}/auth/`}>{t('Auth')}</a></li>}
+
               {access.has('org:admin') &&
                 features.has('api-keys') &&
-                <li>
-                  <a href={`/organizations/${orgId}/api-keys/`}>{t('API Keys')}</a>
-                </li>}
+                <ListLink to={`/organizations/${orgId}/api-keys/`}>
+                  {t('API Keys')}
+                </ListLink>}
+
               {access.has('org:write') &&
                 <ListLink to={`/organizations/${orgId}/audit-log/`}>
                   {t('Audit Log')}
diff --git a/src/sentry/static/sentry/app/constants.jsx b/src/sentry/static/sentry/app/constants.jsx
new file mode 100644
index 0000000000..8f63ab19ac
--- /dev/null
+++ b/src/sentry/static/sentry/app/constants.jsx
@@ -0,0 +1,31 @@
+/**
+ * Common constants here
+ */
+
+export const API_SCOPES = [
+  'project:read',
+  'project:write',
+  'project:admin',
+  'project:releases',
+  'team:read',
+  'team:write',
+  'team:admin',
+  'event:read',
+  'event:admin',
+  'org:read',
+  'org:write',
+  'org:admin',
+  'member:read',
+  'member:admin'
+];
+
+// Default API scopes when adding a new API token or org API token
+export const DEFAULT_API_SCOPES = [
+  'event:read',
+  'event:admin',
+  'project:read',
+  'project:releases',
+  'org:read',
+  'team:read',
+  'member:read'
+];
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index e558ea0978..2a33f0c440 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -33,6 +33,10 @@ import MyIssuesAssignedToMe from './views/myIssues/assignedToMe';
 import MyIssuesBookmarked from './views/myIssues/bookmarked';
 import MyIssuesViewed from './views/myIssues/viewed';
 import OrganizationAuditLog from './views/organizationAuditLog';
+import OrganizationApiKeysView
+  from './views/settings/organization/apiKeys/organizationApiKeysView';
+import OrganizationApiKeyDetailsView
+  from './views/settings/organization/apiKeys/organizationApiKeyDetailsView';
 import OrganizationCreate from './views/organizationCreate';
 import OrganizationDashboard from './views/organizationDashboard';
 import OrganizationDetails from './views/organizationDetails';
@@ -160,6 +164,14 @@ function routes() {
 
       <Route path="/:orgId/" component={errorHandler(OrganizationDetails)}>
         <IndexRoute component={errorHandler(OrganizationDashboard)} />
+        <Route
+          path="/organizations/:orgId/api-keys/:apiKey/"
+          component={errorHandler(OrganizationApiKeyDetailsView)}
+        />
+        <Route
+          path="/organizations/:orgId/api-keys/"
+          component={errorHandler(OrganizationApiKeysView)}
+        />
         <Route
           path="/organizations/:orgId/audit-log/"
           component={errorHandler(OrganizationAuditLog)}
diff --git a/src/sentry/static/sentry/app/views/apiNewToken.jsx b/src/sentry/static/sentry/app/views/apiNewToken.jsx
index 448327772e..f23f4340fb 100644
--- a/src/sentry/static/sentry/app/views/apiNewToken.jsx
+++ b/src/sentry/static/sentry/app/views/apiNewToken.jsx
@@ -2,36 +2,13 @@ import React from 'react';
 import {browserHistory} from 'react-router';
 
 import AsyncView from './asyncView';
+import {API_SCOPES, DEFAULT_API_SCOPES} from '../constants';
 import NarrowLayout from '../components/narrowLayout';
 import {ApiForm, MultipleCheckboxField} from '../components/forms';
 import {t, tct} from '../locale';
 
-const SCOPES = new Set([
-  'project:read',
-  'project:write',
-  'project:admin',
-  'project:releases',
-  'team:read',
-  'team:write',
-  'team:admin',
-  'event:read',
-  'event:admin',
-  'org:read',
-  'org:write',
-  'org:admin',
-  'member:read',
-  'member:admin'
-]);
-
-const DEFAULT_SCOPES = new Set([
-  'event:read',
-  'event:admin',
-  'project:read',
-  'project:releases',
-  'org:read',
-  'team:read',
-  'member:read'
-]);
+const SORTED_DEFAULT_API_SCOPES = DEFAULT_API_SCOPES.sort();
+const API_CHOICES = API_SCOPES.map(s => [s, s]);
 
 export default class ApiNewToken extends AsyncView {
   getTitle() {
@@ -47,9 +24,6 @@ export default class ApiNewToken extends AsyncView {
   }
 
   renderBody() {
-    let defaultScopes = Array.from(DEFAULT_SCOPES);
-    defaultScopes.sort();
-
     return (
       <NarrowLayout>
         <h3>{t('Create New Token')}</h3>
@@ -71,12 +45,12 @@ export default class ApiNewToken extends AsyncView {
           apiMethod="POST"
           apiEndpoint="/api-tokens/"
           className="form-stacked api-new-token"
-          initialData={{scopes: defaultScopes}}
+          initialData={{scopes: SORTED_DEFAULT_API_SCOPES}}
           onSubmitSuccess={this.onSubmitSuccess}
           onCancel={this.onCancel}>
           <MultipleCheckboxField
             name="scopes"
-            choices={Array.from(SCOPES.keys()).map(s => [s, s])}
+            choices={API_CHOICES}
             label={t('Scopes')}
             required={true}
           />
diff --git a/src/sentry/static/sentry/app/views/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
index 317ec45de7..4a34501d6a 100644
--- a/src/sentry/static/sentry/app/views/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
@@ -349,7 +349,6 @@ class OrganizationRepositories extends OrganizationSettingsView {
                 <tbody>
                   {itemList.map(repo => {
                     let repoIsVisible = repo.status === 'visible';
-
                     return (
                       <tr key={repo.id}>
                         <td>
diff --git a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeyDetailsView.jsx b/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeyDetailsView.jsx
new file mode 100644
index 0000000000..a1957cc721
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeyDetailsView.jsx
@@ -0,0 +1,103 @@
+import {browserHistory} from 'react-router';
+import React from 'react';
+
+import {API_SCOPES} from '../../../../constants';
+import {t} from '../../../../locale';
+import ApiForm from '../../../../components/forms/apiForm';
+import IndicatorStore from '../../../../stores/indicatorStore';
+import MultipleCheckboxField from '../../../../components/forms/multipleCheckboxField';
+import SentryTypes from '../../../../proptypes';
+import SplitLayout from '../../../../components/splitLayout';
+import TextField from '../../../../components/forms/textField';
+import TextareaField from '../../../../components/forms/textareaField';
+import OrganizationSettingsView from '../../../organizationSettingsView';
+
+const API_CHOICES = API_SCOPES.map(s => [s, s]);
+
+class OrganizationApiKeyDetailsView extends OrganizationSettingsView {
+  static contextTypes = {
+    organization: SentryTypes.Organization
+  };
+
+  getDefaultState() {
+    return {
+      loading: true,
+      error: false,
+      apiKey: {}
+    };
+  }
+
+  componentWillReceiveProps(nextProps) {
+    if (
+      nextProps.location.search !== this.props.location.search ||
+      nextProps.params.orgId !== this.props.params.orgId
+    ) {
+      this.remountComponent();
+    }
+  }
+
+  getEndpoints() {
+    return [
+      [
+        'apiKey',
+        `/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`
+      ]
+    ];
+  }
+
+  getTitle() {
+    let org = this.context.organization;
+    return `${org.name} Edit API Key`;
+  }
+
+  handleSubmitSuccess = () => {
+    IndicatorStore.add(t('Saved changes'), 'success');
+  };
+
+  handleSubmitError = () => {
+    IndicatorStore.add(t('Unable to save changes. Please try again.'), 'error');
+  };
+
+  renderBody() {
+    return (
+      <div>
+        <div className="page-header">
+          <h3>{t('Edit Api Key')}</h3>
+        </div>
+
+        <ApiForm
+          apiMethod="PUT"
+          apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`}
+          initialData={this.state.apiKey}
+          onSubmitSuccess={this.handleSubmitSuccess}
+          onSubmitError={this.handleSubmitError}
+          onCancel={() =>
+            browserHistory.push(`/organizations/${this.props.params.orgId}/api-keys/`)}>
+
+          <SplitLayout splitWidth={15}>
+            <TextField label={t('Label')} name="label" />
+            <TextField label={t('API Key')} name="key" disabled />
+          </SplitLayout>
+
+          <MultipleCheckboxField
+            className="api-key-details"
+            name="scope_list"
+            label={t('Scopes')}
+            required
+            choices={API_CHOICES}
+          />
+
+          <TextareaField
+            label={t('Allowed Domains')}
+            name="allowed_origins"
+            placeholder="e.g. example.com or https://example.com"
+            help="Separate multiple entries with a newline"
+          />
+
+        </ApiForm>
+      </div>
+    );
+  }
+}
+
+export default OrganizationApiKeyDetailsView;
diff --git a/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysView.jsx b/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysView.jsx
new file mode 100644
index 0000000000..8cfe98c345
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organization/apiKeys/organizationApiKeysView.jsx
@@ -0,0 +1,151 @@
+import React from 'react';
+import {browserHistory} from 'react-router';
+
+import {Client} from '../../../../api';
+import {t} from '../../../../locale';
+import Button from '../../../../components/buttons/button';
+import Link from '../../../../components/link';
+import LinkWithConfirmation from '../../../../components/linkWithConfirmation';
+import SentryTypes from '../../../../proptypes';
+import SpreadLayout from '../../../../components/spreadLayout';
+import OrganizationSettingsView from '../../../organizationSettingsView';
+
+class OrganizationApiKeysView extends OrganizationSettingsView {
+  static contextTypes = {
+    organization: SentryTypes.Organization
+  };
+
+  getEndpoints() {
+    return [['keys', `/organizations/${this.props.params.orgId}/api-keys/`]];
+  }
+
+  getTitle() {
+    let org = this.context.organization;
+    return `${org.name} API Keys`;
+  }
+
+  handleRemove = (id, e) => {
+    const api = new Client();
+    api.request(`/organizations/${this.props.params.orgId}/api-keys/${id}/`, {
+      method: 'DELETE',
+      data: {},
+      success: data => {
+        this.setState(state => ({
+          keys: state.keys.filter(({id: existingId}) => existingId !== id)
+        }));
+      },
+      error: () => {
+        this.setState({busy: false});
+      }
+    });
+  };
+
+  handleAddApiKey = () => {
+    const api = new Client();
+    this.setState({
+      busy: true
+    });
+    api.request(`/organizations/${this.props.params.orgId}/api-keys/`, {
+      method: 'POST',
+      data: {},
+      success: data => {
+        this.setState({busy: false});
+        browserHistory.push(
+          `/organizations/${this.props.params.orgId}/api-keys/${data.id}`
+        );
+      },
+      error: () => {
+        this.setState({busy: false});
+      }
+    });
+  };
+
+  renderBody() {
+    let keyList = this.state.keys;
+
+    return (
+      <div>
+        <SpreadLayout className="page-header">
+          <h3>{t('Api Keys')}</h3>
+
+          <Button
+            type="button"
+            priority="primary"
+            busy={this.state.busy}
+            disabled={this.state.busy}
+            onClick={this.handleAddApiKey}>
+            New API Key
+          </Button>
+        </SpreadLayout>
+
+        <p>
+          API keys grant access to the
+          {' '}
+          <a target="_blank" rel="nofollow" href="https://docs.sentry.io/hosted/api/">
+            developer web API
+          </a>
+          . If you're looking to configure a Sentry client, you'll need a client key which is available in your project settings.
+        </p>
+
+        <div className="alert alert-block alert-info">
+          psst. Until Sentry supports OAuth, you might want to switch to using
+          {' '}
+          <Link to="/api/">Auth Tokens</Link>
+          {' '}
+          instead.
+        </div>
+
+        {keyList &&
+          <table className="table api-key-list">
+            <colgroup>
+              <col style={{width: '40%'}} />
+              <col style={{width: '40%'}} />
+              <col style={{width: '20%'}} />
+            </colgroup>
+            <tbody>
+              {keyList.map(({id, key, label}) => {
+                let apiDetailsUrl = `/organizations/${this.props.params.orgId}/api-keys/${id}`;
+                return (
+                  <tr key={key}>
+                    <td>
+                      <h5>
+                        <Link to={apiDetailsUrl}>
+                          {label}
+                        </Link>
+                      </h5>
+                    </td>
+                    <td>
+                      <div className="form-control disabled auto-select">{key}</div>
+                    </td>
+                    <td className="align-right">
+                      <Link
+                        to={apiDetailsUrl}
+                        className="btn btn-default btn-sm"
+                        style={{marginRight: 4}}>
+                        Edit Key
+                      </Link>
+                      <LinkWithConfirmation
+                        className="btn btn-default btn-sm"
+                        onConfirm={this.handleRemove.bind(this, id)}
+                        message="Are you sure you want to remove this API key?"
+                        title="Remove API Key?">
+                        <span className="icon-trash" />
+                      </LinkWithConfirmation>
+                    </td>
+                  </tr>
+                );
+              })}
+            </tbody>
+          </table>}
+
+        {!keyList &&
+          <div className="blankslate well">
+            There are no API keys for this organization.
+          </div>}
+
+      </div>
+    );
+  }
+}
+
+export default OrganizationApiKeysView;
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index a03e52b589..768b9f666b 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -76,6 +76,12 @@
       }
     }
   }
+
+  .page-header {
+    h3 {
+      margin-bottom: 0;
+    }
+  }
 }
 
 .organization-home {
diff --git a/src/sentry/templates/sentry/bases/organization.html b/src/sentry/templates/sentry/bases/organization.html
index 438ff1d779..3cc28a96ec 100644
--- a/src/sentry/templates/sentry/bases/organization.html
+++ b/src/sentry/templates/sentry/bases/organization.html
@@ -65,7 +65,7 @@
     {% if ACCESS.org_admin %}
       {% feature organizations:api-keys organization %}
         <li class="{% block org_apikeys_nav %}{% endblock %}">
-          <a href="{% url 'sentry-organization-api-keys' organization.slug %}">
+          <a href="{% absolute_uri '/organizations/{}/api-keys/' organization.slug %}">
             {% trans "API Keys" %}
           </a>
         </li>
diff --git a/src/sentry/templates/sentry/organization-api-key-settings.html b/src/sentry/templates/sentry/organization-api-key-settings.html
deleted file mode 100644
index 49594be1bd..0000000000
--- a/src/sentry/templates/sentry/organization-api-key-settings.html
+++ /dev/null
@@ -1,53 +0,0 @@
-{% extends "sentry/bases/organization.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% block title %}{% trans "API Key Settings" %} | {{ block.super }}{% endblock %}
-
-{% block org_apikeys_nav %}active{% endblock %}
-
-{% block main %}
-  <h3>{% trans "API Key Settings" %}</h3>
-
-  <hr>
-  <form class="form-stacked api-key-detail" action="" method="post">
-    {% csrf_token %}
-
-    {% if form.errors %}
-      <div class="alert alert-block alert-error">{% trans "Please correct the errors below." %}</div>
-    {% endif %}
-
-    {{ form|as_crispy_errors }}
-
-    <fieldset>
-      <div class="row">
-        <div class="col-md-6">
-          <div class="control-group">
-            {{ form.label|as_crispy_field }}
-          </div>
-        </div>
-        <div class="col-md-6">
-          <div class="control-group">
-            <label for="api-key">{% trans "Key" %}</label>
-            <div class="form-control disabled auto-select">{{ key.key }}</div>
-          </div>
-        </div>
-      </div>
-
-      <div class="row scopes">
-        <div class="col-md-12">
-        {{ form.scopes|as_crispy_field }}
-        </div>
-      </div>
-
-      {{ form.allowed_origins|as_crispy_field }}
-
-    </fieldset>
-
-    <div class="form-actions">
-      <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
-    </div>
-  </form>
-{% endblock %}
diff --git a/src/sentry/templates/sentry/organization-api-keys.html b/src/sentry/templates/sentry/organization-api-keys.html
deleted file mode 100644
index 75b60e6d10..0000000000
--- a/src/sentry/templates/sentry/organization-api-keys.html
+++ /dev/null
@@ -1,63 +0,0 @@
-{% extends "sentry/bases/organization.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% block title %}{% trans "API Keys" %} | {{ block.super }}{% endblock %}
-
-{% block org_apikeys_nav %}active{% endblock %}
-
-{% block main %}
-  <div class="page-header">
-    <form class="pull-right" method="POST" action="">
-      {% csrf_token %}
-      <input type="hidden" name="op" value="newkey" />
-      <button type="submit" class="btn btn-primary">New API Key</button>
-    </form>
-
-    <h2>{% trans "API Keys" %}</h2>
-  </div>
-
-  <p>API keys grant access to the <a href="https://docs.sentry.io/hosted/api/">developer web API</a>. If you're looking to configure a Sentry client, you'll need a client key which is available in your project settings.</p>
-
-  <div class="alert alert-block alert-info">
-    psst. Until Sentry supports OAuth, you might want to switch to using <a href="{% absolute_uri '/api/' %}">Auth Tokens</a> instead.
-  </div>
-
-  {% if key_list %}
-  <table class="table api-key-list">
-    <colgroup>
-      <col style="width: 40%"></col>
-      <col style="width: 40%"></col>
-      <col style="width: 20%"></col>
-    </colgroup>
-    <tbody>
-    {% for key in key_list %}
-      <tr>
-        <td>
-          <h5><a href="{% url 'sentry-organization-api-key-settings' organization.slug key.id %}">{{ key.label }}</a></h5>
-        </td>
-        <td>
-          <div class="form-control disabled auto-select">{{ key.key }}</div>
-        </td>
-        <td class="align-right">
-          <a href="{% url 'sentry-organization-api-key-settings' organization.slug key.id %}" class="btn btn-default btn-sm" style="margin-right: 4px">Edit Key</a>
-          <form class="pull-right" method="POST" action="" onsubmit="return confirm('Are you sure you want to remove this API key?');">
-            {% csrf_token %}
-            <input type="hidden" name="op" value="removekey" />
-            <input type="hidden" name="kid" value="{{ key.id }}" />
-            <button class="btn btn-default btn-sm"><span class="icon-trash"></span></button>
-          </form>
-        </td>
-      </tr>
-    {% endfor %}
-    </tbody>
-  </table>
-  {% else %}
-    <div class="blankslate well">
-      There are no API keys for this organization.
-    </div>
-  {% endif %}
-
-{% endblock %}
diff --git a/src/sentry/web/frontend/organization_api_key_settings.py b/src/sentry/web/frontend/organization_api_key_settings.py
deleted file mode 100644
index b335d840d8..0000000000
--- a/src/sentry/web/frontend/organization_api_key_settings.py
+++ /dev/null
@@ -1,64 +0,0 @@
-from __future__ import absolute_import
-
-from django import forms
-from django.contrib import messages
-from django.http import HttpResponseRedirect
-from django.shortcuts import get_object_or_404
-from django.utils.translation import ugettext_lazy as _
-
-from sentry.models import ApiKey, AuditLogEntryEvent
-from sentry.web.forms.fields import OriginsField
-from sentry.web.frontend.base import OrganizationView
-
-
-class ApiKeyForm(forms.ModelForm):
-    allowed_origins = OriginsField(
-        label=_('Allowed Domains'),
-        required=False,
-        help_text=_('Separate multiple entries with a newline.')
-    )
-
-    class Meta:
-        model = ApiKey
-        fields = ('label', 'scopes')
-
-
-class OrganizationApiKeySettingsView(OrganizationView):
-    required_scope = 'org:admin'
-
-    def handle(self, request, organization, key_id):
-        key = get_object_or_404(ApiKey, organization=organization, id=key_id)
-
-        form = ApiKeyForm(
-            request.POST or None,
-            instance=key,
-            initial={
-                'allowed_origins': key.allowed_origins,
-            },
-        )
-
-        if form.is_valid():
-            key.allowed_origins = '\n'.join(form.cleaned_data['allowed_origins'])
-            key.save()
-
-            self.create_audit_entry(
-                request,
-                organization=organization,
-                target_object=key.id,
-                event=AuditLogEntryEvent.APIKEY_EDIT,
-                data=key.get_audit_log_data(),
-            )
-
-            messages.add_message(
-                request,
-                messages.SUCCESS,
-                'Your settings were saved.',
-            )
-            return HttpResponseRedirect(request.path)
-
-        context = {
-            'key': key,
-            'form': form,
-        }
-
-        return self.respond('sentry/organization-api-key-settings.html', context)
diff --git a/src/sentry/web/frontend/organization_api_keys.py b/src/sentry/web/frontend/organization_api_keys.py
deleted file mode 100644
index 0a21280d25..0000000000
--- a/src/sentry/web/frontend/organization_api_keys.py
+++ /dev/null
@@ -1,77 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-from django.http import HttpResponseRedirect
-
-from sentry.models import ApiKey, AuditLogEntryEvent
-from sentry.web.frontend.base import OrganizationView
-
-DEFAULT_SCOPES = [
-    'project:read',
-    'event:read',
-    'team:read',
-    'org:read',
-    'member:read',
-]
-
-
-class OrganizationApiKeysView(OrganizationView):
-    required_scope = 'org:admin'
-
-    def handle(self, request, organization):
-        if request.POST.get('op') == 'newkey':
-            key = ApiKey.objects.create(
-                organization=organization,
-                scope_list=DEFAULT_SCOPES,
-            )
-
-            self.create_audit_entry(
-                request,
-                organization=organization,
-                target_object=key.id,
-                event=AuditLogEntryEvent.APIKEY_ADD,
-                data=key.get_audit_log_data(),
-            )
-
-            redirect_uri = reverse(
-                'sentry-organization-api-key-settings', args=[
-                    organization.slug,
-                    key.id,
-                ]
-            )
-            return HttpResponseRedirect(redirect_uri)
-
-        elif request.POST.get('op') == 'removekey':
-            try:
-                key = ApiKey.objects.get(
-                    id=request.POST.get('kid'),
-                    organization=organization,
-                )
-            except ApiKey.DoesNotExist:
-                pass
-            else:
-                audit_data = key.get_audit_log_data()
-
-                key.delete()
-
-                self.create_audit_entry(
-                    request,
-                    organization=organization,
-                    target_object=key.id,
-                    event=AuditLogEntryEvent.APIKEY_REMOVE,
-                    data=audit_data,
-                )
-
-            return HttpResponseRedirect(request.path)
-
-        key_list = sorted(
-            ApiKey.objects.filter(
-                organization=organization,
-            ), key=lambda x: x.label
-        )
-
-        context = {
-            'key_list': key_list,
-        }
-
-        return self.respond('sentry/organization-api-keys.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 06917ed030..51e6e7ee4c 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -38,9 +38,6 @@ from sentry.web.frontend.mailgun_inbound_webhook import \
 from sentry.web.frontend.oauth_authorize import OAuthAuthorizeView
 from sentry.web.frontend.oauth_token import OAuthTokenView
 from sentry.auth.providers.saml2 import SAML2AcceptACSView, SAML2SLSView, SAML2MetadataView
-from sentry.web.frontend.organization_api_key_settings import \
-    OrganizationApiKeySettingsView
-from sentry.web.frontend.organization_api_keys import OrganizationApiKeysView
 from sentry.web.frontend.organization_auth_settings import \
     OrganizationAuthSettingsView
 from sentry.web.frontend.organization_member_settings import \
@@ -317,12 +314,12 @@ urlpatterns += patterns(
     url(r'^organizations/new/$', generic_react_page_view),
     url(
         r'^organizations/(?P<organization_slug>[\w_-]+)/api-keys/$',
-        OrganizationApiKeysView.as_view(),
+        react_page_view,
         name='sentry-organization-api-keys'
     ),
     url(
         r'^organizations/(?P<organization_slug>[\w_-]+)/api-keys/(?P<key_id>[\w_-]+)/$',
-        OrganizationApiKeySettingsView.as_view(),
+        react_page_view,
         name='sentry-organization-api-key-settings'
     ),
     url(
diff --git a/tests/js/setup.js b/tests/js/setup.js
index e75bf81670..53d2b08ae2 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -24,6 +24,18 @@ window.TestStubs = {
     query: {},
     pathame: '/mock-pathname/'
   }),
+
+  ApiKey: (...params) => {
+    return {
+      allowed_origins: '',
+      id: 1,
+      key: 'aa624bcc12024702a202cd90be5feda0',
+      label: 'Default',
+      scope_list: ['project:read', 'event:read', 'team:read', 'member:read'],
+      status: 0
+    };
+  },
+
   Team: (...params) => {
     return {
       id: '1',
diff --git a/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap
index ebf6d64e8d..b5f7197b8b 100644
--- a/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap
@@ -12,6 +12,13 @@ exports[`MultipleCheckboxField render() renders with form context 1`] = `
     >
       <label
         className="control-label"
+        style={
+          Object {
+            "borderBottom": "1px solid #f1eff3",
+            "display": "block",
+            "marginBottom": 10,
+          }
+        }
       />
     </div>
   </div>
@@ -58,6 +65,13 @@ exports[`MultipleCheckboxField render() renders without form context 1`] = `
     >
       <label
         className="control-label"
+        style={
+          Object {
+            "borderBottom": "1px solid #f1eff3",
+            "display": "block",
+            "marginBottom": 10,
+          }
+        }
       />
     </div>
   </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
new file mode 100644
index 0000000000..b6a55fa82f
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
@@ -0,0 +1,1001 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OrganizationApiKeyDetailsView renders 1`] = `
+<OrganizationApiKeyDetailsView
+  params={
+    Object {
+      "apiKey": 1,
+      "orgId": "org-slug",
+    }
+  }
+>
+  <DocumentTitle
+    title="Organization Name Edit API Key"
+  >
+    <HomeContainer
+      params={
+        Object {
+          "apiKey": 1,
+          "orgId": "org-slug",
+        }
+      }
+    >
+      <div
+        className=" organization-home"
+      >
+        <div
+          className="sub-header flex flex-container flex-vertically-centered"
+        >
+          <div>
+            <ProjectSelector
+              organization={
+                Object {
+                  "access": Array [
+                    "org:read",
+                    "org:write",
+                    "org:admin",
+                    "project:read",
+                    "project:write",
+                    "project:admin",
+                    "team:read",
+                    "team:write",
+                    "team:admin",
+                  ],
+                  "features": Array [],
+                  "id": "3",
+                  "name": "Organization Name",
+                  "onboardingTasks": Array [],
+                  "slug": "org-slug",
+                  "teams": Array [],
+                }
+              }
+              projectId={null}
+            >
+              <div
+                className="project-select"
+              >
+                <h3>
+                  <Link
+                    className="home-crumb"
+                    to="/org-slug/"
+                  >
+                    <Link
+                      className="home-crumb"
+                      onlyActiveOnIndex={false}
+                      style={Object {}}
+                      to="/org-slug/"
+                    >
+                      <a
+                        className="home-crumb"
+                        onClick={[Function]}
+                        style={Object {}}
+                      >
+                        <span
+                          className="icon-home"
+                        />
+                      </a>
+                    </Link>
+                  </Link>
+                  Select a project
+                  <DropdownLink
+                    anchorRight={false}
+                    caret={true}
+                    disabled={false}
+                    onClose={[Function]}
+                    onOpen={[Function]}
+                    title=""
+                    topLevelClasses="project-dropdown is-empty"
+                  >
+                    <span
+                      className="project-dropdown is-empty dropdown"
+                    >
+                      <a
+                        className="dropdown-toggle"
+                        data-toggle="dropdown"
+                      >
+                        <i
+                          className="icon-arrow-down"
+                        />
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                      >
+                        <MenuItem
+                          className="empty-projects-item"
+                          noAnchor={true}
+                        >
+                          <li
+                            className="empty-projects-item"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <div
+                              className="empty-message"
+                            >
+                              You have no projects.
+                            </div>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          className="empty-projects-item"
+                          noAnchor={true}
+                        >
+                          <li
+                            className="empty-projects-item"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              className="btn btn-primary btn-block"
+                              href="/organizations/org-slug/projects/new/"
+                            >
+                              Create project
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownLink>
+                </h3>
+              </div>
+            </ProjectSelector>
+          </div>
+          <div
+            className="align-right hidden-xs"
+          >
+            <Button
+              disabled={false}
+              priority="primary"
+              style={
+                Object {
+                  "marginRight": 5,
+                }
+              }
+              to="/organizations/org-slug/projects/new/"
+            >
+              <Link
+                className="button button-primary"
+                disabled={false}
+                onClick={[Function]}
+                onlyActiveOnIndex={false}
+                role="button"
+                style={
+                  Object {
+                    "marginRight": 5,
+                  }
+                }
+                to="/organizations/org-slug/projects/new/"
+              >
+                <a
+                  className="button button-primary"
+                  disabled={false}
+                  onClick={[Function]}
+                  role="button"
+                  style={
+                    Object {
+                      "marginRight": 5,
+                    }
+                  }
+                >
+                  <FlowLayout
+                    truncate={false}
+                  >
+                    <div
+                      className="flow-layout"
+                    >
+                      <span
+                        className="button-label"
+                      >
+                        New Project
+                      </span>
+                    </div>
+                  </FlowLayout>
+                </a>
+              </Link>
+            </Button>
+            <Button
+              disabled={false}
+              priority="primary"
+              to="/organizations/org-slug/teams/new/"
+            >
+              <Link
+                className="button button-primary"
+                disabled={false}
+                onClick={[Function]}
+                onlyActiveOnIndex={false}
+                role="button"
+                style={Object {}}
+                to="/organizations/org-slug/teams/new/"
+              >
+                <a
+                  className="button button-primary"
+                  disabled={false}
+                  onClick={[Function]}
+                  role="button"
+                  style={Object {}}
+                >
+                  <FlowLayout
+                    truncate={false}
+                  >
+                    <div
+                      className="flow-layout"
+                    >
+                      <span
+                        className="button-label"
+                      >
+                        New Team
+                      </span>
+                    </div>
+                  </FlowLayout>
+                </a>
+              </Link>
+            </Button>
+          </div>
+        </div>
+        <div
+          className="container"
+        >
+          <div
+            className="content row"
+          >
+            <div
+              className="col-md-2 org-sidebar"
+            >
+              <HomeSidebar>
+                <div>
+                  <h6
+                    className="nav-header"
+                  >
+                    Organization
+                  </h6>
+                  <ul
+                    className="nav nav-stacked"
+                  >
+                    <ListLink
+                      activeClassName="active"
+                      index={false}
+                      isActive={[Function]}
+                      to="/org-slug/"
+                    >
+                      <li
+                        className=""
+                      >
+                        <Link
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to="/org-slug/"
+                        >
+                          <a
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Dashboard
+                          </a>
+                        </Link>
+                      </li>
+                    </ListLink>
+                    <ListLink
+                      activeClassName="active"
+                      index={false}
+                      isActive={[Function]}
+                      to="/organizations/org-slug/teams/"
+                    >
+                      <li
+                        className=""
+                      >
+                        <Link
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to="/organizations/org-slug/teams/"
+                        >
+                          <a
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Projects & Teams
+                          </a>
+                        </Link>
+                      </li>
+                    </ListLink>
+                    <ListLink
+                      activeClassName="active"
+                      index={false}
+                      to="/organizations/org-slug/stats/"
+                    >
+                      <li
+                        className=""
+                      >
+                        <Link
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to="/organizations/org-slug/stats/"
+                        >
+                          <a
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Stats
+                          </a>
+                        </Link>
+                      </li>
+                    </ListLink>
+                  </ul>
+                  <div>
+                    <h6
+                      className="nav-header with-divider"
+                    >
+                      Issues
+                    </h6>
+                    <ul
+                      className="nav nav-stacked"
+                    >
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/issues/assigned/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/issues/assigned/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Assigned to Me
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/issues/bookmarks/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/issues/bookmarks/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Bookmarks
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/issues/history/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/issues/history/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              History
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                    </ul>
+                  </div>
+                  <div>
+                    <h6
+                      className="nav-header with-divider"
+                    >
+                      Manage
+                    </h6>
+                    <ul
+                      className="nav nav-stacked"
+                    >
+                      <li>
+                        <a
+                          href="/organizations/org-slug/members/"
+                        >
+                          Members
+                           
+                        </a>
+                      </li>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/audit-log/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/audit-log/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Audit Log
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/rate-limits/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/rate-limits/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Rate Limits
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/repos/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/repos/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Repositories
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/settings/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/settings/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Settings
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                    </ul>
+                  </div>
+                </div>
+              </HomeSidebar>
+            </div>
+            <div
+              className="col-md-10"
+            >
+              <div>
+                <div
+                  className="page-header"
+                >
+                  <h3>
+                    Edit Api Key
+                  </h3>
+                </div>
+                <ApiForm
+                  apiEndpoint="/organizations/org-slug/api-keys/1/"
+                  apiMethod="PUT"
+                  cancelLabel="Cancel"
+                  className="form-stacked"
+                  footerClass="form-actions align-right"
+                  initialData={
+                    Object {
+                      "allowed_origins": "",
+                      "id": 1,
+                      "key": "aa624bcc12024702a202cd90be5feda0",
+                      "label": "Default",
+                      "scope_list": Array [
+                        "project:read",
+                        "event:read",
+                        "team:read",
+                        "member:read",
+                      ],
+                      "status": 0,
+                    }
+                  }
+                  onCancel={[Function]}
+                  onSubmitError={[Function]}
+                  onSubmitSuccess={[Function]}
+                  requireChanges={false}
+                  submitDisabled={false}
+                  submitLabel="Save Changes"
+                >
+                  <form
+                    className="form-stacked"
+                    onSubmit={[Function]}
+                  >
+                    <SplitLayout
+                      splitWidth={15}
+                    >
+                      <SpreadLayout
+                        center={true}
+                        className="split-layout"
+                        responsive={false}
+                      >
+                        <div
+                          className="spread-layout split-layout center"
+                        >
+                          <TextField
+                            className="split-layout-child"
+                            disabled={false}
+                            label="Label"
+                            name="label"
+                            required={false}
+                            style={
+                              Object {
+                                "marginRight": 15,
+                              }
+                            }
+                          >
+                            <div
+                              className="split-layout-child control-group"
+                              style={
+                                Object {
+                                  "marginRight": 15,
+                                }
+                              }
+                            >
+                              <div
+                                className="controls"
+                              >
+                                <label
+                                  className="control-label"
+                                  htmlFor="id-label"
+                                >
+                                  Label
+                                </label>
+                                <input
+                                  className="form-control"
+                                  disabled={false}
+                                  id="id-label"
+                                  onChange={[Function]}
+                                  required={false}
+                                  type="text"
+                                  value="Default"
+                                />
+                              </div>
+                            </div>
+                          </TextField>
+                          <TextField
+                            className="split-layout-child"
+                            disabled={true}
+                            label="API Key"
+                            name="key"
+                            required={false}
+                            style={
+                              Object {
+                                "marginRight": undefined,
+                              }
+                            }
+                          >
+                            <div
+                              className="split-layout-child control-group"
+                              style={
+                                Object {
+                                  "marginRight": undefined,
+                                }
+                              }
+                            >
+                              <div
+                                className="controls"
+                              >
+                                <label
+                                  className="control-label"
+                                  htmlFor="id-key"
+                                >
+                                  API Key
+                                </label>
+                                <input
+                                  className="form-control"
+                                  disabled={true}
+                                  id="id-key"
+                                  onChange={[Function]}
+                                  required={false}
+                                  type="text"
+                                  value="aa624bcc12024702a202cd90be5feda0"
+                                />
+                              </div>
+                            </div>
+                          </TextField>
+                        </div>
+                      </SpreadLayout>
+                    </SplitLayout>
+                    <MultipleCheckboxField
+                      choices={
+                        Array [
+                          Array [
+                            "project:read",
+                            "project:read",
+                          ],
+                          Array [
+                            "project:write",
+                            "project:write",
+                          ],
+                          Array [
+                            "project:admin",
+                            "project:admin",
+                          ],
+                          Array [
+                            "project:releases",
+                            "project:releases",
+                          ],
+                          Array [
+                            "team:read",
+                            "team:read",
+                          ],
+                          Array [
+                            "team:write",
+                            "team:write",
+                          ],
+                          Array [
+                            "team:admin",
+                            "team:admin",
+                          ],
+                          Array [
+                            "event:read",
+                            "event:read",
+                          ],
+                          Array [
+                            "event:admin",
+                            "event:admin",
+                          ],
+                          Array [
+                            "org:read",
+                            "org:read",
+                          ],
+                          Array [
+                            "org:write",
+                            "org:write",
+                          ],
+                          Array [
+                            "org:admin",
+                            "org:admin",
+                          ],
+                          Array [
+                            "member:read",
+                            "member:read",
+                          ],
+                          Array [
+                            "member:admin",
+                            "member:admin",
+                          ],
+                        ]
+                      }
+                      className="api-key-details"
+                      disabled={false}
+                      label="Scopes"
+                      name="scope_list"
+                      required={true}
+                    >
+                      <div
+                        className="api-key-details control-group"
+                      >
+                        <div
+                          className="required"
+                        >
+                          <div
+                            className="controls"
+                          >
+                            <label
+                              className="control-label"
+                              style={
+                                Object {
+                                  "borderBottom": "1px solid #f1eff3",
+                                  "display": "block",
+                                  "marginBottom": 10,
+                                }
+                              }
+                            >
+                              Scopes
+                            </label>
+                          </div>
+                        </div>
+                        <div
+                          className="control-list"
+                        >
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={true}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="project:read"
+                            />
+                            project:read
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="project:write"
+                            />
+                            project:write
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="project:admin"
+                            />
+                            project:admin
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="project:releases"
+                            />
+                            project:releases
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={true}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="team:read"
+                            />
+                            team:read
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="team:write"
+                            />
+                            team:write
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="team:admin"
+                            />
+                            team:admin
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={true}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="event:read"
+                            />
+                            event:read
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="event:admin"
+                            />
+                            event:admin
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="org:read"
+                            />
+                            org:read
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="org:write"
+                            />
+                            org:write
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="org:admin"
+                            />
+                            org:admin
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={true}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="member:read"
+                            />
+                            member:read
+                          </label>
+                          <label
+                            className="checkbox"
+                          >
+                            <input
+                              checked={false}
+                              disabled={false}
+                              onChange={[Function]}
+                              type="checkbox"
+                              value="member:admin"
+                            />
+                            member:admin
+                          </label>
+                        </div>
+                      </div>
+                    </MultipleCheckboxField>
+                    <TextareaField
+                      disabled={false}
+                      help="Separate multiple entries with a newline"
+                      label="Allowed Domains"
+                      name="allowed_origins"
+                      placeholder="e.g. example.com or https://example.com"
+                      required={false}
+                    >
+                      <div
+                        className="control-group"
+                      >
+                        <div
+                          className="controls"
+                        >
+                          <label
+                            className="control-label"
+                            htmlFor="id-allowed_origins"
+                          >
+                            Allowed Domains
+                          </label>
+                          <textarea
+                            className="form-control"
+                            disabled={false}
+                            id="id-allowed_origins"
+                            onChange={[Function]}
+                            placeholder="e.g. example.com or https://example.com"
+                            required={false}
+                            value=""
+                          />
+                          <p
+                            className="help-block"
+                          >
+                            Separate multiple entries with a newline
+                          </p>
+                        </div>
+                      </div>
+                    </TextareaField>
+                    <div
+                      className="form-actions align-right"
+                      style={
+                        Object {
+                          "marginTop": 25,
+                        }
+                      }
+                    >
+                      <button
+                        className="btn btn-primary"
+                        disabled={false}
+                        type="submit"
+                      >
+                        Save Changes
+                      </button>
+                      <button
+                        className="btn btn-default"
+                        disabled={false}
+                        onClick={[Function]}
+                        style={
+                          Object {
+                            "marginLeft": 5,
+                          }
+                        }
+                        type="button"
+                      >
+                        Cancel
+                      </button>
+                    </div>
+                  </form>
+                </ApiForm>
+              </div>
+            </div>
+          </div>
+        </div>
+      </div>
+    </HomeContainer>
+  </DocumentTitle>
+</OrganizationApiKeyDetailsView>
+`;
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap
new file mode 100644
index 0000000000..fe13cd0335
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap
@@ -0,0 +1,777 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OrganizationApiKeysView renders 1`] = `
+<OrganizationApiKeysView
+  params={
+    Object {
+      "orgId": "org-slug",
+    }
+  }
+>
+  <DocumentTitle
+    title="Organization Name API Keys"
+  >
+    <HomeContainer
+      params={
+        Object {
+          "orgId": "org-slug",
+        }
+      }
+    >
+      <div
+        className=" organization-home"
+      >
+        <div
+          className="sub-header flex flex-container flex-vertically-centered"
+        >
+          <div>
+            <ProjectSelector
+              organization={
+                Object {
+                  "access": Array [
+                    "org:read",
+                    "org:write",
+                    "org:admin",
+                    "project:read",
+                    "project:write",
+                    "project:admin",
+                    "team:read",
+                    "team:write",
+                    "team:admin",
+                  ],
+                  "features": Array [],
+                  "id": "3",
+                  "name": "Organization Name",
+                  "onboardingTasks": Array [],
+                  "slug": "org-slug",
+                  "teams": Array [],
+                }
+              }
+              projectId={null}
+            >
+              <div
+                className="project-select"
+              >
+                <h3>
+                  <Link
+                    className="home-crumb"
+                    to="/org-slug/"
+                  >
+                    <Link
+                      className="home-crumb"
+                      onlyActiveOnIndex={false}
+                      style={Object {}}
+                      to="/org-slug/"
+                    >
+                      <a
+                        className="home-crumb"
+                        onClick={[Function]}
+                        style={Object {}}
+                      >
+                        <span
+                          className="icon-home"
+                        />
+                      </a>
+                    </Link>
+                  </Link>
+                  Select a project
+                  <DropdownLink
+                    anchorRight={false}
+                    caret={true}
+                    disabled={false}
+                    onClose={[Function]}
+                    onOpen={[Function]}
+                    title=""
+                    topLevelClasses="project-dropdown is-empty"
+                  >
+                    <span
+                      className="project-dropdown is-empty dropdown"
+                    >
+                      <a
+                        className="dropdown-toggle"
+                        data-toggle="dropdown"
+                      >
+                        <i
+                          className="icon-arrow-down"
+                        />
+                      </a>
+                      <ul
+                        className="dropdown-menu"
+                      >
+                        <MenuItem
+                          className="empty-projects-item"
+                          noAnchor={true}
+                        >
+                          <li
+                            className="empty-projects-item"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <div
+                              className="empty-message"
+                            >
+                              You have no projects.
+                            </div>
+                          </li>
+                        </MenuItem>
+                        <MenuItem
+                          divider={true}
+                        >
+                          <li
+                            className="divider"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          />
+                        </MenuItem>
+                        <MenuItem
+                          className="empty-projects-item"
+                          noAnchor={true}
+                        >
+                          <li
+                            className="empty-projects-item"
+                            href={null}
+                            role="presentation"
+                            title={null}
+                          >
+                            <a
+                              className="btn btn-primary btn-block"
+                              href="/organizations/org-slug/projects/new/"
+                            >
+                              Create project
+                            </a>
+                          </li>
+                        </MenuItem>
+                      </ul>
+                    </span>
+                  </DropdownLink>
+                </h3>
+              </div>
+            </ProjectSelector>
+          </div>
+          <div
+            className="align-right hidden-xs"
+          >
+            <Button
+              disabled={false}
+              priority="primary"
+              style={
+                Object {
+                  "marginRight": 5,
+                }
+              }
+              to="/organizations/org-slug/projects/new/"
+            >
+              <Link
+                className="button button-primary"
+                disabled={false}
+                onClick={[Function]}
+                onlyActiveOnIndex={false}
+                role="button"
+                style={
+                  Object {
+                    "marginRight": 5,
+                  }
+                }
+                to="/organizations/org-slug/projects/new/"
+              >
+                <a
+                  className="button button-primary"
+                  disabled={false}
+                  onClick={[Function]}
+                  role="button"
+                  style={
+                    Object {
+                      "marginRight": 5,
+                    }
+                  }
+                >
+                  <FlowLayout
+                    truncate={false}
+                  >
+                    <div
+                      className="flow-layout"
+                    >
+                      <span
+                        className="button-label"
+                      >
+                        New Project
+                      </span>
+                    </div>
+                  </FlowLayout>
+                </a>
+              </Link>
+            </Button>
+            <Button
+              disabled={false}
+              priority="primary"
+              to="/organizations/org-slug/teams/new/"
+            >
+              <Link
+                className="button button-primary"
+                disabled={false}
+                onClick={[Function]}
+                onlyActiveOnIndex={false}
+                role="button"
+                style={Object {}}
+                to="/organizations/org-slug/teams/new/"
+              >
+                <a
+                  className="button button-primary"
+                  disabled={false}
+                  onClick={[Function]}
+                  role="button"
+                  style={Object {}}
+                >
+                  <FlowLayout
+                    truncate={false}
+                  >
+                    <div
+                      className="flow-layout"
+                    >
+                      <span
+                        className="button-label"
+                      >
+                        New Team
+                      </span>
+                    </div>
+                  </FlowLayout>
+                </a>
+              </Link>
+            </Button>
+          </div>
+        </div>
+        <div
+          className="container"
+        >
+          <div
+            className="content row"
+          >
+            <div
+              className="col-md-2 org-sidebar"
+            >
+              <HomeSidebar>
+                <div>
+                  <h6
+                    className="nav-header"
+                  >
+                    Organization
+                  </h6>
+                  <ul
+                    className="nav nav-stacked"
+                  >
+                    <ListLink
+                      activeClassName="active"
+                      index={false}
+                      isActive={[Function]}
+                      to="/org-slug/"
+                    >
+                      <li
+                        className=""
+                      >
+                        <Link
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to="/org-slug/"
+                        >
+                          <a
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Dashboard
+                          </a>
+                        </Link>
+                      </li>
+                    </ListLink>
+                    <ListLink
+                      activeClassName="active"
+                      index={false}
+                      isActive={[Function]}
+                      to="/organizations/org-slug/teams/"
+                    >
+                      <li
+                        className=""
+                      >
+                        <Link
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to="/organizations/org-slug/teams/"
+                        >
+                          <a
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Projects & Teams
+                          </a>
+                        </Link>
+                      </li>
+                    </ListLink>
+                    <ListLink
+                      activeClassName="active"
+                      index={false}
+                      to="/organizations/org-slug/stats/"
+                    >
+                      <li
+                        className=""
+                      >
+                        <Link
+                          onlyActiveOnIndex={false}
+                          style={Object {}}
+                          to="/organizations/org-slug/stats/"
+                        >
+                          <a
+                            onClick={[Function]}
+                            style={Object {}}
+                          >
+                            Stats
+                          </a>
+                        </Link>
+                      </li>
+                    </ListLink>
+                  </ul>
+                  <div>
+                    <h6
+                      className="nav-header with-divider"
+                    >
+                      Issues
+                    </h6>
+                    <ul
+                      className="nav nav-stacked"
+                    >
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/issues/assigned/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/issues/assigned/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Assigned to Me
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/issues/bookmarks/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/issues/bookmarks/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Bookmarks
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/issues/history/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/issues/history/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              History
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                    </ul>
+                  </div>
+                  <div>
+                    <h6
+                      className="nav-header with-divider"
+                    >
+                      Manage
+                    </h6>
+                    <ul
+                      className="nav nav-stacked"
+                    >
+                      <li>
+                        <a
+                          href="/organizations/org-slug/members/"
+                        >
+                          Members
+                           
+                        </a>
+                      </li>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/audit-log/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/audit-log/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Audit Log
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/rate-limits/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/rate-limits/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Rate Limits
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/repos/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/repos/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Repositories
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                      <ListLink
+                        activeClassName="active"
+                        index={false}
+                        to="/organizations/org-slug/settings/"
+                      >
+                        <li
+                          className=""
+                        >
+                          <Link
+                            onlyActiveOnIndex={false}
+                            style={Object {}}
+                            to="/organizations/org-slug/settings/"
+                          >
+                            <a
+                              onClick={[Function]}
+                              style={Object {}}
+                            >
+                              Settings
+                            </a>
+                          </Link>
+                        </li>
+                      </ListLink>
+                    </ul>
+                  </div>
+                </div>
+              </HomeSidebar>
+            </div>
+            <div
+              className="col-md-10"
+            >
+              <div>
+                <SpreadLayout
+                  center={true}
+                  className="page-header"
+                  responsive={false}
+                >
+                  <div
+                    className="spread-layout page-header center"
+                  >
+                    <h3>
+                      Api Keys
+                    </h3>
+                    <Button
+                      disabled={false}
+                      onClick={[Function]}
+                      priority="primary"
+                      type="button"
+                    >
+                      <button
+                        className="button button-primary"
+                        disabled={false}
+                        onClick={[Function]}
+                        role="button"
+                        type="button"
+                      >
+                        <FlowLayout
+                          truncate={false}
+                        >
+                          <div
+                            className="flow-layout"
+                          >
+                            <span
+                              className="button-label"
+                            >
+                              New API Key
+                            </span>
+                          </div>
+                        </FlowLayout>
+                      </button>
+                    </Button>
+                  </div>
+                </SpreadLayout>
+                <p>
+                  API keys grant access to the
+                   
+                  <a
+                    href="https://docs.sentry.io/hosted/api/"
+                    rel="nofollow"
+                    target="_blank"
+                  >
+                    developer web API
+                  </a>
+                  . If you're looking to configure a Sentry client, you'll need a client key which is available in your project settings.
+                </p>
+                <div
+                  className="alert alert-block alert-info"
+                >
+                  psst. Until Sentry supports OAuth, you might want to switch to using
+                   
+                  <Link
+                    to="/api/"
+                  >
+                    <Link
+                      onlyActiveOnIndex={false}
+                      style={Object {}}
+                      to="/api/"
+                    >
+                      <a
+                        onClick={[Function]}
+                        style={Object {}}
+                      >
+                        Auth Tokens
+                      </a>
+                    </Link>
+                  </Link>
+                   
+                  instead.
+                </div>
+                <table
+                  className="table api-key-list"
+                >
+                  <colgroup>
+                    <col
+                      style={
+                        Object {
+                          "width": "40%",
+                        }
+                      }
+                    />
+                    <col
+                      style={
+                        Object {
+                          "width": "40%",
+                        }
+                      }
+                    />
+                    <col
+                      style={
+                        Object {
+                          "width": "20%",
+                        }
+                      }
+                    />
+                  </colgroup>
+                  <tbody>
+                    <tr>
+                      <td>
+                        <h5>
+                          <Link
+                            to="/organizations/org-slug/api-keys/1"
+                          >
+                            <Link
+                              onlyActiveOnIndex={false}
+                              style={Object {}}
+                              to="/organizations/org-slug/api-keys/1"
+                            >
+                              <a
+                                onClick={[Function]}
+                                style={Object {}}
+                              >
+                                Default
+                              </a>
+                            </Link>
+                          </Link>
+                        </h5>
+                      </td>
+                      <td>
+                        <div
+                          className="form-control disabled auto-select"
+                        >
+                          aa624bcc12024702a202cd90be5feda0
+                        </div>
+                      </td>
+                      <td
+                        className="align-right"
+                      >
+                        <Link
+                          className="btn btn-default btn-sm"
+                          style={
+                            Object {
+                              "marginRight": 4,
+                            }
+                          }
+                          to="/organizations/org-slug/api-keys/1"
+                        >
+                          <Link
+                            className="btn btn-default btn-sm"
+                            onlyActiveOnIndex={false}
+                            style={
+                              Object {
+                                "marginRight": 4,
+                              }
+                            }
+                            to="/organizations/org-slug/api-keys/1"
+                          >
+                            <a
+                              className="btn btn-default btn-sm"
+                              onClick={[Function]}
+                              style={
+                                Object {
+                                  "marginRight": 4,
+                                }
+                              }
+                            >
+                              Edit Key
+                            </a>
+                          </Link>
+                        </Link>
+                        <LinkWithConfirmation
+                          className="btn btn-default btn-sm"
+                          message="Are you sure you want to remove this API key?"
+                          onConfirm={[Function]}
+                          title="Remove API Key?"
+                        >
+                          <Confirm
+                            cancelText="Cancel"
+                            confirmText="Confirm"
+                            message="Are you sure you want to remove this API key?"
+                            onConfirm={[Function]}
+                            priority="primary"
+                          >
+                            <span>
+                              <a
+                                className="btn btn-default btn-sm"
+                                onClick={[Function]}
+                                title="Remove API Key?"
+                              >
+                                <span
+                                  className="icon-trash"
+                                />
+                              </a>
+                              <Modal
+                                animation={false}
+                                autoFocus={true}
+                                backdrop={true}
+                                bsClass="modal"
+                                dialogComponentClass={[Function]}
+                                enforceFocus={true}
+                                keyboard={true}
+                                manager={
+                                  ModalManager {
+                                    "containers": Array [],
+                                    "data": Array [],
+                                    "handleContainerOverflow": true,
+                                    "hideSiblingNodes": true,
+                                    "modals": Array [],
+                                  }
+                                }
+                                onHide={[Function]}
+                                renderBackdrop={[Function]}
+                                restoreFocus={true}
+                                show={false}
+                              >
+                                <Modal
+                                  autoFocus={true}
+                                  backdrop={true}
+                                  backdropClassName="modal-backdrop"
+                                  backdropTransitionTimeout={150}
+                                  containerClassName="modal-open"
+                                  dialogTransitionTimeout={300}
+                                  enforceFocus={true}
+                                  keyboard={true}
+                                  manager={
+                                    ModalManager {
+                                      "containers": Array [],
+                                      "data": Array [],
+                                      "handleContainerOverflow": true,
+                                      "hideSiblingNodes": true,
+                                      "modals": Array [],
+                                    }
+                                  }
+                                  onEntering={[Function]}
+                                  onExited={[Function]}
+                                  onHide={[Function]}
+                                  renderBackdrop={[Function]}
+                                  restoreFocus={true}
+                                  show={false}
+                                />
+                              </Modal>
+                            </span>
+                          </Confirm>
+                        </LinkWithConfirmation>
+                      </td>
+                    </tr>
+                  </tbody>
+                </table>
+              </div>
+            </div>
+          </div>
+        </div>
+      </div>
+    </HomeContainer>
+  </DocumentTitle>
+</OrganizationApiKeysView>
+`;
diff --git a/tests/js/spec/views/organizationApiKeyDetailsView.spec.jsx b/tests/js/spec/views/organizationApiKeyDetailsView.spec.jsx
new file mode 100644
index 0000000000..75a982b175
--- /dev/null
+++ b/tests/js/spec/views/organizationApiKeyDetailsView.spec.jsx
@@ -0,0 +1,44 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import OrganizationApiKeyDetailsView
+  from 'app/views/settings/organization/apiKeys/organizationApiKeyDetailsView';
+
+const childContextTypes = {
+  organization: React.PropTypes.object,
+  router: React.PropTypes.object,
+  location: React.PropTypes.object
+};
+
+describe('OrganizationApiKeyDetailsView', function() {
+  beforeEach(function() {
+    Client.clearMockResponses();
+    Client.addMockResponse({
+      url: '/organizations/org-slug/api-keys/',
+      method: 'GET',
+      body: [TestStubs.ApiKey()]
+    });
+    Client.addMockResponse({
+      url: '/organizations/org-slug/api-keys/1/',
+      method: 'GET',
+      body: TestStubs.ApiKey()
+    });
+  });
+
+  it('renders', function() {
+    let wrapper = mount(
+      <OrganizationApiKeyDetailsView params={{apiKey: 1, orgId: 'org-slug'}} />,
+      {
+        context: {
+          router: TestStubs.router(),
+          organization: TestStubs.Organization(),
+          location: TestStubs.location()
+        },
+        childContextTypes
+      }
+    );
+    expect(wrapper.state('loading')).toBe(false);
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/views/organizationApiKeysView.spec.jsx b/tests/js/spec/views/organizationApiKeysView.spec.jsx
new file mode 100644
index 0000000000..1ee194df1d
--- /dev/null
+++ b/tests/js/spec/views/organizationApiKeysView.spec.jsx
@@ -0,0 +1,67 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import {Client} from 'app/api';
+import OrganizationApiKeysView
+  from 'app/views/settings/organization/apiKeys/organizationApiKeysView';
+
+const childContextTypes = {
+  organization: React.PropTypes.object,
+  router: React.PropTypes.object,
+  location: React.PropTypes.object
+};
+
+describe('OrganizationApiKeysView', function() {
+  beforeEach(function() {
+    Client.clearMockResponses();
+    Client.addMockResponse({
+      url: '/organizations/org-slug/api-keys/',
+      method: 'GET',
+      body: [TestStubs.ApiKey()]
+    });
+    Client.addMockResponse({
+      url: '/organizations/org-slug/api-keys/1/',
+      method: 'GET',
+      body: TestStubs.ApiKey()
+    });
+  });
+
+  it('renders', function() {
+    let wrapper = mount(<OrganizationApiKeysView params={{orgId: 'org-slug'}} />, {
+      context: {
+        router: TestStubs.router(),
+        organization: TestStubs.Organization(),
+        location: TestStubs.location()
+      },
+      childContextTypes
+    });
+    expect(wrapper.state('loading')).toBe(false);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('can delete a key', function() {
+    let wrapper = mount(<OrganizationApiKeysView params={{orgId: 'org-slug'}} />, {
+      context: {
+        router: TestStubs.router(),
+        organization: TestStubs.Organization(),
+        location: TestStubs.location()
+      },
+      childContextTypes
+    });
+    OrganizationApiKeysView.handleRemove = jest.fn();
+    expect(OrganizationApiKeysView.handleRemove).not.toHaveBeenCalled();
+
+    // Click remove button
+    wrapper.find('.icon-trash').simulate('click');
+    wrapper.update();
+
+    // expect a modal
+    let modal = wrapper.find('Modal');
+    expect(modal.first().prop('show')).toBe(true);
+
+    // TODO
+    // wrapper.find('Modal').last().find('Button').last().simulate('click');
+
+    // expect(OrganizationApiKeysView.handleRemove).toHaveBeenCalled();
+  });
+});
diff --git a/tests/sentry/api/endpoints/test_organization_api_key_details.py b/tests/sentry/api/endpoints/test_organization_api_key_details.py
new file mode 100644
index 0000000000..4cd756b5fb
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_api_key_details.py
@@ -0,0 +1,98 @@
+from __future__ import absolute_import
+
+import six
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import ApiKey
+from sentry.testutils import APITestCase
+
+DEFAULT_SCOPES = [
+    'project:read',
+    'event:read',
+    'team:read',
+    'org:read',
+    'member:read',
+]
+
+
+class OrganizationApiKeyDetails(APITestCase):
+    def test_api_key_no_exist(self):
+        self.login_as(user=self.user)
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-details',
+            args=[organization.slug, 2]
+        )
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 404
+
+    def test_get_api_details(self):
+        self.login_as(user=self.user)
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        api_key = ApiKey.objects.create(
+            organization=organization,
+            scope_list=DEFAULT_SCOPES
+        )
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-details',
+            args=[organization.slug, api_key.id]
+        )
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 200
+        assert resp.data.get('id') == six.text_type(api_key.id)
+
+    def test_update_api_key_details(self):
+        self.login_as(user=self.user)
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        api_key = ApiKey.objects.create(
+            organization=organization,
+            scope_list=DEFAULT_SCOPES
+        )
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-details',
+            args=[organization.slug, api_key.id]
+        )
+
+        resp = self.client.put(path, data={'label': 'New Label', 'allowed_origins': 'sentry.io'})
+
+        assert resp.status_code == 200
+
+        api_key = ApiKey.objects.get(
+            id=api_key.id,
+            organization_id=organization.id,
+        )
+
+        assert api_key.label == 'New Label'
+        assert api_key.allowed_origins == 'sentry.io'
+
+    def test_can_delete_api_key(self):
+        self.login_as(user=self.user)
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        api_key = ApiKey.objects.create(
+            organization=organization,
+            scope_list=DEFAULT_SCOPES
+        )
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-details',
+            args=[organization.slug, api_key.id]
+        )
+
+        resp = self.client.delete(path)
+
+        assert resp.status_code == 204
+
+        # check to make sure it's deleted
+        resp = self.client.get(path)
+        assert resp.status_code == 404
diff --git a/tests/sentry/api/endpoints/test_organization_api_key_index.py b/tests/sentry/api/endpoints/test_organization_api_key_index.py
new file mode 100644
index 0000000000..48ecb3d405
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_api_key_index.py
@@ -0,0 +1,65 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.testutils import APITestCase
+
+
+class OrganizationApiKeyIndex(APITestCase):
+    def test_org_admin_can_access(self):
+        self.login_as(user=self.user)
+
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-index',
+            args=[organization.slug]
+        )
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 200
+
+    def test_member_no_access(self):
+        self.login_as(user=self.user)
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        user = self.create_user('bar@example.com')
+        self.create_member(
+            organization=organization,
+            user=user,
+            role='member',
+        )
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-index',
+            args=[organization.slug]
+        )
+
+        self.login_as(user)
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 403
+
+    def test_admin_can_access(self):
+        self.login_as(user=self.user)
+        organization = self.create_organization(name='foo', owner=self.user)
+
+        admin_user = self.create_user('admin@example.com', is_superuser=True)
+        self.create_member(
+            organization=organization,
+            user=admin_user,
+            role='admin',
+        )
+
+        path = reverse(
+            'sentry-api-0-organization-api-key-index',
+            args=[organization.slug]
+        )
+
+        self.login_as(admin_user)
+
+        resp = self.client.get(path)
+
+        assert resp.status_code == 200
diff --git a/tests/sentry/web/frontend/test_organization_api_key_settings.py b/tests/sentry/web/frontend/test_organization_api_key_settings.py
deleted file mode 100644
index 6b838108dd..0000000000
--- a/tests/sentry/web/frontend/test_organization_api_key_settings.py
+++ /dev/null
@@ -1,68 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.models import ApiKey
-from sentry.testutils import TestCase, PermissionTestCase
-
-
-class OrganizationApiKeySettingsPermissionTest(PermissionTestCase):
-    def setUp(self):
-        super(OrganizationApiKeySettingsPermissionTest, self).setUp()
-        key = ApiKey.objects.create(organization=self.organization)
-        self.path = reverse(
-            'sentry-organization-api-key-settings', args=[self.organization.slug, key.id]
-        )
-
-    def test_teamless_admin_cannot_load(self):
-        self.assert_teamless_admin_cannot_access(self.path)
-
-    def test_member_cannot_load(self):
-        self.assert_member_cannot_access(self.path)
-
-    def test_manager_cannot_load(self):
-        self.assert_manager_cannot_access(self.path)
-
-    def test_owner_can_load(self):
-        self.assert_owner_can_access(self.path)
-
-
-class OrganizationApiKeySettingsTest(TestCase):
-    def test_renders_with_context(self):
-        organization = self.create_organization(name='foo', owner=self.user)
-
-        key = ApiKey.objects.create(organization=organization)
-
-        path = reverse(
-            'sentry-organization-api-key-settings', args=[
-                organization.slug,
-                key.id,
-            ]
-        )
-
-        self.login_as(self.user)
-
-        resp = self.client.get(path)
-
-        assert resp.status_code == 200
-
-        self.assertTemplateUsed(resp, 'sentry/organization-api-key-settings.html')
-
-        assert resp.context['organization'] == organization
-        assert resp.context['key'] == key
-
-    def test_not_found(self):
-        organization = self.create_organization(name='foo', owner=self.user)
-
-        path = reverse(
-            'sentry-organization-api-key-settings', args=[
-                organization.slug,
-                99999,
-            ]
-        )
-
-        self.login_as(self.user)
-
-        resp = self.client.get(path)
-
-        assert resp.status_code == 404
diff --git a/tests/sentry/web/frontend/test_organization_api_keys.py b/tests/sentry/web/frontend/test_organization_api_keys.py
deleted file mode 100644
index f93a388a6d..0000000000
--- a/tests/sentry/web/frontend/test_organization_api_keys.py
+++ /dev/null
@@ -1,61 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.models import ApiKey
-from sentry.testutils import TestCase, PermissionTestCase
-
-
-class OrganizationApiKeysPermissionTest(PermissionTestCase):
-    def setUp(self):
-        super(OrganizationApiKeysPermissionTest, self).setUp()
-        self.path = reverse('sentry-organization-api-keys', args=[self.organization.slug])
-
-    def test_teamless_admin_cannot_load(self):
-        self.assert_teamless_admin_cannot_access(self.path)
-
-    def test_member_cannot_load(self):
-        self.assert_member_cannot_access(self.path)
-
-    def test_manager_cannot_load(self):
-        self.assert_manager_cannot_access(self.path)
-
-    def test_owner_can_load(self):
-        self.assert_owner_can_access(self.path)
-
-
-class OrganizationApiKeysTest(TestCase):
-    def test_renders_with_context(self):
-        organization = self.create_organization(name='foo', owner=self.user)
-
-        key1 = ApiKey.objects.create(organization=organization, label='Bar')
-        key2 = ApiKey.objects.create(organization=organization, label='Foo')
-
-        path = reverse('sentry-organization-api-keys', args=[organization.slug])
-
-        self.login_as(self.user)
-
-        resp = self.client.get(path)
-
-        assert resp.status_code == 200
-
-        self.assertTemplateUsed(resp, 'sentry/organization-api-keys.html')
-
-        assert resp.context['organization'] == organization
-        assert resp.context['key_list'] == [
-            key1,
-            key2,
-        ]
-
-    def test_creates_api_key(self):
-        organization = self.create_organization(name='foo', owner=self.user)
-
-        path = reverse('sentry-organization-api-keys', args=[organization.slug])
-
-        self.login_as(self.user)
-
-        resp = self.client.post(path, {'op': 'newkey'})
-
-        assert resp.status_code == 302
-
-        assert ApiKey.objects.filter(organization=organization).exists()
