commit 95de46c418776804d48af5986737bf31822ddf8c
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 9 15:46:14 2018 -0700

    test: Add several release focused acceptance tests

diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
index 9971cda546..9844e789e1 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases/index.jsx
@@ -166,7 +166,7 @@ const ProjectReleases = createReactClass({
       : t("There don't seem to be any releases yet.");
 
     return (
-      <div className="empty-stream">
+      <div className="empty-stream ref-no-releases">
         <span className="icon icon-exclamation" />
         <p>{message}</p>
         <p>
@@ -180,7 +180,7 @@ const ProjectReleases = createReactClass({
 
   render() {
     return (
-      <div>
+      <div className="ref-project-releases">
         <GuideAnchor target="releases" type="invisible" />
         <div className="row release-list-header">
           <div className="col-sm-7">
diff --git a/src/sentry/static/sentry/app/views/releaseDetails.jsx b/src/sentry/static/sentry/app/views/releaseDetails.jsx
index 6e346c5e3f..bf786263d9 100644
--- a/src/sentry/static/sentry/app/views/releaseDetails.jsx
+++ b/src/sentry/static/sentry/app/views/releaseDetails.jsx
@@ -116,7 +116,7 @@ const ReleaseDetails = createReactClass({
     let {orgId, projectId} = this.props.params;
     return (
       <DocumentTitle title={this.getTitle()}>
-        <div>
+        <div className="ref-release-details">
           <div className="release-details">
             <div className="row">
               <div className="col-sm-4 col-xs-12">
diff --git a/tests/acceptance/test_project_releases.py b/tests/acceptance/test_project_releases.py
new file mode 100644
index 0000000000..2a61691991
--- /dev/null
+++ b/tests/acceptance/test_project_releases.py
@@ -0,0 +1,76 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase
+
+
+class ProjectReleasesTest(AcceptanceTestCase):
+    def setUp(self):
+        super(ProjectReleasesTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            owner=self.user, name='Rowdy Tiger')
+        self.team = self.create_team(
+            organization=self.org, name='Mariachi Band')
+        self.project = self.create_project(
+            organization=self.org,
+            teams=[self.team],
+            name='Bengal',
+        )
+        self.login_as(self.user)
+        self.path = '/{}/{}/releases/'.format(
+            self.org.slug, self.project.slug)
+
+    def test_with_releases(self):
+        release = self.create_release(
+            project=self.project,
+            version='1.0',
+        )
+        self.create_group(
+            first_release=release,
+            project=self.project,
+            message='Foo bar',
+        )
+        self.browser.get(self.path)
+        self.browser.wait_until_not('.loading')
+        self.browser.wait_until('.ref-project-releases')
+        self.browser.snapshot('project releases with releases')
+
+    def test_with_no_releases(self):
+        self.browser.get(self.path)
+        self.browser.wait_until_not('.loading')
+        self.browser.wait_until('.ref-project-releases')
+        self.browser.wait_until('.ref-no-releases')
+        self.browser.snapshot('project releases without releases')
+
+
+class ProjectReleaseDetailsTest(AcceptanceTestCase):
+    def setUp(self):
+        super(ProjectReleaseDetailsTest, self).setUp()
+        self.user = self.create_user('foo@example.com')
+        self.org = self.create_organization(
+            owner=self.user, name='Rowdy Tiger')
+        self.team = self.create_team(
+            organization=self.org, name='Mariachi Band')
+        self.project = self.create_project(
+            organization=self.org,
+            teams=[self.team],
+            name='Bengal',
+        )
+        self.release = self.create_release(
+            project=self.project,
+            version='1.0',
+        )
+        self.create_group(
+            first_release=self.release,
+            project=self.project,
+            message='Foo bar',
+        )
+        self.login_as(self.user)
+        self.path = '/{}/{}/releases/{}/'.format(
+            self.org.slug, self.project.slug, self.release.version)
+
+    def test_release_details_no_commits_no_deploys(self):
+        self.browser.get(self.path)
+        self.browser.wait_until_not('.loading')
+        self.browser.wait_until('.ref-release-details')
+        self.browser.snapshot('project release details no commits no deploys')
