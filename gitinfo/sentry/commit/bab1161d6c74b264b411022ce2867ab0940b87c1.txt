commit bab1161d6c74b264b411022ce2867ab0940b87c1
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Sep 29 15:49:01 2015 -0700

    Fix broken tests as a result of sidebar changes

diff --git a/tests/js/spec/utils/stream.spec.jsx b/tests/js/spec/utils/stream.spec.jsx
new file mode 100644
index 0000000000..57942cf3d2
--- /dev/null
+++ b/tests/js/spec/utils/stream.spec.jsx
@@ -0,0 +1,34 @@
+import {queryToObj} from "app/utils/stream";
+
+describe("utils/stream", function () {
+	describe("queryToObj()", function () {
+		it("should convert a basic query string to a query object", function () {
+			expect(queryToObj('is:unresolved')).to.eql({
+				is: 'unresolved'
+			});
+
+			expect(queryToObj('is:unresolved browser:"Chrome 36"')).to.eql({
+				is: 'unresolved',
+				browser: 'Chrome 36'
+			});
+
+			expect(queryToObj('python is:unresolved browser:"Chrome 36"')).to.eql({
+				__text: 'python',
+				is: 'unresolved',
+				browser: 'Chrome 36'
+			});
+		});
+
+		it('should convert separate query tokens into a single __text property', function () {
+			expect(queryToObj('python    exception')).to.eql({
+				__text: 'python exception'
+			});
+
+			// NOTE: "python exception" is extracted despite being broken up by "is:unresolved"
+			expect(queryToObj('python  is:unresolved exception')).to.eql({
+				__text: 'python exception',
+				is: 'unresolved'
+			});
+		});
+	});
+});
\ No newline at end of file
diff --git a/tests/js/spec/views/stream.spec.jsx b/tests/js/spec/views/stream.spec.jsx
index 16c98a4249..56b52bffea 100644
--- a/tests/js/spec/views/stream.spec.jsx
+++ b/tests/js/spec/views/stream.spec.jsx
@@ -1,5 +1,3 @@
-
-
 import React from "react/addons";
 import Cookies from "js-cookie";
 import Api from "app/api";
@@ -9,6 +7,7 @@ import LoadingIndicator from "app/components/loadingIndicator";
 import Stream from "app/views/stream";
 import StreamGroup from "app/components/stream/group";
 import StreamFilters from "app/views/stream/filters";
+import StreamSidebar from "app/views/stream/sidebar";
 import stubReactComponents from "../../helpers/stubReactComponent";
 import stubContext from "../../helpers/stubContext";
 import stubRouter from "../../helpers/stubRouter";
@@ -23,7 +22,7 @@ describe("Stream", function() {
     this.sandbox = sinon.sandbox.create();
 
     this.stubbedApiRequest = this.sandbox.stub(Api, "request");
-    stubReactComponents(this.sandbox, [StreamGroup, StreamFilters]);
+    stubReactComponents(this.sandbox, [StreamGroup, StreamFilters, StreamSidebar]);
 
     var ContextStubbedStream = stubContext(Stream, {
       router: stubRouter({
@@ -55,7 +54,7 @@ describe("Stream", function() {
       this.stubbedApiRequest.restore();
       this.sandbox.stub(Api, "request", function(url, options) {
         expectedUrl = url;
-        options.complete();
+        options.complete && options.complete();
       });
 
       var stubbedSetEndpoint = this.sandbox.stub(CursorPoller.prototype, "setEndpoint");
