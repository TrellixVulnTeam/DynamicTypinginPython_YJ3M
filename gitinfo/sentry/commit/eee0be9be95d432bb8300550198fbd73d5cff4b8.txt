commit eee0be9be95d432bb8300550198fbd73d5cff4b8
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri May 20 11:14:30 2016 -0700

    Display 2FA status in org membership list (#3280)

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index ee5dd5ddf8..b822761af8 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -125,6 +125,16 @@ class AuthenticatorManager(BaseManager):
             type__in=[a.type for a in available_authenticators(ignore_backup=True)],
         ).exists()
 
+    def bulk_users_have_2fa(self, user_ids):
+        """Checks if a list of user ids have 2FA configured.
+        Returns a dict of {<id>: <has_2fa>}
+        """
+        authenticators = set(Authenticator.objects.filter(
+            user__in=user_ids,
+            type__in=[a.type for a in available_authenticators(ignore_backup=True)],
+        ).distinct().values_list('user_id', flat=True))
+        return {id: id in authenticators for id in user_ids}
+
 
 AUTHENTICATOR_INTERFACES = {}
 AUTHENTICATOR_INTERFACES_BY_TYPE = {}
diff --git a/src/sentry/templates/sentry/organization-members.html b/src/sentry/templates/sentry/organization-members.html
index 24eb301075..3ac19e6830 100644
--- a/src/sentry/templates/sentry/organization-members.html
+++ b/src/sentry/templates/sentry/organization-members.html
@@ -3,6 +3,7 @@
 {% load crispy_forms_tags %}
 {% load i18n %}
 {% load sentry_helpers %}
+{% load sentry_features %}
 
 {% block title %}{% trans "Members" %} | {{ block.super }}{% endblock %}
 
@@ -54,24 +55,31 @@
 
   <table class="table member-list">
     <colgroup>
-      <col width="30%"/>
-      <col width="25%" />
-      <col width="20%"/>
-      <col width="20%"/>
+      <col width="15%"/>
+      {% feature auth:twofactor %}
+        <col width="1%"/>
+      {% endfeature %}
       <col width="5%"/>
+      <col width="5%"/>
+      {% if can_remove_members or member_can_leave %}
+        <col width="10%"/>
+      {% endif %}
     </colgroup>
     <thead>
       <tr>
         <th>{% trans "Member" %}</th>
+        {% feature auth:twofactor %}
+          <th class="squash">&nbsp;</th>
+        {% endfeature %}
         <th>&nbsp;</th>
-        <th>{% trans "Role" %}</th>
+        <th class="squash">{% trans "Role" %}</th>
         {% if can_remove_members or member_can_leave %}
           <th class="squash">&nbsp;</th>
         {% endif %}
       </tr>
     </thead>
     <tbody>
-      {% for member, needs_sso in member_list %}
+      {% for member, needs_sso, has_2fa in member_list %}
         <tr>
           <td class="table-user-info">
             <span class="avatar">
@@ -88,6 +96,9 @@
             {{ member.get_email }}
             <br />
           </td>
+          {% feature auth:twofactor %}
+            <td class="squash">{% if not has_2fa %}<span style="color: #B64236" class="icon-exclamation tip pull-right" title="{% trans "Two-factor auth not enabled" %}"></span>{% endif %}</td>
+          {% endfeature %}
           <td class="status">
             {% if needs_sso or member.is_pending %}
               {% if member.is_pending %}
@@ -101,7 +112,7 @@
               {% endif %}
             {% endif %}
           </td>
-          <td>{{ member.get_role_display }}</td>
+          <td class="squash">{{ member.get_role_display }}</td>
           {% if can_remove_members or member_can_leave %}
           <td class="align-right squash">
             <a href="{% url 'sentry-organization-member-settings' organization.slug member.id %}"
diff --git a/src/sentry/web/frontend/organization_members.py b/src/sentry/web/frontend/organization_members.py
index 3e89f22d5f..e4273d2a85 100644
--- a/src/sentry/web/frontend/organization_members.py
+++ b/src/sentry/web/frontend/organization_members.py
@@ -4,7 +4,7 @@ from django.db.models import Q
 
 from sentry import roles
 from sentry.models import (
-    AuthProvider, OrganizationAccessRequest, OrganizationMember
+    AuthProvider, Authenticator, OrganizationAccessRequest, OrganizationMember
 )
 from sentry.web.frontend.base import OrganizationView
 
@@ -23,14 +23,18 @@ class OrganizationMembersView(OrganizationView):
         except AuthProvider.DoesNotExist:
             auth_provider = None
 
+        oms = list(queryset)
+
+        authenticators = Authenticator.objects.bulk_users_have_2fa([om.user_id for om in oms])
+
         member_list = []
-        for om in queryset:
+        for om in oms:
             needs_sso = bool(auth_provider and not getattr(om.flags, 'sso:linked'))
-            member_list.append((om, needs_sso))
+            member_list.append((om, needs_sso, authenticators[om.user_id]))
 
         # if the member is not the only owner we allow them to leave the org
         member_can_leave = any(
-            1 for om, _ in member_list
+            1 for om, _, _ in member_list
             if (om.role == roles.get_top_dog().id
                 and om.user != request.user
                 and om.user is not None)
diff --git a/tests/sentry/models/test_authenticator.py b/tests/sentry/models/test_authenticator.py
index f7c1653619..db85dd2667 100644
--- a/tests/sentry/models/test_authenticator.py
+++ b/tests/sentry/models/test_authenticator.py
@@ -19,3 +19,15 @@ class AuthenticatorTest(TestCase):
 
         assert Authenticator.objects.user_has_2fa(user) is True
         assert Authenticator.objects.filter(user=user).count() == 2
+
+    def test_bulk_users_have_2fa(self):
+        user1 = self.create_user('foo1@example.com')
+        user2 = self.create_user('foo2@example.com')
+
+        TotpInterface().enroll(user1)
+
+        assert Authenticator.objects.bulk_users_have_2fa([user1.id, user2.id, 9999]) == {
+            user1.id: True,
+            user2.id: False,
+            9999: False,
+        }
diff --git a/tests/sentry/web/frontend/test_organization_members.py b/tests/sentry/web/frontend/test_organization_members.py
index 7fe2e36595..8e49cd0bb5 100644
--- a/tests/sentry/web/frontend/test_organization_members.py
+++ b/tests/sentry/web/frontend/test_organization_members.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
 
-from sentry.models import OrganizationAccessRequest, OrganizationMember
+from sentry.models import OrganizationAccessRequest, OrganizationMember, TotpInterface
 from sentry.testutils import TestCase, PermissionTestCase
 
 
@@ -27,6 +27,8 @@ class OrganizationMembersTest(TestCase):
         owner = self.user
         member = self.create_user('bar@example.com')
 
+        TotpInterface().enroll(member)
+
         owner_om = OrganizationMember.objects.get(
             organization=organization,
             user=owner,
@@ -53,8 +55,8 @@ class OrganizationMembersTest(TestCase):
         member_list = sorted(resp.context['member_list'], key=lambda x: x[0].id)
 
         assert member_list == [
-            (owner_om, False),
-            (member_om, False),
+            (owner_om, False, False),
+            (member_om, False, True),
         ]
 
     def test_shows_access_requests_for_team_admin(self):
