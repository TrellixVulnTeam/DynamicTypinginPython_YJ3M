commit af2c7163d07c1dd995f258732df2d78eced12cc6
Author: Dan Fuller <dfuller@sentry.io>
Date:   Thu Jun 20 18:00:34 2019 -0700

    fix(api): When checking for an exact match for a group, use projects that the user is a member of in addition to passed projects (SEN-785)
    
    This allows users who have the wrong project selected to successfully make a direct hit.

diff --git a/src/sentry/api/endpoints/organization_group_index.py b/src/sentry/api/endpoints/organization_group_index.py
index b7bbeb3ef3..b49252025d 100644
--- a/src/sentry/api/endpoints/organization_group_index.py
+++ b/src/sentry/api/endpoints/organization_group_index.py
@@ -118,16 +118,18 @@ class OrganizationGroupIndexEndpoint(OrganizationEventsEndpointBase):
             # check to see if we've got an event ID
             event_id = normalize_event_id(query)
             if event_id:
-                groups = list(
-                    Group.objects.filter_by_event_id(project_ids, event_id)
+                # For a direct hit lookup we want to use any passed project ids
+                # (we've already checked permissions on these) plus any other
+                # projects that the user is a member of. This gives us a better
+                # chance of returning the correct result, even if the wrong
+                # project is selected.
+                direct_hit_projects = set(project_ids) | set(
+                    [project.id for project in request.access.projects]
                 )
+                groups = list(Group.objects.filter_by_event_id(direct_hit_projects, event_id))
                 if len(groups) == 1:
                     response = Response(
-                        serialize(
-                            groups, request.user, serializer(
-                                matching_event_id=event_id
-                            )
-                        )
+                        serialize(groups, request.user, serializer(matching_event_id=event_id))
                     )
                     response['X-Sentry-Direct-Hit'] = '1'
                     return response
diff --git a/tests/snuba/api/endpoints/test_organization_group_index.py b/tests/snuba/api/endpoints/test_organization_group_index.py
index 53367b7e0c..3e78681e82 100644
--- a/tests/snuba/api/endpoints/test_organization_group_index.py
+++ b/tests/snuba/api/endpoints/test_organization_group_index.py
@@ -227,6 +227,33 @@ class GroupListTest(APITestCase, SnubaTestCase):
         assert response.data[0]['id'] == six.text_type(group.id)
         assert response.data[0]['matchingEventId'] == event_id
 
+    def test_lookup_by_event_id_incorrect_project_id(self):
+        self.store_event(
+            data={'event_id': 'a' * 32, 'timestamp': self.min_ago.isoformat()[:19]},
+            project_id=self.project.id
+        )
+        event_id = 'b' * 32
+        event = self.store_event(
+            data={'event_id': event_id, 'timestamp': self.min_ago.isoformat()[:19]},
+            project_id=self.project.id
+        )
+
+        other_project = self.create_project(teams=[self.team])
+        user = self.create_user()
+        self.create_member(
+            organization=self.organization,
+            teams=[self.team],
+            user=user,
+        )
+        self.login_as(user=user)
+
+        with self.feature('organizations:global-views'):
+            response = self.get_valid_response(query=event_id, project=[other_project.id])
+        assert response['X-Sentry-Direct-Hit'] == '1'
+        assert len(response.data) == 1
+        assert response.data[0]['id'] == six.text_type(event.group.id)
+        assert response.data[0]['matchingEventId'] == event_id
+
     def test_lookup_by_event_id_with_whitespace(self):
         project = self.project
         project.update_option('sentry:resolve_age', 1)
