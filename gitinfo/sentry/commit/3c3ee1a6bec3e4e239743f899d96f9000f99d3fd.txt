commit 3c3ee1a6bec3e4e239743f899d96f9000f99d3fd
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Aug 7 11:01:21 2015 -0700

    Use webpack -p for distributions

diff --git a/gulpfile.js b/gulpfile.js
index 25e795add1..7cdb67fba6 100644
--- a/gulpfile.js
+++ b/gulpfile.js
@@ -6,15 +6,10 @@ var gulp = require("gulp"),
     gp_less = require("gulp-less"),
     gp_util = require("gulp-util"),
     gp_watch = require("gulp-watch"),
-    path = require("path"),
-    webpack = require("webpack");
+    path = require("path");
 
 var staticPrefix = "src/sentry/static/sentry",
-    distPath = staticPrefix + "/dist",
-    webpackStatsOptions = {
-      chunkModules: false,
-      colors: true
-    };
+    distPath = staticPrefix + "/dist";
 
 // Workaround for https://github.com/gulpjs/gulp/issues/71
 var origSrc = gulp.src;
@@ -74,15 +69,7 @@ gulp.task("dist:css:wall", buildCssCompileTask("wall.css", [file("less/wall.less
 
 gulp.task("dist:css", ["dist:css:sentry", "dist:css:wall"]);
 
-gulp.task("dist:webpack", function(callback){
-  webpack(require('./webpack.config.js'), function(err, stats) {
-      if(err) throw new gutil.PluginError("webpack", err);
-      gp_util.log("[webpack]", stats.toString(webpackStatsOptions));
-      callback();
-  });
-});
-
-gulp.task("dist", ["dist:css", "dist:webpack"]);
+gulp.task("dist", ["dist:css"]);
 
 gulp.task("watch:css:sentry", ["dist:css:sentry"], function(){
   return gp_watch(file("less/**/*.less"), function(){
@@ -98,19 +85,8 @@ gulp.task("watch:css:wall", ["dist:css:wall"], function(){
 
 gulp.task("watch:css", ["watch:css:sentry", "watch:css:wall"]);
 
-// TODO(dcramer): this is causing issues, use webpack --watch for now
-gulp.task("watch:webpack", function(callback){
-  var config = require('./webpack.config.js');
-  config.debug = true;
-  webpack(config).watch(200, function(err, stats) {
-    if(err) throw new gutil.PluginError("webpack", err);
-    gp_util.log("[webpack]", stats.toString(webpackStatsOptions));
-  });
-  callback();
-});
-
 gulp.task("watch", function(){
-  return gulp.start(["watch:css", "watch:webpack"]);
+  return gulp.start(["watch:css"]);
 });
 
 gulp.task("default", ["dist"]);
diff --git a/setup.py b/setup.py
index fa52ddcbf5..bb245de77a 100755
--- a/setup.py
+++ b/setup.py
@@ -169,7 +169,11 @@ class BuildStatic(Command):
         check_output(['npm', 'install', '--quiet'], cwd=work_path)
 
         log.info("running [gulp dist]")
-        check_output([os.path.join('node_modules', '.bin', 'gulp'), 'dist'],
+        check_output([os.path.join('node_modules', '.bin', 'gulp'), 'dist:css'],
+                     cwd=work_path)
+
+        log.info("running [webpack]")
+        check_output([os.path.join('node_modules', '.bin', 'webpack'), '-p'],
                      cwd=work_path)
 
 
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 172744d65d..2130755657 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -776,5 +776,7 @@ SENTRY_API_RESPONSE_DELAY = 0
 
 # Watchers for various application purposes (such as compiling static media)
 SENTRY_WATCHERS = (
-    [os.path.join(NODE_MODULES_ROOT, '.bin', 'gulp'), 'watch'],
+    [os.path.join(NODE_MODULES_ROOT, '.bin', 'gulp'), 'watch:css'],
+    [os.path.join(NODE_MODULES_ROOT, '.bin', 'webpack'), '-d', '--watch',
+     "--config={}".format(os.path.join(PROJECT_ROOT, os.pardir, os.pardir, "webpack.config.js"))],
 )
