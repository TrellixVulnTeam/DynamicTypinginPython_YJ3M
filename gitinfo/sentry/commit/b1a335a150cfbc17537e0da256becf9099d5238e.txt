commit b1a335a150cfbc17537e0da256becf9099d5238e
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Wed Sep 5 08:11:26 2018 -0700

    ref(vsts): Remove url parsing for the base url in the vsts integration. (#9579)
    
    * removing the parsing url in the vsts webhook.
    
    * added back unicode to one of the client urls
    
    * fixed vsts issues test
    
    * changed comments.
    
    * got vsts test_client working
    
    * Got test_integration working
    
    * Fixed test_provider
    
    * got test_webhook working
    
    * fixed test_repositories
    
    * Fixed vsts extension tests and altered where base_url is gotten.
    
    * removed instance for base_url'
    
    * added made get_base_url return resp['locationUrl']
    
    * moved account lookup url to a constant in the class
    
    * Fixed tests after check_domain change.
    
    * Added model.save() and test for behavior.

diff --git a/src/sentry/integrations/vsts/client.py b/src/sentry/integrations/vsts/client.py
index 3a0e2f89a9..f7dd665016 100644
--- a/src/sentry/integrations/vsts/client.py
+++ b/src/sentry/integrations/vsts/client.py
@@ -17,18 +17,20 @@ INVALID_ACCESS_TOKEN = 'HTTP 400 (invalid_request): The access token is not vali
 
 
 class VstsApiPath(object):
-    commits = u'https://{account_name}/DefaultCollection/_apis/git/repositories/{repo_id}/commits'
-    commits_batch = u'https://{account_name}/DefaultCollection/_apis/git/repositories/{repo_id}/commitsBatch'
-    commits_changes = u'https://{account_name}/DefaultCollection/_apis/git/repositories/{repo_id}/commits/{commit_id}/changes'
-    projects = u'https://{account_name}/DefaultCollection/_apis/projects'
-    repository = u'https://{account_name}/DefaultCollection/{project}_apis/git/repositories/{repo_id}'
-    repositories = u'https://{account_name}/{project}_apis/git/repositories'
-    subscription = 'https://{account_name}/_apis/hooks/subscriptions/{subscription_id}'
-    subscriptions = u'https://{account_name}/_apis/hooks/subscriptions'
-    work_items = u'https://{account_name}/DefaultCollection/_apis/wit/workitems/{id}'
-    work_items_create = u'https://{account_name}/{project}/_apis/wit/workitems/${type}'
+    commits = u'{instance}DefaultCollection/_apis/git/repositories/{repo_id}/commits'
+    commits_batch = u'{instance}DefaultCollection/_apis/git/repositories/{repo_id}/commitsBatch'
+    commits_changes = u'{instance}DefaultCollection/_apis/git/repositories/{repo_id}/commits/{commit_id}/changes'
+    projects = u'{instance}DefaultCollection/_apis/projects'
+    repository = u'{instance}DefaultCollection/{project}_apis/git/repositories/{repo_id}'
+    repositories = u'{instance}{project}_apis/git/repositories'
+    subscription = u'{instance}_apis/hooks/subscriptions/{subscription_id}'
+    subscriptions = u'{instance}_apis/hooks/subscriptions'
+    work_items = u'{instance}DefaultCollection/_apis/wit/workitems/{id}'
+    work_items_create = u'{instance}{project}/_apis/wit/workitems/${type}'
+    # TODO(lb): Fix this url so that the base url is given by vsts rather than built by us
     work_item_search = u'https://{account_name}.almsearch.visualstudio.com/_apis/search/workitemsearchresults'
-    work_item_states = u'https://{account_name}/{project}/_apis/wit/workitemtypes/{type}/states'
+    work_item_states = u'{instance}{project}/_apis/wit/workitemtypes/{type}/states'
+    # TODO(lb): Fix this url so that the base url is given by vsts rather than built by us
     users = u'https://{account_name}.vssps.visualstudio.com/_apis/graph/users'
 
 
@@ -88,7 +90,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
 
         return self.patch(
             VstsApiPath.work_items_create.format(
-                account_name=instance,
+                instance=instance,
                 project=project,
                 type='Bug'
             ),
@@ -129,7 +131,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
 
         return self.patch(
             VstsApiPath.work_items.format(
-                account_name=instance,
+                instance=instance,
                 id=id,
             ),
             data=data,
@@ -138,7 +140,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_work_item(self, instance, id):
         return self.get(
             VstsApiPath.work_items.format(
-                account_name=instance,
+                instance=instance,
                 id=id,
             ),
         )
@@ -146,7 +148,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_work_item_states(self, instance, project):
         return self.get(
             VstsApiPath.work_item_states.format(
-                account_name=instance,
+                instance=instance,
                 project=project,
                 # TODO(lb): might want to make this custom like jira at some point
                 type='Bug',
@@ -157,7 +159,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_work_item_types(self, instance, process_id):
         return self.get(
             VstsApiPath.work_item_types.format(
-                account_name=instance,
+                instance=instance,
                 process_id=process_id,
             ),
             api_preview=True,
@@ -166,7 +168,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_repo(self, instance, name_or_id, project=None):
         return self.get(
             VstsApiPath.repository.format(
-                account_name=instance,
+                instance=instance,
                 project='{}/'.format(project) if project else '',
                 repo_id=name_or_id,
             ),
@@ -175,7 +177,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_repos(self, instance, project=None):
         return self.get(
             VstsApiPath.repositories.format(
-                account_name=instance,
+                instance=instance,
                 project='{}/'.format(project) if project else '',
             ),
         )
@@ -183,7 +185,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_commits(self, instance, repo_id, commit, limit=100):
         return self.get(
             VstsApiPath.commits.format(
-                account_name=instance,
+                instance=instance,
                 repo_id=repo_id,
             ),
             params={
@@ -196,7 +198,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
 
         resp = self.get(
             VstsApiPath.commits_changes.format(
-                account_name=instance,
+                instance=instance,
                 repo_id=repo_id,
                 commit_id=commit,
             )
@@ -207,7 +209,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def get_commit_range(self, instance, repo_id, start_sha, end_sha):
         return self.post(
             VstsApiPath.commits_batch.format(
-                account_name=instance,
+                instance=instance,
                 repo_id=repo_id,
             ),
             data={
@@ -227,7 +229,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
         # making the assumption that a user has 100 or less projects today.
         return self.get(
             VstsApiPath.projects.format(
-                account_name=instance,
+                instance=instance,
             ),
             params={'stateFilter': 'WellFormed'}
         )
@@ -243,7 +245,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def create_subscription(self, instance, external_id, shared_secret):
         return self.post(
             VstsApiPath.subscriptions.format(
-                account_name=instance
+                instance=instance
             ),
             data={
                 'publisherId': 'tfs',
@@ -262,7 +264,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def delete_subscription(self, instance, subscription_id):
         self.delete(
             VstsApiPath.subscription.format(
-                account_name=instance,
+                instance=instance,
                 subscription_id=subscription_id,
             )
         )
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 6f0e3261e8..f7dac430ca 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 from time import time
 import logging
+import re
 
 from django import forms
 from django.utils.translation import ugettext as _
@@ -90,11 +91,20 @@ class VstsIntegration(Integration, RepositoryMixin, VstsIssueSync):
         if self.default_identity is None:
             self.default_identity = self.get_default_identity()
 
+        self.check_domain_name()
         return VstsApiClient(
             self.default_identity,
             VstsIntegrationProvider.oauth_redirect_url,
         )
 
+    def check_domain_name(self):
+        if re.match('^https://.+/$', self.model.metadata['domain_name']):
+            return
+        base_url = VstsIntegrationProvider.get_base_url(
+            self.default_identity.data['access_token'], self.model.external_id)
+        self.model.metadata['domain_name'] = base_url
+        self.model.save()
+
     def get_organization_config(self):
         client = self.get_client()
         instance = self.model.metadata['domain_name']
@@ -242,7 +252,6 @@ class VstsIntegrationProvider(IntegrationProvider):
     key = 'vsts'
     name = 'Visual Studio Team Services'
     metadata = metadata
-    domain = '.visualstudio.com'
     api_version = '4.1'
     oauth_redirect_url = '/extensions/vsts/setup/'
     needs_default_identity = True
@@ -254,6 +263,8 @@ class VstsIntegrationProvider(IntegrationProvider):
         'height': 800,
     }
 
+    VSTS_ACCOUNT_LOOKUP_URL = 'https://app.vssps.visualstudio.com/_apis/resourceareas/79134C72-4A58-4B42-976C-04E7115F32BF?hostId=%s&api-preview=5.0-preview.1'
+
     def post_install(self, integration, organization):
         installation = self.get_installation(integration, organization.id)
 
@@ -292,15 +303,15 @@ class VstsIntegrationProvider(IntegrationProvider):
         data = state['identity']['data']
         oauth_data = self.get_oauth_data(data)
         account = state['account']
-        instance = state['instance']
         user = get_user_info(data['access_token'])
         scopes = sorted(VSTSIdentityProvider.oauth_scopes)
+        base_url = self.get_base_url(data['access_token'], account['accountId'])
 
         integration = {
-            'name': account['AccountName'],
-            'external_id': account['AccountId'],
+            'name': account['accountName'],
+            'external_id': account['accountId'],
             'metadata': {
-                'domain_name': instance,
+                'domain_name': base_url,
                 'scopes': scopes,
             },
             'user_identity': {
@@ -314,7 +325,7 @@ class VstsIntegrationProvider(IntegrationProvider):
         try:
             integration_model = IntegrationModel.objects.get(
                 provider='vsts',
-                external_id=account['AccountId'],
+                external_id=account['accountId'],
                 status=ObjectStatus.VISIBLE,
             )
             assert 'subscription' in integration_model.metadata
@@ -326,7 +337,7 @@ class VstsIntegrationProvider(IntegrationProvider):
 
         except (IntegrationModel.DoesNotExist, AssertionError):
             subscription_id, subscription_secret = self.create_subscription(
-                instance, account['AccountId'], oauth_data)
+                base_url, account['accountId'], oauth_data)
             integration['metadata']['subscription'] = {
                 'id': subscription_id,
                 'secret': subscription_secret,
@@ -361,6 +372,21 @@ class VstsIntegrationProvider(IntegrationProvider):
 
         return data
 
+    @classmethod
+    def get_base_url(cls, access_token, account_id):
+        session = http.build_session()
+        url = VstsIntegrationProvider.VSTS_ACCOUNT_LOOKUP_URL % account_id
+        response = session.get(
+            url,
+            headers={
+                'Content-Type': 'application/json',
+                'Authorization': 'Bearer %s' % access_token,
+            },
+        )
+        if response.status_code == 200:
+            return response.json()['locationUrl']
+        return None
+
     def setup(self):
         from sentry.plugins import bindings
         bindings.add(
@@ -377,12 +403,16 @@ class AccountConfigView(PipelineView):
             accounts = pipeline.fetch_state(key='accounts')
             account = self.get_account_from_id(account_id, accounts)
             if account is not None:
+                state = pipeline.fetch_state(key='identity')
+                access_token = state['data']['access_token']
                 pipeline.bind_state('account', account)
-                pipeline.bind_state('instance', account['AccountName'] + '.visualstudio.com')
                 return pipeline.next_step()
 
-        access_token = pipeline.fetch_state(key='identity')['data']['access_token']
-        accounts = self.get_accounts(access_token)
+        state = pipeline.fetch_state(key='identity')
+        access_token = state['data']['access_token']
+        user = get_user_info(access_token)
+
+        accounts = self.get_accounts(access_token, user['id'])['value']
         pipeline.bind_state('accounts', accounts)
         account_form = AccountForm(accounts)
         return render_to_response(
@@ -395,13 +425,13 @@ class AccountConfigView(PipelineView):
 
     def get_account_from_id(self, account_id, accounts):
         for account in accounts:
-            if account['AccountId'] == account_id:
+            if account['accountId'] == account_id:
                 return account
         return None
 
-    def get_accounts(self, access_token):
+    def get_accounts(self, access_token, user_id):
         session = http.build_session()
-        url = 'https://app.vssps.visualstudio.com/_apis/accounts'
+        url = 'https://app.vssps.visualstudio.com/_apis/accounts?ownerId=%s&api-version=4.1' % user_id
         response = session.get(
             url,
             headers={
@@ -418,7 +448,7 @@ class AccountForm(forms.Form):
     def __init__(self, accounts, *args, **kwargs):
         super(AccountForm, self).__init__(*args, **kwargs)
         self.fields['account'] = forms.ChoiceField(
-            choices=[(acct['AccountId'], acct['AccountName']) for acct in accounts],
+            choices=[(acct['accountId'], acct['accountName']) for acct in accounts],
             label='Account',
             help_text='VS Team Services account (account.visualstudio.com).',
         )
diff --git a/src/sentry/integrations/vsts/issues.py b/src/sentry/integrations/vsts/issues.py
index cac54ef07a..113e172a90 100644
--- a/src/sentry/integrations/vsts/issues.py
+++ b/src/sentry/integrations/vsts/issues.py
@@ -61,7 +61,7 @@ class VstsIssueSync(IssueSyncMixin):
         return fields
 
     def get_issue_url(self, key, **kwargs):
-        return 'https://%s/_workitems/edit/%s' % (self.instance, six.text_type(key))
+        return '%s_workitems/edit/%s' % (self.instance, six.text_type(key))
 
     def create_issue(self, data, **kwargs):
         """
diff --git a/src/sentry/integrations/vsts_extension/integration.py b/src/sentry/integrations/vsts_extension/integration.py
index ef54eb1e6b..3b4ab96826 100644
--- a/src/sentry/integrations/vsts_extension/integration.py
+++ b/src/sentry/integrations/vsts_extension/integration.py
@@ -26,14 +26,10 @@ class VstsExtensionIntegrationProvider(VstsIntegrationProvider):
 
     def build_integration(self, state):
         state['account'] = {
-            'AccountId': state['vsts']['AccountId'],
-            'AccountName': state['vsts']['AccountName'],
+            'accountId': state['vsts']['accountId'],
+            'accountName': state['vsts']['accountName'],
         }
 
-        state['instance'] = '{}.visualstudio.com'.format(
-            state['vsts']['AccountName']
-        )
-
         return super(
             VstsExtensionIntegrationProvider,
             self
diff --git a/src/sentry/web/frontend/vsts_extension_configuration.py b/src/sentry/web/frontend/vsts_extension_configuration.py
index 4652746a8b..94c9c88ce9 100644
--- a/src/sentry/web/frontend/vsts_extension_configuration.py
+++ b/src/sentry/web/frontend/vsts_extension_configuration.py
@@ -71,8 +71,8 @@ class VstsExtensionConfigurationView(BaseView):
 
         pipeline.initialize()
         pipeline.bind_state('vsts', {
-            'AccountId': id,
-            'AccountName': name,
+            'accountId': id,
+            'accountName': name,
         })
 
         return pipeline
diff --git a/tests/sentry/integrations/vsts/test_client.py b/tests/sentry/integrations/vsts/test_client.py
index a476c80788..5856929e8a 100644
--- a/tests/sentry/integrations/vsts/test_client.py
+++ b/tests/sentry/integrations/vsts/test_client.py
@@ -28,7 +28,7 @@ class VstsApiClientTest(VstsIntegrationTestCase):
         integration \
             .get_installation(integration.organizations.first().id) \
             .get_client() \
-            .get_projects('{}.visualstudio.com'.format(self.vsts_account_name))
+            .get_projects(self.vsts_base_url)
 
         # Second to last request, before the Projects request, was to refresh
         # the Access Token.
@@ -37,8 +37,8 @@ class VstsApiClientTest(VstsIntegrationTestCase):
 
         # Then we request the Projects with the new token
         assert responses.calls[-1].request.url == \
-            'https://{}.visualstudio.com/DefaultCollection/_apis/projects?stateFilter=WellFormed'.format(
-                self.vsts_account_name.lower(),
+            '{}DefaultCollection/_apis/projects?stateFilter=WellFormed'.format(
+                self.vsts_base_url.lower(),
         )
 
         identity = Identity.objects.get(id=identity.id)
diff --git a/tests/sentry/integrations/vsts/test_integration.py b/tests/sentry/integrations/vsts/test_integration.py
index b808399004..81171b0f1d 100644
--- a/tests/sentry/integrations/vsts/test_integration.py
+++ b/tests/sentry/integrations/vsts/test_integration.py
@@ -28,16 +28,14 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
         assert metadata['scopes'] == list(VSTSIdentityProvider.oauth_scopes)
         assert metadata['subscription']['id'] == \
             CREATE_SUBSCRIPTION['publisherInputs']['tfsSubscriptionId']
-        assert metadata['domain_name'] == '{}.visualstudio.com'.format(
-            self.vsts_account_name
-        )
+        assert metadata['domain_name'] == self.vsts_base_url
 
     def test_migrate_repositories(self):
         accessible_repo = Repository.objects.create(
             organization_id=self.organization.id,
             name=self.project_a['name'],
-            url='https://{}.visualstudio.com/DefaultCollection/_git/{}'.format(
-                self.vsts_account_name,
+            url='{}/DefaultCollection/_git/{}'.format(
+                self.vsts_base_url,
                 self.repo_name,
             ),
             provider='visualstudio',
@@ -125,10 +123,10 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
     def test_build_integration(self):
         state = {
             'account': {
-                'AccountName': self.vsts_account_name,
-                'AccountId': self.vsts_account_id,
+                'accountName': self.vsts_account_name,
+                'accountId': self.vsts_account_id,
             },
-            'instance': '{}.visualstudio.com'.format(self.vsts_account_name),
+            'base_url': self.vsts_base_url,
             'identity': {
                 'data': {
                     'access_token': self.access_token,
@@ -144,8 +142,7 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
 
         assert integration_dict['name'] == self.vsts_account_name
         assert integration_dict['external_id'] == self.vsts_account_id
-        assert integration_dict['metadata']['domain_name'] == \
-            '{}.visualstudio.com'.format(self.vsts_account_name)
+        assert integration_dict['metadata']['domain_name'] == self.vsts_base_url
 
         assert integration_dict['user_identity']['type'] == 'vsts'
         assert integration_dict['user_identity']['external_id'] == \
@@ -158,10 +155,10 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
 
         state = {
             'account': {
-                'AccountName': self.vsts_account_name,
-                'AccountId': self.vsts_account_id,
+                'accountName': self.vsts_account_name,
+                'accountId': self.vsts_account_id,
             },
-            'instance': '{}.visualstudio.com'.format(self.vsts_account_name),
+            'base_url': self.vsts_base_url,
             'identity': {
                 'data': {
                     'access_token': self.access_token,
@@ -186,10 +183,10 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
         )
         data = VstsIntegrationProvider().build_integration({
             'account': {
-                'AccountName': self.vsts_account_name,
-                'AccountId': external_id,
+                'accountName': self.vsts_account_name,
+                'accountId': external_id,
             },
-            'instance': '{}.visualstudio.com'.format(self.vsts_account_name),
+            'base_url': self.vsts_base_url,
             'identity': {
                 'data': {
                     'access_token': self.access_token,
@@ -357,3 +354,20 @@ class VstsIntegrationTest(VstsIntegrationTestCase):
             'sync_status_forward': True,
             'other_option': 'hello',
         }
+
+    def test_update_domain_name(self):
+        account_name = 'MyVSTSAccount.visualstudio.com'
+        account_uri = 'https://MyVSTSAccount.visualstudio.com/'
+
+        self.assert_installation()
+
+        model = Integration.objects.get(provider='vsts')
+        model.metadata['domain_name'] = account_name
+        model.save()
+
+        integration = VstsIntegration(model, self.organization.id)
+        integration.get_client()
+
+        domain_name = integration.model.metadata['domain_name']
+        assert domain_name == account_uri
+        assert Integration.objects.get(provider='vsts').metadata['domain_name'] == account_uri
diff --git a/tests/sentry/integrations/vsts/test_issues.py b/tests/sentry/integrations/vsts/test_issues.py
index 8aea12c8fc..5063b5b479 100644
--- a/tests/sentry/integrations/vsts/test_issues.py
+++ b/tests/sentry/integrations/vsts/test_issues.py
@@ -28,7 +28,7 @@ class VstsIssueSycnTest(TestCase):
             external_id='vsts_external_id',
             name='fabrikam-fiber-inc',
             metadata={
-                'domain_name': 'fabrikam-fiber-inc.visualstudio.com',
+                'domain_name': 'https://fabrikam-fiber-inc.visualstudio.com/',
                 'default_project': '0987654321',
             }
         )
diff --git a/tests/sentry/integrations/vsts/test_provider.py b/tests/sentry/integrations/vsts/test_provider.py
index 63fe23224d..f0c7f36860 100644
--- a/tests/sentry/integrations/vsts/test_provider.py
+++ b/tests/sentry/integrations/vsts/test_provider.py
@@ -57,11 +57,13 @@ class TestVSTSOAuthCallbackView(TestCase):
 
 class TestAccountConfigView(TestCase):
     def setUp(self):
+        account_id = '1234567-8910'
+        self.base_url = 'http://sentry2.visualstudio.com/'
         self.accounts = [
             {
-                'AccountId': '1234567-89',
+                'accountId': '1234567-89',
                 'NamespaceId': '00000000-0000-0000-0000-000000000000',
-                'AccountName': 'sentry',
+                'accountName': 'sentry',
                 'OrganizationName': None,
                 'AccountType': 0,
                 'AccountOwner': '00000000-0000-0000-0000-000000000000',
@@ -73,9 +75,9 @@ class TestAccountConfigView(TestCase):
                 'Properties': {},
             },
             {
-                'AccountId': '1234567-8910',
+                'accountId': account_id,
                 'NamespaceId': '00000000-0000-0000-0000-000000000000',
-                'AccountName': 'sentry2',
+                'accountName': 'sentry2',
                 'OrganizationName': None,
                 'AccountType': 0,
                 'AccountOwner': '00000000-0000-0000-0000-000000000000',
@@ -95,6 +97,13 @@ class TestAccountConfigView(TestCase):
             status=200,
 
         )
+        responses.add(
+            responses.GET,
+            'https://app.vssps.visualstudio.com/_apis/resourceareas/79134C72-4A58-4B42-976C-04E7115F32BF?hostId=%s&api-preview=5.0-preview.1' % account_id,
+            json={
+                'locationUrl': self.base_url,
+            }
+        )
 
     @responses.activate
     def test_dispatch(self):
@@ -103,22 +112,26 @@ class TestAccountConfigView(TestCase):
         request.POST = {'account': '1234567-8910'}
 
         pipeline = Mock()
-        pipeline.state = {'accounts': self.accounts}
+        pipeline.state = {
+            'accounts': self.accounts,
+            'identity': {
+                'data': {'access_token': '123456789'}
+            }
+        }
         pipeline.fetch_state = lambda key: pipeline.state[key]
         pipeline.bind_state = lambda name, value: pipeline.state.update({name: value})
 
         view.dispatch(request, pipeline)
 
-        assert pipeline.fetch_state(key='instance') == 'sentry2.visualstudio.com'
         assert pipeline.fetch_state(key='account') == self.accounts[1]
         assert pipeline.next_step.call_count == 1
 
     @responses.activate
     def test_get_accounts(self):
         view = AccountConfigView()
-        accounts = view.get_accounts('access-token')
-        assert accounts[0]['AccountName'] == 'sentry'
-        assert accounts[1]['AccountName'] == 'sentry2'
+        accounts = view.get_accounts('access-token', 'user-id')
+        assert accounts[0]['accountName'] == 'sentry'
+        assert accounts[1]['accountName'] == 'sentry2'
 
     def test_account_form(self):
         account_form = AccountForm(self.accounts)
diff --git a/tests/sentry/integrations/vsts/test_repository.py b/tests/sentry/integrations/vsts/test_repository.py
index d5a13394bc..f8c6c61705 100644
--- a/tests/sentry/integrations/vsts/test_repository.py
+++ b/tests/sentry/integrations/vsts/test_repository.py
@@ -15,6 +15,10 @@ from .testutils import (
 
 
 class VisualStudioRepositoryProviderTest(TestCase):
+    def setUp(self):
+        self.base_url = 'https://visualstudio.com/'
+        self.vsts_external_id = '654321'
+
     @fixture
     def provider(self):
         return VstsRepositoryProvider('integrations:vsts')
@@ -34,8 +38,11 @@ class VisualStudioRepositoryProviderTest(TestCase):
         )
         integration = Integration.objects.create(
             provider='vsts',
-            external_id='vsts_external_id',
+            external_id=self.vsts_external_id,
             name='Hello world',
+            metadata={
+                'domain_name': self.base_url,
+            }
         )
         default_auth = Identity.objects.create(
             idp=IdentityProvider.objects.create(
@@ -57,7 +64,7 @@ class VisualStudioRepositoryProviderTest(TestCase):
             name='example',
             organization_id=self.organization.id,
             config={
-                'instance': 'visualstudio.com',
+                'instance': self.base_url,
                 'project': 'project-name',
                 'name': 'example',
             },
@@ -81,14 +88,17 @@ class VisualStudioRepositoryProviderTest(TestCase):
         organization = self.create_organization()
         integration = Integration.objects.create(
             provider='vsts',
-            external_id='vsts_external_id',
+            external_id=self.vsts_external_id,
             name='Hello world',
+            metadata={
+                'domain_name': self.base_url,
+            }
         )
         data = {
             'name': 'MyFirstProject',
             'external_id': '654321',
             'url': 'https://mbittker.visualstudio.com/_git/MyFirstProject/',
-            'instance': 'https://visualstudio.com',
+            'instance': self.base_url,
             'project': 'MyFirstProject',
             'installation': integration.id,
         }
@@ -96,13 +106,13 @@ class VisualStudioRepositoryProviderTest(TestCase):
 
         assert data == {
             'name': 'MyFirstProject',
-            'external_id': '654321',
+            'external_id': self.vsts_external_id,
             'url': 'https://mbittker.visualstudio.com/_git/MyFirstProject/',
 
             'config': {
                 'project': 'MyFirstProject',
                 'name': 'MyFirstProject',
-                'instance': 'https://visualstudio.com'
+                'instance': self.base_url
 
             },
             'integration_id': integration.id,
diff --git a/tests/sentry/integrations/vsts/test_webhooks.py b/tests/sentry/integrations/vsts/test_webhooks.py
index 05226f8682..1a7c98ba96 100644
--- a/tests/sentry/integrations/vsts/test_webhooks.py
+++ b/tests/sentry/integrations/vsts/test_webhooks.py
@@ -22,14 +22,14 @@ class VstsWebhookWorkItemTest(APITestCase):
         self.project = self.create_project(organization=self.organization)
         self.access_token = '1234567890'
         self.account_id = u'80ded3e8-3cd3-43b1-9f96-52032624aa3a'
-        self.instance = 'instance.visualstudio.com'
+        self.instance = 'https://instance.visualstudio.com/'
         self.shared_secret = '1234567890'
         self.model = Integration.objects.create(
             provider='vsts',
             external_id=self.account_id,
             name='vsts_name',
             metadata={
-                 'domain_name': 'instance.visualstudio.com',
+                 'domain_name': self.instance,
                  'subscription': {
                      'id': 1234,
                      'secret': self.shared_secret,
diff --git a/tests/sentry/integrations/vsts/testutils.py b/tests/sentry/integrations/vsts/testutils.py
index aacbea3950..1b5faa7164 100644
--- a/tests/sentry/integrations/vsts/testutils.py
+++ b/tests/sentry/integrations/vsts/testutils.py
@@ -20,6 +20,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
         self.vsts_account_id = 'c8a585ae-b61f-4ba6-833c-9e8d5d1674d8'
         self.vsts_account_name = 'MyVSTSAccount'
         self.vsts_account_uri = 'https://MyVSTSAccount.vssps.visualstudio.com:443/'
+        self.vsts_base_url = 'https://MyVSTSAccount.visualstudio.com/'
 
         self.vsts_user_id = 'd6245f20-2af8-44f4-9451-8107cb2767db'
         self.vsts_user_name = 'Foo Bar'
@@ -60,15 +61,25 @@ class VstsIntegrationTestCase(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            'https://app.vssps.visualstudio.com/_apis/accounts',
-            json=[{
-                'AccountId': self.vsts_account_id,
-                'AccountUri': self.vsts_account_uri,
-                'AccountName': self.vsts_account_name,
-                'Properties': {},
-            }],
+            'https://app.vssps.visualstudio.com/_apis/accounts?ownerId=%s&api-version=4.1' % self.vsts_user_id,
+            json={
+                'count': 1,
+                'value': [{
+                    'accountId': self.vsts_account_id,
+                    'accountUri': self.vsts_account_uri,
+                    'accountName': self.vsts_account_name,
+                    'properties': {},
+                }]
+            },
         )
 
+        responses.add(
+            responses.GET,
+            'https://app.vssps.visualstudio.com/_apis/resourceareas/79134C72-4A58-4B42-976C-04E7115F32BF?hostId=%s&api-preview=5.0-preview.1' % self.vsts_account_id,
+            json={
+                'locationUrl': self.vsts_base_url,
+            }
+        )
         responses.add(
             responses.GET,
             'https://app.vssps.visualstudio.com/_apis/profile/profiles/me?api-version=1.0',
diff --git a/tests/sentry/integrations/vsts_extension/__init__.py b/tests/sentry/integrations/vsts_extension/__init__.py
new file mode 100644
index 0000000000..c3961685ab
--- /dev/null
+++ b/tests/sentry/integrations/vsts_extension/__init__.py
@@ -0,0 +1 @@
+from __future__ import absolute_import
diff --git a/tests/sentry/integrations/vsts_extension/test_provider.py b/tests/sentry/integrations/vsts_extension/test_provider.py
index 76baed0694..795f8b7788 100644
--- a/tests/sentry/integrations/vsts_extension/test_provider.py
+++ b/tests/sentry/integrations/vsts_extension/test_provider.py
@@ -33,10 +33,10 @@ class VstsExtensionIntegrationProviderTest(VstsIntegrationTestCase):
 
         integration = self.provider.build_integration({
             'vsts': {
-                'AccountId': '123',
-                'AccountName': 'test',
+                'accountId': '123',
+                'accountName': 'test',
             },
-            'instance': 'test.visualstudio.com',
+            'instance': 'https://test.visualstudio.com/',
             'identity': {
                 'data': {
                     'access_token': '123',
