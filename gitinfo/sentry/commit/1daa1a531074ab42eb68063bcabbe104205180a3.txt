commit 1daa1a531074ab42eb68063bcabbe104205180a3
Author: Mark Story <mark@mark-story.com>
Date:   Tue Nov 6 09:34:58 2018 -0500

    fix(integrations) Add pull request links for gitlab (#10417)
    
    Add pull request links for gitlab. There are existing code paths to show
    icons for bitbucket, but it doesn't work as there is no
    code to generate a URL. VSTS is entirely absent from this component as
    well. I'll address those gaps separately.
    
    Fixes APP-726

diff --git a/src/sentry/static/sentry/app/views/releases/pullRequestLink.jsx b/src/sentry/static/sentry/app/views/releases/pullRequestLink.jsx
index 5558707121..20cee68818 100644
--- a/src/sentry/static/sentry/app/views/releases/pullRequestLink.jsx
+++ b/src/sentry/static/sentry/app/views/releases/pullRequestLink.jsx
@@ -10,17 +10,46 @@ class PullRequestLink extends React.Component {
     inline: PropTypes.bool,
   };
 
-  getUrl = () => {
-    if (this.props.repository.provider.id === 'github') {
+  get providerId() {
+    if (!this.props.repository.provider) {
+      return null;
+    }
+
+    let id = this.props.repository.provider.id;
+    if (id.indexOf(':') > -1) {
+      return id.split(':').pop();
+    }
+    return id;
+  }
+
+  get url() {
+    let providerId = this.providerId;
+    if (providerId === 'github') {
       return this.props.repository.url + '/pull/' + this.props.pullRequest.id;
     }
+    if (providerId === 'gitlab') {
+      return this.props.repository.url + '/merge_requests/' + this.props.pullRequest.id;
+    }
     return undefined;
-  };
+  }
 
   render() {
-    let url = this.getUrl();
-    let displayId = `${this.props.repository.name} #${this.props.pullRequest.id}: ${this
-      .props.pullRequest.title}`;
+    let url = this.url;
+    let providerId = this.providerId;
+
+    let {pullRequest, repository} = this.props;
+    let displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;
+
+    let icon = '';
+    if (['github', 'gitlab', 'bitbucket'].indexOf(providerId) > -1) {
+      icon = (
+        <InlineSvg
+          src={`icon-${providerId}`}
+          style={{verticalAlign: 'text-top'}}
+          size="14px"
+        />
+      );
+    }
 
     return url ? (
       <a
@@ -28,18 +57,7 @@ class PullRequestLink extends React.Component {
         href={url}
         target="_blank"
       >
-        {this.props.repository.provider.id == 'github' && (
-          <InlineSvg src="icon-github" style={{verticalAlign: 'text-top'}} size="14px" />
-        )}
-        {this.props.repository.provider.id == 'bitbucket' && (
-          <InlineSvg
-            src="icon-bitbucket"
-            style={{verticalAlign: 'text-top'}}
-            size="14px"
-          />
-        )}
-        &nbsp;
-        {this.props.inline ? '' : ' '}
+        {icon}&nbsp; {this.props.inline ? '' : ' '}
         {displayId}
       </a>
     ) : (
diff --git a/tests/js/fixtures/pullRequest.js b/tests/js/fixtures/pullRequest.js
new file mode 100644
index 0000000000..6c29e4edff
--- /dev/null
+++ b/tests/js/fixtures/pullRequest.js
@@ -0,0 +1,17 @@
+import {Repository} from './repository';
+
+export function PullRequest(params = {}) {
+  return {
+    id: '3',
+    author: {
+      username: 'jill@example.org',
+      lastLogin: '2018-11-01T20:09:19.483Z',
+      isSuperuser: false,
+    },
+    dateCreated: '2018-11-05T15:53:24Z',
+    message: 'Closes ISSUE-1',
+    repository: Repository(),
+    title: 'Fix first issue',
+    ...params,
+  };
+}
diff --git a/tests/js/spec/views/releases/pullRequestLink.spec.jsx b/tests/js/spec/views/releases/pullRequestLink.spec.jsx
new file mode 100644
index 0000000000..6e7ca58442
--- /dev/null
+++ b/tests/js/spec/views/releases/pullRequestLink.spec.jsx
@@ -0,0 +1,97 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import PullRequestLink from 'app/views/releases/pullRequestLink';
+
+describe('PullRequestLink', function() {
+  it('renders no url on missing provider', function() {
+    let repository = TestStubs.Repository({provider: null});
+    let pullRequest = TestStubs.PullRequest({repository});
+    let wrapper = mount(
+      <PullRequestLink repository={repository} pullRequest={pullRequest} />
+    );
+
+    expect(wrapper.find('a')).toHaveLength(0);
+    expect(wrapper.find('span').text()).toEqual('repo-name #3: Fix first issue');
+  });
+
+  it('renders github links for integrations:github repositories', function() {
+    let repository = TestStubs.Repository({
+      provider: {
+        id: 'integrations:github',
+      },
+    });
+    let pullRequest = TestStubs.PullRequest({repository});
+    let wrapper = mount(
+      <PullRequestLink repository={repository} pullRequest={pullRequest} />
+    );
+
+    let icon = wrapper.find('InlineSvg');
+    expect(icon).toHaveLength(1);
+    expect(icon.props().src).toEqual('icon-github');
+
+    let link = wrapper.find('a');
+    expect(link).toHaveLength(1);
+    expect(link.text().trim()).toEqual('repo-name #3: Fix first issue');
+  });
+
+  it('renders github links for github repositories', function() {
+    let repository = TestStubs.Repository({
+      provider: {
+        id: 'github',
+      },
+    });
+    let pullRequest = TestStubs.PullRequest({repository});
+    let wrapper = mount(
+      <PullRequestLink repository={repository} pullRequest={pullRequest} />
+    );
+
+    let icon = wrapper.find('InlineSvg');
+    expect(icon).toHaveLength(1);
+    expect(icon.props().src).toEqual('icon-github');
+
+    let link = wrapper.find('a');
+    expect(link).toHaveLength(1);
+    expect(link.text().trim()).toEqual('repo-name #3: Fix first issue');
+  });
+
+  it('renders gitlab links for integrations:gitlab repositories', function() {
+    let repository = TestStubs.Repository({
+      provider: {
+        id: 'integrations:gitlab',
+      },
+    });
+    let pullRequest = TestStubs.PullRequest({repository});
+    let wrapper = mount(
+      <PullRequestLink repository={repository} pullRequest={pullRequest} />
+    );
+
+    let icon = wrapper.find('InlineSvg');
+    expect(icon).toHaveLength(1);
+    expect(icon.props().src).toEqual('icon-gitlab');
+
+    let link = wrapper.find('a');
+    expect(link).toHaveLength(1);
+    expect(link.text().trim()).toEqual('repo-name #3: Fix first issue');
+  });
+
+  it('renders github links for gitlab repositories', function() {
+    let repository = TestStubs.Repository({
+      provider: {
+        id: 'gitlab',
+      },
+    });
+    let pullRequest = TestStubs.PullRequest({repository});
+    let wrapper = mount(
+      <PullRequestLink repository={repository} pullRequest={pullRequest} />
+    );
+
+    let icon = wrapper.find('InlineSvg');
+    expect(icon).toHaveLength(1);
+    expect(icon.props().src).toEqual('icon-gitlab');
+
+    let link = wrapper.find('a');
+    expect(link).toHaveLength(1);
+    expect(link.text().trim()).toEqual('repo-name #3: Fix first issue');
+  });
+});
