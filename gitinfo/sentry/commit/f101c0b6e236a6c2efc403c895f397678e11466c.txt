commit f101c0b6e236a6c2efc403c895f397678e11466c
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Feb 5 10:11:34 2019 -0800

    feat(activity): Fix loading screen for organization activity (#11892)
    
    Extract a container component for organization activity so that the
    loading screen displays as full page (rather than footer floating in
    center of page).

diff --git a/src/sentry/static/sentry/app/components/activity/feed.jsx b/src/sentry/static/sentry/app/components/activity/feed.jsx
index 74117eb158..e3a7353257 100644
--- a/src/sentry/static/sentry/app/components/activity/feed.jsx
+++ b/src/sentry/static/sentry/app/components/activity/feed.jsx
@@ -20,7 +20,6 @@ const ActivityFeed = createReactClass({
     organization: SentryTypes.Organization,
     endpoint: PropTypes.string,
     query: PropTypes.object,
-    renderEmpty: PropTypes.func,
     pagination: PropTypes.bool,
   },
 
@@ -117,7 +116,7 @@ const ActivityFeed = createReactClass({
           </ul>
         </div>
       );
-    } else body = (this.props.renderEmpty || this.renderEmpty)();
+    } else body = this.renderEmpty();
 
     return body;
   },
diff --git a/src/sentry/static/sentry/app/views/organizationActivity.jsx b/src/sentry/static/sentry/app/views/organizationActivity.jsx
index 6de1579787..e24d0a6eed 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 
 import AsyncView from 'app/views/asyncView';
 import ActivityFeed from 'app/components/activity/feed';
@@ -8,11 +9,45 @@ import PageHeading from 'app/components/pageHeading';
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
 import {PageContent} from 'app/styles/organization';
+import withOrganization from 'app/utils/withOrganization';
 
-export default class OrganizationActivity extends AsyncView {
-  static contextTypes = {
+class OrganizationActivityContainer extends React.Component {
+  static propTypes = {
     organization: SentryTypes.Organization,
   };
+
+  render() {
+    const {organization, params, location} = this.props;
+    const hasSentry10 = new Set(organization.features).has('sentry10');
+
+    return hasSentry10 ? (
+      <PageContent>
+        <div className="organization-home">
+          <OrganizationActivity
+            organization={organization}
+            params={params}
+            location={location}
+          />
+        </div>
+      </PageContent>
+    ) : (
+      <OrganizationHomeContainer>
+        <OrganizationActivity
+          organization={organization}
+          params={params}
+          location={location}
+        />
+      </OrganizationHomeContainer>
+    );
+  }
+}
+
+class OrganizationActivity extends AsyncView {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+    params: PropTypes.object,
+    location: PropTypes.object,
+  };
   getEndpoint() {
     return `/organizations/${this.props.params.orgId}/activity/`;
   }
@@ -21,32 +56,22 @@ export default class OrganizationActivity extends AsyncView {
     return `Activity - ${this.props.params.orgId}`;
   }
 
-  renderActivityFeed() {
+  renderBody() {
     return (
       <React.Fragment>
         <PageHeading withMargins>{t('Activity')}</PageHeading>
         <ActivityFeed
-          organization={this.context.organization}
+          organization={this.props.organization}
           endpoint={this.getEndpoint()}
           query={{
             per_page: 100,
           }}
           pagination={true}
-          {...this.props}
+          location={this.props.location}
         />
       </React.Fragment>
     );
   }
-
-  renderBody() {
-    const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
-
-    return hasSentry10 ? (
-      <PageContent>
-        <div className="organization-home">{this.renderActivityFeed()}</div>
-      </PageContent>
-    ) : (
-      <OrganizationHomeContainer>{this.renderActivityFeed()}</OrganizationHomeContainer>
-    );
-  }
 }
+
+export default withOrganization(OrganizationActivityContainer);
