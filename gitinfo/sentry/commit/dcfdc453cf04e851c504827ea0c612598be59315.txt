commit dcfdc453cf04e851c504827ea0c612598be59315
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Sep 27 09:43:38 2017 -0700

    ref(react): Fix/refactor some Form components (#6169)
    
    * fix(react): Fix FormField className
    
    * fix(react): Fix form cancel button from submitting
    
    * ref(react): Change form fields to accept inline style props
    
    Fix HTML for <MultipleCheckboxField> to be more similar to existing form

diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index b6dab49405..e387255a13 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -116,6 +116,7 @@ export default class Form extends React.Component {
           </button>
           {this.props.onCancel &&
             <button
+              type="button"
               className="btn btn-default"
               disabled={isSaving}
               onClick={this.props.onCancel}
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index bf5a12e730..16bfe4b7fe 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -1,3 +1,4 @@
+import classNames from 'classnames';
 import PropTypes from 'prop-types';
 import React from 'react';
 import idx from 'idx';
@@ -7,6 +8,8 @@ import {defined} from '../../utils';
 export default class FormField extends React.Component {
   static propTypes = {
     name: PropTypes.string.isRequired,
+    /** Inline style */
+    style: PropTypes.object,
 
     label: PropTypes.string,
     defaultValue: PropTypes.any,
@@ -99,28 +102,27 @@ export default class FormField extends React.Component {
   }
 
   render() {
-    let className = this.getClassName();
+    let {className, required, label, disabled, disabledReason, help, style} = this.props;
     let error = this.getError();
-    if (error) {
-      className += ' has-error';
-    }
-    if (this.props.required) {
-      className += ' required';
-    }
+    let cx = classNames(className, this.getClassName(), {
+      'has-error': !!error,
+      required
+    });
+
     return (
-      <div className={className}>
+      <div style={style} className={cx}>
         <div className="controls">
-          {this.props.label &&
+          {label &&
             <label htmlFor={this.getId()} className="control-label">
-              {this.props.label}
+              {label}
             </label>}
           {this.getField()}
-          {this.props.disabled &&
-            this.props.disabledReason &&
-            <span className="disabled-indicator tip" title={this.props.disabledReason}>
+          {disabled &&
+            disabledReason &&
+            <span className="disabled-indicator tip" title={disabledReason}>
               <span className="icon-question" />
             </span>}
-          {defined(this.props.help) && <p className="help-block">{this.props.help}</p>}
+          {defined(help) && <p className="help-block">{help}</p>}
           {error && <p className="error">{error}</p>}
         </div>
       </div>
diff --git a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
index 0c91983c59..523c5b37c5 100644
--- a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
@@ -1,7 +1,9 @@
-import jQuery from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
 import ReactDOM from 'react-dom';
+import classNames from 'classnames';
+import jQuery from 'jquery';
+
 import FormField from './formField';
 
 export default class MultipleCheckboxField extends FormField {
@@ -43,35 +45,55 @@ export default class MultipleCheckboxField extends FormField {
   };
 
   render() {
+    let {
+      required,
+      className,
+      disabled,
+      disabledReason,
+      label,
+      help,
+      choices,
+      style
+    } = this.props;
     let error = this.getError();
-    let className = 'control-group';
-    if (error) {
-      className += ' has-error';
-    }
+    let cx = classNames(className, 'control-group', {
+      'has-error': error
+    });
+    // Hacky, but this isn't really a form label vs the checkbox labels, but
+    // we want to treat it as one (i.e. for "required" indicator)
+    let labelCx = classNames({
+      required
+    });
+    let shouldShowDisabledReason = disabled && disabledReason;
+
     return (
-      <div className={className}>
-        <label className="control-label">
-          {this.props.label}
-          {this.props.disabled &&
-            this.props.disabledReason &&
-            <span className="disabled-indicator tip" title={this.props.disabledReason}>
-              <span className="icon-question" />
-            </span>}
-        </label>
-        {this.props.help && <p className="help-block">{this.props.help}</p>}
-        {error && <p className="error">{error}</p>}
-        <div className="controls control-list">
-          {this.props.choices.map(([value, label]) => {
+      <div style={style} className={cx}>
+        <div className={labelCx}>
+          <div className="controls">
+            <label className="control-label">
+              {label}
+              {shouldShowDisabledReason &&
+                <span className="disabled-indicator tip" title={disabledReason}>
+                  <span className="icon-question" />
+                </span>}
+            </label>
+            {help && <p className="help-block">{help}</p>}
+            {error && <p className="error">{error}</p>}
+          </div>
+        </div>
+
+        <div className="control-list">
+          {choices.map(([value, choiceLabel]) => {
             return (
               <label className="checkbox" key={value}>
                 <input
                   type="checkbox"
                   value={value}
                   onChange={this.onChange.bind(this, value)}
-                  disabled={this.props.disabled}
+                  disabled={disabled}
                   checked={this.state.value.indexOf(value) !== -1}
                 />
-                {label}
+                {choiceLabel}
               </label>
             );
           })}
diff --git a/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap
index 484a877dbe..ebf6d64e8d 100644
--- a/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/multipleCheckboxField.spec.jsx.snap
@@ -4,11 +4,19 @@ exports[`MultipleCheckboxField render() renders with form context 1`] = `
 <div
   className="control-group"
 >
-  <label
-    className="control-label"
-  />
   <div
-    className="controls control-list"
+    className=""
+  >
+    <div
+      className="controls"
+    >
+      <label
+        className="control-label"
+      />
+    </div>
+  </div>
+  <div
+    className="control-list"
   >
     <label
       className="checkbox"
@@ -42,11 +50,19 @@ exports[`MultipleCheckboxField render() renders without form context 1`] = `
 <div
   className="control-group"
 >
-  <label
-    className="control-label"
-  />
   <div
-    className="controls control-list"
+    className=""
+  >
+    <div
+      className="controls"
+    >
+      <label
+        className="control-label"
+      />
+    </div>
+  </div>
+  <div
+    className="control-list"
   >
     <label
       className="checkbox"
