commit e2e221fa9cde5b00035ef8bc9386bde71bd721eb
Author: Max Bittker <maxbittker@gmail.com>
Date:   Mon Aug 28 09:49:06 2017 -0700

    rename our custom proptypes  (#5981)
    
    
    * rename custom proptypes to SentryTypes

diff --git a/src/sentry/static/sentry/app/components/events/contextSummary.jsx b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
index ca886c7591..36ef53c98c 100644
--- a/src/sentry/static/sentry/app/components/events/contextSummary.jsx
+++ b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import Avatar from '../../components/avatar';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import {t} from '../../locale';
 import {objectIsEmpty, deviceNameMapper} from '../../utils';
 
@@ -119,8 +119,8 @@ const DeviceSummary = React.createClass({
 
 const EventContextSummary = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/events/device.jsx b/src/sentry/static/sentry/app/components/events/device.jsx
index aed5118a6b..99a4a0277d 100644
--- a/src/sentry/static/sentry/app/components/events/device.jsx
+++ b/src/sentry/static/sentry/app/components/events/device.jsx
@@ -1,15 +1,15 @@
 import React from 'react';
 
 import GroupEventDataSection from './eventDataSection';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import {t} from '../../locale';
 import ContextData from '../contextData';
 
 // TODO(hazat): Is this interface used somewhere? If not delete it?
 const DeviceInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   getInitialState() {
diff --git a/src/sentry/static/sentry/app/components/events/errors.jsx b/src/sentry/static/sentry/app/components/events/errors.jsx
index c1df5da820..b2f7cf05fc 100644
--- a/src/sentry/static/sentry/app/components/events/errors.jsx
+++ b/src/sentry/static/sentry/app/components/events/errors.jsx
@@ -2,13 +2,13 @@ import React from 'react';
 
 import EventDataSection from './eventDataSection';
 import EventErrorItem from './errorItem';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import {t, tn} from '../../locale';
 
 const EventErrors = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   getInitialState() {
diff --git a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx b/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
index 8add869e82..eb3f1e4326 100644
--- a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import {t} from '../../locale';
 
 const GroupEventDataSection = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     title: React.PropTypes.any,
     type: React.PropTypes.string.isRequired,
     wrapTitle: React.PropTypes.bool,
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index ea2ff4722e..ef6bd25811 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -11,7 +11,7 @@ import EventTags from './eventTags';
 import EventSdk from './sdk';
 import EventDevice from './device';
 import EventUserReport from './userReport';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import utils from '../../utils';
 import {t} from '../../locale';
 
@@ -39,8 +39,8 @@ export const INTERFACES = {
 
 const EventEntries = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     orgId: React.PropTypes.string.isRequired,
     project: React.PropTypes.object.isRequired,
     // TODO(dcramer): ideally isShare would be replaced with simple permission
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.jsx b/src/sentry/static/sentry/app/components/events/eventTags.jsx
index 0b5e25e7c2..b568c91066 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {Link} from 'react-router';
 import _ from 'lodash';
 
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 
 import EventDataSection from './eventDataSection';
 import {isUrl, deviceNameMapper} from '../../utils';
@@ -12,8 +12,8 @@ import Pill from '../pill';
 
 const EventTags = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     orgId: React.PropTypes.string.isRequired,
     projectId: React.PropTypes.string.isRequired
   },
diff --git a/src/sentry/static/sentry/app/components/events/extraData.jsx b/src/sentry/static/sentry/app/components/events/extraData.jsx
index 6a3c4ef07d..6baf203630 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.jsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import {objectToArray} from '../../utils';
 import EventDataSection from './eventDataSection';
 import KeyValueList from './interfaces/keyValueList';
@@ -8,8 +8,8 @@ import {t} from '../../locale';
 
 const EventExtraData = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   getInitialState() {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index a09939ec50..0f680ab23e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import GroupEventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import Breadcrumb from './breadcrumbs/breadcrumb';
 import {t} from '../../../locale';
 
@@ -33,16 +33,16 @@ Collapsed.propTypes = {
 
 const BreadcrumbsInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired,
     isShare: React.PropTypes.bool
   },
 
   contextTypes: {
-    organization: PropTypes.Organization,
-    project: PropTypes.Project
+    organization: SentryTypes.Organization,
+    project: SentryTypes.Project
   },
 
   statics: {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
index f9457fe8e9..23c77c5262 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashContent.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import rawStacktraceContent from './rawStacktraceContent';
 import StacktraceContent from './stacktraceContent';
 import ExceptionContent from './exceptionContent';
@@ -7,8 +7,8 @@ import RawExceptionContent from './rawExceptionContent';
 
 const CrashContent = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     stackView: React.PropTypes.string.isRequired,
     stackType: React.PropTypes.string,
     newestFirst: React.PropTypes.bool.isRequired,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
index a4f3e9db11..d341f38ef9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import TooltipMixin from '../../../mixins/tooltip';
 import {t} from '../../../locale';
 
@@ -7,7 +7,7 @@ const CrashHeader = React.createClass({
   propTypes: {
     title: React.PropTypes.string,
     beforeTitle: React.PropTypes.any,
-    group: PropTypes.Group.isRequired,
+    group: SentryTypes.Group.isRequired,
     platform: React.PropTypes.string,
     thread: React.PropTypes.object,
     exception: React.PropTypes.object,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
index c20210297e..699aa0f9d3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 
 import GroupEventDataSection from '../eventDataSection';
 import CSPContent from './cspContent';
@@ -21,8 +21,8 @@ function getView(view, data) {
 
 const CSPInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
index 4e26282002..90b195ba4b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/debugmeta.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import EventDataSection from '../eventDataSection';
 import ClippedBox from '../../clippedBox';
 import KeyValueList from './keyValueList';
@@ -7,8 +7,8 @@ import {t} from '../../../locale';
 
 const DebugMetaInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     data: React.PropTypes.object.isRequired
   },
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
index 399bfd0253..f6597fed2b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
@@ -1,14 +1,14 @@
 import React from 'react';
 import GroupEventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import {isStacktraceNewestFirst} from './stacktrace';
 import CrashHeader from './crashHeader';
 import CrashContent from './crashContent';
 
 const ExceptionInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
index 0e782dafa4..260b1b4cfe 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
@@ -1,14 +1,14 @@
 import React from 'react';
 
 import EventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import utils from '../../../utils';
 import {t} from '../../../locale';
 
 const MessageInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
index 0002eef241..1f771d4925 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import GroupEventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import RichHttpContent from './richHttpContent';
 import {getCurlCommand} from './utils';
 import {isUrl} from '../../../utils';
@@ -10,16 +10,16 @@ import Truncate from '../../../components/truncate';
 
 const RequestInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired,
     isShare: React.PropTypes.bool
   },
 
   contextTypes: {
-    organization: PropTypes.Organization,
-    project: PropTypes.Project
+    organization: SentryTypes.Organization,
+    project: SentryTypes.Project
   },
 
   getInitialState() {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
index 79876db0ef..0a24b7fa4d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import ConfigStore from '../../../stores/configStore';
 import GroupEventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import {t} from '../../../locale';
 import CrashHeader from './crashHeader';
 import CrashContent from './crashContent';
@@ -23,8 +23,8 @@ export function isStacktraceNewestFirst() {
 
 const StacktraceInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired,
     platform: React.PropTypes.string
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
index f5e1b9146d..e4e2e2d350 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
 import GroupEventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import Frame from './frame';
 import {t} from '../../../locale';
 
 const TemplateInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired
   },
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
index 1326b82ef2..7219eb5ff1 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import GroupEventDataSection from '../eventDataSection';
-import PropTypes from '../../../proptypes';
+import SentryTypes from '../../../proptypes';
 import {isStacktraceNewestFirst} from './stacktrace';
 import {defined} from '../../../utils';
 import DropdownLink from '../../dropdownLink';
@@ -123,8 +123,8 @@ function findBestThread(threads) {
 
 const Thread = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     data: React.PropTypes.object.isRequired,
     stackView: React.PropTypes.string,
     stackType: React.PropTypes.string,
@@ -193,8 +193,8 @@ const Thread = React.createClass({
 
 const ThreadsInterface = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired,
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired,
     type: React.PropTypes.string.isRequired,
     data: React.PropTypes.object.isRequired,
     platform: React.PropTypes.string
diff --git a/src/sentry/static/sentry/app/components/events/packageData.jsx b/src/sentry/static/sentry/app/components/events/packageData.jsx
index 0203e4ab7e..a0269d9f0f 100644
--- a/src/sentry/static/sentry/app/components/events/packageData.jsx
+++ b/src/sentry/static/sentry/app/components/events/packageData.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 
 import {objectToArray} from '../../utils';
 import EventDataSection from './eventDataSection';
@@ -9,8 +9,8 @@ import {t} from '../../locale';
 
 const EventPackageData = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   shouldComponentUpdate(nextProps, nextState) {
diff --git a/src/sentry/static/sentry/app/components/events/sdk.jsx b/src/sentry/static/sentry/app/components/events/sdk.jsx
index 2fc1359efc..c036441cab 100644
--- a/src/sentry/static/sentry/app/components/events/sdk.jsx
+++ b/src/sentry/static/sentry/app/components/events/sdk.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 
 import GroupEventDataSection from './eventDataSection';
 import {t} from '../../locale';
 
 const EventSdk = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/group/releaseChart.jsx b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
index 5e91004873..6ce0ab9539 100644
--- a/src/sentry/static/sentry/app/components/group/releaseChart.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
 
 import StackedBarChart from '../stackedBarChart';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import {t} from '../../locale';
 import {defined, escape, intcomma} from '../../utils';
 
 const GroupReleaseChart = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
+    group: SentryTypes.Group.isRequired,
     release: React.PropTypes.shape({
       version: React.PropTypes.string.isRequired
     }),
diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index e29886f9a5..30b843f041 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -1,14 +1,14 @@
 import React from 'react';
 import {Link} from 'react-router';
 import ApiMixin from '../../mixins/apiMixin';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import TooltipMixin from '../../mixins/tooltip';
 import {escape, percent, deviceNameMapper} from '../../utils';
 import {t} from '../../locale';
 
 const TagDistributionMeter = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired,
+    group: SentryTypes.Group.isRequired,
     tag: React.PropTypes.string.isRequired,
     name: React.PropTypes.string,
     orgId: React.PropTypes.string.isRequired,
diff --git a/src/sentry/static/sentry/app/mixins/groupState.jsx b/src/sentry/static/sentry/app/mixins/groupState.jsx
index 43df6329e0..47870d2065 100644
--- a/src/sentry/static/sentry/app/mixins/groupState.jsx
+++ b/src/sentry/static/sentry/app/mixins/groupState.jsx
@@ -1,11 +1,11 @@
-import PropTypes from '../proptypes';
+import SentryTypes from '../proptypes';
 import ProjectState from './projectState';
 
 let GroupState = {
   mixins: [ProjectState],
 
   contextTypes: {
-    group: PropTypes.Group.isRequired
+    group: SentryTypes.Group.isRequired
   },
 
   getGroup() {
diff --git a/src/sentry/static/sentry/app/mixins/organizationState.jsx b/src/sentry/static/sentry/app/mixins/organizationState.jsx
index 1ff551d732..43a89de973 100644
--- a/src/sentry/static/sentry/app/mixins/organizationState.jsx
+++ b/src/sentry/static/sentry/app/mixins/organizationState.jsx
@@ -1,8 +1,8 @@
-import PropTypes from '../proptypes';
+import SentryTypes from '../proptypes';
 
 let OrganizationState = {
   contextTypes: {
-    organization: PropTypes.Organization
+    organization: SentryTypes.Organization
   },
 
   getOrganization() {
diff --git a/src/sentry/static/sentry/app/mixins/projectState.jsx b/src/sentry/static/sentry/app/mixins/projectState.jsx
index 0d99a6b96e..cd08f60801 100644
--- a/src/sentry/static/sentry/app/mixins/projectState.jsx
+++ b/src/sentry/static/sentry/app/mixins/projectState.jsx
@@ -1,11 +1,11 @@
-import PropTypes from '../proptypes';
+import SentryTypes from '../proptypes';
 import TeamState from './teamState';
 
 let ProjectState = {
   mixins: [TeamState],
 
   contextTypes: {
-    project: PropTypes.Project
+    project: SentryTypes.Project
   },
 
   getProjectFeatures() {
diff --git a/src/sentry/static/sentry/app/mixins/teamState.jsx b/src/sentry/static/sentry/app/mixins/teamState.jsx
index a56aaaa409..18b8909545 100644
--- a/src/sentry/static/sentry/app/mixins/teamState.jsx
+++ b/src/sentry/static/sentry/app/mixins/teamState.jsx
@@ -1,11 +1,11 @@
-import PropTypes from '../proptypes';
+import SentryTypes from '../proptypes';
 import OrganizationState from './organizationState';
 
 let TeamState = {
   mixins: [OrganizationState],
 
   contextTypes: {
-    team: PropTypes.Team.isRequired
+    team: SentryTypes.Team.isRequired
   },
 
   getTeam() {
diff --git a/src/sentry/static/sentry/app/proptypes.jsx b/src/sentry/static/sentry/app/proptypes.jsx
index 14a19ba14f..d3819b2e40 100644
--- a/src/sentry/static/sentry/app/proptypes.jsx
+++ b/src/sentry/static/sentry/app/proptypes.jsx
@@ -81,7 +81,7 @@ const Event = React.PropTypes.shape({
   user: React.PropTypes.object
 });
 
-let PropTypes = {
+let SentryTypes = {
   AnyModel: React.PropTypes.shape({
     id: React.PropTypes.string.isRequired
   }),
@@ -104,4 +104,4 @@ let PropTypes = {
 
 export {Group, Event, Metadata};
 
-export default PropTypes;
+export default SentryTypes;
diff --git a/src/sentry/static/sentry/app/views/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails.jsx
index ba151c8de2..c5e0fe56a7 100644
--- a/src/sentry/static/sentry/app/views/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails.jsx
@@ -7,7 +7,7 @@ import GroupHeader from './groupDetails/header';
 import GroupStore from '../stores/groupStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
-import PropTypes from '../proptypes';
+import SentryTypes from '../proptypes';
 import {t} from '../locale';
 
 let ERROR_TYPES = {
@@ -21,7 +21,7 @@ const GroupDetails = React.createClass({
   },
 
   childContextTypes: {
-    group: PropTypes.Group,
+    group: SentryTypes.Group,
     location: React.PropTypes.object
   },
 
diff --git a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
index cb9483e345..2ee89fb861 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
@@ -3,7 +3,7 @@ import moment from 'moment';
 import React from 'react';
 
 import ConfigStore from '../../stores/configStore';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import DateTime from '../../components/dateTime';
 import FileSize from '../../components/fileSize';
 import TooltipMixin from '../../mixins/tooltip';
@@ -34,8 +34,8 @@ let GroupEventToolbar = React.createClass({
   propTypes: {
     orgId: React.PropTypes.string.isRequired,
     projectId: React.PropTypes.string.isRequired,
-    group: PropTypes.Group.isRequired,
-    event: PropTypes.Event.isRequired
+    group: SentryTypes.Group.isRequired,
+    event: SentryTypes.Event.isRequired
   },
 
   mixins: [
diff --git a/src/sentry/static/sentry/app/views/organizationContext.jsx b/src/sentry/static/sentry/app/views/organizationContext.jsx
index 0effdcd478..38db0cd321 100644
--- a/src/sentry/static/sentry/app/views/organizationContext.jsx
+++ b/src/sentry/static/sentry/app/views/organizationContext.jsx
@@ -8,7 +8,7 @@ import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import BroadcastModal from '../components/broadcastModal';
 import moment from 'moment';
-import PropTypes from '../proptypes';
+import SentryTypes from '../proptypes';
 import TeamStore from '../stores/teamStore';
 import ProjectStore from '../stores/projectStore';
 import ProjectActions from '../actions/projectActions';
@@ -28,7 +28,7 @@ function getRequiredAdminActions(org) {
 
 const OrganizationContext = React.createClass({
   childContextTypes: {
-    organization: PropTypes.Organization
+    organization: SentryTypes.Organization
   },
 
   mixins: [
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
index 4bc0bceb87..4ea2e87652 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {Link} from 'react-router';
 
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 
 import AllTeamsRow from './allTeamsRow';
 import {tct} from '../../locale';
@@ -9,8 +9,8 @@ import {tct} from '../../locale';
 const AllTeamsList = React.createClass({
   propTypes: {
     access: React.PropTypes.object,
-    organization: PropTypes.Organization,
-    teamList: React.PropTypes.arrayOf(PropTypes.Team),
+    organization: SentryTypes.Organization,
+    teamList: React.PropTypes.arrayOf(SentryTypes.Team),
     openMembership: React.PropTypes.bool
   },
 
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
index d8b4bf0e37..f809c31944 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/expandedTeamList.jsx
@@ -6,7 +6,7 @@ import ApiMixin from '../../mixins/apiMixin';
 import {update as projectUpdate} from '../../actionCreators/projects';
 import BarChart from '../../components/barChart';
 import ProjectLabel from '../../components/projectLabel';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import TooltipMixin from '../../mixins/tooltip';
 import {sortArray} from '../../utils';
 import {t, tct} from '../../locale';
@@ -14,8 +14,8 @@ import {t, tct} from '../../locale';
 const ExpandedTeamList = React.createClass({
   propTypes: {
     access: React.PropTypes.object.isRequired,
-    organization: PropTypes.Organization.isRequired,
-    teamList: React.PropTypes.arrayOf(PropTypes.Team).isRequired,
+    organization: SentryTypes.Organization.isRequired,
+    teamList: React.PropTypes.arrayOf(SentryTypes.Team).isRequired,
     projectStats: React.PropTypes.object,
     hasTeams: React.PropTypes.bool
   },
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx b/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx
index 9951e12e28..c169597fbd 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx
@@ -4,11 +4,11 @@ import Count from '../../components/count';
 import EventOrGroupExtraDetails from '../../components/eventOrGroupExtraDetails';
 import EventOrGroupHeader from '../../components/eventOrGroupHeader';
 import ProjectState from '../../mixins/projectState';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 
 const EventNode = React.createClass({
   propTypes: {
-    group: PropTypes.Group.isRequired
+    group: SentryTypes.Group.isRequired
   },
 
   mixins: [ProjectState],
diff --git a/src/sentry/static/sentry/app/views/projects/projectContext.jsx b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
index 0bc687bbf1..8f275cbe2b 100644
--- a/src/sentry/static/sentry/app/views/projects/projectContext.jsx
+++ b/src/sentry/static/sentry/app/views/projects/projectContext.jsx
@@ -9,7 +9,7 @@ import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import MissingProjectMembership from '../../components/missingProjectMembership';
 import OrganizationState from '../../mixins/organizationState';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 import TeamStore from '../../stores/teamStore';
 import ProjectStore from '../../stores/projectStore';
 import {t} from '../../locale';
@@ -34,8 +34,8 @@ const ProjectContext = React.createClass({
   },
 
   childContextTypes: {
-    project: PropTypes.Project,
-    team: PropTypes.Team
+    project: SentryTypes.Project,
+    team: SentryTypes.Team
   },
 
   mixins: [
diff --git a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
index 57060208a9..3a5fb560bf 100644
--- a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
+++ b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
@@ -7,13 +7,13 @@ import EventEntries from '../../components/events/eventEntries';
 import Footer from '../../components/footer';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
-import PropTypes from '../../proptypes';
+import SentryTypes from '../../proptypes';
 
 import SharedGroupHeader from './sharedGroupHeader';
 
 const SharedGroupDetails = React.createClass({
   childContextTypes: {
-    group: PropTypes.Group
+    group: SentryTypes.Group
   },
 
   mixins: [ApiMixin],
diff --git a/tests/js/spec/views/onboarding/configure/index.spec.jsx b/tests/js/spec/views/onboarding/configure/index.spec.jsx
index 6447f601cf..5f3f52b7a1 100644
--- a/tests/js/spec/views/onboarding/configure/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/configure/index.spec.jsx
@@ -3,7 +3,7 @@ import {shallow, mount} from 'enzyme';
 
 import {Client} from 'app/api';
 import Configure from 'app/views/onboarding/configure';
-import PropTypes from '../../../../../../src/sentry/static/sentry/app/proptypes';
+import SentryTypes from '../../../../../../src/sentry/static/sentry/app/proptypes';
 
 describe('Configure should render correctly', function() {
   beforeEach(function() {
@@ -32,7 +32,7 @@ describe('Configure should render correctly', function() {
 
       let wrapper = shallow(<Configure {...props} />, {
         context: {organization: {id: '1337', slug: 'testOrg', teams: [['testProject']]}},
-        childContextTypes: {organization: PropTypes.Organization}
+        childContextTypes: {organization: SentryTypes.Organization}
       });
 
       const component = wrapper.instance();
@@ -103,7 +103,7 @@ describe('Configure should render correctly', function() {
             ]
           }
         },
-        childContextTypes: {organization: PropTypes.Organization}
+        childContextTypes: {organization: SentryTypes.Organization}
       });
       expect(wrapper).toMatchSnapshot();
       expect(this.stubbedApiRequest.callCount).toEqual(5);
