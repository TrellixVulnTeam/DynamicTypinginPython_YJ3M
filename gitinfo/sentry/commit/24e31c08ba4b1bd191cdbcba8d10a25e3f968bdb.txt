commit 24e31c08ba4b1bd191cdbcba8d10a25e3f968bdb
Author: maxbittker <maxbittker@gmail.com>
Date:   Tue Apr 24 17:22:31 2018 -0700

    oh

diff --git a/src/sentry/api/endpoints/project_rule_details.py b/src/sentry/api/endpoints/project_rule_details.py
index 2c31aa9c12..0a2f8b1666 100644
--- a/src/sentry/api/endpoints/project_rule_details.py
+++ b/src/sentry/api/endpoints/project_rule_details.py
@@ -47,6 +47,7 @@ class ProjectRuleDetailsEndpoint(ProjectEndpoint):
             project=project,
             id=rule_id,
         )
+
         serializer = RuleSerializer(
             {
                 'actionMatch': rule.data.get('action_match') or Rule.DEFAULT_ACTION_MATCH,
diff --git a/tests/sentry/api/endpoints/test_project_rule_details.py b/tests/sentry/api/endpoints/test_project_rule_details.py
index 251b065f8c..3177e19818 100644
--- a/tests/sentry/api/endpoints/test_project_rule_details.py
+++ b/tests/sentry/api/endpoints/test_project_rule_details.py
@@ -162,8 +162,9 @@ class UpdateProjectRuleTest(APITestCase):
                       'interval': '1h',
                       'id': 'sentry.rules.conditions.event_frequency.EventFrequencyCondition',
                       'value': 666,
-                      'name': 'An event is seen more than 30 times in 1m'}],
-                  'id': '28',
+                      'name': 'An event is seen more than 30 times in 1m'
+                  }],
+                  'id': rule.id,
                   'actions': [{
                       'id': 'sentry.rules.actions.notify_event.NotifyEventAction',
                       'name': 'Send a notification (for all legacy integrations)'}],
@@ -174,9 +175,6 @@ class UpdateProjectRuleTest(APITestCase):
         assert response.status_code == 200, response.content
         assert response.data['conditions'][0]['name'] == 'An event is seen more than 666 times in 1h'
 
-        rule = Rule.objects.get(id=rule.id)
-        assert rule.data['conditions'][0]['name'] == 'An event is seen more than 666 times in 1h'
-
     def test_with_environment(self):
         self.login_as(user=self.user)
 
