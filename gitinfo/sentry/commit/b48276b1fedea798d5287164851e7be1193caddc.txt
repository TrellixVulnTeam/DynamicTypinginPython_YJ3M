commit b48276b1fedea798d5287164851e7be1193caddc
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Feb 27 14:01:29 2015 -0800

    Ensure unlinked members cannot hit API endpoints

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index 084805ebe5..a5206577db 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
-from sentry.models import Organization, OrganizationMember
+from sentry.models import AuthProvider, Organization, OrganizationMember
 
 
 class OrganizationPermission(ScopedPermission):
@@ -30,6 +30,18 @@ class OrganizationPermission(ScopedPermission):
         except OrganizationMember.DoesNotExist:
             return False
 
+        try:
+            auth_provider = AuthProvider.objects.get(organization=organization)
+        except AuthProvider.DoesNotExist:
+            pass
+        else:
+            # TODO(dcramer): we might simply want to change their scopes to
+            # something like 'org:read' since we'd still want them to know
+            # they're part of the org. Alternatively we introduce yet another
+            # scope that suggests extremely limited read.
+            if not auth_provider.member_is_valid(om):
+                return False
+
         allowed_scopes = set(self.scope_map[request.method])
         current_scopes = om.scopes
         return any(s in allowed_scopes for s in current_scopes)
diff --git a/src/sentry/models/authprovider.py b/src/sentry/models/authprovider.py
index a1c1985001..1767d5ff0f 100644
--- a/src/sentry/models/authprovider.py
+++ b/src/sentry/models/authprovider.py
@@ -44,3 +44,8 @@ class AuthProvider(Model):
             'config': self.config,
             'default_Role': self.default_role,
         }
+
+    def member_is_valid(self, member):
+        if not getattr(member.flags, 'sso:linked'):
+            return False
+        return True
