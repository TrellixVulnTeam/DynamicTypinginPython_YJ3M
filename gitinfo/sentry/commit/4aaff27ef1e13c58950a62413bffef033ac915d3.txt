commit 4aaff27ef1e13c58950a62413bffef033ac915d3
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Sep 17 15:57:29 2015 -0700

    Reorder operations from the scheduling script for efficiency.

diff --git a/src/sentry/timelines/redis.py b/src/sentry/timelines/redis.py
index 5401af647c..1d3a2d0589 100644
--- a/src/sentry/timelines/redis.py
+++ b/src/sentry/timelines/redis.py
@@ -34,14 +34,24 @@ ADD_TO_SCHEDULE_SCRIPT = """\
 -- KEYS: {WATING, READY}
 -- ARGV: {TIMELINE, TIMESTAMP}
 
--- Check to see if the timeline already exists in the "ready" set.
-if redis.call('ZSCORE', KEYS[2], ARGV[1]) then return end
+-- Check to see if the timeline exists in the "waiting" set (heuristics tell us
+-- that this should be more likely than it's presence in the ready set.)
+local waiting = redis.call('ZSCORE', KEYS[1], ARGV[1])
+
+-- If the item already exists, update the score if the provided timestamp is
+-- less than the current score.
+if waiting ~= false then
+    if tonumber(waiting) > tonumber(ARGV[2]) then
+        redis.call('ZADD', KEYS[1], ARGV[2], ARGV[1])
+    end
+    return
+end
 
--- Otherwise, add the timeline to the "waiting" set, using the lower of the two
--- timestamps if the timeline already exists in the schedule.
-local score = redis.call('ZSCORE', KEYS[1], ARGV[1])
-if score == false or tonumber(score) > tonumber(ARGV[2]) then
+-- Otherwise, check to see if the timeline already exists in the "ready" set.
+-- If oust doesn't, it needs to be added to the waiting set.
+if redis.call('ZSCORE', KEYS[2], ARGV[1]) == false then
     redis.call('ZADD', KEYS[1], ARGV[2], ARGV[1])
+    return
 end
 """
 
