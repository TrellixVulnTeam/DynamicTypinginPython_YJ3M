commit bdb43d5bfefab725fb43c3dc18ad8390559ae5fc
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Thu Nov 16 17:32:26 2017 -0600

    ref: Delete unused/outdated Project.merge_to (#6562)

diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 735435bcd3..6c7fcff208 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -17,7 +17,6 @@ from django.db import IntegrityError, models, transaction
 from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
 
-from sentry import tagstore
 from sentry.app import locks
 from sentry.constants import ObjectStatus
 from sentry.db.models import (
@@ -143,33 +142,6 @@ class Project(Model):
     def get_absolute_url(self):
         return absolute_uri('/{}/{}/'.format(self.organization.slug, self.slug))
 
-    def merge_to(self, project):
-        from sentry.models import (Group, Event)
-
-        if not isinstance(project, Project):
-            project = Project.objects.get_from_cache(pk=project)
-
-        for group in Group.objects.filter(project=self):
-            try:
-                other = Group.objects.get(
-                    project=project,
-                )
-            except Group.DoesNotExist:
-                group.update(project=project)
-                tagstore.update_project_for_group(
-                    group_id=group.id,
-                    old_project_id=self.id,
-                    new_project_id=project.id)
-            else:
-                Event.objects.filter(
-                    group_id=group.id,
-                ).update(group_id=other.id)
-
-                tagstore.merge_group_tag_values_to_project(project.id, group.id)
-
-        tagstore.merge_tag_values_to_project(self.id, project.id)
-        self.delete()
-
     def is_internal_project(self):
         for value in (settings.SENTRY_FRONTEND_PROJECT, settings.SENTRY_PROJECT):
             if six.text_type(self.id) == six.text_type(value) or six.text_type(
diff --git a/src/sentry/tagstore/base.py b/src/sentry/tagstore/base.py
index 1a6dc4e619..afa1be8bb3 100644
--- a/src/sentry/tagstore/base.py
+++ b/src/sentry/tagstore/base.py
@@ -77,7 +77,6 @@ class TagStorage(Service):
         'get_group_tag_values_for_users',
         'get_tags_for_search_filter',
         'update_group_tag_key_values_seen',
-        'merge_group_tag_values_to_project',
 
         'get_tag_value_qs',
         'get_group_tag_value_qs',
@@ -282,18 +281,6 @@ class TagStorage(Service):
         """
         raise NotImplementedError
 
-    def merge_tag_values_to_project(self, source_project_id, target_project_id):
-        """
-        >>> merge_tag_values_to_project(1, 2)
-        """
-        raise NotImplementedError
-
-    def merge_group_tag_values_to_project(self, target_project_id, group_id):
-        """
-        >>> merge_group_tag_values_to_project(1, 2)
-        """
-        raise NotImplementedError
-
     def get_tag_value_qs(self, project_id, key, query=None):
         """
         >>> get_tag_value_qs(1, 'environment', query='prod')
diff --git a/src/sentry/tagstore/legacy/backend.py b/src/sentry/tagstore/legacy/backend.py
index 07d112b946..075b3de45e 100644
--- a/src/sentry/tagstore/legacy/backend.py
+++ b/src/sentry/tagstore/legacy/backend.py
@@ -13,7 +13,7 @@ import six
 from collections import defaultdict
 from datetime import timedelta
 from django.db import connections, router, IntegrityError, transaction
-from django.db.models import F, Q, Sum
+from django.db.models import Q, Sum
 from django.utils import timezone
 from operator import or_
 from six.moves import reduce
@@ -523,29 +523,6 @@ class LegacyTagStorage(TagStorage):
                 ).count(),
             )
 
-    def merge_tag_values_to_project(self, source_project_id, target_project_id):
-        for tv in self.get_tag_values(source_project_id):
-            self.get_or_create_tag_value(
-                project_id=target_project_id,
-                environment_id=None,
-                key=tv.key,
-                value=tv.value)
-            tv.delete()
-
-    def merge_group_tag_values_to_project(self, target_project_id, group_id):
-        for gtv in self.get_group_tag_values(group_id=group_id):
-            gtv2, created = self.get_or_create_group_tag_value(
-                project_id=target_project_id,
-                group_id=group_id,
-                environment_id=None,
-                key=gtv.key,
-                value=gtv.value,
-                defaults={'times_seen': gtv.times_seen},
-            )
-
-            if not created:
-                gtv2.update(times_seen=F('times_seen') + gtv.times_seen)
-
     def get_tag_value_qs(self, project_id, key, query=None):
         queryset = TagValue.objects.filter(
             project_id=project_id,
