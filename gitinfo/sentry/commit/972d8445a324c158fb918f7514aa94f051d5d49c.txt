commit 972d8445a324c158fb918f7514aa94f051d5d49c
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Oct 30 12:49:20 2019 -0700

    fix(ts): Reduce type complexity in hookstore typechecking (#15337)

diff --git a/src/sentry/static/sentry/app/stores/hookStore.tsx b/src/sentry/static/sentry/app/stores/hookStore.tsx
index 9ce5448ee8..5639614f64 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.tsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.tsx
@@ -4,8 +4,6 @@ import * as Sentry from '@sentry/browser';
 
 import {Hooks, HookName} from 'app/types/hooks';
 
-type HookMapping = {[H in HookName]?: Array<Hooks[H]>};
-
 /**
  * See types/hooks for hook usage reference.
  */
@@ -51,7 +49,11 @@ const validHookNames = new Set<HookName>([
 ]);
 
 type HookStoreInterface = {
-  hooks: HookMapping;
+  // XXX(epurkhiser): We could type this as {[H in HookName]?:
+  // Array<Hooks[H]>}, however this causes typescript to produce a complex
+  // union that it complains is 'too complex'
+  hooks: any;
+
   add<H extends HookName>(hookName: H, callback: Hooks[H]): void;
   remove<H extends HookName>(hookName: H, callback: Hooks[H]): void;
   get<H extends HookName>(hookName: H): Array<Hooks[H]>;
