commit f542d6d0af846bb0b6f01bf48122cd8ce81b283c
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 13 01:32:32 2012 -0800

    Correct rendering of dashboard and sparklines

diff --git a/src/sentry.less b/src/sentry.less
index bfd0e84422..6313896db9 100644
--- a/src/sentry.less
+++ b/src/sentry.less
@@ -456,7 +456,7 @@ footer {
       }
     }
 
-    &.with-metadata {
+    &.with-sparkline {
       .message {
         padding-right: 124px;
       }
@@ -599,6 +599,9 @@ footer {
 
       .message {
         font-size: 12px;
+        .tag {
+          display: none;
+        }
       }
 
       .count {
@@ -620,6 +623,7 @@ footer {
 
       .sparkline {
         right: 10px;
+        height: 20px;
         top: 18px;
       }
 
diff --git a/src/sentry/static/sentry/coffee/app.coffee b/src/sentry/static/sentry/coffee/app.coffee
index 26991979fb..82c746f036 100644
--- a/src/sentry/static/sentry/coffee/app.coffee
+++ b/src/sentry/static/sentry/coffee/app.coffee
@@ -3,7 +3,7 @@ app.config = app.config || {};
 
 jQuery ->
 
-    app.StreamView = class StreamView extends Backbone.View
+    app.StreamPage = class StreamPage extends Backbone.View
 
         initialize: (data) ->
             _.bindAll(@)
@@ -75,7 +75,7 @@ jQuery ->
                     # if an error happened lets give the server a bit of time before we poll again
                     window.setTimeout(@poll, 10000)
 
-    app.DashboardView = class DashboardView extends Backbone.View
+    app.DashboardPage = class DashboardPage extends Backbone.View
 
         initialize: ->
             _.bindAll(@)
diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index 0dc8c4a54e..35fdcf239d 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -94,7 +94,10 @@ jQuery ->
                 else
                     $el.insertBefore($rel)
 
-            # $el.find('.sparkline').sparkline('html', {enableTagOptions: true})
+            $el.find('.sparkline').each (_, el) =>
+                $(el).sparkline 'html'
+                    enableTagOptions: true
+                    height: $(el).height()
 
             # make sure we limit the number shown
             while @collection.length > @config.maxItems
@@ -129,13 +132,13 @@ jQuery ->
 
         render: ->
             data = @model.toJSON()
-            data.historicalData = @getHistoricalAsString @model
-            @$el.html @template data
-            @$el.addClass @getLevelClassName @model
+            data.historicalData = @getHistoricalAsString(@model)
+            @$el.html(@template(data))
+            @$el.addClass(@getLevelClassName(@model))
             if data.isResolved
-                @$el.addClass 'resolved'
+                @$el.addClass('resolved')
             if data.historicalData
-                @$el.addClass 'with-metadata'
+                @$el.addClass('with-sparkline')
             @$el.attr('data-id', data.id)
             @
 
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index 785e176561..c4ef29fbb6 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -9,16 +9,16 @@
   app.config = app.config || {};
 
   jQuery(function() {
-    var DashboardView, StreamView;
-    app.StreamView = StreamView = (function(_super) {
+    var DashboardPage, StreamPage;
+    app.StreamPage = StreamPage = (function(_super) {
 
-      __extends(StreamView, _super);
+      __extends(StreamPage, _super);
 
-      function StreamView() {
-        return StreamView.__super__.constructor.apply(this, arguments);
+      function StreamPage() {
+        return StreamPage.__super__.constructor.apply(this, arguments);
       }
 
-      StreamView.prototype.initialize = function(data) {
+      StreamPage.prototype.initialize = function(data) {
         var _ref;
         _.bindAll(this);
         this.group_list = new app.OrderedElementsView({
@@ -36,7 +36,7 @@
         return window.setInterval(this.tick, 300);
       };
 
-      StreamView.prototype.tick = function() {
+      StreamPage.prototype.tick = function() {
         if (!this.queue.length) {
           return;
         }
@@ -44,11 +44,11 @@
         return this.group_list.addMember(this.queue.pop());
       };
 
-      StreamView.prototype.getPollUrl = function() {
+      StreamPage.prototype.getPollUrl = function() {
         return app.config.urlPrefix + '/api/' + app.config.projectId + '/poll/';
       };
 
-      StreamView.prototype.poll = function() {
+      StreamPage.prototype.poll = function() {
         var data, poll_url,
           _this = this;
         poll_url = this.getPollUrl;
@@ -89,18 +89,18 @@
         });
       };
 
-      return StreamView;
+      return StreamPage;
 
     })(Backbone.View);
-    return app.DashboardView = DashboardView = (function(_super) {
+    return app.DashboardPage = DashboardPage = (function(_super) {
 
-      __extends(DashboardView, _super);
+      __extends(DashboardPage, _super);
 
-      function DashboardView() {
-        return DashboardView.__super__.constructor.apply(this, arguments);
+      function DashboardPage() {
+        return DashboardPage.__super__.constructor.apply(this, arguments);
       }
 
-      DashboardView.prototype.initialize = function() {
+      DashboardPage.prototype.initialize = function() {
         var _this = this;
         _.bindAll(this);
         this.views = {};
@@ -132,7 +132,7 @@
         return $('li.active a[data-toggle=ajtab]').click();
       };
 
-      DashboardView.prototype.getView = function(id) {
+      DashboardPage.prototype.getView = function(id) {
         if (!this.views[id]) {
           this.views[id] = new app.OrderedElementsView({
             className: 'group-list small',
@@ -143,7 +143,7 @@
         return this.views[id];
       };
 
-      return DashboardView;
+      return DashboardPage;
 
     })(Backbone.View);
   });
@@ -390,7 +390,8 @@
       };
 
       OrderedElementsView.prototype.renderMemberInContainer = function(member) {
-        var $el, $rel, item, new_pos, _results;
+        var $el, $rel, item, new_pos, _results,
+          _this = this;
         new_pos = this.collection.indexOf(member);
         this.$parent.find('li.empty').remove();
         $el = $('#' + this.id + member.id);
@@ -409,6 +410,12 @@
             $el.insertBefore($rel);
           }
         }
+        $el.find('.sparkline').each(function(_, el) {
+          return $(el).sparkline('html', {
+            enableTagOptions: true,
+            height: $(el).height()
+          });
+        });
         _results = [];
         while (this.collection.length > this.config.maxItems) {
           _results.push(item = this.collection.pop());
@@ -476,7 +483,7 @@
           this.$el.addClass('resolved');
         }
         if (data.historicalData) {
-          this.$el.addClass('with-metadata');
+          this.$el.addClass('with-sparkline');
         }
         this.$el.attr('data-id', data.id);
         return this;
diff --git a/src/sentry/static/sentry/styles/global.css b/src/sentry/static/sentry/styles/global.css
index 9e13713d9e..09ad18faa0 100644
--- a/src/sentry/static/sentry/styles/global.css
+++ b/src/sentry/static/sentry/styles/global.css
@@ -5906,12 +5906,12 @@ footer a:hover {
   background-image: none;
   background-color: inherit;
 }
-.group-list > li.with-metadata .message,
-.events > li.with-metadata .message {
+.group-list > li.with-sparkline .message,
+.events > li.with-sparkline .message {
   padding-right: 124px;
 }
-.group-list > li.with-metadata .meta,
-.events > li.with-metadata .meta {
+.group-list > li.with-sparkline .meta,
+.events > li.with-sparkline .meta {
   right: 155px;
 }
 .group-list > li:hover,
@@ -6086,6 +6086,10 @@ footer a:hover {
 .events.small > li .message {
   font-size: 12px;
 }
+.group-list.small > li .message .tag,
+.events.small > li .message .tag {
+  display: none;
+}
 .group-list.small > li .count,
 .events.small > li .count {
   left: 10px;
@@ -6108,6 +6112,7 @@ footer a:hover {
 .group-list.small > li .sparkline,
 .events.small > li .sparkline {
   right: 10px;
+  height: 20px;
   top: 18px;
 }
 .group-list.small > li .tag,
diff --git a/src/sentry/static/sentry/styles/global.min.css b/src/sentry/static/sentry/styles/global.min.css
index 21d5b74071..2fca9cc7f5 100644
--- a/src/sentry/static/sentry/styles/global.min.css
+++ b/src/sentry/static/sentry/styles/global.min.css
@@ -938,8 +938,8 @@ footer a{color:#f4f4f4;font-weight:bold;}footer a:hover{color:#fff;}
 .group-list,.events{margin:0;padding:0;list-style:none;}.group-list.no-counts>li,.events.no-counts>li{padding-left:20px;}
 .group-list>li,.events>li{position:relative;padding:15px 20px 15px 100px;position:relative;border:1px solid #e5e6e7;border-top-width:0;min-height:60px;}.group-list>li:first-child,.events>li:first-child{border-top-width:1px;}
 .group-list>li.empty,.events>li.empty{border:0;padding:0 !important;}.group-list>li.empty:hover,.events>li.empty:hover{filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);background-image:none;background-color:inherit;}
-.group-list>li.with-metadata .message,.events>li.with-metadata .message{padding-right:124px;}
-.group-list>li.with-metadata .meta,.events>li.with-metadata .meta{right:155px;}
+.group-list>li.with-sparkline .message,.events>li.with-sparkline .message{padding-right:124px;}
+.group-list>li.with-sparkline .meta,.events>li.with-sparkline .meta{right:155px;}
 .group-list>li:hover,.events>li:hover{background-color:#f4fafe;background-image:-moz-linear-gradient(top, #f7fbfe, #eff8fd);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#f7fbfe), to(#eff8fd));background-image:-webkit-linear-gradient(top, #f7fbfe, #eff8fd);background-image:-o-linear-gradient(top, #f7fbfe, #eff8fd);background-image:linear-gradient(to bottom, #f7fbfe, #eff8fd);background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff7fbfe', endColorstr='#ffeff8fd', GradientType=0);border-color:#aec9d7;}.group-list>li:hover h3 a,.events>li:hover h3 a{color:#12659a;}
 .group-list>li h3,.events>li h3{font-family:"proxima nova","proxima-nova","heletica-neue",sans-serif;margin:4px 0 0;font-size:20px;color:#6d757e;font-weight:normal;width:85%;overflow:hidden;}.group-list>li h3 span,.events>li h3 span{margin-left:10px;font-weight:300;padding:0 5px;font-size:13px;}
 .group-list>li .count,.events>li .count{color:#fff;position:absolute;left:20px;width:60px;height:60px;background:#cfd3da;-webkit-border-radius:60px;-moz-border-radius:60px;border-radius:60px;line-height:62px;text-align:center;font-size:20px;font-weight:400;letter-spacing:-1px;font-family:"proxima nova","proxima-nova","heletica-neue",sans-serif;}
@@ -958,11 +958,11 @@ footer a{color:#f4f4f4;font-weight:bold;}footer a:hover{color:#fff;}
 .group-list>li.resolved h3,.events>li.resolved h3{text-decoration:line-through;}
 .group-list>li.resolved .count,.events>li.resolved .count{opacity:0.5;filter:alpha(opacity=50);}
 .group-list.small>li,.events.small>li{min-height:30px;padding:10px 10px 10px 60px;}.group-list.small>li h3,.events.small>li h3{margin:0;font-size:14px;line-height:16px;}
-.group-list.small>li .message,.events.small>li .message{font-size:12px;}
+.group-list.small>li .message,.events.small>li .message{font-size:12px;}.group-list.small>li .message .tag,.events.small>li .message .tag{display:none;}
 .group-list.small>li .count,.events.small>li .count{left:10px;font-size:12px;width:36px;height:36px;line-height:38px;-webkit-border-radius:36px;-moz-border-radius:36px;border-radius:36px;}
 .group-list.small>li .actions,.events.small>li .actions{display:none;}
 .group-list.small>li .meta,.events.small>li .meta{right:120px;}
-.group-list.small>li .sparkline,.events.small>li .sparkline{right:10px;top:18px;}
+.group-list.small>li .sparkline,.events.small>li .sparkline{right:10px;height:20px;top:18px;}
 .group-list.small>li .tag,.events.small>li .tag,.group-list.small>li .meta,.events.small>li .meta{font-size:11px;}
 label{font-weight:bold;}
 pre span,code span{display:inline-block;}
diff --git a/src/sentry/templates/sentry/dashboard.html b/src/sentry/templates/sentry/dashboard.html
index 66120dfad9..04cc93df19 100644
--- a/src/sentry/templates/sentry/dashboard.html
+++ b/src/sentry/templates/sentry/dashboard.html
@@ -81,7 +81,7 @@
 {% block content_after %}
     <script type="text/javascript">
     $(function(){
-        new app.DashboardView();
+        new app.DashboardPage();
     })
     </script>
 {% endblock %}
\ No newline at end of file
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
index 5a405ed6a0..358d26878d 100644
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ b/src/sentry/templates/sentry/groups/group_list.html
@@ -137,7 +137,7 @@
 
     <script>
     $(function(){
-        new app.StreamView({
+        new app.StreamPage({
             groups: {{ event_list.paginator.objects|to_json:request|safe }},
             realtime: {{ has_realtime|to_json|safe }}
         });
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index bde3e0a076..06677bd2bf 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -136,7 +136,6 @@
             $('input[data-toggle="datepicker"]').datepicker();
             $('.tip').tooltip();
             $('.nav-tabs .active a').tab('show')
-            $('.sparkline').sparkline('html', {enableTagOptions: true});
         });
         </script>
         <script id="group-template" type="text/template">
@@ -158,8 +157,9 @@
                     <% if (timeSpent) { %>
                         <span class="time-spent"><%= app.utils.round(timeSpent) %>ms</span>
                     <% } %>
+                    <span class="tag tag-project"><%= project.name %></span>
                 </div>
-                <span class="sparkline" sparkwidth="100" sparkheight="40" sparklineColor="#ccc" sparkfillColor="false" sparkspotRadius="0"><!-- <%= historicalData %> --></span>
+                <span class="sparkline" sparkwidth="100" sparklineColor="#ccc" sparkfillColor="false" sparkspotRadius="0"><!-- <%= historicalData %> --></span>
                 <ul class="actions">
                     <% if (canResolve) { %>
                         <li>
diff --git a/src/sentry/utils/javascript.py b/src/sentry/utils/javascript.py
index 968dc475d2..248bd2435d 100644
--- a/src/sentry/utils/javascript.py
+++ b/src/sentry/utils/javascript.py
@@ -8,7 +8,7 @@ sentry.utils.javascript
 from django.core.urlresolvers import reverse
 from django.utils.html import escape
 from sentry.constants import STATUS_RESOLVED
-from sentry.models import Group
+from sentry.models import Group, GroupBookmark
 from sentry.templatetags.sentry_plugins import get_tags
 from sentry.utils import json
 
@@ -16,16 +16,19 @@ from sentry.utils import json
 transformers = {}
 
 
-def transform(obj, request=None):
-    if isinstance(obj, (list, tuple)):
-        return [transform(o, request=request) for o in obj]
-    elif isinstance(obj, dict):
-        return dict((k, transform(v, request=request)) for k, v in obj.iteritems())
+def transform(objects, request=None):
+    if not objects:
+        return objects
+    elif not isinstance(objects, (list, tuple)):
+        return transform([objects], request=request)[0]
+    # elif isinstance(obj, dict):
+    #     return dict((k, transform(v, request=request)) for k, v in obj.iteritems())
+    t = transformers.get(type(objects[0]))
 
-    t = transformers.get(type(obj))
     if t:
-        return t(obj, request=request)
-    return obj
+        t.attach_metadata(objects, request=request)
+        return [t(o, request=request) for o in objects]
+    return objects
 
 
 def to_json(obj, request=None):
@@ -44,12 +47,37 @@ class Transformer(object):
     def __call__(self, obj, request=None):
         return self.transform(obj, request)
 
+    def attach_metadata(self, objects, request=None):
+        pass
+
     def transform(self, obj, request=None):
         return {}
 
 
 @register(Group)
 class GroupTransformer(Transformer):
+    def attach_metadata(self, objects, request=None):
+        if request and request.user.is_authenticated() and objects:
+            bookmarks = set(GroupBookmark.objects.filter(
+                user=request.user,
+                group__in=objects,
+            ).values_list('group_id', flat=True))
+        else:
+            bookmarks = set()
+
+        if objects:
+            historical_data = Group.objects.get_chart_data_for_group(
+                instances=objects,
+                max_days=1,
+                key='group',
+            )
+        else:
+            historical_data = {}
+
+        for g in objects:
+            g.is_bookmarked = g.pk in bookmarks
+            g.historical_data = [x[1] for x in historical_data.get(g.id, [])]
+
     def transform(self, obj, request=None):
         d = {
             'id': str(obj.id),
@@ -66,7 +94,15 @@ class GroupTransformer(Transformer):
             'canResolve': request and request.user.is_authenticated(),
             'isResolved': obj.status == STATUS_RESOLVED,
             'score': getattr(obj, 'sort_value', 0),
+            'project': {
+                'name': obj.project.name,
+                'slug': obj.project.slug,
+            },
         }
+        if hasattr(obj, 'is_bookmarked'):
+            d['isBookmarked'] = obj.is_bookmarked
+        if hasattr(obj, 'historical_data'):
+            d['historicalData'] = obj.historical_data
         if request:
             d['tags'] = list(get_tags(obj, request))
         return d
