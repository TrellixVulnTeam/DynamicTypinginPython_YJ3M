commit e29333728f6a362a3fa197380c66af90fa5bc261
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Tue Feb 18 09:07:21 2020 +0100

    ref(ui): Added tooltip - Datascrubbers v2 - Part 6 (#16978)

diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 49ee8dd718..e2f2d8cfc1 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -8,7 +8,7 @@ import plugins from 'app/plugins';
 
 const CONTEXT_TYPES = {
   default: require('app/components/events/contexts/default').default,
-  app: require('app/components/events/contexts/app').default,
+  app: require('app/components/events/contexts/app/app').default,
   device: require('app/components/events/contexts/device/device').default,
   os: require('app/components/events/contexts/operatingSystem/operatingSystem').default,
   runtime: require('app/components/events/contexts/runtime/runtime').default,
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app.jsx b/src/sentry/static/sentry/app/components/events/contexts/app.jsx
deleted file mode 100644
index f1afaa1427..0000000000
--- a/src/sentry/static/sentry/app/components/events/contexts/app.jsx
+++ /dev/null
@@ -1,45 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import ContextBlock from 'app/components/events/contexts/contextBlock';
-
-class AppContextType extends React.Component {
-  static propTypes = {
-    alias: PropTypes.string.isRequired,
-    data: PropTypes.object.isRequired,
-  };
-
-  render() {
-    const {
-      app_id,
-      app_start_time,
-      device_app_hash,
-      build_type,
-      app_identifier,
-      app_name,
-      app_version,
-      app_build,
-      ...data
-    } = this.props.data;
-    return (
-      <ContextBlock
-        data={data}
-        knownData={[
-          ['?ID', app_id],
-          ['?Start Time', app_start_time],
-          ['?Device', device_app_hash],
-          ['?Build Type', build_type],
-          ['?Bundle ID', app_identifier],
-          ['?Bundle Name', app_name],
-          ['?Version', app_version],
-          ['?Build', app_build],
-        ]}
-        alias={this.props.alias}
-      />
-    );
-  }
-}
-
-AppContextType.getTitle = () => 'App';
-
-export default AppContextType;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
new file mode 100644
index 0000000000..bd7964d55e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/app.tsx
@@ -0,0 +1,23 @@
+import React from 'react';
+
+import ContextBlock from 'app/components/events/contexts/contextBlockV2';
+import {defined} from 'app/utils';
+
+import getAppKnownData from './getAppKnownData';
+import {AppData} from './types';
+
+type Props = {
+  data?: AppData;
+};
+
+const App = ({data}: Props) => {
+  if (!defined(data)) {
+    return null;
+  }
+
+  return <ContextBlock knownData={getAppKnownData(data)} />;
+};
+
+App.getTitle = () => 'App';
+
+export default App;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
new file mode 100644
index 0000000000..c5c7bda9dc
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownData.tsx
@@ -0,0 +1,27 @@
+import {KeyValueListData} from 'app/components/events/interfaces/keyValueList/types';
+import {getMeta} from 'app/components/events/meta/metaProxy';
+
+import getAppKnownDataDetails from './getAppKnownDataDetails';
+import {AppData, AppKnownDataType} from './types';
+
+function getAppKnownData(data: AppData): Array<KeyValueListData> {
+  const knownData: Array<KeyValueListData> = [];
+
+  const dataKeys = Object.keys(data);
+  for (const key of dataKeys) {
+    const knownDataDetails = getAppKnownDataDetails(data, key as AppKnownDataType);
+
+    if (!knownDataDetails) {
+      continue;
+    }
+
+    knownData.push({
+      key,
+      ...knownDataDetails,
+      meta: getMeta(data, key),
+    });
+  }
+  return knownData;
+}
+
+export default getAppKnownData;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownDataDetails.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownDataDetails.tsx
new file mode 100644
index 0000000000..ceedd50654
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/getAppKnownDataDetails.tsx
@@ -0,0 +1,60 @@
+import {t} from 'app/locale';
+
+import {AppData, AppKnownDataType} from './types';
+
+type Output = {
+  subject: string;
+  value: string | null;
+};
+
+function getAppKnownDataDetails(
+  data: AppData,
+  type: AppKnownDataType
+): Output | undefined {
+  switch (type) {
+    case AppKnownDataType.ID:
+      return {
+        subject: t('ID'),
+        value: data.app_id || null,
+      };
+    case AppKnownDataType.START_TIME:
+      return {
+        subject: t('Start Time'),
+        value: data.app_start_time || null,
+      };
+    case AppKnownDataType.DEVICE_HASH:
+      return {
+        subject: t('Device'),
+        value: data.device_app_hash || null,
+      };
+    case AppKnownDataType.TYPE:
+      return {
+        subject: t('Build Type'),
+        value: data.build_type || null,
+      };
+    case AppKnownDataType.IDENTIFIER:
+      return {
+        subject: t('Build ID'),
+        value: data.app_identifier || null,
+      };
+    case AppKnownDataType.NAME:
+      return {
+        subject: t('Build Name'),
+        value: data.app_name || null,
+      };
+    case AppKnownDataType.VERSION:
+      return {
+        subject: t('Version'),
+        value: data.app_version || null,
+      };
+    case AppKnownDataType.BUILD:
+      return {
+        subject: t('App Build'),
+        value: data.app_build || null,
+      };
+    default:
+      return undefined;
+  }
+}
+
+export default getAppKnownDataDetails;
diff --git a/src/sentry/static/sentry/app/components/events/contexts/app/types.tsx b/src/sentry/static/sentry/app/components/events/contexts/app/types.tsx
new file mode 100644
index 0000000000..a0622b1472
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/contexts/app/types.tsx
@@ -0,0 +1,22 @@
+export enum AppKnownDataType {
+  ID = 'app_id',
+  START_TIME = 'app_start_time',
+  DEVICE_HASH = 'device_app_hash',
+  TYPE = 'build_type',
+  IDENTIFIER = 'app_identifier',
+  NAME = 'app_name',
+  VERSION = 'app_version',
+  BUILD = 'app_build',
+}
+
+export type AppData = {
+  type: string;
+  app_name?: string;
+  app_version?: string;
+  app_id?: string;
+  app_start_time?: string;
+  device_app_hash?: string;
+  build_type?: string;
+  app_identifier?: string;
+  app_build?: string;
+};
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
index 5daa37f2db..473b526cd5 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/device.tsx
@@ -3,8 +3,8 @@ import React from 'react';
 import ContextBlock from 'app/components/events/contexts/contextBlockV2';
 import {defined} from 'app/utils';
 
-import getDeviceKnownData from './getDeviceKnownData';
 import {DeviceData} from './types';
+import getDeviceKnownData from './getDeviceKnownData';
 
 type Props = {
   data?: DeviceData;
