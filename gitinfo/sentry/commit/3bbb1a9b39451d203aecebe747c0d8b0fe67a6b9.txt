commit 3bbb1a9b39451d203aecebe747c0d8b0fe67a6b9
Author: Dora <dora.l.chan@gmail.com>
Date:   Tue Nov 19 18:19:03 2019 -0800

    feat(discoverv2): cleaning up headers and demodalization (#15665)
    
    * changing headers
    
    * event detail grid
    
    * fixed whole width related event links
    
    * fixed media query and translation
    
    * remove import for props
    
    * fixing theme imports and landing discover header
    
    * Update src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
    
    Co-Authored-By: Alberto Leal <mail4alberto@gmail.com>
    
    * added key to discover link
    
    * rebasing and resolving conflicts
    
    * update tests/acceptance/test_organization_events_v2.py

diff --git a/src/sentry/static/sentry/app/components/inputInline.tsx b/src/sentry/static/sentry/app/components/inputInline.tsx
index fbe6926503..b9c551f247 100644
--- a/src/sentry/static/sentry/app/components/inputInline.tsx
+++ b/src/sentry/static/sentry/app/components/inputInline.tsx
@@ -190,9 +190,7 @@ const Input = styled('div')<{
   isHovering?: boolean;
   isDisabled?: boolean;
 }>`
-  min-width: 100px;
-
-  padding: ${space(0.25)} ${space(1)};
+  min-width: 40px;
   margin: 0;
   border: 1px solid ${p => (p.isHovering ? p.theme.borderDark : 'transparent')};
   outline: none;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx b/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx
index 72b0ad7e24..d41e863a99 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/breadcrumb.tsx
@@ -4,10 +4,10 @@ import {Location} from 'history';
 
 import {t} from 'app/locale';
 import {Event, Organization} from 'app/types';
-import PageHeading from 'app/components/pageHeading';
 import BetaTag from 'app/components/betaTag';
 import Link from 'app/components/links/link';
 import InlineSvg from 'app/components/inlineSvg';
+import space from 'app/styles/space';
 
 import EventView from './eventView';
 
@@ -17,78 +17,108 @@ type Props = {
   organization: Organization;
   location: Location;
 };
+
 class DiscoverBreadcrumb extends React.Component<Props> {
   static defaultProps = {
     event: undefined,
   };
 
   getCrumbs(): React.ReactNode {
-    const {eventView, event, organization} = this.props;
+    const {eventView, event, organization, location} = this.props;
     const crumbs: React.ReactNode[] = [];
 
     if (eventView && eventView.isValid()) {
-      const target = {
+      const eventTarget = {
         pathname: `/organizations/${organization.slug}/eventsv2/`,
         query: eventView.generateQueryStringObject(),
       };
 
+      const discoverTarget = {
+        pathname: `/organizations/${organization.slug}/eventsv2/`,
+        query: {
+          ...location.query,
+          ...eventView.generateBlankQueryStringObject(),
+          ...eventView.getGlobalSelection(),
+        },
+      };
+
+      crumbs.push(
+        <BreadcrumbItem to={discoverTarget} key="eventview-home">
+          {t('Discover')}
+        </BreadcrumbItem>
+      );
+
       crumbs.push(
         <span key="eventview-sep">
-          <InlineSvg height="20px" width="20px" src="icon-chevron-right" />
+          <StyledIcon src="icon-chevron-right" />
         </span>
       );
+
       crumbs.push(
-        <CrumbLink to={target} key="eventview-link">
+        <BreadcrumbItem to={eventTarget} key="eventview-link">
           {eventView.name}
-        </CrumbLink>
+        </BreadcrumbItem>
       );
     }
 
     if (event) {
       crumbs.push(
         <span key="event-sep">
-          <InlineSvg height="20px" width="20px" src="icon-chevron-right" />
+          <StyledIcon src="icon-chevron-right" />
         </span>
       );
-      crumbs.push(<span key="event-name">{t('Event Detail')}</span>);
+
+      crumbs.push(<BreadcrumbItem key="event-name">{t('Event Detail')}</BreadcrumbItem>);
     }
 
     return crumbs;
   }
 
   render() {
-    const {organization, location, eventView} = this.props;
-
-    const target = {
-      pathname: `/organizations/${organization.slug}/eventsv2/`,
-      query: {
-        ...location.query,
-        ...eventView.generateBlankQueryStringObject(),
-        ...eventView.getGlobalSelection(),
-      },
-    };
+    const {eventView} = this.props;
 
     return (
-      <PageHeading>
-        <CrumbLink to={target}>{t('Discover')}</CrumbLink>
-        <BetaTagWrapper>
-          <BetaTag />
-        </BetaTagWrapper>
-        {this.getCrumbs()}
-      </PageHeading>
+      <BreadcrumbList>
+        {eventView && eventView.isValid() ? (
+          this.getCrumbs()
+        ) : (
+          <StyledHeader>{t('Discover')}</StyledHeader>
+        )}
+        <BetaTag />
+      </BreadcrumbList>
     );
   }
 }
 
-const BetaTagWrapper = styled('span')`
-  margin-right: 0.4em;
+const StyledHeader = styled('span')`
+  font-size: ${p => p.theme.headerFontSize};
+  color: ${p => p.theme.gray4};
+`;
+
+const BreadcrumbList = styled('span')`
+  display: flex;
+  align-items: center;
+  height: 40px;
 `;
 
-const CrumbLink = styled(Link)`
+const BreadcrumbItem = styled(Link)`
   color: ${p => p.theme.gray2};
-  &:hover {
-    color: ${p => p.theme.gray2};
+
+  &:nth-last-child(2) {
+    color: ${p => p.theme.gray4};
   }
+
+  &:hover,
+  &:active {
+    color: ${p => p.theme.gray3};
+  }
+`;
+
+const StyledIcon = styled(InlineSvg)`
+  color: inherit;
+  height: 12px;
+  width: 12px;
+  margin: 0 ${space(1)} ${space(0.5)} ${space(1)};
 `;
 
 export default DiscoverBreadcrumb;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 615273a4e5..9d4d80bb6a 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -5,6 +5,7 @@ import styled from 'react-emotion';
 import PropTypes from 'prop-types';
 
 import space from 'app/styles/space';
+import {t} from 'app/locale';
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {Client} from 'app/api';
 import withApi from 'app/utils/withApi';
@@ -12,7 +13,6 @@ import {getMessage, getTitle} from 'app/utils/events';
 import {Organization, Event} from 'app/types';
 import SentryTypes from 'app/sentryTypes';
 import getDynamicText from 'app/utils/getDynamicText';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
 import DateTime from 'app/components/dateTime';
 import ExternalLink from 'app/components/links/externalLink';
 import FileSize from 'app/components/fileSize';
@@ -107,12 +107,14 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
     const isGroupedView = hasAggregateField(eventView);
 
     return (
-      <ColumnGrid>
+      <ContentGrid>
         <HeaderBox>
           <EventHeader event={event} />
-          {isGroupedView && (
-            <Pagination event={event} organization={organization} eventView={eventView} />
-          )}
+        </HeaderBox>
+        {isGroupedView && (
+          <Pagination event={event} organization={organization} eventView={eventView} />
+        )}
+        <MainBox>
           {isGroupedView &&
             getDynamicText({
               value: (
@@ -125,15 +127,19 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
               ),
               fixed: 'events chart',
             })}
-        </HeaderBox>
-        <ContentColumn>
           <EventInterfaces
             event={event}
             projectId={this.projectId}
             orgId={organization.slug}
           />
-        </ContentColumn>
-        <SidebarColumn>
+        </MainBox>
+        <SidebarBox>
+          <EventMetadata
+            event={event}
+            organization={organization}
+            projectId={this.projectId}
+          />
+          <TagsTable tags={event.tags} />
           {event.groupID && (
             <LinkedIssuePreview groupId={event.groupID} eventId={event.eventID} />
           )}
@@ -145,16 +151,8 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
               eventView={eventView}
             />
           )}
-          <EventMetadata
-            event={event}
-            organization={organization}
-            projectId={this.projectId}
-          />
-          <SidebarBlock>
-            <TagsTable tags={event.tags} />
-          </SidebarBlock>
-        </SidebarColumn>
-      </ColumnGrid>
+        </SidebarBox>
+      </ContentGrid>
     );
   }
 
@@ -233,22 +231,28 @@ class EventDetailsWrapper extends React.Component<EventDetailsWrapperProps> {
 const EventHeader = (props: {event: Event}) => {
   const {title} = getTitle(props.event);
   return (
-    <div data-test-id="event-header">
-      <OverflowHeader>{title}</OverflowHeader>
-      <p>{getMessage(props.event)}</p>
-    </div>
+    <StyledEventHeader data-test-id="event-header">
+      <StyledTitle>{title}</StyledTitle>
+      <span>{getMessage(props.event)}</span>
+    </StyledEventHeader>
   );
 };
 
-const OverflowHeader = styled('h2')`
-  line-height: 1.2;
-  ${overflowEllipsis}
+const StyledEventHeader = styled('div')`
+  font-size: ${p => p.theme.headerFontSize};
+  white-space: nowrap;
+  overflow: hidden;
+  text-overflow: ellipsis;
+`;
+
+const StyledTitle = styled('span')`
+  color: ${p => p.theme.purple};
+  margin-right: ${space(1)};
 `;
 
 const MetadataContainer = styled('div')`
   display: flex;
   justify-content: space-between;
-
   color: ${p => p.theme.gray3};
   font-size: ${p => p.theme.fontSizeMedium};
 `;
@@ -268,8 +272,11 @@ const EventMetadata = (props: {
   }/json/`;
 
   return (
-    <SidebarBlock withSeparator>
-      <MetadataContainer data-test-id="event-id">ID {event.eventID}</MetadataContainer>
+    <StyledMetadata>
+      <MetadataHeading>
+        <span>{t('Event ID')}</span>
+      </MetadataHeading>
+      <MetadataContainer data-test-id="event-id">{event.eventID}</MetadataContainer>
       <MetadataContainer>
         <DateTime
           date={getDynamicText({
@@ -277,46 +284,45 @@ const EventMetadata = (props: {
             fixed: 'Dummy timestamp',
           })}
         />
-        <ExternalLink href={eventJsonUrl} className="json-link">
-          JSON (<FileSize bytes={event.size} />)
-        </ExternalLink>
       </MetadataContainer>
-    </SidebarBlock>
+      <MetadataJSON href={eventJsonUrl} className="json-link">
+        {t('Preview JSON')} (<FileSize bytes={event.size} />)
+      </MetadataJSON>
+    </StyledMetadata>
   );
 };
 
-const ColumnGrid = styled('div')`
-  display: grid;
+const MetadataJSON = styled(ExternalLink)`
+  font-size: ${p => p.theme.fontSizeMedium};
+`;
 
-  grid-template-columns: 70% 28%;
-  grid-template-rows: auto;
-  grid-column-gap: 2%;
+const MetadataHeading = styled('h6')`
+  color: ${p => p.theme.gray3};
+  margin: ${space(1)} 0;
+`;
 
-  @media (max-width: ${p => p.theme.breakpoints[1]}) {
-    grid-template-columns: 60% 38%;
-  }
+const StyledMetadata = styled('div')`
+  margin-bottom: ${space(4)};
+`;
 
-  @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    display: flex;
-    flex-direction: column;
+const ContentGrid = styled('div')`
+  @media (min-width: ${p => p.theme.breakpoints[2]}) {
+    display: grid;
+    grid-gap: ${space(2)};
+    grid-template-columns: 72% auto;
   }
 `;
 
 const HeaderBox = styled('div')`
-  grid-column: 1 / 3;
-`;
-const ContentColumn = styled('div')`
-  grid-column: 1 / 2;
+  margin-bottom: ${space(1)};
 `;
 
-const SidebarColumn = styled('div')`
-  grid-column: 2 / 3;
+const MainBox = styled('div')`
+  grid-column: 1/2;
 `;
 
-const SidebarBlock = styled('div')<{withSeparator?: boolean; theme?: any}>`
-  margin: 0 0 ${space(2)} 0;
-  padding: 0 0 ${space(2)} 0;
-  ${p => (p.withSeparator ? `border-bottom: 1px solid ${p.theme.borderLight};` : '')}
+const SidebarBox = styled('div')`
+  grid-column: 2/3;
 `;
 
 export default withApi(EventDetailsContent);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
index d97b2d9f38..ed25713928 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
@@ -64,75 +64,62 @@ const Pagination = (props: Props) => {
   const links = buildTargets(event, eventView, organization);
 
   return (
-    <Wrapper>
-      <ShadowBox>
-        <StyledLink
-          to={links.oldest}
-          disabled={links.previous === null || links.oldest === null}
-        >
-          <InlineSvg src="icon-prev" size="14px" />
-        </StyledLink>
-        <StyledLink
-          data-test-id="older-event"
-          to={links.previous}
-          disabled={links.previous === null}
-        >
-          {t('Older Event')}
-        </StyledLink>
-        <StyledLink
-          data-test-id="newer-event"
-          to={links.next}
-          disabled={links.next === null}
-        >
-          {t('Newer Event')}
-        </StyledLink>
-        <StyledLink
-          to={links.latest}
-          disabled={links.next === null || links.latest === null}
-          isLast
-        >
-          <InlineSvg src="icon-next" size="14px" />
-        </StyledLink>
-      </ShadowBox>
-    </Wrapper>
+    <Paginator>
+      <StyledIconLink
+        to={links.oldest}
+        disabled={links.previous === null || links.oldest === null}
+      >
+        <InlineSvg src="icon-prev" size="14px" />
+      </StyledIconLink>
+      <StyledTextLink
+        data-test-id="older-event"
+        to={links.previous}
+        disabled={links.previous === null}
+      >
+        {t('Older Event')}
+      </StyledTextLink>
+      <StyledTextLink
+        data-test-id="newer-event"
+        to={links.next}
+        disabled={links.next === null}
+      >
+        {t('Newer Event')}
+      </StyledTextLink>
+      <StyledIconLink
+        to={links.latest}
+        disabled={links.next === null || links.latest === null}
+        isLast
+      >
+        <InlineSvg src="icon-next" size="14px" />
+      </StyledIconLink>
+    </Paginator>
   );
 };
 
-const StyledLink = styled(Link, {
-  shouldForwardProp: isPropValid,
-})<{theme: any; disabled: boolean; isLast: boolean}>`
+const StyledTextLink = styled(Link, {shouldForwardProp: isPropValid})<{
+  theme: any;
+  disabled: boolean;
+  isLast: boolean;
+}>`
   color: ${p => (p.disabled ? p.theme.disabled : p.theme.gray3)};
   font-size: ${p => p.theme.fontSizeMedium};
-  text-align: center;
   padding: ${space(0.5)} ${space(1.5)};
+  text-align: center;
+  flex-grow: 2;
   ${p => (p.isLast ? '' : `border-right: 1px solid ${p.theme.borderDark};`)}
   ${p => (p.disabled ? 'pointer-events: none;' : '')}
-
-  @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    flex-grow: 1;
-  }
 `;
 
-const Wrapper = styled('div')`
-  display: flex;
-
-  @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    width: 100%;
-  }
+const StyledIconLink = styled(StyledTextLink, {shouldForwardProp: isPropValid})`
+  flex-grow: 1;
 `;
 
-const ShadowBox = styled('div')`
+const Paginator = styled('div')`
   display: flex;
   background: ${p => p.theme.offWhite};
   border: 1px solid ${p => p.theme.borderDark};
   border-radius: ${p => p.theme.borderRadius};
-  margin-bottom: ${space(3)};
-  box-shadow: 3px 3px 0 ${p => p.theme.offWhite}, 3px 3px 0 1px ${p => p.theme.borderDark},
-    7px 7px ${p => p.theme.offWhite}, 7px 7px 0 1px ${p => p.theme.borderDark};
-
-  @media (max-width: ${p => p.theme.breakpoints[0]}) {
-    width: 100%;
-  }
+  margin-bottom: ${space(1)};
 `;
 
 export default Pagination;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
index bfdab4c34b..0e1c5d8566 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import styled from 'react-emotion';
 import {browserHistory} from 'react-router';
 
 import {Client} from 'app/api';
@@ -9,6 +10,7 @@ import withApi from 'app/utils/withApi';
 import {addErrorMessage} from 'app/actionCreators/indicator';
 
 import InlineInput from 'app/components/inputInline';
+import space from 'app/styles/space';
 import {handleUpdateQueryName} from './savedQuery/utils';
 
 import EventView from './eventView';
@@ -77,15 +79,21 @@ class EventInputName extends React.Component<Props> {
     const {eventView} = this.props;
 
     return (
-      <InlineInput
-        ref={this.refInput}
-        name="discover2-query-name"
-        disabled={!eventView.id}
-        value={eventView.name || NAME_DEFAULT}
-        onBlur={this.onBlur}
-      />
+      <StyledHeader>
+        <InlineInput
+          ref={this.refInput}
+          name="discover2-query-name"
+          disabled={!eventView.id}
+          value={eventView.name || NAME_DEFAULT}
+          onBlur={this.onBlur}
+        />
+      </StyledHeader>
     );
   }
 }
 
+const StyledHeader = styled('div')`
+  margin-bottom: ${space(3)};
+`;
+
 export default withApi(EventInputName);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
index ebfde0a754..84a4133a78 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
@@ -180,14 +180,14 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
     const {savedQueries} = this.state;
 
     return (
-      <div>
+      <StyledInput>
         <EventInputName
           savedQueries={savedQueries}
           organization={organization}
           eventView={eventView}
           onQuerySave={this.handleQuerySave}
         />
-      </div>
+      </StyledInput>
     );
   };
 
@@ -255,6 +255,11 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
   }
 }
 
+const StyledInput = styled('span')`
+  font-size: ${p => p.theme.headerFontSize};
+  color: ${p => p.theme.gray4};
+`;
+
 const StyledActions = styled('div')`
   display: flex;
   margin-bottom: ${space(3)};
diff --git a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
index 211f6fa324..d45b7bfa40 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
@@ -8,8 +8,6 @@ import {t} from 'app/locale';
 import space from 'app/styles/space';
 import {Organization, SavedQuery} from 'app/types';
 import {trackAnalyticsEvent} from 'app/utils/analytics';
-import theme from 'app/utils/theme';
-
 import {Client} from 'app/api';
 import InlineSvg from 'app/components/inlineSvg';
 import DropdownMenu from 'app/components/dropdownMenu';
@@ -189,15 +187,15 @@ const QueryGrid = styled('div')`
   grid-template-columns: minmax(100px, 1fr);
   grid-gap: ${space(3)};
 
-  @media (min-width: ${theme.breakpoints[1]}) {
+  @media (min-width: ${p => p.theme.breakpoints[1]}) {
     grid-template-columns: repeat(2, minmax(100px, 1fr));
   }
 
-  @media (min-width: ${theme.breakpoints[2]}) {
+  @media (min-width: ${p => p.theme.breakpoints[2]}) {
     grid-template-columns: repeat(3, minmax(100px, 1fr));
   }
 
-  @media (min-width: ${theme.breakpoints[4]}) {
+  @media (min-width: ${p => p.theme.breakpoints[4]}) {
     grid-template-columns: repeat(5, minmax(100px, 1fr));
   }
 `;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx b/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
index 69e5c2f40c..a6c5b541d5 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/relatedEvents.tsx
@@ -155,6 +155,7 @@ const CardHeader = styled('div')`
 
 const EventLink = styled(Link)`
   margin-left: ${space(1)};
+  max-width: 250px;
   ${overflowEllipsis};
 `;
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
index 1174da7249..de171a869f 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
@@ -61,12 +61,12 @@ const StyledTable = styled('table')`
 
 const TagHeading = styled('h6')`
   color: ${p => p.theme.gray3};
-  margin-bottom: 16px;
+  margin: ${space(1)} 0;
 `;
 
 const StyledTr = styled('tr')`
-  &:nth-child(2n) td {
-    background: ${p => p.theme.offWhite};
+  &:nth-child(2n + 1) td {
+    background: #f4f2f7;
   }
 `;
 
diff --git a/tests/acceptance/test_organization_events_v2.py b/tests/acceptance/test_organization_events_v2.py
index bfdf4b062e..0e04a8dbb1 100644
--- a/tests/acceptance/test_organization_events_v2.py
+++ b/tests/acceptance/test_organization_events_v2.py
@@ -129,7 +129,7 @@ class OrganizationEventsV2Test(AcceptanceTestCase, SnubaTestCase):
             self.browser.element('[aria-label="{}"]'.format(event.title)).click()
             self.wait_until_loaded()
 
-            header = self.browser.element('[data-test-id="event-header"] h2')
+            header = self.browser.element('[data-test-id="event-header"] span')
             assert event_data["message"] in header.text
 
             issue_link = self.browser.element('[data-test-id="linked-issue"]')
