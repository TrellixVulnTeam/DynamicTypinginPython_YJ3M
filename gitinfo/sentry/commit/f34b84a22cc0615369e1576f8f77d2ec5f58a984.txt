commit f34b84a22cc0615369e1576f8f77d2ec5f58a984
Author: ckj <chriskjennings@gmail.com>
Date:   Mon Dec 14 12:08:35 2015 -0800

    Stub out dummy empty stream state

diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index b689a0911f..79226abde9 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -7,6 +7,7 @@ import classNames from 'classnames';
 import _ from 'underscore';
 
 import ApiMixin from '../mixins/apiMixin';
+import ProjectState from '../mixins/projectState';
 
 import GroupStore from '../stores/groupStore';
 import LoadingError from '../components/loadingError';
@@ -31,7 +32,8 @@ const Stream = React.createClass({
     Reflux.listenTo(GroupStore, 'onGroupChange'),
     Reflux.listenTo(StreamTagStore, 'onStreamTagChange'),
     History,
-    ApiMixin
+    ApiMixin,
+    ProjectState
   ],
 
   getDefaultProps() {
@@ -379,6 +381,19 @@ const Stream = React.createClass({
     return (<ul className="group-list" ref="groupList">{groupNodes}</ul>);
   },
 
+  renderAwaitingEvents() {
+    return (
+      <div className="box awaiting-events">
+        <div className="wrap">
+          <div className="robot"></div>
+          <h3>Waiting for eventsâ€¦</h3>
+          <p>{t('Our error robot is waiting to')} <span className="strikethrough">{t('devour')}</span> {t('recieve your first event.')}</p>
+          <p><a className="btn btn-lg btn-primary">{t('Installation Instructions')}</a></p>
+        </div>
+      </div>
+    );
+  },
+
   renderEmpty() {
     return (
       <div className="box empty-stream">
@@ -399,12 +414,16 @@ const Stream = React.createClass({
   renderStreamBody() {
     let body;
 
+    let project = this.getProject();
+
     if (this.state.loading) {
       body = this.renderLoading();
     } else if (this.state.error) {
       body = (<LoadingError onRetry={this.fetchData} />);
     } else if (this.state.groupIds.length > 0) {
       body = this.renderGroupNodes(this.state.groupIds, this.state.statsPeriod);
+    } else if (project.firstEvent) {
+      body = this.renderAwaitingEvents();
     } else {
       body = this.renderEmpty();
     }
diff --git a/src/sentry/static/sentry/images/sentry-robot.png b/src/sentry/static/sentry/images/sentry-robot.png
new file mode 100644
index 0000000000..cc9545771a
Binary files /dev/null and b/src/sentry/static/sentry/images/sentry-robot.png differ
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 913fb73cea..bf104ac228 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -539,6 +539,42 @@
   }
 }
 
+/**
+ * Awaiting Events - Stream First Run Experience
+ * ============================================================================
+ */
+
+ .awaiting-events {
+   border-radius: 0;
+   padding: 60px 40px 60px;
+   #gradient > .vertical(#F8F9FA, #ffffff);
+   box-shadow: inset 0 1px 3px rgba(0,0,0, .08);
+   border-radius: 0 0 3px 3px;
+
+   .wrap {
+     position: relative;
+     max-width: 740px;
+     margin: 0 auto;
+     padding: 60px 0 50px 260px;
+     font-size: 18px;
+     min-height: 260px;
+   }
+
+   .robot {
+     position: absolute;
+     left: 0;
+     top: 0;
+     width: 220px;
+     height: 260px;
+     background: url(../images/sentry-robot.png);
+     background-size: cover;
+   }
+
+   .strikethrough {
+     text-decoration: line-through;
+   }
+ }
+
 /**
 * Issue list
 * ----------------------------------------------------------------------------
