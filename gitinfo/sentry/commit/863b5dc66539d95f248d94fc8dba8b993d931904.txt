commit 863b5dc66539d95f248d94fc8dba8b993d931904
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Aug 2 13:02:15 2019 -0700

    ref(ts): Convert stream utilities to TS, remove lodash (#14262)

diff --git a/src/sentry/static/sentry/app/utils/stream.jsx b/src/sentry/static/sentry/app/utils/stream.tsx
similarity index 57%
rename from src/sentry/static/sentry/app/utils/stream.jsx
rename to src/sentry/static/sentry/app/utils/stream.tsx
index 9ffd8814a8..03962d4aa9 100644
--- a/src/sentry/static/sentry/app/utils/stream.jsx
+++ b/src/sentry/static/sentry/app/utils/stream.tsx
@@ -1,5 +1,3 @@
-import _ from 'lodash';
-
 /**
  * Converts a stream query to an object representation, with
  * keys representing tag names, and the magic __text key
@@ -15,25 +13,25 @@ import _ from 'lodash';
  *    }
  */
 
-export function queryToObj(queryStr) {
-  const text = [];
+type QueryObj = {
+  [key: string]: string;
+};
+
+export function queryToObj(queryStr: string): QueryObj {
+  const text: string[] = [];
 
   const queryItems = queryStr.match(/\S+:"[^"]*"?|\S+/g);
-  const queryObj = _.reduce(
-    queryItems,
-    (obj, item) => {
-      const index = item.indexOf(':');
-      if (index === -1) {
-        text.push(item);
-      } else {
-        const tagKey = item.slice(0, index);
-        const value = item.slice(index + 1).replace(/^"|"$/g, '');
-        obj[tagKey] = value;
-      }
-      return obj;
-    },
-    {}
-  );
+  const queryObj: QueryObj = (queryItems || []).reduce((obj, item) => {
+    const index = item.indexOf(':');
+    if (index === -1) {
+      text.push(item);
+    } else {
+      const tagKey = item.slice(0, index);
+      const value = item.slice(index + 1).replace(/^"|"$/g, '');
+      obj[tagKey] = value;
+    }
+    return obj;
+  }, {});
 
   queryObj.__text = '';
   if (text.length) {
@@ -47,10 +45,10 @@ export function queryToObj(queryStr) {
  * Converts an object representation of a stream query to a string
  * (consumable by the Sentry stream HTTP API).
  */
-export function objToQuery(queryObj) {
-  const tags = _.omit(queryObj, '__text');
+export function objToQuery(queryObj: QueryObj): string {
+  const {__text, ...tags} = queryObj;
 
-  const parts = _.map(tags, (value, tagKey) => {
+  const parts = Object.entries(tags).map(([tagKey, value]) => {
     if (value.indexOf(' ') > -1) {
       value = `"${value}"`;
     }
