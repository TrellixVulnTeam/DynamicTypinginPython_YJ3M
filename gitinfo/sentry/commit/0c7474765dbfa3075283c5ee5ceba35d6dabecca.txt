commit 0c7474765dbfa3075283c5ee5ceba35d6dabecca
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 3 14:45:21 2013 -0800

    Dont require password when there isnt one

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index d12a405d70..7fee0dd10d 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -73,3 +73,7 @@ MEMBER_TYPES = (
     (MEMBER_USER, _('User')),
     (MEMBER_SYSTEM, _('System Agent')),
 )
+
+# A list of values which represent an unset or empty password on
+# a User instance.
+EMPTY_PASSWORD_VALUES = ('!', '', '$')
diff --git a/src/sentry/templates/sentry/account/settings.html b/src/sentry/templates/sentry/account/settings.html
index 605e0c5b40..1968814fb3 100644
--- a/src/sentry/templates/sentry/account/settings.html
+++ b/src/sentry/templates/sentry/account/settings.html
@@ -22,7 +22,9 @@
         {{ form|as_crispy_errors }}
         <p>{% trans "To make changes to your account, you must first enter your current password." %}</p>
         {% with form.old_password as field %}
-            {% include "sentry/partial/_form_field.html" %}
+            {% if field %}
+                {% include "sentry/partial/_form_field.html" %}
+            {% endif %}
         {% endwith %}
         <hr>
         <fieldset class="control-group">
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index 6e67959d49..78f7b73fb0 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -12,6 +12,7 @@ from django.contrib.auth.models import User
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.conf import settings
+from sentry.constants import EMPTY_PASSWORD_VALUES
 from sentry.models import UserOption
 
 
@@ -76,6 +77,10 @@ class AccountSettingsForm(forms.Form):
         self.user = user
         super(AccountSettingsForm, self).__init__(*args, **kwargs)
 
+        # HACK: dont require current password if they dont have one
+        if self.user.password in EMPTY_PASSWORD_VALUES:
+            del self.fields['old_password']
+
     def clean_old_password(self):
         """
         Validates that the old_password field is correct.
diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index 33e60d4759..7d0b56caaf 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -10,6 +10,7 @@ from django import forms
 from django.contrib.auth import authenticate
 from django.contrib.auth.models import User
 from django.utils.translation import ugettext_lazy as _
+from sentry.constants import EMPTY_PASSWORD_VALUES
 from sentry.models import Project, ProjectOption
 from sentry.permissions import can_set_public_projects
 from sentry.web.forms.fields import RadioFieldRenderer, UserField, OriginsField, \
@@ -72,6 +73,10 @@ class RemoveProjectForm(forms.Form):
             self.fields['project'].choices = [(p.pk, p.name) for p in project_list]
             self.fields['project'].widget.choices = self.fields['project'].choices
 
+        # HACK: dont require current password if they dont have one
+        if self.user.password in EMPTY_PASSWORD_VALUES:
+            del self.fields['password']
+
     def clean(self):
         data = self.cleaned_data
         if data.get('removal_type') == 2 and not data.get('project'):
diff --git a/tests/sentry/web/forms/accounts/__init__.py b/tests/sentry/web/forms/accounts/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/web/forms/accounts/tests.py b/tests/sentry/web/forms/accounts/tests.py
new file mode 100644
index 0000000000..5911886a8d
--- /dev/null
+++ b/tests/sentry/web/forms/accounts/tests.py
@@ -0,0 +1,16 @@
+from django.contrib.auth.models import User
+from sentry.web.forms.accounts import AccountSettingsForm
+from sentry.testutils import TestCase
+
+
+class AccountSettingsFormTest(TestCase):
+    def test_removes_password_on_empty_password_types(self):
+        user = User(password='!')
+        form = AccountSettingsForm(user=user)
+        self.assertNotIn('old_password', form.fields)
+
+    def test_requires_password_on_valid_accounts(self):
+        user = User()
+        user.set_password('foo')
+        form = AccountSettingsForm(user=user)
+        self.assertIn('old_password', form.fields)
diff --git a/tests/sentry/web/forms/projects/tests.py b/tests/sentry/web/forms/projects/tests.py
index e69de29bb2..810abc01ce 100644
--- a/tests/sentry/web/forms/projects/tests.py
+++ b/tests/sentry/web/forms/projects/tests.py
@@ -0,0 +1,16 @@
+from django.contrib.auth.models import User
+from sentry.web.forms.projects import RemoveProjectForm
+from sentry.testutils import TestCase
+
+
+class RemoveProjectFormTest(TestCase):
+    def test_removes_password_on_empty_password_types(self):
+        user = User(password='!')
+        form = RemoveProjectForm(user=user, project_list=[])
+        self.assertNotIn('password', form.fields)
+
+    def test_requires_password_on_valid_accounts(self):
+        user = User()
+        user.set_password('foo')
+        form = RemoveProjectForm(user=user, project_list=[])
+        self.assertIn('password', form.fields)
