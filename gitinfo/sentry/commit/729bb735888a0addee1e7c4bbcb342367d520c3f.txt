commit 729bb735888a0addee1e7c4bbcb342367d520c3f
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Sep 18 11:44:48 2018 -0700

    feat(discover): Add saved query component (#9789)
    
    It's not functional/visible yet, however this commit adds a basic component and utilities to be used for saved queries.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index c21d3a032d..c373e5b64b 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -19,6 +19,7 @@ import Conditions from './conditions';
 import Result from './result';
 import Intro from './intro';
 import EarlyAdopterMessage from './earlyAdopterMessage';
+import SavedQueries from './savedQueries';
 
 import {isValidCondition} from './conditions/utils';
 import {isValidAggregation} from './aggregations/utils';
@@ -32,8 +33,8 @@ import {
   PageTitle,
   Fieldset,
   PlaceholderText,
-  ButtonSpinner,
   SidebarLabel,
+  ButtonSpinner,
 } from './styles';
 
 import {getQueryStringFromQuery, getQueryFromQueryString} from './utils';
@@ -53,6 +54,7 @@ export default class OrganizationDiscover extends React.Component {
       chartData: null,
       chartQuery: null,
       isFetchingQuery: false,
+      showSavedQueries: false,
     };
   }
 
@@ -233,9 +235,22 @@ export default class OrganizationDiscover extends React.Component {
     });
   };
 
+  toggleSidebar = () => {
+    this.setState(state => ({
+      showSavedQueries: !state.showSavedQueries,
+    }));
+  };
+
   render() {
-    const {data, query, chartData, chartQuery, isFetchingQuery} = this.state;
-    const {queryBuilder} = this.props;
+    const {
+      data,
+      query,
+      chartData,
+      chartQuery,
+      isFetchingQuery,
+      showSavedQueries,
+    } = this.state;
+    const {queryBuilder, organization} = this.props;
 
     const currentQuery = queryBuilder.getInternal();
     const columns = queryBuilder.getColumns();
@@ -251,82 +266,99 @@ export default class OrganizationDiscover extends React.Component {
       <Discover>
         <Sidebar>
           <PageTitle>{t('Discover')}</PageTitle>
-          <SidebarHeader>
-            <SidebarTitle>{t('Query')}</SidebarTitle>
-            <Flex>
-              <Box mr={1}>
-                <Button size="xsmall" onClick={this.reset}>
-                  {t('Reset')}
-                </Button>
-              </Box>
-              <Button
-                size="xsmall"
-                onClick={this.runQuery}
-                priority="primary"
-                busy={isFetchingQuery}
-              >
-                {t('Run')}
-                {isFetchingQuery && <ButtonSpinner />}
-              </Button>
-            </Flex>
-          </SidebarHeader>
-          <Fieldset>
-            <SidebarLabel htmlFor="fields" className="control-label">
-              {t('Summarize')}
-            </SidebarLabel>
-            <SelectControl
-              name="fields"
-              multiple={true}
-              placeholder={this.getSummarizePlaceholder()}
-              options={fieldOptions}
-              value={currentQuery.fields}
-              onChange={val => this.updateField('fields', val.map(({value}) => value))}
-              clearable={true}
-            />
-          </Fieldset>
-          <Fieldset>
-            <Aggregations
-              value={currentQuery.aggregations}
-              columns={columns}
-              onChange={val => this.updateField('aggregations', val)}
-            />
-          </Fieldset>
-          <Fieldset>
-            <Conditions
-              value={currentQuery.conditions}
-              columns={columnsForConditions}
-              onChange={val => this.updateField('conditions', val)}
-            />
-          </Fieldset>
-          <Fieldset>
-            <SidebarLabel htmlFor="orderby" className="control-label">
-              {t('Order by')}
-            </SidebarLabel>
-            <SelectControl
-              name="orderby"
-              label={t('Order By')}
-              placeholder={<PlaceholderText>{t('Order by...')}</PlaceholderText>}
-              options={this.getOrderbyOptions()}
-              value={currentQuery.orderby}
-              onChange={val => this.updateField('orderby', val.value)}
-            />
-          </Fieldset>
-          <Fieldset>
-            <NumberField
-              name="limit"
-              label={<SidebarLabel>{t('Limit')}</SidebarLabel>}
-              placeholder="#"
-              value={currentQuery.limit}
-              onChange={val =>
-                this.updateField('limit', typeof val === 'number' ? val : null)}
+          {!showSavedQueries && (
+            <React.Fragment>
+              <SidebarHeader>
+                <SidebarTitle>{t('Query')}</SidebarTitle>
+                <Flex>
+                  <Box mr={1}>
+                    <Button size="xsmall" onClick={this.reset}>
+                      {t('Reset')}
+                    </Button>
+                  </Box>
+                  <Button
+                    size="xsmall"
+                    onClick={this.runQuery}
+                    priority="primary"
+                    busy={isFetchingQuery}
+                  >
+                    {t('Run')}
+                    {isFetchingQuery && <ButtonSpinner />}
+                  </Button>
+                </Flex>
+              </SidebarHeader>
+              <Fieldset>
+                <SidebarLabel htmlFor="fields" className="control-label">
+                  {t('Summarize')}
+                </SidebarLabel>
+                <SelectControl
+                  name="fields"
+                  multiple={true}
+                  placeholder={this.getSummarizePlaceholder()}
+                  options={fieldOptions}
+                  value={currentQuery.fields}
+                  onChange={val =>
+                    this.updateField('fields', val.map(({value}) => value))}
+                  clearable={true}
+                />
+              </Fieldset>
+              <Fieldset>
+                <Aggregations
+                  value={currentQuery.aggregations}
+                  columns={columns}
+                  onChange={val => this.updateField('aggregations', val)}
+                />
+              </Fieldset>
+              <Fieldset>
+                <Conditions
+                  value={currentQuery.conditions}
+                  columns={columnsForConditions}
+                  onChange={val => this.updateField('conditions', val)}
+                />
+              </Fieldset>
+              <Fieldset>
+                <SidebarLabel htmlFor="orderby" className="control-label">
+                  {t('Order by')}
+                </SidebarLabel>
+                <SelectControl
+                  name="orderby"
+                  label={t('Order By')}
+                  placeholder={<PlaceholderText>{t('Order by...')}</PlaceholderText>}
+                  options={this.getOrderbyOptions()}
+                  value={currentQuery.orderby}
+                  onChange={val => this.updateField('orderby', val.value)}
+                />
+              </Fieldset>
+              <Fieldset>
+                <NumberField
+                  name="limit"
+                  label={<SidebarLabel>{t('Limit')}</SidebarLabel>}
+                  placeholder="#"
+                  value={currentQuery.limit}
+                  onChange={val =>
+                    this.updateField('limit', typeof val === 'number' ? val : null)}
+                />
+              </Fieldset>
+              <Fieldset>
+                {/**<SidebarToggle onClick={this.toggleSidebar}>
+                  {t('View saved queries')}
+                  </SidebarToggle>**/}
+              </Fieldset>
+            </React.Fragment>
+          )}
+          {showSavedQueries && (
+            <SavedQueries
+              organization={organization}
+              queryBuilder={queryBuilder}
+              toggleSidebar={this.toggleSidebar}
             />
-          </Fieldset>
+          )}
         </Sidebar>
         <Body direction="column" flex="1">
           <TopBar>
             <MultipleProjectSelector
               value={currentQuery.projects}
-              projects={this.props.organization.projects}
+              projects={organization.projects}
               onChange={val => this.updateField('projects', val)}
               onUpdate={this.runQuery}
             />
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/savedQueries/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/savedQueries/index.jsx
new file mode 100644
index 0000000000..8f1a7de29e
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/savedQueries/index.jsx
@@ -0,0 +1,41 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+// import SentryTypes from 'app/sentryTypes';
+
+import LoadingIndicator from 'app/components/loadingIndicator';
+import {t} from 'app/locale';
+
+import {SidebarHeader, SidebarTitle, SidebarToggle, Fieldset} from '../styles';
+
+export default class SavedQueries extends React.Component {
+  static propTypes = {
+    // organization: SentryTypes.Organization.isRequired,
+    // queryBuilder: PropTypes.object.isRequired,
+    toggleSidebar: PropTypes.func.isRequired,
+  };
+
+  renderLoading() {
+    return <LoadingIndicator />;
+  }
+
+  renderEmpty() {
+    return <Fieldset>{t('No saved searches')}</Fieldset>;
+  }
+
+  render() {
+    const {toggleSidebar} = this.props;
+
+    return (
+      <React.Fragment>
+        <SidebarHeader>
+          <SidebarTitle>{t('Saved Queries')}</SidebarTitle>
+        </SidebarHeader>
+        {this.renderEmpty()}
+        <Fieldset>
+          <SidebarToggle onClick={toggleSidebar}>{t('View query builder')}</SidebarToggle>
+        </Fieldset>
+      </React.Fragment>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/savedQueries/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/savedQueries/utils.jsx
new file mode 100644
index 0000000000..9be0552084
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/savedQueries/utils.jsx
@@ -0,0 +1,30 @@
+import {Client} from 'app/api';
+
+export function fetchSavedQueries(organization) {
+  const api = new Client();
+  const endpoint = `/organizations/${organization.slug}/discover/saved/`;
+
+  return api.requestPromise(endpoint, {
+    method: 'GET',
+  });
+}
+
+export function createQuery(organization, data) {
+  const api = new Client();
+  const endpoint = `/organizations/${organization.slug}/discover/saved/`;
+
+  return api.requestPromise(endpoint, {
+    method: 'POST',
+    data,
+  });
+}
+
+export function updateQuery(organization, id, data) {
+  const api = new Client();
+  const endpoint = `/organizations/${organization.slug}/discover/saved/${id}/`;
+
+  return api.requestPromise(endpoint, {
+    method: 'POST',
+    data,
+  });
+}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
index 0330f710ff..a040ece84a 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
@@ -4,6 +4,8 @@ import {keyframes} from 'emotion';
 
 import space from 'app/styles/space';
 
+import Link from 'app/components/link';
+
 export const Discover = styled(Flex)`
   min-height: calc(100vh - 87px); /* 100% viewport height - footer height */
 
@@ -79,6 +81,11 @@ export const SidebarLabel = styled.label`
   color: ${p => p.theme.gray3};
 `;
 
+export const SidebarToggle = styled(Link)`
+  font-size: ${p => p.theme.fontSizeMedium};
+  text-decoration: underline;
+`;
+
 export const AddText = styled.span`
   font-style: italic;
   text-decoration: underline;
