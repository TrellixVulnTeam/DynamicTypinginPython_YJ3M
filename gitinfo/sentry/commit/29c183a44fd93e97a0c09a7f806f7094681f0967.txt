commit 29c183a44fd93e97a0c09a7f806f7094681f0967
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 27 14:30:10 2015 -0700

    Dont remove inactive memberships

diff --git a/src/sentry/web/forms/edit_organization_member.py b/src/sentry/web/forms/edit_organization_member.py
index eaf003dd31..5ecc31807d 100644
--- a/src/sentry/web/forms/edit_organization_member.py
+++ b/src/sentry/web/forms/edit_organization_member.py
@@ -54,6 +54,7 @@ class EditOrganizationMemberForm(forms.ModelForm):
 
         OrganizationMemberTeam.objects.filter(
             organizationmember=om,
+            is_active=True,
         ).exclude(team__in=self.cleaned_data['teams']).delete()
 
         AuditLogEntry.objects.create(
diff --git a/tests/sentry/web/frontend/test_organization_member_settings.py b/tests/sentry/web/frontend/test_organization_member_settings.py
index 80cf3d5579..0f871a9295 100644
--- a/tests/sentry/web/frontend/test_organization_member_settings.py
+++ b/tests/sentry/web/frontend/test_organization_member_settings.py
@@ -5,7 +5,7 @@ from django.core.urlresolvers import reverse
 
 from sentry.models import (
     AuditLogEntry, AuditLogEntryEvent, OrganizationMember,
-    OrganizationMemberType
+    OrganizationMemberTeam, OrganizationMemberType
 )
 from sentry.testutils import TestCase, PermissionTestCase
 
@@ -264,3 +264,47 @@ class OrganizationMemberSettingsTest(TestCase):
 
         assert resp.context['organization'] == organization
         assert resp.context['member'] == owner_om
+
+    def test_global_access_with_inactive_teams(self):
+        organization = self.create_organization(name='foo', owner=self.user)
+        team_1 = self.create_team(name='foo', organization=organization)
+        team_2 = self.create_team(name='bar', organization=organization)
+
+        user = self.create_user('bar@example.com')
+        member = OrganizationMember.objects.create(
+            organization=organization,
+            user=user,
+            type=OrganizationMemberType.MEMBER,
+            has_global_access=True,
+        )
+
+        OrganizationMemberTeam.objects.create(
+            member=member,
+            team=team_1,
+            is_active=False,
+        )
+
+        path = reverse('sentry-organization-member-settings',
+                       args=[organization.slug, member.id])
+
+        self.login_as(self.user)
+
+        resp = self.client.post(path, {
+            'has_global_access': True,
+            'type': OrganizationMemberType.MEMBER,
+        })
+
+        assert resp.status_code == 302
+
+        member = OrganizationMember.objects.get(id=member.id)
+
+        assert member.has_global_access is True
+        assert member.type == OrganizationMemberType.ADMIN
+
+        om_teams = OrganizationMemberTeam.objects.filter(
+            member=member,
+        )
+
+        assert len(om_teams) == 1
+        assert om_teams[0].is_active is False
+        assert om_teams[0].team == team_1
