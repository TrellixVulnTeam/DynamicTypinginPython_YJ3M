commit 7012bef83ede9d93400a0f646a28c5b91d324abb
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Thu Dec 6 15:59:25 2018 -0800

    feat(app-platform): Adds sentry app installations to integrations page (#10849)
    
    * refactor and add new tests

diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 17e2518639..57c9f0665f 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -14,6 +14,7 @@ import MigrationWarnings from 'app/views/organizationIntegrations/migrationWarni
 import PermissionAlert from 'app/views/settings/organization/permissionAlert';
 import ProviderRow from 'app/views/organizationIntegrations/providerRow';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import SentryAppInstallations from 'app/views/organizationIntegrations/sentryAppInstallations';
 import withOrganization from 'app/utils/withOrganization';
 
 class OrganizationIntegrations extends AsyncComponent {
@@ -32,12 +33,19 @@ class OrganizationIntegrations extends AsyncComponent {
   getEndpoints() {
     let {orgId} = this.props.params;
     const query = {plugins: ['vsts', 'github', 'bitbucket']};
-
-    return [
+    let endpoints = [
       ['config', `/organizations/${orgId}/config/integrations/`],
       ['integrations', `/organizations/${orgId}/integrations/`],
       ['plugins', `/organizations/${orgId}/plugins/`, {query}],
     ];
+    if (!this.props.organization.features.includes('internal-catchall')) {
+      return endpoints;
+    }
+    return [
+      ...endpoints,
+      ['applications', `/organizations/${orgId}/sentry-apps/`],
+      ['appInstalls', `/organizations/${orgId}/sentry-app-installations/`],
+    ];
   }
 
   // State
@@ -125,6 +133,7 @@ class OrganizationIntegrations extends AsyncComponent {
   // Rendering
 
   renderBody() {
+    const {reloading, applications, appInstalls} = this.state;
     const providers = this.providers
       .sort((a, b) => b.isInstalled - a.isInstalled)
       .map(provider => (
@@ -157,9 +166,18 @@ class OrganizationIntegrations extends AsyncComponent {
             <Box px={2} flex="1">
               {t('Integrations')}
             </Box>
-            {this.state.reloading && <StyledLoadingIndicator mini />}
+            {reloading && <StyledLoadingIndicator mini />}
           </PanelHeader>
-          <PanelBody>{providers}</PanelBody>
+          <PanelBody>
+            {providers}
+            {applications && (
+              <SentryAppInstallations
+                orgId={this.props.params.orgId}
+                installs={appInstalls}
+                applications={applications}
+              />
+            )}
+          </PanelBody>
         </Panel>
       </React.Fragment>
     );
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx
new file mode 100644
index 0000000000..5bc1b68bda
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppInstallations.jsx
@@ -0,0 +1,117 @@
+import React from 'react';
+import {groupBy} from 'lodash';
+import parseurl from 'parseurl';
+import qs from 'query-string';
+import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
+import AsyncView from 'app/views/asyncView';
+import {Client} from 'app/api';
+import SentryApplicationRow from 'app/views/settings/organizationDeveloperSettings/sentryApplicationRow';
+import {t} from 'app/locale';
+
+const api = new Client();
+
+export default class SentryAppInstallations extends AsyncView {
+  getEndpoints() {
+    return [];
+  }
+
+  getDefaultState() {
+    return {
+      installs: this.props.installs,
+      applications: this.props.applications,
+    };
+  }
+
+  redirectUser = data => {
+    const {install, app} = data;
+    const {installs} = this.state;
+
+    if (!app.redirectUrl) {
+      addSuccessMessage(t(`${app.slug} successfully installed.`));
+      this.setState({installs: [install, ...installs]});
+    } else {
+      const url = parseurl({url: app.redirectUrl});
+      // Order the query params alphabetically.
+      // Otherwise ``qs`` orders them randomly and it's impossible to test.
+      const installQuery = JSON.parse(
+        JSON.stringify({installationId: install.uuid, code: install.code})
+      );
+      const query = {...qs.parse(url.query), ...installQuery};
+      const redirectUrl = `${url.protocol}//${url.host}${url.pathname}?${qs.stringify(
+        query
+      )}`;
+      window.location.assign(redirectUrl);
+    }
+  };
+
+  install = app => {
+    const {orgId} = this.props;
+
+    const success = install => {
+      this.redirectUser({install: {...install}, app: {...app}});
+    };
+
+    const error = err => {
+      addErrorMessage(t(`Unable to install ${app.name}`));
+    };
+
+    const opts = {
+      method: 'POST',
+      data: {slug: app.slug},
+      success,
+      error,
+    };
+
+    api.request(`/organizations/${orgId}/sentry-app-installations/`, opts);
+  };
+
+  uninstall = install => {
+    const origInstalls = [...this.state.installs];
+    const installs = this.state.installs.filter(i => install.uuid != i.uuid);
+    this.setState({installs});
+
+    const success = () => {
+      addSuccessMessage(t(`${install.app.slug} successfully uninstalled.`));
+    };
+
+    const error = err => {
+      this.setState({origInstalls});
+      addErrorMessage(t(`Unable to uninstall ${install.app.name}`));
+    };
+
+    const opts = {
+      method: 'DELETE',
+      success,
+      error,
+    };
+
+    api.request(`/sentry-app-installations/${install.uuid}/`, opts);
+  };
+
+  get installsByApp() {
+    return groupBy(this.state.installs, install => install.app.slug);
+  }
+
+  renderBody() {
+    let {orgId} = this.props;
+    let isEmpty = this.state.applications.length === 0;
+
+    return (
+      <React.Fragment>
+        {!isEmpty &&
+          this.state.applications.map(app => {
+            return (
+              <SentryApplicationRow
+                key={app.uuid}
+                app={app}
+                orgId={orgId}
+                onInstall={this.install}
+                onUninstall={this.uninstall}
+                installs={this.installsByApp[app.slug]}
+              />
+            );
+          })}
+      </React.Fragment>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
index eee8b55f72..6e47187495 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/index.jsx
@@ -1,129 +1,17 @@
-import {groupBy} from 'lodash';
-import {Box, Flex} from 'grid-emotion';
 import React from 'react';
-import {Link, browserHistory} from 'react-router';
-import parseurl from 'parseurl';
-import qs from 'query-string';
-
-import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
-import {Client} from 'app/api';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
-import SentryAppAvatar from 'app/components/avatar/sentryAppAvatar';
-import PropTypes from 'prop-types';
-import {Panel, PanelItem, PanelBody, PanelHeader} from 'app/components/panels';
+import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import SentryApplicationRow from 'app/views/settings/organizationDeveloperSettings/sentryApplicationRow';
 import {t} from 'app/locale';
-import styled from 'react-emotion';
-import space from 'app/styles/space';
-
-const api = new Client();
-
-class SentryApplicationRow extends React.PureComponent {
-  static propTypes = {
-    app: PropTypes.object.isRequired,
-    orgId: PropTypes.string.isRequired,
-    installs: PropTypes.array,
-  };
-
-  redirectUser = install => {
-    const {orgId, app} = this.props;
-    let redirectUrl = `/settings/${orgId}/integrations/`;
-
-    if (app.redirectUrl) {
-      const url = parseurl({url: app.redirectUrl});
-      // Order the query params alphabetically.
-      // Otherwise ``qs`` orders them randomly and it's impossible to test.
-      const installQuery = JSON.parse(
-        JSON.stringify({installationId: install.uuid, code: install.code})
-      );
-      const query = Object.assign(qs.parse(url.query), installQuery);
-      redirectUrl = `${url.protocol}//${url.host}${url.pathname}?${qs.stringify(query)}`;
-      window.location.assign(redirectUrl);
-    } else {
-      browserHistory.push(redirectUrl);
-    }
-  };
-
-  install = () => {
-    const {orgId, app} = this.props;
-
-    const success = install => {
-      addSuccessMessage(t(`${app.slug} successfully installed.`));
-      this.redirectUser(install);
-    };
-
-    const error = err => {
-      addErrorMessage(err.responseJSON);
-    };
-
-    const opts = {
-      method: 'POST',
-      data: {slug: app.slug},
-      success,
-      error,
-    };
-
-    api.request(`/organizations/${orgId}/sentry-app-installations/`, opts);
-  };
-
-  render() {
-    let {app, orgId, installs} = this.props;
-    let btnClassName = 'btn btn-default';
-
-    return (
-      <SentryAppItem>
-        <Flex>
-          <SentryAppAvatar size={36} sentryApp={app} />
-          <SentryAppBox>
-            <SentryAppName>
-              <StyledLink to={`/settings/${orgId}/developer-settings/${app.slug}/`}>
-                {app.name}
-              </StyledLink>
-            </SentryAppName>
-            <Status published={app.status === 'published'} />
-          </SentryAppBox>
-        </Flex>
-
-        <StyledButtonGroup>
-          <Box>
-            <StyledInstallButton
-              onClick={this.install}
-              size="small"
-              className="btn btn-default"
-              disabled={installs && installs.length > 0}
-            >
-              {t('Install')}
-            </StyledInstallButton>
-          </Box>
-
-          <Box>
-            <Button
-              icon="icon-trash"
-              size="small"
-              onClick={() => {}}
-              className={btnClassName}
-            />
-          </Box>
-        </StyledButtonGroup>
-      </SentryAppItem>
-    );
-  }
-}
 
 export default class OrganizationDeveloperSettings extends AsyncView {
   getEndpoints() {
     let {orgId} = this.props.params;
 
-    return [
-      ['applications', `/organizations/${orgId}/sentry-apps/`],
-      ['installs', `/organizations/${orgId}/sentry-app-installations/`],
-    ];
-  }
-
-  get installsByApp() {
-    return groupBy(this.state.installs, install => install.app.slug);
+    return [['applications', `/organizations/${orgId}/sentry-apps/`]];
   }
 
   renderBody() {
@@ -154,7 +42,7 @@ export default class OrganizationDeveloperSettings extends AsyncView {
                     key={app.uuid}
                     app={app}
                     orgId={orgId}
-                    installs={this.installsByApp[app.slug]}
+                    showPublishStatus={true}
                   />
                 );
               })
@@ -167,43 +55,3 @@ export default class OrganizationDeveloperSettings extends AsyncView {
     );
   }
 }
-
-const StyledButtonGroup = styled(Flex)`
-  align-items: center;
-`;
-
-const SentryAppItem = styled(PanelItem)`
-  justify-content: space-between;
-  padding: 15px;
-`;
-
-const SentryAppBox = styled(Box)`
-  padding-left: 15px;
-  flex: 1;
-`;
-
-const SentryAppName = styled('div')`
-  margin-bottom: 3px;
-`;
-
-const StyledInstallButton = styled(props => <Button {...props}>{t('Install')}</Button>)`
-  margin-right: ${space(1)};
-`;
-
-const StyledLink = styled(Link)`
-  font-size: 22px;
-  color: ${props => props.theme.textColor};
-`;
-
-const Status = styled(({published, ...props}) => {
-  return (
-    <Flex align="center">
-      <div {...props}>{published ? t('published') : t('unpublished')}</div>
-    </Flex>
-  );
-})`
-  color: ${props => (props.published ? props.theme.success : props.theme.gray2)};
-  margin-left: ${space(0.5)};
-  font-weight: light;
-  margin-right: ${space(0.75)};
-`;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
new file mode 100644
index 0000000000..5c3b38a6b2
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
@@ -0,0 +1,182 @@
+import React from 'react';
+import {Box, Flex} from 'grid-emotion';
+import {Link} from 'react-router';
+import Button from 'app/components/button';
+import Confirm from 'app/components/confirm';
+import SentryAppAvatar from 'app/components/avatar/sentryAppAvatar';
+import PropTypes from 'prop-types';
+import SentryTypes from 'app/sentryTypes';
+import {PanelItem} from 'app/components/panels';
+import {t} from 'app/locale';
+import styled from 'react-emotion';
+import space from 'app/styles/space';
+import {withTheme} from 'emotion-theming';
+import CircleIndicator from 'app/components/circleIndicator';
+
+export default class SentryApplicationRow extends React.PureComponent {
+  static propTypes = {
+    app: SentryTypes.SentryApplication,
+    orgId: PropTypes.string.isRequired,
+    installs: PropTypes.array,
+    onInstall: PropTypes.func,
+    onUninstall: PropTypes.func,
+    showPublishStatus: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    showPublishStatus: false,
+  };
+
+  renderUninstall(install) {
+    const message = t(
+      `Are you sure you want to remove the ${install.app.slug} installation ?`
+    );
+    return (
+      <Confirm
+        message={message}
+        priority="danger"
+        onConfirm={() => this.props.onUninstall(install)}
+      >
+        <StyledButton borderless icon="icon-trash" data-test-id="sentry-app-uninstall">
+          {t('Remove')}
+        </StyledButton>
+      </Confirm>
+    );
+  }
+
+  render() {
+    const {app, orgId, installs, showPublishStatus} = this.props;
+    const isInstalled = installs && installs.length > 0;
+
+    return (
+      <SentryAppItem>
+        <StyledFlex>
+          <SentryAppAvatar size={36} sentryApp={app} />
+          <SentryAppBox>
+            <SentryAppName>
+              {showPublishStatus ? (
+                <SentryAppLink to={`/settings/${orgId}/developer-settings/${app.slug}/`}>
+                  {app.name}
+                </SentryAppLink>
+              ) : (
+                app.name
+              )}
+            </SentryAppName>
+            <SentryAppDetails>
+              {showPublishStatus ? (
+                <PublishStatus published={app.status === 'published'} />
+              ) : (
+                <React.Fragment>
+                  <Status enabled={isInstalled} />
+                  <StyledLink onClick={() => {}}>{t('Learn More')}</StyledLink>
+                </React.Fragment>
+              )}
+            </SentryAppDetails>
+          </SentryAppBox>
+          {!showPublishStatus ? (
+            <Box>
+              {!isInstalled ? (
+                <Button
+                  onClick={() => this.props.onInstall(app)}
+                  size="small"
+                  icon="icon-circle-add"
+                  className="btn btn-default"
+                >
+                  {t('Install')}
+                </Button>
+              ) : (
+                this.renderUninstall(installs[0])
+              )}
+            </Box>
+          ) : (
+            <Box>
+              <Button
+                icon="icon-trash"
+                size="small"
+                onClick={() => {}}
+                className="btn btn-default"
+              />
+            </Box>
+          )}
+        </StyledFlex>
+      </SentryAppItem>
+    );
+  }
+}
+
+const SentryAppItem = styled(PanelItem)`
+  flex-direction: column;
+  padding: 5px;
+`;
+
+const StyledFlex = styled(Flex)`
+  justify-content: center;
+  padding: 10px;
+`;
+
+const SentryAppBox = styled(Box)`
+  padding-left: 15px;
+  padding-right: 15px;
+  flex: 1;
+`;
+
+const SentryAppDetails = styled(Flex)`
+  align-items: center;
+  margin-top: 6px;
+  font-size: 0.8em;
+`;
+
+const SentryAppName = styled('div')`
+  font-weight: bold;
+`;
+
+const StyledLink = styled(Link)`
+  color: ${p => p.theme.gray2};
+`;
+
+const SentryAppLink = styled(Link)`
+  color: ${props => props.theme.textColor};
+`;
+
+const StyledButton = styled(Button)`
+  color: ${p => p.theme.gray2};
+`;
+
+const Status = styled(
+  withTheme(({enabled, ...props}) => {
+    return (
+      <Flex align="center">
+        <CircleIndicator
+          size={6}
+          color={enabled ? props.theme.success : props.theme.gray2}
+        />
+        <div {...props}>{enabled ? t('Installed') : t('Not Installed')}</div>
+      </Flex>
+    );
+  })
+)`
+  color: ${props => (props.enabled ? props.theme.success : props.theme.gray2)};
+  margin-left: ${space(0.5)};
+  font-weight: light;
+  &:after {
+    content: '|';
+    color: ${p => p.theme.gray1};
+    margin-left: ${space(0.75)};
+    font-weight: normal;
+  }
+  margin-right: ${space(0.75)};
+`;
+
+const PublishStatus = styled(
+  withTheme(({published, ...props}) => {
+    return (
+      <Flex align="center">
+        <div {...props}>{published ? t('published') : t('unpublished')}</div>
+      </Flex>
+    );
+  })
+)`
+  color: ${props => (props.published ? props.theme.success : props.theme.gray2)};
+  font-weight: light;
+  margin-right: ${space(0.75)};
+`;
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
index 41206fc50b..4a9c20dd56 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/index.spec.jsx.snap
@@ -236,21 +236,22 @@ exports[`Organization Developer Settings when Apps exist displays all Apps owned
                     }
                     key="123456123456123456123456"
                     orgId="org-slug"
+                    showPublishStatus={true}
                   >
                     <SentryAppItem>
                       <Base
-                        className="css-4rurrd-PanelItem-SentryAppItem ew9bjim1"
+                        className="css-h9gjd5-PanelItem-SentryAppItem eac2pqx0"
                       >
                         <div
-                          className="css-4rurrd-PanelItem-SentryAppItem ew9bjim1"
+                          className="css-h9gjd5-PanelItem-SentryAppItem eac2pqx0"
                           is={null}
                         >
-                          <Flex>
+                          <StyledFlex>
                             <Base
-                              className="css-sncxrr"
+                              className="css-14n192s-StyledFlex eac2pqx1"
                             >
                               <div
-                                className="css-sncxrr"
+                                className="css-14n192s-StyledFlex eac2pqx1"
                                 is={null}
                               >
                                 <SentryAppAvatar
@@ -350,149 +351,553 @@ exports[`Organization Developer Settings when Apps exist displays all Apps owned
                                 </SentryAppAvatar>
                                 <SentryAppBox>
                                   <Base
-                                    className="css-1jd8uiq-SentryAppBox ew9bjim2"
+                                    className="css-161g25b-SentryAppBox eac2pqx2"
                                   >
                                     <div
-                                      className="css-1jd8uiq-SentryAppBox ew9bjim2"
+                                      className="css-161g25b-SentryAppBox eac2pqx2"
                                       is={null}
                                     >
                                       <SentryAppName>
                                         <div
-                                          className="css-677vhf-SentryAppName ew9bjim3"
+                                          className="css-uiwo8x-SentryAppName eac2pqx4"
                                         >
-                                          <StyledLink
+                                          <SentryAppLink
                                             to="/settings/org-slug/developer-settings/sample-app/"
                                           >
                                             <Link
-                                              className="css-k5tnsd-StyledLink ew9bjim5"
+                                              className="css-gg019v-SentryAppLink eac2pqx6"
                                               onlyActiveOnIndex={false}
                                               style={Object {}}
                                               to="/settings/org-slug/developer-settings/sample-app/"
                                             >
                                               <a
-                                                className="css-k5tnsd-StyledLink ew9bjim5"
+                                                className="css-gg019v-SentryAppLink eac2pqx6"
                                                 onClick={[Function]}
                                                 style={Object {}}
                                               >
                                                 Sample App
                                               </a>
                                             </Link>
-                                          </StyledLink>
+                                          </SentryAppLink>
                                         </div>
                                       </SentryAppName>
-                                      <Status
-                                        published={false}
-                                      >
-                                        <Component
-                                          className="css-1m055qq-Status ew9bjim6"
-                                          published={false}
+                                      <SentryAppDetails>
+                                        <Base
+                                          className="css-f0t6d-SentryAppDetails eac2pqx3"
                                         >
-                                          <Flex
-                                            align="center"
+                                          <div
+                                            className="css-f0t6d-SentryAppDetails eac2pqx3"
+                                            is={null}
                                           >
-                                            <Base
-                                              align="center"
-                                              className="css-5ipae5"
+                                            <PublishStatus
+                                              published={false}
                                             >
-                                              <div
-                                                className="css-5ipae5"
-                                                is={null}
+                                              <WithTheme(Component)
+                                                className="css-1h03aoe-PublishStatus eac2pqx9"
+                                                published={false}
                                               >
-                                                <div
-                                                  className="css-1m055qq-Status ew9bjim6"
-                                                >
-                                                  unpublished
-                                                </div>
-                                              </div>
-                                            </Base>
-                                          </Flex>
-                                        </Component>
-                                      </Status>
-                                    </div>
-                                  </Base>
-                                </SentryAppBox>
-                              </div>
-                            </Base>
-                          </Flex>
-                          <StyledButtonGroup>
-                            <Base
-                              className="css-b3hw0m-StyledButtonGroup ew9bjim0"
-                            >
-                              <div
-                                className="css-b3hw0m-StyledButtonGroup ew9bjim0"
-                                is={null}
-                              >
-                                <Box>
-                                  <Base
-                                    className="css-roynbj"
-                                  >
-                                    <div
-                                      className="css-roynbj"
-                                      is={null}
-                                    >
-                                      <StyledInstallButton
-                                        className="btn btn-default"
-                                        onClick={[Function]}
-                                        size="small"
-                                      >
-                                        <Component
-                                          className="btn btn-default css-1158k9d-StyledInstallButton ew9bjim4"
-                                          onClick={[Function]}
-                                          size="small"
-                                        >
-                                          <Button
-                                            className="btn btn-default css-1158k9d-StyledInstallButton ew9bjim4"
-                                            disabled={false}
-                                            onClick={[Function]}
-                                            size="small"
-                                          >
-                                            <StyledButton
-                                              aria-label="Install"
-                                              className="btn btn-default css-1158k9d-StyledInstallButton ew9bjim4"
-                                              disabled={false}
-                                              onClick={[Function]}
-                                              role="button"
-                                              size="small"
-                                            >
-                                              <Component
-                                                aria-label="Install"
-                                                className="btn btn-default ew9bjim4 css-bu1b4v-StyledButton-getColors-StyledInstallButton eqrebog0"
-                                                disabled={false}
-                                                onClick={[Function]}
-                                                role="button"
-                                                size="small"
-                                              >
-                                                <button
-                                                  aria-label="Install"
-                                                  className="btn btn-default ew9bjim4 css-bu1b4v-StyledButton-getColors-StyledInstallButton eqrebog0"
-                                                  disabled={false}
-                                                  onClick={[Function]}
-                                                  role="button"
-                                                  size="small"
+                                                <Component
+                                                  className="css-1h03aoe-PublishStatus eac2pqx9"
+                                                  published={false}
+                                                  theme={
+                                                    Object {
+                                                      "alert": Object {
+                                                        "attention": Object {
+                                                          "background": "#F09E71",
+                                                          "backgroundLight": "#ECBFA6",
+                                                          "border": "#D0816D",
+                                                        },
+                                                        "beta": Object {
+                                                          "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
+                                                        },
+                                                        "default": Object {
+                                                          "background": "#BDB4C7",
+                                                          "backgroundLight": "#FAF9FB",
+                                                          "border": "#E2DBE8",
+                                                        },
+                                                        "error": Object {
+                                                          "background": "#e03e2f",
+                                                          "backgroundLight": "#FDF6F5",
+                                                          "border": "#E7C0BC",
+                                                          "iconColor": "#C72516",
+                                                          "textLight": "#92635f",
+                                                        },
+                                                        "info": Object {
+                                                          "background": "#3B6ECC",
+                                                          "backgroundLight": "#F5FAFE",
+                                                          "border": "#B5D6ED",
+                                                          "iconColor": "#3B6ECC",
+                                                        },
+                                                        "success": Object {
+                                                          "background": "#57be8c",
+                                                          "backgroundLight": "#F8FCF7",
+                                                          "border": "#BBD6B3",
+                                                          "iconColor": "#3EA573",
+                                                        },
+                                                        "warn": Object {
+                                                          "background": "#ecc844",
+                                                          "backgroundLight": "#FFFDF7",
+                                                          "border": "#E1D697",
+                                                          "iconColor": "#e6bc23",
+                                                        },
+                                                        "warning": Object {
+                                                          "background": "#ecc844",
+                                                          "backgroundLight": "#FFFDF7",
+                                                          "border": "#E1D697",
+                                                          "iconColor": "#e6bc23",
+                                                        },
+                                                      },
+                                                      "background": "#fff",
+                                                      "blue": "#3B6ECC",
+                                                      "blueDark": "#2F58A3",
+                                                      "blueLight": "#628BD6",
+                                                      "borderDark": "#D1CAD8",
+                                                      "borderLight": "#E2DBE8",
+                                                      "borderLighter": "#f9f6fd",
+                                                      "borderRadius": "4px",
+                                                      "breakpoints": Array [
+                                                        "768px",
+                                                        "992px",
+                                                        "1200px",
+                                                      ],
+                                                      "button": Object {
+                                                        "borderRadius": "3px",
+                                                        "danger": Object {
+                                                          "background": "#e03e2f",
+                                                          "backgroundActive": "#bf2a1d",
+                                                          "border": "#bf2a1d",
+                                                          "borderActive": "#7d1c13",
+                                                          "color": "#FFFFFF",
+                                                        },
+                                                        "default": Object {
+                                                          "background": "#FFFFFF",
+                                                          "backgroundActive": "#FFFFFF",
+                                                          "border": "#d8d2de",
+                                                          "borderActive": "#c9c0d1",
+                                                          "color": "#2f2936",
+                                                          "colorActive": "#161319",
+                                                        },
+                                                        "disabled": Object {
+                                                          "background": "#FFFFFF",
+                                                          "backgroundActive": "#FFFFFF",
+                                                          "border": "#e3e5e6",
+                                                          "borderActive": "#e3e5e6",
+                                                          "color": "#ced3d6",
+                                                        },
+                                                        "link": Object {
+                                                          "background": "transparent",
+                                                          "backgroundActive": "transparent",
+                                                          "color": "#3B6ECC",
+                                                        },
+                                                        "primary": Object {
+                                                          "background": "#6C5FC7",
+                                                          "backgroundActive": "#4e3fb4",
+                                                          "border": "#3d328e",
+                                                          "borderActive": "#352b7b",
+                                                          "color": "#FFFFFF",
+                                                        },
+                                                        "success": Object {
+                                                          "background": "#3fa372",
+                                                          "backgroundActive": "#57be8c",
+                                                          "border": "#7ccca5",
+                                                          "borderActive": "#7ccca5",
+                                                          "color": "#FFFFFF",
+                                                        },
+                                                      },
+                                                      "charts": Object {
+                                                        "colors": Array [
+                                                          "#444674",
+                                                          "#524a7e",
+                                                          "#624d84",
+                                                          "#744f88",
+                                                          "#865189",
+                                                          "#985389",
+                                                          "#aa5488",
+                                                          "#bc5585",
+                                                          "#cd5681",
+                                                          "#df567c",
+                                                          "#e86070",
+                                                          "#ed6c64",
+                                                          "#f17959",
+                                                          "#f4854e",
+                                                          "#f59242",
+                                                          "#f59e35",
+                                                          "#f4aa27",
+                                                          "#f2b712",
+                                                        ],
+                                                        "getColorPalette": [Function],
+                                                        "previousPeriod": "#BDB4C7",
+                                                        "symbolSize": 10,
+                                                      },
+                                                      "diff": Object {
+                                                        "added": "#d8f0e4",
+                                                        "addedRow": "#f5fbf8",
+                                                        "removed": "#f7ceca",
+                                                        "removedRow": "#fcefee",
+                                                      },
+                                                      "disabled": "#ced3d6",
+                                                      "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
+                                                      "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
+                                                      "error": "#e03e2f",
+                                                      "fontSizeExtraLarge": "18px",
+                                                      "fontSizeLarge": "16px",
+                                                      "fontSizeMedium": "14px",
+                                                      "fontSizeSmall": "12px",
+                                                      "gray1": "#BDB4C7",
+                                                      "gray2": "#9585A3",
+                                                      "gray3": "#645574",
+                                                      "gray4": "#4A3E56",
+                                                      "gray5": "#302839",
+                                                      "gray6": "#AFA3BB",
+                                                      "green": "#57be8c",
+                                                      "greenDark": "#3EA573",
+                                                      "greenLight": "#71D8A6",
+                                                      "greenTransparent": "rgba(87, 190, 140, 0.5)",
+                                                      "grid": 8,
+                                                      "headerFontSize": "22px",
+                                                      "offWhite": "#FAF9FB",
+                                                      "offWhite2": "#E7E1EC",
+                                                      "orange": "#ec5e44",
+                                                      "orangeDark": "#D3452B",
+                                                      "orangeLight": "#FF785E",
+                                                      "pink": "#F868BC",
+                                                      "pinkDark": "#DF4FA3",
+                                                      "pinkLight": "#FF82D6",
+                                                      "purple": "#6C5FC7",
+                                                      "purple2": "#6f617c",
+                                                      "purpleDark": "#5346AE",
+                                                      "purpleDarkest": "#392C94",
+                                                      "purpleLight": "#8679E1",
+                                                      "purpleLightest": "#9F92FA",
+                                                      "red": "#e03e2f",
+                                                      "redDark": "#C72516",
+                                                      "redLight": "#FA5849",
+                                                      "settings": Object {
+                                                        "containerWidth": "1140px",
+                                                        "headerHeight": "115px",
+                                                        "maxCrumbWidth": "240px",
+                                                        "sidebarWidth": "210px",
+                                                      },
+                                                      "sidebar": Object {
+                                                        "background": "#2f2936",
+                                                        "badgeSize": "22px",
+                                                        "collapsedWidth": "70px",
+                                                        "color": "#9586a5",
+                                                        "divider": "#493e54",
+                                                        "expandedWidth": "220px",
+                                                        "menuSpacing": "15px",
+                                                        "mobileHeight": "54px",
+                                                        "panel": Object {
+                                                          "headerHeight": "62px",
+                                                          "width": "320px",
+                                                        },
+                                                        "smallBadgeSize": "11px",
+                                                      },
+                                                      "similarity": Object {
+                                                        "colors": Array [
+                                                          "#ec5e44",
+                                                          "#f38259",
+                                                          "#f9a66d",
+                                                          "#98b480",
+                                                          "#57be8c",
+                                                        ],
+                                                        "empty": "#e2dee6",
+                                                      },
+                                                      "success": "#57be8c",
+                                                      "text": Object {
+                                                        "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
+                                                        "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
+                                                        "lineHeightBody": "1.4",
+                                                        "lineHeightHeading": "1.15",
+                                                      },
+                                                      "textColor": "#302839",
+                                                      "white": "#FFFFFF",
+                                                      "whiteDark": "#fbfbfc",
+                                                      "yellow": "#ecc844",
+                                                      "yellowDark": "#e6bc23",
+                                                      "yellowLight": "#FFF15E",
+                                                      "yellowLightest": "#FFFDF7",
+                                                      "yellowOrange": "#f9a66d",
+                                                      "yellowOrangeDark": "#E08D54",
+                                                      "yellowOrangeLight": "#FFC087",
+                                                      "zIndex": Object {
+                                                        "dropdown": 1001,
+                                                        "dropdownAutocomplete": Object {
+                                                          "actor": 1008,
+                                                          "menu": 1007,
+                                                        },
+                                                        "header": 1000,
+                                                        "modal": 10000,
+                                                        "orgAndUserMenu": 1003,
+                                                        "sidebar": 1002,
+                                                        "toast": 10001,
+                                                      },
+                                                    }
+                                                  }
                                                 >
-                                                  <ButtonLabel
-                                                    size="small"
+                                                  <Flex
+                                                    align="center"
                                                   >
-                                                    <Component
-                                                      className="css-7ui8bl-ButtonLabel eqrebog1"
-                                                      size="small"
+                                                    <Base
+                                                      align="center"
+                                                      className="css-5ipae5"
                                                     >
-                                                      <span
-                                                        className="css-7ui8bl-ButtonLabel eqrebog1"
+                                                      <div
+                                                        className="css-5ipae5"
+                                                        is={null}
                                                       >
-                                                        Install
-                                                      </span>
-                                                    </Component>
-                                                  </ButtonLabel>
-                                                </button>
-                                              </Component>
-                                            </StyledButton>
-                                          </Button>
-                                        </Component>
-                                      </StyledInstallButton>
+                                                        <div
+                                                          className="css-1h03aoe-PublishStatus eac2pqx9"
+                                                          theme={
+                                                            Object {
+                                                              "alert": Object {
+                                                                "attention": Object {
+                                                                  "background": "#F09E71",
+                                                                  "backgroundLight": "#ECBFA6",
+                                                                  "border": "#D0816D",
+                                                                },
+                                                                "beta": Object {
+                                                                  "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
+                                                                },
+                                                                "default": Object {
+                                                                  "background": "#BDB4C7",
+                                                                  "backgroundLight": "#FAF9FB",
+                                                                  "border": "#E2DBE8",
+                                                                },
+                                                                "error": Object {
+                                                                  "background": "#e03e2f",
+                                                                  "backgroundLight": "#FDF6F5",
+                                                                  "border": "#E7C0BC",
+                                                                  "iconColor": "#C72516",
+                                                                  "textLight": "#92635f",
+                                                                },
+                                                                "info": Object {
+                                                                  "background": "#3B6ECC",
+                                                                  "backgroundLight": "#F5FAFE",
+                                                                  "border": "#B5D6ED",
+                                                                  "iconColor": "#3B6ECC",
+                                                                },
+                                                                "success": Object {
+                                                                  "background": "#57be8c",
+                                                                  "backgroundLight": "#F8FCF7",
+                                                                  "border": "#BBD6B3",
+                                                                  "iconColor": "#3EA573",
+                                                                },
+                                                                "warn": Object {
+                                                                  "background": "#ecc844",
+                                                                  "backgroundLight": "#FFFDF7",
+                                                                  "border": "#E1D697",
+                                                                  "iconColor": "#e6bc23",
+                                                                },
+                                                                "warning": Object {
+                                                                  "background": "#ecc844",
+                                                                  "backgroundLight": "#FFFDF7",
+                                                                  "border": "#E1D697",
+                                                                  "iconColor": "#e6bc23",
+                                                                },
+                                                              },
+                                                              "background": "#fff",
+                                                              "blue": "#3B6ECC",
+                                                              "blueDark": "#2F58A3",
+                                                              "blueLight": "#628BD6",
+                                                              "borderDark": "#D1CAD8",
+                                                              "borderLight": "#E2DBE8",
+                                                              "borderLighter": "#f9f6fd",
+                                                              "borderRadius": "4px",
+                                                              "breakpoints": Array [
+                                                                "768px",
+                                                                "992px",
+                                                                "1200px",
+                                                              ],
+                                                              "button": Object {
+                                                                "borderRadius": "3px",
+                                                                "danger": Object {
+                                                                  "background": "#e03e2f",
+                                                                  "backgroundActive": "#bf2a1d",
+                                                                  "border": "#bf2a1d",
+                                                                  "borderActive": "#7d1c13",
+                                                                  "color": "#FFFFFF",
+                                                                },
+                                                                "default": Object {
+                                                                  "background": "#FFFFFF",
+                                                                  "backgroundActive": "#FFFFFF",
+                                                                  "border": "#d8d2de",
+                                                                  "borderActive": "#c9c0d1",
+                                                                  "color": "#2f2936",
+                                                                  "colorActive": "#161319",
+                                                                },
+                                                                "disabled": Object {
+                                                                  "background": "#FFFFFF",
+                                                                  "backgroundActive": "#FFFFFF",
+                                                                  "border": "#e3e5e6",
+                                                                  "borderActive": "#e3e5e6",
+                                                                  "color": "#ced3d6",
+                                                                },
+                                                                "link": Object {
+                                                                  "background": "transparent",
+                                                                  "backgroundActive": "transparent",
+                                                                  "color": "#3B6ECC",
+                                                                },
+                                                                "primary": Object {
+                                                                  "background": "#6C5FC7",
+                                                                  "backgroundActive": "#4e3fb4",
+                                                                  "border": "#3d328e",
+                                                                  "borderActive": "#352b7b",
+                                                                  "color": "#FFFFFF",
+                                                                },
+                                                                "success": Object {
+                                                                  "background": "#3fa372",
+                                                                  "backgroundActive": "#57be8c",
+                                                                  "border": "#7ccca5",
+                                                                  "borderActive": "#7ccca5",
+                                                                  "color": "#FFFFFF",
+                                                                },
+                                                              },
+                                                              "charts": Object {
+                                                                "colors": Array [
+                                                                  "#444674",
+                                                                  "#524a7e",
+                                                                  "#624d84",
+                                                                  "#744f88",
+                                                                  "#865189",
+                                                                  "#985389",
+                                                                  "#aa5488",
+                                                                  "#bc5585",
+                                                                  "#cd5681",
+                                                                  "#df567c",
+                                                                  "#e86070",
+                                                                  "#ed6c64",
+                                                                  "#f17959",
+                                                                  "#f4854e",
+                                                                  "#f59242",
+                                                                  "#f59e35",
+                                                                  "#f4aa27",
+                                                                  "#f2b712",
+                                                                ],
+                                                                "getColorPalette": [Function],
+                                                                "previousPeriod": "#BDB4C7",
+                                                                "symbolSize": 10,
+                                                              },
+                                                              "diff": Object {
+                                                                "added": "#d8f0e4",
+                                                                "addedRow": "#f5fbf8",
+                                                                "removed": "#f7ceca",
+                                                                "removedRow": "#fcefee",
+                                                              },
+                                                              "disabled": "#ced3d6",
+                                                              "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
+                                                              "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
+                                                              "error": "#e03e2f",
+                                                              "fontSizeExtraLarge": "18px",
+                                                              "fontSizeLarge": "16px",
+                                                              "fontSizeMedium": "14px",
+                                                              "fontSizeSmall": "12px",
+                                                              "gray1": "#BDB4C7",
+                                                              "gray2": "#9585A3",
+                                                              "gray3": "#645574",
+                                                              "gray4": "#4A3E56",
+                                                              "gray5": "#302839",
+                                                              "gray6": "#AFA3BB",
+                                                              "green": "#57be8c",
+                                                              "greenDark": "#3EA573",
+                                                              "greenLight": "#71D8A6",
+                                                              "greenTransparent": "rgba(87, 190, 140, 0.5)",
+                                                              "grid": 8,
+                                                              "headerFontSize": "22px",
+                                                              "offWhite": "#FAF9FB",
+                                                              "offWhite2": "#E7E1EC",
+                                                              "orange": "#ec5e44",
+                                                              "orangeDark": "#D3452B",
+                                                              "orangeLight": "#FF785E",
+                                                              "pink": "#F868BC",
+                                                              "pinkDark": "#DF4FA3",
+                                                              "pinkLight": "#FF82D6",
+                                                              "purple": "#6C5FC7",
+                                                              "purple2": "#6f617c",
+                                                              "purpleDark": "#5346AE",
+                                                              "purpleDarkest": "#392C94",
+                                                              "purpleLight": "#8679E1",
+                                                              "purpleLightest": "#9F92FA",
+                                                              "red": "#e03e2f",
+                                                              "redDark": "#C72516",
+                                                              "redLight": "#FA5849",
+                                                              "settings": Object {
+                                                                "containerWidth": "1140px",
+                                                                "headerHeight": "115px",
+                                                                "maxCrumbWidth": "240px",
+                                                                "sidebarWidth": "210px",
+                                                              },
+                                                              "sidebar": Object {
+                                                                "background": "#2f2936",
+                                                                "badgeSize": "22px",
+                                                                "collapsedWidth": "70px",
+                                                                "color": "#9586a5",
+                                                                "divider": "#493e54",
+                                                                "expandedWidth": "220px",
+                                                                "menuSpacing": "15px",
+                                                                "mobileHeight": "54px",
+                                                                "panel": Object {
+                                                                  "headerHeight": "62px",
+                                                                  "width": "320px",
+                                                                },
+                                                                "smallBadgeSize": "11px",
+                                                              },
+                                                              "similarity": Object {
+                                                                "colors": Array [
+                                                                  "#ec5e44",
+                                                                  "#f38259",
+                                                                  "#f9a66d",
+                                                                  "#98b480",
+                                                                  "#57be8c",
+                                                                ],
+                                                                "empty": "#e2dee6",
+                                                              },
+                                                              "success": "#57be8c",
+                                                              "text": Object {
+                                                                "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
+                                                                "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
+                                                                "lineHeightBody": "1.4",
+                                                                "lineHeightHeading": "1.15",
+                                                              },
+                                                              "textColor": "#302839",
+                                                              "white": "#FFFFFF",
+                                                              "whiteDark": "#fbfbfc",
+                                                              "yellow": "#ecc844",
+                                                              "yellowDark": "#e6bc23",
+                                                              "yellowLight": "#FFF15E",
+                                                              "yellowLightest": "#FFFDF7",
+                                                              "yellowOrange": "#f9a66d",
+                                                              "yellowOrangeDark": "#E08D54",
+                                                              "yellowOrangeLight": "#FFC087",
+                                                              "zIndex": Object {
+                                                                "dropdown": 1001,
+                                                                "dropdownAutocomplete": Object {
+                                                                  "actor": 1008,
+                                                                  "menu": 1007,
+                                                                },
+                                                                "header": 1000,
+                                                                "modal": 10000,
+                                                                "orgAndUserMenu": 1003,
+                                                                "sidebar": 1002,
+                                                                "toast": 10001,
+                                                              },
+                                                            }
+                                                          }
+                                                        >
+                                                          unpublished
+                                                        </div>
+                                                      </div>
+                                                    </Base>
+                                                  </Flex>
+                                                </Component>
+                                              </WithTheme(Component)>
+                                            </PublishStatus>
+                                          </div>
+                                        </Base>
+                                      </SentryAppDetails>
                                     </div>
                                   </Base>
-                                </Box>
+                                </SentryAppBox>
                                 <Box>
                                   <Base
                                     className="css-roynbj"
@@ -596,7 +1001,7 @@ exports[`Organization Developer Settings when Apps exist displays all Apps owned
                                 </Box>
                               </div>
                             </Base>
-                          </StyledButtonGroup>
+                          </StyledFlex>
                         </div>
                       </Base>
                     </SentryAppItem>
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
index a2f999e42d..c8562870f9 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
@@ -1,6 +1,5 @@
 /*global global*/
 import React from 'react';
-import {browserHistory} from 'react-router';
 
 import {Client} from 'app/api';
 import {mount} from 'enzyme';
@@ -9,12 +8,6 @@ import OrganizationDeveloperSettings from 'app/views/settings/organizationDevelo
 describe('Organization Developer Settings', function() {
   let org = TestStubs.Organization();
   let sentryApp = TestStubs.SentryApp();
-  let install = TestStubs.SentryAppInstallation({
-    organization: {slug: org.slug},
-    app: {slug: sentryApp.slug, uuid: 'f4d972ba-1177-4974-943e-4800fe8c7d05'},
-    code: '50624ecb-7aac-49d6-934a-83e53677560f',
-  });
-
   let routerContext = TestStubs.routerContext();
 
   beforeEach(() => {
@@ -27,11 +20,6 @@ describe('Organization Developer Settings', function() {
       body: [],
     });
 
-    Client.addMockResponse({
-      url: `/organizations/${org.slug}/sentry-app-installations/`,
-      body: [],
-    });
-
     const wrapper = mount(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} />,
       routerContext
@@ -49,11 +37,6 @@ describe('Organization Developer Settings', function() {
       body: [sentryApp],
     });
 
-    Client.addMockResponse({
-      url: `/organizations/${org.slug}/sentry-app-installations/`,
-      body: [],
-    });
-
     let wrapper = mount(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} />,
       routerContext
@@ -62,112 +45,7 @@ describe('Organization Developer Settings', function() {
     it('displays all Apps owned by the Org', () => {
       expect(wrapper).toMatchSnapshot();
       expect(wrapper.find('SentryApplicationRow').prop('app').name).toBe('Sample App');
-    });
-
-    describe('when installing', () => {
-      beforeEach(() => {
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-app-installations/`,
-          method: 'POST',
-          body: install,
-        });
-      });
-
-      it('disallows installation when already installed', () => {
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-apps/`,
-          method: 'GET',
-          body: [sentryApp],
-        });
-
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-app-installations/`,
-          body: [install],
-          method: 'GET',
-        });
-
-        wrapper = mount(
-          <OrganizationDeveloperSettings params={{orgId: org.slug}} />,
-          routerContext
-        );
-
-        expect(wrapper.find('StyledInstallButton').prop('disabled')).toBe(true);
-      });
-
-      it('redirects the user to the Integrations page when a redirectUrl is not set', () => {
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-apps/`,
-          body: [TestStubs.SentryApp({redirectUrl: null})],
-        });
-
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-app-installations/`,
-          body: [],
-        });
-
-        wrapper = mount(
-          <OrganizationDeveloperSettings params={{orgId: org.slug}} />,
-          routerContext
-        );
-
-        wrapper.find('StyledInstallButton').simulate('click');
-
-        expect(browserHistory.push).toHaveBeenCalledWith(
-          `/settings/${org.slug}/integrations/`
-        );
-      });
-
-      it('redirects the user to the App when a redirectUrl is set', () => {
-        window.location.assign = jest.fn();
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-apps/`,
-          body: [sentryApp],
-        });
-
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-app-installations/`,
-          body: [],
-        });
-
-        wrapper = mount(
-          <OrganizationDeveloperSettings params={{orgId: org.slug}} />,
-          routerContext
-        );
-
-        wrapper.find('StyledInstallButton').simulate('click');
-
-        expect(window.location.assign).toHaveBeenCalledWith(
-          `${sentryApp.redirectUrl}?code=${install.code}&installationId=${install.uuid}`
-        );
-      });
-
-      it('handles a redirectUrl with pre-existing query params', () => {
-        window.location.assign = jest.fn();
-        const sentryAppWithQuery = TestStubs.SentryApp({
-          redirectUrl: 'https://example.com/setup?hello=1',
-        });
-
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-apps/`,
-          body: [sentryAppWithQuery],
-        });
-
-        Client.addMockResponse({
-          url: `/organizations/${org.slug}/sentry-app-installations/`,
-          body: [],
-        });
-
-        wrapper = mount(
-          <OrganizationDeveloperSettings params={{orgId: org.slug}} />,
-          routerContext
-        );
-
-        wrapper.find('StyledInstallButton').simulate('click');
-
-        expect(window.location.assign).toHaveBeenCalledWith(
-          `https://example.com/setup?code=${install.code}&hello=1&installationId=${install.uuid}`
-        );
-      });
+      // shows correct published status
     });
   });
 });
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
new file mode 100644
index 0000000000..c598edc2ef
--- /dev/null
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -0,0 +1,860 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Sentry App Installations when Apps exist displays all Apps owned by the Org 1`] = `
+<SentryAppInstallations
+  applications={
+    Array [
+      Object {
+        "clientId": "client-id",
+        "clientSecret": "client-secret",
+        "isAlertable": false,
+        "name": "Sample App",
+        "overview": "This is an app.",
+        "redirectUrl": "https://example/com/setup",
+        "scopes": Array [
+          "project:read",
+        ],
+        "slug": "sample-app",
+        "uuid": "123456123456123456123456",
+        "webhookUrl": "https://example.com/webhook",
+      },
+    ]
+  }
+  installs={Array []}
+  orgId="org-slug"
+>
+  <SideEffect(DocumentTitle)
+    title="Sentry"
+  >
+    <DocumentTitle
+      title="Sentry"
+    >
+      <SentryApplicationRow
+        app={
+          Object {
+            "clientId": "client-id",
+            "clientSecret": "client-secret",
+            "isAlertable": false,
+            "name": "Sample App",
+            "overview": "This is an app.",
+            "redirectUrl": "https://example/com/setup",
+            "scopes": Array [
+              "project:read",
+            ],
+            "slug": "sample-app",
+            "uuid": "123456123456123456123456",
+            "webhookUrl": "https://example.com/webhook",
+          }
+        }
+        key="123456123456123456123456"
+        onInstall={[Function]}
+        onUninstall={[Function]}
+        orgId="org-slug"
+        showPublishStatus={false}
+      >
+        <SentryAppItem>
+          <Base
+            className="css-h9gjd5-PanelItem-SentryAppItem eac2pqx0"
+          >
+            <div
+              className="css-h9gjd5-PanelItem-SentryAppItem eac2pqx0"
+              is={null}
+            >
+              <StyledFlex>
+                <Base
+                  className="css-14n192s-StyledFlex eac2pqx1"
+                >
+                  <div
+                    className="css-14n192s-StyledFlex eac2pqx1"
+                    is={null}
+                  >
+                    <SentryAppAvatar
+                      sentryApp={
+                        Object {
+                          "clientId": "client-id",
+                          "clientSecret": "client-secret",
+                          "isAlertable": false,
+                          "name": "Sample App",
+                          "overview": "This is an app.",
+                          "redirectUrl": "https://example/com/setup",
+                          "scopes": Array [
+                            "project:read",
+                          ],
+                          "slug": "sample-app",
+                          "uuid": "123456123456123456123456",
+                          "webhookUrl": "https://example.com/webhook",
+                        }
+                      }
+                      size={36}
+                    >
+                      <BaseAvatar
+                        hasTooltip={false}
+                        letterId="123456123456123456123456"
+                        size={36}
+                        style={Object {}}
+                        title="Sample App"
+                        tooltip="Sample App"
+                        type="letter_avatar"
+                        uploadId=""
+                        uploadPath="avatar"
+                      >
+                        <Tooltip
+                          disabled={true}
+                          title="Sample App"
+                        >
+                          <StyledBaseAvatar
+                            className="avatar"
+                            loaded={true}
+                            style={
+                              Object {
+                                "height": "36px",
+                                "width": "36px",
+                              }
+                            }
+                          >
+                            <span
+                              className="avatar css-1i62700-StyledBaseAvatar e1z0ohzl0"
+                              style={
+                                Object {
+                                  "height": "36px",
+                                  "width": "36px",
+                                }
+                              }
+                            >
+                              <LetterAvatar
+                                displayName="Sample App"
+                                identifier="123456123456123456123456"
+                              >
+                                <Svg
+                                  viewBox="0 0 120 120"
+                                >
+                                  <svg
+                                    className="css-123ijso-Svg e1knxa8x0"
+                                    viewBox="0 0 120 120"
+                                  >
+                                    <rect
+                                      fill="#4674ca"
+                                      height="120"
+                                      rx="15"
+                                      ry="15"
+                                      width="120"
+                                      x="0"
+                                      y="0"
+                                    />
+                                    <text
+                                      fill="#FFFFFF"
+                                      fontSize="65"
+                                      style={
+                                        Object {
+                                          "dominantBaseline": "central",
+                                        }
+                                      }
+                                      textAnchor="middle"
+                                      x="50%"
+                                      y="50%"
+                                    >
+                                      SA
+                                    </text>
+                                  </svg>
+                                </Svg>
+                              </LetterAvatar>
+                            </span>
+                          </StyledBaseAvatar>
+                        </Tooltip>
+                      </BaseAvatar>
+                    </SentryAppAvatar>
+                    <SentryAppBox>
+                      <Base
+                        className="css-161g25b-SentryAppBox eac2pqx2"
+                      >
+                        <div
+                          className="css-161g25b-SentryAppBox eac2pqx2"
+                          is={null}
+                        >
+                          <SentryAppName>
+                            <div
+                              className="css-uiwo8x-SentryAppName eac2pqx4"
+                            >
+                              Sample App
+                            </div>
+                          </SentryAppName>
+                          <SentryAppDetails>
+                            <Base
+                              className="css-f0t6d-SentryAppDetails eac2pqx3"
+                            >
+                              <div
+                                className="css-f0t6d-SentryAppDetails eac2pqx3"
+                                is={null}
+                              >
+                                <Status>
+                                  <WithTheme(Component)
+                                    className="css-lk5f1o-Status eac2pqx8"
+                                  >
+                                    <Component
+                                      className="css-lk5f1o-Status eac2pqx8"
+                                      theme={
+                                        Object {
+                                          "alert": Object {
+                                            "attention": Object {
+                                              "background": "#F09E71",
+                                              "backgroundLight": "#ECBFA6",
+                                              "border": "#D0816D",
+                                            },
+                                            "beta": Object {
+                                              "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
+                                            },
+                                            "default": Object {
+                                              "background": "#BDB4C7",
+                                              "backgroundLight": "#FAF9FB",
+                                              "border": "#E2DBE8",
+                                            },
+                                            "error": Object {
+                                              "background": "#e03e2f",
+                                              "backgroundLight": "#FDF6F5",
+                                              "border": "#E7C0BC",
+                                              "iconColor": "#C72516",
+                                              "textLight": "#92635f",
+                                            },
+                                            "info": Object {
+                                              "background": "#3B6ECC",
+                                              "backgroundLight": "#F5FAFE",
+                                              "border": "#B5D6ED",
+                                              "iconColor": "#3B6ECC",
+                                            },
+                                            "success": Object {
+                                              "background": "#57be8c",
+                                              "backgroundLight": "#F8FCF7",
+                                              "border": "#BBD6B3",
+                                              "iconColor": "#3EA573",
+                                            },
+                                            "warn": Object {
+                                              "background": "#ecc844",
+                                              "backgroundLight": "#FFFDF7",
+                                              "border": "#E1D697",
+                                              "iconColor": "#e6bc23",
+                                            },
+                                            "warning": Object {
+                                              "background": "#ecc844",
+                                              "backgroundLight": "#FFFDF7",
+                                              "border": "#E1D697",
+                                              "iconColor": "#e6bc23",
+                                            },
+                                          },
+                                          "background": "#fff",
+                                          "blue": "#3B6ECC",
+                                          "blueDark": "#2F58A3",
+                                          "blueLight": "#628BD6",
+                                          "borderDark": "#D1CAD8",
+                                          "borderLight": "#E2DBE8",
+                                          "borderLighter": "#f9f6fd",
+                                          "borderRadius": "4px",
+                                          "breakpoints": Array [
+                                            "768px",
+                                            "992px",
+                                            "1200px",
+                                          ],
+                                          "button": Object {
+                                            "borderRadius": "3px",
+                                            "danger": Object {
+                                              "background": "#e03e2f",
+                                              "backgroundActive": "#bf2a1d",
+                                              "border": "#bf2a1d",
+                                              "borderActive": "#7d1c13",
+                                              "color": "#FFFFFF",
+                                            },
+                                            "default": Object {
+                                              "background": "#FFFFFF",
+                                              "backgroundActive": "#FFFFFF",
+                                              "border": "#d8d2de",
+                                              "borderActive": "#c9c0d1",
+                                              "color": "#2f2936",
+                                              "colorActive": "#161319",
+                                            },
+                                            "disabled": Object {
+                                              "background": "#FFFFFF",
+                                              "backgroundActive": "#FFFFFF",
+                                              "border": "#e3e5e6",
+                                              "borderActive": "#e3e5e6",
+                                              "color": "#ced3d6",
+                                            },
+                                            "link": Object {
+                                              "background": "transparent",
+                                              "backgroundActive": "transparent",
+                                              "color": "#3B6ECC",
+                                            },
+                                            "primary": Object {
+                                              "background": "#6C5FC7",
+                                              "backgroundActive": "#4e3fb4",
+                                              "border": "#3d328e",
+                                              "borderActive": "#352b7b",
+                                              "color": "#FFFFFF",
+                                            },
+                                            "success": Object {
+                                              "background": "#3fa372",
+                                              "backgroundActive": "#57be8c",
+                                              "border": "#7ccca5",
+                                              "borderActive": "#7ccca5",
+                                              "color": "#FFFFFF",
+                                            },
+                                          },
+                                          "charts": Object {
+                                            "colors": Array [
+                                              "#444674",
+                                              "#524a7e",
+                                              "#624d84",
+                                              "#744f88",
+                                              "#865189",
+                                              "#985389",
+                                              "#aa5488",
+                                              "#bc5585",
+                                              "#cd5681",
+                                              "#df567c",
+                                              "#e86070",
+                                              "#ed6c64",
+                                              "#f17959",
+                                              "#f4854e",
+                                              "#f59242",
+                                              "#f59e35",
+                                              "#f4aa27",
+                                              "#f2b712",
+                                            ],
+                                            "getColorPalette": [Function],
+                                            "previousPeriod": "#BDB4C7",
+                                            "symbolSize": 10,
+                                          },
+                                          "diff": Object {
+                                            "added": "#d8f0e4",
+                                            "addedRow": "#f5fbf8",
+                                            "removed": "#f7ceca",
+                                            "removedRow": "#fcefee",
+                                          },
+                                          "disabled": "#ced3d6",
+                                          "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
+                                          "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
+                                          "error": "#e03e2f",
+                                          "fontSizeExtraLarge": "18px",
+                                          "fontSizeLarge": "16px",
+                                          "fontSizeMedium": "14px",
+                                          "fontSizeSmall": "12px",
+                                          "gray1": "#BDB4C7",
+                                          "gray2": "#9585A3",
+                                          "gray3": "#645574",
+                                          "gray4": "#4A3E56",
+                                          "gray5": "#302839",
+                                          "gray6": "#AFA3BB",
+                                          "green": "#57be8c",
+                                          "greenDark": "#3EA573",
+                                          "greenLight": "#71D8A6",
+                                          "greenTransparent": "rgba(87, 190, 140, 0.5)",
+                                          "grid": 8,
+                                          "headerFontSize": "22px",
+                                          "offWhite": "#FAF9FB",
+                                          "offWhite2": "#E7E1EC",
+                                          "orange": "#ec5e44",
+                                          "orangeDark": "#D3452B",
+                                          "orangeLight": "#FF785E",
+                                          "pink": "#F868BC",
+                                          "pinkDark": "#DF4FA3",
+                                          "pinkLight": "#FF82D6",
+                                          "purple": "#6C5FC7",
+                                          "purple2": "#6f617c",
+                                          "purpleDark": "#5346AE",
+                                          "purpleDarkest": "#392C94",
+                                          "purpleLight": "#8679E1",
+                                          "purpleLightest": "#9F92FA",
+                                          "red": "#e03e2f",
+                                          "redDark": "#C72516",
+                                          "redLight": "#FA5849",
+                                          "settings": Object {
+                                            "containerWidth": "1140px",
+                                            "headerHeight": "115px",
+                                            "maxCrumbWidth": "240px",
+                                            "sidebarWidth": "210px",
+                                          },
+                                          "sidebar": Object {
+                                            "background": "#2f2936",
+                                            "badgeSize": "22px",
+                                            "collapsedWidth": "70px",
+                                            "color": "#9586a5",
+                                            "divider": "#493e54",
+                                            "expandedWidth": "220px",
+                                            "menuSpacing": "15px",
+                                            "mobileHeight": "54px",
+                                            "panel": Object {
+                                              "headerHeight": "62px",
+                                              "width": "320px",
+                                            },
+                                            "smallBadgeSize": "11px",
+                                          },
+                                          "similarity": Object {
+                                            "colors": Array [
+                                              "#ec5e44",
+                                              "#f38259",
+                                              "#f9a66d",
+                                              "#98b480",
+                                              "#57be8c",
+                                            ],
+                                            "empty": "#e2dee6",
+                                          },
+                                          "success": "#57be8c",
+                                          "text": Object {
+                                            "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
+                                            "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
+                                            "lineHeightBody": "1.4",
+                                            "lineHeightHeading": "1.15",
+                                          },
+                                          "textColor": "#302839",
+                                          "white": "#FFFFFF",
+                                          "whiteDark": "#fbfbfc",
+                                          "yellow": "#ecc844",
+                                          "yellowDark": "#e6bc23",
+                                          "yellowLight": "#FFF15E",
+                                          "yellowLightest": "#FFFDF7",
+                                          "yellowOrange": "#f9a66d",
+                                          "yellowOrangeDark": "#E08D54",
+                                          "yellowOrangeLight": "#FFC087",
+                                          "zIndex": Object {
+                                            "dropdown": 1001,
+                                            "dropdownAutocomplete": Object {
+                                              "actor": 1008,
+                                              "menu": 1007,
+                                            },
+                                            "header": 1000,
+                                            "modal": 10000,
+                                            "orgAndUserMenu": 1003,
+                                            "sidebar": 1002,
+                                            "toast": 10001,
+                                          },
+                                        }
+                                      }
+                                    >
+                                      <Flex
+                                        align="center"
+                                      >
+                                        <Base
+                                          align="center"
+                                          className="css-5ipae5"
+                                        >
+                                          <div
+                                            className="css-5ipae5"
+                                            is={null}
+                                          >
+                                            <CircleIndicator
+                                              color="#9585A3"
+                                              enabled={true}
+                                              size={6}
+                                            >
+                                              <Circle
+                                                color="#9585A3"
+                                                enabled={true}
+                                                size={6}
+                                              >
+                                                <div
+                                                  className="css-xhz9xw-Circle eljqieg0"
+                                                  color="#9585A3"
+                                                  size={6}
+                                                />
+                                              </Circle>
+                                            </CircleIndicator>
+                                            <div
+                                              className="css-lk5f1o-Status eac2pqx8"
+                                              theme={
+                                                Object {
+                                                  "alert": Object {
+                                                    "attention": Object {
+                                                      "background": "#F09E71",
+                                                      "backgroundLight": "#ECBFA6",
+                                                      "border": "#D0816D",
+                                                    },
+                                                    "beta": Object {
+                                                      "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
+                                                    },
+                                                    "default": Object {
+                                                      "background": "#BDB4C7",
+                                                      "backgroundLight": "#FAF9FB",
+                                                      "border": "#E2DBE8",
+                                                    },
+                                                    "error": Object {
+                                                      "background": "#e03e2f",
+                                                      "backgroundLight": "#FDF6F5",
+                                                      "border": "#E7C0BC",
+                                                      "iconColor": "#C72516",
+                                                      "textLight": "#92635f",
+                                                    },
+                                                    "info": Object {
+                                                      "background": "#3B6ECC",
+                                                      "backgroundLight": "#F5FAFE",
+                                                      "border": "#B5D6ED",
+                                                      "iconColor": "#3B6ECC",
+                                                    },
+                                                    "success": Object {
+                                                      "background": "#57be8c",
+                                                      "backgroundLight": "#F8FCF7",
+                                                      "border": "#BBD6B3",
+                                                      "iconColor": "#3EA573",
+                                                    },
+                                                    "warn": Object {
+                                                      "background": "#ecc844",
+                                                      "backgroundLight": "#FFFDF7",
+                                                      "border": "#E1D697",
+                                                      "iconColor": "#e6bc23",
+                                                    },
+                                                    "warning": Object {
+                                                      "background": "#ecc844",
+                                                      "backgroundLight": "#FFFDF7",
+                                                      "border": "#E1D697",
+                                                      "iconColor": "#e6bc23",
+                                                    },
+                                                  },
+                                                  "background": "#fff",
+                                                  "blue": "#3B6ECC",
+                                                  "blueDark": "#2F58A3",
+                                                  "blueLight": "#628BD6",
+                                                  "borderDark": "#D1CAD8",
+                                                  "borderLight": "#E2DBE8",
+                                                  "borderLighter": "#f9f6fd",
+                                                  "borderRadius": "4px",
+                                                  "breakpoints": Array [
+                                                    "768px",
+                                                    "992px",
+                                                    "1200px",
+                                                  ],
+                                                  "button": Object {
+                                                    "borderRadius": "3px",
+                                                    "danger": Object {
+                                                      "background": "#e03e2f",
+                                                      "backgroundActive": "#bf2a1d",
+                                                      "border": "#bf2a1d",
+                                                      "borderActive": "#7d1c13",
+                                                      "color": "#FFFFFF",
+                                                    },
+                                                    "default": Object {
+                                                      "background": "#FFFFFF",
+                                                      "backgroundActive": "#FFFFFF",
+                                                      "border": "#d8d2de",
+                                                      "borderActive": "#c9c0d1",
+                                                      "color": "#2f2936",
+                                                      "colorActive": "#161319",
+                                                    },
+                                                    "disabled": Object {
+                                                      "background": "#FFFFFF",
+                                                      "backgroundActive": "#FFFFFF",
+                                                      "border": "#e3e5e6",
+                                                      "borderActive": "#e3e5e6",
+                                                      "color": "#ced3d6",
+                                                    },
+                                                    "link": Object {
+                                                      "background": "transparent",
+                                                      "backgroundActive": "transparent",
+                                                      "color": "#3B6ECC",
+                                                    },
+                                                    "primary": Object {
+                                                      "background": "#6C5FC7",
+                                                      "backgroundActive": "#4e3fb4",
+                                                      "border": "#3d328e",
+                                                      "borderActive": "#352b7b",
+                                                      "color": "#FFFFFF",
+                                                    },
+                                                    "success": Object {
+                                                      "background": "#3fa372",
+                                                      "backgroundActive": "#57be8c",
+                                                      "border": "#7ccca5",
+                                                      "borderActive": "#7ccca5",
+                                                      "color": "#FFFFFF",
+                                                    },
+                                                  },
+                                                  "charts": Object {
+                                                    "colors": Array [
+                                                      "#444674",
+                                                      "#524a7e",
+                                                      "#624d84",
+                                                      "#744f88",
+                                                      "#865189",
+                                                      "#985389",
+                                                      "#aa5488",
+                                                      "#bc5585",
+                                                      "#cd5681",
+                                                      "#df567c",
+                                                      "#e86070",
+                                                      "#ed6c64",
+                                                      "#f17959",
+                                                      "#f4854e",
+                                                      "#f59242",
+                                                      "#f59e35",
+                                                      "#f4aa27",
+                                                      "#f2b712",
+                                                    ],
+                                                    "getColorPalette": [Function],
+                                                    "previousPeriod": "#BDB4C7",
+                                                    "symbolSize": 10,
+                                                  },
+                                                  "diff": Object {
+                                                    "added": "#d8f0e4",
+                                                    "addedRow": "#f5fbf8",
+                                                    "removed": "#f7ceca",
+                                                    "removedRow": "#fcefee",
+                                                  },
+                                                  "disabled": "#ced3d6",
+                                                  "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
+                                                  "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
+                                                  "error": "#e03e2f",
+                                                  "fontSizeExtraLarge": "18px",
+                                                  "fontSizeLarge": "16px",
+                                                  "fontSizeMedium": "14px",
+                                                  "fontSizeSmall": "12px",
+                                                  "gray1": "#BDB4C7",
+                                                  "gray2": "#9585A3",
+                                                  "gray3": "#645574",
+                                                  "gray4": "#4A3E56",
+                                                  "gray5": "#302839",
+                                                  "gray6": "#AFA3BB",
+                                                  "green": "#57be8c",
+                                                  "greenDark": "#3EA573",
+                                                  "greenLight": "#71D8A6",
+                                                  "greenTransparent": "rgba(87, 190, 140, 0.5)",
+                                                  "grid": 8,
+                                                  "headerFontSize": "22px",
+                                                  "offWhite": "#FAF9FB",
+                                                  "offWhite2": "#E7E1EC",
+                                                  "orange": "#ec5e44",
+                                                  "orangeDark": "#D3452B",
+                                                  "orangeLight": "#FF785E",
+                                                  "pink": "#F868BC",
+                                                  "pinkDark": "#DF4FA3",
+                                                  "pinkLight": "#FF82D6",
+                                                  "purple": "#6C5FC7",
+                                                  "purple2": "#6f617c",
+                                                  "purpleDark": "#5346AE",
+                                                  "purpleDarkest": "#392C94",
+                                                  "purpleLight": "#8679E1",
+                                                  "purpleLightest": "#9F92FA",
+                                                  "red": "#e03e2f",
+                                                  "redDark": "#C72516",
+                                                  "redLight": "#FA5849",
+                                                  "settings": Object {
+                                                    "containerWidth": "1140px",
+                                                    "headerHeight": "115px",
+                                                    "maxCrumbWidth": "240px",
+                                                    "sidebarWidth": "210px",
+                                                  },
+                                                  "sidebar": Object {
+                                                    "background": "#2f2936",
+                                                    "badgeSize": "22px",
+                                                    "collapsedWidth": "70px",
+                                                    "color": "#9586a5",
+                                                    "divider": "#493e54",
+                                                    "expandedWidth": "220px",
+                                                    "menuSpacing": "15px",
+                                                    "mobileHeight": "54px",
+                                                    "panel": Object {
+                                                      "headerHeight": "62px",
+                                                      "width": "320px",
+                                                    },
+                                                    "smallBadgeSize": "11px",
+                                                  },
+                                                  "similarity": Object {
+                                                    "colors": Array [
+                                                      "#ec5e44",
+                                                      "#f38259",
+                                                      "#f9a66d",
+                                                      "#98b480",
+                                                      "#57be8c",
+                                                    ],
+                                                    "empty": "#e2dee6",
+                                                  },
+                                                  "success": "#57be8c",
+                                                  "text": Object {
+                                                    "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
+                                                    "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
+                                                    "lineHeightBody": "1.4",
+                                                    "lineHeightHeading": "1.15",
+                                                  },
+                                                  "textColor": "#302839",
+                                                  "white": "#FFFFFF",
+                                                  "whiteDark": "#fbfbfc",
+                                                  "yellow": "#ecc844",
+                                                  "yellowDark": "#e6bc23",
+                                                  "yellowLight": "#FFF15E",
+                                                  "yellowLightest": "#FFFDF7",
+                                                  "yellowOrange": "#f9a66d",
+                                                  "yellowOrangeDark": "#E08D54",
+                                                  "yellowOrangeLight": "#FFC087",
+                                                  "zIndex": Object {
+                                                    "dropdown": 1001,
+                                                    "dropdownAutocomplete": Object {
+                                                      "actor": 1008,
+                                                      "menu": 1007,
+                                                    },
+                                                    "header": 1000,
+                                                    "modal": 10000,
+                                                    "orgAndUserMenu": 1003,
+                                                    "sidebar": 1002,
+                                                    "toast": 10001,
+                                                  },
+                                                }
+                                              }
+                                            >
+                                              Not Installed
+                                            </div>
+                                          </div>
+                                        </Base>
+                                      </Flex>
+                                    </Component>
+                                  </WithTheme(Component)>
+                                </Status>
+                                <StyledLink
+                                  onClick={[Function]}
+                                >
+                                  <Link
+                                    className="css-u3fgwp-StyledLink eac2pqx5"
+                                    onClick={[Function]}
+                                    onlyActiveOnIndex={false}
+                                    style={Object {}}
+                                  >
+                                    <a
+                                      className="css-u3fgwp-StyledLink eac2pqx5"
+                                      onClick={[Function]}
+                                      style={Object {}}
+                                    >
+                                      Learn More
+                                    </a>
+                                  </Link>
+                                </StyledLink>
+                              </div>
+                            </Base>
+                          </SentryAppDetails>
+                        </div>
+                      </Base>
+                    </SentryAppBox>
+                    <Box>
+                      <Base
+                        className="css-roynbj"
+                      >
+                        <div
+                          className="css-roynbj"
+                          is={null}
+                        >
+                          <Button
+                            className="btn btn-default"
+                            disabled={false}
+                            icon="icon-circle-add"
+                            onClick={[Function]}
+                            size="small"
+                          >
+                            <StyledButton
+                              aria-label="Install"
+                              className="btn btn-default"
+                              disabled={false}
+                              onClick={[Function]}
+                              role="button"
+                              size="small"
+                            >
+                              <Component
+                                aria-label="Install"
+                                className="btn btn-default css-dkprmi-StyledButton-getColors eqrebog0"
+                                disabled={false}
+                                onClick={[Function]}
+                                role="button"
+                                size="small"
+                              >
+                                <button
+                                  aria-label="Install"
+                                  className="btn btn-default css-dkprmi-StyledButton-getColors eqrebog0"
+                                  disabled={false}
+                                  onClick={[Function]}
+                                  role="button"
+                                  size="small"
+                                >
+                                  <ButtonLabel
+                                    size="small"
+                                  >
+                                    <Component
+                                      className="css-7ui8bl-ButtonLabel eqrebog1"
+                                      size="small"
+                                    >
+                                      <span
+                                        className="css-7ui8bl-ButtonLabel eqrebog1"
+                                      >
+                                        <Icon
+                                          hasChildren={true}
+                                          size="small"
+                                        >
+                                          <Component
+                                            className="css-1vdnsie-Icon eqrebog2"
+                                            hasChildren={true}
+                                            size="small"
+                                          >
+                                            <span
+                                              className="css-1vdnsie-Icon eqrebog2"
+                                              size="small"
+                                            >
+                                              <StyledInlineSvg
+                                                size="12px"
+                                                src="icon-circle-add"
+                                              >
+                                                <InlineSvg
+                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                  size="12px"
+                                                  src="icon-circle-add"
+                                                >
+                                                  <StyledSvg
+                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                    height="12px"
+                                                    viewBox={Object {}}
+                                                    width="12px"
+                                                  >
+                                                    <svg
+                                                      className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                      height="12px"
+                                                      viewBox={Object {}}
+                                                      width="12px"
+                                                    >
+                                                      <use
+                                                        href="#test"
+                                                        xlinkHref="#test"
+                                                      />
+                                                    </svg>
+                                                  </StyledSvg>
+                                                </InlineSvg>
+                                              </StyledInlineSvg>
+                                            </span>
+                                          </Component>
+                                        </Icon>
+                                        Install
+                                      </span>
+                                    </Component>
+                                  </ButtonLabel>
+                                </button>
+                              </Component>
+                            </StyledButton>
+                          </Button>
+                        </div>
+                      </Base>
+                    </Box>
+                  </div>
+                </Base>
+              </StyledFlex>
+            </div>
+          </Base>
+        </SentryAppItem>
+      </SentryApplicationRow>
+    </DocumentTitle>
+  </SideEffect(DocumentTitle)>
+</SentryAppInstallations>
+`;
+
+exports[`Sentry App Installations when no Apps exist no row is displayed 1`] = `
+<SentryAppInstallations
+  applications={Array []}
+  installs={Array []}
+  orgId="org-slug"
+>
+  <SideEffect(DocumentTitle)
+    title="Sentry"
+  >
+    <DocumentTitle
+      title="Sentry"
+    />
+  </SideEffect(DocumentTitle)>
+</SentryAppInstallations>
+`;
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index 347f48e001..aa9e66d5f5 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -55,12 +55,59 @@ describe('OrganizationIntegrations', function() {
         url: `/organizations/${org.slug}/repos/?status=unmigratable`,
         body: [],
       });
+      const sentryAppsRequest = Client.addMockResponse({
+        url: `/organizations/${org.slug}/sentry-apps/`,
+        body: [],
+      });
+      const sentryInstallsRequest = Client.addMockResponse({
+        url: `/organizations/${org.slug}/sentry-app-installations/`,
+        body: [],
+      });
 
       const wrapper = mount(
         <OrganizationIntegrations organization={org} params={params} />,
         routerContext
       );
 
+      it('renders with internal-catchall', function() {
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/integrations/`,
+          body: [],
+        });
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/config/integrations/`,
+          body: {providers: [githubProvider, jiraProvider]},
+        });
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/plugins/`,
+          body: [],
+        });
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/repos/?status=unmigratable`,
+          body: [],
+        });
+        const appsRequest = Client.addMockResponse({
+          url: `/organizations/${org.slug}/sentry-apps/`,
+          body: [],
+        });
+        const installsRequest = Client.addMockResponse({
+          url: `/organizations/${org.slug}/sentry-app-installations/`,
+          body: [],
+        });
+        const organization = {...org, features: ['internal-catchall']};
+        mount(
+          <OrganizationIntegrations organization={organization} params={params} />,
+          TestStubs.routerContext([{organization}])
+        );
+        expect(appsRequest).toHaveBeenCalled();
+        expect(installsRequest).toHaveBeenCalled();
+      });
+
+      it('Does`t hit sentry apps endpoints when internal-catchall isn`t present', function() {
+        expect(sentryAppsRequest).not.toHaveBeenCalled();
+        expect(sentryInstallsRequest).not.toHaveBeenCalled();
+      });
+
       it('Displays integration providers', function() {
         expect(wrapper).toMatchSnapshot();
       });
diff --git a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx
new file mode 100644
index 0000000000..87ed440a8a
--- /dev/null
+++ b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx
@@ -0,0 +1,181 @@
+/*global global*/
+import React from 'react';
+
+import {Client} from 'app/api';
+import {mount} from 'enzyme';
+import SentryAppInstallations from 'app/views/organizationIntegrations/sentryAppInstallations';
+
+describe('Sentry App Installations', function() {
+  let org = TestStubs.Organization();
+  let sentryApp = TestStubs.SentryApp();
+  let install = TestStubs.SentryAppInstallation({
+    organization: {slug: org.slug},
+    app: {slug: sentryApp.slug, uuid: 'f4d972ba-1177-4974-943e-4800fe8c7d05'},
+    code: '50624ecb-7aac-49d6-934a-83e53677560f',
+  });
+
+  let routerContext = TestStubs.routerContext();
+
+  beforeEach(() => {
+    Client.clearMockResponses();
+  });
+
+  describe('when no Apps exist', () => {
+    const wrapper = mount(
+      <SentryAppInstallations orgId={org.slug} applications={[]} installs={[]} />,
+      routerContext
+    );
+
+    it('no row is displayed', () => {
+      expect(wrapper).toMatchSnapshot();
+      expect(wrapper.exists('SentryApplicationRow')).toBe(false);
+    });
+  });
+
+  describe('when Apps exist', () => {
+    let wrapper = mount(
+      <SentryAppInstallations
+        orgId={org.slug}
+        applications={[sentryApp]}
+        installs={[]}
+      />,
+      routerContext
+    );
+
+    it('displays all Apps owned by the Org', () => {
+      expect(wrapper).toMatchSnapshot();
+      expect(wrapper.find('SentryApplicationRow').prop('app').name).toBe('Sample App');
+    });
+
+    describe('when installing', () => {
+      beforeEach(() => {
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/sentry-app-installations/`,
+          method: 'POST',
+          body: install,
+        });
+      });
+
+      it('disallows installation when already installed', () => {
+        wrapper = mount(
+          <SentryAppInstallations
+            orgId={org.slug}
+            applications={[sentryApp]}
+            installs={[install]}
+          />,
+          routerContext
+        );
+        expect(wrapper.find('[icon="icon-trash"]').exists()).toBe(true);
+      });
+
+      it('redirects the user to the Integrations page when a redirectUrl is not set', () => {
+        wrapper = mount(
+          <SentryAppInstallations
+            orgId={org.slug}
+            applications={[TestStubs.SentryApp({redirectUrl: null})]}
+            installs={[]}
+          />,
+          routerContext
+        );
+        wrapper.find('[icon="icon-circle-add"]').simulate('click');
+        expect(wrapper.state('installs')).toEqual([install]);
+      });
+
+      it('redirects the user to the App when a redirectUrl is set', () => {
+        window.location.assign = jest.fn();
+        wrapper = mount(
+          <SentryAppInstallations
+            orgId={org.slug}
+            applications={[sentryApp]}
+            installs={[]}
+          />,
+          routerContext
+        );
+
+        wrapper.find('[icon="icon-circle-add"]').simulate('click');
+
+        expect(window.location.assign).toHaveBeenCalledWith(
+          `${sentryApp.redirectUrl}?code=${install.code}&installationId=${install.uuid}`
+        );
+      });
+
+      it('handles a redirectUrl with pre-existing query params', () => {
+        window.location.assign = jest.fn();
+        const sentryAppWithQuery = TestStubs.SentryApp({
+          redirectUrl: 'https://example.com/setup?hello=1',
+        });
+
+        wrapper = mount(
+          <SentryAppInstallations
+            orgId={org.slug}
+            applications={[sentryAppWithQuery]}
+            installs={[]}
+          />,
+          routerContext
+        );
+
+        wrapper.find('[icon="icon-circle-add"]').simulate('click');
+
+        expect(window.location.assign).toHaveBeenCalledWith(
+          `https://example.com/setup?code=${install.code}&hello=1&installationId=${install.uuid}`
+        );
+      });
+
+      describe('when installing fails', () => {
+        it('allows for installation retry', () => {
+          Client.addMockResponse({
+            url: `/organizations/${org.slug}/sentry-app-installations/`,
+            method: 'POST',
+            statusCode: 500,
+          });
+
+          wrapper = mount(
+            <SentryAppInstallations
+              orgId={org.slug}
+              applications={[sentryApp]}
+              installs={[]}
+            />,
+            routerContext
+          );
+
+          wrapper.find('[icon="icon-circle-add"]').simulate('click');
+          expect(wrapper.exists('[icon="icon-circle-add"]')).toBe(true);
+          expect(wrapper.state('installs')).toEqual([]);
+        });
+      });
+
+      describe('when uninstalling', () => {
+        it('must confirm in order to uninstall', () => {
+          const response = Client.addMockResponse({
+            url: `/sentry-app-installations/${install.uuid}/`,
+            method: 'DELETE',
+            body: [],
+          });
+
+          wrapper = mount(
+            <SentryAppInstallations
+              orgId={org.slug}
+              applications={[sentryApp]}
+              installs={[install]}
+            />,
+            routerContext
+          );
+
+          wrapper
+            .find('[data-test-id="sentry-app-uninstall"]')
+            .first()
+            .simulate('click');
+          wrapper
+            .find('[data-test-id="confirm-modal"]')
+            .first()
+            .simulate('click');
+          expect(response).toHaveBeenCalledWith(
+            `/sentry-app-installations/${install.uuid}/`,
+            expect.objectContaining({method: 'DELETE'})
+          );
+          expect(wrapper.state('installs')).toEqual([]);
+        });
+      });
+    });
+  });
+});
