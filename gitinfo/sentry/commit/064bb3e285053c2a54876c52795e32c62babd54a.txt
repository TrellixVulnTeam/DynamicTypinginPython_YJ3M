commit 064bb3e285053c2a54876c52795e32c62babd54a
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 19 10:34:45 2010 -0700

    Store a sample URL in GroupedMessage

diff --git a/sentry/manager.py b/sentry/manager.py
index 20e7a52201..6dbc2136f9 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -43,12 +43,16 @@ class SentryManager(models.Manager):
 
         mail = False
         try:
+            if 'url' in data:
+                kwargs['data'] = {'url': data['url']}
             group, created = GroupedMessage.objects.get_or_create(
                 view=view,
                 logger=logger_name,
                 checksum=checksum,
+                # we store some sample data for rendering
                 defaults=kwargs
             )
+            kwargs.pop('data', None)
             if not created:
                 GroupedMessage.objects.filter(pk=group.pk).update(
                     times_seen=models.F('times_seen') + 1,
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index e23cc44b6d..3f45c1e91c 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -546,6 +546,16 @@ class SentryTestCase(TestCase):
         self.assertEquals(last.view, 'sentry.tests.views.logging_request_exc')
         self.assertEquals(last.data['META']['REMOTE_ADDR'], '127.0.0.1')
 
+    def testSampleDataInGroup(self):
+        resp = self.client.get(reverse('sentry-log-request-exc'))
+        self.assertEquals(resp.status_code, 200)
+        
+        last = GroupedMessage.objects.get()
+        
+        self.assertEquals(last.view, 'sentry.tests.views.logging_request_exc')
+        self.assertEquals(last.data['url'], 'http://testserver' + reverse('sentry-log-request-exc'))
+
+
 class SentryViewsTest(TestCase):
     urls = 'sentry.tests.urls'
     fixtures = ['sentry/tests/fixtures/views.json']
