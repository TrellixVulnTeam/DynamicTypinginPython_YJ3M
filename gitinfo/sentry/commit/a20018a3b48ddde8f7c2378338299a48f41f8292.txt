commit a20018a3b48ddde8f7c2378338299a48f41f8292
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 26 06:24:35 2011 -0800

    request can now be passed to render functions for context; added projects dropdown to header

diff --git a/sentry/templates/sentry/layout.html b/sentry/templates/sentry/layout.html
index f68b94a1db..90dbb68fbe 100644
--- a/sentry/templates/sentry/layout.html
+++ b/sentry/templates/sentry/layout.html
@@ -39,6 +39,16 @@
  -->                        </ul>
                         <ul class="nav secondary-nav">
                             {% if request.user.is_authenticated %}
+                                {% if project_list %}
+                                    <li class="dropdown" data-dropdown="dropdown">
+                                        <a href="#" class="dropdown-toggle">{% trans "Projects" %}</a>
+                                        <ul class="dropdown-menu">
+                                            {% for p in project_list %}
+                                                <li{% if project == p %} class="active"{% endif %}><a href="{% url sentry p.pk %}">{{ p.name }}</a></li>
+                                            {% endfor %}
+                                        </ul>
+                                    </li>
+                                {% endif %}
                                 <li class="dropdown" data-dropdown="dropdown">
                                     <a href="#" class="dropdown-toggle">{% trans "Account" %}</a>
                                     <ul class="dropdown-menu">
diff --git a/sentry/web/frontend/accounts.py b/sentry/web/frontend/accounts.py
index 06680a83aa..2f95016fe0 100644
--- a/sentry/web/frontend/accounts.py
+++ b/sentry/web/frontend/accounts.py
@@ -25,9 +25,8 @@ def login(request):
     context = csrf(request)
     context.update({
         'form': form,
-        'request': request,
     })
-    return render_to_response('sentry/login.html', context)
+    return render_to_response('sentry/login.html', context, request)
 
 
 def logout(request):
diff --git a/sentry/web/frontend/events.py b/sentry/web/frontend/events.py
index 3d6e6ee32a..eb624f1f4a 100644
--- a/sentry/web/frontend/events.py
+++ b/sentry/web/frontend/events.py
@@ -47,9 +47,8 @@ def event_list(request, project):
         'event_list': event_list[offset:limit],
         'today': today,
         'any_filter': any_filter,
-        'request': request,
         'filters': filters,
-    })
+    }, request)
 
 
 @login_required
@@ -80,11 +79,10 @@ def replay_event(request, project_id, event_id):
         result = None
 
     context = {
-        'request': request,
         'event': event,
         'form': form,
         'result': result,
     }
     context.update(csrf(request))
 
-    return render_to_response('sentry/events/replay_request.html', context)
+    return render_to_response('sentry/events/replay_request.html', context, request)
diff --git a/sentry/web/frontend/generic.py b/sentry/web/frontend/generic.py
index 881b516f0d..867a652387 100644
--- a/sentry/web/frontend/generic.py
+++ b/sentry/web/frontend/generic.py
@@ -13,9 +13,7 @@ def dashboard(request):
     if len(project_list) == 1:
         return HttpResponseRedirect(reverse('sentry', kwargs={'project_id': project_list.keys()[0]}))
     return render_to_response('sentry/dashboard.html', {
-        'project_list': project_list,
-        'request': request,
-    })
+    }, request)
 
 
 def static_media(request, path):
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index de8d325425..08a67f486a 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -205,8 +205,7 @@ def search(request, project):
         'event_list': event_list,
         'query': query,
         'sort': sort,
-        'request': request,
-    })
+    }, request)
 
 
 @login_required
@@ -262,9 +261,8 @@ def group_list(request, project):
         'sort': sort,
         'sort_label': sort_label,
         'any_filter': any_filter,
-        'request': request,
         'filters': filters,
-    })
+    }, request)
 
 
 @login_required
@@ -318,8 +316,7 @@ def group(request, project, group_id):
         'event': event,
         'interface_list': filter(None, [mark_safe(i.to_html(event) or '') for i in event.interfaces.itervalues()]),
         'json_data': event.data.get('extra', {}),
-        'request': request,
-    })
+    }, request)
 
 
 @login_required
@@ -337,8 +334,7 @@ def group_event_list(request, project, group_id):
         'group': group,
         'event_list': event_list,
         'page': 'event_list',
-        'request': request
-    })
+    }, request)
 
 
 @login_required
@@ -358,8 +354,7 @@ def group_event_details(request, project, group_id, event_id):
         'event': event,
         'interface_list': filter(None, [mark_safe(i.to_html(event) or '') for i in event.interfaces.itervalues()]),
         'json_data': event.data.get('extra', {}),
-        'request': request,
-    })
+    }, request)
 
 
 @login_required
diff --git a/sentry/web/frontend/projects.py b/sentry/web/frontend/projects.py
index 266ea0a8c1..a4674c8386 100644
--- a/sentry/web/frontend/projects.py
+++ b/sentry/web/frontend/projects.py
@@ -1,5 +1,3 @@
-from functools import partial
-
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
 from django.forms.models import modelformset_factory
@@ -11,16 +9,14 @@ from sentry.web.decorators import login_required, can_manage, \
      permission_required
 from sentry.web.forms import EditProjectForm, NewProjectForm, \
      ProjectMemberForm
-from sentry.web.helpers import render_to_response, get_project_list
+from sentry.web.helpers import render_to_response
 
 
 @login_required
 def project_list(request):
     return render_to_response('sentry/projects/list.html', {
-        'project_list': get_project_list(request.user).values(),
-        'request': request,
         'can_create_projects': request.user.has_perm('sentry.add_project'),
-    })
+    }, request)
 
 
 @permission_required('sentry.add_project')
@@ -41,11 +37,9 @@ def new_project(request):
     context = csrf(request)
     context.update({
         'form': form,
-        'project_list': get_project_list(request.user).values(),
-        'request': request,
     })
 
-    return render_to_response('sentry/projects/new.html', context)
+    return render_to_response('sentry/projects/new.html', context, request)
 
 
 @login_required
@@ -86,8 +80,6 @@ def manage_project(request, project):
         'form': form,
         'pm_formset': pm_formset,
         'project': project,
-        'project_list': get_project_list(request.user).values(),
-        'request': request,
     })
 
-    return render_to_response('sentry/projects/manage.html', context)
+    return render_to_response('sentry/projects/manage.html', context, request)
diff --git a/sentry/web/helpers.py b/sentry/web/helpers.py
index 186faa0747..ab20112135 100644
--- a/sentry/web/helpers.py
+++ b/sentry/web/helpers.py
@@ -55,17 +55,22 @@ def iter_data(obj):
         yield k, v
 
 
-def render_to_string(template, context={}):
+def render_to_string(template, context={}, request=None):
     context.update({
         'has_search': False,
         'MESSAGES_PER_PAGE': settings.MESSAGES_PER_PAGE,
     })
+    if request:
+        context.update({
+            'request': request,
+            'project_list': get_project_list(request.user).values(),
+        })
 
     return loader.render_to_string(template, context)
 
 
-def render_to_response(template, context={}, status=200):
-    response = HttpResponse(render_to_string(template, context))
+def render_to_response(template, context={}, request=None, status=200):
+    response = HttpResponse(render_to_string(template, context, request))
     response.status_code = status
 
     return response
