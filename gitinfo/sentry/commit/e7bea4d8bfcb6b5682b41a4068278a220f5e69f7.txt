commit e7bea4d8bfcb6b5682b41a4068278a220f5e69f7
Author: ted kaemming <ted@kaemming.com>
Date:   Thu Mar 29 14:21:17 2018 -0700

    ref: Only expose tagstore, tsdb or search API through service wrapper (#7825)

diff --git a/bin/load-mocks b/bin/load-mocks
index 247bc87742..c126015a3d 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -17,7 +17,7 @@ from django.utils import timezone
 from loremipsum import Generator
 from pytz import utc
 
-from sentry import buffer, roles
+from sentry import buffer, roles, tsdb
 from sentry.event_manager import HashDiscarded
 from sentry.models import (
     Activity, Broadcast, Commit, CommitAuthor, CommitFileChange, Deploy,
@@ -28,7 +28,6 @@ from sentry.models import (
 )
 from sentry.signals import mocks_loaded
 from sentry.similarity import features
-from sentry.tsdb import backend as tsdb
 from sentry.utils.hashlib import md5_text
 from sentry.utils.samples import create_sample_event as _create_sample_event
 from sentry.utils.samples import generate_user
diff --git a/src/sentry/app.py b/src/sentry/app.py
index 8e6a36da10..253761dfd7 100644
--- a/src/sentry/app.py
+++ b/src/sentry/app.py
@@ -23,15 +23,15 @@ class State(local):
 
 env = State()
 
+
 # COMPAT
+from sentry import search, tsdb  # NOQA
 from .buffer import backend as buffer  # NOQA
 from .digests import backend as digests  # NOQA
 from .newsletter import backend as newsletter  # NOQA
 from .nodestore import backend as nodestore  # NOQA
 from .quotas import backend as quotas  # NOQA
 from .ratelimits import backend as ratelimiter  # NOQA
-from .search import backend as search  # NOQA
-from .tsdb import backend as tsdb  # NOQA
 
 raven = client
 
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index f4189987b0..3d63c78076 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -20,9 +20,7 @@ from django.utils.encoding import force_bytes, force_text
 from hashlib import md5
 from uuid import uuid4
 
-from sentry import eventtypes, features, buffer
-# we need a bunch of unexposed functions from tsdb
-from sentry.tsdb import backend as tsdb
+from sentry import buffer, eventtypes, features, tsdb
 from sentry.constants import (
     CLIENT_RESERVED_ATTRS, LOG_LEVELS, LOG_LEVELS_MAP, DEFAULT_LOG_LEVEL,
     DEFAULT_LOGGER_NAME, MAX_CULPRIT_LENGTH, VALID_PLATFORMS
diff --git a/src/sentry/models/groupsnooze.py b/src/sentry/models/groupsnooze.py
index b272c91edc..36c69fa938 100644
--- a/src/sentry/models/groupsnooze.py
+++ b/src/sentry/models/groupsnooze.py
@@ -71,7 +71,7 @@ class GroupSnooze(Model):
         return True
 
     def test_frequency_rates(self):
-        from sentry.tsdb import backend as tsdb
+        from sentry import tsdb
 
         end = timezone.now()
         start = end - timedelta(minutes=self.window)
@@ -88,7 +88,7 @@ class GroupSnooze(Model):
         return True
 
     def test_user_rates(self):
-        from sentry.tsdb import backend as tsdb
+        from sentry import tsdb
 
         end = timezone.now()
         start = end - timedelta(minutes=self.user_window)
diff --git a/src/sentry/rules/conditions/event_frequency.py b/src/sentry/rules/conditions/event_frequency.py
index 33aaf0cd84..cf6921a794 100644
--- a/src/sentry/rules/conditions/event_frequency.py
+++ b/src/sentry/rules/conditions/event_frequency.py
@@ -12,7 +12,7 @@ from datetime import timedelta
 from django import forms
 from django.utils import timezone
 
-from sentry.tsdb import backend as tsdb
+from sentry import tsdb
 from sentry.rules.conditions.base import EventCondition
 
 intervals = {
diff --git a/src/sentry/search/__init__.py b/src/sentry/search/__init__.py
index 03881e21f4..bdb4ded347 100644
--- a/src/sentry/search/__init__.py
+++ b/src/sentry/search/__init__.py
@@ -6,5 +6,8 @@ from sentry.utils.services import LazyServiceWrapper
 
 from .base import SearchBackend  # NOQA
 
-backend = LazyServiceWrapper(SearchBackend, settings.SENTRY_SEARCH, settings.SENTRY_SEARCH_OPTIONS)
-backend.expose(locals())
+LazyServiceWrapper(
+    SearchBackend,
+    settings.SENTRY_SEARCH,
+    settings.SENTRY_SEARCH_OPTIONS,
+).expose(locals())
diff --git a/src/sentry/search/base.py b/src/sentry/search/base.py
index 30418ed5fc..12e5cac15e 100644
--- a/src/sentry/search/base.py
+++ b/src/sentry/search/base.py
@@ -15,7 +15,9 @@ EMPTY = object()
 
 
 class SearchBackend(Service):
-    __all__ = ('query', 'validate')
+    __all__ = frozenset([
+        'query',
+    ])
 
     def __init__(self, **options):
         pass
diff --git a/src/sentry/tagstore/__init__.py b/src/sentry/tagstore/__init__.py
index f228215b90..832e600a55 100644
--- a/src/sentry/tagstore/__init__.py
+++ b/src/sentry/tagstore/__init__.py
@@ -7,7 +7,8 @@ from sentry.utils.services import LazyServiceWrapper
 from .base import TagStorage, TagKeyStatus  # NOQA
 from .exceptions import *  # NOQA
 
-backend = LazyServiceWrapper(
-    TagStorage, settings.SENTRY_TAGSTORE, settings.SENTRY_TAGSTORE_OPTIONS
-)
-backend.expose(locals())
+LazyServiceWrapper(
+    TagStorage,
+    settings.SENTRY_TAGSTORE,
+    settings.SENTRY_TAGSTORE_OPTIONS,
+).expose(locals())
diff --git a/src/sentry/tsdb/__init__.py b/src/sentry/tsdb/__init__.py
index 744c246b0f..a7d63334a7 100644
--- a/src/sentry/tsdb/__init__.py
+++ b/src/sentry/tsdb/__init__.py
@@ -7,7 +7,9 @@ from sentry.utils.services import LazyServiceWrapper
 from .base import BaseTSDB  # NOQA
 from .dummy import DummyTSDB
 
-backend = LazyServiceWrapper(
-    BaseTSDB, settings.SENTRY_TSDB, settings.SENTRY_TSDB_OPTIONS, (DummyTSDB, )
-)
-backend.expose(locals())
+LazyServiceWrapper(
+    BaseTSDB,
+    settings.SENTRY_TSDB,
+    settings.SENTRY_TSDB_OPTIONS,
+    dangerous=[DummyTSDB],
+).expose(locals())
diff --git a/src/sentry/tsdb/base.py b/src/sentry/tsdb/base.py
index 6de7465d60..cab791ba47 100644
--- a/src/sentry/tsdb/base.py
+++ b/src/sentry/tsdb/base.py
@@ -101,10 +101,38 @@ class TSDBModel(Enum):
 
 
 class BaseTSDB(Service):
-    __all__ = (
-        'models', 'incr', 'incr_multi', 'get_range', 'get_rollups', 'get_sums', 'rollup',
-        'validate', 'make_series',
-    )
+    __all__ = frozenset([
+        'get_earliest_timestamp',
+        'get_optimal_rollup_series',
+        'get_rollups',
+        'make_series',
+        'models',
+        'models_with_environment_support',
+        'rollup',
+
+        'get_range',
+        'get_sums',
+        'get_distinct_counts_series',
+        'get_distinct_counts_totals',
+        'get_distinct_counts_union',
+        'get_most_frequent',
+        'get_most_frequent_series',
+        'get_frequency_series',
+        'get_frequency_totals',
+
+        'incr',
+        'incr_multi',
+        'merge',
+        'delete',
+        'record',
+        'record_multi',
+        'merge_distinct_counts',
+        'delete_distinct_counts',
+        'record_frequency_multi',
+        'merge_frequencies',
+        'delete_frequencies',
+        'flush',
+    ])
 
     models = TSDBModel
 
@@ -458,3 +486,9 @@ class BaseTSDB(Service):
         Delete all frequency tables.
         """
         raise NotImplementedError
+
+    def flush(self):
+        """
+        Delete all data.
+        """
+        raise NotImplementedError
diff --git a/src/sentry/tsdb/dummy.py b/src/sentry/tsdb/dummy.py
index e5508c3a1f..cf4e913833 100644
--- a/src/sentry/tsdb/dummy.py
+++ b/src/sentry/tsdb/dummy.py
@@ -113,3 +113,6 @@ class DummyTSDB(BaseTSDB):
             set(environment_ids) if environment_ids is not None else set()).union(
             [None])
         self.validate_arguments(models, environment_ids)
+
+    def flush(self):
+        pass
diff --git a/src/sentry/utils/pytest/sentry.py b/src/sentry/utils/pytest/sentry.py
index 8d4e770054..8908babfa9 100644
--- a/src/sentry/utils/pytest/sentry.py
+++ b/src/sentry/utils/pytest/sentry.py
@@ -200,7 +200,7 @@ def register_extensions():
 def pytest_runtest_teardown(item):
     from sentry import tsdb
     # TODO(dcramer): this only works if this is the correct tsdb backend
-    tsdb.backend.flush()
+    tsdb.flush()
 
     from sentry.utils.redis import clusters
 
diff --git a/tests/sentry/api/endpoints/test_project_user_stats.py b/tests/sentry/api/endpoints/test_project_user_stats.py
index abb83c3ab6..c18ddc8c5e 100644
--- a/tests/sentry/api/endpoints/test_project_user_stats.py
+++ b/tests/sentry/api/endpoints/test_project_user_stats.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 from django.utils import timezone
 
-from sentry.tsdb import backend as tsdb
+from sentry import tsdb
 from sentry.models import EventUser
 from sentry.testutils import APITestCase
 
diff --git a/tests/sentry/models/test_groupsnooze.py b/tests/sentry/models/test_groupsnooze.py
index 73eb26b381..6ca615a4fb 100644
--- a/tests/sentry/models/test_groupsnooze.py
+++ b/tests/sentry/models/test_groupsnooze.py
@@ -6,10 +6,9 @@ import pytest
 
 from datetime import datetime, timedelta
 from django.utils import timezone
-from sentry import tagstore
+from sentry import tagstore, tsdb
 from sentry.testutils import TestCase
 from sentry.models import GroupSnooze
-from sentry.tsdb import backend as tsdb
 from six.moves import xrange
 
 
diff --git a/tests/sentry/rules/conditions/test_event_frequency.py b/tests/sentry/rules/conditions/test_event_frequency.py
index b595584a25..19b2b65842 100644
--- a/tests/sentry/rules/conditions/test_event_frequency.py
+++ b/tests/sentry/rules/conditions/test_event_frequency.py
@@ -7,8 +7,8 @@ from datetime import datetime, timedelta
 import mock
 import six
 
+from sentry import tsdb
 from sentry.models import Rule
-from sentry.tsdb import backend as tsdb
 from sentry.rules.conditions.event_frequency import (
     EventFrequencyCondition, EventUniqueUserFrequencyCondition
 )
