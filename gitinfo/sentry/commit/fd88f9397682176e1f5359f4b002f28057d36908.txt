commit fd88f9397682176e1f5359f4b002f28057d36908
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Mon Aug 21 15:39:42 2017 -0700

    fix list serializer ignoring child serializer errors - fixes SENTRY-45T (#5932)
    
    * fix list serializer ignoring child serializer errors - fixes SENTRY-45T
    
    * also fix release serializer test

diff --git a/src/sentry/api/endpoints/organization_release_details.py b/src/sentry/api/endpoints/organization_release_details.py
index 75474b6345..fb7c8d5eab 100644
--- a/src/sentry/api/endpoints/organization_release_details.py
+++ b/src/sentry/api/endpoints/organization_release_details.py
@@ -129,7 +129,7 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         if not self.has_release_permission(request, organization, release):
             raise PermissionDenied
 
-        serializer = ReleaseSerializer(data=request.DATA, partial=True)
+        serializer = ReleaseSerializer(data=request.DATA)
 
         if not serializer.is_valid():
             return Response(serializer.errors, status=400)
diff --git a/src/sentry/api/serializers/rest_framework/list.py b/src/sentry/api/serializers/rest_framework/list.py
index d4db4b0e9b..003dbb1a44 100644
--- a/src/sentry/api/serializers/rest_framework/list.py
+++ b/src/sentry/api/serializers/rest_framework/list.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import six
+
 from rest_framework.serializers import WritableField, ValidationError
 
 
@@ -35,6 +37,12 @@ class ListField(WritableField):
 
         return [self.child.from_native(item) for item in value]
 
+    def format_child_errors(self):
+        errors = []
+        for k, v in six.iteritems(self.child.errors):
+            errors.append('%s: %s' % (k, v[0]))
+        return ', '.join(errors)
+
     def validate(self, value):
         if not value and self.required:
             raise ValidationError(self.error_messages['required'])
@@ -44,6 +52,10 @@ class ListField(WritableField):
             raise ValidationError(msg % type(value).__name__)
 
         if self.child:
+            # the `self.child.from_native` call might have already
+            # validated/changed data so check for child errors first
+            if self.child.errors:
+                raise ValidationError(self.format_child_errors())
             for item in value:
                 if item is None and not self.allow_null:
                     raise ValidationError('Incorrect type. Expected value, but got null')
diff --git a/tests/sentry/api/endpoints/test_organization_release_details.py b/tests/sentry/api/endpoints/test_organization_release_details.py
index 93add18f36..5efb9907b3 100644
--- a/tests/sentry/api/endpoints/test_organization_release_details.py
+++ b/tests/sentry/api/endpoints/test_organization_release_details.py
@@ -580,3 +580,42 @@ class ReleaseDeleteTest(APITestCase):
         )
         assert response.status_code == 400
         assert response.data == {'refs': [u'Invalid repository names: not_a_repo']}
+
+    def test_bad_commit_list(self):
+        user = self.create_user(is_staff=False, is_superuser=False)
+        org = self.create_organization()
+        org.flags.allow_joinleave = False
+        org.save()
+
+        team = self.create_team(organization=org)
+        project = self.create_project(name='foo', organization=org, team=team)
+        Repository.objects.create(organization_id=org.id, name='a_repo')
+        release = Release.objects.create(
+            organization_id=org.id,
+            version='abcabcabc',
+        )
+
+        release.add_project(project)
+
+        self.create_member(teams=[team], user=user, organization=org)
+        self.login_as(user=user)
+
+        url = reverse(
+            'sentry-api-0-organization-release-details',
+            kwargs={
+                'organization_slug': org.slug,
+                'version': release.version,
+            }
+        )
+        response = self.client.put(
+            url,
+            data={
+                'version': '1.2.1',
+                'projects': [project.slug],
+                'commits': [{
+                    'repository': 'a_repo',
+                }]
+            }
+        )
+        assert response.status_code == 400
+        assert response.data == {'commits': ['id: This field is required.']}
diff --git a/tests/sentry/api/serializers/test_fields.py b/tests/sentry/api/serializers/test_fields.py
index e347de1b16..2bbdb9ee33 100644
--- a/tests/sentry/api/serializers/test_fields.py
+++ b/tests/sentry/api/serializers/test_fields.py
@@ -8,6 +8,7 @@ from sentry.testutils import TestCase
 
 class ChildSerializer(serializers.Serializer):
     b_field = serializers.CharField(max_length=64)
+    d_field = serializers.CharField(max_length=64)
 
 
 class DummySerializer(serializers.Serializer):
@@ -22,15 +23,17 @@ class TestListField(TestCase):
     def test_simple(self):
         data = {
             'a_field': [{
-                'b_field': 'abcdefg'
+                'b_field': 'abcdefg',
+                'd_field': 'gfedcba',
             }],
         }
 
         serializer = DummySerializer(data=data)
         assert serializer.is_valid()
-        assert serializer.data == {
+        assert serializer.object == {
             'a_field': [{
-                'b_field': 'abcdefg'
+                'b_field': 'abcdefg',
+                'd_field': 'gfedcba',
             }],
         }
 
@@ -42,5 +45,16 @@ class TestListField(TestCase):
         serializer = DummySerializer(data=data)
         assert not serializer.is_valid()
         assert serializer.errors == {
-            'a_field': [u'Incorrect type. Expected value, but got null'],
+            'a_field': ['non_field_errors: No input provided'],
         }
+
+    def test_child_validates(self):
+        data = {
+            'a_field': [{
+                'b_field': 'abcdefg'
+            }],
+        }
+
+        serializer = DummySerializer(data=data)
+        assert not serializer.is_valid()
+        assert serializer.errors == {'a_field': [u'd_field: This field is required.']}
diff --git a/tests/sentry/api/serializers/test_release.py b/tests/sentry/api/serializers/test_release.py
index 765b18617c..ac2c82c042 100644
--- a/tests/sentry/api/serializers/test_release.py
+++ b/tests/sentry/api/serializers/test_release.py
@@ -407,7 +407,7 @@ class ReleaseRefsSerializerTest(TestCase):
 
         assert not serializer.is_valid()
         assert serializer.errors == {
-            'refs': [u'Incorrect type. Expected value, but got null'],
+            'refs': ['non_field_errors: No input provided'],
         }
 
         # test good refs
