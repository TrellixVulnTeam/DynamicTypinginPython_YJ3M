commit 45f6c62426cdf5749a5f2df9f275d3bbbe15c6cd
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Mar 26 14:41:33 2018 -0700

    ref: Refactor alert rules to use form fields object
    
    Do not use dangerouslySetHTML()

diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index 4a0b12ed7a..9ca65efebd 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -72,10 +72,10 @@ const RuleEditor = createReactClass({
   },
 
   fetchRule() {
-    let {ruleId, projectId, orgId} = this.props.params;
+    const {ruleId, projectId, orgId} = this.props.params;
 
     if (ruleId) {
-      let endpoint = `/projects/${orgId}/${projectId}/rules/${ruleId}/`;
+      const endpoint = `/projects/${orgId}/${projectId}/rules/${ruleId}/`;
       this.api.request(endpoint, {
         success: rule => {
           this.setState({
@@ -84,7 +84,7 @@ const RuleEditor = createReactClass({
         },
       });
     } else {
-      let defaultRule = {
+      const defaultRule = {
         actionMatch: 'all',
         actions: [],
         conditions: [],
@@ -96,36 +96,14 @@ const RuleEditor = createReactClass({
     }
   },
 
-  serializeNode(node) {
-    let result = {};
-    $(node)
-      .find('input, select')
-      .each((_, el) => {
-        if (el.name) {
-          result[el.name] = $(el).val();
-        }
-      });
-    return result;
-  },
-
-  onSubmit(e) {
+  handleSubmit(e) {
     e.preventDefault();
-    let form = $(this.formNode);
-    let conditions = [];
-    form.find('.rule-condition-list .rule-form').each((_, el) => {
-      conditions.push(this.serializeNode(el));
-    });
-    let actions = [];
-    form.find('.rule-action-list .rule-form').each((_, el) => {
-      actions.push(this.serializeNode(el));
-    });
 
-    let data = {...this.state.rule, actions, conditions};
+    const {rule} = this.state;
+    const isNew = !rule.id;
+    const {project, organization} = this.props;
 
-    let rule = this.state.rule;
-    let project = this.props.project;
-    let org = this.props.organization;
-    let endpoint = `/projects/${org.slug}/${project.slug}/rules/`;
+    let endpoint = `/projects/${organization.slug}/${project.slug}/rules/`;
     if (rule.id) {
       endpoint += rule.id + '/';
     }
@@ -133,18 +111,18 @@ const RuleEditor = createReactClass({
     addMessage(t('Saving...'));
 
     this.api.request(endpoint, {
-      method: rule.id ? 'PUT' : 'POST',
-      data,
+      method: isNew ? 'POST' : 'PUT',
+      data: rule,
       success: resp => {
         const shouldRedirect = !rule.id;
         this.setState({error: null, loading: false, rule: resp});
         // Redirect to correct ID if /new
         if (shouldRedirect) {
           browserHistory.replace(
-            `/${org.slug}/${project.slug}/settings/alerts/rules/${resp.id}/`
+            `/${organization.slug}/${project.slug}/settings/alerts/rules/${resp.id}/`
           );
         }
-        addSuccessMessage(rule.id ? t('Updated alert rule') : t('Created alert rule'));
+        addSuccessMessage(isNew ? t('Created alert rule') : t('Updated alert rule'));
       },
       error: response => {
         this.setState({
@@ -157,7 +135,7 @@ const RuleEditor = createReactClass({
   },
 
   hasError(field) {
-    let {error} = this.state;
+    const {error} = this.state;
     if (!error) return false;
     return !!error[field];
   },
@@ -179,6 +157,38 @@ const RuleEditor = createReactClass({
     });
   },
 
+  handlePropertyChange(type) {
+    return idx => {
+      return (prop, val) => {
+        const rule = {...this.state.rule};
+        rule[type][idx][prop] = val;
+        this.setState({rule});
+      };
+    };
+  },
+
+  handleAddRow(type) {
+    return id => {
+      this.setState(prevState => {
+        prevState.rule[type].push({id});
+        return {
+          rule: prevState.rule,
+        };
+      });
+    };
+  },
+
+  handleDeleteRow(type) {
+    return idx => {
+      this.setState(prevState => {
+        prevState.rule[type].splice(idx, 1);
+        return {
+          rule: prevState.rule,
+        };
+      });
+    };
+  },
+
   render() {
     const activeEnvs = EnvironmentStore.getActive() || [];
     const environmentChoices = [
@@ -195,7 +205,7 @@ const RuleEditor = createReactClass({
       rule.environment === null ? ALL_ENVIRONMENTS_KEY : rule.environment;
 
     return (
-      <form onSubmit={this.onSubmit} ref={node => (this.formNode = node)}>
+      <form onSubmit={this.handleSubmit} ref={node => (this.formNode = node)}>
         <Panel className="rule-detail">
           <PanelHeader>{rule.id ? 'Edit Alert Rule' : 'New Alert Rule'}</PanelHeader>
           <PanelBody disablePadding={false}>
@@ -240,8 +250,11 @@ const RuleEditor = createReactClass({
 
             <RuleNodeList
               nodes={this.props.conditions}
-              initialItems={conditions}
+              items={conditions || []}
               className="rule-condition-list"
+              handlePropertyChange={this.handlePropertyChange('conditions')}
+              handleAddRow={this.handleAddRow('conditions')}
+              handleDeleteRow={this.handleDeleteRow('conditions')}
             />
 
             <hr />
@@ -267,28 +280,28 @@ const RuleEditor = createReactClass({
 
             <RuleNodeList
               nodes={this.props.actions}
-              initialItems={actions}
-              className="rule-action-list"
+              items={actions || []}
+              handlePropertyChange={this.handlePropertyChange('actions')}
+              handleAddRow={this.handleAddRow('actions')}
+              handleDeleteRow={this.handleDeleteRow('actions')}
             />
 
             <hr />
 
-            <div className="node-frequency-selector">
-              <AlertRuleRow>
-                {t(
-                  'Perform these actions at most once every %s for an issue.',
-                  <Select2Field
-                    name="frequency"
-                    className={this.hasError('frequency') ? ' error' : ''}
-                    value={frequency}
-                    style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 140}}
-                    required={true}
-                    choices={FREQUENCY_CHOICES}
-                    onChange={val => this.handleChange('frequency', val)}
-                  />
-                )}
-              </AlertRuleRow>
-            </div>
+            <AlertRuleRow>
+              {t(
+                'Perform these actions at most once every %s for an issue.',
+                <Select2Field
+                  name="frequency"
+                  className={this.hasError('frequency') ? ' error' : ''}
+                  value={frequency}
+                  style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 140}}
+                  required={true}
+                  choices={FREQUENCY_CHOICES}
+                  onChange={val => this.handleChange('frequency', val)}
+                />
+              )}
+            </AlertRuleRow>
 
             <div className="actions">
               <Button priority="primary" disabled={loading}>
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
index 34ddce19cf..1c56b60b1e 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
@@ -1,59 +1,110 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import ReactDOM from 'react-dom';
-import styled, {cx} from 'react-emotion';
-import $ from 'jquery';
+import styled from 'react-emotion';
 import Button from '../../components/buttons/button';
+import {Select2Field, NumberField, TextField} from '../../components/forms';
 
 class RuleNode extends React.Component {
   static propTypes = {
     data: PropTypes.object.isRequired,
     node: PropTypes.shape({
-      html: PropTypes.string.isRequired,
+      label: PropTypes.string.isRequired,
+      formFields: PropTypes.object,
     }).isRequired,
-    onDelete: PropTypes.func.isRequired,
+    handleDelete: PropTypes.func.isRequired,
+    handlePropertyChange: PropTypes.func.isRequired,
   };
 
-  componentDidMount() {
-    let $html = $(ReactDOM.findDOMNode(this.refs.html));
+  getChoiceField(name, data) {
+    // Select the first item on this list
+    // If it's not yet defined, call handlePropertyChange to make sure the value is set on state
 
-    $html.find('select, input, textarea').each((_, el) => {
-      if (this.props.data[el.name] === undefined) {
-        return;
-      }
+    let initialVal;
+    if (this.props.data[name] === undefined) {
+      initialVal = data.choices[0][0];
+      this.props.handlePropertyChange(name, initialVal);
+    } else {
+      initialVal = this.props.data[name];
+    }
 
-      let $el = $(el);
-      $el.attr('id', '');
-      $el.val(this.props.data[el.name]);
-    });
+    return (
+      <Select2Field
+        name={name}
+        value={initialVal}
+        choices={data.choices}
+        key={name}
+        style={{marginBottom: 0}}
+        onChange={val => this.props.handlePropertyChange(name, val)}
+      />
+    );
+  }
+
+  getTextField(name, data) {
+    return (
+      <TextField
+        name={name}
+        value={this.props.data[name]}
+        placeholder={data.placeholder}
+        key={name}
+        style={{marginBottom: 0}}
+        onChange={val => this.props.handlePropertyChange(name, val)}
+      />
+    );
+  }
+
+  getNumberField(name, data) {
+    return (
+      <NumberField
+        name={name}
+        value={this.props.data[name]}
+        placeholder={data.placeholder.toString()}
+        key={name}
+        style={{marginBottom: 0}}
+        onChange={val => this.props.handlePropertyChange(name, val)}
+      />
+    );
+  }
 
-    $html.find('select').select2();
-
-    $html.find('input.typeahead').each((_, el) => {
-      let $el = $(el);
-      $el.select2({
-        initSelection: function(option, callback) {
-          let $option = $(option);
-          callback({id: $option.val(), text: $option.val()});
-        },
-        data: $el.data('choices'),
-        createSearchChoice: function(term) {
-          return {id: $.trim(term), text: $.trim(term)};
-        },
-      });
+  getField(name, data) {
+    const getFieldTypes = {
+      choice: this.getChoiceField.bind(this),
+      number: this.getNumberField.bind(this),
+      string: this.getTextField.bind(this),
+    };
+    return getFieldTypes[data.type](name, data);
+  }
+
+  getComponent(node) {
+    const {label, formFields} = node;
+
+    return label.split(/({\w+})/).map(part => {
+      if (!/^{\w+}$/.test(part)) {
+        return part;
+      }
+
+      const key = part.slice(1, -1);
+      return formFields[key] ? this.getField(key, formFields[key]) : part;
     });
   }
 
   render() {
-    let {data, node} = this.props;
+    const {data, node} = this.props;
+
+    const component = this.getComponent(node);
+
     return (
       <RuleNodeRow>
         <RuleNodeForm>
           <input type="hidden" name="id" value={data.id} />
-          <span ref="html" dangerouslySetInnerHTML={{__html: node.html}} />
+          {component}
         </RuleNodeForm>
         <RuleNodeControls>
-          <Button onClick={this.props.onDelete} type="button" tabIndex="-1" size="small">
+          <Button
+            onClick={this.props.handleDelete}
+            type="button"
+            tabIndex="-1"
+            size="small"
+          >
             <span className="icon icon-trash" />
           </Button>
         </RuleNodeControls>
@@ -75,33 +126,16 @@ const RuleNodeRow = styled.div`
 `;
 
 // This needs to have class name "rule-form" because of how we serialize rules atm
-const RuleNodeForm = styled(({className, ...props}) => (
-  <div {...props} className={cx(className, 'rule-form')} />
-))`
+const RuleNodeForm = styled('div')`
   display: flex;
   flex: 1;
   line-height: 36px;
   margin: 5px 0;
+  align-items: center;
 
-  .select2-container {
-    margin: 0 6px;
-  }
-
-  input[type='text'],
-  input[type='number'] {
-    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04);
-    border: 1px solid #c9c0d1;
-    position: relative;
-    border-radius: 3px;
-    color: #493e54;
-    padding: 1px 8px 2px; // select2 height = 29px
-    line-height: 1.5;
+  .control-group {
     margin: 0 6px;
   }
-
-  span {
-    flex: 1;
-  }
 `;
 
 const RuleNodeControls = styled.div`
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
index d720d54e15..92ef57bb48 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
@@ -7,79 +7,38 @@ import RuleNode from './ruleNode';
 
 class RuleNodeList extends React.Component {
   static propTypes = {
-    initialItems: PropTypes.array,
+    items: PropTypes.array,
     nodes: PropTypes.array.isRequired,
-  };
-
-  constructor(props) {
-    super(props);
-    let counter = 0;
-    let initialItems = (props.initialItems || []).map(item => {
-      return {...item, key_attr: counter++};
-    });
-
-    this.state = {
-      items: initialItems,
-      counter,
-    };
-  }
-
-  componentWillMount() {
-    this._nodesById = {};
-
-    this.props.nodes.forEach(node => {
-      this._nodesById[node.id] = node;
-    });
-  }
-
-  onAddRow = sel => {
-    let nodeId = sel.val();
-    if (!nodeId) return;
-
-    sel.val('');
-
-    this.state.items.push({
-      id: nodeId,
-      // Since RuleNode item state is stored outside of React (using innerHTML),
-      // need to make sure elements aren't accidentally re-rendered. So, give each
-      // row a consistent key using a counter that initializes at 0 when RuleNodeList
-      // is mounted.
-      key_attr: this.state.counter,
-    });
-    this.setState({
-      items: this.state.items,
-      counter: this.state.counter + 1,
-    });
-  };
-
-  onDeleteRow = (idx, e) => {
-    this.state.items.splice(idx, 1);
-    this.setState({
-      items: this.state.items,
-    });
+    handlePropertyChange: PropTypes.func.isRequired,
+    handleAddRow: PropTypes.func.isRequired,
+    handleDeleteRow: PropTypes.func.isRequired,
   };
 
   getNode = id => {
-    return this._nodesById[id];
+    return this.props.nodes.find(node => node.id === id);
   };
 
   render() {
     return (
       <div className={this.props.className}>
         <RuleNodes>
-          {this.state.items.map((item, idx) => {
+          {this.props.items.map((item, idx) => {
             return (
               <RuleNode
-                key={item.key_attr}
+                key={idx}
                 node={this.getNode(item.id)}
-                onDelete={this.onDeleteRow.bind(this, idx)}
+                handleDelete={() => this.props.handleDeleteRow(idx)}
                 data={item}
+                handlePropertyChange={this.props.handlePropertyChange(idx)}
               />
             );
           })}
         </RuleNodes>
-        <fieldset className="node-selector">
-          <SelectInput onChange={this.onAddRow} style={{width: '100%'}}>
+        <fieldset>
+          <SelectInput
+            onChange={sel2 => this.props.handleAddRow(sel2.val())}
+            style={{width: '100%'}}
+          >
             <option key="blank" />
             {this.props.nodes.filter(n => n.enabled).map(node => {
               return (
diff --git a/src/sentry/static/sentry/less/project-settings.less b/src/sentry/static/sentry/less/project-settings.less
index 8efcef1358..2d82c368e8 100644
--- a/src/sentry/static/sentry/less/project-settings.less
+++ b/src/sentry/static/sentry/less/project-settings.less
@@ -176,20 +176,6 @@
   }
 }
 
-.rule-action-list,
-.rule-condition-list {
-  .select2-container {
-    max-width: 40%;
-  }
-
-  .node-selector .select2-container {
-    width: 100%;
-    max-width: 100%;
-  }
-
-  margin-bottom: 20px;
-}
-
 /**
  * Install
  * ============================================================================
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index 5ed5dc7936..e6c75a89c7 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -333,7 +333,10 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                     </AlertRuleRow>
                     <RuleNodeList
                       className="rule-condition-list"
-                      initialItems={Array []}
+                      handleAddRow={[Function]}
+                      handleDeleteRow={[Function]}
+                      handlePropertyChange={[Function]}
+                      items={Array []}
                       nodes={
                         Array [
                           Object {
@@ -353,9 +356,7 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             className="glamor-10 glamor-11"
                           />
                         </RuleNodes>
-                        <fieldset
-                          className="node-selector"
-                        >
+                        <fieldset>
                           <SelectInput
                             disabled={false}
                             multiple={false}
@@ -468,8 +469,10 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                       Take these actions:
                     </h6>
                     <RuleNodeList
-                      className="rule-action-list"
-                      initialItems={Array []}
+                      handleAddRow={[Function]}
+                      handleDeleteRow={[Function]}
+                      handlePropertyChange={[Function]}
+                      items={Array []}
                       nodes={
                         Array [
                           Object {
@@ -481,17 +484,13 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                         ]
                       }
                     >
-                      <div
-                        className="rule-action-list"
-                      >
+                      <div>
                         <RuleNodes>
                           <div
                             className="glamor-10 glamor-11"
                           />
                         </RuleNodes>
-                        <fieldset
-                          className="node-selector"
-                        >
+                        <fieldset>
                           <SelectInput
                             disabled={false}
                             multiple={false}
@@ -534,67 +533,76 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                       </div>
                     </RuleNodeList>
                     <hr />
-                    <div
-                      className="node-frequency-selector"
-                    >
-                      <AlertRuleRow>
-                        <h6
-                          className="glamor-8 glamor-9"
-                        >
-                          Perform these actions at most once every 
-                          <Select2Field
-                            allowClear={false}
-                            allowEmpty={false}
-                            choices={
+                    <AlertRuleRow>
+                      <h6
+                        className="glamor-8 glamor-9"
+                      >
+                        Perform these actions at most once every 
+                        <Select2Field
+                          allowClear={false}
+                          allowEmpty={false}
+                          choices={
+                            Array [
+                              Array [
+                                "5",
+                                "5 minutes",
+                              ],
+                              Array [
+                                "10",
+                                "10 minutes",
+                              ],
+                              Array [
+                                "30",
+                                "30 minutes",
+                              ],
+                              Array [
+                                "60",
+                                "60 minutes",
+                              ],
+                              Array [
+                                "180",
+                                "3 hours",
+                              ],
                               Array [
-                                Array [
-                                  "5",
-                                  "5 minutes",
-                                ],
-                                Array [
-                                  "10",
-                                  "10 minutes",
-                                ],
-                                Array [
-                                  "30",
-                                  "30 minutes",
-                                ],
-                                Array [
-                                  "60",
-                                  "60 minutes",
-                                ],
-                                Array [
-                                  "180",
-                                  "3 hours",
-                                ],
-                                Array [
-                                  "720",
-                                  "12 hours",
-                                ],
-                                Array [
-                                  "1440",
-                                  "24 hours",
-                                ],
-                                Array [
-                                  "10080",
-                                  "one week",
-                                ],
-                                Array [
-                                  "43200",
-                                  "30 days",
-                                ],
-                              ]
+                                "720",
+                                "12 hours",
+                              ],
+                              Array [
+                                "1440",
+                                "24 hours",
+                              ],
+                              Array [
+                                "10080",
+                                "one week",
+                              ],
+                              Array [
+                                "43200",
+                                "30 days",
+                              ],
+                            ]
+                          }
+                          className=""
+                          disabled={false}
+                          escapeMarkup={true}
+                          hideErrorMessage={false}
+                          key="1"
+                          multiple={false}
+                          name="frequency"
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          style={
+                            Object {
+                              "marginBottom": 0,
+                              "marginLeft": 5,
+                              "marginRight": 5,
+                              "width": 140,
                             }
-                            className=""
-                            disabled={false}
-                            escapeMarkup={true}
-                            hideErrorMessage={false}
-                            key="1"
-                            multiple={false}
-                            name="frequency"
-                            onChange={[Function]}
-                            placeholder="--"
-                            required={true}
+                          }
+                          value={30}
+                        >
+                          <div
+                            className="control-group required"
                             style={
                               Object {
                                 "marginBottom": 0,
@@ -603,94 +611,81 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                                 "width": 140,
                               }
                             }
-                            value={30}
                           >
                             <div
-                              className="control-group required"
-                              style={
-                                Object {
-                                  "marginBottom": 0,
-                                  "marginLeft": 5,
-                                  "marginRight": 5,
-                                  "width": 140,
-                                }
-                              }
+                              className="controls"
                             >
-                              <div
-                                className="controls"
+                              <select
+                                className="form-control"
+                                disabled={false}
+                                id="id-frequency"
+                                multiple={false}
+                                onChange={[Function]}
+                                placeholder="--"
+                                required={true}
+                                value={30}
                               >
-                                <select
-                                  className="form-control"
-                                  disabled={false}
-                                  id="id-frequency"
-                                  multiple={false}
-                                  onChange={[Function]}
-                                  placeholder="--"
-                                  required={true}
-                                  value={30}
+                                <option
+                                  key="5"
+                                  value="5"
                                 >
-                                  <option
-                                    key="5"
-                                    value="5"
-                                  >
-                                    5 minutes
-                                  </option>
-                                  <option
-                                    key="10"
-                                    value="10"
-                                  >
-                                    10 minutes
-                                  </option>
-                                  <option
-                                    key="30"
-                                    value="30"
-                                  >
-                                    30 minutes
-                                  </option>
-                                  <option
-                                    key="60"
-                                    value="60"
-                                  >
-                                    60 minutes
-                                  </option>
-                                  <option
-                                    key="180"
-                                    value="180"
-                                  >
-                                    3 hours
-                                  </option>
-                                  <option
-                                    key="720"
-                                    value="720"
-                                  >
-                                    12 hours
-                                  </option>
-                                  <option
-                                    key="1440"
-                                    value="1440"
-                                  >
-                                    24 hours
-                                  </option>
-                                  <option
-                                    key="10080"
-                                    value="10080"
-                                  >
-                                    one week
-                                  </option>
-                                  <option
-                                    key="43200"
-                                    value="43200"
-                                  >
-                                    30 days
-                                  </option>
-                                </select>
-                              </div>
+                                  5 minutes
+                                </option>
+                                <option
+                                  key="10"
+                                  value="10"
+                                >
+                                  10 minutes
+                                </option>
+                                <option
+                                  key="30"
+                                  value="30"
+                                >
+                                  30 minutes
+                                </option>
+                                <option
+                                  key="60"
+                                  value="60"
+                                >
+                                  60 minutes
+                                </option>
+                                <option
+                                  key="180"
+                                  value="180"
+                                >
+                                  3 hours
+                                </option>
+                                <option
+                                  key="720"
+                                  value="720"
+                                >
+                                  12 hours
+                                </option>
+                                <option
+                                  key="1440"
+                                  value="1440"
+                                >
+                                  24 hours
+                                </option>
+                                <option
+                                  key="10080"
+                                  value="10080"
+                                >
+                                  one week
+                                </option>
+                                <option
+                                  key="43200"
+                                  value="43200"
+                                >
+                                  30 days
+                                </option>
+                              </select>
                             </div>
-                          </Select2Field>
-                           for an issue.
-                        </h6>
-                      </AlertRuleRow>
-                    </div>
+                          </div>
+                        </Select2Field>
+                         for an issue.
+                      </h6>
+                    </AlertRuleRow>
                     <div
                       className="actions"
                     >
@@ -1068,7 +1063,10 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                     </AlertRuleRow>
                     <RuleNodeList
                       className="rule-condition-list"
-                      initialItems={Array []}
+                      handleAddRow={[Function]}
+                      handleDeleteRow={[Function]}
+                      handlePropertyChange={[Function]}
+                      items={Array []}
                       nodes={
                         Array [
                           Object {
@@ -1088,9 +1086,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             className="glamor-10 glamor-11"
                           />
                         </RuleNodes>
-                        <fieldset
-                          className="node-selector"
-                        >
+                        <fieldset>
                           <SelectInput
                             disabled={false}
                             multiple={false}
@@ -1203,8 +1199,10 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                       Take these actions:
                     </h6>
                     <RuleNodeList
-                      className="rule-action-list"
-                      initialItems={Array []}
+                      handleAddRow={[Function]}
+                      handleDeleteRow={[Function]}
+                      handlePropertyChange={[Function]}
+                      items={Array []}
                       nodes={
                         Array [
                           Object {
@@ -1216,17 +1214,13 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                         ]
                       }
                     >
-                      <div
-                        className="rule-action-list"
-                      >
+                      <div>
                         <RuleNodes>
                           <div
                             className="glamor-10 glamor-11"
                           />
                         </RuleNodes>
-                        <fieldset
-                          className="node-selector"
-                        >
+                        <fieldset>
                           <SelectInput
                             disabled={false}
                             multiple={false}
@@ -1269,67 +1263,76 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                       </div>
                     </RuleNodeList>
                     <hr />
-                    <div
-                      className="node-frequency-selector"
-                    >
-                      <AlertRuleRow>
-                        <h6
-                          className="glamor-8 glamor-9"
-                        >
-                          Perform these actions at most once every 
-                          <Select2Field
-                            allowClear={false}
-                            allowEmpty={false}
-                            choices={
+                    <AlertRuleRow>
+                      <h6
+                        className="glamor-8 glamor-9"
+                      >
+                        Perform these actions at most once every 
+                        <Select2Field
+                          allowClear={false}
+                          allowEmpty={false}
+                          choices={
+                            Array [
+                              Array [
+                                "5",
+                                "5 minutes",
+                              ],
+                              Array [
+                                "10",
+                                "10 minutes",
+                              ],
+                              Array [
+                                "30",
+                                "30 minutes",
+                              ],
+                              Array [
+                                "60",
+                                "60 minutes",
+                              ],
+                              Array [
+                                "180",
+                                "3 hours",
+                              ],
                               Array [
-                                Array [
-                                  "5",
-                                  "5 minutes",
-                                ],
-                                Array [
-                                  "10",
-                                  "10 minutes",
-                                ],
-                                Array [
-                                  "30",
-                                  "30 minutes",
-                                ],
-                                Array [
-                                  "60",
-                                  "60 minutes",
-                                ],
-                                Array [
-                                  "180",
-                                  "3 hours",
-                                ],
-                                Array [
-                                  "720",
-                                  "12 hours",
-                                ],
-                                Array [
-                                  "1440",
-                                  "24 hours",
-                                ],
-                                Array [
-                                  "10080",
-                                  "one week",
-                                ],
-                                Array [
-                                  "43200",
-                                  "30 days",
-                                ],
-                              ]
+                                "720",
+                                "12 hours",
+                              ],
+                              Array [
+                                "1440",
+                                "24 hours",
+                              ],
+                              Array [
+                                "10080",
+                                "one week",
+                              ],
+                              Array [
+                                "43200",
+                                "30 days",
+                              ],
+                            ]
+                          }
+                          className=""
+                          disabled={false}
+                          escapeMarkup={true}
+                          hideErrorMessage={false}
+                          key="1"
+                          multiple={false}
+                          name="frequency"
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          style={
+                            Object {
+                              "marginBottom": 0,
+                              "marginLeft": 5,
+                              "marginRight": 5,
+                              "width": 140,
                             }
-                            className=""
-                            disabled={false}
-                            escapeMarkup={true}
-                            hideErrorMessage={false}
-                            key="1"
-                            multiple={false}
-                            name="frequency"
-                            onChange={[Function]}
-                            placeholder="--"
-                            required={true}
+                          }
+                          value={30}
+                        >
+                          <div
+                            className="control-group required"
                             style={
                               Object {
                                 "marginBottom": 0,
@@ -1338,94 +1341,81 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                                 "width": 140,
                               }
                             }
-                            value={30}
                           >
                             <div
-                              className="control-group required"
-                              style={
-                                Object {
-                                  "marginBottom": 0,
-                                  "marginLeft": 5,
-                                  "marginRight": 5,
-                                  "width": 140,
-                                }
-                              }
+                              className="controls"
                             >
-                              <div
-                                className="controls"
+                              <select
+                                className="form-control"
+                                disabled={false}
+                                id="id-frequency"
+                                multiple={false}
+                                onChange={[Function]}
+                                placeholder="--"
+                                required={true}
+                                value={30}
                               >
-                                <select
-                                  className="form-control"
-                                  disabled={false}
-                                  id="id-frequency"
-                                  multiple={false}
-                                  onChange={[Function]}
-                                  placeholder="--"
-                                  required={true}
-                                  value={30}
+                                <option
+                                  key="5"
+                                  value="5"
                                 >
-                                  <option
-                                    key="5"
-                                    value="5"
-                                  >
-                                    5 minutes
-                                  </option>
-                                  <option
-                                    key="10"
-                                    value="10"
-                                  >
-                                    10 minutes
-                                  </option>
-                                  <option
-                                    key="30"
-                                    value="30"
-                                  >
-                                    30 minutes
-                                  </option>
-                                  <option
-                                    key="60"
-                                    value="60"
-                                  >
-                                    60 minutes
-                                  </option>
-                                  <option
-                                    key="180"
-                                    value="180"
-                                  >
-                                    3 hours
-                                  </option>
-                                  <option
-                                    key="720"
-                                    value="720"
-                                  >
-                                    12 hours
-                                  </option>
-                                  <option
-                                    key="1440"
-                                    value="1440"
-                                  >
-                                    24 hours
-                                  </option>
-                                  <option
-                                    key="10080"
-                                    value="10080"
-                                  >
-                                    one week
-                                  </option>
-                                  <option
-                                    key="43200"
-                                    value="43200"
-                                  >
-                                    30 days
-                                  </option>
-                                </select>
-                              </div>
+                                  5 minutes
+                                </option>
+                                <option
+                                  key="10"
+                                  value="10"
+                                >
+                                  10 minutes
+                                </option>
+                                <option
+                                  key="30"
+                                  value="30"
+                                >
+                                  30 minutes
+                                </option>
+                                <option
+                                  key="60"
+                                  value="60"
+                                >
+                                  60 minutes
+                                </option>
+                                <option
+                                  key="180"
+                                  value="180"
+                                >
+                                  3 hours
+                                </option>
+                                <option
+                                  key="720"
+                                  value="720"
+                                >
+                                  12 hours
+                                </option>
+                                <option
+                                  key="1440"
+                                  value="1440"
+                                >
+                                  24 hours
+                                </option>
+                                <option
+                                  key="10080"
+                                  value="10080"
+                                >
+                                  one week
+                                </option>
+                                <option
+                                  key="43200"
+                                  value="43200"
+                                >
+                                  30 days
+                                </option>
+                              </select>
                             </div>
-                          </Select2Field>
-                           for an issue.
-                        </h6>
-                      </AlertRuleRow>
-                    </div>
+                          </div>
+                        </Select2Field>
+                         for an issue.
+                      </h6>
+                    </AlertRuleRow>
                     <div
                       className="actions"
                     >
diff --git a/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx b/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx
deleted file mode 100644
index b88f6afc50..0000000000
--- a/tests/js/spec/views/ruleEditor/ruleNodeList.spec.jsx
+++ /dev/null
@@ -1,73 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import RuleNodeList from 'app/views/ruleEditor/ruleNodeList';
-
-describe('RuleNodeList', function() {
-  let sampleNodes;
-
-  beforeEach(function() {
-    sampleNodes = [
-      {
-        id: 'sentry.rules.conditions.every_event.EveryEventCondition',
-        enabled: true,
-        label: 'An event is seen',
-        html: 'An event is seen',
-      },
-      {
-        id: 'sentry.rules.conditions.event_frequency.EventFrequencyCondition',
-        enabled: false,
-        label: 'An event is seen more than {value} times in {interval}',
-        html:
-          'An event is seen more than <input id="id_value" name="value" placeholder="100" type="number" /> times ' +
-          'in <select id="id_interval" name="interval">↵<option value="1m">one minute</option>↵<option value="1h">one hour</option>↵</select>',
-      },
-    ];
-  });
-
-  describe('getInitialItems()', function() {
-    it('should give each initial item a unique incremented key_attr, and set state.counter', function() {
-      let initialItems = [
-        {
-          id: 'sentry.rules.conditions.event_frequency.EventFrequencyCondition',
-          value: 50,
-          interval: '1m',
-        },
-        {
-          id: 'sentry.rules.conditions.every_event.EveryEventCondition',
-        },
-      ];
-
-      let wrapper = shallow(
-        <RuleNodeList nodes={sampleNodes} initialItems={initialItems} />
-      );
-
-      expect(wrapper.state('items')[0]).toHaveProperty('key_attr', 0);
-      expect(wrapper.state('items')[1]).toHaveProperty('key_attr', 1);
-      expect(wrapper.state('counter')).toEqual(2);
-      expect(wrapper.find('.node-selector option[value]').length).toEqual(1);
-    });
-  });
-
-  describe('onAddRow()', function() {
-    it('should add a new item with key_attr value equal to state.counter, and increment state.counter', function() {
-      let wrapper = shallow(<RuleNodeList nodes={sampleNodes} />);
-
-      wrapper.setState({
-        counter: 5,
-      });
-
-      wrapper.instance().onAddRow({
-        val: function() {
-          return 'sentry.rules.conditions.every_event.EveryEventCondition';
-        },
-      });
-
-      expect(wrapper.state('items')[0]).toEqual({
-        id: 'sentry.rules.conditions.every_event.EveryEventCondition',
-        key_attr: 5,
-      });
-      expect(wrapper.state('counter')).toEqual(6);
-    });
-  });
-});
