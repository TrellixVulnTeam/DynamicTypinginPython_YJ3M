commit 9f90f039aa38ff858b579d1363f5dfcedf440c17
Author: Egor Yurtaev <yurtaev.egor@gmail.com>
Date:   Mon Jun 29 15:21:34 2015 +0600

    Add API: Retrieve an event by `event_id` for a project

diff --git a/src/sentry/api/endpoints/event_details.py b/src/sentry/api/endpoints/event_details.py
index 8872cc49ba..19dbb76a3c 100644
--- a/src/sentry/api/endpoints/event_details.py
+++ b/src/sentry/api/endpoints/event_details.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection, Endpoint
+from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.bases.group import GroupPermission
 from sentry.api.serializers import serialize
 from sentry.models import Event
@@ -67,3 +68,63 @@ class EventDetailsEndpoint(Endpoint):
             data['previousEventID'] = None
 
         return Response(data)
+
+
+class ProjectEventDetailsEndpoint(ProjectEndpoint):
+    doc_section = DocSection.EVENTS
+
+    def get(self, request, project, event_id):
+        """
+        Retrieve an event for a project
+
+        Return details on an individual event.
+
+            {method} {path}
+
+        """
+        event = Event.objects.get(
+            event_id=event_id,
+            project=project,
+        )
+
+        self.check_object_permissions(request, event.group)
+
+        Event.objects.bind_nodes([event], 'data')
+
+        # HACK(dcramer): work around lack of unique sorting on datetime
+        base_qs = Event.objects.filter(
+            group=event.group_id,
+        ).exclude(id=event.id)
+        try:
+            next_event = sorted(
+                base_qs.filter(
+                    datetime__gte=event.datetime
+                ).order_by('datetime')[0:5],
+                key=lambda x: (x.datetime, x.id)
+            )[0]
+        except IndexError:
+            next_event = None
+
+        try:
+            prev_event = sorted(
+                base_qs.filter(
+                    datetime__lte=event.datetime,
+                ).order_by('-datetime')[0:5],
+                key=lambda x: (x.datetime, x.id),
+                reverse=True
+            )[0]
+        except IndexError:
+            prev_event = None
+
+        data = serialize(event, request.user)
+
+        if next_event:
+            data['nextEventID'] = str(next_event.id)
+        else:
+            data['nextEventID'] = None
+        if prev_event:
+            data['previousEventID'] = str(prev_event.id)
+        else:
+            data['previousEventID'] = None
+
+        return Response(data)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 1ffd1aa8e3..810703062a 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -5,7 +5,7 @@ from django.conf.urls import patterns, url
 from .endpoints.auth_index import AuthIndexEndpoint
 from .endpoints.broadcast_index import BroadcastIndexEndpoint
 from .endpoints.catchall import CatchallEndpoint
-from .endpoints.event_details import EventDetailsEndpoint
+from .endpoints.event_details import EventDetailsEndpoint, ProjectEventDetailsEndpoint
 from .endpoints.group_details import GroupDetailsEndpoint
 from .endpoints.group_events import GroupEventsEndpoint
 from .endpoints.group_events_latest import GroupEventsLatestEndpoint
@@ -123,6 +123,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/$',
         ProjectDetailsEndpoint.as_view(),
         name='sentry-api-0-project-details'),
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/events/(?P<event_id>[\w-]+)/$',
+        ProjectEventDetailsEndpoint.as_view(),
+        name='sentry-api-0-project-event-details'),
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/groups/$',
         ProjectGroupIndexEndpoint.as_view(),
         name='sentry-api-0-project-group-index'),
diff --git a/tests/sentry/api/endpoints/test_event_details.py b/tests/sentry/api/endpoints/test_event_details.py
index dc985184ab..729769ca4e 100644
--- a/tests/sentry/api/endpoints/test_event_details.py
+++ b/tests/sentry/api/endpoints/test_event_details.py
@@ -35,3 +35,38 @@ class EventDetailsTest(APITestCase):
         assert response.data['nextEventID'] == str(next_event.id)
         assert response.data['previousEventID'] == str(prev_event.id)
         assert response.data['groupID'] == group.id
+
+
+class ProjectEventDetailsTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        group = self.create_group()
+        prev_event = self.create_event(
+            event_id='a',
+            group=group,
+            datetime=datetime(2013, 8, 13, 3, 8, 24),
+        )
+        cur_event = self.create_event(
+            event_id='b',
+            group=group,
+            datetime=datetime(2013, 8, 13, 3, 8, 25),
+        )
+        next_event = self.create_event(
+            event_id='c',
+            group=group,
+            datetime=datetime(2013, 8, 13, 3, 8, 26),
+        )
+
+        url = reverse('sentry-api-0-project-event-details', kwargs={
+            'event_id': cur_event.event_id,
+            'project_slug': cur_event.project.slug,
+            'organization_slug': cur_event.project.organization.slug,
+        })
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert response.data['id'] == str(cur_event.id)
+        assert response.data['nextEventID'] == str(next_event.id)
+        assert response.data['previousEventID'] == str(prev_event.id)
+        assert response.data['groupID'] == group.id
