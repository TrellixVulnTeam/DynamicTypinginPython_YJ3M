commit f7f59487b413692e5166dc6af5124546e1815edd
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Mar 28 14:15:17 2016 -0700

    Add a OptionsManager.isset() to better check if an option has in fact, been set
    
    Checking against manager.get() was error prone since it's possible it
    was just returning the default value and thinking it was set when it
    wasn't.

diff --git a/src/sentry/options/__init__.py b/src/sentry/options/__init__.py
index 340b2b35b8..e5ad84d05c 100644
--- a/src/sentry/options/__init__.py
+++ b/src/sentry/options/__init__.py
@@ -31,5 +31,6 @@ delete = default_manager.delete
 register = default_manager.register
 all = default_manager.all
 filter = default_manager.filter
+isset = default_manager.isset
 
 from .defaults import *  # NOQA
diff --git a/src/sentry/options/manager.py b/src/sentry/options/manager.py
index 58171f06f0..831708c1f6 100644
--- a/src/sentry/options/manager.py
+++ b/src/sentry/options/manager.py
@@ -103,6 +103,19 @@ class OptionsManager(object):
                 return self.store.make_key(key, lambda: '', Any, DEFAULT_FLAGS, 0, 0)
             raise UnknownOption(key)
 
+    def isset(self, key):
+        """
+        Check if a key has been set to a value and not inheriting from its default.
+        """
+        opt = self.lookup_key(key)
+
+        if not (opt.flags & FLAG_NOSTORE):
+            result = self.store.get(opt, silent=True)
+            if result is not None:
+                return True
+
+        return key in settings.SENTRY_OPTIONS
+
     def get(self, key, silent=False):
         """
         Get the value of an option, falling back to the local configuration.
diff --git a/src/sentry/templatetags/sentry_react.py b/src/sentry/templatetags/sentry_react.py
index 4b15181847..c3989d3372 100644
--- a/src/sentry/templatetags/sentry_react.py
+++ b/src/sentry/templatetags/sentry_react.py
@@ -43,7 +43,7 @@ def _needs_upgrade():
 
     # Check all required options to see if they've been set
     for key in options.filter(flag=options.FLAG_REQUIRED):
-        if not options.get(key.name):
+        if not options.isset(key.name):
             return True
 
     if version_configured != sentry.get_version():
diff --git a/tests/sentry/options/test_manager.py b/tests/sentry/options/test_manager.py
index 19dda8e9fb..5f1e96302e 100644
--- a/tests/sentry/options/test_manager.py
+++ b/tests/sentry/options/test_manager.py
@@ -270,3 +270,23 @@ class OptionsManagerTest(TestCase):
 
         keys = list(self.manager.filter(flag=FLAG_REQUIRED))
         assert {k.name for k in keys} == {'required', 'nostorerequired'}
+
+    def test_isset(self):
+        self.manager.register('basic')
+        assert self.manager.isset('basic') is False
+
+        with patch.object(self.store, 'get', side_effect='awesome'):
+            assert self.manager.isset('basic') is True
+
+        with self.settings(SENTRY_OPTIONS={'basic': 'awesome'}):
+            assert self.manager.isset('basic') is True
+
+        self.manager.register('nostore', flags=FLAG_NOSTORE)
+        assert self.manager.isset('nostore') is False
+
+        # This shouldn't be affected by the store value since it's NOSTORE
+        with patch.object(self.store, 'get', side_effect='awesome'):
+            assert self.manager.isset('nostore') is False
+
+        with self.settings(SENTRY_OPTIONS={'nostore': 'awesome'}):
+            assert self.manager.isset('nostore') is True
