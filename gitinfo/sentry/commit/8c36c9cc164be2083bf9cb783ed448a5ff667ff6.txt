commit 8c36c9cc164be2083bf9cb783ed448a5ff667ff6
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Apr 16 10:41:30 2020 +0200

    feat(ui): Improve release charts (#18305)

diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx
index 4725ef586c..f13ba75c0e 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx
@@ -3,6 +3,7 @@ import isEqual from 'lodash/isEqual';
 
 import LineChart from 'app/components/charts/lineChart';
 import AreaChart from 'app/components/charts/areaChart';
+import StackedAreaChart from 'app/components/charts/stackedAreaChart';
 import {Series} from 'app/types/echarts';
 import theme from 'app/utils/theme';
 import {defined} from 'app/utils';
@@ -69,12 +70,23 @@ class HealthChart extends React.Component<Props> {
     }
   };
 
+  getChart = () => {
+    const {yAxis} = this.props;
+    switch (yAxis) {
+      case YAxis.SESSION_DURATION:
+        return AreaChart;
+      case YAxis.SESSIONS:
+      case YAxis.USERS:
+        return StackedAreaChart;
+      case YAxis.CRASH_FREE:
+      default:
+        return LineChart;
+    }
+  };
+
   render() {
-    const {utc, releaseSeries, timeseriesData, yAxis, zoomRenderProps} = this.props;
-    const Chart =
-      yAxis === YAxis.CRASH_FREE || yAxis === YAxis.SESSION_DURATION
-        ? AreaChart
-        : LineChart;
+    const {utc, releaseSeries, timeseriesData, zoomRenderProps} = this.props;
+    const Chart = this.getChart();
 
     const legend = {
       right: 16,
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
index 06d2a49037..ec11981194 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
@@ -16,6 +16,7 @@ import {Series} from 'app/types/echarts';
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import {getExactDuration} from 'app/utils/formatters';
 import {fetchTotalCount} from 'app/actionCreators/events';
+import CHART_PALETTE from 'app/constants/chartPalette';
 
 import {YAxis} from './chart/releaseChartControls';
 import {getInterval, getReleaseEventView} from './chart/utils';
@@ -228,28 +229,56 @@ class ReleaseStatsRequest extends React.Component<Props, State> {
       crashed: {
         seriesName: t('Crashed'),
         data: [],
+        color: CHART_PALETTE[3][0],
+        areaStyle: {
+          color: CHART_PALETTE[3][0],
+          opacity: 1,
+        },
       },
       abnormal: {
         seriesName: t('Abnormal'),
         data: [],
+        color: CHART_PALETTE[3][1],
+        areaStyle: {
+          color: CHART_PALETTE[3][1],
+          opacity: 1,
+        },
       },
       errored: {
         seriesName: t('Errored'),
         data: [],
+        color: CHART_PALETTE[3][2],
+        areaStyle: {
+          color: CHART_PALETTE[3][2],
+          opacity: 1,
+        },
       },
-      total: {
-        seriesName: t('Total'),
+      healthy: {
+        seriesName: t('Healthy'),
         data: [],
+        color: CHART_PALETTE[3][3],
+        areaStyle: {
+          color: CHART_PALETTE[3][3],
+          opacity: 1,
+        },
       },
     };
 
     responseData.forEach(entry => {
       const [timeframe, values] = entry;
       const date = timeframe * 1000;
-      chartData.crashed.data.push({name: date, value: values[`${yAxis}_crashed`]});
-      chartData.abnormal.data.push({name: date, value: values[`${yAxis}_abnormal`]});
-      chartData.errored.data.push({name: date, value: values[`${yAxis}_errored`]});
-      chartData.total.data.push({name: date, value: values[yAxis]});
+      const crashed = values[`${yAxis}_crashed`];
+      const abnormal = values[`${yAxis}_abnormal`];
+      const errored = values[`${yAxis}_errored`];
+      const healthy = values[yAxis] - crashed - abnormal - errored;
+
+      chartData.crashed.data.push({name: date, value: crashed});
+      chartData.abnormal.data.push({name: date, value: abnormal});
+      chartData.errored.data.push({name: date, value: errored});
+      chartData.healthy.data.push({
+        name: date,
+        value: healthy >= 0 ? healthy : 0,
+      });
     });
 
     return {
@@ -266,21 +295,12 @@ class ReleaseStatsRequest extends React.Component<Props, State> {
       users: {
         seriesName: t('Crash Free Users'),
         data: [],
-        color: '#FF6969',
-        // TODO(releasesV2): tweak these 4 hex colors
-        areaStyle: {
-          color: '#FA4747',
-          opacity: 0.5,
-        },
+        color: CHART_PALETTE[1][0],
       },
       sessions: {
         seriesName: t('Crash Free Sessions'),
         data: [],
-        color: '#948BCF',
-        areaStyle: {
-          color: '#C4BFE9',
-          opacity: 0.5,
-        },
+        color: CHART_PALETTE[1][1],
       },
     };
 
