commit 14315e7a5de0d28021ace90baadeeabe44a34ebc
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 23 16:20:25 2015 -0700

    Revert "redis buffer: use atomic set + expire"
    
    This reverts commit 80b4d3d89b8a51a0573d1aca9243255b34f0a852.

diff --git a/src/sentry/buffer/redis.py b/src/sentry/buffer/redis.py
index 892c7854af..e5b4a1db06 100644
--- a/src/sentry/buffer/redis.py
+++ b/src/sentry/buffer/redis.py
@@ -89,8 +89,9 @@ class RedisBuffer(Buffer):
     def process_pending(self):
         lock_key = self._make_lock_key(self.pending_key)
         # prevent a stampede due to celerybeat + periodic task
-        if not self.conn.set(lock_key, '1', nx=True, ex=60):
+        if not self.conn.setnx(lock_key, '1'):
             return
+        self.conn.expire(lock_key, 60)
 
         try:
             for conn in self.conn.hosts.itervalues():
@@ -111,8 +112,9 @@ class RedisBuffer(Buffer):
         lock_key = self._make_lock_key(key)
         # prevent a stampede due to the way we use celery etas + duplicate
         # tasks
-        if not self.conn.set(lock_key, '1', nx=True, ex=10):
+        if not self.conn.setnx(lock_key, '1'):
             return
+        self.conn.expire(lock_key, 10)
 
         with self.conn.map() as conn:
             values = conn.hgetall(key)
