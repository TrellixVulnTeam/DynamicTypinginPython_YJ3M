commit d8a1f62841a5065e940922f87caccfb13c05ea50
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Feb 14 14:20:40 2016 -0800

    Prevent removal of referenced releases

diff --git a/src/sentry/api/endpoints/release_details.py b/src/sentry/api/endpoints/release_details.py
index f84918ce40..721b4a570d 100644
--- a/src/sentry/api/endpoints/release_details.py
+++ b/src/sentry/api/endpoints/release_details.py
@@ -7,9 +7,11 @@ from sentry.api.base import DocSection
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
-from sentry.models import Release, ReleaseFile
+from sentry.models import Group, Release, ReleaseFile
 from sentry.utils.apidocs import scenario, attach_scenarios
 
+ERR_RELEASE_REFERENCED = "This release is referenced by active issues and cannot be removed."
+
 
 @scenario('RetrieveRelease')
 def retrieve_release_scenario(runner):
@@ -164,6 +166,12 @@ class ReleaseDetailsEndpoint(ProjectEndpoint):
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        # we don't want to remove the first_release metadata on the Group, and
+        # while people might want to kill a release (maybe to remove files),
+        # removing the release is prevented
+        if Group.objects.filter(first_release=release).exists():
+            return Response({"detail": ERR_RELEASE_REFERENCED}, status=400)
+
         # TODO(dcramer): this needs to happen in the queue as it could be a long
         # and expensive operation
         file_list = ReleaseFile.objects.filter(
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index fa2b00f5d3..e2408e3565 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -113,7 +113,8 @@ class Group(Model):
     times_seen = BoundedPositiveIntegerField(default=1, db_index=True)
     last_seen = models.DateTimeField(default=timezone.now, db_index=True)
     first_seen = models.DateTimeField(default=timezone.now, db_index=True)
-    first_release = FlexibleForeignKey('sentry.Release', null=True)
+    first_release = FlexibleForeignKey('sentry.Release', null=True,
+                                       on_delete=models.PROTECT)
     resolved_at = models.DateTimeField(null=True, db_index=True)
     # active_at should be the same as first_seen by default
     active_at = models.DateTimeField(null=True, db_index=True)
diff --git a/tests/sentry/api/endpoints/test_release_details.py b/tests/sentry/api/endpoints/test_release_details.py
index d47b9bfb89..1e14ba8271 100644
--- a/tests/sentry/api/endpoints/test_release_details.py
+++ b/tests/sentry/api/endpoints/test_release_details.py
@@ -81,3 +81,24 @@ class ReleaseDeleteTest(APITestCase):
         assert response.status_code == 204, response.content
 
         assert not Release.objects.filter(id=release.id).exists()
+
+    def test_existing_group(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project(name='foo')
+        release = Release.objects.create(
+            project=project,
+            version='1',
+        )
+        self.create_group(first_release=release)
+
+        url = reverse('sentry-api-0-release-details', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+            'version': release.version,
+        })
+        response = self.client.delete(url)
+
+        assert response.status_code == 400, response.content
+
+        assert Release.objects.filter(id=release.id).exists()
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
index fab129ed41..427788a458 100644
--- a/tests/sentry/models/test_group.py
+++ b/tests/sentry/models/test_group.py
@@ -1,9 +1,12 @@
 from __future__ import absolute_import
 
+import pytest
+
 from datetime import timedelta, datetime
+from django.db.models import ProtectedError
 from django.utils import timezone
 
-from sentry.models import GroupSnooze, GroupStatus
+from sentry.models import Group, GroupSnooze, GroupStatus, Release
 from sentry.testutils import TestCase
 
 
@@ -98,3 +101,20 @@ class GroupTest(TestCase):
             until=timezone.now() - timedelta(minutes=1),
         )
         assert group.get_status() == GroupStatus.UNRESOLVED
+
+    def test_deleting_release_does_not_delete_group(self):
+        project = self.create_project()
+        release = Release.objects.create(
+            version='a',
+            project=project,
+        )
+        group = self.create_group(
+            project=project,
+            first_release=release,
+        )
+
+        with pytest.raises(ProtectedError):
+            release.delete()
+
+        group = Group.objects.get(id=group.id)
+        assert group.first_release == release
