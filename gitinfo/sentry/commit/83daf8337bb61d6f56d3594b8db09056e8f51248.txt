commit 83daf8337bb61d6f56d3594b8db09056e8f51248
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 3 20:17:21 2012 -0700

    Initial display for managing plugins for a project

diff --git a/sentry/plugins/base.py b/sentry/plugins/base.py
index f8ca35deaa..1ac7ef470f 100644
--- a/sentry/plugins/base.py
+++ b/sentry/plugins/base.py
@@ -37,8 +37,16 @@ class Response(object):
 
 
 class PluginManager(InstanceManager):
-    def for_project(self):
+    def all(self):
+        for plugin in super(PluginManager, self).all():
+            if not plugin.is_enabled():
+                continue
+            yield plugin
+
+    def for_project(self, project):
         for plugin in self.all():
+            if not plugin.is_enabled(project):
+                continue
             if not plugin.has_project_conf():
                 continue
             yield plugin
@@ -112,6 +120,14 @@ class IPlugin(local):
 
     All children should allow ``**kwargs`` on all inherited methods.
     """
+    # Generic plugin information
+    title = None
+    slug = None
+    description = None
+    version = None
+    author = None
+    author_url = None
+
     conf_key = None
     conf_title = None
 
@@ -121,15 +137,16 @@ class IPlugin(local):
     site_conf_form = None
     site_conf_template = 'sentry/plugins/site_configuration.html'
 
-    title = None
-    slug = None
-    description = None
-
     enabled = True
 
     def _get_option_key(self, key):
         return '%s:%s' % (self.get_conf_key(), key)
 
+    def is_enabled(self, project=None):
+        if not self.enabled:
+            return False
+        return True
+
     def get_option(self, key, project=None):
         """
         Returns the value of an option in your plugins keyspace, or ``None`` if
diff --git a/sentry/plugins/sentry_mail/__init__.py b/sentry/plugins/sentry_mail/__init__.py
index ca939caefd..5eb7f1f41f 100644
--- a/sentry/plugins/sentry_mail/__init__.py
+++ b/sentry/plugins/sentry_mail/__init__.py
@@ -5,6 +5,8 @@ sentry.plugins.sentry_mail
 :copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+import sentry
+
 from django import forms
 from django.core.mail import EmailMultiAlternatives
 from django.core.validators import email_re, ValidationError
@@ -51,6 +53,10 @@ class MailProcessor(NotifyPlugin):
     title = _('Mail')
     conf_key = 'mail'
     slug = 'mail'
+    version = sentry.VERSION
+    author = "Sentry Team"
+    author_url = "https://github.com/dcramer/sentry"
+
     project_conf_form = MailConfigurationForm
 
     def __init__(self, min_level=NOTSET, include_loggers=NOTSET, exclude_loggers=NOTSET,
diff --git a/sentry/plugins/sentry_servers/__init__.py b/sentry/plugins/sentry_servers/__init__.py
index d5a35befe9..608b2a3eac 100644
--- a/sentry/plugins/sentry_servers/__init__.py
+++ b/sentry/plugins/sentry_servers/__init__.py
@@ -5,8 +5,11 @@ sentry.plugins.sentry_servers
 :copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+import sentry
 
 from django.db.models import Sum
+from django.utils.translation import ugettext_lazy as _
+
 from sentry.plugins import Plugin, register
 
 
@@ -17,8 +20,11 @@ class ServersPlugin(Plugin):
     * A panel which shows all servers a message was seen on.
     * A sidebar module which shows the servers most actively seen on.
     """
-
-    title = 'Servers'
+    slug = 'servers'
+    title = _('Servers')
+    version = sentry.VERSION
+    author = "Sentry Team"
+    author_url = "https://github.com/dcramer/sentry"
 
     def get_unique_servers(self, group):
         return group.messagefiltervalue_set.filter(key='server_name')\
diff --git a/sentry/plugins/sentry_sites/__init__.py b/sentry/plugins/sentry_sites/__init__.py
index dd320a1006..f525037308 100644
--- a/sentry/plugins/sentry_sites/__init__.py
+++ b/sentry/plugins/sentry_sites/__init__.py
@@ -5,7 +5,11 @@ sentry.plugins.sentry_sites
 :copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+import sentry
+
 from django.db.models import Sum
+from django.utils.translation import ugettext_lazy as _
+
 from sentry.plugins import Plugin, register
 
 
@@ -16,8 +20,11 @@ class SitesPlugin(Plugin):
     * A panel which shows all sites a message was seen on.
     * A sidebar module which shows the sites most actively seen on.
     """
-
-    title = 'Sites'
+    slug = 'sites'
+    title = _('Sites')
+    version = sentry.VERSION
+    author = "Sentry Team"
+    author_url = "https://github.com/dcramer/sentry"
 
     def get_unique_sites(self, group):
         return group.messagefiltervalue_set.filter(key='site')\
diff --git a/sentry/plugins/sentry_urls/__init__.py b/sentry/plugins/sentry_urls/__init__.py
index aa3f5c8343..12b9c3a54b 100644
--- a/sentry/plugins/sentry_urls/__init__.py
+++ b/sentry/plugins/sentry_urls/__init__.py
@@ -5,7 +5,11 @@ sentry.plugins.sentry_urls
 :copyright: (c) 2010-2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+import sentry
+
 from django.db.models import Sum
+from django.utils.translation import ugettext_lazy as _
+
 from sentry.plugins import Plugin, register
 
 
@@ -16,8 +20,11 @@ class UrlsPlugin(Plugin):
     * A panel which shows all urls a message was seen on.
     * A sidebar module which shows the urls most actively seen on.
     """
-
-    title = 'URLs'
+    slug = 'urls'
+    title = _('URLs')
+    version = sentry.VERSION
+    author = "Sentry Team"
+    author_url = "https://github.com/dcramer/sentry"
 
     def get_unique_urls(self, group):
         return group.messagefiltervalue_set.filter(key='url')\
diff --git a/sentry/templates/sentry/projects/manage.html b/sentry/templates/sentry/projects/manage.html
index 9f645d815e..348eaf998a 100644
--- a/sentry/templates/sentry/projects/manage.html
+++ b/sentry/templates/sentry/projects/manage.html
@@ -1,6 +1,7 @@
 {% extends "sentry/layout.html" %}
 
 {% load i18n %}
+{% load sentry_helpers %}
 
 {% block title %}{% blocktrans with project.name as name %}Manage Project: {{ name }}{% endblocktrans %} | {{ block.super }}{% endblock %}
 
@@ -16,11 +17,14 @@
             <li{% if page == 'details' %} class="active"{% endif %}>
                 <a href="{% url sentry-manage-project project.pk %}">{% trans "Details" %}</a>
             </li>
-            {% for p in PLUGINS.for_project %}
+            {% for p in project|get_plugins %}
                 <li{% if page == 'plugin' and plugin.slug == p.slug %} class="active"{% endif %}>
                     <a href="{% url sentry-configure-project-plugin project.pk p.slug %}">{{ p.get_title }}</a>
                 </li>
             {% endfor %}
+            <li class="pull-right{% if page == 'plugins' %} active{% endif %}">
+                <a href="{% url sentry-manage-project-plugins project.pk %}">{% trans "Manage Plugins" %}</a>
+            </li>
         </ul>
         {% block inner %}
             <p>{% trans "Here you can edit project information, as well as control the access list for a project with fine-grained permissions." %}</p>
diff --git a/sentry/templates/sentry/projects/plugins/list.html b/sentry/templates/sentry/projects/plugins/list.html
new file mode 100644
index 0000000000..0f185c0416
--- /dev/null
+++ b/sentry/templates/sentry/projects/plugins/list.html
@@ -0,0 +1,48 @@
+{% extends "sentry/projects/manage.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Manage Plugins" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    {{ block.super }}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-manage-project-plugins project.pk %}">{% trans "Plugins" %}</a></li>
+{% endblock %}
+
+{% block inner %}
+    <p>{% trans "You are able to selectively enable plugins on a per-project basis." %}</p>
+    <table class="table table-bordered table-striped">
+        <thead>
+            <tr>
+                <th>{% trans "Plugin" %}</th>
+                <th style="width:100px;text-align:center;">{% trans "Version" %}</th>
+                <th style="width:100px;text-align:center;">{% trans "Enabled" %}</th>
+            </tr>
+        </thead>
+        <tbody>
+            {% for plugin, is_enabled in project|get_plugins_with_status %}
+                <tr>
+                    <td>
+                        {% if plugin.has_project_conf %}
+                            <a href="{% url sentry-configure-project-plugin project.pk plugin.slug %}">{{ plugin.get_title }}</a>
+                        {% else %}
+                            {{ plugin.get_title }}
+                        {% endif %}
+                        <br />
+                        <small>{% if plugin.author %}
+                            By {% if plugin.author_url %}<a href="{{ plugin.author_url }}">{{ plugin.author }}</a>{% else %}{{ plugin.author }}{% endif %}
+                        {% endif %}</small>
+                    </td>
+                    <td style="text-align:center;">
+                        {% if plugin.version %}{{ plugin.version }}{% else %}<em>{% trans "n/a" %}</em>{% endif %}
+                    </td>
+                    <td style="text-align:center;">
+                        <input type="checkbox" name="plugin" value="{{ plugin.slug }}"{% if is_enabled %} checked="checked"{% endif %}/>
+                    </td>
+                </tr>
+            {% endfor %}
+        </tbody>
+    </table>
+{% endblock %}
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index 5e9699b0b9..5902905e41 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -367,3 +367,14 @@ def get_project_dsn(context, user, project, asvar):
         context[asvar] = member.get_dsn()
 
     return ''
+
+
+@register.filter
+def get_plugins(project):
+    return plugins.for_project(project)
+
+
+@register.filter
+def get_plugins_with_status(project):
+    for plugin in plugins.all():
+        yield plugin, plugin.is_enabled(project)
diff --git a/sentry/web/frontend/projects.py b/sentry/web/frontend/projects.py
index 59ad257b6b..e593b09c85 100644
--- a/sentry/web/frontend/projects.py
+++ b/sentry/web/frontend/projects.py
@@ -387,3 +387,20 @@ def configure_project_plugin(request, project, slug):
     })
 
     return render_to_response('sentry/projects/plugins/configure.html', context, request)
+
+
+@login_required
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def manage_plugins(request, project):
+    result = plugins.first('has_perm', request.user, 'configure_project_plugin', project)
+    if result is False and not request.user.has_perm('sentry.can_change_project'):
+        return HttpResponseRedirect(reverse('sentry'))
+
+    context = csrf(request)
+    context.update({
+        'page': 'plugins',
+        'project': project,
+    })
+
+    return render_to_response('sentry/projects/plugins/list.html', context, request)
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index 7ba1f6777e..86ed960d06 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -51,6 +51,8 @@ urlpatterns = patterns('',
     url(r'^projects/new/$', projects.new_project, name='sentry-new-project'),
     url(r'^projects/(?P<project_id>\d+)/edit/$', projects.manage_project,
         name='sentry-manage-project'),
+    url(r'^projects/(?P<project_id>\d+)/plugins/$', projects.manage_plugins,
+        name='sentry-manage-project-plugins'),
     url(r'^projects/(?P<project_id>\d+)/plugins/(?P<slug>[\w_-]+)/$', projects.configure_project_plugin,
         name='sentry-configure-project-plugin'),
     url(r'^projects/(?P<project_id>\d+)/remove/$', projects.remove_project,
