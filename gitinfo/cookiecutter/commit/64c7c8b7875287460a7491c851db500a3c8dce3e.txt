commit 64c7c8b7875287460a7491c851db500a3c8dce3e
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 23:38:43 2013 +0200

    Don't require/rely on an .hg suffix. Work only with standard Mercurial repo URLs that work with 'hg clone'.

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 237386b..465ffa0 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -39,8 +39,8 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     # If no config file, sensible defaults from config.DEFAULT_CONFIG are used
     config_dict = get_user_config()
 
-    # If it's a git repo, clone
-    if input_dir.endswith('.git') or input_dir.endswith('.hg'):
+    # TODO: find a better way to tell if it's a repo URL
+    if "git@" in input_dir or "https://" in input_dir:
         repo_dir = clone(
             repo_url=input_dir,
             checkout=checkout,
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index 2421a7a..a269c52 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -70,7 +70,7 @@ def clone(repo_url, checkout=None, clone_to_dir="."):
     if repo_type == "git":
         repo_dir = os.path.normpath(os.path.join(clone_to_dir, tail.rsplit('.git')[0]))
     elif repo_type == "hg":
-        repo_dir = os.path.normpath(os.path.join(clone_to_dir, tail.rsplit('.hg')[0]))
+        repo_dir = os.path.normpath(os.path.join(clone_to_dir, tail))
     logging.debug('repo_dir is {0}'.format(repo_dir))
 
     if os.path.isdir(repo_dir):
@@ -81,7 +81,7 @@ def clone(repo_url, checkout=None, clone_to_dir="."):
         if checkout is not None:
             subprocess.check_call(['git', 'checkout', checkout], cwd=repo_dir)
     elif repo_type == "hg":
-        subprocess.check_call(['hg', 'clone', repo_url[0:-3]], cwd=clone_to_dir)
+        subprocess.check_call(['hg', 'clone', repo_url], cwd=clone_to_dir)
         # TODO: implement checkout
 
     return repo_dir
diff --git a/tests/test_main.py b/tests/test_main.py
index dfc903b..b6b4fde 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -120,7 +120,7 @@ class TestCookiecutterRepoArg(CookiecutterCleanSystemTestCase):
     def test_cookiecutter_mercurial(self):
         if not PY3:
             sys.stdin = StringIO('\n\n\n\n\n\n\n\n\n')
-        main.cookiecutter('https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg')
+        main.cookiecutter('https://bitbucket.org/pokoli/cookiecutter-trytonmodule')
         logging.debug('Current dir is {0}'.format(os.getcwd()))
         clone_dir = os.path.join(os.path.expanduser('~/.cookiecutters'), 'cookiecutter-trytonmodule')
         self.assertTrue(os.path.exists(clone_dir))
diff --git a/tests/test_vcs.py b/tests/test_vcs.py
index 6b9ea26..4d3965c 100755
--- a/tests/test_vcs.py
+++ b/tests/test_vcs.py
@@ -104,7 +104,7 @@ class TestVCS(unittest.TestCase):
 
     def test_hg_clone(self):
         repo_dir = vcs.clone(
-            'https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg'
+            'https://bitbucket.org/pokoli/cookiecutter-trytonmodule'
         )
         self.assertEqual(repo_dir, 'cookiecutter-trytonmodule')
         self.assertTrue(os.path.isfile('cookiecutter-trytonmodule/README.rst'))
@@ -147,7 +147,7 @@ class TestVCSPrompt(unittest.TestCase):
         if not PY3:
             sys.stdin = StringIO('y\n\n')
         repo_dir = vcs.clone(
-            'https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg'
+            'https://bitbucket.org/pokoli/cookiecutter-trytonmodule'
         )
         self.assertEqual(repo_dir, 'cookiecutter-trytonmodule')
         self.assertTrue(os.path.isfile('cookiecutter-trytonmodule/README.rst'))
@@ -159,7 +159,7 @@ class TestVCSPrompt(unittest.TestCase):
         self.assertRaises(
             SystemExit,
             vcs.clone,
-            'https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg'
+            'https://bitbucket.org/pokoli/cookiecutter-trytonmodule'
         )
 
     def tearDown(self):
