commit eb0f404a108d85aaad7f5a4ae1c79b440a4d282c
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Thu Oct 16 22:54:53 2014 +0200

    Rename _run_hook to run_script

diff --git a/cookiecutter/hooks.py b/cookiecutter/hooks.py
index a25c779..7e02303 100755
--- a/cookiecutter/hooks.py
+++ b/cookiecutter/hooks.py
@@ -42,7 +42,7 @@ def find_hooks():
     return r
 
 
-def _run_hook(script_path, cwd='.'):
+def run_script(script_path, cwd='.'):
     """
     Executes a script from a working directory.
 
@@ -73,4 +73,4 @@ def run_hook(hook_name, project_dir):
     if script is None:
         logging.debug("No hooks found")
         return
-    return _run_hook(script, project_dir)
+    return run_script(script, project_dir)
diff --git a/tests/test_hooks.py b/tests/test_hooks.py
index 2db7dcd..573d401 100755
--- a/tests/test_hooks.py
+++ b/tests/test_hooks.py
@@ -101,19 +101,19 @@ class TestExternalHooks(unittest.TestCase):
         if os.path.exists('tests/test-hooks/input{{hooks}}/shell_post.txt'):
             os.remove('tests/test-hooks/input{{hooks}}/shell_post.txt')
 
-    def test_run_hook(self):
+    def test_run_script(self):
         '''execute a hook script, independently of project generation'''
-        hooks._run_hook(os.path.join(self.hooks_path, self.post_hook))
+        hooks.run_script(os.path.join(self.hooks_path, self.post_hook))
         self.assertTrue(os.path.isfile('shell_post.txt'))
 
-    def test_run_hook_cwd(self):
+    def test_run_script_cwd(self):
         '''Change directory before running hook'''
-        hooks._run_hook(os.path.join(self.hooks_path, self.post_hook), 
+        hooks.run_script(os.path.join(self.hooks_path, self.post_hook),
                         'tests')
         self.assertTrue(os.path.isfile('tests/shell_post.txt'))
         self.assertFalse('tests' in os.getcwd())
-        
-    def test_public_run_hook(self):
+
+    def test_run_hook(self):
         '''Execute hook from specified template in specified output directory'''
         tests_dir = os.path.join(self.repo_path, 'input{{hooks}}')
         with utils.work_in(self.repo_path):
