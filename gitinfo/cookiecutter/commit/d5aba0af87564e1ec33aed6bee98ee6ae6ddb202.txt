commit d5aba0af87564e1ec33aed6bee98ee6ae6ddb202
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 23:02:52 2013 +0200

    Finish refactoring git_clone() and hg_clone() into clone().

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 3e6ff8f..237386b 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -21,7 +21,7 @@ import shutil
 from .config import get_user_config
 from .prompt import prompt_for_config
 from .generate import generate_context, generate_files
-from .vcs import git_clone, hg_clone
+from .vcs import clone
 
 
 logger = logging.getLogger(__name__)
@@ -40,17 +40,12 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     config_dict = get_user_config()
 
     # If it's a git repo, clone
-    if input_dir.endswith('.git'):
-        repo_dir = git_clone(
-            repo=input_dir,
+    if input_dir.endswith('.git') or input_dir.endswith('.hg'):
+        repo_dir = clone(
+            repo_url=input_dir,
             checkout=checkout,
             clone_to_dir=config_dict['cookiecutters_dir']
         )
-    elif input_dir.endswith('.hg'):
-        repo_dir = hg_clone(
-            repo=input_dir,
-            clone_to_dir=config_dict['cookiecutters_dir']
-        )
     else:
         # If it's a local repo, no need to clone or copy to your cookiecutters_dir
         repo_dir = input_dir
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index 40d58f1..2421a7a 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -85,55 +85,3 @@ def clone(repo_url, checkout=None, clone_to_dir="."):
         # TODO: implement checkout
 
     return repo_dir
-
-
-def git_clone(repo, checkout=None, clone_to_dir="."):
-    """
-    Clone a git repo to the current directory.
-
-    :param repo: Git repo URL ending with .git.
-    :param checkout: The branch, tag or commit ID to checkout after clone
-    """
-    
-    # Ensure that clone_to_dir exists
-    clone_to_dir = os.path.expanduser(clone_to_dir)
-    make_sure_path_exists(clone_to_dir)
-
-    # Return repo dir
-    tail = os.path.split(repo)[1]
-    repo_dir = os.path.normpath(os.path.join(clone_to_dir, tail.rsplit('.git')[0]))
-    logging.debug('repo_dir is {0}'.format(repo_dir))
-
-    if os.path.isdir(repo_dir):
-        delete_repo(repo_dir)
-
-    subprocess.check_call(['git', 'clone', repo], cwd=clone_to_dir)
-
-    if checkout is not None:
-        subprocess.check_call(['git', 'checkout', checkout], cwd=repo_dir)
-
-    return repo_dir
-
-
-def hg_clone(repo, clone_to_dir="."):
-    """
-    Clone a mercurial repo to the current directory.
-
-    :param repo: repo URL ending with .hg.
-    """
-
-    # Ensure that clone_to_dir exists
-    clone_to_dir = os.path.expanduser(clone_to_dir)
-    make_sure_path_exists(clone_to_dir)
-
-    # Return repo dir
-    tail = os.path.split(repo)[1]
-    logging.debug('repo_dir is {0}'.format(repo_dir))
-
-    if os.path.isdir(repo_dir):
-        delete_repo(repo_dir)
-
-    # os.system('hg clone {0}'.format(repo[0:-3]))
-    subprocess.check_call(['hg', 'clone', repo[0:-3]], cwd=clone_to_dir)
-
-    return repo_dir
diff --git a/tests/test_vcs.py b/tests/test_vcs.py
index 16d5e29..6b9ea26 100755
--- a/tests/test_vcs.py
+++ b/tests/test_vcs.py
@@ -126,7 +126,7 @@ class TestVCSPrompt(unittest.TestCase):
     def test_git_clone_overwrite(self):
         if not PY3:
             sys.stdin = StringIO('y\n\n')
-        repo_dir = vcs.git_clone(
+        repo_dir = vcs.clone(
             'https://github.com/audreyr/cookiecutter-pypackage.git'
         )
         self.assertEqual(repo_dir, 'cookiecutter-pypackage')
@@ -138,7 +138,7 @@ class TestVCSPrompt(unittest.TestCase):
             sys.stdin = StringIO('n\n\n')
         self.assertRaises(
             SystemExit,
-            vcs.git_clone,
+            vcs.clone,
             'https://github.com/audreyr/cookiecutter-pypackage.git'
         )
 
@@ -146,7 +146,7 @@ class TestVCSPrompt(unittest.TestCase):
     def test_hg_clone_overwrite(self):
         if not PY3:
             sys.stdin = StringIO('y\n\n')
-        repo_dir = vcs.hg_clone(
+        repo_dir = vcs.clone(
             'https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg'
         )
         self.assertEqual(repo_dir, 'cookiecutter-trytonmodule')
@@ -158,7 +158,7 @@ class TestVCSPrompt(unittest.TestCase):
             sys.stdin = StringIO('n\n\n')
         self.assertRaises(
             SystemExit,
-            vcs.hg_clone,
+            vcs.clone,
             'https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg'
         )
 
