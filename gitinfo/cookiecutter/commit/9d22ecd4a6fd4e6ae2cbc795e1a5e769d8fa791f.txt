commit 9d22ecd4a6fd4e6ae2cbc795e1a5e769d8fa791f
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Jun 17 13:36:00 2017 +0800

    Fixed flake8 problems.

diff --git a/cookiecutter/zipfile.py b/cookiecutter/zipfile.py
index 328d0aa..a28534a 100644
--- a/cookiecutter/zipfile.py
+++ b/cookiecutter/zipfile.py
@@ -1,6 +1,5 @@
 import os
 import requests
-import shutil
 import sys
 from zipfile import ZipFile
 
@@ -9,7 +8,8 @@ from .utils import make_sure_path_exists, rmtree
 
 
 def prompt_and_delete(path, no_input=False):
-    """Ask the user whether it's okay to delete the previously-downloaded file/directory.
+    """Ask the user whether it's okay to delete the previously-downloaded
+    file/directory.
 
     If yes, deletes it. Otherwise, Cookiecutter exits.
 
@@ -58,7 +58,7 @@ def unzip(zip_url, is_url, clone_to_dir='.', no_input=False):
         r = requests.get(zip_url, stream=True)
         with open(zip_path, 'wb') as f:
             for chunk in r.iter_content(chunk_size=1024):
-                if chunk: # filter out keep-alive new chunks
+                if chunk:  # filter out keep-alive new chunks
                     f.write(chunk)
     else:
         # Just use the local zipfile as-is.
diff --git a/tests/repository/test_is_repo_url.py b/tests/repository/test_is_repo_url.py
index 53da129..f24a797 100644
--- a/tests/repository/test_is_repo_url.py
+++ b/tests/repository/test_is_repo_url.py
@@ -2,7 +2,9 @@
 import pytest
 
 from cookiecutter.config import BUILTIN_ABBREVIATIONS
-from cookiecutter.repository import is_zip_file, is_repo_url, expand_abbreviations
+from cookiecutter.repository import (
+    is_zip_file, is_repo_url, expand_abbreviations
+)
 
 
 @pytest.fixture(params=[
diff --git a/tests/zipfile/test_unzip.py b/tests/zipfile/test_unzip.py
index 1142301..7e7c3d0 100644
--- a/tests/zipfile/test_unzip.py
+++ b/tests/zipfile/test_unzip.py
@@ -4,7 +4,15 @@ from unittest.mock import MagicMock
 
 import pytest
 
-from cookiecutter import exceptions, zipfile
+from cookiecutter import zipfile
+
+
+def mock_download():
+    with open('tests/files/fake-repo-tmpl.zip', 'rb') as zf:
+        chunk = zf.read(1024)
+        while chunk:
+            yield chunk
+            chunk = zf.read(1024)
 
 
 def test_unzip_local_file(mocker, tmpdir):
@@ -28,7 +36,7 @@ def test_unzip_local_file(mocker, tmpdir):
     assert not mock_prompt_and_delete.called
 
 
-def test_unzip_should_abort_if_user_does_not_want_to_overwrite_template(mocker, tmpdir):
+def test_unzip_should_abort_not_overwrite_template(mocker, tmpdir):
     """In `unzip()`, if user doesn't want to overwrite an existing cached
     template, Cookiecutter should exit.
     """
@@ -39,7 +47,7 @@ def test_unzip_should_abort_if_user_does_not_want_to_overwrite_template(mocker,
     )
 
     clone_to_dir = tmpdir.mkdir('clone')
-    existing_tmpl = clone_to_dir.mkdir('fake-repo-tmpl')
+    clone_to_dir.mkdir('fake-repo-tmpl')
 
     with pytest.raises(SystemExit):
         zipfile.unzip(
@@ -58,17 +66,10 @@ def test_unzip_url(mocker, tmpdir):
         autospec=True
     )
 
-    def mock_download():
-        with open('tests/files/fake-repo-tmpl.zip', 'rb') as zipfile:
-            chunk = zipfile.read(1024)
-            while chunk:
-                yield chunk
-                chunk = zipfile.read(1024)
-
     request = MagicMock()
     request.iter_content.return_value = mock_download()
 
-    mock_requests_get = mocker.patch(
+    mocker.patch(
         'cookiecutter.zipfile.requests.get',
         return_value=request,
         autospec=True,
@@ -96,17 +97,10 @@ def test_unzip_url_existing_cache(mocker, tmpdir):
         autospec=True
     )
 
-    def mock_download():
-        with open('tests/files/fake-repo-tmpl.zip', 'rb') as zipfile:
-            chunk = zipfile.read(1024)
-            while chunk:
-                yield chunk
-                chunk = zipfile.read(1024)
-
     request = MagicMock()
     request.iter_content.return_value = mock_download()
 
-    mock_requests_get = mocker.patch(
+    mocker.patch(
         'cookiecutter.zipfile.requests.get',
         return_value=request,
         autospec=True,
@@ -138,17 +132,10 @@ def test_unzip_url_existing_template(mocker, tmpdir):
         autospec=True
     )
 
-    def mock_download():
-        with open('tests/files/fake-repo-tmpl.zip', 'rb') as zipfile:
-            chunk = zipfile.read(1024)
-            while chunk:
-                yield chunk
-                chunk = zipfile.read(1024)
-
     request = MagicMock()
     request.iter_content.return_value = mock_download()
 
-    mock_requests_get = mocker.patch(
+    mocker.patch(
         'cookiecutter.zipfile.requests.get',
         return_value=request,
         autospec=True,
@@ -157,7 +144,7 @@ def test_unzip_url_existing_template(mocker, tmpdir):
     clone_to_dir = tmpdir.mkdir('clone')
 
     # Create an existing rolled out template directory
-    existing_template = clone_to_dir.mkdir('fake-repo-tmpl')
+    clone_to_dir.mkdir('fake-repo-tmpl')
 
     output_dir = zipfile.unzip(
         'https://example.com/path/to/fake-repo-tmpl.zip',
@@ -189,7 +176,7 @@ def test_unzip_url_existing_cache_and_template(mocker, tmpdir):
     request = MagicMock()
     request.iter_content.return_value = mock_download()
 
-    mock_requests_get = mocker.patch(
+    mocker.patch(
         'cookiecutter.zipfile.requests.get',
         return_value=request,
         autospec=True,
@@ -202,7 +189,7 @@ def test_unzip_url_existing_cache_and_template(mocker, tmpdir):
     existing_zip.write('This is an existing zipfile')
 
     # Create an existing rolled out template directory
-    existing_template = clone_to_dir.mkdir('fake-repo-tmpl')
+    clone_to_dir.mkdir('fake-repo-tmpl')
 
     output_dir = zipfile.unzip(
         'https://example.com/path/to/fake-repo-tmpl.zip',
@@ -214,7 +201,7 @@ def test_unzip_url_existing_cache_and_template(mocker, tmpdir):
     assert mock_prompt_and_delete.call_count == 1
 
 
-def test_unzip_should_abort_if_user_does_not_want_to_redownload(mocker, tmpdir):
+def test_unzip_should_abort_if_no_redownload(mocker, tmpdir):
     """In `unzip()`, if user doesn't want to download, Cookiecutter should exit
     without cloning anything.
     """
@@ -241,4 +228,3 @@ def test_unzip_should_abort_if_user_does_not_want_to_redownload(mocker, tmpdir):
         zipfile.unzip(zipfile_url, is_url=True, clone_to_dir=str(clone_to_dir))
 
     assert not mock_requests_get.called
-
