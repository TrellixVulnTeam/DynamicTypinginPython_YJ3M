commit 5351a7aef81513f7373db9752dac9f341fc47937
Author: michaeljoseph <michaeljoseph+github@gmail.com>
Date:   Thu Jul 14 21:05:06 2016 +0200

    Reorder tests to match clone execution order

diff --git a/tests/vcs/test_clone.py b/tests/vcs/test_clone.py
index 4e6cebf..b6a1394 100644
--- a/tests/vcs/test_clone.py
+++ b/tests/vcs/test_clone.py
@@ -31,18 +31,9 @@ def test_clone_should_raise_if_vcs_not_installed(mocker, clone_dir):
         vcs.clone(repo_url, clone_to_dir=clone_dir)
 
 
-@pytest.mark.parametrize('repo_type, repo_url, repo_name', [
-    ('git', 'https://github.com/hello/world.git', 'world'),
-    ('hg', 'https://bitbucket.org/foo/bar', 'bar'),
-])
-def test_clone_should_invoke_vcs_command(
-        mocker, clone_dir, repo_type, repo_url, repo_name):
-    """When `clone()` is called with a git/hg repo, the corresponding VCS
-    command should be run via `subprocess.check_output()`.
-
-    This should take place:
-    * In the correct dir
-    * With the correct args.
+def test_clone_should_rstrip_trailing_slash_in_repo_url(mocker, clone_dir):
+    """In `clone()`, repo URL's trailing slash should be stripped if one is
+    present.
     """
     mocker.patch(
         'cookiecutter.vcs.is_vcs_installed',
@@ -54,29 +45,18 @@ def test_clone_should_invoke_vcs_command(
         'cookiecutter.vcs.subprocess.check_output',
         autospec=True,
     )
-    expected_repo_dir = os.path.normpath(os.path.join(clone_dir, repo_name))
-
-    branch = 'foobar'
 
-    repo_dir = vcs.clone(
-        repo_url,
-        checkout=branch,
+    vcs.clone(
+        'https://github.com/foo/bar/',
         clone_to_dir=clone_dir,
         no_input=True
     )
 
-    assert repo_dir == expected_repo_dir
-
-    mock_subprocess.assert_any_call(
-        [repo_type, 'clone', repo_url],
+    mock_subprocess.assert_called_once_with(
+        ['git', 'clone', 'https://github.com/foo/bar'],
         cwd=clone_dir,
         stderr=subprocess.STDOUT
     )
-    mock_subprocess.assert_any_call(
-        [repo_type, 'checkout', branch],
-        cwd=expected_repo_dir,
-        stderr=subprocess.STDOUT
-    )
 
 
 def test_clone_should_abort_if_user_does_not_want_to_reclone(mocker, tmpdir):
@@ -110,9 +90,18 @@ def test_clone_should_abort_if_user_does_not_want_to_reclone(mocker, tmpdir):
     assert not mock_subprocess.called
 
 
-def test_clone_should_rstrip_trailing_slash_in_repo_url(mocker, clone_dir):
-    """In `clone()`, repo URL's trailing slash should be stripped if one is
-    present.
+@pytest.mark.parametrize('repo_type, repo_url, repo_name', [
+    ('git', 'https://github.com/hello/world.git', 'world'),
+    ('hg', 'https://bitbucket.org/foo/bar', 'bar'),
+])
+def test_clone_should_invoke_vcs_command(
+        mocker, clone_dir, repo_type, repo_url, repo_name):
+    """When `clone()` is called with a git/hg repo, the corresponding VCS
+    command should be run via `subprocess.check_output()`.
+
+    This should take place:
+    * In the correct dir
+    * With the correct args.
     """
     mocker.patch(
         'cookiecutter.vcs.is_vcs_installed',
@@ -124,18 +113,29 @@ def test_clone_should_rstrip_trailing_slash_in_repo_url(mocker, clone_dir):
         'cookiecutter.vcs.subprocess.check_output',
         autospec=True,
     )
+    expected_repo_dir = os.path.normpath(os.path.join(clone_dir, repo_name))
 
-    vcs.clone(
-        'https://github.com/foo/bar/',
+    branch = 'foobar'
+
+    repo_dir = vcs.clone(
+        repo_url,
+        checkout=branch,
         clone_to_dir=clone_dir,
         no_input=True
     )
 
-    mock_subprocess.assert_called_once_with(
-        ['git', 'clone', 'https://github.com/foo/bar'],
+    assert repo_dir == expected_repo_dir
+
+    mock_subprocess.assert_any_call(
+        [repo_type, 'clone', repo_url],
         cwd=clone_dir,
         stderr=subprocess.STDOUT
     )
+    mock_subprocess.assert_any_call(
+        [repo_type, 'checkout', branch],
+        cwd=expected_repo_dir,
+        stderr=subprocess.STDOUT
+    )
 
 
 @pytest.mark.parametrize('error_message', [
