commit e8fbf927ef6d59a2f72bab12e3655e6eefaeca13
Author: Andrey Shpak <insspb@users.noreply.github.com>
Date:   Wed May 27 13:13:08 2020 +0300

    Python3: Remove futures, six and encoding (#1401)
    
    * Remove futures and coding: utf-8 from codebase. Making code python 3 only.
    
    * Git fix tests
    
    Co-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>

diff --git a/__main__.py b/__main__.py
index 150baaa..b1c06ff 100644
--- a/__main__.py
+++ b/__main__.py
@@ -1,4 +1,3 @@
-# -*- coding: utf-8 -*-
 """Allow cookiecutter to be executable from a checkout or zip file."""
 import runpy
 
diff --git a/cookiecutter/__init__.py b/cookiecutter/__init__.py
index f519438..774de19 100644
--- a/cookiecutter/__init__.py
+++ b/cookiecutter/__init__.py
@@ -1,5 +1,2 @@
-# -*- coding: utf-8 -*-
-
 """Main package for Cookiecutter."""
-
 __version__ = "2.0.0"
diff --git a/cookiecutter/__main__.py b/cookiecutter/__main__.py
index e5fd2ea..9ac3661 100644
--- a/cookiecutter/__main__.py
+++ b/cookiecutter/__main__.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
 """Allow cookiecutter to be executable through `python -m cookiecutter`."""
-from __future__ import absolute_import
-
 from cookiecutter.cli import main
 
 
diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
index 1896653..a9c22f6 100644
--- a/cookiecutter/cli.py
+++ b/cookiecutter/cli.py
@@ -1,27 +1,24 @@
-# -*- coding: utf-8 -*-
-
 """Main `cookiecutter` CLI."""
-
+import collections
+import json
 import os
 import sys
-import json
-import collections
 
 import click
 
 from cookiecutter import __version__
-from cookiecutter.log import configure_logger
-from cookiecutter.main import cookiecutter
 from cookiecutter.exceptions import (
-    OutputDirExistsException,
-    InvalidModeException,
     FailedHookException,
-    UndefinedVariableInTemplate,
-    UnknownExtension,
+    InvalidModeException,
     InvalidZipRepository,
-    RepositoryNotFound,
+    OutputDirExistsException,
     RepositoryCloneFailed,
+    RepositoryNotFound,
+    UndefinedVariableInTemplate,
+    UnknownExtension,
 )
+from cookiecutter.log import configure_logger
+from cookiecutter.main import cookiecutter
 
 
 def version_msg():
diff --git a/cookiecutter/config.py b/cookiecutter/config.py
index 8f6f710..89a7f1d 100644
--- a/cookiecutter/config.py
+++ b/cookiecutter/config.py
@@ -1,19 +1,13 @@
-# -*- coding: utf-8 -*-
-
 """Global configuration handling."""
-
-from __future__ import unicode_literals
+import collections
 import copy
+import io
 import logging
 import os
-import io
-import collections
 
 import poyo
 
-from cookiecutter.exceptions import ConfigDoesNotExistException
-from cookiecutter.exceptions import InvalidConfiguration
-
+from cookiecutter.exceptions import ConfigDoesNotExistException, InvalidConfiguration
 
 logger = logging.getLogger(__name__)
 
diff --git a/cookiecutter/environment.py b/cookiecutter/environment.py
index ac5fcaf..bcaf7b1 100644
--- a/cookiecutter/environment.py
+++ b/cookiecutter/environment.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Jinja2 environment and extensions loading."""
-
 from jinja2 import Environment, StrictUndefined
 
 from cookiecutter.exceptions import UnknownExtension
diff --git a/cookiecutter/exceptions.py b/cookiecutter/exceptions.py
index cd0864f..9461aa9 100644
--- a/cookiecutter/exceptions.py
+++ b/cookiecutter/exceptions.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """All exceptions used in the Cookiecutter code base are defined here."""
 
 
diff --git a/cookiecutter/extensions.py b/cookiecutter/extensions.py
index b3506de..59967b4 100644
--- a/cookiecutter/extensions.py
+++ b/cookiecutter/extensions.py
@@ -1,15 +1,7 @@
-# -*- coding: utf-8 -*-
-
 """Jinja2 extensions."""
-
 import json
 import string
-
-try:
-    # Python 3.6 and above
-    from secrets import choice
-except ImportError:
-    from random import choice
+from secrets import choice
 
 from jinja2.ext import Extension
 from slugify import slugify as pyslugify
diff --git a/cookiecutter/find.py b/cookiecutter/find.py
index 618921a..054e286 100644
--- a/cookiecutter/find.py
+++ b/cookiecutter/find.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Functions for finding Cookiecutter templates and other components."""
-
 import logging
 import os
 
diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 6b2992a..7f96dbb 100644
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -1,8 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Functions for generating a project from a project template."""
-from __future__ import unicode_literals
-
 import fnmatch
 import io
 import json
@@ -17,15 +13,15 @@ from jinja2.exceptions import TemplateSyntaxError, UndefinedError
 
 from cookiecutter.environment import StrictEnvironment
 from cookiecutter.exceptions import (
-    NonTemplatedInputDirException,
     ContextDecodingException,
     FailedHookException,
+    NonTemplatedInputDirException,
     OutputDirExistsException,
     UndefinedVariableInTemplate,
 )
 from cookiecutter.find import find_template
 from cookiecutter.hooks import run_hook
-from cookiecutter.utils import make_sure_path_exists, work_in, rmtree
+from cookiecutter.utils import make_sure_path_exists, rmtree, work_in
 
 logger = logging.getLogger(__name__)
 
diff --git a/cookiecutter/hooks.py b/cookiecutter/hooks.py
index 08ad763..1b3d979 100644
--- a/cookiecutter/hooks.py
+++ b/cookiecutter/hooks.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Functions for discovering and executing various cookiecutter hooks."""
-
 import errno
 import io
 import logging
diff --git a/cookiecutter/log.py b/cookiecutter/log.py
index c921d65..33c0f05 100644
--- a/cookiecutter/log.py
+++ b/cookiecutter/log.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Module for setting up logging."""
-
 import logging
 import sys
 
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 840dfee..a4f1e90 100644
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -1,19 +1,15 @@
-# -*- coding: utf-8 -*-
-
 """
 Main entry point for the `cookiecutter` command.
 
 The code in this module is also a good example of how to use Cookiecutter as a
 library rather than a script.
 """
-
-from __future__ import unicode_literals
 import logging
 import os
 
 from cookiecutter.config import get_user_config
-from cookiecutter.generate import generate_context, generate_files
 from cookiecutter.exceptions import InvalidModeException
+from cookiecutter.generate import generate_context, generate_files
 from cookiecutter.prompt import prompt_for_config
 from cookiecutter.replay import dump, load
 from cookiecutter.repository import determine_repo_dir
diff --git a/cookiecutter/prompt.py b/cookiecutter/prompt.py
index 2042a20..a6eee17 100644
--- a/cookiecutter/prompt.py
+++ b/cookiecutter/prompt.py
@@ -1,17 +1,12 @@
-# -*- coding: utf-8 -*-
-
 """Functions for prompting the user for project info."""
-
-from collections import OrderedDict
 import json
+from collections import OrderedDict
 
 import click
-import six
-
 from jinja2.exceptions import UndefinedError
 
-from cookiecutter.exceptions import UndefinedVariableInTemplate
 from cookiecutter.environment import StrictEnvironment
+from cookiecutter.exceptions import UndefinedVariableInTemplate
 
 
 def read_user_variable(var_name, default_value):
@@ -152,7 +147,7 @@ def render_variable(env, raw, cookiecutter_dict):
         }
     elif isinstance(raw, list):
         return [render_variable(env, v, cookiecutter_dict) for v in raw]
-    elif not isinstance(raw, six.string_types):
+    elif not isinstance(raw, str):
         raw = str(raw)
 
     template = env.from_string(raw)
diff --git a/cookiecutter/replay.py b/cookiecutter/replay.py
index 42c2c84..8e6c7c8 100644
--- a/cookiecutter/replay.py
+++ b/cookiecutter/replay.py
@@ -1,18 +1,11 @@
-# -*- coding: utf-8 -*-
-
 """
 cookiecutter.replay.
 
 -------------------
 """
-
-from __future__ import unicode_literals
-
 import json
 import os
 
-import six
-
 from cookiecutter.utils import make_sure_path_exists
 
 
@@ -27,7 +20,7 @@ def dump(replay_dir, template_name, context):
     if not make_sure_path_exists(replay_dir):
         raise IOError('Unable to create replay dir at {}'.format(replay_dir))
 
-    if not isinstance(template_name, six.string_types):
+    if not isinstance(template_name, str):
         raise TypeError('Template name is required to be of type str')
 
     if not isinstance(context, dict):
@@ -44,7 +37,7 @@ def dump(replay_dir, template_name, context):
 
 def load(replay_dir, template_name):
     """Read json data from file."""
-    if not isinstance(template_name, six.string_types):
+    if not isinstance(template_name, str):
         raise TypeError('Template name is required to be of type str')
 
     replay_file = get_file_name(replay_dir, template_name)
diff --git a/cookiecutter/repository.py b/cookiecutter/repository.py
index 490b172..f8e6fcb 100644
--- a/cookiecutter/repository.py
+++ b/cookiecutter/repository.py
@@ -1,8 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Cookiecutter repository functions."""
-
-from __future__ import unicode_literals
 import os
 import re
 
diff --git a/cookiecutter/utils.py b/cookiecutter/utils.py
index e3ee45d..28d29f0 100644
--- a/cookiecutter/utils.py
+++ b/cookiecutter/utils.py
@@ -1,14 +1,10 @@
-# -*- coding: utf-8 -*-
-
 """Helper functions used throughout Cookiecutter."""
-
-from __future__ import unicode_literals
 import contextlib
 import errno
 import logging
 import os
-import stat
 import shutil
+import stat
 import sys
 
 from cookiecutter.prompt import read_user_yes_no
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index 402f75b..d9af131 100644
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -1,17 +1,12 @@
-# -*- coding: utf-8 -*-
-
 """Helper functions for working with version control systems."""
-
-from __future__ import unicode_literals
 import logging
 import os
 import subprocess
 from shutil import which
 
-
 from cookiecutter.exceptions import (
-    RepositoryNotFound,
     RepositoryCloneFailed,
+    RepositoryNotFound,
     UnknownRepoType,
     VCSNotInstalled,
 )
diff --git a/cookiecutter/zipfile.py b/cookiecutter/zipfile.py
index 321cc91..59940e9 100644
--- a/cookiecutter/zipfile.py
+++ b/cookiecutter/zipfile.py
@@ -1,7 +1,4 @@
 """Utility functions for handling and fetching repo archives in zip format."""
-
-from __future__ import absolute_import
-
 import os
 import tempfile
 from zipfile import BadZipFile, ZipFile
diff --git a/docs/__init__.py b/docs/__init__.py
index e7eaad7..f14bd38 100644
--- a/docs/__init__.py
+++ b/docs/__init__.py
@@ -1,3 +1 @@
-# -*- coding: utf-8 -*-
-
 """Main package for docs."""
diff --git a/docs/ccext.py b/docs/ccext.py
index 2c8dfbe..500f760 100644
--- a/docs/ccext.py
+++ b/docs/ccext.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Custom Sphinx extension to build a list of all of cookiecutter's cli."""
-
 import click
 from docutils import nodes
 from docutils.parsers import rst
diff --git a/docs/conf.py b/docs/conf.py
index ea89aab..efb096a 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """Documentation build configuration file."""
 
 #
diff --git a/logo/cookiecutter-logo.svg b/logo/cookiecutter-logo.svg
index 648baa2..3b8263b 100644
--- a/logo/cookiecutter-logo.svg
+++ b/logo/cookiecutter-logo.svg
@@ -2,22 +2,21 @@
 <!-- Created with Inkscape (http://www.inkscape.org/) -->
 
 <svg
-   xmlns:dc="http://purl.org/dc/elements/1.1/"
-   xmlns:cc="http://creativecommons.org/ns#"
-   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
-   xmlns:svg="http://www.w3.org/2000/svg"
-   xmlns="http://www.w3.org/2000/svg"
-   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
-   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
-   width="497.34503"
-   height="91.443459"
-   id="svg2"
-   version="1.1"
-   inkscape:version="0.48.1 r9760"
-   sodipodi:docname="cookiecutter-logo.svg"
-   inkscape:export-filename="/Users/audreyr/code/cookiecutter-repos/cookiecutter/logo/cookiecutter-logo-large.png"
-   inkscape:export-xdpi="720.44519"
-   inkscape:export-ydpi="720.44519">
+        xmlns:dc="http://purl.org/dc/elements/1.1/"
+        xmlns:cc="http://creativecommons.org/ns#"
+        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+        xmlns="http://www.w3.org/2000/svg"
+        xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+        xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+        width="497.34503"
+        height="91.443459"
+        id="svg2"
+        version="1.1"
+        inkscape:version="0.48.1 r9760"
+        sodipodi:docname="cookiecutter-logo.svg"
+        inkscape:export-filename="/Users/audreyr/code/cookiecutter-repos/cookiecutter/logo/cookiecutter-logo-large.png"
+        inkscape:export-xdpi="720.44519"
+        inkscape:export-ydpi="720.44519">
   <defs
      id="defs4" />
   <sodipodi:namedview
diff --git a/setup.py b/setup.py
index 92e45d2..1e6fbab 100644
--- a/setup.py
+++ b/setup.py
@@ -15,7 +15,6 @@ requirements = [
     'jinja2-time>=0.2.0',
     'python-slugify>=4.0.0',
     'requests>=2.23.0',
-    'six>=1.10',
     'MarkupSafe<2.0.0',
 ]
 
diff --git a/tests/conftest.py b/tests/conftest.py
index 1081846..879b414 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """pytest fixtures which are globally available throughout the suite."""
-
 import logging
 import os
 import shutil
@@ -10,7 +7,6 @@ import pytest
 
 from cookiecutter import utils
 
-
 USER_CONFIG = u"""
 cookiecutters_dir: "{cookiecutters_dir}"
 replay_dir: "{replay_dir}"
diff --git a/tests/hooks-abort-render/hooks/post_gen_project.py b/tests/hooks-abort-render/hooks/post_gen_project.py
index 374ecb4..706cc44 100644
--- a/tests/hooks-abort-render/hooks/post_gen_project.py
+++ b/tests/hooks-abort-render/hooks/post_gen_project.py
@@ -1,6 +1,4 @@
 #!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
 # flake8: noqa
 
 """Simple post-gen hook for testing the handling of different exit codes."""
diff --git a/tests/hooks-abort-render/hooks/pre_gen_project.py b/tests/hooks-abort-render/hooks/pre_gen_project.py
index 6590563..a132af8 100644
--- a/tests/hooks-abort-render/hooks/pre_gen_project.py
+++ b/tests/hooks-abort-render/hooks/pre_gen_project.py
@@ -1,6 +1,4 @@
 #!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
 # flake8: noqa
 
 """Simple pre-gen hook for testing the handling of different exit codes."""
diff --git a/tests/replay/conftest.py b/tests/replay/conftest.py
index 0c93e1b..aa37bf4 100644
--- a/tests/replay/conftest.py
+++ b/tests/replay/conftest.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """pytest fixtures for testing cookiecutter's replay feature."""
-
 import pytest
 
 
diff --git a/tests/replay/test_dump.py b/tests/replay/test_dump.py
index ebb79ef..ec8010b 100644
--- a/tests/replay/test_dump.py
+++ b/tests/replay/test_dump.py
@@ -1,9 +1,7 @@
-# -*- coding: utf-8 -*-
-
 """test_dump."""
-
 import json
 import os
+
 import pytest
 
 from cookiecutter import replay
diff --git a/tests/replay/test_load.py b/tests/replay/test_load.py
index 0ecbd0f..a64a285 100644
--- a/tests/replay/test_load.py
+++ b/tests/replay/test_load.py
@@ -1,9 +1,7 @@
-# -*- coding: utf-8 -*-
-
 """test_load."""
-
 import json
 import os
+
 import pytest
 
 from cookiecutter import replay
diff --git a/tests/replay/test_replay.py b/tests/replay/test_replay.py
index 17e440c..7ba50e4 100644
--- a/tests/replay/test_replay.py
+++ b/tests/replay/test_replay.py
@@ -1,11 +1,9 @@
-# -*- coding: utf-8 -*-
-
 """test_replay."""
-
 import os
+
 import pytest
 
-from cookiecutter import replay, main, exceptions
+from cookiecutter import exceptions, main, replay
 
 
 def test_get_replay_file_name():
diff --git a/tests/repository/test_abbreviation_expansion.py b/tests/repository/test_abbreviation_expansion.py
index 2a56b94..6611b43 100644
--- a/tests/repository/test_abbreviation_expansion.py
+++ b/tests/repository/test_abbreviation_expansion.py
@@ -1,8 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around common path and url shorthands."""
-
-from __future__ import unicode_literals
 import pytest
 
 from cookiecutter.config import BUILTIN_ABBREVIATIONS
diff --git a/tests/repository/test_determine_repo_dir_clones_repo.py b/tests/repository/test_determine_repo_dir_clones_repo.py
index 9063e70..c35d444 100644
--- a/tests/repository/test_determine_repo_dir_clones_repo.py
+++ b/tests/repository/test_determine_repo_dir_clones_repo.py
@@ -1,12 +1,9 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around cloning cookiecutter template repositories."""
-
 import os
 
 import pytest
 
-from cookiecutter import repository, exceptions
+from cookiecutter import exceptions, repository
 
 
 @pytest.mark.parametrize(
diff --git a/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py b/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py
index c5b3b89..36a0fed 100644
--- a/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py
+++ b/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests around detection whether cookiecutter templates are cached locally."""
-
 import io
 import os
 
diff --git a/tests/repository/test_determine_repo_dir_finds_subdirectories.py b/tests/repository/test_determine_repo_dir_finds_subdirectories.py
index b6beb0b..c400596 100644
--- a/tests/repository/test_determine_repo_dir_finds_subdirectories.py
+++ b/tests/repository/test_determine_repo_dir_finds_subdirectories.py
@@ -1,13 +1,10 @@
-# -*- coding: utf-8 -*-
-
 """Tests around locally cached cookiecutter template repositories."""
-
 import io
 import os
 
 import pytest
 
-from cookiecutter import repository, exceptions
+from cookiecutter import exceptions, repository
 
 
 @pytest.fixture
diff --git a/tests/repository/test_determine_repository_should_use_local_repo.py b/tests/repository/test_determine_repository_should_use_local_repo.py
index 6b14a1b..34c6b0a 100644
--- a/tests/repository/test_determine_repository_should_use_local_repo.py
+++ b/tests/repository/test_determine_repository_should_use_local_repo.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """Tests around using locally cached cookiecutter template repositories."""
 
 import os
diff --git a/tests/repository/test_is_repo_url.py b/tests/repository/test_is_repo_url.py
index 77cd4d1..64238e0 100644
--- a/tests/repository/test_is_repo_url.py
+++ b/tests/repository/test_is_repo_url.py
@@ -1,11 +1,8 @@
-# -*- coding: utf-8 -*-
-
 """Tests for all supported cookiecutter template repository locations."""
-
 import pytest
 
 from cookiecutter.config import BUILTIN_ABBREVIATIONS
-from cookiecutter.repository import is_zip_file, is_repo_url, expand_abbreviations
+from cookiecutter.repository import expand_abbreviations, is_repo_url, is_zip_file
 
 
 @pytest.fixture(
diff --git a/tests/repository/test_repository_has_cookiecutter_json.py b/tests/repository/test_repository_has_cookiecutter_json.py
index 38569d4..73cc8ae 100644
--- a/tests/repository/test_repository_has_cookiecutter_json.py
+++ b/tests/repository/test_repository_has_cookiecutter_json.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `repository_has_cookiecutter_json` function."""
-
 import pytest
 
 from cookiecutter.repository import repository_has_cookiecutter_json
diff --git a/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py b/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
index 8e0eca8..191b77f 100644
--- a/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
+++ b/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
@@ -1,8 +1,4 @@
-# -*- coding: utf-8 -*-
-
-# flake8: noqa
-
-"""Sample post-gen hook for testing that custom extensions are available and exposed methods are callable."""
+"""Test post-gen hook in extensions are available and exposed methods are callable."""
 import sys
 
 if '{% hello cookiecutter.name %}' == 'Hello Cookiemonster!':
diff --git a/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py b/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
index 2c2d75d..4df7138 100644
--- a/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
+++ b/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
-# flake8: noqa
-
-"""Sample pre-gen hook for testing that custom extensions are available and exposed methods are callable."""
-
+"""Test pre-gen hook in extensions are available and exposed methods are callable."""
 import sys
 
 if '{% hello cookiecutter.name %}' == 'Hello Cookiemonster!':
diff --git a/tests/test-extensions/hello_extension/__init__.py b/tests/test-extensions/hello_extension/__init__.py
index 62d9ca2..ff414bd 100644
--- a/tests/test-extensions/hello_extension/__init__.py
+++ b/tests/test-extensions/hello_extension/__init__.py
@@ -1,2 +1 @@
-# -*- coding: utf-8 -*-
 """Hello Extension."""
diff --git a/tests/test-extensions/hello_extension/hello_extension.py b/tests/test-extensions/hello_extension/hello_extension.py
index 80aa1fc..f54b6ef 100644
--- a/tests/test-extensions/hello_extension/hello_extension.py
+++ b/tests/test-extensions/hello_extension/hello_extension.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Provides custom extension, exposing a ``hello`` command."""
-
 from jinja2 import nodes
 from jinja2.ext import Extension
 
diff --git a/tests/test-pyhooks/hooks/post_gen_project.py b/tests/test-pyhooks/hooks/post_gen_project.py
index 6099354..c8b7c19 100644
--- a/tests/test-pyhooks/hooks/post_gen_project.py
+++ b/tests/test-pyhooks/hooks/post_gen_project.py
@@ -1,10 +1,6 @@
 #!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
 """Simple post-gen hook for testing project folder and custom file creation."""
 
-from __future__ import print_function
-
 print('pre generation hook')
 f = open('python_post.txt', 'w')
 f.close()
diff --git a/tests/test-pyhooks/hooks/pre_gen_project.py b/tests/test-pyhooks/hooks/pre_gen_project.py
index c2cc477..4d84bd3 100644
--- a/tests/test-pyhooks/hooks/pre_gen_project.py
+++ b/tests/test-pyhooks/hooks/pre_gen_project.py
@@ -1,10 +1,6 @@
 #!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
 """Simple pre-gen hook for testing project folder and custom file creation."""
 
-from __future__ import print_function
-
 print('pre generation hook')
 f = open('python_pre.txt', 'w')
 f.close()
diff --git a/tests/test-pyshellhooks/hooks/post_gen_project.py b/tests/test-pyshellhooks/hooks/post_gen_project.py
index 6099354..c8b7c19 100644
--- a/tests/test-pyshellhooks/hooks/post_gen_project.py
+++ b/tests/test-pyshellhooks/hooks/post_gen_project.py
@@ -1,10 +1,6 @@
 #!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
 """Simple post-gen hook for testing project folder and custom file creation."""
 
-from __future__ import print_function
-
 print('pre generation hook')
 f = open('python_post.txt', 'w')
 f.close()
diff --git a/tests/test-pyshellhooks/hooks/pre_gen_project.py b/tests/test-pyshellhooks/hooks/pre_gen_project.py
index c2cc477..db8bfc6 100644
--- a/tests/test-pyshellhooks/hooks/pre_gen_project.py
+++ b/tests/test-pyshellhooks/hooks/pre_gen_project.py
@@ -1,9 +1,6 @@
 #!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
 """Simple pre-gen hook for testing project folder and custom file creation."""
 
-from __future__ import print_function
 
 print('pre generation hook')
 f = open('python_pre.txt', 'w')
diff --git a/tests/test_abort_generate_on_hook_error.py b/tests/test_abort_generate_on_hook_error.py
index 629eefc..de14268 100644
--- a/tests/test_abort_generate_on_hook_error.py
+++ b/tests/test_abort_generate_on_hook_error.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """
 test_abort_generate_on_hook_error.
 
diff --git a/tests/test_cli.py b/tests/test_cli.py
index e9b559c..829cf2a 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around cookiecutter's command-line interface."""
 
 import json
diff --git a/tests/test_cookiecutter_invocation.py b/tests/test_cookiecutter_invocation.py
index 275dfaa..8f5a6b1 100644
--- a/tests/test_cookiecutter_invocation.py
+++ b/tests/test_cookiecutter_invocation.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """
 test_cookiecutter_invocation.
 
diff --git a/tests/test_cookiecutter_local_no_input.py b/tests/test_cookiecutter_local_no_input.py
index 816cabc..0031cbc 100644
--- a/tests/test_cookiecutter_local_no_input.py
+++ b/tests/test_cookiecutter_local_no_input.py
@@ -1,13 +1,11 @@
-# -*- coding: utf-8 -*-
-
 """Test cookiecutter for work without any input.
 
 Tests in this file execute `cookiecutter()` with `no_input=True` flag and
 verify result with different settings in `cookiecutter.json`.
 """
-
 import os
 import textwrap
+
 import pytest
 
 from cookiecutter import main, utils
diff --git a/tests/test_cookiecutter_local_with_input.py b/tests/test_cookiecutter_local_with_input.py
index e5a472d..ca292d2 100644
--- a/tests/test_cookiecutter_local_with_input.py
+++ b/tests/test_cookiecutter_local_with_input.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Test main cookiecutter invocation with user input enabled (mocked)."""
-
 import os
 
 import pytest
diff --git a/tests/test_custom_extensions_in_hooks.py b/tests/test_custom_extensions_in_hooks.py
index b185eb2..07314bd 100644
--- a/tests/test_custom_extensions_in_hooks.py
+++ b/tests/test_custom_extensions_in_hooks.py
@@ -1,12 +1,9 @@
-# -*- coding: utf-8 -*-
-
 """
 test_custom_extension_in_hooks.
 
 Tests to ensure custom cookiecutter extensions are properly made available to
 pre- and post-gen hooks.
 """
-
 import codecs
 import os
 
diff --git a/tests/test_default_extensions.py b/tests/test_default_extensions.py
index edfadd5..20c37c0 100644
--- a/tests/test_default_extensions.py
+++ b/tests/test_default_extensions.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Verify Jinja2 filters/extensions are available from pre-gen/post-gen hooks."""
-
 import io
 import os
 
diff --git a/tests/test_environment.py b/tests/test_environment.py
index 693d4bc..3b512eb 100644
--- a/tests/test_environment.py
+++ b/tests/test_environment.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around loading extensions."""
-
 import pytest
 
 from cookiecutter.environment import StrictEnvironment
diff --git a/tests/test_exceptions.py b/tests/test_exceptions.py
index 2c67bdd..80db434 100644
--- a/tests/test_exceptions.py
+++ b/tests/test_exceptions.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around general exception handling."""
-
 from jinja2.exceptions import UndefinedError
 
 from cookiecutter import exceptions
diff --git a/tests/test_find.py b/tests/test_find.py
index fdabb4c..761c022 100644
--- a/tests/test_find.py
+++ b/tests/test_find.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `cookiecutter.find` module."""
-
 import os
 
 import pytest
diff --git a/tests/test_generate_context.py b/tests/test_generate_context.py
index aff4dbc..5976b3d 100644
--- a/tests/test_generate_context.py
+++ b/tests/test_generate_context.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Verify generate context behaviour and context overwrite priorities."""
-
-from __future__ import unicode_literals
-
 import os
 import re
 from collections import OrderedDict
diff --git a/tests/test_generate_copy_without_render.py b/tests/test_generate_copy_without_render.py
index d5f35b4..3667322 100644
--- a/tests/test_generate_copy_without_render.py
+++ b/tests/test_generate_copy_without_render.py
@@ -1,9 +1,6 @@
-# -*- coding: utf-8 -*-
-
 """Verify correct work of `_copy_without_render` context option."""
-
-from __future__ import unicode_literals
 import os
+
 import pytest
 
 from cookiecutter import generate
diff --git a/tests/test_generate_file.py b/tests/test_generate_file.py
index f53ba32..bca4980 100644
--- a/tests/test_generate_file.py
+++ b/tests/test_generate_file.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `generate_file` function, part of `generate_files` function workflow."""
-
-from __future__ import unicode_literals
-
 import json
 import os
 
diff --git a/tests/test_generate_files.py b/tests/test_generate_files.py
index 469f754..d43e296 100644
--- a/tests/test_generate_files.py
+++ b/tests/test_generate_files.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `generate_files` function and related errors raising.
 
 Use the global clean_system fixture and run additional teardown code to remove
@@ -11,14 +9,12 @@ remove_additional_folders setup code
 remove_additional_folders teardown code
 clean_system teardown code
 """
-
-from __future__ import unicode_literals
-
 import io
 import os
 
 import pytest
 from binaryornot.check import is_binary
+
 from cookiecutter import exceptions, generate, utils
 
 
diff --git a/tests/test_generate_hooks.py b/tests/test_generate_hooks.py
index ce528cc..61d8c1e 100644
--- a/tests/test_generate_hooks.py
+++ b/tests/test_generate_hooks.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Test work of python and shell hooks for generated projects."""
-
-from __future__ import unicode_literals
-
 import errno
 import os
 import sys
diff --git a/tests/test_get_config.py b/tests/test_get_config.py
index 6ea1d56..aeb7cb9 100644
--- a/tests/test_get_config.py
+++ b/tests/test_get_config.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around loading cookiecutter config."""
-
 import os
 
 import pytest
diff --git a/tests/test_get_user_config.py b/tests/test_get_user_config.py
index 8bcbeb8..5daa2c9 100644
--- a/tests/test_get_user_config.py
+++ b/tests/test_get_user_config.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests to verify correct work with user configs and system/user variables inside."""
-
 import os
 import shutil
 
diff --git a/tests/test_hooks.py b/tests/test_hooks.py
index 79d3955..e08016d 100644
--- a/tests/test_hooks.py
+++ b/tests/test_hooks.py
@@ -1,13 +1,11 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `cookiecutter.hooks` module."""
-
 import os
-import pytest
 import stat
 import sys
 import textwrap
 
+import pytest
+
 from cookiecutter import hooks, utils, exceptions
 
 
diff --git a/tests/test_log.py b/tests/test_log.py
index 7bcbff7..83e26dd 100644
--- a/tests/test_log.py
+++ b/tests/test_log.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around log handling."""
-
 import logging
 
 import pytest
diff --git a/tests/test_main.py b/tests/test_main.py
index 92a6bb8..ae7efad 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around cookiecutter's replay feature."""
-
 from cookiecutter.main import cookiecutter
 
 
diff --git a/tests/test_output_folder.py b/tests/test_output_folder.py
index c7ab9e9..166a450 100644
--- a/tests/test_output_folder.py
+++ b/tests/test_output_folder.py
@@ -1,14 +1,9 @@
-# -*- coding: utf-8 -*-
-
 """
 tests_output_folder.
 
 Test formerly known from a unittest residing in test_generate.py named
 TestOutputFolder.test_output_folder
 """
-
-from __future__ import unicode_literals
-
 import os
 
 import pytest
diff --git a/tests/test_preferred_encoding.py b/tests/test_preferred_encoding.py
index 26b0306..89b2f8f 100644
--- a/tests/test_preferred_encoding.py
+++ b/tests/test_preferred_encoding.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around character encodings."""
-
 import codecs
 import locale
 import sys
diff --git a/tests/test_prompt.py b/tests/test_prompt.py
index 19eb9d4..f703cf2 100644
--- a/tests/test_prompt.py
+++ b/tests/test_prompt.py
@@ -1,12 +1,8 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `cookiecutter.prompt` module."""
-
 import platform
 from collections import OrderedDict
 
 import pytest
-import six
 
 from cookiecutter import prompt, exceptions, environment
 
@@ -44,7 +40,7 @@ class TestRenderVariable:
 
         # Make sure that non None non str variables are converted beforehand
         if raw_var is not None:
-            if not isinstance(raw_var, six.string_types):
+            if not isinstance(raw_var, str):
                 raw_var = str(raw_var)
             from_string.assert_called_once_with(raw_var)
         else:
diff --git a/tests/test_read_repo_password.py b/tests/test_read_repo_password.py
index 6fccfc9..842a4f7 100644
--- a/tests/test_read_repo_password.py
+++ b/tests/test_read_repo_password.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests around handling repositories which require authentication."""
-
 from cookiecutter.prompt import read_repo_password
 
 
diff --git a/tests/test_read_user_choice.py b/tests/test_read_user_choice.py
index 2cdf0e0..ef9ae62 100644
--- a/tests/test_read_user_choice.py
+++ b/tests/test_read_user_choice.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests around prompting for and handling of choice variables."""
-
 import click
 import pytest
 
diff --git a/tests/test_read_user_dict.py b/tests/test_read_user_dict.py
index baa2304..8d16441 100644
--- a/tests/test_read_user_dict.py
+++ b/tests/test_read_user_dict.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Test `process_json`, `read_user_dict` functions in `cookiecutter.prompt`."""
-
-from __future__ import unicode_literals
-
 import click
 import pytest
 
diff --git a/tests/test_read_user_variable.py b/tests/test_read_user_variable.py
index d0ea739..629a28b 100644
--- a/tests/test_read_user_variable.py
+++ b/tests/test_read_user_variable.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """test_read_user_variable."""
-
-from __future__ import unicode_literals
-
 import click
 
 from cookiecutter.prompt import read_user_variable
diff --git a/tests/test_read_user_yes_no.py b/tests/test_read_user_yes_no.py
index cb48cc8..896724c 100644
--- a/tests/test_read_user_yes_no.py
+++ b/tests/test_read_user_yes_no.py
@@ -1,9 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """test_read_user_yes_no."""
-
-from __future__ import unicode_literals
-
 import click
 
 from cookiecutter.prompt import read_user_yes_no
diff --git a/tests/test_repo_not_found.py b/tests/test_repo_not_found.py
index d2e8b63..184dc70 100644
--- a/tests/test_repo_not_found.py
+++ b/tests/test_repo_not_found.py
@@ -1,10 +1,7 @@
-# -*- coding: utf-8 -*-
-
 """Testing invalid cookiecutter template repositories."""
-
 import pytest
 
-from cookiecutter import main, exceptions
+from cookiecutter import exceptions, main
 
 
 def test_should_raise_error_if_repo_does_not_exist():
diff --git a/tests/test_specify_output_dir.py b/tests/test_specify_output_dir.py
index 97a7f2d..b805613 100644
--- a/tests/test_specify_output_dir.py
+++ b/tests/test_specify_output_dir.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests for cookiecutter's output directory customization feature."""
-
 import pytest
 
 from cookiecutter import main
diff --git a/tests/test_utils.py b/tests/test_utils.py
index f34705f..ef0003f 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 """Tests for `cookiecutter.utils` module."""
 import stat
 import sys
diff --git a/tests/vcs/test_clone.py b/tests/vcs/test_clone.py
index 41a48a4..7ff1e94 100644
--- a/tests/vcs/test_clone.py
+++ b/tests/vcs/test_clone.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Tests around cloning repositories and detection of errors at it."""
-
 import os
 import subprocess
 
diff --git a/tests/vcs/test_identify_repo.py b/tests/vcs/test_identify_repo.py
index eb8cc15..fe264ed 100644
--- a/tests/vcs/test_identify_repo.py
+++ b/tests/vcs/test_identify_repo.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around repository type identification."""
-
 import pytest
 
 from cookiecutter import exceptions, vcs
diff --git a/tests/vcs/test_is_vcs_installed.py b/tests/vcs/test_is_vcs_installed.py
index 8ff9222..148f7e5 100644
--- a/tests/vcs/test_is_vcs_installed.py
+++ b/tests/vcs/test_is_vcs_installed.py
@@ -1,7 +1,4 @@
-# -*- coding: utf-8 -*-
-
 """Collection of tests around VCS detection."""
-
 import pytest
 
 from cookiecutter import vcs
diff --git a/tests/zipfile/test_unzip.py b/tests/zipfile/test_unzip.py
index d1d33dc..14f6582 100644
--- a/tests/zipfile/test_unzip.py
+++ b/tests/zipfile/test_unzip.py
@@ -1,13 +1,9 @@
-# -*- coding: utf-8 -*-
-
 """Tests for function unzip() from zipfile module."""
-
 import tempfile
 
 import pytest
 
 from cookiecutter import zipfile
-
 from cookiecutter.exceptions import InvalidZipRepository
 
 
