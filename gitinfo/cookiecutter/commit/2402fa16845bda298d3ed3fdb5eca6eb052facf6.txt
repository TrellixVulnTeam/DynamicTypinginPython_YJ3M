commit 2402fa16845bda298d3ed3fdb5eca6eb052facf6
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Sat Apr 15 10:32:06 2017 +0200

    Re-implement Makefile and update several make rules

diff --git a/Makefile b/Makefile
index 98af05c..2a36bf3 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,5 @@
-.PHONY: clean-tox clean-pyc clean-build docs
+PYPI_SERVER = pypitest
+
 define BROWSER_PYSCRIPT
 import os, webbrowser, sys
 try:
@@ -11,87 +12,110 @@ endef
 export BROWSER_PYSCRIPT
 BROWSER := python -c "$$BROWSER_PYSCRIPT"
 
+.DEFAULT_GOAL := help
+
+.PHONY: clean-tox
+clean-tox: ## Remove tox testing artifacts
+	@echo "+ $@"
+	@rm -rf .tox/
+
+.PHONY: clean-build
+clean-build: ## Remove build artifacts
+	@echo "+ $@"
+	@rm -fr build/
+	@rm -fr dist/
+	@rm -fr *.egg-info
+
+.PHONY: clean-pyc
+clean-pyc: ## Remove Python file artifacts
+	@echo "+ $@"
+	@find . -type d -name '__pycache__' -exec rm -rf {} +
+	@find . -type f -name '*.py[co]' -exec rm -f {} +
+	@find . -name '*~' -exec rm -f {} +
+
+.PHONY: clean
+clean: clean-tox clean-build clean-pyc ## Remove all file artifacts
+
+.PHONY: lint
+lint: ## Check code style with flake8
+	@echo "+ $@"
+	@tox -e flake8
+
+.PHONY: test
+test: ## Run tests quickly with the default Python
+	@echo "+ $@"
+	@tox -e py
+
+.PHONY: test-all
+test-all: ## Run tests on every Python version with tox
+	@echo "+ $@"
+	@tox
+
+.PHONY: coverage
+coverage: ## Check code coverage quickly with the default Python
+	@echo "+ $@"
+	@tox -e cov-report
+	@$(BROWSER) htmlcov/index.html
+
+.PHONY: docs
+docs: ## Generate Sphinx HTML documentation, including API docs
+	@echo "+ $@"
+	@rm -f docs/cookiecutter.rst
+	@sphinx-apidoc -o docs/ cookiecutter
+	@rm -f docs/modules.rst
+	@$(MAKE) -C docs clean
+	@$(MAKE) -C docs html
+	@$(MAKE) contributing
+	@$(BROWSER) docs/_build/html/index.html
+
+.PHONY: servedocs
+servedocs: docs ## Rebuild docs automatically
+	@echo "+ $@"
+	@watchmedo shell-command -p '*.rst' -c '$(MAKE) -C docs html' -R -D .
+
+.PHONY: submodules
+submodules: ## Pull and update git submodules recursively
+	@echo "+ $@"
+	@git pull --recurse-submodules
+	@git submodule update --init --recursive
+
+.PHONY: release
+release: clean ## Package and upload release
+	@echo "+ $@"
+	@python setup.py sdist bdist_wheel
+	@twine upload -r $(PYPI_SERVER) dist/*
+
+.PHONY: sdist
+sdist: clean ## Build sdist distribution
+	@echo "+ $@"
+	@python setup.py sdist
+	@ls -l dist
+
+.PHONY: wheel
+wheel: clean ## Build bdist_wheel distribution
+	@echo "+ $@"
+	@python setup.py bdist_wheel
+	@ls -l dist
+
+.PHONY: contributing
+contributing: ## Generate CONTRIBUTING.rst
+	@echo "+ $@"
+	@rm CONTRIBUTING.rst
+	@touch CONTRIBUTING.rst
+	@cat docs/contributing.rst >> CONTRIBUTING.rst
+	@echo "\n\n" >> CONTRIBUTING.rst
+	@cat docs/types_of_contributions.rst >> CONTRIBUTING.rst
+	@echo "\n\n" >> CONTRIBUTING.rst
+	@cat docs/contributor_setup.rst >> CONTRIBUTING.rst
+	@echo "\n\n" >> CONTRIBUTING.rst
+	@cat docs/contributor_guidelines.rst >> CONTRIBUTING.rst
+	@echo "\n\n" >> CONTRIBUTING.rst
+	@cat docs/contributor_testing.rst >> CONTRIBUTING.rst
+	@echo "\n\n" >> CONTRIBUTING.rst
+	@cat docs/core_committer_guide.rst >> CONTRIBUTING.rst
+	@echo "\n\nAutogenerated from the docs via \`make contributing\`" >> CONTRIBUTING.rst
+	@echo "WARNING: Don't forget to replace any :ref: statements with literal names"
+
+.PHONY: help
 help:
-	@echo "clean-build - remove build artifacts"
-	@echo "clean-pyc - remove Python file artifacts"
-	@echo "clean-tox - remove tox testing artifacts"
-	@echo "lint - check style with flake8"
-	@echo "test - run tests quickly with the default Python"
-	@echo "test-all - run tests on every Python version with tox"
-	@echo "coverage - check code coverage quickly with the default Python"
-	@echo "docs - generate Sphinx HTML documentation, including API docs"
-	@echo "release - package and upload a release"
-	@echo "sdist - package"
-	@echo "submodules - pull and update git submodules recursively"
-
-clean: clean-tox clean-build clean-pyc
-
-clean-build:
-	rm -fr build/
-	rm -fr dist/
-	rm -fr *.egg-info
-
-clean-pyc:
-	find . -type d -name '__pycache__' -exec rm -rf {} +
-	find . -type f -name '*.py[co]' -exec rm -f {} +
-	find . -name '*~' -exec rm -f {} +
-
-clean-tox:
-	rm -rf .tox/
-
-lint:
-	flake8 cookiecutter tests
-
-test:
-	tox -e py
-
-test-all:
-	tox
-
-
-coverage:
-	tox -e cov-report
-	$(BROWSER) htmlcov/index.html
-
-submodules:
-	git pull --recurse-submodules
-	git submodule update --init --recursive
-
-docs:
-	rm -f docs/cookiecutter.rst
-	sphinx-apidoc -o docs/ cookiecutter
-	rm -f docs/modules.rst
-	$(MAKE) -C docs clean
-	$(MAKE) -C docs html
-	make contributing
-	$(BROWSER) docs/_build/html/index.html
-
-servedocs: docs
-	watchmedo shell-command -p '*.rst' -c '$(MAKE) -C docs html' -R -D .
-
-release: clean
-	python setup.py sdist bdist_wheel upload
-
-sdist: clean
-	python setup.py sdist
-	ls -l dist
-
-wheel: clean
-	python setup.py bdist_wheel
-	ls -l dist
-contributing:
-	rm CONTRIBUTING.rst
-	touch CONTRIBUTING.rst
-	cat docs/contributing.rst >> CONTRIBUTING.rst
-	echo "\n\n" >> CONTRIBUTING.rst
-	cat docs/types_of_contributions.rst >> CONTRIBUTING.rst
-	echo "\n\n" >> CONTRIBUTING.rst
-	cat docs/contributor_setup.rst >> CONTRIBUTING.rst
-	echo "\n\n" >> CONTRIBUTING.rst
-	cat docs/contributor_guidelines.rst >> CONTRIBUTING.rst
-	echo "\n\n" >> CONTRIBUTING.rst
-	cat docs/contributor_testing.rst >> CONTRIBUTING.rst
-	echo "\n\n" >> CONTRIBUTING.rst
-	cat docs/core_committer_guide.rst >> CONTRIBUTING.rst
-	echo "\n\nAutogenerated from the docs via \`make contributing\`" >> CONTRIBUTING.rst
-	echo "WARNING: Don't forget to replace any :ref: statements with literal names"
+	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-16s\033[0m %s\n", $$1, $$2}'
