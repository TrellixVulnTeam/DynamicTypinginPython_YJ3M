commit 52f30412b498bbb5e7dd1b8ff53216bd9f627723
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 13:50:01 2013 +0200

    Move where we call get_user_config() so we can reuse the config_dict.

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 72f951b..2cb03fd 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -33,13 +33,13 @@ else:
     from collections import OrderedDict
 
 
-def generate_context(context_file='cookiecutter.json'):
+def generate_context(context_file='cookiecutter.json', config_dict=None):
     """
     Generates the context for a Cookiecutter project template.
     Loads the JSON file as a Python object, with key being the JSON filename.
 
-    :param config_file: JSON file containing project config values.
-    :paramtype config_file: filename
+    :param context_file: JSON file containing project config values.
+    :param config_dict: Dict containing any config to take into account.
     """
 
     context = {}
@@ -54,9 +54,8 @@ def generate_context(context_file='cookiecutter.json'):
 
     # Overwrite context variable defaults with the default context from the
     # user's global config, if available
-    conf = get_user_config()
-    if conf:
-        obj.update(conf['default_context'])
+    if config_dict:
+        obj.update(config_dict['default_context'])
 
     logging.debug('Context generated is {0}'.format(context))
     return context
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 5ebe329..d88eba6 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -35,6 +35,9 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     :param checkout: The branch, tag or commit ID to checkout after clone
     """
 
+    # Get user config from ~/.cookiecutterrc or equivalent
+    config_dict = get_user_config()
+
     # If it's a git repo, clone
     if input_dir.endswith('.git'):
         repo_dir = git_clone(input_dir, checkout)
@@ -46,7 +49,8 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     logging.debug('context_file is {0}'.format(context_file))
 
     context = generate_context(
-        context_file=context_file
+        context_file=context_file,
+        config_dict=config_dict
     )
 
     # prompt the user to manually configure at the command line.
