commit f1c4735dbc025cfd1973a4bf1c9a89d2a9382a31
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Sat Aug 15 23:15:06 2015 +0200

    Make sure to raise for an invalid combination of modes

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 7c21ff8..dfa1d51 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -66,9 +66,10 @@ def cookiecutter(
     :param extra_context: A dictionary of context that overrides default
         and user configuration.
     """
-    if no_input and replay:
+    if replay and ((no_input is not False) or (extra_context is not None)):
         err_msg = (
-            "You can not use both --no-input and --replay at the same time!"
+            "You can not use both replay and no_input or extra_context "
+            "at the same time."
         )
         raise InvalidModeException(err_msg)
 
diff --git a/tests/replay/test_replay.py b/tests/replay/test_replay.py
index 98febfe..f6fe3ad 100644
--- a/tests/replay/test_replay.py
+++ b/tests/replay/test_replay.py
@@ -5,9 +5,25 @@ test_replay
 -----------
 """
 
-from cookiecutter import replay
+import pytest
+
+from cookiecutter import replay, main, exceptions
 
 
 def test_get_replay_file_name():
     """Make sure that replay.get_file_name generates a valid json file path."""
     assert replay.get_file_name('foo', 'bar') == 'foo/bar.json'
+
+
+@pytest.fixture(params=[
+    {'no_input': True},
+    {'extra_context': {}},
+    {'no_input': True, 'extra_context': {}},
+])
+def invalid_kwargs(request):
+    return request.param
+
+
+def test_raise_on_invalid_mode(invalid_kwargs):
+    with pytest.raises(exceptions.InvalidModeException):
+        main.cookiecutter('foo', replay=True, **invalid_kwargs)
diff --git a/tests/test_cli.py b/tests/test_cli.py
index fb3a53b..7fc4533 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -98,7 +98,8 @@ def test_cli_exit_on_noinput_and_replay(mocker):
     assert result.exit_code == 1
 
     expected_error_msg = (
-        "You can not use both --no-input and --replay at the same time!"
+        "You can not use both replay and no_input or extra_context "
+        "at the same time."
     )
     assert expected_error_msg in result.output
 
