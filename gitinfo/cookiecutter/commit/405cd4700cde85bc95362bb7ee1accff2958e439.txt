commit 405cd4700cde85bc95362bb7ee1accff2958e439
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Fri Aug 19 18:27:35 2016 +0100

    Remove context filter with template name from logger

diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
index dfc3870..6db44a0 100644
--- a/cookiecutter/cli.py
+++ b/cookiecutter/cli.py
@@ -103,10 +103,7 @@ def main(
         click.echo(click.get_current_context().get_help())
         sys.exit(0)
 
-    template_name = os.path.basename(os.path.abspath(template))
-
     configure_logger(
-        template_name,
         stream_level='DEBUG' if verbose else 'INFO',
         debug_file=debug_file,
     )
diff --git a/cookiecutter/log.py b/cookiecutter/log.py
index c68fc19..97bd045 100644
--- a/cookiecutter/log.py
+++ b/cookiecutter/log.py
@@ -12,25 +12,12 @@ LOG_LEVELS = {
 }
 
 LOG_FORMATS = {
-    'DEBUG': u'%(levelname)s [%(template)s] %(name)s: %(message)s',
+    'DEBUG': u'%(levelname)s %(name)s: %(message)s',
     'INFO': u'%(levelname)s: %(message)s',
 }
 
 
-class ContextFilter(logging.Filter):
-    """Logging filter that holds the name of the used template."""
-
-    def __init__(self, template):
-        super(ContextFilter, self).__init__()
-        self.template = template
-
-    def filter(self, record):
-        """Add 'template' as extra information on a logging record."""
-        record.template = self.template
-        return record
-
-
-def configure_logger(template, stream_level='DEBUG', debug_file=None):
+def configure_logger(stream_level='DEBUG', debug_file=None):
     # Set up 'cookiecutter' logger
     logger = logging.getLogger('cookiecutter')
     logger.setLevel(logging.DEBUG)
@@ -39,16 +26,12 @@ def configure_logger(template, stream_level='DEBUG', debug_file=None):
     # a logger with using the name 'cookiecutter'
     del logger.handlers[:]
 
-    # Add additional information to the logger
-    context_filter = ContextFilter(template)
-
     # Create a file handler if a log file is provided
     if debug_file is not None:
         debug_formatter = logging.Formatter(LOG_FORMATS['DEBUG'])
         file_handler = logging.FileHandler(debug_file)
         file_handler.setLevel(LOG_LEVELS['DEBUG'])
         file_handler.setFormatter(debug_formatter)
-        file_handler.addFilter(context_filter)
         logger.addHandler(file_handler)
 
     # Get settings based on the given stream_level
@@ -59,7 +42,6 @@ def configure_logger(template, stream_level='DEBUG', debug_file=None):
     stream_handler = logging.StreamHandler(stream=sys.stdout)
     stream_handler.setLevel(log_level)
     stream_handler.setFormatter(log_formatter)
-    stream_handler.addFilter(context_filter)
     logger.addHandler(stream_handler)
 
     return logger
diff --git a/tests/test_cli.py b/tests/test_cli.py
index 55fac02..9d0cdef 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -396,7 +396,7 @@ def test_debug_file_non_verbose(cli_runner, debug_file):
     assert debug_file.exists()
 
     context_log = (
-        "DEBUG [fake-repo-pre] cookiecutter.main: context_file is "
+        "DEBUG cookiecutter.main: context_file is "
         "tests/fake-repo-pre/cookiecutter.json"
     )
     assert context_log in debug_file.readlines(cr=False)
@@ -419,7 +419,7 @@ def test_debug_file_verbose(cli_runner, debug_file):
     assert debug_file.exists()
 
     context_log = (
-        "DEBUG [fake-repo-pre] cookiecutter.main: context_file is "
+        "DEBUG cookiecutter.main: context_file is "
         "tests/fake-repo-pre/cookiecutter.json"
     )
     assert context_log in debug_file.readlines(cr=False)
diff --git a/tests/test_log.py b/tests/test_log.py
index f618966..4448bca 100644
--- a/tests/test_log.py
+++ b/tests/test_log.py
@@ -33,37 +33,37 @@ def info_messages():
 @pytest.fixture
 def debug_messages():
     return [
-        'INFO [pytest-plugin] cookiecutter: '
+        'INFO cookiecutter: '
         'Welcome to Cookiecutter',
 
-        'DEBUG [pytest-plugin] cookiecutter: '
+        'DEBUG cookiecutter: '
         'Generating project from pytest-plugin',
 
-        'INFO [pytest-plugin] cookiecutter.foo: '
+        'INFO cookiecutter.foo: '
         'Loading user config from home dir',
 
-        "DEBUG [pytest-plugin] cookiecutter.foo.bar: "
+        "DEBUG cookiecutter.foo.bar: "
         "I don't know.",
 
-        'DEBUG [pytest-plugin] cookiecutter.foo.bar: '
+        'DEBUG cookiecutter.foo.bar: '
         'I wanted to save the world.',
 
-        'ERROR [pytest-plugin] cookiecutter.foo: '
+        'ERROR cookiecutter.foo: '
         'Aw, snap! Something went wrong',
 
-        'DEBUG [pytest-plugin] cookiecutter: '
+        'DEBUG cookiecutter: '
         'Successfully generated project',
     ]
 
 
 @pytest.fixture
 def info_logger():
-    return configure_logger('pytest-plugin', stream_level='INFO')
+    return configure_logger(stream_level='INFO')
 
 
 @pytest.fixture
 def debug_logger():
-    return configure_logger('pytest-plugin', stream_level='DEBUG')
+    return configure_logger(stream_level='DEBUG')
 
 
 @pytest.fixture
@@ -74,7 +74,6 @@ def debug_file(tmpdir):
 @pytest.fixture
 def info_logger_with_file(debug_file):
     return configure_logger(
-        'pytest-plugin',
         stream_level='INFO',
         debug_file=str(debug_file),
     )
