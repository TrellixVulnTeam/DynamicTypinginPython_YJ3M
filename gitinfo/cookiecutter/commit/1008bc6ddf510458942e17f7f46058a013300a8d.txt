commit 1008bc6ddf510458942e17f7f46058a013300a8d
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Mon Dec 21 23:35:54 2015 +0100

    Use a private helper in ExtensionLoaderMixin to load from context

diff --git a/cookiecutter/environment.py b/cookiecutter/environment.py
index 996fbd5..f228ffb 100644
--- a/cookiecutter/environment.py
+++ b/cookiecutter/environment.py
@@ -6,22 +6,35 @@ from .exceptions import UnknownExtension
 
 
 class ExtensionLoaderMixin(object):
-    """Mixin that provides a sane way of loading extensions that are specified
-    in a given context.
+    """Mixin that provides a sane way of loading extensions specified in a
+    given context.
 
     The context is being extracted from the keyword arguments before calling
     the next parent class in line of the child.
     """
     def __init__(self, **kwargs):
         context = kwargs.pop('context', {})
+
         try:
             super(ExtensionLoaderMixin, self).__init__(
-                extensions=context.get('_extensions', []),
+                extensions=self._read_extensions(context),
                 **kwargs
             )
         except ImportError as err:
             raise UnknownExtension('Unable to load extension: {}'.format(err))
 
+    def _read_extensions(self, context):
+        """Return a list of extensions as str to be passed on to the jinja2
+        env. If context does not contain the relevant info, return an empty
+        list instead.
+        """
+        try:
+            extensions = context['cookiecutter']['_extensions']
+        except KeyError:
+            return []
+        else:
+            return [str(ext) for ext in extensions]
+
 
 class StrictEnvironment(ExtensionLoaderMixin, Environment):
     """Jinja2 environment that raises an error when it hits a variable
diff --git a/tests/test_environment.py b/tests/test_environment.py
index 81b15ac..d585662 100644
--- a/tests/test_environment.py
+++ b/tests/test_environment.py
@@ -8,7 +8,9 @@ from cookiecutter.exceptions import UnknownExtension
 
 def test_env_should_raise_for_unknown_extension():
     context = {
-        '_extensions': ['foobar']
+        'cookiecutter': {
+            '_extensions': ['foobar']
+        }
     }
 
     with pytest.raises(UnknownExtension) as err:
