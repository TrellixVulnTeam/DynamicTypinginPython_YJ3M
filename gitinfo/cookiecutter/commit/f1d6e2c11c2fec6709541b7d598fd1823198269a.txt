commit f1d6e2c11c2fec6709541b7d598fd1823198269a
Author: Carsten RÃ¶snick-Neugebauer <croesnick@gmail.com>
Date:   Sat Jan 18 20:09:15 2020 +0100

    Add docstring headers to all files, resolving pycodestyle D100

diff --git a/cookiecutter/zipfile.py b/cookiecutter/zipfile.py
index 8c2c431..771c12e 100644
--- a/cookiecutter/zipfile.py
+++ b/cookiecutter/zipfile.py
@@ -1,10 +1,13 @@
+"""Utility functions for handling and fetching repo archives in zip format."""
+
 from __future__ import absolute_import
 
 import os
-import requests
 import tempfile
 from zipfile import ZipFile
 
+import requests
+
 try:
     # BadZipfile was renamed to BadZipFile in Python 3.2.
     from zipfile import BadZipFile
diff --git a/docs/ccext.py b/docs/ccext.py
index 72b0ea4..eb86140 100644
--- a/docs/ccext.py
+++ b/docs/ccext.py
@@ -1,12 +1,14 @@
 # -*- coding: utf-8 -*-
-from cookiecutter import cli
 
-import click
+"""Custom Sphinx extension to build a list of all of cookiecutter's cli."""
 
+import click
 from docutils import nodes
 from docutils.parsers import rst
 from docutils.statemachine import ViewList
 
+from cookiecutter import cli
+
 
 class CcCommandLineOptions(rst.Directive):
     def _format_option(self, option):
diff --git a/docs/conf.py b/docs/conf.py
index 720e75b..8ab34ab 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Documentation build configuration file."""
+
 #
 # cookiecutter documentation build configuration file, created by
 # sphinx-quickstart on Thu Jul 11 11:31:49 2013.
diff --git a/setup.cfg b/setup.cfg
index 7bfa213..c9151bf 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -9,7 +9,7 @@ tag_name = {new_version}
 [bumpversion:file:cookiecutter/__init__.py]
 
 [flake8]
-ignore = E231,E731,W503,D100,D101,D102,D103,D400
+ignore = E231,E731,W503,D101,D102,D103,D400
 # D400 First line should end with a period
 
 # Excludes due to known issues or incompatibilities:
diff --git a/setup.py b/setup.py
index 4be4a07..a828759 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,8 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
 
+"""cookiecutter distutils configuration"""
+
 import os
 import io
 import sys
diff --git a/tests/__init__.py b/tests/__init__.py
index a4eb00f..2d69e21 100644
--- a/tests/__init__.py
+++ b/tests/__init__.py
@@ -1 +1 @@
-"""Cookiecutter Test Suites"""
+"""Cookiecutter integration tests"""
diff --git a/tests/conftest.py b/tests/conftest.py
index e3a0dd4..d670b73 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -1,11 +1,6 @@
 # -*- coding: utf-8 -*-
 
-"""
-conftest.
-
---------
-Contains pytest fixtures which are globally available throughout the suite.
-"""
+"""pytest fixtures which are globally available throughout the suite."""
 
 import logging
 import os
diff --git a/tests/hooks-abort-render/hooks/post_gen_project.py b/tests/hooks-abort-render/hooks/post_gen_project.py
index 3816f29..3adf97c 100644
--- a/tests/hooks-abort-render/hooks/post_gen_project.py
+++ b/tests/hooks-abort-render/hooks/post_gen_project.py
@@ -3,6 +3,8 @@
 
 # flake8: noqa
 
+"""Simple post-gen hook for testing the handling of different exit codes."""
+
 import sys
 
 {% if cookiecutter.abort_post_gen == "yes" %}
diff --git a/tests/hooks-abort-render/hooks/pre_gen_project.py b/tests/hooks-abort-render/hooks/pre_gen_project.py
index 62da436..a39e4ec 100644
--- a/tests/hooks-abort-render/hooks/pre_gen_project.py
+++ b/tests/hooks-abort-render/hooks/pre_gen_project.py
@@ -3,6 +3,8 @@
 
 # flake8: noqa
 
+"""Simple pre-gen hook for testing the handling of different exit codes."""
+
 import sys
 
 {% if cookiecutter.abort_pre_gen == "yes" %}
diff --git a/tests/replay/conftest.py b/tests/replay/conftest.py
index 6710371..f4e0945 100644
--- a/tests/replay/conftest.py
+++ b/tests/replay/conftest.py
@@ -1,10 +1,6 @@
 # -*- coding: utf-8 -*-
 
-"""
-conftest.
-
---------
-"""
+"""pytest fixtures for testing cookiecutter's replay feature."""
 
 import pytest
 
@@ -24,11 +20,9 @@ def context():
 
 @pytest.fixture
 def replay_test_dir():
-    """Fixture to test directory."""
     return "tests/test-replay/"
 
 
 @pytest.fixture
 def mock_user_config(mocker):
-    """Fixture to mock user config."""
     return mocker.patch("cookiecutter.main.get_user_config")
diff --git a/tests/repository/test_abbreviation_expansion.py b/tests/repository/test_abbreviation_expansion.py
index 9f15c3c..9df551e 100644
--- a/tests/repository/test_abbreviation_expansion.py
+++ b/tests/repository/test_abbreviation_expansion.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Collection of tests around common path and url shorthands."""
+
 from __future__ import unicode_literals
 import pytest
 
diff --git a/tests/repository/test_determine_repo_dir_clones_repo.py b/tests/repository/test_determine_repo_dir_clones_repo.py
index dfb81d7..11bce70 100644
--- a/tests/repository/test_determine_repo_dir_clones_repo.py
+++ b/tests/repository/test_determine_repo_dir_clones_repo.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Collection of tests around cloning cookiecutter template repositories."""
+
 import os
 
 import pytest
diff --git a/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py b/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py
index 7388fc7..e543c94 100644
--- a/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py
+++ b/tests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py
@@ -1,6 +1,10 @@
 # -*- coding: utf-8 -*-
+
+"""Tests around detection whether cookiecutter templates are cached locally."""
+
 import io
 import os
+
 import pytest
 
 from cookiecutter import repository
diff --git a/tests/repository/test_determine_repo_dir_finds_subdirectories.py b/tests/repository/test_determine_repo_dir_finds_subdirectories.py
index cda67f9..08c11b7 100644
--- a/tests/repository/test_determine_repo_dir_finds_subdirectories.py
+++ b/tests/repository/test_determine_repo_dir_finds_subdirectories.py
@@ -1,6 +1,10 @@
 # -*- coding: utf-8 -*-
+
+"""Tests around locally cached cookiecutter template repositories."""
+
 import io
 import os
+
 import pytest
 
 from cookiecutter import repository, exceptions
@@ -30,7 +34,6 @@ def cloned_cookiecutter_path(user_config_data, template):
 def test_should_find_existing_cookiecutter(
     template, user_config_data, cloned_cookiecutter_path
 ):
-
     project_dir, cleanup = repository.determine_repo_dir(
         template,
         abbreviations={},
@@ -45,8 +48,7 @@ def test_should_find_existing_cookiecutter(
 
 
 def test_local_repo_typo(template, user_config_data, cloned_cookiecutter_path):
-    """An unknown local repository should raise a `RepositoryNotFound` \
-    exception."""
+    """An unknown local repo should raise a `RepositoryNotFound` exception."""
     with pytest.raises(exceptions.RepositoryNotFound) as err:
         repository.determine_repo_dir(
             template,
diff --git a/tests/repository/test_determine_repository_should_use_local_repo.py b/tests/repository/test_determine_repository_should_use_local_repo.py
index 4b501d9..840ff89 100644
--- a/tests/repository/test_determine_repository_should_use_local_repo.py
+++ b/tests/repository/test_determine_repository_should_use_local_repo.py
@@ -1,9 +1,13 @@
 # -*- coding: utf-8 -*-
+
+"""Tests around using locally cached cookiecutter template repositories."""
+
 import os
-from cookiecutter import repository, exceptions
 
 import pytest
 
+from cookiecutter import repository, exceptions
+
 
 def test_finds_local_repo(tmpdir):
     """A valid local repository should be returned."""
diff --git a/tests/repository/test_is_repo_url.py b/tests/repository/test_is_repo_url.py
index 004202b..d32d758 100644
--- a/tests/repository/test_is_repo_url.py
+++ b/tests/repository/test_is_repo_url.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Tests for all supported cookiecutter template repository locations."""
+
 import pytest
 
 from cookiecutter.config import BUILTIN_ABBREVIATIONS
diff --git a/tests/repository/test_repository_has_cookiecutter_json.py b/tests/repository/test_repository_has_cookiecutter_json.py
index 07cea93..0988598 100644
--- a/tests/repository/test_repository_has_cookiecutter_json.py
+++ b/tests/repository/test_repository_has_cookiecutter_json.py
@@ -1,8 +1,11 @@
 # -*- coding: utf-8 -*-
-from cookiecutter.repository import repository_has_cookiecutter_json
+
+"""Tests around validation if a given repository contains a (valid) config."""
 
 import pytest
 
+from cookiecutter.repository import repository_has_cookiecutter_json
+
 
 def test_valid_repository():
     assert repository_has_cookiecutter_json("tests/fake-repo")
diff --git a/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py b/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
index a7ba71b..e3d0ed5 100644
--- a/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
+++ b/tests/test-extensions/custom-extension-post/hooks/post_gen_project.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
 # flake8: noqa
 
+"""Sample post-gen hook for testing that custom extensions are available and exposed methods are callable."""
+
 print("{% hello cookiecutter.name %}")
diff --git a/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py b/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
index a7ba71b..1147f0b 100644
--- a/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
+++ b/tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
 # flake8: noqa
 
+"""Sample pre-gen hook for testing that custom extensions are available and exposed methods are callable."""
+
 print("{% hello cookiecutter.name %}")
diff --git a/tests/test-extensions/hello_extension/hello_extension.py b/tests/test-extensions/hello_extension/hello_extension.py
index f6865c7..ba22839 100644
--- a/tests/test-extensions/hello_extension/hello_extension.py
+++ b/tests/test-extensions/hello_extension/hello_extension.py
@@ -1,11 +1,13 @@
 # -*- coding: utf-8 -*-
 
+"""Provides custom extension, exposing a ``hello`` command."""
+
 from jinja2 import nodes
 from jinja2.ext import Extension
 
 
 class HelloExtension(Extension):
-    tags = set(["hello"])
+    tags = {"hello"}
 
     def __init__(self, environment):
         """Hello Extension Constructor"""
diff --git a/tests/test-output-folder/{{cookiecutter.test_name}}/{{cookiecutter.folder_name}}/{{cookiecutter.filename}}.py b/tests/test-output-folder/{{cookiecutter.test_name}}/{{cookiecutter.folder_name}}/{{cookiecutter.filename}}.py
index 3cd27cd..87479a8 100644
--- a/tests/test-output-folder/{{cookiecutter.test_name}}/{{cookiecutter.folder_name}}/{{cookiecutter.filename}}.py
+++ b/tests/test-output-folder/{{cookiecutter.test_name}}/{{cookiecutter.folder_name}}/{{cookiecutter.filename}}.py
@@ -1 +1,3 @@
-print("This is the contents of {{ cookiecutter.filename }}.py.")
+"""Sample file to be created through a cookiecutter run."""
+
+print("These are the contents of {{ cookiecutter.filename }}.py.")
diff --git a/tests/test-pyhooks/hooks/post_gen_project.py b/tests/test-pyhooks/hooks/post_gen_project.py
index facd4ea..c25d458 100644
--- a/tests/test-pyhooks/hooks/post_gen_project.py
+++ b/tests/test-pyhooks/hooks/post_gen_project.py
@@ -1,5 +1,8 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+
+"""Simple post-gen hook for testing project folder and custom file creation."""
+
 from __future__ import print_function
 
 print("pre generation hook")
diff --git a/tests/test-pyhooks/hooks/pre_gen_project.py b/tests/test-pyhooks/hooks/pre_gen_project.py
index 4fc89cb..bf53f1b 100644
--- a/tests/test-pyhooks/hooks/pre_gen_project.py
+++ b/tests/test-pyhooks/hooks/pre_gen_project.py
@@ -1,5 +1,8 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+
+"""Simple pre-gen hook for testing project folder and custom file creation."""
+
 from __future__ import print_function
 
 print("pre generation hook")
diff --git a/tests/test-pyshellhooks/hooks/post_gen_project.py b/tests/test-pyshellhooks/hooks/post_gen_project.py
index facd4ea..c25d458 100644
--- a/tests/test-pyshellhooks/hooks/post_gen_project.py
+++ b/tests/test-pyshellhooks/hooks/post_gen_project.py
@@ -1,5 +1,8 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+
+"""Simple post-gen hook for testing project folder and custom file creation."""
+
 from __future__ import print_function
 
 print("pre generation hook")
diff --git a/tests/test-pyshellhooks/hooks/pre_gen_project.py b/tests/test-pyshellhooks/hooks/pre_gen_project.py
index 4fc89cb..bf53f1b 100644
--- a/tests/test-pyshellhooks/hooks/pre_gen_project.py
+++ b/tests/test-pyshellhooks/hooks/pre_gen_project.py
@@ -1,5 +1,8 @@
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+
+"""Simple pre-gen hook for testing project folder and custom file creation."""
+
 from __future__ import print_function
 
 print("pre generation hook")
diff --git a/tests/test_abort_generate_on_hook_error.py b/tests/test_abort_generate_on_hook_error.py
index 9b6ce34..5fd7d94 100644
--- a/tests/test_abort_generate_on_hook_error.py
+++ b/tests/test_abort_generate_on_hook_error.py
@@ -1,9 +1,16 @@
 # -*- coding: utf-8 -*-
 
+"""
+test_abort_generate_on_hook_error
+
+Tests to ensure cookiecutter properly exits with a non-zero exit code whenever
+errors occur in (optional) pre- or pos-gen hooks.
+"""
+
 import pytest
 
-from cookiecutter import generate
 from cookiecutter import exceptions
+from cookiecutter import generate
 
 
 @pytest.mark.usefixtures("clean_system")
diff --git a/tests/test_cli.py b/tests/test_cli.py
index 42bedf1..2ff6bdc 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -1,14 +1,16 @@
 # -*- coding: utf-8 -*-
 
-import os
+"""Collection of tests around cookiecutter's command-line interface."""
+
 import json
+import os
 
-from click.testing import CliRunner
 import pytest
+from click.testing import CliRunner
 
+from cookiecutter import utils
 from cookiecutter.__main__ import main
 from cookiecutter.main import cookiecutter
-from cookiecutter import utils
 
 
 @pytest.fixture(scope="session")
@@ -178,7 +180,6 @@ def test_cli_overwrite_if_exists_when_output_dir_does_not_exist(
 
 @pytest.mark.usefixtures("make_fake_project_dir", "remove_fake_project_dir")
 def test_cli_overwrite_if_exists_when_output_dir_exists(cli_runner, overwrite_cli_flag):
-
     result = cli_runner("tests/fake-repo-pre/", "--no-input", overwrite_cli_flag,)
     assert result.exit_code == 0
     assert os.path.isdir("fake-project")
diff --git a/tests/test_cookiecutter_invocation.py b/tests/test_cookiecutter_invocation.py
index a176677..0475fbd 100644
--- a/tests/test_cookiecutter_invocation.py
+++ b/tests/test_cookiecutter_invocation.py
@@ -8,10 +8,11 @@ using the entry point set up for the package.
 """
 
 import os
-import pytest
 import subprocess
 import sys
 
+import pytest
+
 from cookiecutter import utils
 
 
diff --git a/tests/test_cookiecutter_local_with_input.py b/tests/test_cookiecutter_local_with_input.py
index 2ae54e9..559244b 100644
--- a/tests/test_cookiecutter_local_with_input.py
+++ b/tests/test_cookiecutter_local_with_input.py
@@ -7,7 +7,9 @@ Tests formerly known from a unittest residing in test_main.py named
 TestCookiecutterLocalWithInput.test_cookiecutter_local_with_input
 TestCookiecutterLocalWithInput.test_cookiecutter_input_extra_context
 """
+
 import os
+
 import pytest
 
 from cookiecutter import main, utils
diff --git a/tests/test_custom_extensions_in_hooks.py b/tests/test_custom_extensions_in_hooks.py
index 1095574..a36dec8 100644
--- a/tests/test_custom_extensions_in_hooks.py
+++ b/tests/test_custom_extensions_in_hooks.py
@@ -1,7 +1,14 @@
 # -*- coding: utf-8 -*-
 
-import os
+"""
+test_custom_extension_in_hooks
+
+Tests to ensure custom cookiecutter extensions are properly made available to
+pre- and post-gen hooks.
+"""
+
 import codecs
+import os
 
 import pytest
 
diff --git a/tests/test_default_extensions.py b/tests/test_default_extensions.py
index 41928e4..0aa7f95 100644
--- a/tests/test_default_extensions.py
+++ b/tests/test_default_extensions.py
@@ -1,10 +1,17 @@
 # -*- coding: utf-8 -*-
 
-import os
+"""
+test_default_extensions
+
+Tests to ensure Jinja2 filters/extensions are available from within pre- and
+post-gen hooks.
+"""
+
 import io
+import os
 
-import pytest
 import freezegun
+import pytest
 
 from cookiecutter.main import cookiecutter
 
diff --git a/tests/test_environment.py b/tests/test_environment.py
index 72bbbf8..3c04d46 100644
--- a/tests/test_environment.py
+++ b/tests/test_environment.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Collection of tests around loading extensions."""
+
 import pytest
 
 from cookiecutter.environment import StrictEnvironment
diff --git a/tests/test_exceptions.py b/tests/test_exceptions.py
index f60b3df..cf129bb 100644
--- a/tests/test_exceptions.py
+++ b/tests/test_exceptions.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Collection of tests around general exception handling."""
+
 from jinja2.exceptions import UndefinedError
 
 from cookiecutter import exceptions
diff --git a/tests/test_find.py b/tests/test_find.py
index f92ab93..584652f 100644
--- a/tests/test_find.py
+++ b/tests/test_find.py
@@ -1,12 +1,9 @@
 # -*- coding: utf-8 -*-
 
-"""
-test_find
-
-Tests for `cookiecutter.find` module.
-"""
+"""Tests for `cookiecutter.find` module."""
 
 import os
+
 import pytest
 
 from cookiecutter import find
diff --git a/tests/test_generate_context.py b/tests/test_generate_context.py
index e77b504..96ff2b9 100644
--- a/tests/test_generate_context.py
+++ b/tests/test_generate_context.py
@@ -11,11 +11,13 @@ TestGenerateContext.test_generate_context_with_default_and_extra
 """
 
 from __future__ import unicode_literals
-import pytest
+
 import os
 import re
 from collections import OrderedDict
 
+import pytest
+
 from cookiecutter import generate
 from cookiecutter.exceptions import ContextDecodingException
 
diff --git a/tests/test_generate_file.py b/tests/test_generate_file.py
index ce14e9e..3c61eee 100644
--- a/tests/test_generate_file.py
+++ b/tests/test_generate_file.py
@@ -9,12 +9,13 @@ TestGenerateFile.test_generate_file_verbose_template_syntax_error
 """
 
 from __future__ import unicode_literals
+
 import json
 import os
 
+import pytest
 from jinja2 import FileSystemLoader
 from jinja2.exceptions import TemplateSyntaxError
-import pytest
 
 from cookiecutter import generate
 from cookiecutter.environment import StrictEnvironment
diff --git a/tests/test_generate_files.py b/tests/test_generate_files.py
index 0aa4f2c..7e5da1e 100644
--- a/tests/test_generate_files.py
+++ b/tests/test_generate_files.py
@@ -23,12 +23,14 @@ clean_system teardown code
 """
 
 from __future__ import unicode_literals
-import os
+
 import io
+import os
+
 import pytest
 
-from cookiecutter import generate
 from cookiecutter import exceptions
+from cookiecutter import generate
 from cookiecutter import utils
 
 
diff --git a/tests/test_generate_hooks.py b/tests/test_generate_hooks.py
index 61b3981..c3914ed 100644
--- a/tests/test_generate_hooks.py
+++ b/tests/test_generate_hooks.py
@@ -11,10 +11,12 @@ TestHooks.test_run_shell_hooks
 """
 
 from __future__ import unicode_literals
+
 import errno
 import os
-import sys
 import stat
+import sys
+
 import pytest
 
 from cookiecutter import generate
@@ -90,7 +92,6 @@ def test_empty_hooks():
 
 @pytest.mark.usefixtures("clean_system", "remove_additional_folders")
 def test_oserror_hooks(mocker):
-
     message = "Out of memory"
 
     err = OSError(message)
diff --git a/tests/test_get_config.py b/tests/test_get_config.py
index 3da3319..5d6f964 100644
--- a/tests/test_get_config.py
+++ b/tests/test_get_config.py
@@ -1,5 +1,9 @@
 # -*- coding: utf-8 -*-
+
+"""Collection of tests around loading cookiecutter config if present."""
+
 import os
+
 import pytest
 
 from cookiecutter import config
diff --git a/tests/test_hooks.py b/tests/test_hooks.py
index aac81c2..4d3c3cb 100644
--- a/tests/test_hooks.py
+++ b/tests/test_hooks.py
@@ -1,10 +1,6 @@
 # -*- coding: utf-8 -*-
 
-"""
-test_hooks
-
-Tests for `cookiecutter.hooks` module.
-"""
+"""Tests for `cookiecutter.hooks` module."""
 
 import os
 import pytest
diff --git a/tests/test_log.py b/tests/test_log.py
index d849cf9..8543bd8 100644
--- a/tests/test_log.py
+++ b/tests/test_log.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Collection of tests around log handling."""
+
 import logging
 
 import pytest
diff --git a/tests/test_main.py b/tests/test_main.py
index b24ee50..a0732ad 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Collection of tests around cookiecutter's replay feature."""
+
 from cookiecutter.main import cookiecutter
 
 
diff --git a/tests/test_output_folder.py b/tests/test_output_folder.py
index ef383a8..81a0831 100644
--- a/tests/test_output_folder.py
+++ b/tests/test_output_folder.py
@@ -1,19 +1,21 @@
 # -*- coding: utf-8 -*-
 
 """
-test_output_folder
+tests_output_folder
 
 Test formerly known from a unittest residing in test_generate.py named
 TestOutputFolder.test_output_folder
 """
 
 from __future__ import unicode_literals
+
 import os
+
 import pytest
 
+from cookiecutter import exceptions
 from cookiecutter import generate
 from cookiecutter import utils
-from cookiecutter import exceptions
 
 
 @pytest.fixture(scope="function")
diff --git a/tests/test_preferred_encoding.py b/tests/test_preferred_encoding.py
index 7ef5072..6d5b552 100644
--- a/tests/test_preferred_encoding.py
+++ b/tests/test_preferred_encoding.py
@@ -1,10 +1,13 @@
 # -*- coding: utf-8 -*-
 
-import locale
+"""Collection of tests around character encodings."""
+
 import codecs
-import pytest
+import locale
 import sys
 
+import pytest
+
 PY3 = sys.version_info[0] == 3
 
 
diff --git a/tests/test_prompt.py b/tests/test_prompt.py
index ee4aafa..304b85e 100644
--- a/tests/test_prompt.py
+++ b/tests/test_prompt.py
@@ -1,13 +1,9 @@
 # -*- coding: utf-8 -*-
 
-"""
-test_prompt
+"""Tests for `cookiecutter.prompt` module."""
 
-Tests for `cookiecutter.prompt` module.
-"""
-
-from collections import OrderedDict
 import platform
+from collections import OrderedDict
 
 import pytest
 import six
diff --git a/tests/test_read_repo_password.py b/tests/test_read_repo_password.py
index 4ad0eeb..502ddb5 100644
--- a/tests/test_read_repo_password.py
+++ b/tests/test_read_repo_password.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Tests around handling repositories which require authentication."""
+
 from cookiecutter.prompt import read_repo_password
 
 
diff --git a/tests/test_read_user_choice.py b/tests/test_read_user_choice.py
index 4193971..cf7d965 100644
--- a/tests/test_read_user_choice.py
+++ b/tests/test_read_user_choice.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Tests around prompting for and handling of choice variables."""
+
 import click
 import pytest
 
@@ -7,7 +9,6 @@ from cookiecutter.prompt import read_user_choice
 
 OPTIONS = ["hello", "world", "foo", "bar"]
 
-
 EXPECTED_PROMPT = """Select varname:
 1 - hello
 2 - world
diff --git a/tests/test_repo_not_found.py b/tests/test_repo_not_found.py
index 424fe8f..8729255 100644
--- a/tests/test_repo_not_found.py
+++ b/tests/test_repo_not_found.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Testing invalid cookiecutter template repositories."""
+
 import pytest
 
 from cookiecutter import main, exceptions
diff --git a/tests/test_specify_output_dir.py b/tests/test_specify_output_dir.py
index bdbf273..8939736 100644
--- a/tests/test_specify_output_dir.py
+++ b/tests/test_specify_output_dir.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
 
+"""Tests for cookiecutter's output directory customization feature."""
+
 import pytest
 
 from cookiecutter import main
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 00a2b89..cf72b53 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -1,16 +1,13 @@
 # -*- coding: utf-8 -*-
 
-"""
-test_utils
-
-Tests for `cookiecutter.utils` module.
-"""
+"""Tests for `cookiecutter.utils` module."""
 
 import os
-import pytest
 import stat
 import sys
 
+import pytest
+
 from cookiecutter import utils
 
 
diff --git a/tests/undefined-variable/dir-name/{{cookiecutter.project_slug}}/{{cookiecutter.foobar}}/helloworld.py b/tests/undefined-variable/dir-name/{{cookiecutter.project_slug}}/{{cookiecutter.foobar}}/helloworld.py
index e69de29..401f6af 100644
--- a/tests/undefined-variable/dir-name/{{cookiecutter.project_slug}}/{{cookiecutter.foobar}}/helloworld.py
+++ b/tests/undefined-variable/dir-name/{{cookiecutter.project_slug}}/{{cookiecutter.foobar}}/helloworld.py
@@ -0,0 +1,6 @@
+"""
+Sample Python file.
+
+Expected not to be created in a test due to the undefined variable
+``cookiecutter.foobar``.
+"""
diff --git a/tests/vcs/test_clone.py b/tests/vcs/test_clone.py
index 765ac84..4aab6b1 100644
--- a/tests/vcs/test_clone.py
+++ b/tests/vcs/test_clone.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Tests around cloning repositories and detection of errors at it."""
+
 import os
 import subprocess
 
diff --git a/tests/vcs/test_identify_repo.py b/tests/vcs/test_identify_repo.py
index 63e1525..f88617a 100644
--- a/tests/vcs/test_identify_repo.py
+++ b/tests/vcs/test_identify_repo.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Collection of tests around repository type identification."""
+
 import pytest
 
 from cookiecutter import exceptions, vcs
diff --git a/tests/vcs/test_is_vcs_installed.py b/tests/vcs/test_is_vcs_installed.py
index 2f21983..6284909 100644
--- a/tests/vcs/test_is_vcs_installed.py
+++ b/tests/vcs/test_is_vcs_installed.py
@@ -1,4 +1,7 @@
 # -*- coding: utf-8 -*-
+
+"""Collection of tests around VCS detection."""
+
 import pytest
 
 from cookiecutter import vcs
