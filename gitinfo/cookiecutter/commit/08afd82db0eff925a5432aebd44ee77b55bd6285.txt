commit 08afd82db0eff925a5432aebd44ee77b55bd6285
Author: Audrey Roy <audreyr@gmail.com>
Date:   Tue Jul 8 00:53:35 2014 -0700

    Vision/scope, more edits for core committer guide for #190.

diff --git a/CONTRIBUTING.rst b/CONTRIBUTING.rst
index 4fdab8b..6615162 100644
--- a/CONTRIBUTING.rst
+++ b/CONTRIBUTING.rst
@@ -160,14 +160,72 @@ locally with Tox 1.5 but succeeding when I upgraded to Tox 1.7.1.
 Core Committer Guide
 ====================
 
-.. warning:: This is an early draft and will likely change a lot.
-
 Vision and Scope
 -----------------
 
-To help guide us and limit the project from growing infinitely.
+Core committers, use this section to:
 
-TODO
+* Guide your instinct and decisions as a core committer
+* Limit the codebase from growing infinitely
+
+Command-Line Accessible
+~~~~~~~~~~~~~~~~~~~~~~~
+
+* Provides a command-line utility that creates projects from cookiecutters
+* Extremely easy to use without having to think too hard
+* Flexible for more complex use via optional arguments
+
+API Accessible
+~~~~~~~~~~~~~~
+
+* Entirely function-based and stateless (Class-free by intentional design)
+* Usable in pieces for developers of template generation tools
+
+Being Jinja2-specific
+~~~~~~~~~~~~~~~~~~~~~
+
+* Sets a standard baseline for project template creators, facilitating reuse
+* Minimizes the learning curve for those who already use Flask or Django
+* Minimizes scope of Cookiecutter codebase
+
+Extensible
+~~~~~~~~~~
+
+Being extendable by people with different ideas for Jinja2-based project template tools.
+
+* Entirely function-based
+* Aim for statelessness
+* Lets anyone write more opinionated tools
+    
+Freedom for Cookiecutter users to build and extend.
+
+* No officially-maintained cookiecutter templates, only ones by individuals
+* Commercial project-friendly licensing, allowing for private cookiecutters and private Cookiecutter-based tools
+
+Fast and Focused
+~~~~~~~~~~~~~~~~
+
+Cookiecutter is designed to do one thing, and do that one thing very well.
+
+* Cover the use cases that @audreyr needs, and as little as possible beyond that :)
+* Generates project templates from the command-line or API, nothing more
+* Minimize internal line of code (LOC) count
+* Ultra-fast project generation for high performance downstream tools
+
+Inclusive
+~~~~~~~~~
+
+* Cross-platform and cross-version support are more important than features/functionality
+* Fixing Windows bugs even if it's a pain, to allow for use by more beginner coders
+
+Stable
+~~~~~~
+
+* Aim for 100% test coverage and covering corner cases
+* No pull requests will be accepted that drop test coverage on any platform, including Windows
+* Conservative decisions patterned after CPython's conservative decisions with stability in mind
+* Stable APIs that tool builders can rely on
+* New features require a +1 from @audreyr
 
 Process: Pull Requests
 ------------------------
@@ -178,25 +236,40 @@ If a pull request is untriaged:
 * Set it for the milestone where it makes the most sense
 * Add it to the roadmap
 
-Milestones:
-
-* Follow semantic versioning. See http://semver.org
-* If a milestone contains too many pull requests, move some to the next milestone.
-
 How to prioritize pull requests, from most to least important:
 
 #. Fixes for broken tests. Broken means broken on any supported platform or Python version.
+#. Extra tests to cover corner cases.
 #. Minor edits to docs.
 #. Bug fixes.
 #. Major edits to docs.
 #. Features.
 
+Ensure that each pull request meets all requirements in this checklist:
+https://gist.github.com/audreyr/4feef90445b9680475f2
+
 Process: Issues
 ----------------
 
 If an issue is a bug that needs an urgent fix, mark it for the next patch release.
 Then either fix it or mark as please-help.
 
+For other issues: encourage friendly discussion, moderate debate, offer your thoughts.
+
+New features require a +1 from @audreyr.
+
+Process: Roadmap
+-----------------
+
+How to number milestones:
+
+* Follow semantic versioning. See http://semver.org
+
+Milestone size:
+
+* If a milestone contains too much, move some to the next milestone.
+* Err on the side of more frequent patch releases.
+
 Responsibilities
 -----------------
 
@@ -213,7 +286,7 @@ Becoming a Core Committer
 Contributors may be given core commit privileges. Preference will be given to those with:
 
 A. Past contributions to Cookiecutter and other open-source projects. Contributions to Cookiecutter include both code (both accepted and pending) and friendly participation in the issue tracker. Quantity and quality are considered.
-B. A coding style that I find simple, minimal, and clean.
+B. A coding style that @audreyr finds simple, minimal, and clean.
 C. Access to resources for cross-platform development and testing.
 D. Time to devote to the project regularly.
 Autogenerated from the docs via `make contributing`
diff --git a/docs/core_committer_guide.rst b/docs/core_committer_guide.rst
index 4827a9b..db29d30 100644
--- a/docs/core_committer_guide.rst
+++ b/docs/core_committer_guide.rst
@@ -1,14 +1,72 @@
 Core Committer Guide
 ====================
 
-.. warning:: This is an early draft and will likely change a lot.
-
 Vision and Scope
 -----------------
 
-To help guide us and limit the project from growing infinitely.
+Core committers, use this section to:
+
+* Guide your instinct and decisions as a core committer
+* Limit the codebase from growing infinitely
+
+Command-Line Accessible
+~~~~~~~~~~~~~~~~~~~~~~~
+
+* Provides a command-line utility that creates projects from cookiecutters
+* Extremely easy to use without having to think too hard
+* Flexible for more complex use via optional arguments
+
+API Accessible
+~~~~~~~~~~~~~~
+
+* Entirely function-based and stateless (Class-free by intentional design)
+* Usable in pieces for developers of template generation tools
+
+Being Jinja2-specific
+~~~~~~~~~~~~~~~~~~~~~
+
+* Sets a standard baseline for project template creators, facilitating reuse
+* Minimizes the learning curve for those who already use Flask or Django
+* Minimizes scope of Cookiecutter codebase
+
+Extensible
+~~~~~~~~~~
+
+Being extendable by people with different ideas for Jinja2-based project template tools.
+
+* Entirely function-based
+* Aim for statelessness
+* Lets anyone write more opinionated tools
+    
+Freedom for Cookiecutter users to build and extend.
+
+* No officially-maintained cookiecutter templates, only ones by individuals
+* Commercial project-friendly licensing, allowing for private cookiecutters and private Cookiecutter-based tools
+
+Fast and Focused
+~~~~~~~~~~~~~~~~
+
+Cookiecutter is designed to do one thing, and do that one thing very well.
+
+* Cover the use cases that @audreyr needs, and as little as possible beyond that :)
+* Generates project templates from the command-line or API, nothing more
+* Minimize internal line of code (LOC) count
+* Ultra-fast project generation for high performance downstream tools
+
+Inclusive
+~~~~~~~~~
 
-TODO
+* Cross-platform and cross-version support are more important than features/functionality
+* Fixing Windows bugs even if it's a pain, to allow for use by more beginner coders
+
+Stable
+~~~~~~
+
+* Aim for 100% test coverage and covering corner cases
+* No pull requests will be accepted that drop test coverage on any platform, including Windows
+* Conservative decisions patterned after CPython's conservative decisions with stability in mind
+* Stable APIs that tool builders can rely on
+* New features require a +1 from @audreyr
 
 Process: Pull Requests
 ------------------------
@@ -19,25 +77,40 @@ If a pull request is untriaged:
 * Set it for the milestone where it makes the most sense
 * Add it to the roadmap
 
-Milestones:
-
-* Follow semantic versioning. See http://semver.org
-* If a milestone contains too many pull requests, move some to the next milestone.
-
 How to prioritize pull requests, from most to least important:
 
 #. Fixes for broken tests. Broken means broken on any supported platform or Python version.
+#. Extra tests to cover corner cases.
 #. Minor edits to docs.
 #. Bug fixes.
 #. Major edits to docs.
 #. Features.
 
+Ensure that each pull request meets all requirements in this checklist:
+https://gist.github.com/audreyr/4feef90445b9680475f2
+
 Process: Issues
 ----------------
 
 If an issue is a bug that needs an urgent fix, mark it for the next patch release.
 Then either fix it or mark as please-help.
 
+For other issues: encourage friendly discussion, moderate debate, offer your thoughts.
+
+New features require a +1 from @audreyr.
+
+Process: Roadmap
+-----------------
+
+How to number milestones:
+
+* Follow semantic versioning. See http://semver.org
+
+Milestone size:
+
+* If a milestone contains too much, move some to the next milestone.
+* Err on the side of more frequent patch releases.
+
 Responsibilities
 -----------------
 
@@ -54,6 +127,6 @@ Becoming a Core Committer
 Contributors may be given core commit privileges. Preference will be given to those with:
 
 A. Past contributions to Cookiecutter and other open-source projects. Contributions to Cookiecutter include both code (both accepted and pending) and friendly participation in the issue tracker. Quantity and quality are considered.
-B. A coding style that I find simple, minimal, and clean.
+B. A coding style that @audreyr finds simple, minimal, and clean.
 C. Access to resources for cross-platform development and testing.
 D. Time to devote to the project regularly.
