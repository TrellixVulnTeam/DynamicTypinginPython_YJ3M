commit e693538a8278b289729de831181286c062266cbe
Author: Joshua Carp <jm.carp@gmail.com>
Date:   Thu Feb 23 23:04:20 2017 -0500

    Handle subprocess output.
    
    Subprocess returns a bytestring, so comparisons with strings in python
    3.x throw unexpected errors. This patch decodes bytestrings to strings
    and updates tests to return realistic output.

diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index d855833..7c0d461 100644
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -129,12 +129,13 @@ def clone(repo_url, checkout=None, clone_to_dir='.', no_input=False):
                 stderr=subprocess.STDOUT,
             )
     except subprocess.CalledProcessError as clone_error:
-        if 'not found' in clone_error.output.lower():
+        output = clone_error.output.decode()
+        if 'not found' in output.lower():
             raise RepositoryNotFound(
                 'The repository {} could not be found, '
                 'have you made a typo?'.format(repo_url)
             )
-        if any(error in clone_error.output for error in BRANCH_ERRORS):
+        if any(error in output for error in BRANCH_ERRORS):
             raise RepositoryCloneFailed(
                 'The {} branch of repository {} could not found, '
                 'have you made a typo?'.format(checkout, repo_url)
diff --git a/tests/vcs/test_clone.py b/tests/vcs/test_clone.py
index b6a1394..0e41d8c 100644
--- a/tests/vcs/test_clone.py
+++ b/tests/vcs/test_clone.py
@@ -139,8 +139,8 @@ def test_clone_should_invoke_vcs_command(
 
 
 @pytest.mark.parametrize('error_message', [
-    "fatal: repository 'https://github.com/hackebro/cookiedozer' not found",
-    'hg: abort: HTTP Error 404: Not Found',
+    b"fatal: repository 'https://github.com/hackebro/cookiedozer' not found",
+    b'hg: abort: HTTP Error 404: Not Found',
 ])
 def test_clone_handles_repo_typo(mocker, clone_dir, error_message):
     """In `clone()`, repository not found errors should raise an
@@ -171,8 +171,8 @@ def test_clone_handles_repo_typo(mocker, clone_dir, error_message):
 
 
 @pytest.mark.parametrize('error_message', [
-    "error: pathspec 'unknown_branch' did not match any file(s) known to git.",
-    "hg: abort: unknown revision 'unknown_branch'!",
+    b"error: pathspec 'unknown_branch' did not match any file(s) known to git",
+    b"hg: abort: unknown revision 'unknown_branch'!",
 ])
 def test_clone_handles_branch_typo(mocker, clone_dir, error_message):
     """In `clone()`, branch not found errors should raise an
@@ -207,7 +207,7 @@ def test_clone_unknown_subprocess_error(mocker, clone_dir):
         'cookiecutter.vcs.subprocess.check_output',
         autospec=True,
         side_effect=[subprocess.CalledProcessError(
-            -1, 'cmd', output='Something went wrong'
+            -1, 'cmd', output=b'Something went wrong'
         )]
     )
 
