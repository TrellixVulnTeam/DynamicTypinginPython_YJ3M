commit 59dc2d505ce28eea7128d326669a149cb0ec7c2a
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 22:14:41 2013 +0200

    Fix test_main.TestCookiecutterRepoArg.test_cookiecutter_mercurial

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index fc7f898..3e6ff8f 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -47,7 +47,10 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
             clone_to_dir=config_dict['cookiecutters_dir']
         )
     elif input_dir.endswith('.hg'):
-        repo_dir = hg_clone(input_dir)
+        repo_dir = hg_clone(
+            repo=input_dir,
+            clone_to_dir=config_dict['cookiecutters_dir']
+        )
     else:
         # If it's a local repo, no need to clone or copy to your cookiecutters_dir
         repo_dir = input_dir
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index df303d7..418dd72 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -64,21 +64,26 @@ def git_clone(repo, checkout=None, clone_to_dir="."):
     return repo_dir
 
 
-def hg_clone(repo):
+def hg_clone(repo, clone_to_dir="."):
     """
     Clone a mercurial repo to the current directory.
 
     :param repo: repo URL ending with .hg.
     """
 
+    # Ensure that clone_to_dir exists
+    clone_to_dir = os.path.expanduser(clone_to_dir)
+    make_sure_path_exists(clone_to_dir)
+
     # Return repo dir
     tail = os.path.split(repo)[1]
-    repo_dir = tail.rsplit('.hg')[0]
+    repo_dir = os.path.normpath(os.path.join(clone_to_dir, tail.rsplit('.hg')[0]))
     logging.debug('repo_dir is {0}'.format(repo_dir))
 
     if os.path.isdir(repo_dir):
         delete_repo(repo_dir)
 
-    os.system('hg clone {0}'.format(repo[0:-3]))
+    # os.system('hg clone {0}'.format(repo[0:-3]))
+    subprocess.check_call(['hg', 'clone', repo[0:-3]], cwd=clone_to_dir)
 
     return repo_dir
diff --git a/tests/test_main.py b/tests/test_main.py
index c398fe3..dfc903b 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -122,7 +122,7 @@ class TestCookiecutterRepoArg(CookiecutterCleanSystemTestCase):
             sys.stdin = StringIO('\n\n\n\n\n\n\n\n\n')
         main.cookiecutter('https://bitbucket.org/pokoli/cookiecutter-trytonmodule.hg')
         logging.debug('Current dir is {0}'.format(os.getcwd()))
-        clone_dir = os.path.join(os.path.expanduser('~/.cookiecutters'), 'cookiecutter-pypackage')
+        clone_dir = os.path.join(os.path.expanduser('~/.cookiecutters'), 'cookiecutter-trytonmodule')
         self.assertTrue(os.path.exists(clone_dir))
         self.assertTrue(os.path.isdir('module_name'))
         self.assertTrue(os.path.isfile('module_name/README'))
