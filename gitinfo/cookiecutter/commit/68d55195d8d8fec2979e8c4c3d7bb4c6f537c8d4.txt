commit 68d55195d8d8fec2979e8c4c3d7bb4c6f537c8d4
Author: raphigaziano <r.gaziano@gmail.com>
Date:   Sat Sep 7 11:44:56 2013 +0200

    Added config exception and some minimal error checking

diff --git a/cookiecutter/config.py b/cookiecutter/config.py
index d203d1c..ecbd529 100644
--- a/cookiecutter/config.py
+++ b/cookiecutter/config.py
@@ -15,6 +15,7 @@ import sys
 import yaml
 
 from .utils import unicode_open
+from .exceptions import InvalidConfiguration
 
 _CONFIG = {}
 
@@ -41,7 +42,11 @@ def get_config(config_path=GLOB_SETTINGS_PATH):
     if not os.path.exists(config_path):
         create_config({}, config_path)	
     with unicode_open(config_path) as file_handle:
-        global_config = yaml.load(file_handle)
+        try:
+            global_config = yaml.load(file_handle)
+        except yaml.scanner.ScannerError:
+            raise InvalidConfiguration(
+                "%s is no a valid YAML file" % config_path)
 
     return global_config
 
diff --git a/cookiecutter/exceptions.py b/cookiecutter/exceptions.py
index 9423a2e..f819dc8 100755
--- a/cookiecutter/exceptions.py
+++ b/cookiecutter/exceptions.py
@@ -34,3 +34,9 @@ class MissingProjectDir(CookiecutterException):
     Raised during cleanup when remove_repo() can't find a generated project
     directory inside of a repo.
     """
+
+class InvalidConfiguration(CookiecutterException):
+    """
+    Raised if the global configuration file is not valid YAML or is
+    badly contructed.
+    """
diff --git a/tests/config/invalid-config.yaml b/tests/config/invalid-config.yaml
new file mode 100644
index 0000000..a510278
--- /dev/null
+++ b/tests/config/invalid-config.yaml
@@ -0,0 +1,6 @@
+default_context
+    full_name:
+    email: "r.gaziano@gmail.com"
+    github_username: "raphigaziano"
+template_dirs:
+    "/home/raphi/dev"
diff --git a/tests/test_config.py b/tests/test_config.py
index d5d07ce..e726139 100755
--- a/tests/test_config.py
+++ b/tests/test_config.py
@@ -15,6 +15,7 @@ import unittest
 import yaml
 
 from cookiecutter import config
+from cookiecutter.exceptions import InvalidConfiguration
 
 if sys.version_info[:2] < (2, 7):
     import unittest2 as unittest
@@ -73,6 +74,11 @@ class TestConfig(unittest.TestCase):
         self.assertTrue(os.path.exists(fname))
         os.remove(fname)
 
+    def test_invalid_config(self):
+        """ An invalid config file should raise a cookiecutter InvalidConfiguration exception """
+        self.assertRaises(InvalidConfiguration, config.get_config,
+                          "tests/config/invalid-config.yaml")
+
 
 if __name__ == '__main__':
     unittest.main()
