commit 6d7d1d33bda85c3fb75c1a26a4e8b712af265409
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 16:13:45 2013 +0200

    Clone to ~/.cookiecutters/ (or Win equivalent) by default, or use custom setting.

diff --git a/cookiecutter/config.py b/cookiecutter/config.py
index 70dded6..03340ee 100755
--- a/cookiecutter/config.py
+++ b/cookiecutter/config.py
@@ -8,6 +8,7 @@ cookiecutter.config
 Global configuration handling
 """
 
+from __future__ import unicode_literals
 import copy
 import logging
 import os
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 2b2755b..827ccb6 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -11,6 +11,7 @@ The code in this module is also a good example of how to use Cookiecutter as a
 library rather than a script.
 """
 
+from __future__ import unicode_literals
 import argparse
 import logging
 import os
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index aeedcc8..4fa2b88 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -8,6 +8,7 @@ cookiecutter.vcs
 Helper functions for working with version control systems.
 """
 
+from __future__ import unicode_literals
 import logging
 import os
 import shutil
@@ -27,7 +28,7 @@ def git_clone(repo, checkout=None, clone_to_dir="."):
 
     # Return repo dir
     tail = os.path.split(repo)[1]
-    repo_dir = tail.rsplit('.git')[0]
+    repo_dir = os.path.join(clone_to_dir, tail.rsplit('.git')[0])
     logging.debug('repo_dir is {0}'.format(repo_dir))
 
     if os.path.isdir(repo_dir):
diff --git a/tests/test_examples.py b/tests/test_examples.py
index f9b3890..dfbc88a 100755
--- a/tests/test_examples.py
+++ b/tests/test_examples.py
@@ -8,6 +8,7 @@ test_examples
 Tests for the Cookiecutter example repos.
 """
 
+from __future__ import unicode_literals
 import errno
 import os
 import shutil
@@ -36,10 +37,34 @@ try:
 except KeyError:
     travis = False
 
+from cookiecutter import config, utils
+
 
 @unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
 class TestPyPackage(unittest.TestCase):
 
+    def setUp(self):
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+        
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
+    def tearDown(self):
+        if os.path.isdir('cookiecutter-pypackage'):
+            shutil.rmtree('cookiecutter-pypackage')
+        if os.path.isdir('boilerplate'):
+            shutil.rmtree('boilerplate')
+
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
+
     def test_cookiecutter_pypackage(self):
         """
         Tests that https://github.com/audreyr/cookiecutter-pypackage.git works.
@@ -59,17 +84,35 @@ class TestPyPackage(unittest.TestCase):
         ) as proc:
             proc.wait()
 
+        self.assertTrue(os.path.isdir('cookiecutter-pypackage'))
         self.assertTrue(os.path.isfile('boilerplate/README.rst'))
 
+
+@unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
+class TestJQuery(unittest.TestCase):
+
+    def setUp(self):
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+        
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
     def tearDown(self):
-        if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
+        if os.path.isdir('cookiecutter-jquery'):
+            shutil.rmtree('cookiecutter-jquery')
         if os.path.isdir('boilerplate'):
             shutil.rmtree('boilerplate')
 
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
 
-@unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
-class TestJQuery(unittest.TestCase):
 
     def test_cookiecutter_jquery(self):
         """
@@ -90,17 +133,35 @@ class TestJQuery(unittest.TestCase):
         ) as proc:
             proc.wait()
 
+        self.assertTrue(os.path.isdir('cookiecutter-jquery'))
         self.assertTrue(os.path.isfile('boilerplate/README.md'))
 
+
+@unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
+class TestExamplesRepoArg(unittest.TestCase):
+
+    def setUp(self):
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+        
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
     def tearDown(self):
-        if os.path.isdir('cookiecutter-jquery'):
-            shutil.rmtree('cookiecutter-jquery')
+        with utils.work_in(config.DEFAULT_CONFIG['cookiecutters_dir']):
+            if os.path.isdir('cookiecutter-pypackage'):
+                shutil.rmtree('cookiecutter-pypackage')
         if os.path.isdir('boilerplate'):
             shutil.rmtree('boilerplate')
 
-
-@unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
-class TestExamplesRepoArg(unittest.TestCase):
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
 
     def test_cookiecutter_pypackage_git(self):
         with subprocess.Popen(
@@ -111,22 +172,36 @@ class TestExamplesRepoArg(unittest.TestCase):
 
             # Just skip all the prompts
             proc.communicate(input=b'\n\n\n\n\n\n\n\n\n\n\n\n')
-
+        
         self.assertTrue(os.path.isfile('boilerplate/README.rst'))
 
-    def tearDown(self):
-        if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
-        if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate')
 
 
 @unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
 class TestGitBranch(unittest.TestCase):
 
     def setUp(self):
-        if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+        
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
+    def tearDown(self):
+        with utils.work_in(config.DEFAULT_CONFIG['cookiecutters_dir']):
+            if os.path.isdir('cookiecutter-pypackage'):
+                shutil.rmtree('cookiecutter-pypackage')
+        if os.path.isdir('boilerplate'):
+            shutil.rmtree('boilerplate')
+
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
 
     def test_branch(self):
         with subprocess.Popen(
@@ -141,12 +216,6 @@ class TestGitBranch(unittest.TestCase):
         self.assertTrue(os.path.isfile('boilerplate/README.rst'))
         self.assertTrue(os.path.isfile('boilerplate/boilerplate/main.py'))
 
-    def tearDown(self):
-        if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
-        if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate')
-
 
 if __name__ == '__main__':
     unittest.main()
