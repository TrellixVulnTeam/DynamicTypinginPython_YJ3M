commit a04aa71a1e097773c1c1966f3d872ddfd79c7253
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sun Jul 28 12:40:43 2013 +0200

    Allow usage of Cookiecutter as a library, not just a command.

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index ca8a556..6b7908c 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -21,30 +21,19 @@ from .generate import generate_context, generate_files
 from .vcs import git_clone
 
 
-def main():
-    """ Entry point for the package, as defined in setup.py. """
-
-    # Log info and above to console
-    logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO)
+def cookiecutter(input_dir):
+    """
+    API equivalent to using Cookiecutter at the command line.
+    """
 
-    # Get command line input/output arguments
-    parser = argparse.ArgumentParser(
-        description='Create a project from a Cookiecutter project template.'
-    )
-    parser.add_argument(
-        'input_dir',
-        help='Cookiecutter project template dir, e.g. {{project.repo_name}}/'
-    )
-    args = parser.parse_args()
-    
     # If it's a git repo, clone and prompt
-    if args.input_dir.endswith('.git'):
+    if input_dir.endswith('.git'):
         got_repo_arg = True
-        repo_dir = git_clone(args.input_dir)
+        repo_dir = git_clone(input_dir)
         project_template = find_template(repo_dir)
         os.chdir(repo_dir)
     else:
-        project_template = args.input_dir
+        project_template = input_dir
 
     # Create project from local context and project template.
     context = generate_context(
@@ -60,6 +49,25 @@ def main():
     if got_repo_arg:
         generated_project = context['project']['repo_name']
         remove_repo(repo_dir, generated_project)
+    
+
+def main():
+    """ Entry point for the package, as defined in setup.py. """
+
+    # Log info and above to console
+    logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO)
+
+    # Get command line input/output arguments
+    parser = argparse.ArgumentParser(
+        description='Create a project from a Cookiecutter project template.'
+    )
+    parser.add_argument(
+        'input_dir',
+        help='Cookiecutter project template dir, e.g. {{project.repo_name}}/'
+    )
+    args = parser.parse_args()
+    
+    cookiecutter(args.input_dir)
 
 if __name__ == '__main__':
     main()
