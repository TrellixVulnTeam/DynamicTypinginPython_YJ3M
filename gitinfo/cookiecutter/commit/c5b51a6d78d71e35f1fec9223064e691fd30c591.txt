commit c5b51a6d78d71e35f1fec9223064e691fd30c591
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 13:24:17 2013 +0200

    Prevent user's config file from overwriting context in tests.

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 79cfd41..72f951b 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -18,6 +18,7 @@ from jinja2.environment import Environment
 from jinja2.exceptions import TemplateSyntaxError
 from binaryornot.check import is_binary
 
+from .config import get_user_config
 from .exceptions import NonTemplatedInputDirException
 from .find import find_template
 from .utils import make_sure_path_exists, unicode_open, work_in
@@ -51,6 +52,12 @@ def generate_context(context_file='cookiecutter.json'):
     file_stem = file_name.split('.')[0]
     context[file_stem] = obj
 
+    # Overwrite context variable defaults with the default context from the
+    # user's global config, if available
+    conf = get_user_config()
+    if conf:
+        obj.update(conf['default_context'])
+
     logging.debug('Context generated is {0}'.format(context))
     return context
 
diff --git a/tests/test_config.py b/tests/test_config.py
index 789c142..30858bb 100755
--- a/tests/test_config.py
+++ b/tests/test_config.py
@@ -61,20 +61,24 @@ class TestGetConfig(unittest.TestCase):
 
 
 class TestGetUserConfig(unittest.TestCase):
-    
+
     def setUp(self):
         self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
-        
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+
         # If ~/.cookiecutterrc is pre-existing, move it to a temp location
         if os.path.exists(self.user_config_path):
-            shutil.copy(self.user_config_path, '.cookiecutterrc.backup')
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
             os.remove(self.user_config_path)
 
     def tearDown(self):
         # If it existed, restore ~/.cookiecutterrc
-        if os.path.exists('.cookiecutterrc.backup'):
-            shutil.copy('.cookiecutterrc.backup', self.user_config_path)
-            os.remove('.cookiecutterrc.backup')
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
+
 
     def test_get_user_config_valid(self):
         """ Get config from a valid ~/.cookiecutterrc file """
diff --git a/tests/test_generate.py b/tests/test_generate.py
index f660510..d57b6e2 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -155,6 +155,23 @@ class TestGenerateFiles(unittest.TestCase):
 
 class TestGenerateContext(unittest.TestCase):
 
+    def setUp(self):
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+        
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
+    def tearDown(self):
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
+
     def test_generate_context(self):
         context = generate.generate_context(context_file='tests/json/test.json')
         self.assertEqual(context, {"test": {"1": 2}})
@@ -162,6 +179,23 @@ class TestGenerateContext(unittest.TestCase):
 
 class TestOutputFolder(unittest.TestCase):
 
+    def setUp(self):
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
+    def tearDown(self):
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
+
     def test_output_folder(self):
         context = generate.generate_context(
             context_file='tests/test-output-folder/cookiecutter.json'
