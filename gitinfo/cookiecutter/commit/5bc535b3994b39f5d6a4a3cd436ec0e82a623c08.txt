commit 5bc535b3994b39f5d6a4a3cd436ec0e82a623c08
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Fri Nov 7 21:42:41 2014 +0200

    Rename `input_dir` to template
    
    And remove `click.Path` validation

diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
index 068cae6..6702b61 100755
--- a/cookiecutter/cli.py
+++ b/cookiecutter/cli.py
@@ -34,7 +34,7 @@ def print_version(context, param, value):
 
 
 @click.command()
-@click.argument('input_dir', type=click.Path(exists=True))
+@click.argument('template')
 @click.option(
     '--no-input', is_flag=True,
     help='Do not prompt for parameters and only use cookiecutter.json '
@@ -53,8 +53,8 @@ def print_version(context, param, value):
     '-v', '--verbose',
     is_flag=True, help='Print debug information', default=False
 )
-def main(input_dir, no_input, checkout, verbose):
-    """Create a project from a Cookiecutter project template (INPUT_DIR)."""
+def main(template, no_input, checkout, verbose):
+    """Create a project from a Cookiecutter project template (TEMPLATE)."""
     if verbose:
         logging.basicConfig(
             format='%(levelname)s %(filename)s: %(message)s',
@@ -67,4 +67,4 @@ def main(input_dir, no_input, checkout, verbose):
             level=logging.INFO
         )
 
-    cookiecutter(input_dir, checkout, no_input)
+    cookiecutter(template, checkout, no_input)
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 5d6b00b..8a015d4 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -52,11 +52,11 @@ def expand_abbreviations(input_dir, config_dict):
     return input_dir
 
 
-def cookiecutter(input_dir, checkout=None, no_input=False, extra_context=None):
+def cookiecutter(template, checkout=None, no_input=False, extra_context=None):
     """
     API equivalent to using Cookiecutter at the command line.
 
-    :param input_dir: A directory containing a project template dir,
+    :param template: A directory containing a project template directory,
         or a URL to a git repository.
     :param checkout: The branch, tag or commit ID to checkout after clone.
     :param no_input: Prompt the user at command line for manual configuration?
@@ -68,12 +68,12 @@ def cookiecutter(input_dir, checkout=None, no_input=False, extra_context=None):
     # If no config file, sensible defaults from config.DEFAULT_CONFIG are used
     config_dict = get_user_config()
 
-    input_dir = expand_abbreviations(input_dir, config_dict)
+    template = expand_abbreviations(template, config_dict)
 
     # TODO: find a better way to tell if it's a repo URL
     if 'git@' in input_dir or 'https://' in input_dir:
         repo_dir = clone(
-            repo_url=input_dir,
+            repo_url=template,
             checkout=checkout,
             clone_to_dir=config_dict['cookiecutters_dir'],
             no_input=no_input
@@ -81,7 +81,7 @@ def cookiecutter(input_dir, checkout=None, no_input=False, extra_context=None):
     else:
         # If it's a local repo, no need to clone or copy to your
         # cookiecutters_dir
-        repo_dir = input_dir
+        repo_dir = template
 
     context_file = os.path.join(repo_dir, 'cookiecutter.json')
     logging.debug('context_file is {0}'.format(context_file))
