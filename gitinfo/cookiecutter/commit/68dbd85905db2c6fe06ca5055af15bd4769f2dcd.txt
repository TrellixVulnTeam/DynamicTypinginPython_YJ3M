commit 68dbd85905db2c6fe06ca5055af15bd4769f2dcd
Author: Paul Moore <p.f.moore@gmail.com>
Date:   Sat Jul 26 22:46:30 2014 +0100

    Generate shell hooks dynamically for Unix/Windows portability

diff --git a/tests/test-hooks/hooks/post_gen_project.sh b/tests/test-hooks/hooks/post_gen_project.sh
deleted file mode 100755
index d244dce..0000000
--- a/tests/test-hooks/hooks/post_gen_project.sh
+++ /dev/null
@@ -1,4 +0,0 @@
-#!/bin/bash
-
-echo 'post generation hook';
-touch 'shell_post.txt'
diff --git a/tests/test-hooks/hooks/pre_gen_project.py b/tests/test-hooks/hooks/pre_gen_project.py
deleted file mode 100755
index 3cb7018..0000000
--- a/tests/test-hooks/hooks/pre_gen_project.py
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-from __future__ import print_function
-
-print('pre generation hook')
-f = open('python_pre.txt', 'w')
-f.close()
-
diff --git a/tests/test-hooks/input{{hooks}}/README.rst b/tests/test-hooks/input{{hooks}}/README.rst
deleted file mode 100644
index a71dc41..0000000
--- a/tests/test-hooks/input{{hooks}}/README.rst
+++ /dev/null
@@ -1,4 +0,0 @@
-foo
-===
-
-bar
diff --git a/tests/test-shellhooks/hooks/post_gen_project.sh b/tests/test-shellhooks/hooks/post_gen_project.sh
deleted file mode 100755
index d244dce..0000000
--- a/tests/test-shellhooks/hooks/post_gen_project.sh
+++ /dev/null
@@ -1,4 +0,0 @@
-#!/bin/bash
-
-echo 'post generation hook';
-touch 'shell_post.txt'
diff --git a/tests/test-shellhooks/hooks/pre_gen_project.sh b/tests/test-shellhooks/hooks/pre_gen_project.sh
deleted file mode 100755
index 351b6af..0000000
--- a/tests/test-shellhooks/hooks/pre_gen_project.sh
+++ /dev/null
@@ -1,4 +0,0 @@
-#!/bin/bash
-
-echo 'post generation hook';
-touch 'shell_pre.txt'
diff --git a/tests/test-shellhooks/input{{cookiecutter.shellhooks}}/README.rst b/tests/test-shellhooks/input{{cookiecutter.shellhooks}}/README.rst
deleted file mode 100644
index a71dc41..0000000
--- a/tests/test-shellhooks/input{{cookiecutter.shellhooks}}/README.rst
+++ /dev/null
@@ -1,4 +0,0 @@
-foo
-===
-
-bar
diff --git a/tests/test_generate.py b/tests/test_generate.py
index 0903385..2366b28 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -11,6 +11,7 @@ from __future__ import unicode_literals
 import logging
 import os
 import sys
+import stat
 import unittest
 
 from jinja2 import FileSystemLoader
@@ -236,6 +237,50 @@ It is 2014."""
         self.assertTrue(os.path.isfile('output_folder/im_a.dir/im_a.file.py'))
 
 
+def make_test_repo(name):
+    hooks = os.path.join(name, 'hooks')
+    template = os.path.join(name, 'input{{cookiecutter.shellhooks}}')
+    os.mkdir(name)
+    os.mkdir(hooks)
+    os.mkdir(template)
+
+    with open(os.path.join(template, 'README.rst'), 'w') as f:
+        f.write("foo\n===\n\nbar\n")
+
+    if sys.platform.startswith('win'):
+        filename = os.path.join(hooks, 'pre_gen_project.bat')
+        with open(filename, 'w') as f:
+            f.write("@echo off\n")
+            f.write("\n")
+            f.write("echo pre generation hook\n")
+            f.write("echo. >shell_pre.txt\n")
+
+        filename = os.path.join(hooks, 'post_gen_project.bat')
+        with open(filename, 'w') as f:
+            f.write("@echo off\n")
+            f.write("\n")
+            f.write("echo post generation hook\n")
+            f.write("echo. >shell_post.txt\n")
+    else:
+        filename = os.path.join(hooks, 'pre_gen_project.sh')
+        with open(filename, 'w') as f:
+            f.write("#!/bin/bash\n")
+            f.write("\n")
+            f.write("echo 'pre generation hook';\n")
+            f.write("touch 'shell_pre.txt'\n")
+        # Set the execute bit
+        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
+
+        filename = os.path.join(hooks, 'post_gen_project.sh')
+        with open(filename, 'w') as f:
+            f.write("#!/bin/bash\n")
+            f.write("\n")
+            f.write("echo 'post generation hook';\n")
+            f.write("touch 'shell_post.txt'\n")
+        # Set the execute bit
+        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
+
+
 class TestHooks(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
@@ -243,8 +288,8 @@ class TestHooks(CookiecutterCleanSystemTestCase):
             utils.rmtree('tests/test-pyhooks/inputpyhooks')
         if os.path.exists('inputpyhooks'):
             utils.rmtree('inputpyhooks')
-        if os.path.exists('tests/test-shellhooks/inputshellhooks'):
-            utils.rmtree('tests/test-shellhooks/inputshellhooks')
+        if os.path.exists('tests/test-shellhooks'):
+            utils.rmtree('tests/test-shellhooks')
         super(TestHooks, self).tearDown()
 
     def test_ignore_hooks_dirs(self):
@@ -279,6 +324,7 @@ class TestHooks(CookiecutterCleanSystemTestCase):
         self.assertTrue(os.path.exists('inputpyhooks/python_post.txt'))
 
     def test_run_shell_hooks(self):
+        make_test_repo('tests/test-shellhooks')
         generate.generate_files(
             context={
                 'cookiecutter' : {'shellhooks': 'shellhooks'}
diff --git a/tests/test_hooks.py b/tests/test_hooks.py
index e7e210f..2db7dcd 100755
--- a/tests/test_hooks.py
+++ b/tests/test_hooks.py
@@ -10,20 +10,67 @@ Tests for `cookiecutter.hooks` module.
 
 import sys
 import os
+import stat
 import unittest
 
 from cookiecutter import hooks, utils
 
+def make_test_repo(name):
+    hooks = os.path.join(name, 'hooks')
+    template = os.path.join(name, 'input{{hooks}}')
+    os.mkdir(name)
+    os.mkdir(hooks)
+    os.mkdir(template)
+
+    with open(os.path.join(template, 'README.rst'), 'w') as f:
+        f.write("foo\n===\n\nbar\n")
+
+    with open(os.path.join(hooks, 'pre_gen_project.py'), 'w') as f:
+        f.write("#!/usr/bin/env python\n")
+        f.write("# -*- coding: utf-8 -*-\n")
+        f.write("from __future__ import print_function\n")
+        f.write("\n")
+        f.write("print('pre generation hook')\n")
+        f.write("f = open('python_pre.txt', 'w')\n")
+        f.write("f.close()\n")
+
+    if sys.platform.startswith('win'):
+        post = 'post_gen_project.bat'
+        with open(os.path.join(hooks, post), 'w') as f:
+            f.write("@echo off\n")
+            f.write("\n")
+            f.write("echo post generation hook\n")
+            f.write("echo. >shell_post.txt\n")
+    else:
+        post = 'post_gen_project.sh'
+        filename = os.path.join(hooks, post)
+        with open(filename, 'w') as f:
+            f.write("#!/bin/bash\n")
+            f.write("\n")
+            f.write("echo 'post generation hook';\n")
+            f.write("touch 'shell_post.txt'\n")
+        # Set the execute bit
+        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
+
+    return post
+
 
 class TestFindHooks(unittest.TestCase):
 
+    repo_path = 'tests/test-hooks'
+
+    def setUp(self):
+        self.post_hook = make_test_repo(self.repo_path)
+
+    def tearDown(self):
+        utils.rmtree(self.repo_path)
+
     def test_find_hooks(self):
         '''Getting the list of all defined hooks'''
-        repo_path = 'tests/test-hooks/'
-        with utils.work_in(repo_path):
+        with utils.work_in(self.repo_path):
             self.assertEqual({
                 'pre_gen_project': os.path.abspath('hooks/pre_gen_project.py'),
-                'post_gen_project': os.path.abspath('hooks/post_gen_project.sh'),
+                'post_gen_project': os.path.abspath(os.path.join('hooks', self.post_hook)),
             }, hooks.find_hooks())
 
     def test_no_hooks(self):
@@ -37,7 +84,12 @@ class TestExternalHooks(unittest.TestCase):
     repo_path  = os.path.abspath('tests/test-hooks/')
     hooks_path = os.path.abspath('tests/test-hooks/hooks')
 
+    def setUp(self):
+        self.post_hook = make_test_repo(self.repo_path)
+
     def tearDown(self):
+        utils.rmtree(self.repo_path)
+
         if os.path.exists('python_pre.txt'):
             os.remove('python_pre.txt')
         if os.path.exists('shell_post.txt'):
@@ -51,12 +103,12 @@ class TestExternalHooks(unittest.TestCase):
 
     def test_run_hook(self):
         '''execute a hook script, independently of project generation'''
-        hooks._run_hook(os.path.join(self.hooks_path, 'post_gen_project.sh'))
+        hooks._run_hook(os.path.join(self.hooks_path, self.post_hook))
         self.assertTrue(os.path.isfile('shell_post.txt'))
 
     def test_run_hook_cwd(self):
         '''Change directory before running hook'''
-        hooks._run_hook(os.path.join(self.hooks_path, 'post_gen_project.sh'), 
+        hooks._run_hook(os.path.join(self.hooks_path, self.post_hook), 
                         'tests')
         self.assertTrue(os.path.isfile('tests/shell_post.txt'))
         self.assertFalse('tests' in os.getcwd())
