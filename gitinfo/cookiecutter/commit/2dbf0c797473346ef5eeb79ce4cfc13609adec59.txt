commit 2dbf0c797473346ef5eeb79ce4cfc13609adec59
Author: Audrey Roy <audreyr@gmail.com>
Date:   Mon Aug 19 00:49:11 2013 +0200

    Test passes, but still not fully working.

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 25f6492..794d4f3 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -41,12 +41,12 @@ def generate_context(config_file='cookiecutter.json'):
     context = {}
 
     file_handle = open(config_file)
-    obj = json.load(file_handle, object_pairs_hook=OrderedDict, ensure_ascii=False)
+    obj = json.load(file_handle, object_pairs_hook=OrderedDict)
 
     # Add the Python object to the context dictionary
     file_name = os.path.split(config_file)[1]
-    file_stem = file_name.split('.')[0].encode('utf-8')
-    context[file_stem] = obj.encode('utf-8')
+    file_stem = file_name.split('.')[0]
+    context[file_stem] = unicode(obj, 'utf-8')
 
     logging.debug('Context generated is {0}'.format(context))
     return context
@@ -60,11 +60,9 @@ def generate_files(template_dir, context=None):
     """
     
     # Always use utf-8
-    template_dir = template_dir.encode('utf-8')
+    template_dir = template_dir
 
-    #logging.debug('Generating project from {0}...'.format(template_dir))
-    print(type(template_dir))
-    logging.debug('Generating project from ' + template_dir)
+    logging.debug('Generating project from {0}...'.format(template_dir))
 
     context = context or {}
     env = Environment()
diff --git "a/tests/input{{fooo\314\210d}}/simple.txt" b/tests/input{{food}}/simple.txt
similarity index 100%
rename from "tests/input{{fooo\314\210d}}/simple.txt"
rename to tests/input{{food}}/simple.txt
diff --git a/tests/test_generate.py b/tests/test_generate.py
index 195d018..e6d889a 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -33,12 +33,12 @@ class TestGenerate(unittest.TestCase):
 
     def test_generate_files(self):
         generate.generate_files(
-            context={'fooöd': 'pizza'},
-            template_dir='tests/input{{fooöd}}'
+            context={'food': 'pizzä'},
+            template_dir='tests/input{{food}}'
         )
-        self.assertTrue(os.path.isfile('tests/inputpizza/simple.txt'))
-        simple_text = open('tests/inputpizza/simple.txt', 'rt').read()
-        self.assertEqual(simple_text, 'I eat pizza')
+        self.assertTrue(os.path.isfile('tests/inputpizzä/simple.txt'))
+        simple_text = open('tests/inputpizzä/simple.txt', 'rt').read()
+        self.assertEqual(simple_text, 'I eat pizzä'.encode('utf-8'))
 
     def test_generate_files_binaries(self):
         generate.generate_files(
@@ -79,8 +79,8 @@ It is 2014."""
         self.assertTrue(os.path.isfile('tests/inputgreen/im_a.dir/im_a.file.py'))
 
     def tearDown(self):
-        if os.path.exists('tests/inputpizza'):
-            shutil.rmtree('tests/inputpizza')
+        if os.path.exists('tests/inputpizzä'):
+            shutil.rmtree('tests/inputpizzä')
         if os.path.exists('tests/inputgreen'):
             shutil.rmtree('tests/inputgreen')
         if os.path.exists('tests/inputbinary_files'):
