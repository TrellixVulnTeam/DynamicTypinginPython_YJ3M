commit a28f91ac597fa9d98756339aa2e51828cf509b5f
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Wed Nov 12 22:48:04 2014 +0100

    Parametrize test data for generate_context

diff --git a/tests/test_generate_context.py b/tests/test_generate_context.py
index a492c6a..308bb76 100644
--- a/tests/test_generate_context.py
+++ b/tests/test_generate_context.py
@@ -18,40 +18,58 @@ import pytest
 from cookiecutter import generate
 
 
-@pytest.mark.usefixtures("clean_system")
-def test_generate_context():
-    context = generate.generate_context(
-        context_file='tests/test-generate-context/test.json'
+def context_data():
+    context = (
+        {
+            'context_file': 'tests/test-generate-context/test.json'
+        },
+        {
+            "test": {"1": 2, "some_key": "some_val"}
+        }
     )
-    assert context == {"test": {"1": 2, "some_key": "some_val"}}
-
 
-@pytest.mark.usefixtures("clean_system")
-def test_generate_context_with_default():
-    context = generate.generate_context(
-        context_file='tests/test-generate-context/test.json',
-        default_context={"1": 3}
+    context_with_default = (
+        {
+            'context_file': 'tests/test-generate-context/test.json',
+            'default_context': {"1": 3}
+        },
+        {
+            "test": {"1": 3, "some_key": "some_val"}
+        }
     )
-    assert context == {"test": {"1": 3, "some_key": "some_val"}}
 
+    context_with_extra = (
+        {
+            'context_file': 'tests/test-generate-context/test.json',
+            'extra_context': {'1': 4},
+        },
+        {
+            'test': {'1': 4, 'some_key': 'some_val'}
+        }
+    )
 
-@pytest.mark.usefixtures("clean_system")
-def test_generate_context_with_extra():
-    """ Call `generate_context()` with extra_context. """
-    context = generate.generate_context(
-        context_file='tests/test-generate-context/test.json',
-        extra_context={'1': 4},
+    context_with_default_and_extra = (
+        {
+            'context_file': 'tests/test-generate-context/test.json',
+            'default_context': {'1': 3},
+            'extra_context': {'1': 5},
+        },
+        {
+            'test': {'1': 5, 'some_key': 'some_val'}
+        }
     )
-    assert context == {'test': {'1': 4, 'some_key': 'some_val'}}
+
+    yield context
+    yield context_with_default
+    yield context_with_extra
+    yield context_with_default_and_extra
 
 
 @pytest.mark.usefixtures("clean_system")
-def test_generate_context_with_default_and_extra():
-    """ Call `generate_context()` with `default_context` and
-        `extra_context`. """
-    context = generate.generate_context(
-        context_file='tests/test-generate-context/test.json',
-        default_context={'1': 3},
-        extra_context={'1': 5},
-    )
-    assert context == {'test': {'1': 5, 'some_key': 'some_val'}}
+@pytest.mark.parametrize("input_params, expected_context", context_data())
+def test_generate_context(input_params, expected_context):
+    """
+    Test the generated context for several input parameters against the
+    according expected context.
+    """
+    assert generate.generate_context(**input_params) == expected_context
