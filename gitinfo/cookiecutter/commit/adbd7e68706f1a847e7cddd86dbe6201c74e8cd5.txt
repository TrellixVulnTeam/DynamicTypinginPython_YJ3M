commit adbd7e68706f1a847e7cddd86dbe6201c74e8cd5
Author: Audrey Roy <audreyr@gmail.com>
Date:   Mon Aug 19 23:18:11 2013 +0200

    Better organization of cleanup tests involving Unicode filenames and dir names.

diff --git a/tests/test_cleanup.py b/tests/test_cleanup.py
index 54f95c0..62c05e4 100755
--- a/tests/test_cleanup.py
+++ b/tests/test_cleanup.py
@@ -11,7 +11,12 @@ Tests for `cookiecutter.cleanup` module.
 from __future__ import unicode_literals
 import os
 import shutil
-import unittest
+import sys
+
+if sys.version_info[:2] < (2, 7):
+    import unittest2 as unittest
+else:
+    import unittest
 
 from cookiecutter import cleanup, exceptions
 
@@ -28,17 +33,6 @@ class TestCleanup(unittest.TestCase):
         self.assertTrue(os.path.isfile('tests/fake-project/README.rst'))
         self.assertFalse(os.path.exists('tests/fake-repo'))
 
-    def test_remove_repo_unicode(self):
-        if os.path.supports_unicode_filenames:
-            success = cleanup.remove_repo(
-                repo_dir='tests/fake-repööö',
-                generated_project='fake-pröööject'
-            )
-            self.assertTrue(success)
-            self.assertTrue(os.path.isdir('tests/fake-pröööject'))
-            self.assertTrue(os.path.isfile('tests/fake-pröööject/README.rst'))
-            self.assertFalse(os.path.exists('tests/fake-repööö'))
-
     def test_remove_repo_bad(self):
         self.assertRaises(
             exceptions.MissingProjectDir,
@@ -52,6 +46,21 @@ class TestCleanup(unittest.TestCase):
             os.mkdir('tests/fake-repo')
             shutil.move('tests/fake-project', 'tests/fake-repo/fake-project')
 
+
+class TestCleanupUnicode(unittest.TestCase):
+
+    def test_remove_repo_unicode(self):
+        if os.path.supports_unicode_filenames:
+            success = cleanup.remove_repo(
+                repo_dir='tests/fake-repööö',
+                generated_project='fake-pröööject'
+            )
+            self.assertTrue(success)
+            self.assertTrue(os.path.isdir('tests/fake-pröööject'))
+            self.assertTrue(os.path.isfile('tests/fake-pröööject/README.rst'))
+            self.assertFalse(os.path.exists('tests/fake-repööö'))
+
+    def tearDown(self):
         if os.path.supports_unicode_filenames:
             if not os.path.exists('tests/fake-repööö'):
                 os.mkdir('tests/fake-repööö')
