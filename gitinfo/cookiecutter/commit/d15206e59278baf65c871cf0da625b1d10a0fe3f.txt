commit d15206e59278baf65c871cf0da625b1d10a0fe3f
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Sat Nov 15 15:32:33 2014 +0100

    Merge jquery and pypackage tests using parametrize

diff --git a/tests/test_cookiecutters.py b/tests/test_cookiecutters.py
new file mode 100644
index 0000000..a4ec949
--- /dev/null
+++ b/tests/test_cookiecutters.py
@@ -0,0 +1,72 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+test_cookiecutters
+------------------
+
+Tests formerly known from a unittest residing in test_generate.py named
+TestPyPackage.test_cookiecutter_pypackage
+TestJQuery.test_cookiecutter_jquery
+"""
+
+from __future__ import unicode_literals
+import os
+import subprocess
+import pytest
+
+from cookiecutter import utils
+from tests.skipif_markers import skipif_travis, skipif_no_network
+
+
+@pytest.fixture(scope='function')
+def remove_additional_dirs(request):
+    """
+    Remove special directories which are creating during the tests.
+    """
+    def fin_remove_additional_dirs():
+        if os.path.isdir('cookiecutter-pypackage'):
+            utils.rmtree('cookiecutter-pypackage')
+        if os.path.isdir('cookiecutter-jquery'):
+            utils.rmtree('cookiecutter-jquery')
+        if os.path.isdir('boilerplate'):
+            utils.rmtree('boilerplate')
+    request.addfinalizer(fin_remove_additional_dirs)
+
+
+def bake_data():
+    pypackage_data = (
+        'git clone https://github.com/audreyr/cookiecutter-pypackage.git',
+        'cookiecutter --no-input cookiecutter-pypackage/',
+        'cookiecutter-pypackage',
+        'boilerplate/README.rst'
+    )
+
+    jquery_data = (
+        'git clone https://github.com/audreyr/cookiecutter-jquery.git',
+        'cookiecutter --no-input cookiecutter-jquery/',
+        'cookiecutter-jquery',
+        'boilerplate/README.md'
+    )
+
+    yield pypackage_data
+    yield jquery_data
+
+
+@skipif_travis
+@skipif_no_network
+@pytest.mark.usefixtures('clean_system', 'remove_additional_dirs')
+@pytest.mark.parametrize('git_cmd, bake_cmd, out_dir, readme', bake_data())
+def test_cookiecutters(git_cmd, bake_cmd, out_dir, readme):
+    """
+    Tests that the given cookiecutters work as expected.
+    """
+
+    proc = subprocess.Popen(git_cmd, stdin=subprocess.PIPE, shell=True)
+    proc.wait()
+
+    proc = subprocess.Popen(bake_cmd, stdin=subprocess.PIPE, shell=True)
+    proc.wait()
+
+    assert os.path.isdir(out_dir)
+    assert os.path.isfile(readme)
