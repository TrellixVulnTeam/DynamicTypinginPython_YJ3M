commit 6706f1d400d0d03582d8c08dd413a607b9929190
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Fri Nov 7 21:33:13 2014 +0200

    Implement the cli with click

diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
new file mode 100755
index 0000000..068cae6
--- /dev/null
+++ b/cookiecutter/cli.py
@@ -0,0 +1,70 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+cookiecutter.cli
+-----------------
+
+Main `cookiecutter` CLI.
+"""
+
+from __future__ import unicode_literals
+
+import os
+import sys
+import logging
+
+import click
+
+from cookiecutter import __version__
+from cookiecutter.main import cookiecutter
+
+logger = logging.getLogger(__name__)
+
+
+def print_version(context, param, value):
+    if not value or context.resilient_parsing:
+        return
+    click.echo('Cookiecutter %s from %s (Python %s)' % (
+        __version__,
+        os.path.dirname(os.path.dirname(os.path.abspath(__file__))),
+        sys.version[:3]
+    ))
+    context.exit()
+
+
+@click.command()
+@click.argument('input_dir', type=click.Path(exists=True))
+@click.option(
+    '--no-input', is_flag=True,
+    help='Do not prompt for parameters and only use cookiecutter.json '
+         'file content',
+)
+@click.option(
+    '-c', '--checkout',
+    help='branch, tag or commit to checkout after git clone',
+)
+@click.option(
+    '-V', '--version',
+    is_flag=True, help='Show version information and exit.',
+    callback=print_version, expose_value=False, is_eager=True,
+)
+@click.option(
+    '-v', '--verbose',
+    is_flag=True, help='Print debug information', default=False
+)
+def main(input_dir, no_input, checkout, verbose):
+    """Create a project from a Cookiecutter project template (INPUT_DIR)."""
+    if verbose:
+        logging.basicConfig(
+            format='%(levelname)s %(filename)s: %(message)s',
+            level=logging.DEBUG
+        )
+    else:
+        # Log info and above to console
+        logging.basicConfig(
+            format='%(levelname)s: %(message)s',
+            level=logging.INFO
+        )
+
+    cookiecutter(input_dir, checkout, no_input)
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 47ad5e8..5d6b00b 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -12,12 +12,9 @@ library rather than a script.
 """
 
 from __future__ import unicode_literals
-import argparse
 import logging
 import os
-import sys
 
-from . import __version__
 from .config import get_user_config
 from .prompt import prompt_for_config
 from .generate import generate_context, generate_files
@@ -104,70 +101,3 @@ def cookiecutter(input_dir, checkout=None, no_input=False, extra_context=None):
         repo_dir=repo_dir,
         context=context
     )
-
-
-def _get_parser():
-    parser = argparse.ArgumentParser(
-        description='Create a project from a Cookiecutter project template.'
-    )
-    parser.add_argument(
-        '--no-input',
-        action='store_true',
-        help='Do not prompt for parameters and only use cookiecutter.json '
-             'file content')
-    parser.add_argument(
-        'input_dir',
-        help='Cookiecutter project dir, e.g. cookiecutter-pypackage/'
-    )
-    parser.add_argument(
-        '-c', '--checkout',
-        help='branch, tag or commit to checkout after git clone'
-    )
-    cookiecutter_pkg_dir = os.path.dirname(
-        os.path.dirname(os.path.abspath(__file__))
-    )
-    parser.add_argument(
-        '-V', '--version',
-        help='Show version information and exit.',
-        action='version',
-        version='Cookiecutter {0} from {1} (Python {2})'.format(
-            __version__,
-            cookiecutter_pkg_dir,
-            sys.version[:3]
-        )
-    )
-    parser.add_argument(
-        '-v', '--verbose',
-        help='Print debug information',
-        action='store_true', default=False
-    )
-
-    return parser
-
-
-def parse_cookiecutter_args(args):
-    """ Parse the command-line arguments to Cookiecutter. """
-    parser = _get_parser()
-    return parser.parse_args(args)
-
-
-def main():
-    """ Entry point for the package, as defined in setup.py. """
-
-    args = parse_cookiecutter_args(sys.argv[1:])
-
-    if args.verbose:
-        logging.basicConfig(format='%(levelname)s %(filename)s: %(message)s',
-                            level=logging.DEBUG)
-    else:
-        # Log info and above to console
-        logging.basicConfig(
-            format='%(levelname)s: %(message)s',
-            level=logging.INFO
-        )
-
-    cookiecutter(args.input_dir, args.checkout, args.no_input)
-
-
-if __name__ == '__main__':
-    main()
diff --git a/setup.py b/setup.py
index b7a43c8..4d1f6af 100755
--- a/setup.py
+++ b/setup.py
@@ -46,7 +46,7 @@ setup(
     package_dir={'cookiecutter': 'cookiecutter'},
     entry_points={
         'console_scripts': [
-            'cookiecutter = cookiecutter.main:main',
+            'cookiecutter = cookiecutter.cli:main',
         ]
     },
     include_package_data=True,
