commit f0d5c6244b1176892831708b773aaf0994d6e337
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Mon Nov 23 14:22:42 2015 +0100

    Implement a test for main.cookiecutter() to run vcs.clone()

diff --git a/tests/test_main.py b/tests/test_main.py
index 613e0e9..bd278fb 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -1,4 +1,10 @@
-from cookiecutter.main import is_repo_url, expand_abbreviations
+# -*- coding: utf-8 -*-
+
+import json
+import os
+import pytest
+
+from cookiecutter.main import is_repo_url, expand_abbreviations, cookiecutter
 
 
 def test_is_repo_url():
@@ -27,3 +33,62 @@ def test_expand_abbreviations():
 
     expanded_template = expand_abbreviations(template, {})
     assert is_repo_url(expanded_template) is True
+
+
+@pytest.fixture(scope='session')
+def user_dir(tmpdir_factory):
+    return tmpdir_factory.mktemp('user_dir')
+
+
+@pytest.fixture(scope='session')
+def user_config_data(user_dir):
+    cookiecutters_dir = user_dir.mkdir('cookiecutters')
+    replay_dir = user_dir.mkdir('cookiecutter_replay')
+
+    return {
+        'cookiecutters_dir': str(cookiecutters_dir),
+        'replay_dir': str(replay_dir),
+        'default_context': {}
+    }
+
+
+@pytest.fixture(scope='session')
+def user_config_file(user_dir, user_config_data):
+    config_file = user_dir.join('config')
+    config_file.write(json.dumps(user_config_data))
+    return str(config_file)
+
+
+@pytest.fixture
+def template_url():
+    return 'https://github.com/pytest-dev/cookiecutter-pytest-plugin.git'
+
+
+@pytest.fixture
+def output_dir(tmpdir):
+    return tmpdir.mkdir('output')
+
+
+def test_cookiecutter_repository_url_should_clone(
+        mocker, template_url, output_dir, user_config_file, user_config_data):
+    mock_clone = mocker.patch(
+        'cookiecutter.main.clone',
+        return_value='tests/fake-repo-tmpl',
+        autospec=True
+    )
+
+    project_dir = cookiecutter(
+        template_url,
+        no_input=True,
+        output_dir=str(output_dir),
+        config_file=user_config_file
+    )
+
+    mock_clone.assert_called_once_with(
+        repo_url=template_url,
+        checkout=None,
+        clone_to_dir=user_config_data['cookiecutters_dir'],
+        no_input=True
+    )
+
+    assert os.path.isdir(project_dir)
