commit a64d973ffa1613b309d050874220c0d79a98bdf8
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Thu Aug 13 22:28:26 2015 +0200

    Implement a the replay cli option and raise for an invalid mode

diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
index cbcbff8..987cd6e 100755
--- a/cookiecutter/cli.py
+++ b/cookiecutter/cli.py
@@ -18,7 +18,9 @@ import click
 
 from cookiecutter import __version__
 from cookiecutter.main import cookiecutter
-from cookiecutter.exceptions import OutputDirExistsException
+from cookiecutter.exceptions import (
+    OutputDirExistsException, InvalidModeException
+)
 
 logger = logging.getLogger(__name__)
 
@@ -54,7 +56,12 @@ def print_version(context, param, value):
     '-v', '--verbose',
     is_flag=True, help='Print debug information', default=False
 )
-def main(template, no_input, checkout, verbose):
+@click.option(
+    '--replay', is_flag=True,
+    help='Do not prompt for parameters and only use information entered '
+         'previously',
+)
+def main(template, no_input, checkout, verbose, replay):
     """Create a project from a Cookiecutter project template (TEMPLATE)."""
     if verbose:
         logging.basicConfig(
@@ -69,8 +76,8 @@ def main(template, no_input, checkout, verbose):
         )
 
     try:
-        cookiecutter(template, checkout, no_input)
-    except OutputDirExistsException as e:
+        cookiecutter(template, checkout, no_input, replay=replay)
+    except (OutputDirExistsException, InvalidModeException) as e:
         click.echo(e)
         sys.exit(1)
 
diff --git a/cookiecutter/exceptions.py b/cookiecutter/exceptions.py
index c1d626c..0ad6b58 100755
--- a/cookiecutter/exceptions.py
+++ b/cookiecutter/exceptions.py
@@ -74,3 +74,10 @@ class OutputDirExistsException(CookiecutterException):
     """
     Raised when the output directory of the project exists already.
     """
+
+
+class InvalidModeException(CookiecutterException):
+    """
+    Raised when cookiecutter is called with both `no_input==True` and
+    `replay==True` at the same time.
+    """
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index a5cde54..7c21ff8 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -16,6 +16,7 @@ import logging
 import os
 
 from .config import get_user_config
+from .exceptions import InvalidModeException
 from .prompt import prompt_for_config
 from .generate import generate_context, generate_files
 from .vcs import clone
@@ -52,7 +53,9 @@ def expand_abbreviations(template, config_dict):
     return template
 
 
-def cookiecutter(template, checkout=None, no_input=False, extra_context=None):
+def cookiecutter(
+        template,
+        checkout=None, no_input=False, extra_context=None, replay=False):
     """
     API equivalent to using Cookiecutter at the command line.
 
@@ -63,6 +66,11 @@ def cookiecutter(template, checkout=None, no_input=False, extra_context=None):
     :param extra_context: A dictionary of context that overrides default
         and user configuration.
     """
+    if no_input and replay:
+        err_msg = (
+            "You can not use both --no-input and --replay at the same time!"
+        )
+        raise InvalidModeException(err_msg)
 
     # Get user config from ~/.cookiecutterrc or equivalent
     # If no config file, sensible defaults from config.DEFAULT_CONFIG are used
