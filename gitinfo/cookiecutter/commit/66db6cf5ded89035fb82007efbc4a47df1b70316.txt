commit 66db6cf5ded89035fb82007efbc4a47df1b70316
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Aug 31 17:34:23 2013 +0200

    Break up TestGenerate into several classes. Change syntax error test to test 1 ile.

diff --git a/tests/input{{syntax_error}}/simple.txt b/tests/files/syntax_error.txt
similarity index 100%
rename from tests/input{{syntax_error}}/simple.txt
rename to tests/files/syntax_error.txt
diff --git a/tests/test_generate.py b/tests/test_generate.py
index 8faa7a1..71663da 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -26,7 +26,7 @@ PY3 = sys.version > '3'
 
 logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
 
-class TestGenerate(unittest.TestCase):
+class TestGenerateFile(unittest.TestCase):
 
     def test_generate_file(self):
         env = Environment()
@@ -42,26 +42,22 @@ class TestGenerate(unittest.TestCase):
         with open('tests/files/cheese.txt', 'rt') as f:
              generated_text = f.read()
              self.assertEqual(generated_text, 'Testing cheese')
-    
-    def test_generate_files_bad(self):
-        self.assertRaises(
-            exceptions.NonTemplatedInputDirException,
-            generate.generate_files,
-            context={'food': 'pizza'},
-            template_dir='tests/input'
-        )
 
-    def test_generate_files_verbose_template_syntax_error(self):
+    def test_generate_file_verbose_template_syntax_error(self):
+        env = Environment()
+        env.loader = FileSystemLoader('.')
         try:
-            generate.generate_files(
+            generate.generate_file(
+                project_dir=".",
+                infile='tests/files/syntax_error.txt',
                 context={'syntax_error': 'syntax_error'},
-                template_dir='tests/input{{syntax_error}}'
+                env=env
             )
         except TemplateSyntaxError as exception:
             self.assertEquals(
                 str(exception),
                 'Missing end of comment tag\n'
-                '  File "./tests/input{{syntax_error}}/simple.txt", line 1\n'
+                '  File "./tests/files/syntax_error.txt", line 1\n'
                 '    I eat {{ syntax_error }} {# this comment is not closed}'
             )
         except exception:
@@ -69,6 +65,20 @@ class TestGenerate(unittest.TestCase):
         else:
             self.fail('TemplateSyntaxError not thrown')
 
+    def tearDown(self):
+        if os.path.exists('tests/files/cheese.txt'):
+            os.remove('tests/files/cheese.txt')
+
+class TestGenerateFiles(unittest.TestCase):
+
+    def test_generate_files_bad(self):
+        self.assertRaises(
+            exceptions.NonTemplatedInputDirException,
+            generate.generate_files,
+            context={'food': 'pizza'},
+            template_dir='tests/input'
+        )
+
     def test_generate_files(self):
         generate.generate_files(
             context={'food': 'pizzä'},
@@ -111,10 +121,23 @@ class TestGenerate(unittest.TestCase):
         )
         self.assertTrue(os.path.isfile('tests/inputpizzä/simple.txt'))
 
+    def tearDown(self):
+        if os.path.exists('tests/inputpizzä'):
+            shutil.rmtree('tests/inputpizzä')
+        if os.path.exists('tests/inputgreen'):
+            shutil.rmtree('tests/inputgreen')
+        if os.path.exists('tests/inputbinary_files'):
+            shutil.rmtree('tests/inputbinary_files')
+
+
+class TestGenerateContext(unittest.TestCase):
+
     def test_generate_context(self):
         context = generate.generate_context(config_file='tests/json/test.json')
         self.assertEqual(context, {"test": {"1": 2}})
 
+class TestOutputFolder(unittest.TestCase):
+
     def test_output_folder(self):
         context = generate.generate_context(
             config_file='tests/json2/stuff.json'
@@ -139,14 +162,8 @@ It is 2014."""
         self.assertTrue(os.path.isfile('tests/inputgreen/im_a.dir/im_a.file.py'))
 
     def tearDown(self):
-        if os.path.exists('tests/inputpizzä'):
-            shutil.rmtree('tests/inputpizzä')
         if os.path.exists('tests/inputgreen'):
             shutil.rmtree('tests/inputgreen')
-        if os.path.exists('tests/inputbinary_files'):
-            shutil.rmtree('tests/inputbinary_files')
-        if os.path.exists('tests/files/cheese.txt'):
-            os.remove('tests/files/cheese.txt')
 
 
 if __name__ == '__main__':
