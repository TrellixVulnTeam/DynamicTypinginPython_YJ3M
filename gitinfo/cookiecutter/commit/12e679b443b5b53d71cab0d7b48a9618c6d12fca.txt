commit 12e679b443b5b53d71cab0d7b48a9618c6d12fca
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sun Jul 28 12:19:21 2013 +0200

    Use logging instead of print, and add more info logging.

diff --git a/cookiecutter/cleanup.py b/cookiecutter/cleanup.py
index ce645b2..7629c55 100755
--- a/cookiecutter/cleanup.py
+++ b/cookiecutter/cleanup.py
@@ -8,6 +8,7 @@ cookiecutter.cleanup
 Functions for cleaning up after Cookiecutter project generation occurs.
 """
 
+import logging
 import os
 import shutil
 
@@ -26,6 +27,7 @@ def remove_repo(repo_dir, generated_project):
     :returns: True if successful, else False.
     """
 
+    logging.info('Moving {0} out of {1} and removing {1}'.format(generated_project, repo_dir))
     project_dir = os.path.join(repo_dir, generated_project)
     if os.path.exists(project_dir):
         shutil.move(project_dir, os.path.dirname(repo_dir))
diff --git a/cookiecutter/find.py b/cookiecutter/find.py
index 7594c5d..49d5922 100755
--- a/cookiecutter/find.py
+++ b/cookiecutter/find.py
@@ -8,6 +8,7 @@ cookiecutter.find
 Functions for finding Cookiecutter templates and other components.
 """
 
+import logging
 import os
 
 
@@ -18,6 +19,7 @@ def find_template(repo_dir):
     :param repo_dir: Local directory of newly cloned repo.
     """
 
+    logging.info('Searching {0} for the project template.'.format(repo_dir))
     contents_set = set(os.listdir(repo_dir))
     exclude_set = set(['.DS_Store', '.git', '.gitignore', 'README.rst', 'json'])
     
@@ -25,5 +27,6 @@ def find_template(repo_dir):
     contents_set -= exclude_set
 
     if len(contents_set) == 1:
-        return contents_set.pop()
+        project_template = contents_set.pop()
+        logging.info('The project template appears to be {0}'.format(project_template))
     return False
diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 2c7cddd..0acb16b 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -9,6 +9,7 @@ Functions for generating a project from a project template.
 """
 
 import json
+import logging
 import os
 
 from jinja2 import FileSystemLoader, Template
@@ -100,7 +101,7 @@ def generate_files(input_dir, context=None):
             # Render the output filename before writing
             name_tmpl = Template(outfile)
             rendered_name = name_tmpl.render(**context)
-            print("Writing {0}".format(rendered_name))
+            logging.info("Writing {0}".format(rendered_name))
 
             with unicode_open(rendered_name, 'w') as fh:
                 fh.write(rendered_file)
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 768a57b..af04af7 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -12,6 +12,7 @@ library rather than a script.
 """
 
 import argparse
+import logging
 import os
 
 from .cleanup import remove_repo
@@ -23,6 +24,9 @@ from .vcs import git_clone
 def main():
     """ Entry point for the package, as defined in setup.py. """
 
+    # Log info and above to console
+    logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO)
+
     # Get command line input/output arguments
     parser = argparse.ArgumentParser(
         description='Create a project from a Cookiecutter project template.'
