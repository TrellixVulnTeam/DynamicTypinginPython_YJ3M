commit af4474b96fa168aa3af3a0a34176bdefbaa5d5f6
Author: Andrey Shpak <insspb@users.noreply.github.com>
Date:   Sat May 30 15:56:13 2020 +0300

    Added: Jinja2 Environment extension on files generation stage (#1419)
    
    * Give access to Jinja2 environment variables
    
    * Don't prompt user for private dictionnaries
    
    * Move the environment variables logic into generate_files
    
    * Codebase yearly update
    
    Co-authored-by: Guillaume Gelin <ramnes@1000mercis.com>
    Co-authored-by: ramnes <contact@ramnes.eu>

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index c526b97..a6a43e1 100644
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -273,9 +273,11 @@ def generate_files(
     logger.debug('Generating project from %s...', template_dir)
     context = context or OrderedDict([])
 
+    envvars = context.get('cookiecutter', {}).get('_jinja2_env_vars', {})
+
     unrendered_dir = os.path.split(template_dir)[1]
     ensure_dir_is_templated(unrendered_dir)
-    env = StrictEnvironment(context=context, keep_trailing_newline=True)
+    env = StrictEnvironment(context=context, keep_trailing_newline=True, **envvars)
     try:
         project_dir, output_directory_created = render_and_create_dir(
             unrendered_dir, context, output_dir, env, overwrite_if_exists
diff --git a/cookiecutter/prompt.py b/cookiecutter/prompt.py
index b5bfee3..90e910e 100644
--- a/cookiecutter/prompt.py
+++ b/cookiecutter/prompt.py
@@ -209,6 +209,9 @@ def prompt_for_config(context, no_input=False):
 
     # Second pass; handle the dictionaries.
     for key, raw in context['cookiecutter'].items():
+        # Skip private type dicts
+        if key.startswith('_') and not key.startswith('__'):
+            continue
 
         try:
             if isinstance(raw, dict):
diff --git a/tests/test-generate-files/input{{cookiecutter.food}}/simple-with-conditions.txt b/tests/test-generate-files/input{{cookiecutter.food}}/simple-with-conditions.txt
new file mode 100644
index 0000000..7c75a09
--- /dev/null
+++ b/tests/test-generate-files/input{{cookiecutter.food}}/simple-with-conditions.txt
@@ -0,0 +1,5 @@
+{% if cookiecutter %}
+    {% if cookiecutter.food %}
+I eat {{ cookiecutter.food }}
+    {% endif %}
+{% endif %}
diff --git a/tests/test_generate_files.py b/tests/test_generate_files.py
index 2f9a3ff..d666ee0 100644
--- a/tests/test_generate_files.py
+++ b/tests/test_generate_files.py
@@ -67,6 +67,27 @@ def test_generate_files_with_linux_newline(tmp_path):
     assert f.newlines == '\n'
 
 
+def test_generate_files_with_jinja2_environment(tmp_path):
+    """Extend StrictEnvironment with _jinja2_env_vars cookiecutter template option."""
+    generate.generate_files(
+        context={
+            'cookiecutter': {
+                'food': 'pizzä',
+                '_jinja2_env_vars': {'lstrip_blocks': True, 'trim_blocks': True},
+            }
+        },
+        repo_dir='tests/test-generate-files',
+        output_dir=tmp_path,
+    )
+
+    conditions_file = tmp_path.joinpath('inputpizzä/simple-with-conditions.txt')
+    assert conditions_file.is_file()
+    assert conditions_file.exists()
+
+    simple_text = conditions_file.open('rt', encoding='utf-8').read()
+    assert simple_text == u'I eat pizzä\n'
+
+
 def test_generate_files_with_trailing_newline_forced_to_linux_by_context(tmp_path):
     """Verify new line not removed by templating engine after folder generation."""
     generate.generate_files(
