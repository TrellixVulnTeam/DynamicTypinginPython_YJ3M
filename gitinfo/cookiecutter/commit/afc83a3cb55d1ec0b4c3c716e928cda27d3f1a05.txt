commit afc83a3cb55d1ec0b4c3c716e928cda27d3f1a05
Author: Andrey Shpak <insspb@users.noreply.github.com>
Date:   Sat Jun 6 00:34:14 2020 +0300

    Changed: CLI Commands documentation engine (#1418)
    
    Co-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>

diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
index 7f52cca..1989b1c 100644
--- a/cookiecutter/cli.py
+++ b/cookiecutter/cli.py
@@ -163,7 +163,7 @@ def main(
 
     Cookiecutter is free and open source software, developed and managed by
     volunteers. If you would like to help out or fund the project, please get
-    in touch at https://github.com/audreyr/cookiecutter.
+    in touch at https://github.com/cookiecutter/cookiecutter.
     """
     # Commands that should work without arguments
     if list_installed:
diff --git a/docs/advanced/cli_options.rst b/docs/advanced/cli_options.rst
index c8133ce..9e986c7 100644
--- a/docs/advanced/cli_options.rst
+++ b/docs/advanced/cli_options.rst
@@ -3,4 +3,5 @@
 Command Line Options
 --------------------
 
-.. cc-command-line-options::
+.. click:: cookiecutter.__main__:main
+  :prog: cookiecutter
diff --git a/docs/ccext.py b/docs/ccext.py
deleted file mode 100644
index 500f760..0000000
--- a/docs/ccext.py
+++ /dev/null
@@ -1,43 +0,0 @@
-"""Custom Sphinx extension to build a list of all of cookiecutter's cli."""
-import click
-from docutils import nodes
-from docutils.parsers import rst
-from docutils.statemachine import ViewList
-
-from cookiecutter import cli
-
-
-class CcCommandLineOptions(rst.Directive):
-    """Custom docutils extension class to parse cli commands from code."""
-
-    def _format_option(self, option):
-        """Do cli options formatting."""
-        return [
-            ".. _`%s`:" % option.name,
-            "",
-            ".. option:: " + ", ".join(option.opts),
-            "",
-            option.help,
-            "",
-        ]
-
-    def process_actions(self):
-        """Get options from cookiecutter, send to formatter, prepare result."""
-        for option in cli.main.params:
-            if isinstance(option, click.core.Option):
-                for line in self._format_option(option):
-                    self.view_list.append(line, "")
-
-    def run(self):
-        """Override `run` in `rst.Directive` class."""
-        node = nodes.paragraph()
-        node.document = self.state.document
-        self.view_list = ViewList()
-        self.process_actions()
-        self.state.nested_parse(self.view_list, 0, node)
-        return [node]
-
-
-def setup(app):
-    """Register a Docutils extension directive."""
-    app.add_directive('cc-command-line-options', CcCommandLineOptions)
diff --git a/docs/conf.py b/docs/conf.py
index 13690a9..082a25d 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -77,7 +77,7 @@ extensions = [
     'sphinx.ext.imgmath',
     'sphinx.ext.ifconfig',
     'sphinx.ext.viewcode',
-    'docs.ccext',
+    'sphinx_click.ext',
     'recommonmark',
 ]
 
diff --git a/docs/requirements.txt b/docs/requirements.txt
index 9f39107..40157c3 100644
--- a/docs/requirements.txt
+++ b/docs/requirements.txt
@@ -1,3 +1,4 @@
-watchdog>=0.8.3
+watchdog>=0.10.2
 sphinx-rtd-theme>=0.4.3
+sphinx-click>=2.3.2
 recommonmark>=0.6.0
