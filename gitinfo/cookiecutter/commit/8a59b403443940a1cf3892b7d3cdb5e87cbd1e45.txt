commit 8a59b403443940a1cf3892b7d3cdb5e87cbd1e45
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sun Jul 28 14:10:35 2013 +0200

    Fix to cookiecutter(), with test.

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 6b7908c..b09099c 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -21,9 +21,13 @@ from .generate import generate_context, generate_files
 from .vcs import git_clone
 
 
+logger = logging.getLogger(__name__)
+
 def cookiecutter(input_dir):
     """
     API equivalent to using Cookiecutter at the command line.
+    
+    :param input_dir: A project template directory or URL to git repo.
     """
 
     # If it's a git repo, clone and prompt
@@ -33,11 +37,16 @@ def cookiecutter(input_dir):
         project_template = find_template(repo_dir)
         os.chdir(repo_dir)
     else:
+        got_repo_arg = False
         project_template = input_dir
 
     # Create project from local context and project template.
+
+
+    json_dir = os.path.join(os.path.dirname(project_template), 'json/')
+    logging.info('json_dir is {0}'.format(json_dir))
     context = generate_context(
-        json_dir='json/'
+        json_dir=json_dir
     )
     generate_files(
         input_dir=project_template,
diff --git a/tests/test_main.py b/tests/test_main.py
index f3736b7..ad346e6 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -8,6 +8,7 @@ test_main
 Tests for `cookiecutter.main` module.
 """
 
+import logging
 import os
 import shutil
 import unittest
@@ -15,10 +16,21 @@ import unittest
 from cookiecutter import main
 
 
+# Log info and above to console
+logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO)
+
+
 class TestCookiecutter(unittest.TestCase):
 
-    def test_something(self):
-        pass
+    def test_cookiecutter(self):
+        main.cookiecutter('tests/fake-repo-pre/{{project.repo_name}}')
+        self.assertTrue(os.path.isdir('tests/fake-repo-pre/fake-project'))
+        self.assertTrue(os.path.isfile('tests/fake-repo-pre/fake-project/README.rst'))
+        self.assertFalse(os.path.exists('tests/fake-repo-pre/fake-project/json/'))
+    
+    def tearDown(self):
+        if os.path.isdir('tests/fake-repo-pre/fake-project'):
+            shutil.rmtree('tests/fake-repo-pre/fake-project')
 
 if __name__ == '__main__':
     unittest.main()
