commit 17829dbf6bc66c6805622888ffecd6149a6b4d30
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Tue Aug 5 22:02:51 2014 +0200

    Adds compat module and refactors prompts

diff --git a/cookiecutter/compat.py b/cookiecutter/compat.py
new file mode 100644
index 0000000..1161cf1
--- /dev/null
+++ b/cookiecutter/compat.py
@@ -0,0 +1,31 @@
+from sys import version_info
+
+
+PY3 = version_info[0] == 3
+OLD_PY2 = version_info[:2] < (2, 7)
+
+if PY3:
+    input_str = 'builtins.input'
+    iteritems = lambda d: iter(d.items())
+    from unittest.mock import patch
+    from io import StringIO
+    import unittest
+
+    import json
+    from collections import OrderedDict
+else:
+    from __builtin__ import raw_input
+    input = raw_input
+    input_str = '__builtin__.raw_input'
+    iteritems = lambda d: d.iteritems()
+    from mock import patch
+    from cStringIO import StringIO
+
+    if OLD_PY2:
+        from ordereddict import OrderedDict
+        import simplejson as json
+        import unittest2 as unittest
+    else:
+        import json
+        from collections import OrderedDict
+        import unittest
diff --git a/cookiecutter/prompt.py b/cookiecutter/prompt.py
index 1e27215..f69b4f7 100755
--- a/cookiecutter/prompt.py
+++ b/cookiecutter/prompt.py
@@ -11,12 +11,7 @@ Functions for prompting the user for project info.
 from __future__ import unicode_literals
 import sys
 
-PY3 = sys.version > '3'
-if PY3:
-    iteritems = lambda d: iter(d.items())
-else:
-    input = raw_input
-    iteritems = lambda d: d.iteritems()
+from .compat import *
 
 
 def prompt_for_config(context):
diff --git a/tests/test_prompt.py b/tests/test_prompt.py
index 57f509e..40b2b12 100755
--- a/tests/test_prompt.py
+++ b/tests/test_prompt.py
@@ -8,27 +8,12 @@ test_prompt
 Tests for `cookiecutter.prompt` module.
 """
 
-import sys
 import platform
-import unittest
+import sys
 
+from cookiecutter.compat import PY3, StringIO, input_str, patch, unittest
 from cookiecutter import prompt
 
-PY3 = sys.version > '3'
-if PY3:
-    from unittest.mock import patch
-    input_str = 'builtins.input'
-else:
-    import __builtin__
-    from mock import patch
-    input_str = '__builtin__.raw_input'
-    from cStringIO import StringIO
-
-if sys.version_info[:2] < (2, 7):
-    import unittest2 as unittest
-else:
-    import unittest
-
 if 'windows' in platform.platform().lower():
 
     old_stdin = sys.stdin
