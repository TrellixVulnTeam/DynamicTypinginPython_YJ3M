commit 408106354574760087d3297809147d550b0c8385
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Fri Aug 14 01:39:36 2015 +0200

    Make sure that a valid replay_file is dumped to disk

diff --git a/cookiecutter/replay.py b/cookiecutter/replay.py
index 23689ef..0d2a4ac 100644
--- a/cookiecutter/replay.py
+++ b/cookiecutter/replay.py
@@ -7,6 +7,9 @@ cookiecutter.replay
 
 from __future__ import unicode_literals
 
+import json
+import os
+
 from .compat import is_string
 from .config import get_user_config
 from .utils import make_sure_path_exists
@@ -23,3 +26,8 @@ def dump(template_name, context):
 
     if not make_sure_path_exists(replay_dir):
         raise IOError('Unable to create replay dir at {}'.format(replay_dir))
+
+    replay_file = os.path.join(replay_dir, template_name)
+
+    with open(replay_file, 'w') as outfile:
+        json.dump(context, outfile)
diff --git a/tests/test_replay.py b/tests/test_replay.py
index 711ca45..175fa89 100644
--- a/tests/test_replay.py
+++ b/tests/test_replay.py
@@ -87,21 +87,22 @@ def test_dump_run_json_dump(
     """Test that replay.dump runs json.dump under the hood and that the context
     is correctly written to the expected file in the replay_dir.
     """
-    spy_ensure = mocker.spy(
+    mock_ensure = mocker.patch(
         'cookiecutter.replay.make_sure_path_exists',
+        side_effect=utils.make_sure_path_exists
     )
-    spy_json_dump = mocker.spy('json.dump')
+    spy_json_dump = mocker.spy(json, 'dump')
 
     mock_get_user_config = mocker.patch(
-        'cookiecutter.config.get_user_config',
-        return_value=replay_dir
+        'cookiecutter.replay.get_user_config',
+        return_value={'replay_dir': replay_dir}
     )
 
     replay.dump(template_name, context)
 
-    spy_ensure.assert_called_once_with(replay_dir)
-    assert spy_json_dump.called == 1
-    assert mock_get_user_config.called == 1
+    mock_ensure.assert_called_once_with(replay_dir)
+    assert spy_json_dump.call_count == 1
+    assert mock_get_user_config.call_count == 1
 
     replay_file = os.path.join(replay_dir, template_name)
 
