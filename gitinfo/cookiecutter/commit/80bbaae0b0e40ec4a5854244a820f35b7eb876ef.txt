commit 80bbaae0b0e40ec4a5854244a820f35b7eb876ef
Author: Rachel Sanders <rsanders@linkedin.com>
Date:   Sat Oct 4 12:11:00 2014 -0700

    Passing the no_prompt down to the cloning of the repo, so this can be run headlessly.

diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index cd049e0..9effcad 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -47,7 +47,8 @@ def cookiecutter(input_dir, checkout=None, no_input=False, extra_context=None):
         repo_dir = clone(
             repo_url=input_dir,
             checkout=checkout,
-            clone_to_dir=config_dict['cookiecutters_dir']
+            clone_to_dir=config_dict['cookiecutters_dir'],
+            no_input=no_input
         )
     else:
         # If it's a local repo, no need to clone or copy to your cookiecutters_dir
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index be2013a..373965b 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -19,7 +19,7 @@ from .prompt import query_yes_no
 from .utils import make_sure_path_exists, rmtree
 
 
-def prompt_and_delete_repo(repo_dir):
+def delete_repo(repo_dir, no_input=False):
     """
     Asks the user whether it's okay to delete the previously-cloned repo.
     If yes, deletes it. Otherwise, Cookiecutter exits.
@@ -27,10 +27,14 @@ def prompt_and_delete_repo(repo_dir):
     :param repo_dir: Directory of previously-cloned repo.
     """
 
-    ok_to_delete = query_yes_no("You've cloned {0} before. "
-        "Is it okay to delete and re-clone it?".format(repo_dir),
-        default="yes"
-    )
+    if no_input:
+      ok_to_delete = True
+    else:
+      ok_to_delete = query_yes_no("You've cloned {0} before. "
+          "Is it okay to delete and re-clone it?".format(repo_dir),
+          default="yes"
+      )
+
     if ok_to_delete:
         rmtree(repo_dir)
     else:
@@ -53,7 +57,7 @@ def identify_repo(repo_url):
         raise UnknownRepoType
 
 
-def clone(repo_url, checkout=None, clone_to_dir="."):
+def clone(repo_url, checkout=None, clone_to_dir=".", no_input=False):
     """
     Clone a repo to the current directory.
 
@@ -75,7 +79,7 @@ def clone(repo_url, checkout=None, clone_to_dir="."):
     logging.debug('repo_dir is {0}'.format(repo_dir))
 
     if os.path.isdir(repo_dir):
-        prompt_and_delete_repo(repo_dir)
+        delete_repo(repo_dir, no_input=no_input)
 
     if repo_type in ["git", "hg"]:
         subprocess.check_call([repo_type, 'clone', repo_url], cwd=clone_to_dir)
