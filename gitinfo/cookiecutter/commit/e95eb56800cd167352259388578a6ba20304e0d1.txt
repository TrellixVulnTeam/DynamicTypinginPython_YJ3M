commit e95eb56800cd167352259388578a6ba20304e0d1
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 14:01:33 2013 +0200

    Pass generate_context() just the default_context, rather than the entire config_dict. Makes it more modular.

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 435cca4..5bb915e 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -32,7 +32,7 @@ else:
     from collections import OrderedDict
 
 
-def generate_context(context_file='cookiecutter.json', config_dict=None):
+def generate_context(context_file='cookiecutter.json', default_context=None):
     """
     Generates the context for a Cookiecutter project template.
     Loads the JSON file as a Python object, with key being the JSON filename.
@@ -53,8 +53,8 @@ def generate_context(context_file='cookiecutter.json', config_dict=None):
 
     # Overwrite context variable defaults with the default context from the
     # user's global config, if available
-    if config_dict:
-        obj.update(config_dict['default_context'])
+    if default_context:
+        obj.update(default_context)
 
     logging.debug('Context generated is {0}'.format(context))
     return context
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index a106c93..76c0509 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -47,9 +47,13 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     context_file = os.path.join(repo_dir, 'cookiecutter.json')
     logging.debug('context_file is {0}'.format(context_file))
 
+    default_context = None
+    if config_dict:
+        default_context = config_dict['default_context']
+
     context = generate_context(
         context_file=context_file,
-        config_dict=config_dict
+        default_context=default_context
     )
 
     # prompt the user to manually configure at the command line.
