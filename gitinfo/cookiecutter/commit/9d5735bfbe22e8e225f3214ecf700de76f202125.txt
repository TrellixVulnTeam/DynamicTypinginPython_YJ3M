commit 9d5735bfbe22e8e225f3214ecf700de76f202125
Author: Daniel Greenfeld <danny@eventbrite.com>
Date:   Sun Mar 15 20:10:12 2015 -0400

    Rebase and merge

diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index aa36f3b..9908f33 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -48,17 +48,25 @@ def prompt_and_delete_repo(repo_dir, no_input=False):
 def identify_repo(repo_url):
     """
     Determines if `repo_url` should be treated as a URL to a git or hg repo.
+    Repos can be identified prepeding "hg+" or "git+" to repo URL.
 
     :param repo_url: Repo URL of unknown type.
-    :returns: "git", "hg", or None.
+    :returns: ("git", repo_url), ("hg", repo_url), or None.
     """
-
-    if 'git' in repo_url:
-        return 'git'
-    elif 'bitbucket' in repo_url:
-        return 'hg'
+    repo_url_values = repo_url.split('+')
+    if len(repo_url_values) == 2:
+        repo_type = repo_url_values[0]
+        if repo_type in ["git", "hg"]:
+            return repo_type, repo_url_values[1]
+        else:
+            raise UnknownRepoType
     else:
-        raise UnknownRepoType
+        if "git" in repo_url:
+            return "git", repo_url
+        elif "bitbucket" in repo_url:
+            return "hg", repo_url
+        else:
+            raise UnknownRepoType
 
 
 def is_vcs_installed(repo_type):
@@ -86,7 +94,7 @@ def clone(repo_url, checkout=None, clone_to_dir=".", no_input=False):
     make_sure_path_exists(clone_to_dir)
 
     # identify the repo_type
-    repo_type = identify_repo(repo_url)
+    repo_type, repo_url = identify_repo(repo_url)
 
     # check that the appropriate VCS for the repo_type is installed
     if not is_vcs_installed(repo_type):
diff --git a/docs/usage.rst b/docs/usage.rst
index 29d697d..7302ba5 100644
--- a/docs/usage.rst
+++ b/docs/usage.rst
@@ -57,6 +57,15 @@ And if you want to specify a branch you can do that with::
 
     $ cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git --checkout develop
 
+Works with private repos
+------------------------
+
+If you want to work repos that are not hosted in github or bitbucket you can indicate explicitly the
+type of repo that you want to use prepending `hg+` or `git+` to repo url::
+
+    $ cookiecutter hg+https://example.com/repo
+
+
 Keeping your cookiecutters organized
 ------------------------------------
 
diff --git a/tests/test_identify_repo.py b/tests/test_identify_repo.py
index 3dd50b3..d8ea730 100755
--- a/tests/test_identify_repo.py
+++ b/tests/test_identify_repo.py
@@ -13,27 +13,27 @@ from cookiecutter import exceptions, vcs
 
 def test_identify_git_github():
     repo_url = 'https://github.com/audreyr/cookiecutter-pypackage.git'
-    assert vcs.identify_repo(repo_url) == 'git'
+    assert vcs.identify_repo(repo_url)[0] == 'git'
 
 
 def test_identify_git_github_no_extension():
     repo_url = 'https://github.com/audreyr/cookiecutter-pypackage'
-    assert vcs.identify_repo(repo_url) == 'git'
+    assert vcs.identify_repo(repo_url)[0] == 'git'
 
 
 def test_identify_git_gitorious():
     repo_url = (
         'git@gitorious.org:cookiecutter-gitorious/cookiecutter-gitorious.git'
     )
-    assert vcs.identify_repo(repo_url) == 'git'
+    assert vcs.identify_repo(repo_url)[0] == 'git'
 
 
 def test_identify_hg_mercurial():
     repo_url = 'https://audreyr@bitbucket.org/audreyr/cookiecutter-bitbucket'
-    assert vcs.identify_repo(repo_url) == 'hg'
+    assert vcs.identify_repo(repo_url)[0] == 'hg'
 
 
 def test_unknown_repo_type():
     repo_url = 'http://norepotypespecified.com'
     with pytest.raises(exceptions.UnknownRepoType):
-        vcs.identify_repo(repo_url)
+        vcs.identify_repo(repo_url)[0]
diff --git a/tests/test_vcs.py b/tests/test_vcs.py
index 1db54ae..0856fdd 100755
--- a/tests/test_vcs.py
+++ b/tests/test_vcs.py
@@ -88,7 +88,7 @@ def test_hg_clone():
 def test_vcs_not_installed(monkeypatch):
     monkeypatch.setattr(
         'cookiecutter.vcs.identify_repo',
-        lambda x: u'stringthatisntashellcommand'
+        lambda x: (u'stringthatisntashellcommand', u'anotherstring'),
     )
     with pytest.raises(exceptions.VCSNotInstalled):
         vcs.clone('http://norepotypespecified.com')
