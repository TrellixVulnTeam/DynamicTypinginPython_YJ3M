commit 52fefa81a3f346e168fe0b6a473f38dd95bc1f5d
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 15:45:07 2013 +0200

    Retrieve default config values from the DEFAULT_CONFIG constant dict.

diff --git a/cookiecutter/config.py b/cookiecutter/config.py
index 94fac9b..686da16 100755
--- a/cookiecutter/config.py
+++ b/cookiecutter/config.py
@@ -8,6 +8,7 @@ cookiecutter.config
 Global configuration handling
 """
 
+import copy
 import logging
 import os
 import sys
@@ -19,9 +20,8 @@ from .utils import unicode_open
 from .exceptions import InvalidConfiguration
 
 
-# TODO: figure out some sane default values, or if this is needed
-DEFAULT_SETTINGS = {
-	'template_dirs': [],
+DEFAULT_CONFIG = {
+	'cookiecutters_dir': os.path.expanduser('~/.cookiecutters/'),
 	'default_context': {}
 }
 
@@ -34,13 +34,17 @@ def get_config(config_path):
     if not os.path.exists(config_path):
         raise ConfigDoesNotExistException
 
+    print("config_path is {0}".format(config_path))
     with unicode_open(config_path) as file_handle:
         try:
-            config_dict = yaml.load(file_handle)
+            yaml_dict = yaml.safe_load(file_handle)
         except yaml.scanner.ScannerError:
             raise InvalidConfiguration(
                 "%s is no a valid YAML file" % config_path)
 
+    config_dict = copy.copy(DEFAULT_CONFIG)
+    config_dict.update(yaml_dict)
+
     return config_dict
 
 
@@ -56,3 +60,4 @@ def get_user_config():
     if os.path.exists(USER_CONFIG_PATH):
         return get_config(USER_CONFIG_PATH)
     return None
+
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 76c0509..5a0bea7 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -47,6 +47,7 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     context_file = os.path.join(repo_dir, 'cookiecutter.json')
     logging.debug('context_file is {0}'.format(context_file))
 
+    # Get default context key/value pairs, if they exist
     default_context = None
     if config_dict:
         default_context = config_dict['default_context']
diff --git a/tests/test-config/invalid-config.yaml b/tests/test-config/invalid-config.yaml
index e0c3772..fd02a3a 100644
--- a/tests/test-config/invalid-config.yaml
+++ b/tests/test-config/invalid-config.yaml
@@ -2,5 +2,4 @@ default_context
     full_name:
     email: "firstname.lastname@gmail.com"
     github_username: "example"
-template_dirs:
-    - "/home/example/some-path-to-templates"
+cookiecutters_dir: "/home/example/some-path-to-templates"
diff --git a/tests/test-config/valid-config.yaml b/tests/test-config/valid-config.yaml
index b29f91e..eab906f 100644
--- a/tests/test-config/valid-config.yaml
+++ b/tests/test-config/valid-config.yaml
@@ -2,5 +2,4 @@ default_context:
     full_name: "Firstname Lastname"
     email: "firstname.lastname@gmail.com"
     github_username: "example"
-template_dirs:
-    - "/home/example/some-path-to-templates"
+cookiecutters_dir: "/home/example/some-path-to-templates"
diff --git a/tests/test-config/valid-partial-config.yaml b/tests/test-config/valid-partial-config.yaml
new file mode 100644
index 0000000..ee799a4
--- /dev/null
+++ b/tests/test-config/valid-partial-config.yaml
@@ -0,0 +1,4 @@
+default_context:
+    full_name: "Firstname Lastname"
+    email: "firstname.lastname@gmail.com"
+    github_username: "example"
diff --git a/tests/test_config.py b/tests/test_config.py
index c4bd0f5..f0064a1 100755
--- a/tests/test_config.py
+++ b/tests/test_config.py
@@ -30,9 +30,7 @@ class TestGetConfig(unittest.TestCase):
         """ Opening and reading config file """
         conf = config.get_config('tests/test-config/valid-config.yaml')
         expected_conf = {
-        	'template_dirs': [
-        		'/home/example/some-path-to-templates'
-        	],
+        	'cookiecutters_dir': '/home/example/some-path-to-templates',
         	'default_context': {
         		"full_name": "Firstname Lastname",
         		"email": "firstname.lastname@gmail.com",
@@ -60,6 +58,24 @@ class TestGetConfig(unittest.TestCase):
                           "tests/test-config/invalid-config.yaml")
 
 
+class TestGetConfigWithDefaults(unittest.TestCase):
+
+    def test_get_config_with_defaults(self):
+        """ A config file that overrides 1 of 2 defaults """
+        
+        conf = config.get_config('tests/test-config/valid-partial-config.yaml')
+        default_cookiecutters_dir = os.path.expanduser('~/.cookiecutters/')
+        expected_conf = {
+        	'cookiecutters_dir': default_cookiecutters_dir,
+        	'default_context': {
+        		"full_name": "Firstname Lastname",
+        		"email": "firstname.lastname@gmail.com",
+        		"github_username": "example"
+        	}
+        }
+        self.assertEqual(conf, expected_conf)
+
+
 class TestGetUserConfig(unittest.TestCase):
 
     def setUp(self):
@@ -85,9 +101,7 @@ class TestGetUserConfig(unittest.TestCase):
         shutil.copy('tests/test-config/valid-config.yaml', self.user_config_path)
         conf = config.get_user_config()
         expected_conf = {
-        	'template_dirs': [
-        		'/home/example/some-path-to-templates'
-        	],
+        	'cookiecutters_dir': '/home/example/some-path-to-templates',
         	'default_context': {
         		"full_name": "Firstname Lastname",
         		"email": "firstname.lastname@gmail.com",
