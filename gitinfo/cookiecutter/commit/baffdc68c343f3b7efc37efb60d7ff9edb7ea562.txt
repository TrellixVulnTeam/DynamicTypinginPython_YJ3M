commit baffdc68c343f3b7efc37efb60d7ff9edb7ea562
Author: raphigaziano <r.gaziano@gmail.com>
Date:   Mon Sep 2 20:56:20 2013 +0200

    config routines & basic tests

diff --git a/cookiecutter/config.py b/cookiecutter/config.py
new file mode 100644
index 0000000..6fc30e4
--- /dev/null
+++ b/cookiecutter/config.py
@@ -0,0 +1,52 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+cookiecutter.config
+-------------------
+
+Global configuration handling
+"""
+
+import logging
+import os
+import sys
+
+import yaml
+
+from .utils import unicode_open
+
+# TODO: test on windows...
+GLOB_SETTINGS_PATH = os.path.expanduser('~/.cookiecutter')
+
+# TODO: figure out some sane default values
+DEFAULT_SETTINGS = {
+	'template_dirs': [],
+	'default_context': {
+  		'full_name': '{full_name}',
+  		'email': '{email}',
+  		'github_username': '{github_username}',
+  	}
+}
+
+def get_config(config_path=GLOB_SETTINGS_PATH):
+	"""
+	Retrieve the global settings and return them.
+	"""
+	if not os.path.exists(config_path):
+		create_config({}, config_path)	
+	with unicode_open(config_path) as file_handle:
+		global_config = yaml.load(file_handle)
+
+	return global_config
+
+def create_config(params, path=GLOB_SETTINGS_PATH):
+	"""
+	Create a new config file at `path` with the default values defined in
+	`params`.
+	"""
+	settings = DEFAULT_SETTINGS
+	settings['template_dirs'] = params.pop('template_dirs', [])
+	settings['default_context'].update(params)
+	with unicode_open(path, 'w') as file_handle:
+		file_handle.write(yaml.dump(settings, default_flow_style=False))
diff --git a/tests/config/test-config.yaml b/tests/config/test-config.yaml
new file mode 100644
index 0000000..db07ca7
--- /dev/null
+++ b/tests/config/test-config.yaml
@@ -0,0 +1,6 @@
+default_context:
+    full_name: "Raphi Gaziano"
+    email: "r.gaziano@gmail.com"
+    github_username: "raphigaziano"
+template_dirs:
+    - "/home/raphi/dev"
diff --git a/tests/test_config.py b/tests/test_config.py
new file mode 100644
index 0000000..d330363
--- /dev/null
+++ b/tests/test_config.py
@@ -0,0 +1,78 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+test_config
+-----------
+
+Tests for `cookiecutter.config` module.
+"""
+
+import os
+import sys
+import unittest
+
+import yaml
+
+from cookiecutter import config
+
+if sys.version_info[:2] < (2, 7):
+    import unittest2 as unittest
+else:
+    import unittest
+
+
+test_config_file = 'tests/config/test-config.yaml'
+test_config_obj = {
+	'template_dirs': [
+		'/home/raphi/dev'
+	],
+	'default_context': {
+		"full_name": "Raphi Gaziano",
+		"email": "r.gaziano@gmail.com",
+		"github_username": "raphigaziano"
+	}
+}
+
+class TestConfig(unittest.TestCase):
+
+    def test_create_config(self):
+        """ Create a new config file with passed values """
+        fname = "tests/config/dynamic-config.yaml"
+        config.create_config({
+            'template_dirs': [
+                'foo',
+                'bar'
+            ],
+            'full_name': 'bob',
+            'email': 'bob@bob.com',
+            'github_username': 'bobo'
+        }, path=fname)
+
+        self.assertTrue(os.path.exists(fname))
+
+        with open(fname, 'r') as file_handle:
+            conf = yaml.load(file_handle)
+
+        self.assertEqual(conf['template_dirs'], ['foo', 'bar'])
+        self.assertEqual(conf['default_context']['full_name'], 'bob')
+        self.assertEqual(conf['default_context']['email'], 'bob@bob.com')
+        self.assertEqual(conf['default_context']['github_username'], 'bobo')
+
+        #os.remove(fname)
+
+	def test_get_config(self):
+		""" Opening and reading config file """
+		conf = config.get_config(test_config_file)
+		self.assertEqual(conf, test_config_obj)
+
+	def test_auto_gen_config_if_does_not_exist(self):
+		""" Auto generation of a default config file if none can be found """
+		fname = "tests/config/autogen.yaml"
+		config.get_config(fname)
+		self.assertTrue(os.path.exists(fname))
+        os.remove(fname)
+
+
+if __name__ == '__main__':
+    unittest.main()
