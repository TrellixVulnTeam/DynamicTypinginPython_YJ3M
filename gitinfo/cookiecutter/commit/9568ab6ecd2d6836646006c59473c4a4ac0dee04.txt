commit 9568ab6ecd2d6836646006c59473c4a4ac0dee04
Author: Elias Dorneles <eliasdorneles@gmail.com>
Date:   Wed Oct 7 22:26:41 2015 -0300

    stop project generation if pre hook script fails

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 94e6e94..a38ef26 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -28,7 +28,7 @@ from .exceptions import (
 )
 from .find import find_template
 from .utils import make_sure_path_exists, work_in
-from .hooks import run_hook
+from .hooks import run_hook, EXIT_SUCCESS
 
 
 def copy_without_render(path, context):
@@ -257,7 +257,10 @@ def generate_files(repo_dir, context=None, output_dir='.',
 
     # run pre-gen hook from repo_dir
     with work_in(repo_dir):
-        run_hook('pre_gen_project', project_dir, context)
+        if run_hook('pre_gen_project', project_dir, context) != EXIT_SUCCESS:
+            logging.error("Stopping generation because pre_gen_project"
+                          " hook script didn't exit sucessfully")
+            return
 
     with work_in(template_dir):
         env = Environment(keep_trailing_newline=True)
diff --git a/cookiecutter/hooks.py b/cookiecutter/hooks.py
index 37d1764..550d6de 100755
--- a/cookiecutter/hooks.py
+++ b/cookiecutter/hooks.py
@@ -19,11 +19,13 @@ from jinja2 import Template
 
 from cookiecutter import utils
 
+
 _HOOKS = [
     'pre_gen_project',
     'post_gen_project',
     # TODO: other hooks should be listed here
 ]
+EXIT_SUCCESS = 0
 
 
 def find_hooks():
@@ -67,7 +69,7 @@ def run_script(script_path, cwd='.'):
         shell=run_thru_shell,
         cwd=cwd
     )
-    proc.wait()
+    return proc.wait()
 
 
 def run_script_with_context(script_path, cwd, context):
@@ -89,7 +91,7 @@ def run_script_with_context(script_path, cwd, context):
     ) as temp:
         temp.write(Template(contents).render(**context))
 
-    run_script(temp.name, cwd)
+    return run_script(temp.name, cwd)
 
 
 def run_hook(hook_name, project_dir, context):
@@ -103,5 +105,5 @@ def run_hook(hook_name, project_dir, context):
     script = find_hooks().get(hook_name)
     if script is None:
         logging.debug('No hooks found')
-        return
+        return EXIT_SUCCESS
     return run_script_with_context(script, project_dir, context)
