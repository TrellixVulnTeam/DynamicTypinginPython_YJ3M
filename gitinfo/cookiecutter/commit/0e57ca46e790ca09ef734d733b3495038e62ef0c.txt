commit 0e57ca46e790ca09ef734d733b3495038e62ef0c
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Fri Nov 25 18:46:17 2016 +0000

    Implement a green test that doesn't use hooks yet

diff --git a/tests/test-extensions/custom-extension/cookiecutter.json b/tests/test-extensions/custom-extension/cookiecutter.json
new file mode 100644
index 0000000..f3bb619
--- /dev/null
+++ b/tests/test-extensions/custom-extension/cookiecutter.json
@@ -0,0 +1,5 @@
+{
+    "project_slug": "foobar",
+    "name": "World",
+    "_extensions": ["hello_extension.HelloExtension"]
+}
diff --git a/tests/test-extensions/custom-extension/{{cookiecutter.project_slug}}/README.rst b/tests/test-extensions/custom-extension/{{cookiecutter.project_slug}}/README.rst
new file mode 100644
index 0000000..47c3d51
--- /dev/null
+++ b/tests/test-extensions/custom-extension/{{cookiecutter.project_slug}}/README.rst
@@ -0,0 +1 @@
+{% hello cookiecutter.name %}
diff --git a/tests/test-extensions/hello_extension/__init__.py b/tests/test-extensions/hello_extension/__init__.py
new file mode 100644
index 0000000..40a96af
--- /dev/null
+++ b/tests/test-extensions/hello_extension/__init__.py
@@ -0,0 +1 @@
+# -*- coding: utf-8 -*-
diff --git a/tests/test-extensions/hello_extension/hello_extension.py b/tests/test-extensions/hello_extension/hello_extension.py
new file mode 100644
index 0000000..ce19664
--- /dev/null
+++ b/tests/test-extensions/hello_extension/hello_extension.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+
+from jinja2 import nodes
+from jinja2.ext import Extension
+
+
+class HelloExtension(Extension):
+    tags = set(['hello'])
+
+    def __init__(self, environment):
+        super(HelloExtension, self).__init__(environment)
+
+    def _hello(self, name):
+        return 'Hello {name}!'.format(name=name)
+
+    def parse(self, parser):
+        lineno = next(parser.stream).lineno
+        node = parser.parse_expression()
+        call_method = self.call_method('_hello', [node], lineno=lineno)
+        return nodes.Output([call_method], lineno=lineno)
diff --git a/tests/test_custom_extensions_in_hooks.py b/tests/test_custom_extensions_in_hooks.py
new file mode 100644
index 0000000..6a5603b
--- /dev/null
+++ b/tests/test_custom_extensions_in_hooks.py
@@ -0,0 +1,45 @@
+# -*- coding: utf-8 -*-
+
+import os
+import codecs
+
+import pytest
+
+from cookiecutter import main
+
+
+@pytest.fixture
+def template():
+    return 'tests/test-extensions/custom-extension'
+
+
+@pytest.fixture
+def output_dir(tmpdir):
+    return str(tmpdir.mkdir('hello'))
+
+
+@pytest.fixture(autouse=True)
+def modify_syspath(monkeypatch):
+    # Make sure that the custom extension can be loaded
+    monkeypatch.syspath_prepend(
+        'tests/test-extensions/hello_extension'
+    )
+
+
+def test_pre_generate_hook(template, output_dir):
+    project_dir = main.cookiecutter(
+        template,
+        no_input=True,
+        output_dir=output_dir,
+        extra_context={
+            'project_slug': 'foobar',
+            'name': 'Cookiemonster',
+        },
+    )
+
+    readme_file = os.path.join(project_dir, 'README.rst')
+
+    with codecs.open(readme_file, encoding='utf8') as f:
+        readme = f.read().strip()
+
+    assert readme == 'Hello Cookiemonster!'
