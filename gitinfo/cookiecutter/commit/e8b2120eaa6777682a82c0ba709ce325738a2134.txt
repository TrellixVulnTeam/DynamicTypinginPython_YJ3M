commit e8b2120eaa6777682a82c0ba709ce325738a2134
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sun Jul 28 11:54:36 2013 +0200

    Add cleanup module to perform post-generation cleaning tasks.

diff --git a/cookiecutter/cleanup.py b/cookiecutter/cleanup.py
new file mode 100755
index 0000000..ce645b2
--- /dev/null
+++ b/cookiecutter/cleanup.py
@@ -0,0 +1,34 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+cookiecutter.cleanup
+--------------------
+
+Functions for cleaning up after Cookiecutter project generation occurs.
+"""
+
+import os
+import shutil
+
+
+def remove_repo(repo_dir, generated_project):
+    """
+    Move the generated project to the same level as `repo_dir`, then delete
+    `repo_dir`.
+    
+    Called when Cookiecutter receives a repo as an argument instead of a
+    project template directory.
+
+    :param repo_dir: Local directory of the cloned repo.
+    :param generated_project: Name of project that Cookiecutter just 
+        generated. All lowercase, no spaces or funny characters.
+    :returns: True if successful, else False.
+    """
+
+    project_dir = os.path.join(repo_dir, generated_project)
+    if os.path.exists(project_dir):
+        shutil.move(project_dir, os.path.dirname(repo_dir))
+        os.rmdir(repo_dir)
+        return True
+    return False
diff --git a/tests/test_cleanup.py b/tests/test_cleanup.py
new file mode 100755
index 0000000..c105393
--- /dev/null
+++ b/tests/test_cleanup.py
@@ -0,0 +1,36 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+test_cleanup
+------------
+
+Tests for `cookiecutter.cleanup` module.
+"""
+
+import os
+import shutil
+import unittest
+
+from cookiecutter import cleanup
+
+
+class TestCleanup(unittest.TestCase):
+
+    def test_remove_repo(self):
+        success = cleanup.remove_repo(
+            repo_dir='tests/fake-repo',
+            generated_project='fake-project'
+        )
+        self.assertTrue(success)
+        self.assertTrue(os.path.isdir('tests/fake-project'))
+        self.assertTrue(os.path.isfile('tests/fake-project/README.rst'))
+        self.assertFalse(os.path.exists('tests/fake-repo'))
+
+    def tearDown(self):
+        if not os.path.exists('tests/fake-repo'):
+            os.mkdir('tests/fake-repo')
+            shutil.move('tests/fake-project', 'tests/fake-repo/fake-project')
+
+if __name__ == '__main__':
+    unittest.main()
