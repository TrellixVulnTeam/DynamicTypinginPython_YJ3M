commit e6d9bf31ab7c07dd32e0064c3fce1ccdc4d8783c
Author: Andrey Shpak <insspb@users.noreply.github.com>
Date:   Sat Apr 18 19:35:44 2020 +0300

    Tests refactoring: test_abort_generate_on_hook_error tests replaced by parametrization, docstrings added (#1374)

diff --git a/tests/hooks-abort-render/hooks/post_gen_project.py b/tests/hooks-abort-render/hooks/post_gen_project.py
index 3adf97c..374ecb4 100644
--- a/tests/hooks-abort-render/hooks/post_gen_project.py
+++ b/tests/hooks-abort-render/hooks/post_gen_project.py
@@ -8,7 +8,7 @@
 import sys
 
 {% if cookiecutter.abort_post_gen == "yes" %}
-sys.exit(1)
+sys.exit(5)
 {% else %}
 sys.exit(0)
 {% endif %}
diff --git a/tests/hooks-abort-render/hooks/pre_gen_project.py b/tests/hooks-abort-render/hooks/pre_gen_project.py
index a39e4ec..6590563 100644
--- a/tests/hooks-abort-render/hooks/pre_gen_project.py
+++ b/tests/hooks-abort-render/hooks/pre_gen_project.py
@@ -8,7 +8,7 @@
 import sys
 
 {% if cookiecutter.abort_pre_gen == "yes" %}
-sys.exit(1)
+sys.exit(5)
 {% else %}
 sys.exit(0)
 {% endif %}
diff --git a/tests/test_abort_generate_on_hook_error.py b/tests/test_abort_generate_on_hook_error.py
index bde566f..629eefc 100644
--- a/tests/test_abort_generate_on_hook_error.py
+++ b/tests/test_abort_generate_on_hook_error.py
@@ -9,45 +9,32 @@ errors occur in (optional) pre- or pos-gen hooks.
 
 import pytest
 
-from cookiecutter import exceptions
-from cookiecutter import generate
+from cookiecutter import exceptions, generate
 
 
-@pytest.mark.usefixtures('clean_system')
-def test_pre_gen_hook(tmpdir):
-    context = {
-        'cookiecutter': {
-            "repo_dir": "foobar",
-            "abort_pre_gen": "yes",
-            "abort_post_gen": "no"
-        }
-    }
-
-    with pytest.raises(exceptions.FailedHookException):
-        generate.generate_files(
-            repo_dir='tests/hooks-abort-render',
-            context=context,
-            output_dir=str(tmpdir)
-        )
-
-    assert not tmpdir.join('foobar').isdir()
+@pytest.mark.parametrize(
+    ("abort_pre_gen", "abort_post_gen"),
+    (("yes", "no"), ("no", "yes")),
+    ids=("pre_gen_hook_raises_error", "post_gen_hook_raises_error"),
+)
+@pytest.mark.usefixtures("clean_system")
+def test_hooks_raises_errors(tmpdir, abort_pre_gen, abort_post_gen):
+    """Verify pre- and pos-gen errors raises correct error code from script.
 
-
-@pytest.mark.usefixtures('clean_system')
-def test_post_gen_hook(tmpdir):
+    This allows developers to make different error codes in their code,
+    for different errors.
+    """
     context = {
-        'cookiecutter': {
+        "cookiecutter": {
             "repo_dir": "foobar",
-            "abort_pre_gen": "no",
-            "abort_post_gen": "yes"
+            "abort_pre_gen": abort_pre_gen,
+            "abort_post_gen": abort_post_gen,
         }
     }
 
-    with pytest.raises(exceptions.FailedHookException):
+    with pytest.raises(exceptions.FailedHookException) as error:
         generate.generate_files(
-            repo_dir='tests/hooks-abort-render',
-            context=context,
-            output_dir=str(tmpdir)
+            repo_dir="tests/hooks-abort-render", context=context, output_dir=str(tmpdir)
         )
-
-    assert not tmpdir.join('foobar').isdir()
+        assert error.value.code == 5
+    assert not tmpdir.join("foobar").isdir()
