commit 7ff0e4fb9926d49192b49e81e2213ee470852bd0
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 17:10:57 2013 +0200

    Move CookiecutterTestCase into tests/__init__.py, and remove its dependency on config.

diff --git a/tests/__init__.py b/tests/__init__.py
old mode 100644
new mode 100755
index e69de29..95fa91e
--- a/tests/__init__.py
+++ b/tests/__init__.py
@@ -0,0 +1,53 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+"""
+__init__
+---------
+
+Contains testing helpers.
+"""
+
+import os
+import shutil
+import sys
+if sys.version_info[:2] < (2, 7):
+    import unittest2 as unittest
+else:
+    import unittest
+
+class CookiecutterTestCase(unittest.TestCase):
+    def setUp(self):
+        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
+        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
+        self.user_config_path_backup = os.path.expanduser(
+            '~/.cookiecutterrc.backup'
+        )
+        if os.path.exists(self.user_config_path):
+            shutil.copy(self.user_config_path, self.user_config_path_backup)
+            os.remove(self.user_config_path)
+
+        # If the default cookiecutters_dir is pre-existing, move it to a
+        # temp location
+        self.cookiecutters_dir = os.path.expanduser('~/.cookiecutters')
+        self.cookiecutters_dir_backup = os.path.expanduser('~/.cookiecutters.backup')
+        if os.path.isdir(self.cookiecutters_dir):
+            shutil.copytree(self.cookiecutters_dir, self.cookiecutters_dir_backup)
+        if os.path.isdir(self.cookiecutters_dir_backup):
+            shutil.rmtree(self.cookiecutters_dir)
+
+    def tearDown(self):
+        # Delete the created ~/.cookiecutters dir as long as a backup exists
+        if os.path.isdir(self.cookiecutters_dir) and os.path.isdir(self.cookiecutters_dir_backup):
+            shutil.rmtree(self.cookiecutters_dir)
+    
+        # If it existed, restore ~/.cookiecutterrc
+        if os.path.exists(self.user_config_path_backup):
+            shutil.copy(self.user_config_path_backup, self.user_config_path)
+            os.remove(self.user_config_path_backup)
+        
+        # Restore the user's default cookiecutters_dir contents
+        if os.path.isdir(self.cookiecutters_dir_backup):
+            shutil.copytree(self.cookiecutters_dir_backup, self.cookiecutters_dir)
+        if os.path.isdir(self.cookiecutters_dir):
+            shutil.rmtree(self.cookiecutters_dir_backup)
\ No newline at end of file
diff --git a/tests/test_main.py b/tests/test_main.py
index 2982361..208ceca 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -12,9 +12,9 @@ import logging
 import os
 import shutil
 import sys
-import unittest
 
 from cookiecutter import config, main
+from tests import CookiecutterTestCase
 
 if sys.version_info[:2] < (2, 7):
     import unittest2 as unittest
@@ -91,43 +91,6 @@ class TestArgParsing(unittest.TestCase):
         self.assertEqual(args.checkout, 'develop')
 
 
-class CookiecutterTestCase(unittest.TestCase):
-    def setUp(self):
-        # If ~/.cookiecutterrc is pre-existing, move it to a temp location
-        self.user_config_path = os.path.expanduser('~/.cookiecutterrc')
-        self.user_config_path_backup = os.path.expanduser(
-            '~/.cookiecutterrc.backup'
-        )
-        if os.path.exists(self.user_config_path):
-            shutil.copy(self.user_config_path, self.user_config_path_backup)
-            os.remove(self.user_config_path)
-
-        # If the default cookiecutters_dir is pre-existing, move it to a
-        # temp location
-        self.cookiecutters_dir = config.DEFAULT_CONFIG['cookiecutters_dir']
-        self.cookiecutters_dir_backup = os.path.expanduser('~/.cookiecutters.backup')
-        if os.path.isdir(self.cookiecutters_dir):
-            shutil.copytree(self.cookiecutters_dir, self.cookiecutters_dir_backup)
-        if os.path.isdir(self.cookiecutters_dir_backup):
-            shutil.rmtree(self.cookiecutters_dir)
-
-    def tearDown(self):
-        # Delete the created ~/.cookiecutters dir as long as a backup exists
-        if os.path.isdir(self.cookiecutters_dir) and os.path.isdir(self.cookiecutters_dir_backup):
-            shutil.rmtree(self.cookiecutters_dir)
-    
-        # If it existed, restore ~/.cookiecutterrc
-        if os.path.exists(self.user_config_path_backup):
-            shutil.copy(self.user_config_path_backup, self.user_config_path)
-            os.remove(self.user_config_path_backup)
-        
-        # Restore the user's default cookiecutters_dir contents
-        if os.path.isdir(self.cookiecutters_dir_backup):
-            shutil.copytree(self.cookiecutters_dir_backup, self.cookiecutters_dir)
-        if os.path.isdir(self.cookiecutters_dir):
-            shutil.rmtree(self.cookiecutters_dir_backup)
-
-
 class TestCookiecutterRepoArg(CookiecutterTestCase):
 
     def tearDown(self):
