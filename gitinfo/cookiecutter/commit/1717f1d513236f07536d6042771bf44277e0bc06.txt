commit 1717f1d513236f07536d6042771bf44277e0bc06
Author: Ilja Bauer <iljabauer@gmail.com>
Date:   Tue Apr 21 14:05:57 2015 +0200

    Added fix and tests to Issue 267

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index f21c544..5a6aebf 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -115,7 +115,13 @@ def generate_file(project_dir, infile, context, env):
 
     # Render the path to the output file (not including the root project dir)
     outfile_tmpl = Template(infile)
+
     outfile = os.path.join(project_dir, outfile_tmpl.render(**context))
+    file_name_is_empty = os.path.isdir(outfile)
+    if file_name_is_empty:
+        logging.debug('The resulting file name is empty: {0}'.format(outfile))
+        return
+
     logging.debug('outfile is {0}'.format(outfile))
 
     # Just copy over binary files. Don't render.
diff --git "a/tests/files/{% if generate_file == \"y\" %}cheese.txt{% endif %}" "b/tests/files/{% if generate_file == \"y\" %}cheese.txt{% endif %}"
new file mode 100644
index 0000000..5f47c92
--- /dev/null
+++ "b/tests/files/{% if generate_file == \"y\" %}cheese.txt{% endif %}"	
@@ -0,0 +1 @@
+Testing that generate_file was {{ generate_file }}
\ No newline at end of file
diff --git a/tests/test_generate_file.py b/tests/test_generate_file.py
index 33ab611..45ba07f 100644
--- a/tests/test_generate_file.py
+++ b/tests/test_generate_file.py
@@ -54,6 +54,32 @@ def test_generate_file(env):
         assert generated_text == 'Testing cheese'
 
 
+@pytest.mark.usefixtures('remove_cheese_file')
+def test_generate_file_with_false_condition(env):
+    infile = 'tests/files/{% if generate_file == "y" %}cheese.txt{% endif %}'
+    generate.generate_file(
+        project_dir=".",
+        infile=infile,
+        context={'generate_file': 'n'},
+        env=env
+    )
+    assert not os.path.exists('tests/files/cheese.txt')
+
+
+@pytest.mark.usefixtures('remove_cheese_file')
+def test_generate_file_with_true_conditional(env):
+    infile = 'tests/files/{% if generate_file == "y" %}cheese.txt{% endif %}'
+    generate.generate_file(
+        project_dir=".",
+        infile=infile,
+        context={'generate_file': 'y'},
+        env=env
+    )
+    assert os.path.isfile('tests/files/cheese.txt')
+    with open('tests/files/cheese.txt', 'rt') as f:
+        generated_text = f.read()
+        assert generated_text == 'Testing that generate_file was y'
+
 @pytest.fixture
 def expected_msg():
     msg = (
