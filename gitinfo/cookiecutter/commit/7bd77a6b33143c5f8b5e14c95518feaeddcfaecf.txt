commit 7bd77a6b33143c5f8b5e14c95518feaeddcfaecf
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Sat Jun 25 22:20:21 2016 +0200

    Convert and move should clone test

diff --git a/tests/repository/test_dermine_repo_dir_clones_repo.py b/tests/repository/test_dermine_repo_dir_clones_repo.py
new file mode 100644
index 0000000..032392e
--- /dev/null
+++ b/tests/repository/test_dermine_repo_dir_clones_repo.py
@@ -0,0 +1,53 @@
+# -*- coding: utf-8 -*-
+import os
+
+import pytest
+
+from cookiecutter.repository import determine_repo_dir
+
+
+@pytest.fixture
+def template_url():
+    """URL to example Cookiecutter template on GitHub.
+
+    Note: when used, git clone is mocked.
+    """
+    return 'https://github.com/pytest-dev/cookiecutter-pytest-plugin.git'
+
+
+@pytest.fixture
+def output_dir(tmpdir):
+    """Given a temporary dir, create an `output` subdirectory inside it and
+    return its path (not a str but a py.path instance).
+    """
+    return tmpdir.mkdir('output')
+
+
+def test_determine_repository_url_should_clone(
+        mocker, template_url, output_dir, user_config_file, user_config_data):
+    """`clone()` should be called with correct args when `cookiecutter()` is
+    called.
+    """
+
+    mock_clone = mocker.patch(
+        'cookiecutter.repository.clone',
+        return_value='tests/fake-repo-tmpl',
+        autospec=True
+    )
+
+    project_dir = determine_repo_dir(
+        template_url,
+        abbreviations={},
+        cookiecutters_dir=user_config_data['cookiecutters_dir'],
+        checkout=None,
+        no_input=True
+    )
+
+    mock_clone.assert_called_once_with(
+        repo_url=template_url,
+        checkout=None,
+        clone_to_dir=user_config_data['cookiecutters_dir'],
+        no_input=True
+    )
+
+    assert os.path.isdir(project_dir)
diff --git a/tests/test_main.py b/tests/test_main.py
index bc997ad..1198fb0 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -1,53 +1,5 @@
 # -*- coding: utf-8 -*-
-
-import os
-
-import pytest
-
 from cookiecutter.main import cookiecutter
-@pytest.fixture
-def template_url():
-    """URL to example Cookiecutter template on GitHub.
-
-    Note: when used, git clone is mocked.
-    """
-    return 'https://github.com/pytest-dev/cookiecutter-pytest-plugin.git'
-
-
-@pytest.fixture
-def output_dir(tmpdir):
-    """Given a temporary dir, create an `output` subdirectory inside it and
-    return its path (not a str but a py.path instance).
-    """
-    return tmpdir.mkdir('output')
-
-@pytest.skip
-def test_cookiecutter_repository_url_should_clone(
-        mocker, template_url, output_dir, user_config_file, user_config_data):
-    """`clone()` should be called with correct args when `cookiecutter()` is
-    called.
-    """
-    mock_clone = mocker.patch(
-        'cookiecutter.main.clone',
-        return_value='tests/fake-repo-tmpl',
-        autospec=True
-    )
-
-    project_dir = cookiecutter(
-        template_url,
-        no_input=True,
-        output_dir=str(output_dir),
-        config_file=user_config_file
-    )
-
-    mock_clone.assert_called_once_with(
-        repo_url=template_url,
-        checkout=None,
-        clone_to_dir=user_config_data['cookiecutters_dir'],
-        no_input=True
-    )
-
-    assert os.path.isdir(project_dir)
 
 
 def test_replay_dump_template_name(
