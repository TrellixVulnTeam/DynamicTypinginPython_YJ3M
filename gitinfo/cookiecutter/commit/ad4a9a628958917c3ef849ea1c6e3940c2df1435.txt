commit ad4a9a628958917c3ef849ea1c6e3940c2df1435
Author: michaeljoseph <michaeljoseph+github@gmail.com>
Date:   Thu Jul 14 21:05:06 2016 +0200

    Fix test refactor

diff --git a/tests/vcs/test_clone.py b/tests/vcs/test_clone.py
index 430cff2..4e6cebf 100644
--- a/tests/vcs/test_clone.py
+++ b/tests/vcs/test_clone.py
@@ -31,21 +31,6 @@ def test_clone_should_raise_if_vcs_not_installed(mocker, clone_dir):
         vcs.clone(repo_url, clone_to_dir=clone_dir)
 
 
-@pytest.mark.parametrize('which_return, result', [
-    ('', False),
-    (None, False),
-    (False, False),
-    ('/usr/local/bin/git', True),
-])
-def test_is_vcs_installed(mocker, which_return, result):
-    mocker.patch(
-        'cookiecutter.vcs.which',
-        autospec=True,
-        return_value=which_return
-    )
-    assert vcs.is_vcs_installed('git') == result
-
-
 @pytest.mark.parametrize('repo_type, repo_url, repo_name', [
     ('git', 'https://github.com/hello/world.git', 'world'),
     ('hg', 'https://bitbucket.org/foo/bar', 'bar'),
diff --git a/tests/vcs/test_is_vcs_installed.py b/tests/vcs/test_is_vcs_installed.py
index 32dba55..b73ce7f 100644
--- a/tests/vcs/test_is_vcs_installed.py
+++ b/tests/vcs/test_is_vcs_installed.py
@@ -1,31 +1,7 @@
 # -*- coding: utf-8 -*-
 import pytest
 
-from cookiecutter import exceptions, vcs
-
-
-@pytest.fixture
-def clone_dir(tmpdir):
-    """Simulates creation of a directory called `clone_dir` inside of `tmpdir`.
-    Returns a str to said directory.
-    """
-    return str(tmpdir.mkdir('clone_dir'))
-
-
-def test_clone_should_raise_if_vcs_not_installed(mocker, clone_dir):
-    """In `clone()`, a `VCSNotInstalled` exception should be raised if no VCS
-    is installed.
-    """
-    mocker.patch(
-        'cookiecutter.vcs.is_vcs_installed',
-        autospec=True,
-        return_value=False
-    )
-
-    repo_url = 'https://github.com/pytest-dev/cookiecutter-pytest-plugin.git'
-
-    with pytest.raises(exceptions.VCSNotInstalled):
-        vcs.clone(repo_url, clone_to_dir=clone_dir)
+from cookiecutter import vcs
 
 
 @pytest.mark.parametrize('which_return, result', [
