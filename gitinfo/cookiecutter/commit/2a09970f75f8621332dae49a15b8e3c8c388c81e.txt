commit 2a09970f75f8621332dae49a15b8e3c8c388c81e
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Sat Jun 25 22:18:39 2016 +0200

    Refactor is_repo_url test

diff --git a/tests/repository/test_is_repo_url.py b/tests/repository/test_is_repo_url.py
new file mode 100644
index 0000000..3cf41a3
--- /dev/null
+++ b/tests/repository/test_is_repo_url.py
@@ -0,0 +1,49 @@
+# -*- coding: utf-8 -*-
+import pytest
+
+from cookiecutter.repository import is_repo_url, expand_abbreviations
+
+
+@pytest.fixture(params=[
+    'gitolite@server:team/repo',
+    'git@github.com:audreyr/cookiecutter.git',
+    'https://github.com/audreyr/cookiecutter.git',
+    'git+https://private.com/gitrepo',
+    'hg+https://private.com/mercurialrepo',
+    'https://bitbucket.org/pokoli/cookiecutter.hg',
+])
+def remote_repo_url(request):
+    return request.param
+
+
+def test_is_repo_url_for_remote_urls(remote_repo_url):
+    """Verify is_repo_url works."""
+    assert is_repo_url(remote_repo_url) is True
+
+
+@pytest.fixture(params=[
+    '/audreyr/cookiecutter.git',
+    '/home/audreyr/cookiecutter',
+    (
+        'c:\\users\\appveyor\\appdata\\local\\temp\\1\\pytest-0\\'
+        'test_default_output_dir0\\template'
+    ),
+])
+def local_repo_url(request):
+    return request.param
+
+
+def test_is_repo_url_for_local_urls(local_repo_url):
+    """Verify is_repo_url works."""
+    assert is_repo_url(local_repo_url) is False
+
+
+def test_expand_abbreviations():
+    template = 'gh:audreyr/cookiecutter-pypackage'
+
+    # This is not a valid repo url just yet!
+    # First `repository.expand_abbreviations` needs to translate it
+    assert is_repo_url(template) is False
+
+    expanded_template = expand_abbreviations(template, {})
+    assert is_repo_url(expanded_template) is True
diff --git a/tests/test_main.py b/tests/test_main.py
index 2a92bc7..bc997ad 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -5,50 +5,6 @@ import os
 import pytest
 
 from cookiecutter.main import cookiecutter
-from cookiecutter.repository import is_repo_url, expand_abbreviations
-@pytest.fixture(params=[
-    'gitolite@server:team/repo',
-    'git@github.com:audreyr/cookiecutter.git',
-    'https://github.com/audreyr/cookiecutter.git',
-    'git+https://private.com/gitrepo',
-    'hg+https://private.com/mercurialrepo',
-    'https://bitbucket.org/pokoli/cookiecutter.hg',
-])
-def remote_repo_url(request):
-    return request.param
-
-
-def test_is_repo_url_for_remote_urls(remote_repo_url):
-    """Verify is_repo_url works."""
-    assert is_repo_url(remote_repo_url) is True
-
-
-@pytest.fixture(params=[
-    '/audreyr/cookiecutter.git',
-    '/home/audreyr/cookiecutter',
-    (
-        'c:\\users\\appveyor\\appdata\\local\\temp\\1\\pytest-0\\'
-        'test_default_output_dir0\\template'
-    ),
-])
-def local_repo_url(request):
-    return request.param
-
-
-def test_is_repo_url_for_local_urls(local_repo_url):
-    """Verify is_repo_url works."""
-    assert is_repo_url(local_repo_url) is False
-
-
-def test_expand_abbreviations():
-    template = 'gh:audreyr/cookiecutter-pypackage'
-
-    # This is not a valid repo url just yet!
-    # First `main.expand_abbreviations` needs to translate it
-    assert is_repo_url(template) is False
-
-    expanded_template = expand_abbreviations(template, {})
-    assert is_repo_url(expanded_template) is True
 @pytest.fixture
 def template_url():
     """URL to example Cookiecutter template on GitHub.
