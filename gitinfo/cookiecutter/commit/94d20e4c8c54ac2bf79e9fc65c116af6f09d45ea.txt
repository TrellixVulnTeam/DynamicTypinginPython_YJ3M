commit 94d20e4c8c54ac2bf79e9fc65c116af6f09d45ea
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Mon May 25 18:38:11 2015 +0200

    Change the string type check in prompt.py

diff --git a/cookiecutter/prompt.py b/cookiecutter/prompt.py
index 3729da0..ce2d462 100755
--- a/cookiecutter/prompt.py
+++ b/cookiecutter/prompt.py
@@ -61,11 +61,11 @@ def read_user_choice(var_name, options):
     if not options:
         raise ValueError
 
-    if not all(isinstance(opt, str) for opt in options):
+    if not all(is_string(opt) for opt in options):
         raise TypeError
 
     choice_map = OrderedDict(
-        (str(i), value) for i, value in enumerate(options, 1)
+        ('{}'.format(i), value) for i, value in enumerate(options, 1)
     )
     choices = choice_map.keys()
     default = '1'
diff --git a/tests/test_read_user_choice.py b/tests/test_read_user_choice.py
index e995ede..c3ad16a 100644
--- a/tests/test_read_user_choice.py
+++ b/tests/test_read_user_choice.py
@@ -22,7 +22,7 @@ def test_click_invocation(mocker, user_choice, expected_value):
     choice.return_value = click.Choice(OPTIONS)
 
     prompt = mocker.patch('click.prompt')
-    prompt.return_value = str(user_choice)
+    prompt.return_value = '{}'.format(user_choice)
 
     assert read_user_choice('varname', OPTIONS) == expected_value
 
@@ -38,7 +38,7 @@ def invalid_options(request):
     return ['foo', 'bar', request.param]
 
 
-def test_raise_on_non_str_options(invalid_options):
+def test_raise_on_non_string_options(invalid_options):
     with pytest.raises(TypeError):
         read_user_choice('foo', invalid_options)
 
