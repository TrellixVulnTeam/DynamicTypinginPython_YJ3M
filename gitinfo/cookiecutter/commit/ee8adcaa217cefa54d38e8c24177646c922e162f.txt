commit ee8adcaa217cefa54d38e8c24177646c922e162f
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Sat Nov 15 11:17:53 2014 +0100

    Convert template_syntax_error test and fix exception handling

diff --git a/tests/test_generate.py b/tests/test_generate.py
deleted file mode 100755
index f676768..0000000
--- a/tests/test_generate.py
+++ /dev/null
@@ -1,61 +0,0 @@
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-
-"""
-test_generate
---------------
-
-Tests for `cookiecutter.generate` module.
-"""
-from __future__ import unicode_literals
-import logging
-import os
-import io
-import sys
-import stat
-import unittest
-
-from jinja2 import FileSystemLoader
-from jinja2.environment import Environment
-from jinja2.exceptions import TemplateSyntaxError
-
-from cookiecutter import generate
-from cookiecutter import exceptions
-from cookiecutter import utils
-from tests import CookiecutterCleanSystemTestCase
-
-logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
-
-
-class TestGenerateFile(unittest.TestCase):
-
-    def test_generate_file_verbose_template_syntax_error(self):
-        env = Environment()
-        env.loader = FileSystemLoader('.')
-        try:
-            generate.generate_file(
-                project_dir=".",
-                infile='tests/files/syntax_error.txt',
-                context={'syntax_error': 'syntax_error'},
-                env=env
-            )
-        except TemplateSyntaxError as exception:
-            expected = (
-                'Missing end of comment tag\n'
-                '  File "./tests/files/syntax_error.txt", line 1\n'
-                '    I eat {{ syntax_error }} {# this comment is not closed}'
-            )
-            expected = expected.replace("/", os.sep)
-            self.assertEquals(str(exception), expected)
-        except exception:
-            self.fail('Unexpected exception thrown:', exception)
-        else:
-            self.fail('TemplateSyntaxError not thrown')
-
-    def tearDown(self):
-        if os.path.exists('tests/files/cheese.txt'):
-            os.remove('tests/files/cheese.txt')
-
-
-if __name__ == '__main__':
-    unittest.main()
diff --git a/tests/test_generate_file.py b/tests/test_generate_file.py
index cd8fddc..28cbf7b 100644
--- a/tests/test_generate_file.py
+++ b/tests/test_generate_file.py
@@ -7,6 +7,7 @@ test_generate_file
 
 Tests formerly known from a unittest residing in test_generate.py named
 TestGenerateFile.test_generate_file
+TestGenerateFile.test_generate_file_verbose_template_syntax_error
 """
 
 from __future__ import unicode_literals
@@ -15,6 +16,7 @@ import pytest
 
 from jinja2 import FileSystemLoader
 from jinja2.environment import Environment
+from jinja2.exceptions import TemplateSyntaxError
 
 from cookiecutter import generate
 from cookiecutter import utils
@@ -46,3 +48,28 @@ def test_generate_file():
     with open('tests/files/cheese.txt', 'rt') as f:
         generated_text = f.read()
         assert generated_text == 'Testing cheese'
+
+
+@pytest.mark.usefixtures('remove_cheese_file')
+def test_generate_file_verbose_template_syntax_error():
+    env = Environment()
+    env.loader = FileSystemLoader('.')
+    try:
+        generate.generate_file(
+            project_dir=".",
+            infile='tests/files/syntax_error.txt',
+            context={'syntax_error': 'syntax_error'},
+            env=env
+        )
+    except TemplateSyntaxError as exception:
+        expected = (
+            'Missing end of comment tag\n'
+            '  File "./tests/files/syntax_error.txt", line 1\n'
+            '    I eat {{ syntax_error }} {# this comment is not closed}'
+        )
+        expected = expected.replace("/", os.sep)
+        assert str(exception) == expected
+    except Exception as exception:
+        pytest.fail('Unexpected exception thrown: {0}'.format(exception))
+    else:
+        pytest.fail('TemplateSyntaxError not thrown')
