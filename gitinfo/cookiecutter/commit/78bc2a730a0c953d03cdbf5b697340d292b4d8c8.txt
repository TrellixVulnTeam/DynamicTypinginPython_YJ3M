commit 78bc2a730a0c953d03cdbf5b697340d292b4d8c8
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sun Jul 28 15:15:16 2013 +0200

    Never change working directory. Use relative or abs paths instead, with pref given to rel paths.

diff --git a/cookiecutter/cleanup.py b/cookiecutter/cleanup.py
index 7629c55..fe9f096 100755
--- a/cookiecutter/cleanup.py
+++ b/cookiecutter/cleanup.py
@@ -28,9 +28,15 @@ def remove_repo(repo_dir, generated_project):
     """
 
     logging.info('Moving {0} out of {1} and removing {1}'.format(generated_project, repo_dir))
+    
+    parent_dir = os.path.dirname(os.path.abspath(repo_dir))
+    logging.info('parent_dir is {0}'.format(parent_dir))
+
     project_dir = os.path.join(repo_dir, generated_project)
+    logging.info('project_dir is {0}'.format(project_dir))
+    
     if os.path.exists(project_dir):
-        shutil.move(project_dir, os.path.dirname(repo_dir))
-        os.rmdir(repo_dir)
+        shutil.move(project_dir, parent_dir)
+        shutil.rmtree(repo_dir)
         return True
     return False
diff --git a/cookiecutter/find.py b/cookiecutter/find.py
index 3af1f46..f44daa9 100755
--- a/cookiecutter/find.py
+++ b/cookiecutter/find.py
@@ -17,6 +17,7 @@ def find_template(repo_dir):
     Determines which child directory of `repo_dir` is the project template.
     
     :param repo_dir: Local directory of newly cloned repo.
+    :returns project_template: Relative path to project template.
     """
 
     logging.info('Searching {0} for the project template.'.format(repo_dir))
@@ -28,6 +29,7 @@ def find_template(repo_dir):
 
     if len(contents_set) == 1:
         project_template = contents_set.pop()
+        project_template = os.path.join(repo_dir, project_template)
         logging.info('The project template appears to be {0}'.format(project_template))
         return project_template
     return False
diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 9336c60..70d347f 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -60,31 +60,31 @@ def generate_context(json_dir='json/'):
     return context
 
 
-def generate_files(input_dir, context=None):
+def generate_files(template_dir, context=None):
     """
     Renders the templates and saves them to files.
     :param input_dir: Project template input directory.
     :paramtype input_dir: directory
     """
     
-    logging.info('Generating project from {0}...'.format(input_dir))
+    logging.info('Generating project from {0}...'.format(template_dir))
 
     context = context or {}
     env = Environment()
     env.loader = FileSystemLoader('.')
 
     # Render dirname before writing
-    name_tmpl = Template(input_dir)
+    name_tmpl = Template(template_dir)
     output_dir = name_tmpl.render(**context)
-    if output_dir == input_dir:
+    if output_dir == template_dir:
         raise NonTemplatedInputDirException
 
     make_sure_path_exists(output_dir)
 
-    for root, dirs, files in os.walk(input_dir):
+    for root, dirs, files in os.walk(template_dir):
         for d in dirs:
             indir = os.path.join(root, d)
-            outdir = indir.replace(input_dir, output_dir, 1)
+            outdir = indir.replace(template_dir, output_dir, 1)
 
             # Render dirname before writing
             name_tmpl = Template(outdir)
@@ -99,7 +99,7 @@ def generate_files(input_dir, context=None):
             rendered_file = tmpl.render(**context)
 
             # Write it to the corresponding place in output_dir
-            outfile = infile.replace(input_dir, output_dir, 1)
+            outfile = infile.replace(template_dir, output_dir, 1)
 
             # Render the output filename before writing
             name_tmpl = Template(outfile)
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index b09099c..b48bd6b 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -35,21 +35,19 @@ def cookiecutter(input_dir):
         got_repo_arg = True
         repo_dir = git_clone(input_dir)
         project_template = find_template(repo_dir)
-        os.chdir(repo_dir)
     else:
         got_repo_arg = False
         project_template = input_dir
 
-    # Create project from local context and project template.
-
-
     json_dir = os.path.join(os.path.dirname(project_template), 'json/')
     logging.info('json_dir is {0}'.format(json_dir))
+
+    # Create project from local context and project template.
     context = generate_context(
         json_dir=json_dir
     )
     generate_files(
-        input_dir=project_template,
+        template_dir=project_template,
         context=context
     )
 
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index 275f59c..a8b5efc 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -8,6 +8,7 @@ cookiecutter.vcs
 Helper functions for working with version control systems.
 """
 
+import logging
 import os
 
 
@@ -23,4 +24,5 @@ def git_clone(repo):
     # Return repo dir
     tail = os.path.split(repo)[1]
     repo_dir = tail.rsplit('.git')[0]
+    logging.info('repo_dir is {0}'.format(repo_dir))
     return repo_dir
diff --git a/tests/test_examples.py b/tests/test_examples.py
index c3296b9..65e86cd 100755
--- a/tests/test_examples.py
+++ b/tests/test_examples.py
@@ -19,7 +19,6 @@ else:
     import unittest
 
 
-@unittest.skip(reason='Works locally with tox but fails on Travis.')
 class TestExamples(unittest.TestCase):
 
     def test_cookiecutter_pypackage(self):
@@ -28,18 +27,24 @@ class TestExamples(unittest.TestCase):
         """
 
         os.system('git clone https://github.com/audreyr/cookiecutter-pypackage.git')
-        os.chdir('cookiecutter-pypackage')
-        os.system('cookiecutter {{project.repo_name}}')
-        self.assertTrue(os.path.isfile('alotofeffort/README.rst'))
-        os.chdir(os.pardir)
-
-    def test_cookiecutter_pypackage_git(self):
-        os.system('cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git')
+        os.system('cookiecutter cookiecutter-pypackage/{{project.repo_name}}')
         self.assertTrue(os.path.isfile('cookiecutter-pypackage/alotofeffort/README.rst'))
 
     def tearDown(self):
         if os.path.isdir('cookiecutter-pypackage'):
             shutil.rmtree('cookiecutter-pypackage')
+            
+            
+class TestExamplesRepoArg(unittest.TestCase):
+    
+    def test_cookiecutter_pypackage_git(self):
+        os.system('cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git')
+        self.assertTrue(os.path.isfile('alotofeffort/README.rst'))
+
+    def tearDown(self):
+        if os.path.isdir('alotofeffort'):
+            shutil.rmtree('alotofeffort')
+
         
 if __name__ == '__main__':
     unittest.main()
diff --git a/tests/test_find.py b/tests/test_find.py
index a1290d1..bccf95f 100755
--- a/tests/test_find.py
+++ b/tests/test_find.py
@@ -20,9 +20,9 @@ class TestFind(unittest.TestCase):
     def test_find_template(self):
         os.system('git clone https://github.com/audreyr/cookiecutter-pypackage.git')
         template = find.find_template(repo_dir='cookiecutter-pypackage')
-        self.assertEqual(template, '{{project.repo_name}}')
-        self.assertNotEqual(template, '{{project.repo_name }}')
-        self.assertNotEqual(template, '{{ project.repo_name }}')
+        self.assertEqual(template, 'cookiecutter-pypackage/{{project.repo_name}}')
+        self.assertNotEqual(template, 'cookiecutter-pypackage/{{project.repo_name }}')
+        self.assertNotEqual(template, 'cookiecutter-pypackage/{{ project.repo_name }}')
 
         if os.path.isdir('cookiecutter-pypackage'):
             shutil.rmtree('cookiecutter-pypackage')
diff --git a/tests/test_generate.py b/tests/test_generate.py
index 9bb0624..1e4b5a6 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -25,13 +25,13 @@ class TestGenerate(unittest.TestCase):
             exceptions.NonTemplatedInputDirException,
             generate.generate_files,
             context={'food': 'pizza'}, 
-            input_dir='tests/input'
+            template_dir='tests/input'
         )
 
     def test_generate_files(self):
         generate.generate_files(
             context={'food': 'pizza'},
-            input_dir='tests/input{{food}}'
+            template_dir='tests/input{{food}}'
         )
         self.assertTrue(os.path.isfile('tests/inputpizza/simple.txt'))
         simple_text = open('tests/inputpizza/simple.txt', 'rt').read()
@@ -45,7 +45,7 @@ class TestGenerate(unittest.TestCase):
         context = generate.generate_context(json_dir='tests/json2')
         generate.generate_files(
             context=context,
-            input_dir='tests/input{{stuff.color}}'
+            template_dir='tests/input{{stuff.color}}'
         )
         
         something = """Hi!
diff --git a/tests/test_main.py b/tests/test_main.py
index ad346e6..42f0bb5 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -16,8 +16,8 @@ import unittest
 from cookiecutter import main
 
 
-# Log info and above to console
-logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO)
+# Log debug and above to console
+logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
 
 
 class TestCookiecutter(unittest.TestCase):
@@ -27,10 +27,24 @@ class TestCookiecutter(unittest.TestCase):
         self.assertTrue(os.path.isdir('tests/fake-repo-pre/fake-project'))
         self.assertTrue(os.path.isfile('tests/fake-repo-pre/fake-project/README.rst'))
         self.assertFalse(os.path.exists('tests/fake-repo-pre/fake-project/json/'))
-    
+
     def tearDown(self):
         if os.path.isdir('tests/fake-repo-pre/fake-project'):
             shutil.rmtree('tests/fake-repo-pre/fake-project')
 
+class TestCookiecutterRepoArg(unittest.TestCase):
+
+    def test_cookiecutter_git(self):
+        main.cookiecutter('https://github.com/audreyr/cookiecutter-pypackage.git')
+        logging.debug('Current dir is {0}'.format(os.getcwd()))
+        self.assertFalse(os.path.exists('cookiecutter-pypackage'))
+        self.assertTrue(os.path.isdir('alotofeffort'))
+        self.assertTrue(os.path.isfile('alotofeffort/README.rst'))
+        self.assertTrue(os.path.exists('alotofeffort/setup.py'))
+    
+    def tearDown(self):
+        if os.path.isdir('alotofeffort'):
+            shutil.rmtree('alotofeffort')
+
 if __name__ == '__main__':
     unittest.main()
diff --git a/tests/test_vcs.py b/tests/test_vcs.py
index aa8e42a..442950e 100755
--- a/tests/test_vcs.py
+++ b/tests/test_vcs.py
@@ -8,6 +8,7 @@ test_vcs
 Tests for `cookiecutter.vcs` module.
 """
 
+import logging
 import os
 import shutil
 import unittest
@@ -15,10 +16,14 @@ import unittest
 from cookiecutter import vcs
 
 
+# Log debug and above to console
+logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
+
 class TestVCS(unittest.TestCase):
 
     def test_git_clone(self):
-        vcs.git_clone('https://github.com/audreyr/cookiecutter-pypackage.git')
+        repo_dir = vcs.git_clone('https://github.com/audreyr/cookiecutter-pypackage.git')
+        self.assertEqual(repo_dir, 'cookiecutter-pypackage')
         self.assertTrue(os.path.isfile('cookiecutter-pypackage/README.rst'))
         if os.path.isdir('cookiecutter-pypackage'):
             shutil.rmtree('cookiecutter-pypackage')
