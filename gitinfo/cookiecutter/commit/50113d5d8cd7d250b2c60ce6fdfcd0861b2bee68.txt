commit 50113d5d8cd7d250b2c60ce6fdfcd0861b2bee68
Author: raphigaziano <r.gaziano@gmail.com>
Date:   Sat Aug 24 17:54:36 2013 +0200

    docstrings

diff --git a/cookiecutter/hooks.py b/cookiecutter/hooks.py
index 69af158..4d6a1a3 100644
--- a/cookiecutter/hooks.py
+++ b/cookiecutter/hooks.py
@@ -11,14 +11,20 @@ Functions for discovering and executing various cookiecutter hooks.
 import os
 import subprocess
 
-_HOOKS = {
+_HOOKS = [
     'pre_gen_project': None,
     'post_gen_project': None,
     # TODO: other hooks should be listed here
-}
+]
 
 def find_hooks(template_root):
-    ''' '''
+    '''
+    Return a dict of all hook scripts provided with the template located at
+    `template_root`.
+    Dict's key will be the hook/script's name, without extension, while
+    values will be the absolute path to the script.
+    Missing scripts will not be included in the returned dict.
+    '''
     hooks_dir = os.path.join(template_root, 'hooks')
     r = {}
     if not os.path.isdir(hooks_dir):
@@ -31,12 +37,19 @@ def find_hooks(template_root):
 
 
 def _run_hook(script_path, cwd='.'):
-    ''' '''
+    '''
+    Run a sigle external script located at `script_path` (path should be 
+    absolute).
+    If `cwd` is provided, the script will be run from that directory.
+    '''
     subprocess.call(script_path, cwd=cwd)
 
 
 def run_hook(hook_name, input_dir, output_dir):
-    ''' '''
+    '''
+    Try and find a script mapped to `hook_name` in `input_dir`,
+    and execute it with `output_dir` as its working directory.
+    '''
     script = find_hooks(input_dir).get(hook_name)
     if script is None: 
         return
