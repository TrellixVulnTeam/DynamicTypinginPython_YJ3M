commit 765c4d1db199cfa469babf873788fbd2ff3db1be
Author: Audrey Roy <audreyr@gmail.com>
Date:   Sat Sep 7 13:13:09 2013 +0200

    Refer to cookiecutter.json as context_file instead of config_file.

diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index a22ee6e..79cfd41 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -32,7 +32,7 @@ else:
     from collections import OrderedDict
 
 
-def generate_context(config_file='cookiecutter.json'):
+def generate_context(context_file='cookiecutter.json'):
     """
     Generates the context for a Cookiecutter project template.
     Loads the JSON file as a Python object, with key being the JSON filename.
@@ -43,11 +43,11 @@ def generate_context(config_file='cookiecutter.json'):
 
     context = {}
 
-    file_handle = open(config_file)
+    file_handle = open(context_file)
     obj = json.load(file_handle, encoding='utf-8', object_pairs_hook=OrderedDict)
 
     # Add the Python object to the context dictionary
-    file_name = os.path.split(config_file)[1]
+    file_name = os.path.split(context_file)[1]
     file_stem = file_name.split('.')[0]
     context[file_stem] = obj
 
diff --git a/cookiecutter/main.py b/cookiecutter/main.py
index 27a30d2..5ebe329 100755
--- a/cookiecutter/main.py
+++ b/cookiecutter/main.py
@@ -46,7 +46,7 @@ def cookiecutter(input_dir, checkout=None, no_input=False):
     logging.debug('context_file is {0}'.format(context_file))
 
     context = generate_context(
-        config_file=context_file
+        context_file=context_file
     )
 
     # prompt the user to manually configure at the command line.
diff --git a/tests/test_generate.py b/tests/test_generate.py
index 3b0748c..f660510 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -156,7 +156,7 @@ class TestGenerateFiles(unittest.TestCase):
 class TestGenerateContext(unittest.TestCase):
 
     def test_generate_context(self):
-        context = generate.generate_context(config_file='tests/json/test.json')
+        context = generate.generate_context(context_file='tests/json/test.json')
         self.assertEqual(context, {"test": {"1": 2}})
 
 
@@ -164,7 +164,7 @@ class TestOutputFolder(unittest.TestCase):
 
     def test_output_folder(self):
         context = generate.generate_context(
-            config_file='tests/test-output-folder/cookiecutter.json'
+            context_file='tests/test-output-folder/cookiecutter.json'
         )
         logging.debug('Context is {0}'.format(context))
         generate.generate_files(
