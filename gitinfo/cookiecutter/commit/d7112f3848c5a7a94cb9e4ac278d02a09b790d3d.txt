commit d7112f3848c5a7a94cb9e4ac278d02a09b790d3d
Author: michaeljoseph <michaeljoseph+github@gmail.com>
Date:   Thu Jul 14 21:05:06 2016 +0200

    Move vcs failure logic out of the exception class

diff --git a/cookiecutter/exceptions.py b/cookiecutter/exceptions.py
index 6545b87..63fa5df 100644
--- a/cookiecutter/exceptions.py
+++ b/cookiecutter/exceptions.py
@@ -117,22 +117,3 @@ class RepositoryNotFound(CookiecutterException):
 
 class RepositoryCloneFailed(CookiecutterException):
     """Raised when a cookiecutter template can't be cloned."""
-
-    BRANCH_ERRORS = [
-        'error: pathspec',
-        'unknown revision',
-    ]
-
-    def __init__(self, exception, repo_url, checkout):
-        if 'not found' in exception.output.lower():
-            raise RepositoryNotFound(
-                'The repository {} could not be found, '
-                'have you made a typo?'.format(repo_url)
-            )
-        elif any(error in exception.output for error in self.BRANCH_ERRORS):
-            super(RepositoryCloneFailed, self).__init__(
-                'The {} branch of repository {} could not found, '
-                'have you made a typo?'.format(checkout, repo_url)
-            )
-        else:
-            raise exception
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index 832722f..3a53971 100644
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -15,11 +15,19 @@ import sys
 
 from whichcraft import which
 
-from .exceptions import RepositoryCloneFailed, UnknownRepoType, VCSNotInstalled
+from .exceptions import (
+    RepositoryNotFound, RepositoryCloneFailed, UnknownRepoType, VCSNotInstalled
+)
 from .prompt import read_user_yes_no
 from .utils import make_sure_path_exists, rmtree
 
 
+BRANCH_ERRORS = [
+    'error: pathspec',
+    'unknown revision',
+]
+
+
 def prompt_and_delete_repo(repo_dir, no_input=False):
     """
     Asks the user whether it's okay to delete the previously-cloned repo.
@@ -128,6 +136,16 @@ def clone(repo_url, checkout=None, clone_to_dir='.', no_input=False):
                     stderr=subprocess.STDOUT,
                 )
         except subprocess.CalledProcessError as e:
-            raise RepositoryCloneFailed(e, repo_url, checkout)
+            if 'not found' in e.output.lower():
+                raise RepositoryNotFound(
+                    'The repository {} could not be found, '
+                    'have you made a typo?'.format(repo_url)
+                )
+            if any(error in e.output for error in BRANCH_ERRORS):
+                raise RepositoryCloneFailed(
+                    'The {} branch of repository {} could not found, '
+                    'have you made a typo?'.format(checkout, repo_url)
+                )
+            raise
 
     return repo_dir
