commit 6ae1ca28a76bd1d557906a07e55353992edaa2f0
Author: Thomas Orozco <thomas@orozco.fr>
Date:   Fri Aug 30 10:33:10 2013 +0200

    Rename and add tests utils.chdir -> utils.work_in

diff --git a/cookiecutter/__init__.py b/cookiecutter/__init__.py
index 8e23d59..516585d 100755
--- a/cookiecutter/__init__.py
+++ b/cookiecutter/__init__.py
@@ -8,4 +8,4 @@ cookiecutter
 Main package for Cookiecutter.
 """
 
-__version__ = '0.6.5'
+__version__ = '0.6.6'
diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index 4cc1d43..fb45102 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -18,7 +18,7 @@ from jinja2.environment import Environment
 from binaryornot.check import is_binary
 
 from .exceptions import NonTemplatedInputDirException
-from .utils import make_sure_path_exists, unicode_open, chdir
+from .utils import make_sure_path_exists, unicode_open, work_in
 
 
 if sys.version_info[:2] < (2, 7):
@@ -128,7 +128,7 @@ def generate_files(template_dir, context=None):
     logging.debug("project_dir is {0}".format(project_dir))
     make_sure_path_exists(project_dir)
 
-    with chdir(template_dir):
+    with work_in(template_dir):
         env = Environment()
         env.loader = FileSystemLoader(".")
 
diff --git a/cookiecutter/utils.py b/cookiecutter/utils.py
index 7c00d07..6eb2950 100755
--- a/cookiecutter/utils.py
+++ b/cookiecutter/utils.py
@@ -46,7 +46,7 @@ def unicode_open(filename, *args, **kwargs):
 
 
 @contextlib.contextmanager
-def chdir(dirname=None):
+def work_in(dirname=None):
   curdir = os.getcwd()
   try:
     if dirname is not None:
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 2c975f9..2654862 100755
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -8,6 +8,7 @@ test_utils
 Tests for `cookiecutter.utils` module.
 """
 
+import os
 import shutil
 import unittest
 
@@ -39,5 +40,24 @@ Musical Notes: ♬ ♫ ♯"""
             opened_text = f.read()
             self.assertEqual(unicode_text, opened_text)
 
+    def test_workin(self):
+        cwd = os.getcwd()
+        ch_to = 'tests/files'
+
+        class TestException(Exception):
+            pass
+        
+        def test_work_in():
+            with utils.work_in(ch_to):
+                self.assertEqual(os.path.join(cwd, ch_to), os.getcwd())
+                raise TestException()
+
+        # Make sure we return to the correct folder
+        self.assertEqual(cwd, os.getcwd())
+
+        # Make sure that exceptions are still bubled up
+        self.assertRaises(TestException, test_work_in)
+
+
 if __name__ == '__main__':
     unittest.main()
