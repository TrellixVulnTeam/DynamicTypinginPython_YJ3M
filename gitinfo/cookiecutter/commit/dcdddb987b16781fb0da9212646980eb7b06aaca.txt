commit dcdddb987b16781fb0da9212646980eb7b06aaca
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Sat Nov 15 00:23:55 2014 +0100

    Convert test_run_shell_hooks and move helper make_test_repo

diff --git a/tests/test_generate.py b/tests/test_generate.py
index 941d97d..bf1f24d 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -72,73 +72,5 @@ class TestGenerateFile(unittest.TestCase):
             os.remove('tests/files/cheese.txt')
 
 
-def make_test_repo(name):
-    hooks = os.path.join(name, 'hooks')
-    template = os.path.join(name, 'input{{cookiecutter.shellhooks}}')
-    os.mkdir(name)
-    os.mkdir(hooks)
-    os.mkdir(template)
-
-    with open(os.path.join(template, 'README.rst'), 'w') as f:
-        f.write("foo\n===\n\nbar\n")
-
-    if sys.platform.startswith('win'):
-        filename = os.path.join(hooks, 'pre_gen_project.bat')
-        with open(filename, 'w') as f:
-            f.write("@echo off\n")
-            f.write("\n")
-            f.write("echo pre generation hook\n")
-            f.write("echo. >shell_pre.txt\n")
-
-        filename = os.path.join(hooks, 'post_gen_project.bat')
-        with open(filename, 'w') as f:
-            f.write("@echo off\n")
-            f.write("\n")
-            f.write("echo post generation hook\n")
-            f.write("echo. >shell_post.txt\n")
-    else:
-        filename = os.path.join(hooks, 'pre_gen_project.sh')
-        with open(filename, 'w') as f:
-            f.write("#!/bin/bash\n")
-            f.write("\n")
-            f.write("echo 'pre generation hook';\n")
-            f.write("touch 'shell_pre.txt'\n")
-        # Set the execute bit
-        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
-
-        filename = os.path.join(hooks, 'post_gen_project.sh')
-        with open(filename, 'w') as f:
-            f.write("#!/bin/bash\n")
-            f.write("\n")
-            f.write("echo 'post generation hook';\n")
-            f.write("touch 'shell_post.txt'\n")
-        # Set the execute bit
-        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
-
-
-class TestHooks(CookiecutterCleanSystemTestCase):
-
-    def tearDown(self):
-        if os.path.exists('tests/test-pyhooks/inputpyhooks'):
-            utils.rmtree('tests/test-pyhooks/inputpyhooks')
-        if os.path.exists('inputpyhooks'):
-            utils.rmtree('inputpyhooks')
-        if os.path.exists('tests/test-shellhooks'):
-            utils.rmtree('tests/test-shellhooks')
-        super(TestHooks, self).tearDown()
-
-    def test_run_shell_hooks(self):
-        make_test_repo('tests/test-shellhooks')
-        generate.generate_files(
-            context={
-                'cookiecutter': {'shellhooks': 'shellhooks'}
-            },
-            repo_dir='tests/test-shellhooks/',
-            output_dir='tests/test-shellhooks/'
-        )
-        self.assertTrue(os.path.exists('tests/test-shellhooks/inputshellhooks/shell_pre.txt'))
-        self.assertTrue(os.path.exists('tests/test-shellhooks/inputshellhooks/shell_post.txt'))
-
-
 if __name__ == '__main__':
     unittest.main()
diff --git a/tests/test_generate_hooks.py b/tests/test_generate_hooks.py
index c54160d..7586c78 100644
--- a/tests/test_generate_hooks.py
+++ b/tests/test_generate_hooks.py
@@ -9,10 +9,13 @@ Tests formerly known from a unittest residing in test_generate.py named
 TestHooks.test_ignore_hooks_dirs
 TestHooks.test_run_python_hooks
 TestHooks.test_run_python_hooks_cwd
+TestHooks.test_run_shell_hooks
 """
 
 from __future__ import unicode_literals
 import os
+import sys
+import stat
 import pytest
 
 from cookiecutter import generate
@@ -69,3 +72,63 @@ def test_run_python_hooks_cwd():
     )
     assert os.path.exists('inputpyhooks/python_pre.txt')
     assert os.path.exists('inputpyhooks/python_post.txt')
+
+
+def make_test_repo(name):
+    hooks = os.path.join(name, 'hooks')
+    template = os.path.join(name, 'input{{cookiecutter.shellhooks}}')
+    os.mkdir(name)
+    os.mkdir(hooks)
+    os.mkdir(template)
+
+    with open(os.path.join(template, 'README.rst'), 'w') as f:
+        f.write("foo\n===\n\nbar\n")
+
+    if sys.platform.startswith('win'):
+        filename = os.path.join(hooks, 'pre_gen_project.bat')
+        with open(filename, 'w') as f:
+            f.write("@echo off\n")
+            f.write("\n")
+            f.write("echo pre generation hook\n")
+            f.write("echo. >shell_pre.txt\n")
+
+        filename = os.path.join(hooks, 'post_gen_project.bat')
+        with open(filename, 'w') as f:
+            f.write("@echo off\n")
+            f.write("\n")
+            f.write("echo post generation hook\n")
+            f.write("echo. >shell_post.txt\n")
+    else:
+        filename = os.path.join(hooks, 'pre_gen_project.sh')
+        with open(filename, 'w') as f:
+            f.write("#!/bin/bash\n")
+            f.write("\n")
+            f.write("echo 'pre generation hook';\n")
+            f.write("touch 'shell_pre.txt'\n")
+        # Set the execute bit
+        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
+
+        filename = os.path.join(hooks, 'post_gen_project.sh')
+        with open(filename, 'w') as f:
+            f.write("#!/bin/bash\n")
+            f.write("\n")
+            f.write("echo 'post generation hook';\n")
+            f.write("touch 'shell_post.txt'\n")
+        # Set the execute bit
+        os.chmod(filename, os.stat(filename).st_mode | stat.S_IXUSR)
+
+
+@pytest.mark.usefixtures('clean_system', 'remove_additional_folders')
+def test_run_shell_hooks():
+    make_test_repo('tests/test-shellhooks')
+    generate.generate_files(
+        context={
+            'cookiecutter': {'shellhooks': 'shellhooks'}
+        },
+        repo_dir='tests/test-shellhooks/',
+        output_dir='tests/test-shellhooks/'
+    )
+    shell_pre_file = 'tests/test-shellhooks/inputshellhooks/shell_pre.txt'
+    shell_post_file = 'tests/test-shellhooks/inputshellhooks/shell_post.txt'
+    assert os.path.exists(shell_pre_file)
+    assert os.path.exists(shell_post_file)
