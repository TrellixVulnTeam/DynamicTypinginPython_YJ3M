commit 67a31da74b296af2d732490cf29bcd2715d8018b
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Sat Oct 18 17:33:36 2014 +0200

    Add hook related util functions

diff --git a/cookiecutter/utils.py b/cookiecutter/utils.py
index df75922..01751e9 100755
--- a/cookiecutter/utils.py
+++ b/cookiecutter/utils.py
@@ -9,13 +9,13 @@ Helper functions used throughout Cookiecutter.
 """
 
 from __future__ import unicode_literals
+import contextlib
 import errno
 import logging
 import os
-import sys
 import stat
 import shutil
-import contextlib
+import tempfile
 
 
 def force_delete(func, path, exc_info):
@@ -68,3 +68,25 @@ def work_in(dirname=None):
         yield
     finally:
         os.chdir(curdir)
+
+
+def write_to_temp_file(contents):
+    """
+    Write context to a temporary file
+
+    :param contents: temporary file contents
+    :returns: path to temporary file
+    """
+    with tempfile.NamedTemporaryFile(delete=False, mode='w') as temp:
+        temp.write(contents)
+        return temp.name
+
+
+def make_executable(script_path):
+    """
+    Makes `script_path` executable
+
+    :param script_path: The file to change
+    """
+    status = os.stat(script_path)
+    os.chmod(script_path, status.st_mode | stat.S_IEXEC)
diff --git a/tests/test_utils.py b/tests/test_utils.py
index aa68705..abc6aa8 100755
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -16,12 +16,23 @@ import unittest
 
 from cookiecutter import utils
 
+
 def make_readonly(path):
     mode = os.stat(path).st_mode
     os.chmod(path, mode & ~stat.S_IWRITE)
 
+
 class TestUtils(unittest.TestCase):
 
+    def test_write_to_temp_file(self):
+        script_path = utils.write_to_temp_file('foo')
+        self.assertEqual(open(script_path).read(), 'foo')
+
+    def test_make_executable(self):
+        script_path = utils.write_to_temp_file('bar')
+        utils.make_executable(script_path)
+        self.assertTrue(stat.S_IEXEC & os.stat(script_path)[stat.ST_MODE])
+
     def test_rmtree(self):
         os.mkdir('foo')
         with open('foo/bar', "w") as f:
