commit eb97892edffa78e414bf25fcd4c49b1d6ff37dac
Author: Paul Moore <p.f.moore@gmail.com>
Date:   Tue Jul 22 21:19:52 2014 +0100

    Make rmtree remove readonly files

diff --git a/cookiecutter/utils.py b/cookiecutter/utils.py
index a7405f8..a1a4ff8 100755
--- a/cookiecutter/utils.py
+++ b/cookiecutter/utils.py
@@ -13,6 +13,8 @@ import errno
 import logging
 import os
 import sys
+import stat
+import shutil
 import contextlib
 
 
@@ -23,6 +25,27 @@ else:
     import codecs
 
 
+def force_delete(func, path, exc_info):
+    """
+    Error handler for `shutil.rmtree()` equivalent to `rm -rf`
+    Usage: `shutil.rmtree(path, onerror=force_delete)`
+    From stackoverflow.com/questions/1889597
+    """
+
+    os.chmod(path, stat.S_IWRITE)
+    func(path)
+
+
+def rmtree(path):
+    """
+    Removes a directory and all its contents. Like rm -rf on Unix.
+
+    :param path: A directory path.
+    """
+
+    shutil.rmtree(path, onerror=force_delete)
+
+
 def make_sure_path_exists(path):
     """
     Ensures that a directory exists.
diff --git a/cookiecutter/vcs.py b/cookiecutter/vcs.py
index e70ea30..be2013a 100755
--- a/cookiecutter/vcs.py
+++ b/cookiecutter/vcs.py
@@ -11,13 +11,12 @@ Helper functions for working with version control systems.
 from __future__ import unicode_literals
 import logging
 import os
-import shutil
 import subprocess
 import sys
 
 from .exceptions import UnknownRepoType
 from .prompt import query_yes_no
-from .utils import make_sure_path_exists
+from .utils import make_sure_path_exists, rmtree
 
 
 def prompt_and_delete_repo(repo_dir):
@@ -33,7 +32,7 @@ def prompt_and_delete_repo(repo_dir):
         default="yes"
     )
     if ok_to_delete:
-        shutil.rmtree(repo_dir)
+        rmtree(repo_dir)
     else:
         sys.exit()
 
diff --git a/tests/__init__.py b/tests/__init__.py
index 5af2dc4..151e6c3 100755
--- a/tests/__init__.py
+++ b/tests/__init__.py
@@ -12,27 +12,14 @@ import os
 import shutil
 import stat
 import sys
+from cookiecutter import utils
+
 if sys.version_info[:2] < (2, 7):
     import unittest2 as unittest
 else:
     import unittest
 
 
-def force_delete(func, path, exc_info):
-    """
-    Error handler for `shutil.rmtree()` equivalent to `rm -rf`
-    Usage: `shutil.rmtree(path, onerror=force_delete)`
-    From stackoverflow.com/questions/2656322
-    """
-
-    if not os.access(path, os.W_OK):
-        # Is the error an access error?
-        os.chmod(path, stat.S_IWUSR)
-        func(path)
-    else:
-        raise
-
-
 class CookiecutterCleanSystemTestCase(unittest.TestCase):
     """
     Test case that simulates a clean system with no config/cloned cookiecutters.
@@ -75,7 +62,7 @@ class CookiecutterCleanSystemTestCase(unittest.TestCase):
 
             # Remove existing backups before backing up. If they exist, they're stale.
             if os.path.isdir(self.cookiecutters_dir_backup):
-                shutil.rmtree(self.cookiecutters_dir_backup)
+                utils.rmtree(self.cookiecutters_dir_backup)
 
             shutil.copytree(self.cookiecutters_dir, self.cookiecutters_dir_backup)
         else:
@@ -93,15 +80,15 @@ class CookiecutterCleanSystemTestCase(unittest.TestCase):
         if self.cookiecutters_dir_found:        
             # Delete the created ~/.cookiecutters dir as long as a backup exists
             if os.path.isdir(self.cookiecutters_dir) and os.path.isdir(self.cookiecutters_dir_backup):
-                shutil.rmtree(self.cookiecutters_dir)
+                utils.rmtree(self.cookiecutters_dir)
         else:
             # Delete the created ~/.cookiecutters dir.
             # There's no backup because it never existed
             if os.path.isdir(self.cookiecutters_dir):
-                shutil.rmtree(self.cookiecutters_dir)
+                utils.rmtree(self.cookiecutters_dir)
         
         # Restore the user's default cookiecutters_dir contents
         if os.path.isdir(self.cookiecutters_dir_backup):
             shutil.copytree(self.cookiecutters_dir_backup, self.cookiecutters_dir)
         if os.path.isdir(self.cookiecutters_dir):
-            shutil.rmtree(self.cookiecutters_dir_backup)
+            utils.rmtree(self.cookiecutters_dir_backup)
diff --git a/tests/test_examples.py b/tests/test_examples.py
index 2ac4e00..5f5c5c5 100755
--- a/tests/test_examples.py
+++ b/tests/test_examples.py
@@ -43,7 +43,7 @@ except KeyError:
     no_network = False
 
 from cookiecutter import config, utils
-from tests import force_delete, CookiecutterCleanSystemTestCase
+from tests import CookiecutterCleanSystemTestCase
 
 
 logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
@@ -56,9 +56,9 @@ class TestPyPackage(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage', onerror=force_delete)
+            utils.rmtree('cookiecutter-pypackage')
         if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate', onerror=force_delete)
+            utils.rmtree('boilerplate')
         super(TestPyPackage, self).tearDown()
 
     def test_cookiecutter_pypackage(self):
@@ -91,9 +91,9 @@ class TestJQuery(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.isdir('cookiecutter-jquery'):
-            shutil.rmtree('cookiecutter-jquery', onerror=force_delete)
+            utils.rmtree('cookiecutter-jquery')
         if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate', onerror=force_delete)
+            utils.rmtree('boilerplate')
         super(TestJQuery, self).tearDown()
 
     def test_cookiecutter_jquery(self):
@@ -126,9 +126,9 @@ class TestExamplesRepoArg(CookiecutterCleanSystemTestCase):
     def tearDown(self):
         with utils.work_in(config.DEFAULT_CONFIG['cookiecutters_dir']):
             if os.path.isdir('cookiecutter-pypackage'):
-                shutil.rmtree('cookiecutter-pypackage', onerror=force_delete)
+                utils.rmtree('cookiecutter-pypackage')
         if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate', onerror=force_delete)
+            utils.rmtree('boilerplate')
         super(TestExamplesRepoArg, self).tearDown()
 
     def test_cookiecutter_pypackage_git(self):
@@ -152,9 +152,9 @@ class TestGitBranch(CookiecutterCleanSystemTestCase):
     def tearDown(self):
         with utils.work_in(config.DEFAULT_CONFIG['cookiecutters_dir']):
             if os.path.isdir('cookiecutter-pypackage'):
-                shutil.rmtree('cookiecutter-pypackage', onerror=force_delete)
+                utils.rmtree('cookiecutter-pypackage')
         if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate', onerror=force_delete)
+            utils.rmtree('boilerplate')
         super(TestGitBranch, self).tearDown()
 
     def test_branch(self):
diff --git a/tests/test_generate.py b/tests/test_generate.py
index 4b9109c..0903385 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -10,7 +10,6 @@ Tests for `cookiecutter.generate` module.
 from __future__ import unicode_literals
 import logging
 import os
-import shutil
 import sys
 import unittest
 
@@ -20,6 +19,7 @@ from jinja2.exceptions import TemplateSyntaxError
 
 from cookiecutter import generate
 from cookiecutter import exceptions
+from cookiecutter import utils
 from tests import CookiecutterCleanSystemTestCase
 
 
@@ -76,15 +76,15 @@ class TestGenerateFiles(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.exists('inputpizzä'):
-            shutil.rmtree('inputpizzä')
+            utils.rmtree('inputpizzä')
         if os.path.exists('inputgreen'):
-            shutil.rmtree('inputgreen')
+            utils.rmtree('inputgreen')
         if os.path.exists('inputbinary_files'):
-            shutil.rmtree('inputbinary_files')
+            utils.rmtree('inputbinary_files')
         if os.path.exists('tests/custom_output_dir'):
-            shutil.rmtree('tests/custom_output_dir')
+            utils.rmtree('tests/custom_output_dir')
         if os.path.exists('inputpermissions'):
-            shutil.rmtree('inputpermissions')
+            utils.rmtree('inputpermissions')
         super(TestGenerateFiles, self).tearDown()
 
     def test_generate_files_nontemplated_exception(self):
@@ -209,7 +209,7 @@ class TestOutputFolder(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.exists('output_folder'):
-            shutil.rmtree('output_folder')
+            utils.rmtree('output_folder')
         super(TestOutputFolder, self).tearDown()
 
     def test_output_folder(self):
@@ -240,11 +240,11 @@ class TestHooks(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.exists('tests/test-pyhooks/inputpyhooks'):
-            shutil.rmtree('tests/test-pyhooks/inputpyhooks')
+            utils.rmtree('tests/test-pyhooks/inputpyhooks')
         if os.path.exists('inputpyhooks'):
-            shutil.rmtree('inputpyhooks')
+            utils.rmtree('inputpyhooks')
         if os.path.exists('tests/test-shellhooks/inputshellhooks'):
-            shutil.rmtree('tests/test-shellhooks/inputshellhooks')
+            utils.rmtree('tests/test-shellhooks/inputshellhooks')
         super(TestHooks, self).tearDown()
 
     def test_ignore_hooks_dirs(self):
diff --git a/tests/test_main.py b/tests/test_main.py
index b46837b..ff815a7 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -10,10 +10,9 @@ Tests for `cookiecutter.main` module.
 
 import logging
 import os
-import shutil
 import sys
 
-from cookiecutter import config, main
+from cookiecutter import config, main, utils
 from tests import CookiecutterCleanSystemTestCase
 
 if sys.version_info[:2] < (2, 7):
@@ -61,7 +60,7 @@ class TestCookiecutterLocalNoInput(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.isdir('fake-project'):
-            shutil.rmtree('fake-project')
+            utils.rmtree('fake-project')
 
 
 class TestCookiecutterLocalWithInput(CookiecutterCleanSystemTestCase):
@@ -80,7 +79,7 @@ class TestCookiecutterLocalWithInput(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.isdir('fake-project'):
-            shutil.rmtree('fake-project')
+            utils.rmtree('fake-project')
 
 
 class TestArgParsing(unittest.TestCase):
@@ -101,13 +100,13 @@ class TestCookiecutterRepoArg(CookiecutterCleanSystemTestCase):
 
     def tearDown(self):
         if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
+            utils.rmtree('cookiecutter-pypackage')
         if os.path.isdir('boilerplate'):
-            shutil.rmtree('boilerplate')
+            utils.rmtree('boilerplate')
         if os.path.isdir('cookiecutter-trytonmodule'):
-            shutil.rmtree('cookiecutter-trytonmodule')
+            utils.rmtree('cookiecutter-trytonmodule')
         if os.path.isdir('module_name'):
-            shutil.rmtree('module_name')
+            utils.rmtree('module_name')
         super(TestCookiecutterRepoArg, self).tearDown()
 
     # HACK: The *args is because:
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 4db1242..9fe0f7b 100755
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -9,15 +9,26 @@ Tests for `cookiecutter.utils` module.
 """
 
 import os
-import shutil
 import sys
+import stat
 import unittest
 
 from cookiecutter import utils
 
+def make_readonly(path):
+    mode = os.stat(path).st_mode
+    os.chmod(path, mode & ~stat.S_IWRITE)
 
 class TestUtils(unittest.TestCase):
 
+    def test_rmtree(self):
+        os.mkdir('foo')
+        with open('foo/bar', "w") as f:
+            f.write("Test data")
+        make_readonly('foo/bar')
+        utils.rmtree('foo')
+        self.assertFalse(os.path.exists('foo'))
+
     def test_make_sure_path_exists(self):
         self.assertTrue(utils.make_sure_path_exists('/usr/'))
         self.assertTrue(utils.make_sure_path_exists('tests/blah'))
@@ -27,8 +38,8 @@ class TestUtils(unittest.TestCase):
                 '/this-dir-does-not-exist-and-cant-be-created/'.replace("/", os.sep)
             )
         )
-        shutil.rmtree('tests/blah/')
-        shutil.rmtree('tests/trailingslash/')
+        utils.rmtree('tests/blah/')
+        utils.rmtree('tests/trailingslash/')
 
     def test_unicode_open(self):
         """ Test unicode_open(filename, *args, **kwargs). """
diff --git a/tests/test_vcs.py b/tests/test_vcs.py
index f00c2b4..780905e 100755
--- a/tests/test_vcs.py
+++ b/tests/test_vcs.py
@@ -11,7 +11,6 @@ Tests for `cookiecutter.vcs` module.
 import locale
 import logging
 import os
-import shutil
 import subprocess
 import sys
 import unittest
@@ -73,7 +72,7 @@ class TestVCS(unittest.TestCase):
         self.assertEqual(repo_dir, 'cookiecutter-pypackage')
         self.assertTrue(os.path.isfile('cookiecutter-pypackage/README.rst'))
         if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
+            utils.rmtree('cookiecutter-pypackage')
 
     def test_git_clone_checkout(self):
         repo_dir = vcs.clone(
@@ -94,7 +93,7 @@ class TestVCS(unittest.TestCase):
         self.assertEqual('console-script', branch)
 
         if os.path.isdir(git_dir):
-            shutil.rmtree(git_dir)
+            utils.rmtree(git_dir)
 
     def test_git_clone_custom_dir(self):
         os.makedirs("tests/custom_dir1/custom_dir2/")
@@ -108,9 +107,9 @@ class TestVCS(unittest.TestCase):
             self.assertEqual(repo_dir, test_dir)
             self.assertTrue(os.path.isfile('cookiecutter-pypackage/README.rst'))
             if os.path.isdir('cookiecutter-pypackage'):
-                shutil.rmtree('cookiecutter-pypackage')
+                utils.rmtree('cookiecutter-pypackage')
         if os.path.isdir('tests/custom_dir1'):
-            shutil.rmtree('tests/custom_dir1')
+            utils.rmtree('tests/custom_dir1')
 
     def test_hg_clone(self):
         repo_dir = vcs.clone(
@@ -119,7 +118,7 @@ class TestVCS(unittest.TestCase):
         self.assertEqual(repo_dir, 'cookiecutter-trytonmodule')
         self.assertTrue(os.path.isfile('cookiecutter-trytonmodule/README.rst'))
         if os.path.isdir('cookiecutter-trytonmodule'):
-            shutil.rmtree('cookiecutter-trytonmodule')
+            utils.rmtree('cookiecutter-trytonmodule')
 
 
 @unittest.skipIf(condition=no_network, reason='Needs a network connection to GitHub/Bitbucket.')
@@ -127,10 +126,10 @@ class TestVCSPrompt(unittest.TestCase):
 
     def setUp(self):
         if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
+            utils.rmtree('cookiecutter-pypackage')
         os.mkdir('cookiecutter-pypackage/')
         if os.path.isdir('cookiecutter-trytonmodule'):
-            shutil.rmtree('cookiecutter-trytonmodule')
+            utils.rmtree('cookiecutter-trytonmodule')
         os.mkdir('cookiecutter-trytonmodule/')
 
     @patch(input_str, lambda: 'y')
@@ -175,9 +174,9 @@ class TestVCSPrompt(unittest.TestCase):
 
     def tearDown(self):
         if os.path.isdir('cookiecutter-pypackage'):
-            shutil.rmtree('cookiecutter-pypackage')
+            utils.rmtree('cookiecutter-pypackage')
         if os.path.isdir('cookiecutter-trytonmodule'):
-            shutil.rmtree('cookiecutter-trytonmodule')
+            utils.rmtree('cookiecutter-trytonmodule')
 
 
 if __name__ == '__main__':
