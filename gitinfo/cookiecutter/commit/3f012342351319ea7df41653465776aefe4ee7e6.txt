commit 3f012342351319ea7df41653465776aefe4ee7e6
Author: Michael Joseph <michaeljoseph+github@gmail.com>
Date:   Tue Aug 5 22:21:23 2014 +0200

    Partial flake8 cleanup for modified files

diff --git a/cookiecutter/compat.py b/cookiecutter/compat.py
index 1161cf1..0ea354a 100644
--- a/cookiecutter/compat.py
+++ b/cookiecutter/compat.py
@@ -29,3 +29,5 @@ else:
         import json
         from collections import OrderedDict
         import unittest
+
+_hush_pyflakes = (patch, StringIO, json, OrderedDict, unittest)
diff --git a/cookiecutter/generate.py b/cookiecutter/generate.py
index d090b07..3b5c778 100755
--- a/cookiecutter/generate.py
+++ b/cookiecutter/generate.py
@@ -12,7 +12,6 @@ import logging
 import os
 import io
 import shutil
-import sys
 
 from jinja2 import FileSystemLoader, Template
 from jinja2.environment import Environment
diff --git a/cookiecutter/utils.py b/cookiecutter/utils.py
index df75922..75b9be5 100755
--- a/cookiecutter/utils.py
+++ b/cookiecutter/utils.py
@@ -12,7 +12,6 @@ from __future__ import unicode_literals
 import errno
 import logging
 import os
-import sys
 import stat
 import shutil
 import contextlib
diff --git a/tests/__init__.py b/tests/__init__.py
index 64dd4d8..a381cc5 100755
--- a/tests/__init__.py
+++ b/tests/__init__.py
@@ -10,8 +10,6 @@ Contains testing helpers.
 
 import os
 import shutil
-import stat
-import sys
 from cookiecutter.compat import unittest
 from cookiecutter import utils
 
@@ -19,12 +17,12 @@ from cookiecutter import utils
 class CookiecutterCleanSystemTestCase(unittest.TestCase):
     """
     Test case that simulates a clean system with no config/cloned cookiecutters.
-    
+
     During setUp:
 
     * Back up the `~/.cookiecutterrc` config file to `~/.cookiecutterrc.backup`
     * Back up the `~/.cookiecutters/` dir to `~/.cookiecutters.backup/`
-    * Starts off a test case with no pre-existing `~/.cookiecutterrc` or 
+    * Starts off a test case with no pre-existing `~/.cookiecutterrc` or
       `~/.cookiecutters/`
 
     During tearDown:
@@ -72,8 +70,8 @@ class CookiecutterCleanSystemTestCase(unittest.TestCase):
             os.remove(self.user_config_path_backup)
 
         # Carefully delete the created ~/.cookiecutters dir only in certain
-        # conditions. 
-        if self.cookiecutters_dir_found:        
+        # conditions.
+        if self.cookiecutters_dir_found:
             # Delete the created ~/.cookiecutters dir as long as a backup exists
             if os.path.isdir(self.cookiecutters_dir) and os.path.isdir(self.cookiecutters_dir_backup):
                 utils.rmtree(self.cookiecutters_dir)
@@ -82,7 +80,7 @@ class CookiecutterCleanSystemTestCase(unittest.TestCase):
             # There's no backup because it never existed
             if os.path.isdir(self.cookiecutters_dir):
                 utils.rmtree(self.cookiecutters_dir)
-        
+
         # Restore the user's default cookiecutters_dir contents
         if os.path.isdir(self.cookiecutters_dir_backup):
             shutil.copytree(self.cookiecutters_dir_backup, self.cookiecutters_dir)
diff --git a/tests/test_config.py b/tests/test_config.py
index 585f5a0..80d8dab 100755
--- a/tests/test_config.py
+++ b/tests/test_config.py
@@ -10,10 +10,6 @@ Tests for `cookiecutter.config` module.
 
 import os
 import shutil
-import sys
-import unittest
-
-import yaml
 
 from cookiecutter.compat import unittest
 from cookiecutter import config
@@ -58,7 +54,7 @@ class TestGetConfigWithDefaults(unittest.TestCase):
 
     def test_get_config_with_defaults(self):
         """ A config file that overrides 1 of 2 defaults """
-        
+
         conf = config.get_config('tests/test-config/valid-partial-config.yaml')
         default_cookiecutters_dir = os.path.expanduser('~/.cookiecutters/')
         expected_conf = {
@@ -91,7 +87,6 @@ class TestGetUserConfig(unittest.TestCase):
             shutil.copy(self.user_config_path_backup, self.user_config_path)
             os.remove(self.user_config_path_backup)
 
-
     def test_get_user_config_valid(self):
         """ Get config from a valid ~/.cookiecutterrc file """
         shutil.copy('tests/test-config/valid-config.yaml', self.user_config_path)
@@ -114,8 +109,6 @@ class TestGetUserConfig(unittest.TestCase):
     def test_get_user_config_nonexistent(self):
         """ Get config from a nonexistent ~/.cookiecutterrc file """
         self.assertEqual(config.get_user_config(), config.DEFAULT_CONFIG)
-        
-
 
 
 if __name__ == '__main__':
diff --git a/tests/test_examples.py b/tests/test_examples.py
index f4df087..b2d9e05 100755
--- a/tests/test_examples.py
+++ b/tests/test_examples.py
@@ -9,14 +9,11 @@ Tests for the Cookiecutter example repos.
 """
 
 from __future__ import unicode_literals
-import errno
 import logging
 import os
-import shutil
 import subprocess
-import sys
 
-from cookiecutter.compat import PY3, StringIO, input_str, patch, unittest
+from cookiecutter.compat import unittest
 from cookiecutter import config, utils
 from tests import CookiecutterCleanSystemTestCase
 
@@ -37,7 +34,6 @@ logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
 @unittest.skipIf(condition=no_network, reason='Needs a network connection to GitHub.')
 class TestPyPackage(CookiecutterCleanSystemTestCase):
 
-
     def tearDown(self):
         if os.path.isdir('cookiecutter-pypackage'):
             utils.rmtree('cookiecutter-pypackage')
@@ -72,7 +68,6 @@ class TestPyPackage(CookiecutterCleanSystemTestCase):
 @unittest.skipIf(condition=no_network, reason='Needs a network connection to GitHub.')
 class TestJQuery(CookiecutterCleanSystemTestCase):
 
-
     def tearDown(self):
         if os.path.isdir('cookiecutter-jquery'):
             utils.rmtree('cookiecutter-jquery')
@@ -124,9 +119,8 @@ class TestExamplesRepoArg(CookiecutterCleanSystemTestCase):
 
         # Just skip all the prompts
         proc.communicate(input=b'\n\n\n\n\n\n\n\n\n\n\n\n')
-        
-        self.assertTrue(os.path.isfile('boilerplate/README.rst'))
 
+        self.assertTrue(os.path.isfile('boilerplate/README.rst'))
 
 
 @unittest.skipIf(condition=travis, reason='Works locally with tox but fails on Travis.')
diff --git a/tests/test_generate.py b/tests/test_generate.py
index ee05524..879b980 100755
--- a/tests/test_generate.py
+++ b/tests/test_generate.py
@@ -24,9 +24,9 @@ from cookiecutter import exceptions
 from cookiecutter import utils
 from tests import CookiecutterCleanSystemTestCase
 
-
 logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
 
+
 class TestGenerateFile(unittest.TestCase):
 
     def test_generate_file(self):
@@ -291,7 +291,7 @@ class TestHooks(CookiecutterCleanSystemTestCase):
     def test_ignore_hooks_dirs(self):
         generate.generate_files(
             context={
-                'cookiecutter' : {'pyhooks': 'pyhooks'}
+                'cookiecutter': {'pyhooks': 'pyhooks'}
             },
             repo_dir='tests/test-pyhooks/',
             output_dir='tests/test-pyhooks/'
@@ -301,7 +301,7 @@ class TestHooks(CookiecutterCleanSystemTestCase):
     def test_run_python_hooks(self):
         generate.generate_files(
             context={
-                'cookiecutter' : {'pyhooks': 'pyhooks'}
+                'cookiecutter': {'pyhooks': 'pyhooks'}
             },
             repo_dir='tests/test-pyhooks/'.replace("/", os.sep),
             output_dir='tests/test-pyhooks/'.replace("/", os.sep)
@@ -312,7 +312,7 @@ class TestHooks(CookiecutterCleanSystemTestCase):
     def test_run_python_hooks_cwd(self):
         generate.generate_files(
             context={
-                'cookiecutter' : {'pyhooks': 'pyhooks'}
+                'cookiecutter': {'pyhooks': 'pyhooks'}
             },
             repo_dir='tests/test-pyhooks/'
         )
@@ -323,7 +323,7 @@ class TestHooks(CookiecutterCleanSystemTestCase):
         make_test_repo('tests/test-shellhooks')
         generate.generate_files(
             context={
-                'cookiecutter' : {'shellhooks': 'shellhooks'}
+                'cookiecutter': {'shellhooks': 'shellhooks'}
             },
             repo_dir='tests/test-shellhooks/',
             output_dir='tests/test-shellhooks/'
diff --git a/tests/test_main.py b/tests/test_main.py
index 0aede44..9088f85 100755
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -13,7 +13,7 @@ import os
 import sys
 
 from cookiecutter.compat import PY3, StringIO, input_str, patch, unittest
-from cookiecutter import config, main, utils
+from cookiecutter import main, utils
 from tests import CookiecutterCleanSystemTestCase
 
 try:
@@ -21,7 +21,6 @@ try:
 except KeyError:
     no_network = False
 
-
 # Log debug and above to console
 logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.DEBUG)
 
@@ -110,8 +109,8 @@ class TestCookiecutterRepoArg(CookiecutterCleanSystemTestCase):
             # HACK: There are only 9 prompts in cookiecutter-pypackage's
             # cookiecutter.json (http://git.io/b-1MVA) but 10 \n chars here.
             # There was an "EOFError: EOF when reading a line" test fail here
-            # out of the blue, which an extra \n fixed. 
-            # Not sure why. There shouldn't be an extra prompt to delete 
+            # out of the blue, which an extra \n fixed.
+            # Not sure why. There shouldn't be an extra prompt to delete
             # the repo, since CookiecutterCleanSystemTestCase ensured that it
             # wasn't present.
             # It's possibly an edge case in CookiecutterCleanSystemTestCase.
diff --git a/tests/test_prompt.py b/tests/test_prompt.py
index 40b2b12..836deed 100755
--- a/tests/test_prompt.py
+++ b/tests/test_prompt.py
@@ -109,13 +109,6 @@ class TestQueryAnswers(unittest.TestCase):
         answer = prompt.query_yes_no("Blah?")
         self.assertFalse(answer)
 
-    @patch(input_str, lambda: 'no')
-    def test_query_n(self):
-        if not PY3:
-            sys.stdin = StringIO('no')
-        answer = prompt.query_yes_no("Blah?")
-        self.assertFalse(answer)
-
 
 class TestQueryDefaults(unittest.TestCase):
 
