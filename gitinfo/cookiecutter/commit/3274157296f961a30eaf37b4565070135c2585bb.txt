commit 3274157296f961a30eaf37b4565070135c2585bb
Author: Raphael Pierzina <raphael@hackebrot.de>
Date:   Sun Jul 31 02:01:33 2016 +0100

    Use new helper rather than basicConfig to set up logging

diff --git a/cookiecutter/cli.py b/cookiecutter/cli.py
index 87edc98..4a45bda 100644
--- a/cookiecutter/cli.py
+++ b/cookiecutter/cli.py
@@ -9,13 +9,13 @@ Main `cookiecutter` CLI.
 
 import os
 import sys
-import logging
 import json
 
 import click
 
 from cookiecutter import __version__
 from cookiecutter.config import USER_CONFIG_PATH
+from cookiecutter.logging import create_logger
 from cookiecutter.main import cookiecutter
 from cookiecutter.exceptions import (
     OutputDirExistsException,
@@ -27,8 +27,6 @@ from cookiecutter.exceptions import (
     RepositoryCloneFailed
 )
 
-logger = logging.getLogger(__name__)
-
 
 def version_msg():
     """Returns the Cookiecutter version, location and Python powering it."""
@@ -89,28 +87,31 @@ def validate_extra_context(ctx, param, value):
     u'--default-config', is_flag=True,
     help=u'Do not load a config file. Use the defaults instead'
 )
-def main(template, extra_context, no_input, checkout, verbose, replay,
-         overwrite_if_exists, output_dir, config_file, default_config):
+@click.option(
+    u'--log-file', type=click.Path(), default=None,
+    help=u'File to be used as a stream for logging',
+)
+def main(
+        template, extra_context, no_input, checkout, verbose,
+        replay, overwrite_if_exists, output_dir, config_file,
+        default_config, log_file):
     """Create a project from a Cookiecutter project template (TEMPLATE)."""
-    if verbose:
-        logging.basicConfig(
-            format=u'%(levelname)s %(filename)s: %(message)s',
-            level=logging.DEBUG
-        )
-    else:
-        # Log info and above to console
-        logging.basicConfig(
-            format=u'%(levelname)s: %(message)s',
-            level=logging.INFO
-        )
 
-    try:
-        # If you _need_ to support a local template in a directory
-        # called 'help', use a qualified path to the directory.
-        if template == u'help':
-            click.echo(click.get_current_context().get_help())
-            sys.exit(0)
+    # If you _need_ to support a local template in a directory
+    # called 'help', use a qualified path to the directory.
+    if template == u'help':
+        click.echo(click.get_current_context().get_help())
+        sys.exit(0)
+
+    template_name = os.path.basename(os.path.abspath(template))
 
+    logger = create_logger(
+        template_name,
+        level='DEBUG' if verbose else 'INFO',
+        log_file=log_file,
+    )
+
+    try:
         user_config = None if default_config else config_file
 
         cookiecutter(
