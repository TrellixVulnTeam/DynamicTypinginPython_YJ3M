commit 44ac6f07693b07959e9b5646245e8295f55f6404
Author: Sorin Sbarnea <ssbarnea@redhat.com>
Date:   Sun Jan 19 13:22:40 2020 +0000

    D202 rule activation
    
    Enables and fixes:
    D202 No blank lines allowed after function docstring

diff --git a/setup.cfg b/setup.cfg
index 99f9c4c..6b22e25 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -11,7 +11,7 @@ tag_name = {new_version}
 [flake8]
 # BLK100 excluded temporary until we enable python black
 # D* added temporary to ease enablement remove them while addressing them
-ignore = E731,BLK100,D100,D101,D102,D103,D200,D202,D400
+ignore = E731,BLK100,D100,D101,D102,D103,D200,D400
 # D400 First line should end with a period
 statistics = 1
 
diff --git a/tests/replay/test_dump.py b/tests/replay/test_dump.py
index 006c4e6..6ccb9e4 100644
--- a/tests/replay/test_dump.py
+++ b/tests/replay/test_dump.py
@@ -72,7 +72,6 @@ def mock_ensure_success(mocker):
 def test_ioerror_if_replay_dir_creation_fails(
         mock_ensure_failure, replay_test_dir):
     """Test that replay.dump raises when the replay_dir cannot be created."""
-
     with pytest.raises(IOError):
         replay.dump(
             replay_test_dir,
diff --git a/tests/repository/test_determine_repo_dir_clones_repo.py b/tests/repository/test_determine_repo_dir_clones_repo.py
index 7bf1e32..e57f482 100644
--- a/tests/repository/test_determine_repo_dir_clones_repo.py
+++ b/tests/repository/test_determine_repo_dir_clones_repo.py
@@ -14,9 +14,7 @@ from cookiecutter import repository, exceptions
 def test_zipfile_unzip(mocker, template, is_url, user_config_data):
     """`unzip()` should be called with correct args when \
     `determine_repo_dir()` is passed a zipfile, or a URL \
-    to a zipfile.
-    """
-
+    to a zipfile."""
     mock_clone = mocker.patch(
         'cookiecutter.repository.unzip',
         return_value='tests/fake-repo-tmpl',
@@ -59,7 +57,6 @@ def test_repository_url_should_clone(
     """`clone()` should be called with correct args when \
     `determine_repo_dir()` is passed a repository template url.
     """
-
     mock_clone = mocker.patch(
         'cookiecutter.repository.clone',
         return_value='tests/fake-repo-tmpl',
diff --git a/tests/test_hooks.py b/tests/test_hooks.py
index 60298ae..7adb157 100644
--- a/tests/test_hooks.py
+++ b/tests/test_hooks.py
@@ -68,7 +68,6 @@ class TestFindHooks(object):
 
     def test_find_hook(self):
         """Finds the specified hook."""
-
         with utils.work_in(self.repo_path):
             expected_pre = os.path.abspath('hooks/pre_gen_project.py')
             actual_hook_path = hooks.find_hook('pre_gen_project')
@@ -80,7 +79,6 @@ class TestFindHooks(object):
 
     def test_no_hooks(self):
         """find_hooks should return None if the hook could not be found."""
-
         with utils.work_in('tests/fake-repo'):
             assert None is hooks.find_hook('pre_gen_project')
 
@@ -136,7 +134,6 @@ class TestExternalHooks(object):
 
     def test_run_script_with_context(self):
         """Execute a hook script, passing a context"""
-
         hook_path = os.path.join(self.hooks_path, 'post_gen_project.sh')
 
         if sys.platform.startswith('win'):
@@ -195,7 +192,6 @@ class TestExternalHooks(object):
 @pytest.yield_fixture
 def dir_with_hooks(tmpdir):
     """Yield a directory that contains hook backup files."""
-
     hooks_dir = tmpdir.mkdir('hooks')
 
     pre_hook_content = textwrap.dedent(
diff --git a/tests/test_log.py b/tests/test_log.py
index b785d28..698a8a7 100644
--- a/tests/test_log.py
+++ b/tests/test_log.py
@@ -116,9 +116,7 @@ def test_debug_stdout_logging(caplog, debug_logger, debug_messages):
 def test_debug_file_logging(
         caplog, info_logger_with_file, debug_file, debug_messages):
     """Test that logging to stdout uses a different format and level than \
-    the the file handler.
-    """
-
+    the the file handler."""
     [file_handler, stream_handler] = info_logger_with_file.handlers
     assert isinstance(file_handler, logging.FileHandler)
     assert isinstance(stream_handler, logging.StreamHandler)
diff --git a/tests/test_read_user_dict.py b/tests/test_read_user_dict.py
index 144f030..51fd912 100644
--- a/tests/test_read_user_dict.py
+++ b/tests/test_read_user_dict.py
@@ -90,7 +90,6 @@ def test_should_call_prompt_with_process_json(mocker):
 
     Verifies generation of a processor for the user input.
     """
-
     mock_prompt = mocker.patch(
         'cookiecutter.prompt.click.prompt',
         autospec=True,
