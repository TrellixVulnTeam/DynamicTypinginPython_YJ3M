commit 0132d3216046b09f62a73f43264602c70e457ac6
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Tue Jul 30 14:51:14 2019 +0000

    Bugfix: Preview Tool - empty tk_var string
    
    - Replace empty tk_vars with 0 for numerical values

diff --git a/lib/config.py b/lib/config.py
index a19cf52..53b1a02 100644
--- a/lib/config.py
+++ b/lib/config.py
@@ -255,6 +255,7 @@ class FaceswapConfig():
         f_cfgfile = open(self.configfile, "w")
         self.config.write(f_cfgfile)
         f_cfgfile.close()
+        logger.debug("Updated config at: '%s'", self.configfile)
 
     def validate_config(self):
         """ Check for options in default config against saved config
diff --git a/tools/preview.py b/tools/preview.py
index 92c9d2e..ef66017 100644
--- a/tools/preview.py
+++ b/tools/preview.py
@@ -543,12 +543,18 @@ class ConfigTools():
         """ Update config with selected values """
         for section, items in self.tk_vars.items():
             for item, value in items.items():
-                new_value = str(value.get())
+                try:
+                    new_value = str(value.get())
+                except tk.TclError as err:
+                    # When manually filling in text fields, blank values will
+                    # raise an error on numeric datatypes so return 0
+                    logger.debug("Error getting value. Defaulting to 0. Error: %s", str(err))
+                    new_value = str(0)
                 old_value = self.config.config[section][item]
                 if new_value != old_value:
                     logger.trace("Updating config: %s, %s from %s to %s",
                                  section, item, old_value, new_value)
-                    self.config.config[section][item] = str(value.get())
+                    self.config.config[section][item] = new_value
 
     def get_config_dicts(self):
         """ Hold a custom config dict for the config """
