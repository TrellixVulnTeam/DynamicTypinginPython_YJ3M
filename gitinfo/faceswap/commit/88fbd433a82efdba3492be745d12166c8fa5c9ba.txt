commit 88fbd433a82efdba3492be745d12166c8fa5c9ba
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Tue Jun 25 23:46:39 2019 +0000

    Fixups
    
        - Training: Replace -ac (augment-color) option with -nac (no-augment-color) option (color augmentation on by default)
        - Analysis: Correctly display currently loaded session
        - Analysis: Cursor events in graph popup

diff --git a/lib/cli.py b/lib/cli.py
index 24779c9..32dc8e9 100644
--- a/lib/cli.py
+++ b/lib/cli.py
@@ -1014,17 +1014,14 @@ class TrainArgs(FaceSwapArgs):
                                       "horizontally. Sometimes it is desirable for this not to "
                                       "occur. Generally this should be left off except for "
                                       "during 'fit training'."})
-        argument_list.append({"opts": ("-ac", "--augment-color"),
+        argument_list.append({"opts": ("-nac", "--no-augment-color"),
                               "action": "store_true",
-                              "dest": "augment_color",
+                              "dest": "no_augment_color",
                               "default": False,
-                              "help": "Perform color augmentation on training images. This has "
-                                      "a 50%% chance of performing Contrast Limited Adaptive "
-                                      "Histogram Equilization on the image. Then it randomly "
-                                      "shifts the color balance +/- 8%% and the lighting +/- 30%% "
-                                      "on each face fed to the model. Should help make the model "
-                                      "less susceptible to color differences between the A and B "
-                                      "set, but may increase training time."})
+                              "help": "Color augmentation helps make the model less susceptible "
+                                      "to color differences between the A and B sets, at an "
+                                      "increased training time cost. Enable this option to "
+                                      "disable color augmentation."})
         argument_list.append({"opts": ("-tia", "--timelapse-input-A"),
                               "action": DirFullPaths,
                               "dest": "timelapse_input_a",
diff --git a/lib/gui/display_analysis.py b/lib/gui/display_analysis.py
index 34ada04..92756fd 100644
--- a/lib/gui/display_analysis.py
+++ b/lib/gui/display_analysis.py
@@ -75,7 +75,7 @@ class Analysis(DisplayPage):  # pylint: disable=too-many-ancestors
             return
         self.session = Session(model_dir=model_dir, model_name=model_name)
         self.session.initialize_session(is_training=False)
-        msg = os.path.split(state_file)[0]
+        msg = fullpath
         if len(msg) > 70:
             msg = "...{}".format(msg[-70:])
         self.set_session_summary(msg)
@@ -460,8 +460,6 @@ class SessionPopUp(tk.Toplevel):
 
         for item in ["Display", "Scale"]:
             var = tk.StringVar()
-            cmd = self.optbtn_reset if item == "Display" else self.graph_scale
-            var.trace("w", cmd)
 
             cmbframe = ttk.Frame(frame)
             cmbframe.pack(fill=tk.X, pady=5, padx=5, side=tk.TOP)
@@ -476,6 +474,8 @@ class SessionPopUp(tk.Toplevel):
             cmb.current(0)
             cmb.pack(fill=tk.X, side=tk.RIGHT)
 
+            cmd = self.optbtn_reset if item == "Display" else self.graph_scale
+            var.trace("w", cmd)
             self.vars[item.lower().strip()] = var
 
             hlp = self.set_help(item)
@@ -572,9 +572,11 @@ class SessionPopUp(tk.Toplevel):
     def optbtn_save(self):
         """ Action for save button press """
         logger.debug("Saving File")
+        self.config(cursor="watch")
         savefile = FileHandler("save", "csv").retfile
         if not savefile:
             logger.debug("Save Cancelled")
+            self.config(cursor="")
             return
         logger.debug("Saving to: %s", savefile)
         save_data = self.display_data.stats
@@ -584,26 +586,34 @@ class SessionPopUp(tk.Toplevel):
             csvout = csv.writer(outfile, delimiter=",")
             csvout.writerow(fieldnames)
             csvout.writerows(zip(*[save_data[key] for key in fieldnames]))
+        self.config(cursor="")
 
     def optbtn_reset(self, *args):  # pylint: disable=unused-argument
         """ Action for reset button press and checkbox changes"""
         logger.debug("Refreshing Graph")
         if not self.graph_initialised:
             return
+        self.config(cursor="watch")
+        self.update_idletasks()
         valid = self.compile_display_data()
         if not valid:
             logger.debug("Invalid data")
+            self.config(cursor="")
             return
         self.graph.refresh(self.display_data,
                            self.vars["display"].get(),
                            self.vars["scale"].get())
+        self.config(cursor="")
         logger.debug("Refreshed Graph")
 
     def graph_scale(self, *args):  # pylint: disable=unused-argument
         """ Action for changing graph scale """
         if not self.graph_initialised:
             return
+        self.config(cursor="watch")
+        self.update_idletasks()
         self.graph.set_yscale_type(self.vars["scale"].get())
+        self.config(cursor="")
 
     @staticmethod
     def set_help(control):
diff --git a/lib/gui/stats.py b/lib/gui/stats.py
index 6985bbe..bcf4f25 100644
--- a/lib/gui/stats.py
+++ b/lib/gui/stats.py
@@ -456,7 +456,7 @@ class Calculations():
             if (mean - limit) <= item <= (mean + limit):
                 retdata.append(item)
             else:
-                logger.debug("Item idx: %s, value: %s flattened to %s", idx, item, mean)
+                logger.trace("Item idx: %s, value: %s flattened to %s", idx, item, mean)
                 retdata.append(mean)
         logger.debug("Flattened outliers")
         return retdata
diff --git a/plugins/train/model/_base.py b/plugins/train/model/_base.py
index c810c51..b3b4ac5 100644
--- a/plugins/train/model/_base.py
+++ b/plugins/train/model/_base.py
@@ -38,7 +38,7 @@ class ModelBase():
                  configfile=None,
                  no_logs=False,
                  warp_to_landmarks=False,
-                 augment_color=False,
+                 augment_color=True,
                  no_flip=False,
                  training_image_size=256,
                  alignments_paths=None,
diff --git a/plugins/train/trainer/_base.py b/plugins/train/trainer/_base.py
index 5a54b86..971a01d 100644
--- a/plugins/train/trainer/_base.py
+++ b/plugins/train/trainer/_base.py
@@ -15,7 +15,7 @@
                             Set to None for not used
         no_logs:            Disable tensorboard logging
         warp_to_landmarks:  Use random_warp_landmarks instead of random_warp
-        augment_color:      Perform random shifting of RGB colors +/- 15%
+        augment_color:      Perform random shifting of LAB colors
         no_flip:            Don't perform a random flip on the image
         pingpong:           Train each side seperately per save iteration rather than together
 """
