commit 787744d34e83d3c780bd6bf3ab96f5fa78c91206
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Fri Jul 6 08:31:31 2018 +0100

    squash sort bug

diff --git a/lib/face_alignment/extractor.py b/lib/face_alignment/extractor.py
index 651eb87..229fc1e 100644
--- a/lib/face_alignment/extractor.py
+++ b/lib/face_alignment/extractor.py
@@ -235,8 +235,8 @@ class Extract(object):
     """ Extracts faces from an image, crops and
         calculates landmarks """
 
-    def __init__(self, input_image_bgr, detector, mtcnn_kwargs,
-                 verbose, input_is_predetected_face=False):
+    def __init__(self, input_image_bgr, detector, mtcnn_kwargs=None,
+                 verbose=False, input_is_predetected_face=False):
         self.initialized = False
         self.verbose = verbose
         self.keras = KERAS_MODEL
diff --git a/tools/sort.py b/tools/sort.py
index 51de8f3..bdfc072 100644
--- a/tools/sort.py
+++ b/tools/sort.py
@@ -186,9 +186,9 @@ class Sort(object):
                       desc="Loading",
                       file=sys.stdout):
             d = face_alignment.Extract(
-                cv2.imread(x),
-                'dlib-cnn',
-                True,
+                input_image_bgr=cv2.imread(x),
+                detector='dlib-cnn',
+                verbose=True,
                 input_is_predetected_face=True).landmarks
             img_list.append([x, np.array(d[0][1])
                              if len(d) > 0
@@ -223,9 +223,9 @@ class Sort(object):
                       desc="Loading",
                       file=sys.stdout):
             d = face_alignment.Extract(
-                cv2.imread(x),
-                'dlib-cnn',
-                True,
+                input_image_bgr=cv2.imread(x),
+                detector='dlib-cnn',
+                verbose=True,
                 input_is_predetected_face=True).landmarks
             img_list.append([x, np.array(d[0][1])
                              if len(d) > 0
@@ -258,9 +258,9 @@ class Sort(object):
                       desc="Loading",
                       file=sys.stdout):
             d = face_alignment.Extract(
-                cv2.imread(x),
-                'dlib-cnn',
-                True,
+                input_image_bgr=cv2.imread(x),
+                detector='dlib-cnn',
+                verbose=True,
                 input_is_predetected_face=True).landmarks
             img_list.append([x,
                              self.calc_landmarks_face_yaw(np.array(d[0][1]))])
@@ -620,9 +620,9 @@ class Sort(object):
                           desc="Reloading",
                           file=sys.stdout):
                 d = face_alignment.Extract(
-                    cv2.imread(x),
-                    'dlib-cnn',
-                    True,
+                    input_image_bgr=cv2.imread(x),
+                    detector='dlib-cnn',
+                    verbose=True,
                     input_is_predetected_face=True).landmarks
                 temp_list.append([x, np.array(d[0][1])
                                   if len(d) > 0
@@ -633,9 +633,9 @@ class Sort(object):
                           desc="Reloading",
                           file=sys.stdout):
                 d = face_alignment.Extract(
-                    cv2.imread(x),
-                    'dlib-cnn',
-                    True,
+                    input_image_bgr=cv2.imread(x),
+                    detector='dlib-cnn',
+                    verbose=True,
                     input_is_predetected_face=True).landmarks
                 temp_list.append(
                     [x, self.calc_landmarks_face_yaw(np.array(d[0][1]))])
