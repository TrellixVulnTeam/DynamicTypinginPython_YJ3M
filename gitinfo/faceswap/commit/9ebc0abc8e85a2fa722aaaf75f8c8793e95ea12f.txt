commit 9ebc0abc8e85a2fa722aaaf75f8c8793e95ea12f
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Mon Dec 16 00:59:00 2019 +0000

    tools.sort - Optimize sort by face

diff --git a/lib/vgg_face2_keras.py b/lib/vgg_face2_keras.py
index c80b1af..8ef6ea7 100644
--- a/lib/vgg_face2_keras.py
+++ b/lib/vgg_face2_keras.py
@@ -159,7 +159,7 @@ class VGGFace2():
         predictions: numpy.ndarray
             A stacked matrix of vgg_face2 predictions of the shape (`N`, `D`) where `N` is the
             number of observations and `D` are the number of dimensions.  NB: The given
-            :attr:`predictions` will be overwritten to save memory. If you still require the 
+            :attr:`predictions` will be overwritten to save memory. If you still require the
             original values you should take a copy prior to running this method
         method: ['single','centroid','median','ward']
             The clustering method to use.
@@ -213,7 +213,7 @@ class VGGFace2():
         np_float = 24  # bytes size of a numpy float
         divider = 1024 * 1024  # bytes to MB
 
-        free_ram = psutil.virtual_memory().free / divider
+        free_ram = psutil.virtual_memory().available / divider
         linkage_required = (((item_count ** 2) * np_float) / 1.8) / divider
         vector_required = ((item_count * dims) * np_float) / divider
         logger.debug("free_ram: %sMB, linkage_required: %sMB, vector_required: %sMB",
diff --git a/tools/sort.py b/tools/sort.py
index a857f96..d8f2e35 100644
--- a/tools/sort.py
+++ b/tools/sort.py
@@ -17,7 +17,7 @@ from tqdm import tqdm
 from lib.cli import FullHelpArgumentParser
 from lib.serializer import get_serializer_from_filename
 from lib.faces_detect import DetectedFace
-from lib.image import read_image
+from lib.image import ImagesLoader, read_image
 from lib.vgg_face2_keras import VGGFace2 as VGGFace
 from plugins.extract.pipeline import Extractor, ExtractMedia
 
@@ -34,6 +34,8 @@ class Sort():
         self.changes = None
         self.serializer = None
         self.vgg_face = None
+        # TODO set this as ImagesLoader in init. Need to move all processes to use it
+        self._loader = None
 
     def process(self):
         """ Main processing function of the sort tool """
@@ -167,15 +169,22 @@ class Sort():
     def sort_face(self):
         """ Sort by identity similarity """
         logger.info("Sorting by identity similarity...")
-        filename_list, image_list = self._get_images()
 
-        logger.info("Calculating face identifiers...")
-        preds = np.array([self.vgg_face.predict(img)
-                          for img in tqdm(image_list, desc="Calculating...", file=sys.stdout)])
+        # TODO This should be set in init
+        self._loader = ImagesLoader(self.args.input_dir)
+
+        filenames = []
+        preds = np.empty((self._loader.count, 512), dtype="float32")
+        for idx, (filename, image) in enumerate(tqdm(self._loader.load(),
+                                                     desc="Classifying Faces...",
+                                                     total=self._loader.count)):
+            filenames.append(filename)
+            preds[idx] = self.vgg_face.predict(image)
 
         logger.info("Sorting by ward linkage...")
+
         indices = self.vgg_face.sorted_similarity(preds, method="ward")
-        img_list = np.array(filename_list)[indices]
+        img_list = np.array(filenames)[indices]
         return img_list
 
     def sort_face_cnn(self):
@@ -736,7 +745,7 @@ class Sort():
 def bad_args(args):  # pylint: disable=unused-argument
     """ Print help on bad arguments """
     PARSER.print_help()
-    exit(0)
+    sys.exit(0)
 
 
 if __name__ == "__main__":
