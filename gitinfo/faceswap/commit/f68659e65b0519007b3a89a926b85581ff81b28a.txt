commit f68659e65b0519007b3a89a926b85581ff81b28a
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Thu Aug 15 17:05:49 2019 +0000

    bugfix: GUI Nonetype error on training completion

diff --git a/lib/gui/display_analysis.py b/lib/gui/display_analysis.py
index ff4c436..faa7a41 100644
--- a/lib/gui/display_analysis.py
+++ b/lib/gui/display_analysis.py
@@ -141,7 +141,12 @@ class Analysis(DisplayPage):  # pylint: disable=too-many-ancestors
             self.after(1000, lambda msg=message: self.set_session_summary(msg))
         else:
             logger.debug("Retrieving data from thread")
-            self.summary = self.thread.get_result()
+            result = self.thread.get_result()
+            if result is None:
+                logger.debug("No result from session summary. Clearing analysis view")
+                self.clear_session()
+                return
+            self.summary = result
             self.thread = None
             self.set_info("Session: {}".format(message))
             self.stats.session = self.session
diff --git a/lib/gui/stats.py b/lib/gui/stats.py
index 0570aff..a3e8a80 100644
--- a/lib/gui/stats.py
+++ b/lib/gui/stats.py
@@ -99,7 +99,7 @@ class TensorBoardLogs():
 class Session():
     """ The Loaded or current training session """
     def __init__(self, model_dir=None, model_name=None):
-        logger.debug("Initializing %s, model_dir: %s, model_name: %s)",
+        logger.debug("Initializing %s: (model_dir: %s, model_name: %s)",
                      self.__class__.__name__, model_dir, model_name)
         self.serializer = JSONSerializer
         self.state = None
@@ -271,6 +271,11 @@ class SessionsSummary():
         """ Return compiled stats """
         compiled = list()
         for sess_idx, ts_data in self.time_stats.items():
+            logger.debug("Compiling session ID: %s", sess_idx)
+            if self.session.state is None:
+                logger.debug("Session state dict doesn't exist. Most likely task has been "
+                             "terminated during compilation")
+                return None
             iterations = self.session.get_iterations_for_session(sess_idx)
             elapsed = ts_data["end_time"] - ts_data["start_time"]
             batchsize = self.session.total_batchsize.get(sess_idx, 0)
@@ -288,6 +293,8 @@ class SessionsSummary():
         """ Compile sessions stats with totals, format and return """
         logger.debug("Compiling sessions summary data")
         compiled_stats = self.sessions_stats
+        if compiled_stats is None:
+            return compiled_stats
         logger.debug("sessions_stats: %s", compiled_stats)
         total_stats = self.total_stats(compiled_stats)
         compiled_stats.append(total_stats)
diff --git a/lib/gui/wrapper.py b/lib/gui/wrapper.py
index ea693c3..0ac662d 100644
--- a/lib/gui/wrapper.py
+++ b/lib/gui/wrapper.py
@@ -188,11 +188,16 @@ class FaceswapControl():
                         (self.command == "effmpeg" and self.capture_ffmpeg(output)) or
                         (self.command not in ("train", "effmpeg") and self.capture_tqdm(output))):
                     continue
-                if self.command == "train" and "[saved models]" in output.strip().lower():
+                if (self.command == "train" and
+                        self.wrapper.tk_vars["istraining"].get() and
+                        "[saved models]" in output.strip().lower()):
                     logger.debug("Trigger GUI Training update")
+                    logger.trace("tk_vars: %s", {itm: var.get()
+                                                 for itm, var in self.wrapper.tk_vars.items()})
                     if not self.config.session.initialized:
                         # Don't initialize session until after the first save as state
                         # file must exist first
+                        logger.debug("Initializing curret training session")
                         self.config.session.initialize_session(is_training=True)
                     self.wrapper.tk_vars["updatepreview"].set(True)
                     self.wrapper.tk_vars["refreshgraph"].set(True)
@@ -361,6 +366,7 @@ class FaceswapControl():
             logger.debug("Sending Exit Signal")
             print("Sending Exit Signal", flush=True)
             now = time()
+            self.config.tk_vars["istraining"].set(False)
             if os.name == "nt":
                 logger.debug("Sending carriage return to process")
                 con_in = win32console.GetStdHandle(  # pylint:disable=c-extension-no-member
