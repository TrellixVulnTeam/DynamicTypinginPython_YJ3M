commit 5412c6026e86674e6bcb0fed10fff2a2dac1fb97
Author: kilroythethird <kilroythethird@users.noreply.github.com>
Date:   Mon Mar 4 12:18:16 2019 +0100

    mask shape fix + logging level

diff --git a/lib/multithreading.py b/lib/multithreading.py
index 264cb8b..d9a31b2 100644
--- a/lib/multithreading.py
+++ b/lib/multithreading.py
@@ -19,12 +19,12 @@ _launched_processes = set()  # pylint: disable=invalid-name
 class ConsumerBuffer():
     """ Memory buffer for consuming """
     def __init__(self, dispatcher, index, data):
-        logger.debug("Initializing %s: (dispatcher: '%s', index: %s, data: %s)",
+        logger.trace("Initializing %s: (dispatcher: '%s', index: %s, data: %s)",
                      self.__class__.__name__, dispatcher, index, data)
         self._data = data
         self._id = index
         self._dispatcher = dispatcher
-        logger.debug("Initialized %s", self.__class__.__name__)
+        logger.trace("Initialized %s", self.__class__.__name__)
 
     def get(self):
         """ Return Data """
@@ -46,13 +46,13 @@ class ConsumerBuffer():
 class WorkerBuffer():
     """ Memory buffer for working """
     def __init__(self, index, data, stop_event, queue):
-        logger.debug("Initializing %s: (index: '%s', data: %s, stop_event: %s, queue: %s)",
+        logger.trace("Initializing %s: (index: '%s', data: %s, stop_event: %s, queue: %s)",
                      self.__class__.__name__, index, data, stop_event, queue)
         self._id = index
         self._data = data
         self._stop_event = stop_event
         self._queue = queue
-        logger.debug("Initialized %s", self.__class__.__name__)
+        logger.trace("Initialized %s", self.__class__.__name__)
 
     def get(self):
         """ Return Data """
@@ -226,7 +226,7 @@ class FixedProducerDispatcher():
                 self._buffer_tokens.get(block=False, timeout=0.01)
             except Queue.Empty:
                 break
-        self._result_tokens.close()
+        self._buffer_tokens.close()
         for worker in self._worker:
             worker.join()
 
diff --git a/lib/training_data.py b/lib/training_data.py
index df3de85..1225d1b 100644
--- a/lib/training_data.py
+++ b/lib/training_data.py
@@ -58,7 +58,7 @@ class TrainingDataGenerator():
             (batchsize, self.model_input_size, self.model_input_size, 3),
             (batchsize, self.model_output_size, self.model_output_size, 3)))
         if self.mask_function:
-            batch_shape.append((self.batchsize, self.model_input_size, self.model_input_size, 1))
+            batch_shape.append((self.batchsize, self.model_output_size, self.model_output_size, 1))
 
         load_process = FixedProducerDispatcher(
             self.load_batches,
@@ -86,7 +86,7 @@ class TrainingDataGenerator():
         epoch = 0
         for memory_wrapper in mem_gen:
             memory = memory_wrapper.get()
-            logger.debug("Putting to batch queue: (side: '%s', is_timelapse: %s)",
+            logger.trace("Putting to batch queue: (side: '%s', is_timelapse: %s)",
                          side, is_timelapse)
             for i, img_path in enumerate(img_iter):
                 imgs = self.process_face(img_path, side, is_timelapse)
