commit d5b4c919aeeae4a60414cb1c35e11ad0fbda3ed1
Author: czfhhh <33478015+czfhhh@users.noreply.github.com>
Date:   Wed Feb 7 19:20:01 2018 +0800

    Update Convert_Masked.py (#130)
    
    correct issue when seamless_clone is true

diff --git a/plugins/Convert_Masked.py b/plugins/Convert_Masked.py
index e01bc08..f087b8e 100644
--- a/plugins/Convert_Masked.py
+++ b/plugins/Convert_Masked.py
@@ -37,12 +37,24 @@ class Convert():
 
         outImage = None
         if self.seamless_clone:
-            masky,maskx = cv2.transform( numpy.array([ size/2,size/2 ]).reshape(1,1,2) ,cv2.invertAffineTransform(mat) ).reshape(2).astype(int)
-            outimage = cv2.seamlessClone(new_image.astype(numpy.uint8),base_image.astype(numpy.uint8),(image_mask*255).astype(numpy.uint8),(masky,maskx) , cv2.NORMAL_CLONE )
-        else:
-            foreground = cv2.multiply(image_mask, new_image.astype(float))
-            background = cv2.multiply(1.0 - image_mask, base_image.astype(float))
-            outimage = cv2.add(foreground, background)
+            unitMask = numpy.clip( image_mask * 365, 0, 255 ).astype(numpy.uint8)
+      
+            maxregion = numpy.argwhere(unitMask==255)
+      
+            if maxregion.size > 0:
+              miny,minx = maxregion.min(axis=0)[:2]
+              maxy,maxx = maxregion.max(axis=0)[:2]
+              lenx = maxx - minx;
+              leny = maxy - miny;
+              masky = int(minx+(lenx//2))
+              maskx = int(miny+(leny//2))
+              outimage = cv2.seamlessClone(new_image.astype(numpy.uint8),base_image.astype(numpy.uint8),unitMask,(masky,maskx) , cv2.NORMAL_CLONE )
+              
+              return outimage
+              
+        foreground = cv2.multiply(image_mask, new_image.astype(float))
+        background = cv2.multiply(1.0 - image_mask, base_image.astype(float))
+        outimage = cv2.add(foreground, background)
 
         return outimage
 
