commit 11ab910c5e830dacc4030ac3b70e4bb49a5879b0
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Thu Oct 31 11:55:51 2019 +0000

    Reinstate fast frame count for convert and extract. Exit early if count is wrong.

diff --git a/lib/image.py b/lib/image.py
index d3047ae..b02add0 100644
--- a/lib/image.py
+++ b/lib/image.py
@@ -289,6 +289,7 @@ def count_frames(filename, fast=False):
     >>> filename = "/path/to/video.mp4"
     >>> frame_count = count_frames(filename)
     """
+    logger.debug("filename: %s, fast: %s", filename, fast)
     assert isinstance(filename, str), "Video path must be a string"
 
     cmd = [im_ffm.get_ffmpeg_exe(), "-i", filename, "-map", "0:v:0"]
diff --git a/lib/multithreading.py b/lib/multithreading.py
index 62a0251..3fe141a 100644
--- a/lib/multithreading.py
+++ b/lib/multithreading.py
@@ -99,6 +99,12 @@ class MultiThread():
             self._threads.append(thread)
         logger.debug("Started all threads '%s': %s", self._name, len(self._threads))
 
+    def completed(self):
+        """ Return False if there are any alive threads else True """
+        retval = all(not thread.is_alive() for thread in self._threads)
+        logger.debug(retval)
+        return retval
+
     def join(self):
         """ Join the running threads, catching and re-raising any errors """
         logger.debug("Joining Threads: '%s'", self._name)
diff --git a/scripts/convert.py b/scripts/convert.py
index 390b339..06be4f8 100644
--- a/scripts/convert.py
+++ b/scripts/convert.py
@@ -130,6 +130,9 @@ class Convert():
             if self.disk_io.completion_event.is_set():
                 logger.debug("DiskIO completion event set. Joining Pool")
                 break
+            if self.patch_threads.completed():
+                logger.debug("All patch threads completed")
+                break
             sleep(1)
         self.patch_threads.join()
 
diff --git a/scripts/fsmedia.py b/scripts/fsmedia.py
index a6a0269..7de1e79 100644
--- a/scripts/fsmedia.py
+++ b/scripts/fsmedia.py
@@ -126,7 +126,7 @@ class Images():
     def count_images(self):
         """ Number of images or frames """
         if self.is_video:
-            retval = int(count_frames(self.args.input_dir))
+            retval = int(count_frames(self.args.input_dir, fast=True))
         else:
             retval = len(self.input_images)
         return retval
