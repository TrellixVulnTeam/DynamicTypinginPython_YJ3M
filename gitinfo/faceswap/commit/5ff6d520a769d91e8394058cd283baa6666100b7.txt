commit 5ff6d520a769d91e8394058cd283baa6666100b7
Author: bryanlyon <bryanlyon@mail.weber.edu>
Date:   Wed Feb 13 12:16:09 2019 -0800

    Fix -dt by starting with a 4 channel mask already in place. (#605)
    
    * Fix -dt by starting with a 4 channel mask already in place.
    
    * Adapting reviews from kvrooman
    
    * Correct variable names and ensure actual operation

diff --git a/plugins/convert/masked.py b/plugins/convert/masked.py
index f6cdca1..072a9ec 100644
--- a/plugins/convert/masked.py
+++ b/plugins/convert/masked.py
@@ -43,6 +43,14 @@ class Convert():
         detected_face.load_aligned(image, size=self.training_size, align_eyes=False)
         new_image = self.get_new_image(image, detected_face, coverage, image_size)
         image_mask = self.get_image_mask(detected_face, image_size)
+
+        if self.args.draw_transparent:
+            new_image = dfl_full(detected_face.landmarks_as_xy, new_image, channels=4 )#Add mask as 4th channel for saving as alpha on supported output formats
+
+            #This make sure that all the arrays match in size for later actions despite not actually using alpha in any way.
+            image_mask = cv2.cvtColor(image_mask, cv2.COLOR_RGB2RGBA)
+            image = cv2.cvtColor(image, cv2.COLOR_RGB2RGBA)
+
         patched_face = self.apply_fixes(image,
                                         new_image,
                                         image_mask,
@@ -150,12 +158,6 @@ class Convert():
     def apply_fixes(self, frame, new_image, image_mask, image_size):
         """ Apply fixes """
 
-        if self.args.draw_transparent:
-            alpha = np.full((image_size[1], image_size[0], 1), 255.0, dtype='float32')
-            new_image = np.concatenate(new_image, alpha, axis=2)
-            image_mask = np.concatenate(image_mask, alpha, axis=2)
-            frame = np.concatenate(frame, alpha, axis=2)
-
         if self.args.sharpen_image is not None and self.args.sharpen_image.lower() != "none":
             np.clip(new_image, 0.0, 255.0, out=new_image)
             if self.args.sharpen_image == "box_filter":
