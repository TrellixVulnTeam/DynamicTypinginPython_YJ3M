commit 88094a064ac2f4f7e91f8d3740d716d74d502945
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Thu Jun 21 16:39:17 2018 +0200

    Update Original Hi-Res (#438)
    
    * Required for Shaonlu mode (#416)
    
    Added two modes - Original and Shaonlu.
    The later requires this file to function.
    
    * model update (#417)
    
    New, functional Original 128 model
    
    * OriginalHighRes 128 model update (#418)
    
    Required for OriginalHighRes Model to function
    
    * Fixed memory usage at 6GB cards. (#423)
    
    - Switched default encoder to ORIGINAL
    - Fixed memory consumption. Tested with geforce gtx 9800 ti with 6Gb; batch_size 8 no OOM or memory warnings now.
    
    * added new model
    
    * ndeed for HighRes Model_OriginalHighRes
    
    * added OriginalHighRes model state save
    
    * changed saving routine to ThreadPoolExecutor (faster with Python3)
    
    * altered trainer (#425)
    
    altered trainer to accommodate with model change
    
    * Update Model.py (#424)
    
    - Added saving state (currently only saved epoch number, to be extended in future)
    - Changed saving to ThreadPoolExecutor
    
    * Requirements version bump (#431)
    
    This bumps the versions of:
    
        scandir
        h5py
        Keras
        opencv-python
    
    to their latest vesions.
    
    Virtual Environment will need to be setup again to make use of these.

diff --git a/plugins/Model_OriginalHighRes/Model.py b/plugins/Model_OriginalHighRes/Model.py
index 47ca7af..26fd94c 100644
--- a/plugins/Model_OriginalHighRes/Model.py
+++ b/plugins/Model_OriginalHighRes/Model.py
@@ -24,8 +24,11 @@ from keras.utils import multi_gpu_model
 
 from lib.PixelShuffler import PixelShuffler
 import lib.Serializer
+from lib.utils import backup_file
 
 from . import __version__
+from .instance_normalization import InstanceNormalization
+
 
 if isinstance(__version__, (list, tuple)):
     version_str = ".".join([str(n) for n in __version__[1:]])
@@ -35,12 +38,6 @@ else:
 
 mswindows = sys.platform=="win32"
 
-try:
-    from lib.utils import backup_file
-except ImportError:
-    pass
-
-
 
 class EncoderType(enum.Enum):
     ORIGINAL = "original"
@@ -49,25 +46,12 @@ class EncoderType(enum.Enum):
     
 ENCODER = EncoderType.ORIGINAL
 
-
-if ENCODER==EncoderType.SHAOANLU:
-    from .instance_normalization import InstanceNormalization
-
-    
-def inst_norm():
-    return InstanceNormalization()     
-
+         
 conv_init = RandomNormal(0, 0.02)
 
-
-
 def inst_norm():
     return InstanceNormalization()
 
-class EncoderType(enum.Enum):
-    ORIGINAL = "original"
-    SHAOANLU = "shaoanlu"
-    
 ENCODER = EncoderType.ORIGINAL 
 
 
diff --git a/scripts/convert.py b/scripts/convert.py
index 116d7ed..e4e0c01 100644
--- a/scripts/convert.py
+++ b/scripts/convert.py
@@ -70,6 +70,8 @@ class Convert(object):
         if not model.load(self.args.swap_model):
             print("Model Not Found! A valid model must be provided to continue!")
             exit(1)
+            
+        self._image_shape = model.IMAGE_SHAPE
 
         return model
 
@@ -87,7 +89,8 @@ class Convert(object):
                                                      erosion_kernel_size=args.erosion_kernel_size,
                                                      match_histogram=args.match_histogram,
                                                      smooth_mask=args.smooth_mask,
-                                                     avg_color_adjust=args.avg_color_adjust)
+                                                     avg_color_adjust=args.avg_color_adjust)        
+        
         return converter
 
     def prepare_images(self):
@@ -134,7 +137,10 @@ class Convert(object):
 
         image = self.images.rotate_image(image, face.r)
         # TODO: This switch between 64 and 128 is a hack for now.
-        # We should have a separate cli option for size        
+        # We should have a separate cli option for size    
+        
+        print('image_shape', self._image_shape)
+            
         size = 128 if (self.args.trainer.strip().lower() in ('gan128', 'originalhighres')) else 64        
         
         image = converter.patch_image(image,
