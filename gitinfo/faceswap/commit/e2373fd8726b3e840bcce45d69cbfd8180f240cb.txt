commit e2373fd8726b3e840bcce45d69cbfd8180f240cb
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Sat Dec 7 19:18:32 2019 +0000

    Add job to fix frames where alignments are out by 1

diff --git a/tools/alignments.py b/tools/alignments.py
index 7575a1d..b5cde21 100644
--- a/tools/alignments.py
+++ b/tools/alignments.py
@@ -4,7 +4,7 @@ import logging
 
 from lib.utils import set_system_verbosity
 from .lib_alignments import (AlignmentData, Check, Dfl, Draw, # noqa pylint: disable=unused-import
-                             Extract, Manual, Merge, Rename,
+                             Extract, Fix, Manual, Merge, Rename,
                              RemoveAlignments, Sort, Spatial, UpdateHashes)
 
 logger = logging.getLogger(__name__)  # pylint: disable=invalid-name
diff --git a/tools/cli.py b/tools/cli.py
index 28cb2a9..3f45996 100644
--- a/tools/cli.py
+++ b/tools/cli.py
@@ -32,7 +32,7 @@ class AlignmentsArgs(FaceSwapArgs):
             "opts": ("-j", "--job"),
             "action": Radio,
             "type": str,
-            "choices": ("dfl", "draw", "extract", "manual", "merge", "missing-alignments",
+            "choices": ("dfl", "draw", "extract", "fix", "manual", "merge", "missing-alignments",
                         "missing-frames", "leftover-faces", "multi-faces", "no-faces",
                         "remove-faces", "remove-frames", "rename", "sort", "spatial",
                         "update-hashes"),
@@ -49,6 +49,11 @@ class AlignmentsArgs(FaceSwapArgs):
                     "alignment data. This is a lot quicker than re-detecting faces. Can pass in "
                     "the '-een' (--extract-every-n) parameter to only extract every nth frame." +
                     frames_and_faces_dir + align_eyes +
+                    # TODO - Remove the fix job after a period of time. Implemented 2019/12/07
+                    "\nL|'fix': There was a bug when extracting from video which would shift all "
+                    "the faces out by 1 frame. This was a shortlived bug, but this job will fix "
+                    "alignments files that have this issue. NB: Only run this on alignments files "
+                    "that you know need fixing."
                     "\nL|'manual': Manually view and edit landmarks." + frames_dir +
                     "\nL|'merge': Merge multiple alignment files into one. Specify a space "
                     "separated list of alignments files with the -a flag. Optionally specify a "
diff --git a/tools/lib_alignments/__init__.py b/tools/lib_alignments/__init__.py
index 9945b7b..9901b89 100644
--- a/tools/lib_alignments/__init__.py
+++ b/tools/lib_alignments/__init__.py
@@ -1,4 +1,4 @@
 from tools.lib_alignments.media import AlignmentData, ExtractedFaces, Faces, Frames
 from tools.lib_alignments.annotate import Annotate
-from tools.lib_alignments.jobs import Check, Dfl, Draw, Extract, Merge, RemoveAlignments, Rename, Sort, Spatial, UpdateHashes
+from tools.lib_alignments.jobs import Check, Dfl, Draw, Extract, Fix, Merge, RemoveAlignments, Rename, Sort, Spatial, UpdateHashes
 from tools.lib_alignments.jobs_manual import Manual
diff --git a/tools/lib_alignments/jobs.py b/tools/lib_alignments/jobs.py
index 0da68cb..b7e6a16 100644
--- a/tools/lib_alignments/jobs.py
+++ b/tools/lib_alignments/jobs.py
@@ -5,6 +5,7 @@ import logging
 import os
 import pickle
 import struct
+import sys
 from datetime import datetime
 from PIL import Image
 
@@ -496,6 +497,55 @@ class Extract():
         return valid_faces
 
 
+class Fix():
+    """ Fix alignments that were impacted by the 'out by one' bug when extracting from video
+
+    TODO This is a temporary job that should be deleted after a period of time.
+    Implemented 2019/12/07
+    """
+    def __init__(self, alignments, arguments):
+        logger.debug("Initializing %s: (arguments: %s)", self.__class__.__name__, arguments)
+        self.alignments = alignments
+        logger.debug("Initialized %s", self.__class__.__name__)
+
+    def process(self):
+        """ Run the fix process """
+        if not self._check_file_needs_fixing():
+            sys.exit(0)
+        logger.info("[FIXING FRAMES]")
+        self._fix()
+        self.alignments.save()
+
+    def _check_file_needs_fixing(self):
+        """ Check that these alignments are in video format and that the first frame in the "
+        "alignments file does not already start with 1 """
+        retval = True
+        min_frame = min(key for key in self.alignments.data.keys())
+        logger.debug("First frame: '%s'", min_frame)
+        fname = os.path.splitext(min_frame)[0]
+        frame_id = fname.split("_")[-1]
+        if ("_") not in fname or not frame_id.isdigit():
+            logger.info("Alignments file not generated from a video. Nothing to do.")
+            retval = False
+        elif int(frame_id) == 1:
+            logger.info("Alignments file does not require fixing. First frame: '%s'", fname)
+            retval = False
+        logger.debug(retval)
+        return retval
+
+    def _fix(self):
+        """ Renumber frame names, reducing each one by 1 """
+        frame_names = sorted(key for key in self.alignments.data.keys())
+        for old_name in tqdm(frame_names, desc="Fixing Alignments file"):
+            fname, ext = os.path.splitext(old_name)
+            vid_name, new_frame_id = ("_".join(fname.split("_")[:-1]),
+                                      int(fname.split("_")[-1]) - 1)
+            new_name = "{}_{:06d}{}".format(vid_name, new_frame_id, ext)
+            logger.debug("Re-assigning: '%s' > '%s'", old_name, new_name)
+            self.alignments.data[new_name] = self.alignments.data[old_name]
+            del self.alignments.data[old_name]
+
+
 class Merge():
     """ Merge two alignments files into one """
     def __init__(self, alignments, arguments):
