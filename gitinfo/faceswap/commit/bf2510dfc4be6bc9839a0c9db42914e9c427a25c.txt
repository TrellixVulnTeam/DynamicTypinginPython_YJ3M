commit bf2510dfc4be6bc9839a0c9db42914e9c427a25c
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Sun Sep 29 00:33:28 2019 +0100

    Force imageio to use ffmpeg

diff --git a/plugins/convert/writer/ffmpeg.py b/plugins/convert/writer/ffmpeg.py
index 672ad99..bb0f4ba 100644
--- a/plugins/convert/writer/ffmpeg.py
+++ b/plugins/convert/writer/ffmpeg.py
@@ -51,7 +51,7 @@ class Writer(Output):
     @property
     def video_fps(self):
         """ Return the fps of source video """
-        reader = imageio.get_reader(self.source_video)
+        reader = imageio.get_reader(self.source_video, "ffmpeg")
         retval = reader.get_meta_data()["fps"]
         reader.close()
         logger.debug(retval)
diff --git a/scripts/fsmedia.py b/scripts/fsmedia.py
index b9cd8c8..bc866ca 100644
--- a/scripts/fsmedia.py
+++ b/scripts/fsmedia.py
@@ -193,7 +193,7 @@ class Images():
         """ Return frames from a video file """
         logger.debug("Input is video. Capturing frames")
         vidname = os.path.splitext(os.path.basename(self.args.input_dir))[0]
-        reader = imageio.get_reader(self.args.input_dir)
+        reader = imageio.get_reader(self.args.input_dir, "ffmpeg")
         for i, frame in enumerate(reader):
             # Convert to BGR for cv2 compatibility
             frame = frame[:, :, ::-1]
@@ -219,7 +219,7 @@ class Images():
     def load_one_video_frame(self, frame_no):
         """ Load a single frame from a video file """
         logger.trace("Loading video frame: %s", frame_no)
-        reader = imageio.get_reader(self.args.input_dir)
+        reader = imageio.get_reader(self.args.input_dir, "ffmpeg")
         reader.set_image_index(frame_no - 1)
         frame = reader.get_next_data()[:, :, ::-1]
         reader.close()
diff --git a/tools/effmpeg.py b/tools/effmpeg.py
index bae1d78..2adeb6c 100644
--- a/tools/effmpeg.py
+++ b/tools/effmpeg.py
@@ -360,7 +360,7 @@ class Effmpeg():
         logger.debug("input_: %s, print_: %s, kwargs: %s", input_, print_, kwargs)
         input_ = input_ if isinstance(input_, str) else input_.path
         logger.debug("input: %s", input_)
-        reader = imageio.get_reader(input_)
+        reader = imageio.get_reader(input_, "ffmpeg")
         _fps = reader.get_meta_data()["fps"]
         logger.debug(_fps)
         reader.close()
@@ -374,7 +374,7 @@ class Effmpeg():
         logger.debug("input_: %s, print_: %s, kwargs: %s", input_, print_, kwargs)
         input_ = input_ if isinstance(input_, str) else input_.path
         logger.debug("input: %s", input_)
-        reader = imageio.get_reader(input_)
+        reader = imageio.get_reader(input_, "ffmpeg")
         out = reader.get_meta_data()
         logger.debug(out)
         reader.close()
diff --git a/tools/lib_alignments/media.py b/tools/lib_alignments/media.py
index aae4661..bfd14ff 100644
--- a/tools/lib_alignments/media.py
+++ b/tools/lib_alignments/media.py
@@ -139,7 +139,7 @@ class MediaLoader():
             logger.verbose("Video exists at: '%s'", self.folder)
             retval = cv2.VideoCapture(self.folder)  # pylint: disable=no-member
             # TODO ImageIO single frame seek seems slow. Look into this
-            # retval = imageio.get_reader(self.folder)
+            # retval = imageio.get_reader(self.folder, "ffmpeg")
         else:
             logger.verbose("Folder exists at '%s'", self.folder)
             retval = None
