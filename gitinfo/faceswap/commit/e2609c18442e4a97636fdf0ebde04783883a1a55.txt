commit e2609c18442e4a97636fdf0ebde04783883a1a55
Author: kilroythethird <kilroythethird@users.noreply.github.com>
Date:   Sun Sep 22 18:24:32 2019 +0200

    Moved travis test to _travis + wmv support

diff --git a/.gitignore b/.gitignore
index 8ce9f7b..09b2c8d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -30,6 +30,8 @@
 !plugins/convert/*
 !tools
 !tools/lib*
+!_travis
+!_travis/*
 !.travis.yml
 *.ini
 *.pyc
diff --git a/.travis.yml b/.travis.yml
index 1332036..de2b761 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -5,7 +5,6 @@ language: shell
 env:
   global:
     - CONDA_PYTHON=3.6
-    - CONDA_BLD_PATH=${HOME}/conda-bld
 
 os:
   - linux
@@ -21,6 +20,8 @@ cache:
 
 before_cache:
   # adapted from https://github.com/theochem/cgrid/blob/master/.travis.yml
+  - echo "Cleaning stuff in miniconda path. (${MINICONDA_PATH})"
+  - ls -la ${MINICONDA_PATH}
   - rm -rf ${MINICONDA_PATH}/conda-bld
   - rm -rf ${MINICONDA_PATH}/locks
   - rm -rf ${MINICONDA_PATH}/pkgs
@@ -29,7 +30,8 @@ before_cache:
   - rm -rf ${MINICONDA_PATH}/envs/*/locks
   - rm -rf ${MINICONDA_PATH}/envs/*/pkgs
   - rm -rf ${MINICONDA_PATH}/envs/*/var
-  # Clean out test results
+  - ls -la ${MINICONDA_PATH}
+  - echo "Cleaning test results"
   - rm -rf ${HOME}/cache/tests/*/faces
   - rm -rf ${HOME}/cache/tests/*/conv
   - rm -rf ${HOME}/cache/tests/*/*.json
@@ -89,5 +91,5 @@ install:
   - df -h
 
 script:
-  - python simple_tests.py;
+  - python _travis/simple_tests.py;
 
diff --git a/simple_tests.py b/_travis/simple_tests.py
similarity index 89%
rename from simple_tests.py
rename to _travis/simple_tests.py
index 9f7b2e0..89c8776 100644
--- a/simple_tests.py
+++ b/_travis/simple_tests.py
@@ -84,10 +84,11 @@ def extract_args(detector, aligner, in_path, out_path, args=None):
     return _extract_args.split()
 
 
-def train_args(model, model_path, faces, alignments, iterations=5, bs=8):
+def train_args(model, model_path, faces, alignments, iterations=5, bs=8, extra_args=""):
     py_exe = sys.executable
-    args = "%s faceswap.py train -A %s -ala %s -B %s -alb %s -m %s -t %s -bs %i -it %s" % (
-        py_exe, faces, alignments, faces, alignments, model_path, model, bs, iterations
+    args = "%s faceswap.py train -A %s -ala %s -B %s -alb %s -m %s -t %s -bs %i -it %s %s" % (
+        py_exe, faces, alignments, faces,
+        alignments, model_path, model, bs, iterations, extra_args
     )
     return args.split()
 
@@ -120,6 +121,7 @@ if __name__ == '__main__':
     os.makedirs(vid_base, exist_ok=True)
     os.makedirs(img_base, exist_ok=True)
     py_exe = sys.executable
+    was_trained = False
 
     vid_path = download_file(vid_src, pathjoin(vid_base, "test.mp4"))
     if not vid_path:
@@ -157,15 +159,24 @@ if __name__ == '__main__':
             )
         )
 
-        trained = run_test(
-            "Train lightweight model for 5 iterations.",
+        run_test(
+            "Train lightweight model for 1 iteration with WTL.",
+            train_args(
+                "lightweight", pathjoin(vid_base, "model"),
+                pathjoin(vid_base, "faces"), pathjoin(vid_base, "test_alignments.json"),
+                iterations=1, extra_args="-wl"
+            )
+        )
+
+        was_trained = run_test(
+            "Train lightweight model for 5 iterations WITHOUT WTL.",
             train_args(
                 "lightweight", pathjoin(vid_base, "model"),
                 pathjoin(vid_base, "faces"), pathjoin(vid_base, "test_alignments.json")
             )
         )
 
-    if trained:
+    if was_trained:
         run_test(
             "Convert video.",
             convert_args(
diff --git a/lib/gui/utils.py b/lib/gui/utils.py
index 834a40b..37b020d 100644
--- a/lib/gui/utils.py
+++ b/lib/gui/utils.py
@@ -112,6 +112,7 @@ class FileHandler():
                                ("MP4", "*.mp4"),
                                ("MPEG", "*.mpeg *.mpg"),
                                ("WebM", "*.webm"),
+                               ("Windows Media Video", "*.wmv"),
                                all_files]}
         # Add in multi-select options
         for key, val in filetypes.items():
diff --git a/lib/utils.py b/lib/utils.py
index 6de7a35..88a527c 100644
--- a/lib/utils.py
+++ b/lib/utils.py
@@ -29,7 +29,7 @@ from lib.faces_detect import DetectedFace
 _image_extensions = [  # pylint:disable=invalid-name
     ".bmp", ".jpeg", ".jpg", ".png", ".tif", ".tiff"]
 _video_extensions = [  # pylint:disable=invalid-name
-    ".avi", ".flv", ".mkv", ".mov", ".mp4", ".mpeg", ".mpg", ".webm"]
+    ".avi", ".flv", ".mkv", ".mov", ".mp4", ".mpeg", ".mpg", ".webm", ".wmv"]
 
 
 class Backend():
