commit ba2503e1777c0d8034691c25463811d5b28c64f3
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Tue Jul 16 10:01:09 2019 +0100

    Extract/Convert bugfix. Don't fail loading on black frames

diff --git a/scripts/convert.py b/scripts/convert.py
index a1ff7c5..d6967a7 100644
--- a/scripts/convert.py
+++ b/scripts/convert.py
@@ -312,7 +312,8 @@ class DiskIO():
             if self.load_queue.shutdown.is_set():
                 logger.debug("Load Queue: Stop signal received. Terminating")
                 break
-            if image is None or not image.any():
+            if image is None or (not image.any() and frame.ndim not in ((2, 3))):
+                # All black frames will return not np.any() so check dims too
                 logger.warning("Unable to open image. Skipping: '%s'", filename)
                 continue
             if self.check_skipframe(filename):
diff --git a/test.py b/test.py
new file mode 100644
index 0000000..a8891b4
--- /dev/null
+++ b/test.py
@@ -0,0 +1,22 @@
+import os
+import cv2
+import imageio
+import imageio_ffmpeg as im_ffm
+
+out = "C:\\Users\\matt\\Desktop\\out"
+vidname = "test"
+reader = imageio.get_reader("C:\\Users\\matt\\Desktop\\2.mkv")
+for i, frame in enumerate(reader):
+    #Convert to BGR for cv2 compatibility
+    frame = frame[:, :, ::-1]
+    if frame is None or not frame.any():
+        print(frame.shape)
+        print(frame.ndim)
+            
+    filename = "{}_{:06d}.png".format(vidname, i + 1)
+    outfile = os.path.join(out, filename)
+    print(filename)
+    break
+    cv2.imwrite(outfile, frame)
+    #logger.trace("Loading video frame: '%s'", filename)
+reader.close()
