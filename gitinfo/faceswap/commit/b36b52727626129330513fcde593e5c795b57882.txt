commit b36b52727626129330513fcde593e5c795b57882
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Sun Aug 25 00:16:56 2019 +0100

    GUI Tweaks
    
    - Fix tootlp formatting
    - Revert to single column view
    - Fix borders on ungrouped items
    - Add individual tooltips for Radio options
    - Add more groups
    - Remove forced fullscreen

diff --git a/lib/gui/command.py b/lib/gui/command.py
index f4e6b08..37cc81b 100644
--- a/lib/gui/command.py
+++ b/lib/gui/command.py
@@ -18,7 +18,7 @@ class CommandNotebook(ttk.Notebook):  # pylint:disable=too-many-ancestors
     def __init__(self, parent):
         logger.debug("Initializing %s: (parent: %s)", self.__class__.__name__, parent)
         scaling_factor = get_config().scaling_factor
-        width = int(470 * scaling_factor)
+        width = int(420 * scaling_factor)
         root_height = get_config().root.winfo_height()
         height = int(round(root_height * 0.78125))
 
@@ -97,7 +97,7 @@ class CommandTab(ttk.Frame):  # pylint:disable=too-many-ancestors
         """ Build the tab """
         logger.debug("Build Tab: '%s'", self.command)
         options = get_config().cli_opts.opts[self.command]
-        ControlPanel(self, options, label_width=16, radio_columns=2, columns=2)
+        ControlPanel(self, options, label_width=16, radio_columns=3, columns=1)
         self.add_frame_separator()
 
         ActionFrame(self)
diff --git a/lib/gui/control_helper.py b/lib/gui/control_helper.py
index 321251d..4ba20fc 100644
--- a/lib/gui/control_helper.py
+++ b/lib/gui/control_helper.py
@@ -1,6 +1,8 @@
 #!/usr/bin/env python3
 """ Helper functions and classes for GUI controls """
 import logging
+import re
+
 import tkinter as tk
 from tkinter import ttk
 
@@ -132,9 +134,13 @@ class ControlPanel(ttk.Frame):  # pylint:disable=too-many-ancestors
             logger.debug("Creating new group frame for: %s", group)
             is_master = group == "_master"
             opts_frame = self.optsframe.subframe
-            group_frame = ttk.LabelFrame(opts_frame,
-                                         text="" if is_master else group.title(),
-                                         name=group.lower())
+            if is_master:
+                group_frame = ttk.Frame(opts_frame, name=group.lower())
+            else:
+                group_frame = ttk.LabelFrame(opts_frame,
+                                             text="" if is_master else group.title(),
+                                             name=group.lower())
+
             group_frame.pack(side=tk.TOP, fill=tk.X, padx=5, pady=5, anchor=tk.NW)
 
             self.group_frames[group] = dict(frame=group_frame,
@@ -279,6 +285,7 @@ class ControlBuilder():
         self.title = title
         self.default = default
         self.helptext = self.format_helptext(helptext)
+        self.helpset = False
         self.label_width = label_width
         self.filebrowser = None
 
@@ -311,7 +318,12 @@ class ControlBuilder():
         if helptext is None:
             return helptext
         logger.debug("Format control help: '%s'", self.title)
-        helptext = helptext.replace("\n\t", "\n  - ").replace("%%", "%")
+        if helptext.startswith("R|"):
+            helptext = helptext[2:].replace("\nL|", "\n - ").replace("\n", "\n\n")
+        else:
+            helptext = " ".join(helptext.split())
+        helptext = helptext.replace("%%", "%")
+        helptext = ". ".join(i.capitalize() for i in helptext.split(". "))
         helptext = self.title + " - " + helptext
         logger.debug("Formatted control help: (title: '%s', help: '%s'", self.title, helptext)
         return helptext
@@ -397,7 +409,7 @@ class ControlBuilder():
         self.set_control_width(ctl, control_width)
         if self.control != ttk.Checkbutton:
             ctl.pack(padx=5, pady=5, fill=tk.X, expand=True)
-            if self.helptext is not None:
+            if self.helptext is not None and not self.helpset:
                 Tooltip(ctl, text=self.helptext, wraplength=720)
 
         logger.debug("Built control: '%s'", self.title)
@@ -411,6 +423,11 @@ class ControlBuilder():
     def radio_control(self, choices, columns):
         """ Create a group of radio buttons """
         logger.debug("Adding radio group: %s", self.title)
+        helpitems = {re.sub(r'[^A-Za-z0-9\-]+', '',
+                            line.split()[1].lower()): " ".join(line.split()[1:])
+                     for line in self.helptext.splitlines()
+                     if line.startswith(" - ")}
+
         ctl = ttk.LabelFrame(self.frame, text=self.title.replace("_", " ").title())
         radio_holder = AutoFillContainer(ctl, columns)
         for idx, choice in enumerate(choices):
@@ -419,6 +436,11 @@ class ControlBuilder():
                                     text=choice.title(),
                                     value=choice,
                                     variable=self.tk_var)
+            if choice.lower() in helpitems:
+                self.helpset = True
+                helptext = helpitems[choice.lower()].capitalize()
+                helptext = '. '.join(item.capitalize() for item in helptext.split('. '))
+                Tooltip(radio, text=helptext)
             radio.pack(anchor=tk.W)
             logger.debug("Adding radio option %s to column %s", choice, frame_id)
         return radio_holder.parent
diff --git a/scripts/gui.py b/scripts/gui.py
index 10390e6..cc44210 100644
--- a/scripts/gui.py
+++ b/scripts/gui.py
@@ -116,10 +116,6 @@ class Gui():  # pylint: disable=too-few-public-methods
         pathscript = os.path.realpath(os.path.dirname(cmd))
         self.args = arguments
         self.root = FaceswapGui(pathscript)
-        try:
-            self.root.state("zoomed")
-        except tk.TclError:
-            self.root.attributes('-zoomed', True)
 
     def process(self):
         """ Builds the GUI """
diff --git a/tools/cli.py b/tools/cli.py
index 51aa56e..5b77699 100644
--- a/tools/cli.py
+++ b/tools/cli.py
@@ -149,6 +149,7 @@ class AlignmentsArgs(FaceSwapArgs):
         argument_list.append({"opts": ("-ae", "--align-eyes"),
                               "action": "store_true",
                               "dest": "align_eyes",
+                              "group": "output",
                               "default": False,
                               "help": "Perform extra alignment to ensure "
                                       "left/right eyes are  at the same "
@@ -156,6 +157,7 @@ class AlignmentsArgs(FaceSwapArgs):
                                       "only)"})
         argument_list.append({"opts": ("-dm", "--disable-monitor"),
                               "action": "store_true",
+                              "group": "settings",
                               "dest": "disable_monitor",
                               "default": False,
                               "help": "Enable this option if manual "
@@ -400,6 +402,7 @@ class EffmpegArgs(FaceSwapArgs):
         argument_list.append({"opts": ('-q', '--quiet'),
                               "action": "store_true",
                               "dest": "quiet",
+                              "group": "settings",
                               "default": False,
                               "help": "Reduces output verbosity so that only "
                                       "serious errors are printed. If both "
@@ -409,6 +412,7 @@ class EffmpegArgs(FaceSwapArgs):
         argument_list.append({"opts": ('-v', '--verbose'),
                               "action": "store_true",
                               "dest": "verbose",
+                              "group": "settings",
                               "default": False,
                               "help": "Increases output verbosity. If both "
                                       "quiet and verbose are set, verbose "
