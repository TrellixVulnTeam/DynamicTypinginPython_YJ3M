commit 2f5c202168e24805cba7f57d2a8ef70d2d6afa63
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Fri Apr 12 23:32:15 2019 +0000

    bigfix: RuntimeWarning: More than 20 figures have been opened.

diff --git a/lib/gui/display.py b/lib/gui/display.py
index bb70b63..28e7c7d 100644
--- a/lib/gui/display.py
+++ b/lib/gui/display.py
@@ -98,20 +98,10 @@ class DisplayNotebook(ttk.Notebook):  # pylint: disable=too-many-ancestors
                 continue
             logger.debug("removing child: %s", child)
             child_name = child.split(".")[-1]
-            child_object = self.children[child_name]
-            self.destroy_tabs_children(child_object)
+            child_object = self.children[child_name]  # returns the OptionalDisplayPage object
+            child_object.close()  # Call the OptionalDisplayPage close() method
             self.forget(child)
 
-    @staticmethod
-    def destroy_tabs_children(tab):
-        """ Destroy all tabs children
-            Children must be destroyed as forget only hides display
-        """
-        logger.debug("Destroying children for tab: %s", tab)
-        for child in tab.winfo_children():
-            logger.debug("Destroying child: %s", child)
-            child.destroy()
-
     def update_displaybook(self, *args):  # pylint: disable=unused-argument
         """ Set the display tabs based on executing task """
         command = self.wrapper_var.get()
diff --git a/lib/gui/display_command.py b/lib/gui/display_command.py
index 35de142..72174f1 100644
--- a/lib/gui/display_command.py
+++ b/lib/gui/display_command.py
@@ -232,3 +232,10 @@ class GraphDisplay(DisplayOptionalPage):  # pylint: disable=too-many-ancestors
             return
         for graph in self.subnotebook.children.values():
             graph.save_fig(graphlocation)
+
+    def close(self):
+        """ Clear the plots from RAM """
+        for name, graph in self.subnotebook.children.items():
+            logger.debug("Clearing: %s", name)
+            graph.clear()
+        super().close()
diff --git a/lib/gui/display_graph.py b/lib/gui/display_graph.py
index cc1fff1..aefd0d8 100755
--- a/lib/gui/display_graph.py
+++ b/lib/gui/display_graph.py
@@ -12,7 +12,8 @@ import matplotlib
 # pylint: disable=wrong-import-position
 matplotlib.use("TkAgg")
 
-from matplotlib import pyplot as plt, style  # noqa
+from matplotlib import style  # noqa
+from matplotlib.figure import Figure  # noqa
 from matplotlib.backends.backend_tkagg import (FigureCanvasTkAgg,
                                                NavigationToolbar2Tk)  # noqa
 
@@ -86,7 +87,8 @@ class GraphBase(ttk.Frame):  # pylint: disable=too-many-ancestors
                            "Greys", "copper", "summer", "bone"]
         self.lines = list()
         self.toolbar = None
-        self.fig = plt.figure(figsize=(4, 4), dpi=75)
+        self.fig = Figure(figsize=(4, 4), dpi=75)
+
         self.ax1 = self.fig.add_subplot(1, 1, 1)
         self.plotcanvas = FigureCanvasTkAgg(self.fig, self)
 
@@ -98,12 +100,12 @@ class GraphBase(ttk.Frame):  # pylint: disable=too-many-ancestors
         """ Place the graph canvas """
         logger.debug("Setting plotcanvas")
         self.plotcanvas.get_tk_widget().pack(side=tk.TOP, padx=5, fill=tk.BOTH, expand=True)
-        plt.subplots_adjust(left=0.100,
-                            bottom=0.100,
-                            right=0.95,
-                            top=0.95,
-                            wspace=0.2,
-                            hspace=0.2)
+        self.fig.subplots_adjust(left=0.100,
+                                 bottom=0.100,
+                                 right=0.95,
+                                 top=0.95,
+                                 wspace=0.2,
+                                 hspace=0.2)
         logger.debug("Set plotcanvas")
 
     def update_plot(self, initiate=True):
@@ -242,6 +244,12 @@ class GraphBase(ttk.Frame):  # pylint: disable=too-many-ancestors
         self.toolbar.pack(side=tk.BOTTOM)
         self.toolbar.update()
 
+    def clear(self):
+        """ Clear the plots from RAM """
+        logger.debug("Clearing graph from RAM: %s", self)
+        self.fig.clf()
+        del self.fig
+
 
 class TrainingGraph(GraphBase):  # pylint: disable=too-many-ancestors
     """ Live graph to be displayed during training. """
diff --git a/lib/gui/display_page.py b/lib/gui/display_page.py
index a12b951..af1528d 100644
--- a/lib/gui/display_page.py
+++ b/lib/gui/display_page.py
@@ -11,7 +11,7 @@ from .utils import get_images
 logger = logging.getLogger(__name__)  # pylint: disable=invalid-name
 
 
-class DisplayPage(ttk.Frame):
+class DisplayPage(ttk.Frame):  # pylint: disable=too-many-ancestors
     """ Parent frame holder for each tab.
         Defines uniform structure for each tab to inherit from """
     def __init__(self, parent, tabname, helptext):
@@ -147,7 +147,7 @@ class DisplayPage(ttk.Frame):
         return self.subnotebook.children[tab_name]
 
 
-class DisplayOptionalPage(DisplayPage):
+class DisplayOptionalPage(DisplayPage):  # pylint: disable=too-many-ancestors
     """ Parent Context Sensitive Display Tab """
 
     def __init__(self, parent, tabname, helptext, waittime):
@@ -260,3 +260,11 @@ class DisplayOptionalPage(DisplayPage):
     def display_item_process(self):
         """ Override for display specific loading """
         raise NotImplementedError()
+
+    def close(self):
+        """ Called when the parent notebook is shutting down
+            Children must be destroyed as forget only hides display
+            Override for page specific shutdown """
+        for child in self.winfo_children():
+            logger.debug("Destroying child: %s", child)
+            child.destroy()
