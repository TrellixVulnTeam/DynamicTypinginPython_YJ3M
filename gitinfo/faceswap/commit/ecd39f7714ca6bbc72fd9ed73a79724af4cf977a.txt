commit ecd39f7714ca6bbc72fd9ed73a79724af4cf977a
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Fri Jun 14 16:28:31 2019 +0000

    Remove extra line breaks from GUI console output

diff --git a/lib/cli.py b/lib/cli.py
index 730c923..eb39960 100644
--- a/lib/cli.py
+++ b/lib/cli.py
@@ -102,7 +102,8 @@ class ScriptExecutor():
 
     def execute_script(self, arguments):
         """ Run the script for called command """
-        log_setup(arguments.loglevel, arguments.logfile, self.command)
+        is_gui = hasattr(arguments, "redirect_gui") and arguments.redirect_gui
+        log_setup(arguments.loglevel, arguments.logfile, self.command, is_gui)
         logger.debug("Executing: %s. PID: %s", self.command, os.getpid())
         try:
             script = self.import_script()
diff --git a/lib/logger.py b/lib/logger.py
index 8d69422..f62b696 100644
--- a/lib/logger.py
+++ b/lib/logger.py
@@ -82,7 +82,7 @@ def set_root_logger(loglevel=logging.INFO, queue=LOG_QUEUE):
     rootlogger.setLevel(loglevel)
 
 
-def log_setup(loglevel, logfile, command):
+def log_setup(loglevel, logfile, command, is_gui=False):
     """ initial log set up. """
     numeric_loglevel = get_loglevel(loglevel)
     root_loglevel = min(logging.DEBUG, numeric_loglevel)
@@ -91,7 +91,7 @@ def log_setup(loglevel, logfile, command):
                                    "%(module)-15s %(funcName)-25s %(levelname)-8s %(message)s",
                                    datefmt="%m/%d/%Y %H:%M:%S")
     f_handler = file_handler(numeric_loglevel, logfile, log_format, command)
-    s_handler = stream_handler(numeric_loglevel)
+    s_handler = stream_handler(numeric_loglevel, is_gui)
     c_handler = crash_handler(log_format)
 
     q_listener = QueueListener(LOG_QUEUE, f_handler, s_handler, c_handler,
@@ -118,14 +118,19 @@ def file_handler(loglevel, logfile, log_format, command):
     return log_file
 
 
-def stream_handler(loglevel):
+def stream_handler(loglevel, is_gui):
     """ Add a logging cli handler """
     # Don't set stdout to lower than verbose
     loglevel = max(loglevel, 15)
     log_format = FaceswapFormatter("%(asctime)s %(levelname)-8s %(message)s",
                                    datefmt="%m/%d/%Y %H:%M:%S")
 
-    log_console = TqdmHandler(sys.stdout)
+    if is_gui:
+        # tqdm.write inserts extra lines in the GUI, so use standard output as
+        # it is not needed there.
+        log_console = logging.StreamHandler(sys.stdout)
+    else:
+        log_console = TqdmHandler(sys.stdout)
     log_console.setFormatter(log_format)
     log_console.setLevel(loglevel)
     return log_console
@@ -167,6 +172,8 @@ def crash_log():
 
 
 old_factory = logging.getLogRecordFactory()  # pylint: disable=invalid-name
+
+
 def faceswap_logrecord(*args, **kwargs):
     """ Add a flag to logging.LogRecord to not strip formatting from particular records """
     record = old_factory(*args, **kwargs)
