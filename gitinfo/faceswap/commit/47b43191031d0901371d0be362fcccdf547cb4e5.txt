commit 47b43191031d0901371d0be362fcccdf547cb4e5
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Mon Apr 22 00:02:39 2019 +0000

    Bugfixes [convert[: Correct output folder. Correct tqdm for skipped frames.

diff --git a/plugins/convert/writer/_base.py b/plugins/convert/writer/_base.py
index d771834..9c5c8c6 100644
--- a/plugins/convert/writer/_base.py
+++ b/plugins/convert/writer/_base.py
@@ -34,7 +34,8 @@ class Output():
         """ Return the output filename with the correct folder and extension
             NB: The plugin must have a config item 'format' that contains the
                 file extension to use this method """
-        out_filename = "{}.{}".format(os.path.splitext(filename)[0], self.config["format"])
+        filename = os.path.splitext(os.path.basename(filename))[0]
+        out_filename = "{}.{}".format(filename, self.config["format"])
         out_filename = os.path.join(self.output_folder, out_filename)
         logger.trace("in filename: '%s', out filename: '%s'", filename, out_filename)
         return out_filename
diff --git a/plugins/convert/writer/gif.py b/plugins/convert/writer/gif.py
index 3a822be..9be157f 100644
--- a/plugins/convert/writer/gif.py
+++ b/plugins/convert/writer/gif.py
@@ -47,7 +47,7 @@ class Writer(Output):
     def set_gif_filename(self, filename):
         """ Set the gif output filename """
         logger.debug("sample filename: '%s'", filename)
-        filename = os.path.splitext(filename)[0]
+        filename = os.path.splitext(os.path.basename(filename))[0]
         idx = len(filename)
         for char in list(filename[::-1]):
             if not char.isdigit() and char not in ("_", "-"):
diff --git a/plugins/convert/writer/pillow.py b/plugins/convert/writer/pillow.py
index 670e900..21c5e75 100644
--- a/plugins/convert/writer/pillow.py
+++ b/plugins/convert/writer/pillow.py
@@ -1,7 +1,6 @@
 #!/usr/bin/env python3
 """ Image output writer for faceswap.py converter """
 
-import os
 from io import BytesIO
 from PIL import Image
 
@@ -50,13 +49,6 @@ class Writer(Output):
         except Exception as err:  # pylint: disable=broad-except
             logger.error("Failed to save image '%s'. Original Error: %s", filename, err)
 
-    def output_filename(self, filename):
-        """ Return the output filename with the correct folder and extension """
-        out_filename = "{}.{}".format(os.path.splitext(filename)[0], self.config["format"])
-        out_filename = os.path.join(self.output_folder, out_filename)
-        logger.trace("in filename: '%s', out filename: '%s'", filename, out_filename)
-        return out_filename
-
     def pre_encode(self, image):
         logger.trace("Pre-encoding image")
         fmt = self.format_dict.get(self.config["format"], None)
diff --git a/scripts/convert.py b/scripts/convert.py
index c93ccd4..dade0e9 100644
--- a/scripts/convert.py
+++ b/scripts/convert.py
@@ -200,7 +200,7 @@ class DiskIO():
     def total_count(self):
         """ Return the total number of frames to be converted """
         if self.frame_ranges and not self.args.keep_unchanged:
-            retval = sum([fr[1] - fr[0] for fr in self.frame_ranges])
+            retval = sum([fr[1] - fr[0] + 1 for fr in self.frame_ranges])
         else:
             retval = self.images.images_found
         logger.debug(retval)
