commit 5c027265876ef6c3d1889f7f36a104e62836939f
Author: torzdf <36920800+torzdf@users.noreply.github.com>
Date:   Thu May 16 19:22:47 2019 +0000

    Add "extract-every-n" option to alignments tool

diff --git a/tools/cli.py b/tools/cli.py
index 658cf43..fa8fe3c 100644
--- a/tools/cli.py
+++ b/tools/cli.py
@@ -34,10 +34,12 @@ class AlignmentsArgs(FaceSwapArgs):
                     "subfolder will be created within the frames folder to hold the output." +
                     frames_dir + align_eyes +
                     "\nL|'extract': Re-extract faces from the source frames/video based on "
-                    "alignment data. This is a lot quicker than re-detecting faces." +
+                    "alignment data. This is a lot quicker than re-detecting faces. Can pass in "
+                    "the '-een' (--extract-every-n) parameter to only extract every nth frame." +
                     frames_and_faces_dir + align_eyes +
                     "\nL|'extract-large' - Extract all faces that have not been upscaled. Useful "
-                    "for excluding low-res images from a training set." +
+                    "for excluding low-res images from a training set.. Can pass in the '-een' "
+                    "(--extract-every-n) parameter to only extract every nth frame." +
                     frames_and_faces_dir + align_eyes +
                     "\nL|'manual': Manually view and edit landmarks." + frames_dir + align_eyes +
                     "\nL|'merge': Merge multiple alignment files into one. Specify a space "
@@ -114,6 +116,17 @@ class AlignmentsArgs(FaceSwapArgs):
                     " source directory)."
                     "\nL|'move': Move the discovered items to a sub-folder within the source "
                     "directory."})
+        argument_list.append({"opts": ("-een", "--extract-every-n"),
+                              "type": int,
+                              "action": Slider,
+                              "dest": "extract_every_n",
+                              "min_max": (1, 100),
+                              "default": 1,
+                              "rounding": 1,
+                              "help": "Extract every 'nth' frame. This option will skip frames "
+                                      "when extracting faces. For example a value of 1 will "
+                                      "extract faces from every frame, a value of 10 will extract "
+                                      "faces from every 10th frame. (extract only)"})
         argument_list.append({"opts": ("-sz", "--size"),
                               "type": int,
                               "action": Slider,
diff --git a/tools/lib_alignments/jobs.py b/tools/lib_alignments/jobs.py
index 9516421..bb684de 100644
--- a/tools/lib_alignments/jobs.py
+++ b/tools/lib_alignments/jobs.py
@@ -330,13 +330,20 @@ class Extract():
     def export_faces(self):
         """ Export the faces """
         extracted_faces = 0
-
-        for frame in tqdm(self.frames.file_list_sorted, desc="Saving extracted faces"):
+        skip_num = self.arguments.extract_every_n
+        if skip_num != 1:
+            logger.info("Skipping every %s frames", skip_num)
+        for idx, frame in enumerate(tqdm(self.frames.file_list_sorted,
+                                         desc="Saving extracted faces")):
             frame_name = frame["frame_fullname"]
+            if idx % skip_num != 0:
+                logger.trace("Skipping '%s' due to extract_every_n = %s", frame_name, skip_num)
+                continue
 
             if not self.alignments.frame_exists(frame_name):
                 logger.verbose("Skipping '%s' - Alignments not found", frame_name)
                 continue
+
             extracted_faces += self.output_faces(frame)
 
         if extracted_faces != 0 and self.type != "large":
