commit eec8636b18c763dbc0a651104b2721205ecf06ad
Author: JayantPythonLover <36280392+JayantPythonLover@users.noreply.github.com>
Date:   Wed Mar 14 04:24:09 2018 +0530

    Output Sharpening Added (#285)
    
    * Updated to support Output Sharpening arguments
    
    Two new types of output sharpening methods have been added.
    
    One that deals with a Box Blur method and the other with a Gaussian Blur method.
    
    Box Blur method can be called using argument '-sh bsharpen' --- This method is not dynamic and can produce strong sharpening on your images. Sometimes it can yield great results and sometimes entirely the opposite.
    
    Gaussian Blur method can be called using argument '-sh gsharpen' --- This method is dynamic and tries to adjust to your data set. As a result, while the sharpening effect might not be as strong as bsharpen, it is bound to produce a more natural looking sharpened image.
    
    By default the parameter is set to none which will not run any sharpening on your output.
    
    * Output Sharpening added
    
    Two ways of sharpening your output have been added
    
    -sh bsharpen
    -sh gsharpen
    
    * Update convert.py

diff --git a/plugins/Convert_Masked.py b/plugins/Convert_Masked.py
index 2291806..a9d3b1d 100644
--- a/plugins/Convert_Masked.py
+++ b/plugins/Convert_Masked.py
@@ -6,7 +6,7 @@ import numpy
 from lib.aligner import get_align_mat
 
 class Convert():
-    def __init__(self, encoder, trainer, blur_size=2, seamless_clone=False, mask_type="facehullandrect", erosion_kernel_size=None, match_histogram=False, **kwargs):
+    def __init__(self, encoder, trainer, blur_size=2, seamless_clone=False, mask_type="facehullandrect", erosion_kernel_size=None, match_histogram=False, sharpen_image=None, **kwargs):
         self.encoder = encoder
         self.trainer = trainer
         self.erosion_kernel = None
@@ -18,6 +18,7 @@ class Convert():
                 self.erosion_kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(abs(erosion_kernel_size),abs(erosion_kernel_size)))
         self.blur_size = blur_size
         self.seamless_clone = seamless_clone
+        self.sharpen_image = sharpen_image
         self.match_histogram = match_histogram
         self.mask_type = mask_type.lower() # Choose in 'FaceHullAndRect','FaceHull','Rect'
 
@@ -38,8 +39,21 @@ class Convert():
         new_image = numpy.copy( image )
 
         cv2.warpAffine( new_face, mat, image_size, new_image, cv2.WARP_INVERSE_MAP | cv2.INTER_CUBIC, cv2.BORDER_TRANSPARENT )
-
-        outImage = None
+        
+        if "bsharpen" in self.sharpen_image:
+            # Sharpening using filter2D
+            kernel = numpy.ones((3, 3)) * (-1)
+            kernel[1, 1] = 9
+            new_image = cv2.filter2D(new_image, -1, kernel)
+        elif "gsharpen" in self.sharpen_image:
+            # Sharpening using Weighted Method
+            gaussain_blur = cv2.GaussianBlur(new_image, (0, 0), 3.0)
+            new_image = cv2.addWeighted(
+                new_image, 1.5, gaussain_blur, -0.5, 0, new_image)
+        elif "none" in self.sharpen_image:
+            pass
+
+        outimage = None
         if self.seamless_clone:
             unitMask = numpy.clip( image_mask * 365, 0, 255 ).astype(numpy.uint8)
 
diff --git a/scripts/convert.py b/scripts/convert.py
index 39f4a2d..e7b3f79 100644
--- a/scripts/convert.py
+++ b/scripts/convert.py
@@ -129,6 +129,13 @@ class ConvertImage(DirectoryProcessor):
                             dest="match_histogram",
                             default=False,
                             help="Use histogram matching. (Masked converter only)")
+        
+        parser.add_argument('-sh',
+                            type=str.lower,
+                            dest="sharpen_image",
+                            choices=["bsharpen", "gsharpen"],
+                            default="none",
+                            help="Use Sharpen Image - bsharpen = Box Blur, gsharpen = Gaussian Blur (Masked converter only)")
 
         parser.add_argument('-sm', '--smooth-mask',
                             action="store_true",
@@ -177,6 +184,7 @@ class ConvertImage(DirectoryProcessor):
             trainer=self.arguments.trainer,
             blur_size=self.arguments.blur_size,
             seamless_clone=self.arguments.seamless_clone,
+            sharpen_image=self.arguments.sharpen_image,
             mask_type=self.arguments.mask_type,
             erosion_kernel_size=self.arguments.erosion_kernel_size,
             match_histogram=self.arguments.match_histogram,
