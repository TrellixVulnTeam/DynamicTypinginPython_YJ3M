commit af8ed1e189ac91f7b18fb86db969b682103d0d40
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Sun Jul 17 14:02:26 2016 -0700

    :smile_cat: Support single children of elements
    
    You can now do
    ```
    P(
      Strong('This is bold')
    )
    ```

diff --git a/renderer/src/renderTree.js b/renderer/src/renderTree.js
index 2e8248b1..3011cb80 100644
--- a/renderer/src/renderTree.js
+++ b/renderer/src/renderTree.js
@@ -13,17 +13,25 @@ export default function render(component, dependencyGraph, path=[]) {
 
     // Create list of child elements
     let children;
+
+    // No children
     if (!R.has('children', component) || !component.children) {
         children = [];
     }
-    else if (Array.isArray(component.children)) {
-        children = component.children.map((v, i) => {
-            return render(v, dependencyGraph, R.append(i, path));
-        });
-    }
+    // Text node child
     else if (typeof component.children === 'string') {
         children = [component.children];
     }
+    // One or multiple children
+    else {
+        const renderChild = (child, i) =>
+            render(child, dependencyGraph, R.append(i, path))
+
+        children = (Array.isArray(component.children) ?
+                component.children :
+                [component.children])
+            .map(renderChild);
+    }
 
     // Create wrapping parent element
     const element = R.has(component.type, Registry)
