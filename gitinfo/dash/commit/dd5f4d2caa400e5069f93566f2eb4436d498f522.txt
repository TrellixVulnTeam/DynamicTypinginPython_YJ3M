commit dd5f4d2caa400e5069f93566f2eb4436d498f522
Author: alexcjohnson <alex@plot.ly>
Date:   Tue Jul 9 15:37:57 2019 -0400

    include common fetch params in config

diff --git a/dash-renderer/src/AppContainer.react.js b/dash-renderer/src/AppContainer.react.js
index 8ed4e6f3..d28f6aaf 100644
--- a/dash-renderer/src/AppContainer.react.js
+++ b/dash-renderer/src/AppContainer.react.js
@@ -27,6 +27,15 @@ class UnconnectedAppContainer extends React.Component {
             document.getElementById('_dash-config').textContent
         );
 
+        // preset common request params in the config
+        config.fetch = {
+            credentials: 'same-origin',
+            headers: {
+                Accept: 'application/json',
+                'Content-Type': 'application/json',
+            },
+        };
+
         dispatch(setConfig(config));
     }
 
diff --git a/dash-renderer/src/actions/api.js b/dash-renderer/src/actions/api.js
index 06133b12..1db80177 100644
--- a/dash-renderer/src/actions/api.js
+++ b/dash-renderer/src/actions/api.js
@@ -1,55 +1,41 @@
-/* global fetch: true, document: true */
-import cookie from 'cookie';
-import {mergeRight} from 'ramda';
-import {onError} from '../actions';
+/* global fetch: true */
+import {mergeDeepRight} from 'ramda';
+import {onError, getCSRFHeader} from '../actions';
 import {urlBase} from '../utils';
 
-function GET(path) {
-    return fetch(path, {
-        method: 'GET',
-        credentials: 'same-origin',
-        headers: {
-            Accept: 'application/json',
-            'Content-Type': 'application/json',
-            'X-CSRFToken': cookie.parse(document.cookie)._csrf_token,
-        },
-    });
+function GET(path, fetchConfig) {
+    return fetch(
+        path,
+        mergeDeepRight(fetchConfig, {
+            method: 'GET',
+            headers: getCSRFHeader(),
+        })
+    );
 }
 
-function POST(path, body = {}, headers = {}) {
-    return fetch(path, {
-        method: 'POST',
-        credentials: 'same-origin',
-        headers: mergeRight(
-            {
-                Accept: 'application/json',
-                'Content-Type': 'application/json',
-                'X-CSRFToken': cookie.parse(document.cookie)._csrf_token,
-            },
-            headers
-        ),
-        body: body ? JSON.stringify(body) : null,
-    });
+function POST(path, fetchConfig, body = {}) {
+    return fetch(
+        path,
+        mergeDeepRight(fetchConfig, {
+            method: 'POST',
+            headers: getCSRFHeader(),
+            body: body ? JSON.stringify(body) : null,
+        })
+    );
 }
 
 const request = {GET, POST};
 
-export default function apiThunk(
-    endpoint,
-    method,
-    store,
-    id,
-    body,
-    headers = {}
-) {
+export default function apiThunk(endpoint, method, store, id, body) {
     return (dispatch, getState) => {
         const config = getState().config;
+        const url = `${urlBase(config)}${endpoint}`;
 
         dispatch({
             type: store,
             payload: {id, status: 'loading'},
         });
-        return request[method](`${urlBase(config)}${endpoint}`, body, headers)
+        return request[method](url, config.fetch, body)
             .then(res => {
                 const contentType = res.headers.get('content-type');
                 if (
diff --git a/dash-renderer/src/actions/index.js b/dash-renderer/src/actions/index.js
index d0012cd5..4cc06323 100644
--- a/dash-renderer/src/actions/index.js
+++ b/dash-renderer/src/actions/index.js
@@ -15,6 +15,7 @@ import {
     keys,
     lensPath,
     mergeLeft,
+    mergeDeepRight,
     pluck,
     propEq,
     reject,
@@ -49,6 +50,12 @@ export function hydrateInitialOutputs() {
     };
 }
 
+export function getCSRFHeader() {
+    return {
+        'X-CSRFToken': cookie.parse(document.cookie)._csrf_token,
+    };
+}
+
 function triggerDefaultState(dispatch, getState) {
     const {graphs} = getState();
     const {InputGraph, MultiGraph} = graphs;
@@ -627,17 +634,16 @@ function updateOutput(
     }
 
     /* eslint-disable consistent-return */
-    return fetch(`${urlBase(config)}_dash-update-component`, {
-        /* eslint-enable consistent-return */
-
-        method: 'POST',
-        headers: {
-            'Content-Type': 'application/json',
-            'X-CSRFToken': cookie.parse(document.cookie)._csrf_token,
-        },
-        credentials: 'same-origin',
-        body: JSON.stringify(payload),
-    })
+    return fetch(
+        `${urlBase(config)}_dash-update-component`,
+        mergeDeepRight(config.fetch, {
+            /* eslint-enable consistent-return */
+
+            method: 'POST',
+            headers: getCSRFHeader(),
+            body: JSON.stringify(payload),
+        })
+    )
         .then(function handleResponse(res) {
             const isRejected = () => {
                 const latestRequestIndex = findLastIndex(
