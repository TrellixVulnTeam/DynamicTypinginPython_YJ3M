commit 0d6b1e263b4aacf6f4719b10fc3cff694e4b4abc
Author: byron <byron@plot.ly>
Date:   Mon Jun 3 15:02:23 2019 -0400

    :truck: make all fixtures with dash_ prefix, so it has less chance to have name collision

diff --git a/dash/testing/plugin.py b/dash/testing/plugin.py
index 060435c4..7e7c0039 100644
--- a/dash/testing/plugin.py
+++ b/dash/testing/plugin.py
@@ -5,6 +5,7 @@ from selenium import webdriver
 
 from dash.testing.application_runners import ThreadedRunner, ProcessRunner
 from dash.testing.browser import Browser
+from dash.testing.composite import DashComposite
 
 WEBDRIVERS = {
     "Chrome": webdriver.Chrome,
@@ -25,26 +26,35 @@ def pytest_addoption(parser):
         help="Name of the selenium driver to use",
     )
 
+
 ###############################################################################
 # Fixtures
 ###############################################################################
 
 
 @pytest.fixture
-def thread_server():
+def dash_thread_server():
     """Start a local dash server in a new thread"""
     with ThreadedRunner() as starter:
         yield starter
 
 
 @pytest.fixture
-def process_server():
+def dash_process_server():
     """Start a Dash server with subprocess.Popen and waitress-serve"""
     with ProcessRunner() as starter:
         yield starter
 
 
 @pytest.fixture
-def br(request):
+def dash_br(request):
     with Browser(request.config.getoption("webdriver")) as browser:
         yield browser
+
+
+@pytest.fixture
+def dash_duo(request, dash_thread_server):
+    with DashComposite(
+        dash_thread_server, request.config.getoption("webdriver")
+    ) as dc:
+        yield dc
diff --git a/tests/unit/test_app_runners.py b/tests/unit/test_app_runners.py
index 64fb0690..4bd4ed43 100644
--- a/tests/unit/test_app_runners.py
+++ b/tests/unit/test_app_runners.py
@@ -7,7 +7,7 @@ import dash_html_components as html
 import dash
 
 
-def test_threaded_server_smoke(thread_server):
+def test_threaded_server_smoke(dash_thread_server):
     app = dash.Dash(__name__)
 
     app.layout = html.Div(
@@ -16,9 +16,8 @@ def test_threaded_server_smoke(thread_server):
             html.Div(id="output", children="hello thread"),
         ]
     )
-    thread_server(app, debug=True, use_reloader=False, use_debugger=True)
-    time.sleep(0.2)
-    r = requests.get(thread_server.url)
+    dash_thread_server(app, debug=True, use_reloader=False, use_debugger=True)
+    r = requests.get(dash_thread_server.url)
     assert r.status_code == 200, "the threaded server is reachable"
     assert 'id="react-entry-point"' in r.text, "the entrypoint is present"
 
@@ -26,9 +25,9 @@ def test_threaded_server_smoke(thread_server):
 @pytest.mark.skipif(
     sys.version_info < (3,), reason="requires python3 for process testing"
 )
-def test_process_server_smoke(process_server):
-    process_server("simple_app")
+def test_process_server_smoke(dash_process_server):
+    dash_process_server("simple_app")
     time.sleep(2.5)
-    r = requests.get(process_server.url)
+    r = requests.get(dash_process_server.url)
     assert r.status_code == 200, "the server is reachable"
     assert 'id="react-entry-point"' in r.text, "the entrypoint is present"
