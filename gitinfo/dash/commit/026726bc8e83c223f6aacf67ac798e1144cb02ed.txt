commit 026726bc8e83c223f6aacf67ac798e1144cb02ed
Author: byron <byron@plot.ly>
Date:   Tue Jun 18 12:30:01 2019 -0400

    :mushroom: add apis about tab and window storage

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 4c605937..b3ba7b80 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -3,6 +3,7 @@ import os
 import sys
 import logging
 import warnings
+from time import sleep as wait
 import percy
 
 from selenium import webdriver
@@ -18,7 +19,7 @@ from selenium.common.exceptions import WebDriverException, TimeoutException
 
 from dash.testing.wait import text_to_equal, style_to_equal
 from dash.testing.dash_page import DashPageMixin
-from dash.testing.errors import DashAppLoadingError
+from dash.testing.errors import DashAppLoadingError, BrowserError
 
 
 logger = logging.getLogger(__name__)
@@ -36,6 +37,8 @@ class Browser(DashPageMixin):
         self._last_ts = 0
         self._url = None
 
+        self._window_idx = 0  # switch browser tabs
+
         self.percy_runner = percy.Runner(
             loader=percy.ResourceLoader(
                 webdriver=self.driver,
@@ -191,6 +194,19 @@ class Browser(DashPageMixin):
                 )
             )
 
+    def toggle_window(self):
+        """switch between the current working window and the new opened one"""
+        if len(self.driver.window_handles) < 2:
+            raise BrowserError("there is no new opening window")
+
+        idx = (self._window_idx + 1) % 2
+        self.switch_window(idx=idx)
+        self._window_idx += 1
+
+    def switch_window(self, idx=0):
+        self.driver.switch_to.window(self.driver.window_handles[idx])
+        wait(0.5)
+
     def get_webdriver(self, remote):
         return (
             getattr(self, "_get_{}".format(self._browser))()
diff --git a/dash/testing/dash_page.py b/dash/testing/dash_page.py
index 3ba62af0..1d6843c7 100644
--- a/dash/testing/dash_page.py
+++ b/dash/testing/dash_page.py
@@ -35,3 +35,15 @@ class DashPageMixin(object):
         return self.driver.execute_script(
             "return window.store.getState().requestQueue"
         )
+
+    @property
+    def local_storage(self):
+        return self.driver.execute_script(
+            "return JSON.parse(window.localStorage.getItem('local'));"
+        )
+
+    @property
+    def session_storage(self):
+        return self.driver.execute_script(
+            "return JSON.parse(window.sessionStorage.getItem('session'));"
+        )
