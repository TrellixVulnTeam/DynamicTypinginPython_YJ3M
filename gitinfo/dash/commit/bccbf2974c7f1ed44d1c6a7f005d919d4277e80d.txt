commit bccbf2974c7f1ed44d1c6a7f005d919d4277e80d
Author: byron <byron@plot.ly>
Date:   Thu Jun 6 22:42:49 2019 -0400

    :recycle: polish API

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 7565f5ae..8511d330 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -10,6 +10,7 @@ from selenium.webdriver.support import expected_conditions as EC
 from selenium.webdriver.common.by import By
 from selenium.webdriver.support.wait import WebDriverWait
 from selenium.webdriver.chrome.options import Options
+from selenium.webdriver.common.keys import Keys
 from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
 from selenium.webdriver.common.action_chains import ActionChains
 
@@ -117,7 +118,7 @@ class Browser(DashPageMixin):
             EC.presence_of_element_located,
             ((By.CSS_SELECTOR, selector),),
             timeout,
-            "cannot find_element using the css selector",
+            "timeout {} => waiting for selector {}".format(timeout, selector),
         )
 
     def wait_for_style_to_equal(self, selector, style, val, timeout=None):
@@ -138,9 +139,9 @@ class Browser(DashPageMixin):
             msg="text -> {} not found within {}s".format(text, timeout),
         )
 
-    def wait_for_page(self, timeout=10):
+    def wait_for_page(self, url=None, timeout=10):
 
-        self.driver.get(self.server_url)
+        self.driver.get(self.server_url if url is None else url)
         try:
             self.wait_for_element_by_css_selector(
                 self.dash_entry_locator, timeout=timeout
@@ -212,6 +213,10 @@ class Browser(DashPageMixin):
     def _is_windows():
         return sys.platform == "win32"
 
+    def multiple_click(self, css_selector, clicks):
+        for _ in range(clicks):
+            self.driver.find_element(css_selector).click()
+
     def js_click(self, elem):
         """click in native javascript way
         note: this is NOT the recommended way to click"""
@@ -223,6 +228,17 @@ class Browser(DashPageMixin):
         except NoSuchElementException:
             logger.exception("mouse_click on wrong element")
 
+    def clear_input(self, elem):
+        (
+            ActionChains(self.driver)
+            .click(elem)
+            .send_keys(Keys.HOME)
+            .key_down(Keys.SHIFT)
+            .send_keys(Keys.END)
+            .key_up(Keys.SHIFT)
+            .send_keys(Keys.DELETE)
+        ).perform()
+
     def get_logs(self):
         """get_logs works only with chrome webdriver"""
         if self.driver.name.lower() == "chrome":
diff --git a/dash/testing/dash_page.py b/dash/testing/dash_page.py
index 8037d2af..3ba62af0 100644
--- a/dash/testing/dash_page.py
+++ b/dash/testing/dash_page.py
@@ -1,4 +1,13 @@
+from bs4 import BeautifulSoup
+
+
 class DashPageMixin(object):
+    def _get_dash_dom_by_attribute(self, attr):
+        return BeautifulSoup(
+            self.find_element(self.dash_entry_locator).get_attribute(attr),
+            "lxml",
+        )
+
     @property
     def devtools_error_count_locator(self):
         return ".test-devtools-error-count"
@@ -7,6 +16,14 @@ class DashPageMixin(object):
     def dash_entry_locator(self):
         return "#react-entry-point"
 
+    @property
+    def dash_outerhtml_dom(self):
+        return self._get_dash_dom_by_attribute('outerHTML')
+
+    @property
+    def dash_innerhtml_dom(self):
+        return self._get_dash_dom_by_attribute('innerHTML')
+
     @property
     def redux_state_paths(self):
         return self.driver.execute_script(
