commit 3d0d06ece64e4f6e1d714e722074dd32e2826e84
Author: alexcjohnson <alex@plot.ly>
Date:   Fri Nov 22 15:24:03 2019 -0500

    check for components as args not in children
    ie if you forget to make children an array, and just put it flat in component args

diff --git a/dash/development/base_component.py b/dash/development/base_component.py
index 070c4adc..4eb57810 100644
--- a/dash/development/base_component.py
+++ b/dash/development/base_component.py
@@ -94,6 +94,14 @@ class Component(with_metaclass(ComponentMeta, object)):
                         ", ".join(sorted(self._prop_names))
                     )
                 )
+
+            if k != "children" and isinstance(v, Component):
+                raise TypeError(
+                    "Component detected as a prop other than `children`\n" +
+                    "Did you forget to wrap multiple `children` in an array?" +
+                    "prop {} has value {}\n".format(k, repr(v))
+                )
+
             setattr(self, k, v)
 
     def to_plotly_json(self):
diff --git a/tests/unit/development/test_base_component.py b/tests/unit/development/test_base_component.py
index ac15f4cc..6da20789 100644
--- a/tests/unit/development/test_base_component.py
+++ b/tests/unit/development/test_base_component.py
@@ -4,6 +4,7 @@ import plotly
 import pytest
 
 from dash.development.base_component import Component
+import dash_html_components as html
 
 Component._prop_names = ("id", "a", "children", "style")
 Component._type = "TestComponent"
@@ -418,3 +419,19 @@ def test_debc025_iter():
         assert k in keys, "iteration produces key " + k
 
     assert len(keys) == len(keys2), "iteration produces no extra keys"
+
+
+def test_debc026_component_not_children():
+    children = [Component(id='a'), html.Div(id='b'), 'c', 1]
+    for i in range(len(children)):
+        # cycle through each component in each position
+        children = children[1:] + [children[0]]
+
+        # use html.Div because only real components accept positional args
+        html.Div(children)
+        # the first arg is children, and a single component works there
+        html.Div(children[0], id='x')
+
+        with pytest.raises(TypeError):
+            # If you forget the `[]` around children you get this:
+            html.Div(children[0], children[1], children[2], children[3])
