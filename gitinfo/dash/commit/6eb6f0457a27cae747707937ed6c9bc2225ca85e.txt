commit 6eb6f0457a27cae747707937ed6c9bc2225ca85e
Author: Ryan Patrick Kyle <ryan@plot.ly>
Date:   Thu Jun 20 15:12:25 2019 -0400

    :hammer: documentation for dynamic WCs

diff --git a/dash/development/_r_components_generation.py b/dash/development/_r_components_generation.py
index 46d490aa..85b2c934 100644
--- a/dash/development/_r_components_generation.py
+++ b/dash/development/_r_components_generation.py
@@ -166,18 +166,18 @@ def generate_class_string(name, props, project_shortname, prefix):
     wildcards = ""
     wildcard_declaration = ""
     wildcard_names = ""
+    default_paramtext = ""
+    default_argtext = ""
+    accepted_wildcards = ""
 
     if any("-*" in key for key in prop_keys):
+        accepted_wildcards = get_wildcards_r(prop_keys)
         wildcards = ", ..."
-        wildcard_declaration = (
-            "\n    wildcard_names = names(dash::dash_assert_valid_wildcards(...))\n"
-        )
+        wildcard_declaration = """
+    wildcard_names = names(dash_assert_valid_wildcards(attrib = list({}), ...))
+""".format(accepted_wildcards.replace("-*", ""))       # noqa:E501
         wildcard_names = ", wildcard_names"
 
-    default_paramtext = ""
-    default_argtext = ""
-    default_wildcards = ""
-
     # Produce a string with all property names other than WCs
     prop_names = ", ".join(
         "'{}'".format(p)
@@ -185,16 +185,6 @@ def generate_class_string(name, props, project_shortname, prefix):
         if "*" not in p and p not in ["setProps"]
     )
 
-    # in R, we set parameters with no defaults to NULL
-    # Here we'll do that if no default value exists
-    default_wildcards += ", ".join("'{}'".format(p)
-                                   for p in prop_keys if "*" in p)
-
-    if default_wildcards == "":
-        default_wildcards = "NULL"
-    else:
-        default_wildcards = "c({})".format(default_wildcards)
-
     # Filter props to remove those we don't want to expose
     for item in prop_keys[:]:
         if item.endswith("-*") or item in r_keywords or item == "setProps":
@@ -330,6 +320,9 @@ def write_help_file(name, props, description, prefix):
 
     has_wildcards = any("-*" in key for key in prop_keys)
 
+    if has_wildcards:
+        wildcards = get_wildcards_r(prop_keys)
+
     # Filter props to remove those we don't want to expose
     for item in prop_keys[:]:
         if item.endswith("-*") or item in r_keywords or item == "setProps":
@@ -347,8 +340,10 @@ def write_help_file(name, props, description, prefix):
     )
 
     if has_wildcards:
-        item_text += '\n\n\\item{...}{wildcards: `data-*` or `aria-*`}'
         default_argtext += ', ...'
+        item_text += """
+\n\n\\item{{...}}{{wildcards allowed have the form: `{}`}}
+""".format(wildcards)
 
     # in R, the online help viewer does not properly wrap lines for
     # the usage string -- we will hard wrap at 80 characters using
