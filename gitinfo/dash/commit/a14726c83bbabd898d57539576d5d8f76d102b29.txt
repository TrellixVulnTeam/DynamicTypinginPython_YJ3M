commit a14726c83bbabd898d57539576d5d8f76d102b29
Author: Marianne Corvellec <marianne.corvellec@ens-lyon.org>
Date:   Thu Mar 28 17:28:11 2019 +0100

    fix DeprecationWarning when importing ABCs

diff --git a/dash/development/base_component.py b/dash/development/base_component.py
index d4e30dea..94a65ac9 100644
--- a/dash/development/base_component.py
+++ b/dash/development/base_component.py
@@ -1,7 +1,10 @@
-import collections
 import abc
 import inspect
 import sys
+try:
+    from collections.abc import MutableSequence
+except ImportError:
+    from collections import MutableSequence
 
 import six
 
@@ -53,8 +56,7 @@ def is_number(s):
 def _check_if_has_indexable_children(item):
     if (not hasattr(item, 'children') or
             (not isinstance(item.children, Component) and
-             not isinstance(item.children, (tuple,
-                                            collections.MutableSequence)))):
+             not isinstance(item.children, (tuple, MutableSequence)))):
 
         raise KeyError
 
@@ -153,7 +155,7 @@ class Component(patch_collections_abc('MutableMapping')):
                 pass
 
         # if children is like a list
-        if isinstance(self.children, (tuple, collections.MutableSequence)):
+        if isinstance(self.children, (tuple, MutableSequence)):
             for i, item in enumerate(self.children):
                 # If the item itself is the one we're looking for
                 if getattr(item, 'id', None) == id:
@@ -229,7 +231,7 @@ class Component(patch_collections_abc('MutableMapping')):
                 yield "\n".join(["[*] " + children_string, p]), t
 
         # children is a list of components
-        elif isinstance(children, (tuple, collections.MutableSequence)):
+        elif isinstance(children, (tuple, MutableSequence)):
             for idx, i in enumerate(children):
                 list_path = "[{:d}] {:s} {}".format(
                     idx,
@@ -262,7 +264,7 @@ class Component(patch_collections_abc('MutableMapping')):
         elif isinstance(self.children, Component):
             length = 1
             length += len(self.children)
-        elif isinstance(self.children, (tuple, collections.MutableSequence)):
+        elif isinstance(self.children, (tuple, MutableSequence)):
             for c in self.children:
                 length += 1
                 if isinstance(c, Component):
