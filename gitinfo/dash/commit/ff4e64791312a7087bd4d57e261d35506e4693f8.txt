commit ff4e64791312a7087bd4d57e261d35506e4693f8
Author: byron <byron@plot.ly>
Date:   Wed Nov 6 10:27:18 2019 -0500

    final tuning

diff --git a/dash/testing/application_runners.py b/dash/testing/application_runners.py
index 2b23fa7b..616ff03f 100644
--- a/dash/testing/application_runners.py
+++ b/dash/testing/application_runners.py
@@ -260,13 +260,14 @@ class RRunner(ProcessRunner):
     def start(self, app, start_timeout=2, cwd=None):
         """Start the server with subprocess and Rscript."""
 
-        # app is a R string chunk
         if os.path.isfile(app) and os.path.exists(app):
             # app is already a file in a dir - use that as cwd
             if not cwd:
                 cwd = os.path.dirname(app)
                 logger.info("RRunner inferred cwd from app path: %s", cwd)
         else:
+            # app is a string chunk, we make a temporary folder to store app.R
+            # and its relevants assets
             self._tmp_app_path = os.path.join(
                 "/tmp" if not self.is_windows else os.getenv("TEMP"),
                 uuid.uuid4().hex,
diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 9664c5ee..6bde3338 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -121,6 +121,9 @@ class Browser(DashPageMixin):
                     sleep_first=True,
                 )
         except TestingTimeoutError:
+            # API will log the error but this TimeoutError should not block
+            # the test execution to continue and it will still do a snapshot
+            # as diff reference for the build run.
             logger.error(
                 "wait_for_callbacks failed => status of invalid rqs %s",
                 list(
diff --git a/dash/testing/dash_page.py b/dash/testing/dash_page.py
index a02dd274..b714a45f 100644
--- a/dash/testing/dash_page.py
+++ b/dash/testing/dash_page.py
@@ -44,7 +44,10 @@ class DashPageMixin(object):
         return self.driver.execute_script("return window.store")
 
     def _wait_for_callbacks(self):
-        if self.window_store and self.redux_state_rqs:
+        if self.window_store:
+            # note that there is still a small chance of Negative True
+            # where we get two earlier requests in the queue, this returns
+            # True but there are still more requests to come
             return all(
                 (
                     _.get("responseTime")
@@ -52,6 +55,7 @@ class DashPageMixin(object):
                     if _.get("controllerId")
                 )
             )
+
         return True
 
     def get_local_storage(self, store_id="local"):
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index c093d639..0d721d13 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -28,8 +28,7 @@ def until(
     while not res:
         if time.time() > end_time:
             raise TestingTimeoutError(msg)
-        time.sleep(poll * 2 if sleep_first else poll)
-        sleep_first = False
+        time.sleep(poll)
         res = wait_cond()
         logger.debug("poll => %s", time.time())
 
@@ -54,8 +53,7 @@ def until_not(
     while res:
         if time.time() > end_time:
             raise TestingTimeoutError(msg)
-        time.sleep(poll * 2 if sleep_first else poll)
-        sleep_first = False
+        time.sleep(poll)
         res = wait_cond()
         logger.debug("poll => %s", time.time())
 
