commit b373d0ddc5c36efaaaef37339ae04405bdfaa730
Author: byron <byron@plot.ly>
Date:   Tue Aug 20 01:59:01 2019 -0400

    python2 and 3 with future

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 10526bad..7279bf60 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -12,7 +12,7 @@ $ python3 -m venv .venv/dev
 # activate the virtualenv (on windows .venv\dev\scripts\activate)
 $ . .venv/dev/bin/activate
 # install dash and dependencies
-$ pip install -e .[testing,ci]
+$ pip install -e .[testing,ci]  # might need \ to espcae []
 $ cd dash-renderer
 # build renderer bundles, this will build all bundles from source code
 # the only true source of npm version is defined in package.json
diff --git a/dash/_utils.py b/dash/_utils.py
index 6cb98c20..5de99267 100644
--- a/dash/_utils.py
+++ b/dash/_utils.py
@@ -1,4 +1,6 @@
 # -*- coding: utf-8 -*-
+from __future__ import unicode_literals
+from builtins import str as text
 import shlex
 import sys
 import uuid
@@ -10,7 +12,6 @@ from functools import wraps
 
 import six
 
-
 logger = logging.getLogger()
 
 
@@ -134,32 +135,27 @@ def run_command_with_process(cmd):
     proc = subprocess.Popen(shlex.split(cmd, posix=sys.platform != "win32"))
     proc.wait()
     if proc.poll() is None:
-        logger.warning(u"🚨 trying to terminate subprocess in safe way")
+        logger.warning("🚨 trying to terminate subprocess in safe way")
         try:
             proc.communicate()
         except Exception:  # pylint: disable=broad-except
-            logger.exception(u"🚨 first try communicate failed")
+            logger.exception("🚨 first try communicate failed")
             proc.kill()
             proc.communicate()
 
 
 def compute_md5(path):
     with open(path) as fp:
-        content = fp.read()
-        try:
-            buf = unicode(content, 'utf-8').encode('utf-8')  # noqa:F821
-        except NameError:
-            buf = content.encode('utf-8')
-        return hashlib.md5(buf).hexdigest()
+        return hashlib.md5(text(fp.read()).encode("utf-8")).hexdigest()
 
 
 def job(msg=""):
     def wrapper(func):
         @wraps(func)
         def _wrapper(*args, **kwargs):
-            logger.info(u" 🏗️  %s ️️🏗️️ ", msg)
+            logger.info(" 🏗️  %s ️️🏗️️ ", msg)
             res = func(*args, **kwargs)
-            logger.info(u"::: 🍻🍻🍻 job done 🍻🍻🍻 :::")
+            logger.info("::: 🍻🍻🍻 job done 🍻🍻🍻 :::")
             return res
 
         return _wrapper
diff --git a/requires-install.txt b/requires-install.txt
index 1c918578..243eef78 100644
--- a/requires-install.txt
+++ b/requires-install.txt
@@ -1,8 +1,8 @@
 Flask>=1.0.2
-PyYAML>=5.1.1
 flask-compress
 plotly
 dash_renderer==1.0.0
 dash-core-components==1.1.1
 dash-html-components==1.0.0
 dash-table==4.1.0
+future
\ No newline at end of file
