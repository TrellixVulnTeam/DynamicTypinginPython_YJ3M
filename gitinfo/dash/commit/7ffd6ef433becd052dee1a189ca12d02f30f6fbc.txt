commit 7ffd6ef433becd052dee1a189ca12d02f30f6fbc
Author: byron <byron@plot.ly>
Date:   Fri May 31 14:59:15 2019 -0400

    :art: fix lint

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 44ba17cc..8aac1b0c 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -1,3 +1,4 @@
+# pylint: disable=missing-docstring
 import os
 import sys
 import logging
@@ -56,7 +57,7 @@ class Browser:
         snapshot_name = "{} - py{}.{}".format(
             name, sys.version_info.major, sys.version_info.minor
         )
-        logger.info("taking snapshot name => {}".format(snapshot_name))
+        logger.info("taking snapshot name => %s", snapshot_name)
         self.percy_runner.snapshot(name=snapshot_name)
 
     def _wait_for(self, method, args, timeout, msg):
@@ -94,7 +95,7 @@ class Browser:
             )
         except TimeoutException:
             logger.exception(
-                "dash server is not loaded within {} seconds".format(timeout)
+                "dash server is not loaded within %s seconds", timeout
             )
             raise DashAppLoadingError(
                 "the expected Dash react entry point cannot be loaded"
@@ -118,7 +119,8 @@ class Browser:
             )
         )
 
-    def _get_chrome(self):
+    @staticmethod
+    def _get_chrome():
         options = Options()
         options.add_argument("--no-sandbox")
 
@@ -134,7 +136,8 @@ class Browser:
         chrome.set_window_position(0, 0)
         return chrome
 
-    def _get_firefox(self):
+    @staticmethod
+    def _get_firefox():
 
         capabilities = DesiredCapabilities.FIREFOX
         capabilities["loggingPrefs"] = {"browser": "SEVERE"}
@@ -165,7 +168,7 @@ class Browser:
         )
 
     def reset_log_timestamp(self):
-        '''reset_log_timestamp only work with chrome webdrier'''
+        """reset_log_timestamp only work with chrome webdrier"""
         if self.driver.name == "chrome":
             entries = self.driver.get_log("browser")
             if entries:
diff --git a/dash/testing/plugin.py b/dash/testing/plugin.py
index e881e9f1..060435c4 100644
--- a/dash/testing/plugin.py
+++ b/dash/testing/plugin.py
@@ -13,15 +13,12 @@ WEBDRIVERS = {
 }
 
 
-# pylint: disable=missing-docstring
 def pytest_addoption(parser):
-
     # Add options to the pytest parser, either on the commandline or ini
     # TODO add more options for the selenium driver.
     dash = parser.getgroup("Dash", "Dash Integration Tests")
 
     dash.addoption(
-        "-w",
         "--webdriver",
         choices=tuple(WEBDRIVERS.keys()),
         default="Chrome",
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index df7d8718..1c6da05b 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -26,7 +26,7 @@ def until_not(
             raise TestingTimeoutError(msg)
 
 
-class text_to_equal(object):
+class text_to_equal(object):  # pylint: disable=too-few-public-methods
     def __init__(self, selector, text):
         self.selector = selector
         self.text = text
@@ -37,4 +37,3 @@ class text_to_equal(object):
             str(elem.text) == self.text
             or str(elem.get_attribute("value")) == self.text
         )
-
