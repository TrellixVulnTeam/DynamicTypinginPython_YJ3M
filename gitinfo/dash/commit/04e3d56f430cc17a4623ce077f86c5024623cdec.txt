commit 04e3d56f430cc17a4623ce077f86c5024623cdec
Author: alexcjohnson <alex@plot.ly>
Date:   Thu Jul 18 12:00:42 2019 -0400

    split out exports generation for unit testing

diff --git a/dash/development/_r_components_generation.py b/dash/development/_r_components_generation.py
index 337317c3..3a4590d0 100644
--- a/dash/development/_r_components_generation.py
+++ b/dash/development/_r_components_generation.py
@@ -622,6 +622,31 @@ def generate_exports(
         package_suggests,
         **kwargs
 ):
+    export_string = make_namespace_exports(components, prefix)
+
+    # Look for wildcards in the metadata
+    has_wildcards = False
+    for component_data in metadata.values():
+        if any(key.endswith('-*') for key in component_data['props']):
+            has_wildcards = True
+            break
+
+    # now, bundle up the package information and create all the requisite
+    # elements of an R package, so that the end result is installable either
+    # locally or directly from GitHub
+    generate_rpkg(
+        pkg_data,
+        rpkg_data,
+        project_shortname,
+        export_string,
+        package_depends,
+        package_imports,
+        package_suggests,
+        has_wildcards,
+    )
+
+
+def make_namespace_exports(components, prefix):
     export_string = ""
     for component in components:
         if (
@@ -676,27 +701,7 @@ def generate_exports(
 
     export_string += "\n".join("export({})".format(function)
                                for function in fnlist)
-
-    # Look for wildcards in the metadata
-    has_wildcards = False
-    for component_data in metadata.values():
-        if any(key.endswith('-*') for key in component_data['props']):
-            has_wildcards = True
-            break
-
-    # now, bundle up the package information and create all the requisite
-    # elements of an R package, so that the end result is installable either
-    # locally or directly from GitHub
-    generate_rpkg(
-        pkg_data,
-        rpkg_data,
-        project_shortname,
-        export_string,
-        package_depends,
-        package_imports,
-        package_suggests,
-        has_wildcards,
-    )
+    return export_string
 
 
 def get_r_prop_types(type_object):
