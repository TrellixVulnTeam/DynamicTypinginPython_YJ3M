commit e896169f79248ae965c903f21ca164f71ae03150
Author: alexcjohnson <alex@plot.ly>
Date:   Mon Feb 3 22:26:29 2020 -0500

    some test tweaks - linting, and hopefully robustifying graphs in percy

diff --git a/tests/integration/callbacks/test_layout_paths_with_callbacks.py b/tests/integration/callbacks/test_layout_paths_with_callbacks.py
index 061e22cb..8ac9d61a 100644
--- a/tests/integration/callbacks/test_layout_paths_with_callbacks.py
+++ b/tests/integration/callbacks/test_layout_paths_with_callbacks.py
@@ -117,12 +117,17 @@ def test_cblp001_radio_buttons_callbacks_generating_children(dash_duo):
             return {
                 "data": [
                     {
-                        "x": ["Call Counter"],
+                        "x": ["Call Counter for: {}".format(counterId)],
                         "y": [call_counts[counterId].value],
                         "type": "bar",
                     }
                 ],
-                "layout": {"title": value},
+                "layout": {
+                    "title": value,
+                    "width": 500,
+                    "height": 400,
+                    "margin": {"autoexpand": False}
+                },
             }
 
         return callback
diff --git a/tests/integration/renderer/test_iframe.py b/tests/integration/renderer/test_iframe.py
index 6a4a93f5..1f4cc919 100644
--- a/tests/integration/renderer/test_iframe.py
+++ b/tests/integration/renderer/test_iframe.py
@@ -31,7 +31,9 @@ def test_rdif001_sandbox_allow_scripts(dash_duo):
     @app.server.after_request
     def apply_cors(response):
         response.headers["Access-Control-Allow-Origin"] = "*"
-        response.headers["Access-Control-Allow-Headers"] = "Origin, X-Requested-With, Content-Type, Accept, Authorization"
+        response.headers["Access-Control-Allow-Headers"] = (
+            "Origin, X-Requested-With, Content-Type, Accept, Authorization"
+        )
         return response
 
     dash_duo.start_server(app)
diff --git a/tests/integration/renderer/test_persistence.py b/tests/integration/renderer/test_persistence.py
index 70c62d49..5c004daa 100644
--- a/tests/integration/renderer/test_persistence.py
+++ b/tests/integration/renderer/test_persistence.py
@@ -99,12 +99,18 @@ def test_rdps001_local_reload(dash_duo):
 
     rename_and_hide(dash_duo)
     # callback output
-    dash_duo.wait_for_text_to_equal('#out', 'names: [{}, b]; hidden: [c1]'.format(NEW_NAME))
+    dash_duo.wait_for_text_to_equal(
+        '#out',
+        'names: [{}, b]; hidden: [c1]'.format(NEW_NAME)
+    )
     check_table_names(dash_duo, [NEW_NAME])
 
     dash_duo.wait_for_page()
     # callback gets persisted values, not the values provided with the layout
-    dash_duo.wait_for_text_to_equal('#out', 'names: [{}, b]; hidden: [c1]'.format(NEW_NAME))
+    dash_duo.wait_for_text_to_equal(
+        '#out',
+        'names: [{}, b]; hidden: [c1]'.format(NEW_NAME)
+    )
     check_table_names(dash_duo, [NEW_NAME])
 
     # new persistence reverts
@@ -118,7 +124,10 @@ def test_rdps001_local_reload(dash_duo):
     # put back the old persistence, get the old values
     app.persistence.value = 1
     dash_duo.wait_for_page()
-    dash_duo.wait_for_text_to_equal('#out', 'names: [{}, b]; hidden: [c1]'.format(NEW_NAME))
+    dash_duo.wait_for_text_to_equal(
+        '#out',
+        'names: [{}, b]; hidden: [c1]'.format(NEW_NAME)
+    )
     check_table_names(dash_duo, [NEW_NAME])
 
     # falsy persistence disables it
@@ -146,7 +155,10 @@ def test_rdps002_session_reload(dash_duo):
 
     dash_duo.wait_for_page()
     # callback gets persisted values, not the values provided with the layout
-    dash_duo.wait_for_text_to_equal('#out', 'names: [{}, b]; hidden: [c1]'.format(NEW_NAME))
+    dash_duo.wait_for_text_to_equal(
+        '#out',
+        'names: [{}, b]; hidden: [c1]'.format(NEW_NAME)
+    )
     check_table_names(dash_duo, [NEW_NAME])
 
 
diff --git a/tests/integration/renderer/test_state_and_input.py b/tests/integration/renderer/test_state_and_input.py
index 7ffe1ddb..3192ce95 100644
--- a/tests/integration/renderer/test_state_and_input.py
+++ b/tests/integration/renderer/test_state_and_input.py
@@ -30,8 +30,8 @@ def test_rdsi001_state_and_inputs(dash_duo):
 
     dash_duo.start_server(app)
 
-    input_ = lambda: dash_duo.find_element("#input")
-    output_ = lambda: dash_duo.find_element("#output")
+    def input_(): return dash_duo.find_element("#input")
+    def output_(): return dash_duo.find_element("#output")
 
     assert (
         output_().text == 'input="Initial Input", state="Initial State"'
@@ -81,8 +81,8 @@ def test_rdsi002_event_properties_state_and_inputs(dash_duo):
 
     dash_duo.start_server(app)
 
-    btn = lambda: dash_duo.find_element("#button")
-    output = lambda: dash_duo.find_element("#output")
+    def btn(): return dash_duo.find_element("#button")
+    def output(): return dash_duo.find_element("#output")
 
     assert (
         output().text == 'input="Initial Input", state="Initial State"'
diff --git a/tests/integration/test_race_conditions.py b/tests/integration/test_race_conditions.py
index b597068e..b2616de2 100644
--- a/tests/integration/test_race_conditions.py
+++ b/tests/integration/test_race_conditions.py
@@ -42,7 +42,7 @@ def create_race_conditions_test(endpoints):
         def element_text(id):
             try:
                 return self.driver.find_element_by_id(id).text
-            except:
+            except Exception:
                 return ''
 
         app.server.before_request(delay)
diff --git a/tests/integration/test_scripts.py b/tests/integration/test_scripts.py
index 3900ea69..ed9d5660 100644
--- a/tests/integration/test_scripts.py
+++ b/tests/integration/test_scripts.py
@@ -1,31 +1,15 @@
-from multiprocessing import Value
-import datetime
 import time
 import pytest
 
-from bs4 import BeautifulSoup
-from selenium.webdriver.common.keys import Keys
-
-import dash_dangerously_set_inner_html
-import dash_flow_example
+from selenium.webdriver.common.by import By
 
 import dash_html_components as html
 import dash_core_components as dcc
 
-from dash import Dash, callback_context, no_update
-
-from dash.dependencies import Input, Output, State
-from dash.exceptions import (
-    PreventUpdate,
-    DuplicateCallbackOutput,
-    CallbackException,
-    MissingCallbackContextException,
-    InvalidCallbackReturnValue,
-    IncorrectTypeException,
-    NonExistentIdException,
-)
-from dash.testing.wait import until
-from selenium.webdriver.common.by import By
+from dash import Dash
+
+from dash.dependencies import Input, Output
+from dash.exceptions import PreventUpdate
 
 
 def findSyncPlotlyJs(scripts):
