commit b53f54a0439eceba3ee3ba7db69d763e73f91dc5
Author: Philippe Duval <philippe@plot.ly>
Date:   Tue Nov 20 16:11:08 2018 -0500

    Proper cli with argparse.

diff --git a/dash/development/component_generator.py b/dash/development/component_generator.py
index a06cd7ce..3f51b7c3 100644
--- a/dash/development/component_generator.py
+++ b/dash/development/component_generator.py
@@ -5,12 +5,18 @@ import sys
 import subprocess
 import shlex
 import os
+import argparse
 
 from .base_component import generate_class_file
 from .base_component import generate_imports
 from .base_component import generate_classes_files
 
 
+class _CombinedFormatter(argparse.ArgumentDefaultsHelpFormatter,
+                         argparse.RawDescriptionHelpFormatter):
+    pass
+
+
 # pylint: disable=too-many-locals
 def generate_components(component_src, project_shortname):
     is_windows = sys.platform == 'win32'
@@ -57,17 +63,20 @@ def generate_components(component_src, project_shortname):
 
 
 def cli():
-    if len(sys.argv) != 3:
-        print(
-            'Invalid number of arguments'
-            ' expected 2 but got {}\n\n'
-            'Arguments: src project_shortname'.format(len(sys.argv) - 1),
-            file=sys.stderr
-        )
-        sys.exit(1)
-    # pylint: disable=unbalanced-tuple-unpacking
-    src, project_shortname = sys.argv[1:]
-    generate_components(src, project_shortname)
+    parser = argparse.ArgumentParser(
+        prog='dash-generate-components',
+        formatter_class=_CombinedFormatter,
+        description='Generate dash components by extracting the metadata '
+        'using react-docgen. Then map the metadata to python classes.'
+    )
+    parser.add_argument('src', help='React components source directory.')
+    parser.add_argument(
+        'project_shortname',
+        help='Name of the project to export the classes files.'
+    )
+
+    args = parser.parse_args()
+    generate_components(args.src, args.project_shortname)
 
 
 if __name__ == '__main__':
