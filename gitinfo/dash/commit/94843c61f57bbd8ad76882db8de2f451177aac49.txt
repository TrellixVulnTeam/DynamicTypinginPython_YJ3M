commit 94843c61f57bbd8ad76882db8de2f451177aac49
Author: Chris P <christopher.parmer@gmail.com>
Date:   Fri May 15 12:54:25 2015 -0400

    render templates on app start, not index request

diff --git a/example-1-hello-world.py b/example-1-hello-world.py
index 9f1132b2..df361fc3 100644
--- a/example-1-hello-world.py
+++ b/example-1-hello-world.py
@@ -15,41 +15,43 @@ app.debug = True
 app.config['key'] = 'secret'
 socketio = SocketIO(app)
 
+# Write the HTML "includes" blocks to /templates/runtime/dash-1-hello-world
+# Alternatively, include the HTML yourself in that folder
+utils.write_templates(
+    {
+        'header': [
+            el('H1', {}, 'Hello Dash')
+        ],
 
-@app.route('/')
-def index():
-    utils.write_templates(
-        {
-            'header': [
-                el('H1', {}, 'Hello Dash')
-            ],
+        'controls': [
+            el('label', {}, 'Frequency'),
+            el('input', {
+                'type': 'range',
+                'class': 'u-full-width show-values',
+                'name': 'frequency',
+                'value': 0,
+                'min': 1,
+                'max': 10,
+                'step': 0.1
+            }),
+            el('label', {}, 'Title'),
+            el('input', {
+                'type': 'text',
+                'name': 'title',
+                'placeholder': 'Type away',
+                'class': 'u-full-width'
+            }, '')
+        ],
 
-            'controls': [
-                el('label', {}, 'Frequency'),
-                el('input', {
-                    'type': 'range',
-                    'class': 'u-full-width show-values',
-                    'name': 'frequency',
-                    'value': 0,
-                    'min': 1,
-                    'max': 10,
-                    'step': 0.1
-                }),
-                el('label', {}, 'Title'),
-                el('input', {
-                    'type': 'text',
-                    'name': 'title',
-                    'placeholder': 'Type away',
-                    'class': 'u-full-width'
-                }, '')
-            ],
+        'main_pane': [
+            graph('sine-wave')
+        ]
+    }, name
+)
 
-            'main_pane': [
-                graph('sine-wave')
-            ]
-        }, name
-    )
 
+@app.route('/')
+def index():
     return render_template('layouts/layout_single_column_and_controls.html',
                            app_name=name)
 
diff --git a/example-2-etch-a-sketch.py b/example-2-etch-a-sketch.py
index c4007251..80bfdc35 100644
--- a/example-2-etch-a-sketch.py
+++ b/example-2-etch-a-sketch.py
@@ -22,55 +22,58 @@ slider_x_id = 'X'
 slider_y_id = 'Y'
 title_input_id = 'title'
 
+# Write the HTML "includes" blocks to /templates/runtime/dash-2-etch-a-sketch
+# Alternatively, include the HTML yourself in that folder
+utils.write_templates(
+    {
+        'header': [
+            el('H1', {}, 'Etch-a-sketch')
+        ],
+
+        'controls': [
+            el('label', {}, 'X Position'),
+            el('input', {
+                'type': 'range',
+                'class': 'u-full-width show-values',
+                'name': slider_x_id,
+                'value': 0,
+                'min': 10,
+                'max': 2000,
+                'step': 10
+            }),
+
+            el('label', {}, 'Y Position'),
+            el('input', {
+                'type': 'range',
+                'class': 'u-full-width show-values',
+                'name': slider_y_id,
+                'value': 0,
+                'min': 10,
+                'max': 2000,
+                'step': 10
+            }),
+
+            el('label', {}, 'Title'),
+            el('input', {
+                'class': 'u-full-width',
+                'type': 'text',
+                'placeholder': 'Type away',
+                'name': title_input_id})
+        ],
+
+        'main_pane': [
+            graph(graph_id)
+        ]
+    }, name
+)
+
+
 last_x = deque([], 100)
 last_y = deque([], 100)
 
 
 @app.route('/')
 def index():
-    utils.write_templates(
-        {
-            'header': [
-                el('H1', {}, 'Etch-a-sketch')
-            ],
-
-            'controls': [
-                el('label', {}, 'X Position'),
-                el('input', {
-                    'type': 'range',
-                    'class': 'u-full-width show-values',
-                    'name': slider_x_id,
-                    'value': 0,
-                    'min': 10,
-                    'max': 2000,
-                    'step': 10
-                }),
-
-                el('label', {}, 'Y Position'),
-                el('input', {
-                    'type': 'range',
-                    'class': 'u-full-width show-values',
-                    'name': slider_y_id,
-                    'value': 0,
-                    'min': 10,
-                    'max': 2000,
-                    'step': 10
-                }),
-
-                el('label', {}, 'Title'),
-                el('input', {
-                    'class': 'u-full-width',
-                    'type': 'text',
-                    'placeholder': 'Type away',
-                    'name': title_input_id})
-            ],
-
-            'main_pane': [
-                graph(graph_id)
-            ]
-        }, name
-    )
-
     return render_template('layouts/layout_single_column_and_controls.html',
                            app_name=name)
 
diff --git a/example-3-click-events.py b/example-3-click-events.py
index ff75d842..d75deb15 100644
--- a/example-3-click-events.py
+++ b/example-3-click-events.py
@@ -16,17 +16,22 @@ socketio = SocketIO(app)
 from example_3_click_events_state import Dash
 dash = Dash()
 
+# Write the HTML "includes" blocks to /templates/runtime/dash-3-click-events
+# We're using the template "layout_two_column_and_controls" which uses the
+# includes blocks: 'controls.html', 'leftgraph.html', and 'rightgraph.html'.
+utils.write_templates(
+    {
+        # 'controls.html' is already written as a raw html file in
+        # templates/runtime/dash-3-click-events
+        'leftgraph': [graph('bubbles')],
+        'rightgraph': [graph('line-chart')]
+    }, name
+)
+
 
 @app.route('/')
 def index():
-    utils.write_templates(
-        {
-            # 'controls.html' is already written as a raw html file in
-            # templates/runtime/dash-3-click-events
-            'leftgraph': [graph('bubbles')],
-            'rightgraph': [graph('line-chart')]
-        }, name
-    )
+
     return render_template('layouts/layout_two_column_and_controls.html',
                            app_name=name)
 
diff --git a/example-4-tickers.py b/example-4-tickers.py
index a74efaee..7e04ff12 100644
--- a/example-4-tickers.py
+++ b/example-4-tickers.py
@@ -21,35 +21,34 @@ socketio = SocketIO(app)
 df_companies = pd.read_csv('companylist.csv')
 tickers = list(df_companies['Symbol'])
 
+# Write the HTML "includes" blocks to /templates/runtime/dash-4-tickers
+# We're using the template "layout_single_column_and_controls" which uses the
+# includes blocks: 'header.html', 'controls.html', and 'main_pane.html'.
+utils.write_templates(
+    {
+        'header': [
+            el('H1', {}, 'Yahoo Finance Explorer'),
+        ],
+        'controls': [
+            el('label', {'for': 'ticker'}, 'Ticker'),
+            el('input', {
+                'name': 'ticker',
+                'type': 'text',
+                'value': 'GOOG',
+                'class': 'u-full-width'
+            }, '')
+        ],
+        'main_pane': [graph('line-chart')]
+    }, name
+)
+
 
 @app.route('/')
 def index():
-    utils.write_templates(
-        {
-            'header': [
-                el('H1', {}, 'Yahoo Finance Explorer'),
-            ],
-            'controls': [
-                el('label', {'for': 'ticker'}, 'Ticker'),
-                el('input', {
-                    'name': 'ticker',
-                    'type': 'text',
-                    'value': 'GOOG',
-                    'class': 'u-full-width'
-                }, '')
-            ],
-            'main_pane': [graph('line-chart')]
-        }, name
-    )
     return render_template('layouts/layout_single_column_and_controls.html',
                            app_name=name)
 
 
-@socketio.on('pong')
-def pong(app_state):
-    update_graph(app_state)
-
-
 @socketio.on('replot')
 def replot(app_state):
     update_graph(app_state)
@@ -57,7 +56,6 @@ def replot(app_state):
 
 def update_graph(app_state):
     print app_state
-
     ticker = app_state['ticker']
     if ticker not in tickers:
         print ticker, 'not in tickers'
