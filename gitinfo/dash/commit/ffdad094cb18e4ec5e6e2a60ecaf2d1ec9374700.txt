commit ffdad094cb18e4ec5e6e2a60ecaf2d1ec9374700
Author: Ryan Marren <rymarr@tuta.io>
Date:   Thu Aug 2 23:02:24 2018 -0400

    Expandable error boundaries

diff --git a/src/ComponentErrorBoundary.react.js b/src/ComponentErrorBoundary.react.js
index b08b1bb1..4a1b5cc0 100644
--- a/src/ComponentErrorBoundary.react.js
+++ b/src/ComponentErrorBoundary.react.js
@@ -5,24 +5,47 @@ export default class ComponentErrorBoundary extends Component {
   constructor(props) {
     super(props);
     this.state = { hadError: false, error: {}, info: {} };
+    this.togglePopOver = this.togglePopOver.bind(this);
   }
 
   componentDidCatch(error, info) {
     this.setState({
       hadError: true,
+      popoverOpen: false,
       error,
       info
     });
   }
 
+  togglePopOver() {
+    this.setState({
+      popoverOpen: !this.state.popoverOpen
+    });
+  }
+
   render() {
     const { type, id } = this.props;
     if (this.state.hadError) {
-      return (<span
-        style={{
-          padding: '10px',
-          backgroundColor: 'red'
-        }}>{"ERROR! In component with id=" + id + " of type " + type}</span>)
+      return (
+        <div
+          onClick={this.togglePopOver}
+          style={{
+            padding: '5px',
+            backgroundColor: 'rgb(255, 0, 0, .7)',
+            border: '1px solid black',
+            borderRadius: '2px',
+            display: 'inline-block'
+          }}>
+          <p>{"ERROR!"}</p>
+          <div
+            style={this.state.popoverOpen ? {'display': 'inline'} : {'display': 'none'}}
+            toggle={this.togglePopOver}
+          >
+            <strong>{"Error in " + type + '(id=' + id + ')'}</strong>
+            <p>{this.state.error.name + " -- " + this.state.error.message}</p>
+          </div>
+        </div>
+      )
     }
     return this.props.children;
   }
