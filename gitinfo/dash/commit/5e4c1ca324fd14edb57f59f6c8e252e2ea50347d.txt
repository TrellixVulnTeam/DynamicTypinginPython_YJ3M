commit 5e4c1ca324fd14edb57f59f6c8e252e2ea50347d
Author: Philippe Duval <philippe@plot.ly>
Date:   Mon Sep 17 14:22:48 2018 -0400

    Support reloading css files only.

diff --git a/src/components/core/Reloader.react.js b/src/components/core/Reloader.react.js
index 1e993939..8d4e32c4 100644
--- a/src/components/core/Reloader.react.js
+++ b/src/components/core/Reloader.react.js
@@ -22,6 +22,7 @@ class Reloader extends React.Component {
                 disabled: true
             }
         }
+        this._head = document.querySelector('head');
     }
 
     componentDidUpdate() {
@@ -41,9 +42,49 @@ class Reloader extends React.Component {
                     || !R.all(R.map(x => R.contains(x, this.state.packages),
                         reloadRequest.content.packages))
                 ) {
-                    // Assets file have changed
-                    // or a component lib has been added/removed
-                    window.top.location.reload();
+                    // Look if it was a css file.
+                    let was_css = false;
+                    for (let a of reloadRequest.content.files) {
+                        if (a.is_css) {
+                            was_css = true;
+                            const nodesToDisable = [];
+
+                            // Search for the old file by xpath.
+                            const it = document.evaluate(
+                                `//link[contains(@href, "${a.url}")]`,
+                                this._head
+                            );
+                            let node = it.iterateNext();
+
+                            while (node) {
+                                nodesToDisable.push(node);
+                                node = it.iterateNext();
+                            }
+                            nodesToDisable.forEach(
+                                n => n.setAttribute('disabled', 'disabled'));
+
+                            const link = document.createElement('link');
+                            link.href = `${a.url}?m=${a.modified}`;
+                            link.type = 'text/css';
+                            link.rel = 'stylesheet';
+                            this._head.appendChild(link);
+                        } else {
+                            // If there's another kind of file here do a hard reload.
+                            was_css = false;
+                            break;
+                        }
+                    }
+                    if (!was_css) {
+                        // Assets file have changed
+                        // or a component lib has been added/removed
+                        window.top.location.reload();
+                    } else {
+                        // Since it's only a css reload,
+                        // we just change the hash.
+                        this.setState({
+                            hash: reloadRequest.content.reloadHash
+                        })
+                    }
                 } else {
                     dispatch({'type': 'RELOAD'});
                 }
