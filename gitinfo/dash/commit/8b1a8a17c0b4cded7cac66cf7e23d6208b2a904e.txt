commit 8b1a8a17c0b4cded7cac66cf7e23d6208b2a904e
Author: Chris P <chris@plot.ly>
Date:   Sat Mar 30 17:24:41 2019 -0400

    :truck: move clientside update logic into a function

diff --git a/src/actions/index.js b/src/actions/index.js
index c9ba75ac..f64d090f 100644
--- a/src/actions/index.js
+++ b/src/actions/index.js
@@ -531,36 +531,38 @@ function updateOutput(
             return;
         }
 
-        const [outputId, outputProp] = payload.output.split('.');
-        const updatedProps = {
-            [outputProp]: returnValue,
-        };
+        function updateOutput(outputIdAndProp, outputValue) {
+            const [outputId, outputProp] = outputIdAndProp.split('.');
+            const updatedProps = {
+                [outputProp]: outputValue,
+            };
 
-        /*
-         * Update the request queue by treating a successful clientside
-         * like a succesful serverside response (200 status code)
-         */
-        updateRequestQueue(false, STATUS.OK);
+            /*
+             * Update the request queue by treating a successful clientside
+             * like a succesful serverside response (200 status code)
+             */
+            updateRequestQueue(false, STATUS.OK);
 
-        // Update the layout with the new result
-        dispatch(
-            updateProps({
-                itempath: getState().paths[outputId],
-                props: updatedProps,
-                source: 'response',
-            })
-        );
+            // Update the layout with the new result
+            dispatch(
+                updateProps({
+                    itempath: getState().paths[outputId],
+                    props: updatedProps,
+                    source: 'response',
+                })
+            );
 
-        /*
-         * This output could itself be a serverside or clientside input
-         * to another function
-         */
-        dispatch(
-            notifyObservers({
-                id: outputId,
-                props: updatedProps,
-            })
-        );
+            /*
+             * This output could itself be a serverside or clientside input
+             * to another function
+             */
+            dispatch(
+                notifyObservers({
+                    id: outputId,
+                    props: updatedProps,
+                })
+            );
+        }
 
         /*
          * Note that unlike serverside updates, we're not handling
