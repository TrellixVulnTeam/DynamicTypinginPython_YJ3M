commit 402a65de342d1252ca886f9ace583ecdbff84de0
Author: Chris P <chris@plot.ly>
Date:   Wed Apr 10 19:44:33 2019 -0700

    fixes to thread the backend through the UI

diff --git a/src/actions/index.js b/src/actions/index.js
index 28211226..bbd40d82 100644
--- a/src/actions/index.js
+++ b/src/actions/index.js
@@ -797,11 +797,15 @@ function updateOutput(
             });
         })
         .catch(err => {
+            // Handle html & JSON error responses
             err.text().then(text => {
                 dispatch(
                     onError({
                         type: 'backEnd',
-                        errorPage: text,
+                        error: {
+                            message: `Callack error updating ${payload.output}`,
+                            html: text,
+                        }
                     })
                 );
             });
diff --git a/src/components/error/GlobalErrorOverlay.react.js b/src/components/error/GlobalErrorOverlay.react.js
index 4597739f..409164c4 100644
--- a/src/components/error/GlobalErrorOverlay.react.js
+++ b/src/components/error/GlobalErrorOverlay.react.js
@@ -12,19 +12,17 @@ export default class GlobalErrorOverlay extends Component {
 
     render() {
         const {resolve, visible, error, toastsEnabled} = this.props;
-        let backEndErrors;
         let frontEndErrors;
         if (toastsEnabled) {
             let errors = [];
             if (error.frontEnd.length) {
                 errors = error.frontEnd;
             }
-            if (!isEmpty(error.backEnd)) {
-                errors.push({error: {
-                    message: 'Python exception',
-                    html: error.backEnd.errorPage,
-                }});
-            }
+
+            error.backEnd.forEach(backEndError => {
+                errors.push(backEndError);
+            });
+
             frontEndErrors = (
                 <FrontEndErrorContainer
                     errors={errors}
diff --git a/src/components/error/menu/DebugMenu.react.js b/src/components/error/menu/DebugMenu.react.js
index b2ceedb0..b6198498 100644
--- a/src/components/error/menu/DebugMenu.react.js
+++ b/src/components/error/menu/DebugMenu.react.js
@@ -29,7 +29,7 @@ class DebugMenu extends Component {
     }
     render() {
         const {opened, alertsOpened, toastsEnabled} = this.state;
-        const {errors, resolveError, dispatch} = this.props;
+        const {error, resolveError, dispatch} = this.props;
 
         const menuClasses = opened
             ? 'dash-debug-menu dash-debug-menu--opened'
@@ -131,15 +131,11 @@ class DebugMenu extends Component {
         );
 
         const alertsLabel =
-            errors.frontEnd.length > 0 && !opened ? (
+            (error.frontEnd.length + error.backEnd.length) > 0 && !opened ? (
                 <div className="dash-debug-alert-label">
                     <div className="dash-debug-alert">
                         <ErrorIcon className="dash-debug-alert-container__icon" />
-                        {errors.frontEnd.length}
-                    </div>
-                    <div className="dash-debug-alert">
-                        <WarningIcon className="dash-debug-alert-container__icon dash-debug-alert-container__icon--warning" />
-                        0
+                        {error.frontEnd.length + error.backEnd.length}
                     </div>
                 </div>
             ) : null;
@@ -157,7 +153,7 @@ class DebugMenu extends Component {
                     resolve={(type, myId) => resolveError(dispatch, type, myId)}
                     error={errors}
                     visible={
-                        !(isEmpty(errors.backEnd) && isEmpty(errors.frontEnd))
+                        !(isEmpty(error.backEnd) && isEmpty(error.frontEnd))
                     }
                     toastsEnabled={toastsEnabled}
                 >
@@ -170,7 +166,7 @@ class DebugMenu extends Component {
 
 DebugMenu.propTypes = {
     children: PropTypes.object,
-    errors: PropTypes.object,
+    error: PropTypes.object,
     resolveError: PropTypes.function,
     dispatch: PropTypes.function,
 };
