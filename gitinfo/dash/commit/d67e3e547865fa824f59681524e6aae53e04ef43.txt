commit d67e3e547865fa824f59681524e6aae53e04ef43
Author: byron <byron@plot.ly>
Date:   Fri May 24 18:13:46 2019 -0400

    :white_check_mark: add dash smoke test with fixtures

diff --git a/dash/testing/application_runners.py b/dash/testing/application_runners.py
index 527b7065..ec0304c3 100644
--- a/dash/testing/application_runners.py
+++ b/dash/testing/application_runners.py
@@ -184,9 +184,7 @@ class ProcessRunner(BaseDashRunner):
         logger.debug("start dash process with %s", args)
         try:
             self.proc = subprocess.Popen(
-                args,
-                stdout=subprocess.PIPE,
-                stderr=subprocess.PIPE,
+                args, stdout=subprocess.PIPE, stderr=subprocess.PIPE
             )
         except (OSError, ValueError):
             self.started = False
@@ -206,7 +204,8 @@ class ProcessRunner(BaseDashRunner):
         except _except:
             logger.warning(
                 "subprocess terminate timeout %s reached, trying to kill "
-                "the subprocess in a safe manner", self.stop_timeout
+                "the subprocess in a safe manner",
+                self.stop_timeout,
             )
             self.proc.kill()
             return self.proc.communicate()
diff --git a/tests/unit/dash/app_assets/__init__.py b/tests/unit/dash/app_assets/__init__.py
new file mode 100644
index 00000000..e69de29b
diff --git a/tests/unit/dash/app_assets/simple_app.py b/tests/unit/dash/app_assets/simple_app.py
new file mode 100644
index 00000000..2e7d0c34
--- /dev/null
+++ b/tests/unit/dash/app_assets/simple_app.py
@@ -0,0 +1,38 @@
+# pylint: disable=missing-docstring
+import dash
+from dash.dependencies import Output, Input
+from dash.exceptions import PreventUpdate
+
+import dash_html_components as html
+import dash_core_components as dcc
+
+app = dash.Dash(__name__)
+
+app.layout = html.Div([
+    dcc.Input(id='value', placeholder='my-value'),
+    html.Div(['You entered: ', html.Span(id='out')]),
+    html.Button('style-btn', id='style-btn'),
+    html.Div('style-container', id='style-output'),
+])
+
+
+@app.callback(Output('out', 'children'), [Input('value', 'value')])
+def on_value(value):
+    if value is None:
+        raise PreventUpdate
+
+    return value
+
+
+@app.callback(
+    Output('style-output', 'style'), [Input('style-btn', 'n_clicks')]
+)
+def on_style(value):
+    if value is None:
+        raise PreventUpdate
+
+    return {'padding': '10px'}
+
+
+if __name__ == '__main__':
+    app.run_server(debug=True, port=10850)
\ No newline at end of file
diff --git a/tests/unit/dash/test_app_runners.py b/tests/unit/dash/test_app_runners.py
new file mode 100644
index 00000000..4aa8bdb7
--- /dev/null
+++ b/tests/unit/dash/test_app_runners.py
@@ -0,0 +1,29 @@
+import time
+import requests
+
+import dash
+import dash_html_components as html
+
+
+def test_threaded_server_smoke(thread_server):
+    app = dash.Dash(__name__)
+
+    app.layout = html.Div(
+        [
+            html.Button("click me", id="clicker"),
+            html.Div(id="output", children="hello thread"),
+        ]
+    )
+    thread_server(app, debug=True, use_reloader=False, use_debugger=True)
+    time.sleep(0.2)
+    r = requests.get(thread_server.url)
+    assert r.status_code == 200, "the threaded server is reachable"
+    assert 'id="react-entry-point"' in r.text, "the entrypoint is present"
+
+
+def test_process_server_smoke(process_server):
+    process_server("tests.unit.dash.app_assets.simple_app")
+    time.sleep(2.5)
+    r = requests.get(process_server.url)
+    assert r.status_code == 200, "the server is reachable"
+    assert 'id="react-entry-point"' in r.text, "the entrypoint is present"
