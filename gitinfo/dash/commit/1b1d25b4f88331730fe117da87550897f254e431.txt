commit 1b1d25b4f88331730fe117da87550897f254e431
Author: chriddyp <chris@plot.ly>
Date:   Mon Sep 18 23:31:51 2017 -0400

    centralize percy calls and add python version to their names

diff --git a/tests/IntegrationTests.py b/tests/IntegrationTests.py
index 347f4981..c6c65b2b 100644
--- a/tests/IntegrationTests.py
+++ b/tests/IntegrationTests.py
@@ -10,10 +10,16 @@ import percy
 import time
 import unittest
 import os
+import sys
 
 
 class IntegrationTests(unittest.TestCase):
 
+    def percy_snapshot(name=''):
+        self.percy_snapshot(
+            name='{} - {}'.format(name, sys.version_info)
+        )
+
     @classmethod
     def setUpClass(cls):
         print('PERCY_PARALLEL_NONCE')
diff --git a/tests/test_render.py b/tests/test_render.py
index 27d19ce1..093313d0 100644
--- a/tests/test_render.py
+++ b/tests/test_render.py
@@ -392,7 +392,7 @@ class Tests(IntegrationTests):
             []
         )
 
-        self.percy_runner.snapshot(name='layout')
+        self.percy_snapshot(name='layout')
 
         assert_clean_console(self)
 
@@ -424,7 +424,7 @@ class Tests(IntegrationTests):
 
         output1 = self.wait_for_element_by_id('output-1')
         wait_for(lambda: output1.text == 'initial value')
-        self.percy_runner.snapshot(name='simple-callback-1')
+        self.percy_snapshot(name='simple-callback-1')
 
         input1 = self.wait_for_element_by_id('input')
         input1.clear()
@@ -433,7 +433,7 @@ class Tests(IntegrationTests):
 
         output1 = lambda: self.wait_for_element_by_id('output-1')
         wait_for(lambda: output1().text == 'hello world')
-        self.percy_runner.snapshot(name='simple-callback-2')
+        self.percy_snapshot(name='simple-callback-2')
 
         self.assertEqual(
             call_count.value,
@@ -511,7 +511,7 @@ class Tests(IntegrationTests):
                 </div>'''.replace('\n', '').replace('  ', '')
             )
         )
-        self.percy_runner.snapshot(name='callback-generating-function-1')
+        self.percy_snapshot(name='callback-generating-function-1')
 
         # the paths should include these new output IDs
         self.assertEqual(
@@ -551,7 +551,7 @@ class Tests(IntegrationTests):
             ),
             []
         )
-        self.percy_runner.snapshot(name='callback-generating-function-2')
+        self.percy_snapshot(name='callback-generating-function-2')
 
         assert_clean_console(self)
 
@@ -767,7 +767,7 @@ class Tests(IntegrationTests):
             generic_chapter_assertions('chapter1')
 
         chapter1_assertions()
-        self.percy_runner.snapshot(name='chapter-1')
+        self.percy_snapshot(name='chapter-1')
 
         # switch chapters
         (self.driver.find_elements_by_css_selector(
@@ -776,7 +776,7 @@ class Tests(IntegrationTests):
 
         # sleep just to make sure that no calls happen after our check
         time.sleep(2)
-        self.percy_runner.snapshot(name='chapter-2')
+        self.percy_snapshot(name='chapter-2')
         wait_for(lambda: call_counts['body'].value == 2)
         wait_for(lambda: call_counts['chapter2-graph'].value == 1)
         wait_for(lambda: call_counts['chapter2-label'].value == 1)
@@ -821,7 +821,7 @@ class Tests(IntegrationTests):
         )[2]).click()
         # sleep just to make sure that no calls happen after our check
         time.sleep(2)
-        self.percy_runner.snapshot(name='chapter-3')
+        self.percy_snapshot(name='chapter-3')
         wait_for(lambda: call_counts['body'].value == 3)
         wait_for(lambda: call_counts['chapter3-graph'].value == 1)
         wait_for(lambda: call_counts['chapter3-label'].value == 1)
@@ -874,7 +874,7 @@ class Tests(IntegrationTests):
             self.driver.find_element_by_id('body').text ==
             'Just a string'
         ))
-        self.percy_runner.snapshot(name='chapter-4')
+        self.percy_snapshot(name='chapter-4')
 
         # each element should exist in the dom
         paths = self.driver.execute_script(
@@ -893,7 +893,7 @@ class Tests(IntegrationTests):
         )[0]).click()
         time.sleep(0.5)
         chapter1_assertions()
-        self.percy_runner.snapshot(name='chapter-1-again')
+        self.percy_snapshot(name='chapter-1-again')
 
         # switch to 5
         (self.driver.find_elements_by_css_selector(
@@ -911,7 +911,7 @@ class Tests(IntegrationTests):
         chapter5_button().click()
         wait_for(lambda: chapter5_div().text == chapter5_output_children)
         time.sleep(0.5)
-        self.percy_runner.snapshot(name='chapter-5')
+        self.percy_snapshot(name='chapter-5')
         self.assertEqual(call_counts['chapter5-output'].value, 1)
 
     def test_dependencies_on_components_that_dont_exist(self):
@@ -946,7 +946,7 @@ class Tests(IntegrationTests):
 
         el = self.wait_for_element_by_id('output-1')
         wait_for(lambda: el.text == 'initial value')
-        self.percy_runner.snapshot(name='dependencies')
+        self.percy_snapshot(name='dependencies')
         time.sleep(1.0)
         self.assertEqual(output_1_call_count.value, 1)
         self.assertEqual(output_2_call_count.value, 0)
@@ -1445,7 +1445,7 @@ class Tests(IntegrationTests):
 
         time.sleep(5)
 
-        self.percy_runner.snapshot(
+        self.percy_snapshot(
             name='test_rendering_layout_calls_callback_once_per_output'
         )
 
@@ -1496,7 +1496,7 @@ class Tests(IntegrationTests):
 
         time.sleep(5)
 
-        self.percy_runner.snapshot(
+        self.percy_snapshot(
             name='test_rendering_new_content_calls_callback_once_per_output'
         )
 
