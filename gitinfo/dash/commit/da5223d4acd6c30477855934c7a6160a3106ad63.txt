commit da5223d4acd6c30477855934c7a6160a3106ad63
Author: Philippe Duval <philippe@plot.ly>
Date:   Wed Oct 31 16:10:09 2018 -0400

    Refactor component registration.

diff --git a/dash/development/base_component.py b/dash/development/base_component.py
index 44c95521..9172c8a7 100644
--- a/dash/development/base_component.py
+++ b/dash/development/base_component.py
@@ -3,6 +3,25 @@ import copy
 import os
 import inspect
 from ._all_keywords import kwlist
+import keyword
+import six
+
+
+class ComponentRegistry(type):
+    """Just importing a component lib will make it be loaded on the index"""
+
+    component_registry = set()
+
+    def __new__(mcs, name, bases, attributes):
+        component = type.__new__(mcs, name, bases, attributes)
+        if name == 'Component':
+            # Don't do the base component
+            return component
+
+        module = attributes['__module__'].split('.')[0]
+        mcs.component_registry.add(module)
+
+        return component
 
 
 def is_number(s):
@@ -53,7 +72,8 @@ def _explicitize_args(func):
     return wrapper
 
 
-class Component(collections.MutableMapping):
+@six.add_metaclass(ComponentRegistry)
+class Component:
     class _UNDEFINED(object):
         def __repr__(self):
             return 'undefined'
diff --git a/dash/resources.py b/dash/resources.py
index aa1ce871..f12c4a99 100644
--- a/dash/resources.py
+++ b/dash/resources.py
@@ -1,9 +1,9 @@
-from copy import copy
 import json
 import warnings
 import os
+import sys
 
-from .development.base_component import Component
+from .development.base_component import ComponentRegistry
 
 
 # pylint: disable=old-style-class
@@ -60,40 +60,15 @@ class Resources:
 
     def get_all_resources(self, dev_bundles=False):
         all_resources = []
-        if self.config.infer_from_layout:
-            all_resources = (
-                self.get_inferred_resources() + self._resources
-            )
-        else:
-            all_resources = self._resources
 
-        return self._filter_resources(all_resources, dev_bundles)
-
-    def get_inferred_resources(self):
-        namespaces = []
-        resources = []
-        layout = self.layout
-
-        def extract_resource_from_component(component):
-            # pylint: disable=protected-access
-            if (isinstance(component, Component) and
-                    component._namespace not in namespaces):
+        for mod in ComponentRegistry.component_registry:
+            # take the component lib module and take the _resource_dist.
+            m = sys.modules[mod]
+            all_resources.extend(getattr(m, self.resource_name, []))
 
-                namespaces.append(component._namespace)
+        all_resources.extend(self._resources)
 
-                if hasattr(component, self.resource_name):
-
-                    component_resources = copy(
-                        getattr(component, self.resource_name)
-                    )
-                    for r in component_resources:
-                        r['namespace'] = component._namespace
-                    resources.extend(component_resources)
-
-        extract_resource_from_component(layout)
-        for t in layout.traverse():
-            extract_resource_from_component(t)
-        return resources
+        return self._filter_resources(all_resources, dev_bundles)
 
 
 class Css:
@@ -111,9 +86,6 @@ class Css:
     def get_all_css(self):
         return self._resources.get_all_resources()
 
-    def get_inferred_css_dist(self):
-        return self._resources.get_inferred_resources()
-
     # pylint: disable=old-style-class, no-init, too-few-public-methods
     class config:
         infer_from_layout = True
@@ -134,9 +106,6 @@ class Scripts:  # pylint: disable=old-style-class
     def get_all_scripts(self, dev_bundles=False):
         return self._resources.get_all_resources(dev_bundles)
 
-    def get_inferred_scripts(self):
-        return self._resources.get_inferred_resources()
-
     # pylint: disable=old-style-class, no-init, too-few-public-methods
     class config:
         infer_from_layout = True
