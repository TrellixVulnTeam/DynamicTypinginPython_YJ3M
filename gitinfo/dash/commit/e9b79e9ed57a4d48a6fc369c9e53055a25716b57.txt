commit e9b79e9ed57a4d48a6fc369c9e53055a25716b57
Author: byron <byron@plot.ly>
Date:   Mon Nov 4 15:39:22 2019 -0500

    make wait more flexible

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 025879ec..8f8ebc7d 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -114,7 +114,12 @@ class Browser(DashPageMixin):
         logger.info("taking snapshot name => %s", snapshot_name)
         try:
             if wait_for_callbacks:
-                until(self._wait_for_callbacks, timeout=10, poll=0.5)
+                until(
+                    self._wait_for_callbacks,
+                    timeout=10,
+                    poll=0.5,
+                    sleep_first=True,
+                )
         except TestingTimeoutError:
             self.driver.refresh()
             logger.debug("rq full content %s", self.redux_state_rqs)
@@ -128,7 +133,9 @@ class Browser(DashPageMixin):
             )
             # for snapshot intensive case, it might happens that
             # the selenium get stuck, give it one more chance after refresh
-            until(self._wait_for_callbacks, timeout=60, poll=1)
+            until(
+                self._wait_for_callbacks, timeout=60, poll=1, sleep_first=True
+            )
 
         self.percy_runner.snapshot(name=snapshot_name)
 
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index 3f269d53..0d721d13 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -13,9 +13,11 @@ def until(
     wait_cond,
     timeout,
     poll=0.1,
+    sleep_first=False,
     msg="expected condition not met within timeout",
 ):  # noqa: C0330
-    res = wait_cond()
+
+    res = False if sleep_first else wait_cond()
     logger.debug(
         "start wait.until with method, timeout, poll => %s %s %s",
         wait_cond,
@@ -34,9 +36,13 @@ def until(
 
 
 def until_not(
-    wait_cond, timeout, poll=0.1, msg="expected condition met within timeout"
+    wait_cond,
+    timeout,
+    poll=0.1,
+    sleep_first=False,
+    msg="expected condition met within timeout",
 ):  # noqa: C0330
-    res = wait_cond()
+    res = False if sleep_first else wait_cond()
     logger.debug(
         "start wait.until_not method, timeout, poll => %s %s %s",
         wait_cond,
