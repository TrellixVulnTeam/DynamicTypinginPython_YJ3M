commit adcae2766749d63593ec36fd13a7ef2a5c49f031
Author: t4rk1n <t4rk@outlook.com>
Date:   Sat Jan 19 19:17:26 2019 -0500

    :construction: Fix assets blueprint path management.

diff --git a/dash/_utils.py b/dash/_utils.py
index 811da08e..0e909b31 100644
--- a/dash/_utils.py
+++ b/dash/_utils.py
@@ -29,15 +29,12 @@ def generate_hash():
 
 def get_asset_path(
         requests_pathname,
-        routes_pathname,
         asset_path,
         asset_url_path):
-    i = requests_pathname.rfind(routes_pathname)
-    req = requests_pathname[:i]
 
     return '/'.join([
         # Only take the first part of the pathname
-        req,
+        requests_pathname.rstrip('/'),
         asset_url_path,
         asset_path
     ])
diff --git a/dash/dash.py b/dash/dash.py
index 21f5e710..2312cdae 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -76,9 +76,10 @@ class Dash(object):
             name='__main__',
             server=None,
             static_folder='static',
-            assets_folder=None,
+            assets_folder='assets',
             assets_url_path='/assets',
             assets_ignore='',
+            assets_blueprint_name='assets',
             include_assets_files=True,
             url_base_pathname=None,
             assets_external_path=None,
@@ -103,20 +104,15 @@ class Dash(object):
                 ''', DeprecationWarning)
 
         name = name if server is None else server.name
-        self._assets_folder = assets_folder or os.path.join(
-            flask.helpers.get_root_path(name), 'assets'
+        self._assets_folder = os.path.join(
+            flask.helpers.get_root_path(name),
+            assets_folder,
         )
         self._assets_url_path = assets_url_path
 
         # allow users to supply their own flask server
         self.server = server or Flask(name, static_folder=static_folder)
 
-        if 'assets' not in self.server.blueprints:
-            self.server.register_blueprint(
-                flask.Blueprint('assets', 'assets',
-                                static_folder=self._assets_folder,
-                                static_url_path=assets_url_path))
-
         env_configs = _configs.env_configs()
 
         url_base_pathname, routes_pathname_prefix, requests_pathname_prefix = \
@@ -146,6 +142,22 @@ class Dash(object):
                 env_configs, 2678400))
         })
 
+        assets_blueprint_name = '{}{}'.format(
+            self.config.routes_pathname_prefix.replace('/', '_'),
+            assets_blueprint_name
+        )
+
+        self.server.register_blueprint(
+            flask.Blueprint(
+                assets_blueprint_name, name,
+                static_folder='assets',
+                static_url_path='{}{}'.format(
+                    self.config.routes_pathname_prefix,
+                    assets_url_path.lstrip('/')
+                )
+            )
+        )
+
         # list of dependencies
         self.callback_map = {}
 
@@ -1056,7 +1068,6 @@ class Dash(object):
     def get_asset_url(self, path):
         asset = _get_asset_path(
             self.config.requests_pathname_prefix,
-            self.config.routes_pathname_prefix,
             path,
             self._assets_url_path.lstrip('/')
         )
