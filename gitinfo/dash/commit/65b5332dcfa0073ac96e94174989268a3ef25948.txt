commit 65b5332dcfa0073ac96e94174989268a3ef25948
Author: Chris P <chris@plot.ly>
Date:   Tue Apr 2 22:36:35 2019 -0400

    :microscope: proof of concept - displaying python traceback in the JS toasts

diff --git a/src/actions/api.js b/src/actions/api.js
index 80ff5d43..93b5be09 100644
--- a/src/actions/api.js
+++ b/src/actions/api.js
@@ -70,17 +70,14 @@ function apiThunk(endpoint, method, store, id, body, headers = {}) {
                 });
             })
             .catch(err => {
-                /* eslint-disable no-console */
-                console.error(err);
-                /* eslint-enable no-console */
-                if (err) {
+                err.text().then(text => {
                     dispatch(
                         onError({
                             type: 'backEnd',
-                            errorPage: err,
+                            errorPage: text,
                         })
                     );
-                }
+                });
             });
     };
 }
diff --git a/src/actions/index.js b/src/actions/index.js
index ea48811f..28211226 100644
--- a/src/actions/index.js
+++ b/src/actions/index.js
@@ -797,12 +797,14 @@ function updateOutput(
             });
         })
         .catch(err => {
-            dispatch(
-                onError({
-                    type: 'backEnd',
-                    errorPage: err,
-                })
-            );
+            err.text().then(text => {
+                dispatch(
+                    onError({
+                        type: 'backEnd',
+                        errorPage: text,
+                    })
+                );
+            });
         });
 }
 
diff --git a/src/components/error/FrontEnd/FrontEndError.css b/src/components/error/FrontEnd/FrontEndError.css
index 7599a7cc..c611ff47 100644
--- a/src/components/error/FrontEnd/FrontEndError.css
+++ b/src/components/error/FrontEnd/FrontEndError.css
@@ -63,3 +63,12 @@
     margin-top: 8px;
     display: inline-block;
 }
+
+.dash-be-error__st {
+    background-color: #fdf3f4;
+    min-width: 386px;
+    max-width: 650px;
+    max-height: 450px;
+    overflow: scroll;
+    display: inline-block;
+}
diff --git a/src/components/error/FrontEnd/FrontEndError.react.js b/src/components/error/FrontEnd/FrontEndError.react.js
index e868e65c..1c6bca6b 100644
--- a/src/components/error/FrontEnd/FrontEndError.react.js
+++ b/src/components/error/FrontEnd/FrontEndError.react.js
@@ -62,10 +62,110 @@ class FrontEndError extends Component {
                         closeButton
                     )}
                 </div>
-                <div className="dash-fe-error__st">
-                    {e.error.stack &&
-                        e.error.stack.split('\n').map(line => <p>{line}</p>)}
-                </div>
+                {!e.error.stack ? null: (
+                    <div className="dash-fe-error__st">
+                        {e.error.stack &&
+                            e.error.stack.split('\n').map(line => <p>{line}</p>)}
+                    </div>
+                )}
+                {!e.error.html ? null : (
+                    <div className="dash-be-error__st">
+                        <div className="dash-backend-error">
+                            {/* Embed werkzeug debugger in an iframe to prevent
+                                CSS leaking - werkzeug HTML includes a bunch
+                                of CSS on base html elements like `<body/>`
+                              */}
+                            <iframe
+                                style={{
+                                    'width': '600px',
+                                    'height': '75vh',
+                                    'border': 'none'
+                                }}
+                                srcDoc={e.error.html.replace(
+                                '</head>',
+`
+<style type="text/css">
+    {
+        font-family: Roboto;
+    }
+    .traceback {
+        background-color: white;
+        border: 2px solid #dfe8f3;
+        border-radius: 0px 0px 4px 4px;
+        color: #506784;
+    }
+    h2.traceback {
+        background-color: #f3f6fa;
+        border: 2px solid #dfe8f3;
+        border-bottom: 0px;
+        box-sizing: border-box;
+        border-radius: 4px 4px 0px 0px;
+        color: #506784;
+    }
+    h2.traceback em{
+        color: #506784;
+        font-weight: 100;
+    }
+    .traceback pre, .debugger textarea{
+        background-color: #F3F6FA;
+    }
+    .debugger h1{
+        color: #506784;
+        font-family: Roboto;
+    }
+    .explanation {
+        color: #A2B1C6;
+    }
+     /* Hide the Don't Panic! footer */
+     .debugger .footer {
+         display: none;
+     }
+
+    /* Messing around */
+     .traceback > ul > li {
+         display: none;
+     }
+     .traceback > ul > li:nth-last-child(-n+3) {
+         display: block;
+     }
+     .debugger h1 {
+         display: none;
+     }
+
+     .debugger .errormsg {
+         margin: 0;
+         color: #506784;
+         font-size: 16px;
+         background-color: #f3f6fa;
+         border: 2px solid #dfe8f3;
+         box-sizing: border-box;
+         border-radius: 4px;
+         padding: 10px;
+     }
+
+    .debugger .pastemessage input {
+        display: none;
+    }
+
+    .debugger .explanation {
+        display: none;
+    }
+    .debugger div.plain {
+        border-radius: 4px;
+        border-width: 2px;
+        color: #506784;
+    }
+
+    body {
+        padding: 0px;
+        margin: 0px;
+    }
+</style>
+</head>`
+                            )}/>
+                        </div>
+                    </div>
+                )}
             </div>
         );
     }
diff --git a/src/components/error/GlobalErrorContainer.react.js b/src/components/error/GlobalErrorContainer.react.js
index 61769a53..1873011b 100644
--- a/src/components/error/GlobalErrorContainer.react.js
+++ b/src/components/error/GlobalErrorContainer.react.js
@@ -23,16 +23,6 @@ class UnconnectedGlobalErrorContainer extends Component {
 
     render() {
         const {error, dispatch} = this.props;
-        if (!isEmpty(error.backEnd)) {
-            return (
-                <div className="dash-backend-error">
-                    <h2> {error.backEnd.errorPage.message} </h2>
-                    <pre className="traceback">
-                        {error.backEnd.errorPage.stack}
-                    </pre>
-                </div>
-            );
-        }
         return (
             <div id="_dash-global-error-container">
                 <DebugMenu
diff --git a/src/components/error/GlobalErrorOverlay.css b/src/components/error/GlobalErrorOverlay.css
index 7c32e684..d8bc97e1 100644
--- a/src/components/error/GlobalErrorOverlay.css
+++ b/src/components/error/GlobalErrorOverlay.css
@@ -45,6 +45,7 @@
     max-height: 650px;
     margin: 1rem;
     overflow: auto;
+    z-index: 1001;  /* above the plotly.js toolbar */
 }
 
 .dash-error-card__topbar {
diff --git a/src/components/error/GlobalErrorOverlay.react.js b/src/components/error/GlobalErrorOverlay.react.js
index 5e125539..4597739f 100644
--- a/src/components/error/GlobalErrorOverlay.react.js
+++ b/src/components/error/GlobalErrorOverlay.react.js
@@ -12,19 +12,25 @@ export default class GlobalErrorOverlay extends Component {
 
     render() {
         const {resolve, visible, error, toastsEnabled} = this.props;
+        let backEndErrors;
         let frontEndErrors;
         if (toastsEnabled) {
-            if (error.frontEnd.length > 1) {
-                frontEndErrors = (
-                    <FrontEndErrorContainer
-                        errors={error.frontEnd}
-                        resolve={resolve}
-                    />
-                );
-            } else if (!isEmpty(error.frontEnd)) {
-                const e = error.frontEnd[0];
-                frontEndErrors = <FrontEndError e={e} resolve={resolve} />;
+            let errors = [];
+            if (error.frontEnd.length) {
+                errors = error.frontEnd;
             }
+            if (!isEmpty(error.backEnd)) {
+                errors.push({error: {
+                    message: 'Python exception',
+                    html: error.backEnd.errorPage,
+                }});
+            }
+            frontEndErrors = (
+                <FrontEndErrorContainer
+                    errors={errors}
+                    resolve={resolve}
+                />
+            );
         }
         return (
             <div>
