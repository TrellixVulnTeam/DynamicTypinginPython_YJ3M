commit f5442ad234f67505fd088e30e22ff4d2d8bd59b5
Author: byron <byron@plot.ly>
Date:   Wed Apr 17 14:25:12 2019 -0400

    :white_check_mark: polish ui flag, fix circular dependencies

diff --git a/tests/test_race_conditions.py b/tests/test_race_conditions.py
index cd641851..07caed9e 100644
--- a/tests/test_race_conditions.py
+++ b/tests/test_race_conditions.py
@@ -8,7 +8,7 @@ import dash_html_components as html
 import dash_core_components as dcc
 
 from .IntegrationTests import IntegrationTests
-from .utils import assert_clean_console, wait_for
+from .utils import wait_for
 
 
 class Tests(IntegrationTests):
@@ -60,7 +60,7 @@ def create_race_conditions_test(endpoints):
             )
         )
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     return test
 
diff --git a/tests/test_render.py b/tests/test_render.py
index 56a0da8e..62daaa45 100644
--- a/tests/test_render.py
+++ b/tests/test_render.py
@@ -17,7 +17,7 @@ from selenium.webdriver.support.ui import WebDriverWait
 from selenium.webdriver.support import expected_conditions as EC
 
 from .IntegrationTests import IntegrationTests
-from .utils import assert_clean_console, wait_for
+from .utils import wait_for
 from multiprocessing import Value
 import time
 import re
@@ -108,7 +108,7 @@ class Tests(IntegrationTests):
         if expected_length is not None:
             self.assertEqual(len(request_queue), expected_length)
 
-    """
+
     def test_initial_state(self):
         app = Dash(__name__)
         my_class_attrs = {
@@ -219,7 +219,7 @@ class Tests(IntegrationTests):
 
         self.percy_snapshot(name='layout')
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_array_of_falsy_child(self):
         app = Dash(__name__)
@@ -229,7 +229,7 @@ class Tests(IntegrationTests):
 
         self.wait_for_text_to_equal('#nully-wrapper', '0')
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_of_falsy_child(self):
         app = Dash(__name__)
@@ -239,7 +239,7 @@ class Tests(IntegrationTests):
 
         self.wait_for_text_to_equal('#nully-wrapper', '0')
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_simple_callback(self):
         app = Dash(__name__)
@@ -290,7 +290,7 @@ class Tests(IntegrationTests):
             expected_length=1,
             check_rejected=False)
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_callbacks_generating_children(self):
         ''' Modify the DOM tree by adding new
@@ -387,7 +387,7 @@ class Tests(IntegrationTests):
         self.request_queue_assertions(call_count.value + 1)
         self.percy_snapshot(name='callback-generating-function-2')
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_radio_buttons_callbacks_generating_children(self):
         self.maxDiff = 100 * 1000
@@ -745,7 +745,7 @@ class Tests(IntegrationTests):
 
         self.request_queue_assertions(2)
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_event_properties(self):
         app = Dash(__name__)
@@ -1176,7 +1176,7 @@ class Tests(IntegrationTests):
         wait_for(lambda: call_counts['button-output'].value, expected_value=1)
         time.sleep(2)  # liberally wait for the front-end to process request
         chapter2_assertions()
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_rendering_layout_calls_callback_once_per_output(self):
         app = Dash(__name__)
@@ -1378,7 +1378,7 @@ class Tests(IntegrationTests):
         self.assertEqual(call_counts['dropdown_1'].value, 1)
         self.assertEqual(call_counts['dropdown_2'].value, 1)
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_callbacks_triggered_on_generated_output(self):
         app = dash.Dash()
@@ -1444,7 +1444,7 @@ class Tests(IntegrationTests):
         self.assertEqual(call_counts['tab1'].value, 1)
         self.assertEqual(call_counts['tab2'].value, 1)
 
-        assert_clean_console(self)
+        self.assertTrue(self.is_console_clean())
 
     def test_initialization_with_overlapping_outputs(self):
         app = dash.Dash()
@@ -2013,13 +2013,20 @@ class Tests(IntegrationTests):
         def set_bc(a):
             return [a, a]
 
-        self.startServer(app, debug=True)
+        self.startServer(
+            app, debug=True, use_debugger=True,
+            use_reloader=False, dev_tools_hot_reload=False)
 
-        # Front-end failed to render.
-        self.assertIn(
-            'Resolve BackEnd Error',
-            self.driver.find_element_by_tag_name('body').text,
-            "circular dependencies is not detected"
+        self.assertEqual(
+            'Circular Dependencies',
+            self.driver.find_element_by_css_selector('span.dash-fe-error__title').text,
+            "circular dependencies should be captured by debug menu"
+        )
+
+        self.assertEqual(
+            {'X'},
+            set(self.driver.find_element_by_css_selector('#c').text),
+            "the UI still renders the output triggered by callback"
         )
 
     def test_simple_clientside_serverside_callback(self):
@@ -2384,7 +2391,7 @@ class Tests(IntegrationTests):
         self.wait_for_text_to_equal('#input', 'hello')
         self.wait_for_text_to_equal('#side-effect', 'side effect')
         self.wait_for_text_to_equal('#output', 'output')
-    """
+
 
     def test_devtools_python_errors(self):
         app = dash.Dash(__name__)
@@ -2478,6 +2485,10 @@ class Tests(IntegrationTests):
         self.assertTrue(
             self.driver.find_elements_by_css_selector('#broken svg.main-svg'),
             "graph should be rendered")
+        self.assertTrue(
+            self.driver.find_elements_by_css_selector('.dash-debug-menu'),
+            "the debug menu icon should show up")
+
         self.percy_snapshot('devtools - disable props check - Graph should render')
 
 
@@ -2497,6 +2508,17 @@ class Tests(IntegrationTests):
             dev_tools_ui=False
         )
 
+        self.wait_for_text_to_equal('#tcid', "Hello Disable UI")
+        logs = self.wait_until_get_log()
+        self.assertIn(
+            'Invalid argument `animate` passed into Graph', str(logs),
+            "the error should present in the console without DEV tools UI")
+
+        self.assertFalse(
+            self.driver.find_elements_by_css_selector('.dash-debug-menu'),
+            "the debug menu icon should NOT show up")
+
+        self.percy_snapshot('devtools - disable dev tools UI - no debug menu')
 
     def test_devtools_validation_errors_creation(self):
         app = dash.Dash(__name__)
@@ -2911,4 +2933,4 @@ class Tests(IntegrationTests):
                     'devtools validation no exception: {}'.format(
                         test_cases[test_case_id]['name']
                     )
-                )
+                )
\ No newline at end of file
