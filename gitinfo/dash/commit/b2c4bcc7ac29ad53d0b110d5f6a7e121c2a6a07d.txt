commit b2c4bcc7ac29ad53d0b110d5f6a7e121c2a6a07d
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Fri May 27 09:30:11 2016 -0700

    :tiger: Add eslint rules + static analysis for ES6 imports

diff --git a/renderer/.eslintrc.json b/renderer/.eslintrc.json
index da3b18ed..40e8faec 100644
--- a/renderer/.eslintrc.json
+++ b/renderer/.eslintrc.json
@@ -13,12 +13,34 @@
         }
     },
     "plugins": [
+        "import",
         "react"
     ],
     "rules": {
         "react/jsx-uses-vars": 2,
         "react/jsx-uses-react": 2,
-        "react/react-in-jsx-scope": 2
+        "react/react-in-jsx-scope": 2,
+        "import/imports-first": 2,
+        "import/no-unresolved": 2,
+        "import/named": 2,
+        "import/default": 2,
+        "import/namespace": 2,
+        "import/export": 2,
+        "import/no-named-as-default": 2,
+        "import/no-named-as-default-member": 2,
+        "import/no-deprecated": 2,
+        "import/no-extraneous-dependencies": 2,
+        "import/no-mutable-exports": 2,
+        "import/no-commonjs": 2,
+        "import/no-amd": 2,
+        "import/no-nodejs-modules": 2,
+        "import/imports-first": 2,
+        "import/no-duplicates": 2,
+        "import/no-namespace": 2,
+        "import/extensions": 2,
+        "import/order": 2,
+        "import/newline-after-import": 2,
+        "import/prefer-default-export": 2
     },
     "settings": {
         "react": {
diff --git a/renderer/config/.eslintrc.json b/renderer/config/.eslintrc.json
index 45708d61..7df4d7f5 100644
--- a/renderer/config/.eslintrc.json
+++ b/renderer/config/.eslintrc.json
@@ -2,5 +2,12 @@
     "env": {
         "node": true
     },
-    "extends": "eslint:recommended"
+    "extends": "eslint:recommended",
+    "plugins": [
+        "import"
+    ],
+    "rules": {
+        "import/no-commonjs": 0,
+        "import/no-nodejs-modules": 0
+    }
 }
diff --git a/renderer/package.json b/renderer/package.json
index a8805029..c54dd47a 100644
--- a/renderer/package.json
+++ b/renderer/package.json
@@ -45,6 +45,7 @@
     "babel-plugin-transform-es2015-modules-commonjs-simple": "^6.7.4",
     "babel-preset-es2015-webpack": "^6.4.1",
     "eslint": "^2.8.0",
+    "eslint-plugin-import": "^1.8.1",
     "eslint-plugin-react": "^5.1.1",
     "react-hot-loader": "^1.3.0",
     "serv": "^0.2.4",
diff --git a/renderer/src/AppContainer.react.js b/renderer/src/AppContainer.react.js
index bddfbf96..a2c19cbd 100644
--- a/renderer/src/AppContainer.react.js
+++ b/renderer/src/AppContainer.react.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import {Provider} from 'react-redux'
 
-import {initializeStore} from './store';
+import initializeStore from './store';
 import TreeContainer from './TreeContainer.react';
 
 const store = initializeStore();
diff --git a/renderer/src/components/EditableDiv.react.js b/renderer/src/components/EditableDiv.react.js
index 61d89d67..d060c790 100644
--- a/renderer/src/components/EditableDiv.react.js
+++ b/renderer/src/components/EditableDiv.react.js
@@ -5,7 +5,6 @@
  */
 
 
-import R from 'ramda';
 import Radium from 'radium';
 import React, { PropTypes } from 'react';
 import ReactDOM from 'react-dom';
@@ -20,6 +19,8 @@ const baseStyles = {
     }
 }
 
+import R from 'ramda';
+
 class EditableDiv extends React.Component {
 
     constructor(props) {
diff --git a/renderer/src/store.js b/renderer/src/store.js
index 8390f93c..43a59e90 100644
--- a/renderer/src/store.js
+++ b/renderer/src/store.js
@@ -6,7 +6,7 @@ import thunk from 'redux-thunk';
 import reducer from './reducers/reducer';
 
 let store;
-export const initializeStore = () => {
+const initializeStore = () => {
     if (store) {
         return store;
     }
@@ -19,11 +19,13 @@ export const initializeStore = () => {
     if (module.hot) {
         // Enable hot module replacement for reducers
         module.hot.accept('./reducers/reducer', () => {
-          const nextRootReducer = require('./reducers/reducer');
-          store.replaceReducer(nextRootReducer);
+            const nextRootReducer = require('./reducers/reducer');
+
+            store.replaceReducer(nextRootReducer);
         });
     }
 
     return store;
 };
 
+export default initializeStore;
