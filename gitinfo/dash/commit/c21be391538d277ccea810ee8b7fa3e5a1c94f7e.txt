commit c21be391538d277ccea810ee8b7fa3e5a1c94f7e
Author: byron <byron@plot.ly>
Date:   Wed May 22 00:25:53 2019 -0400

    :bug: fix the mock side effect in unit test

diff --git a/.circleci/requirements/dev-requirements-py37.txt b/.circleci/requirements/dev-requirements-py37.txt
index 7af32a12..9ab7440e 100644
--- a/.circleci/requirements/dev-requirements-py37.txt
+++ b/.circleci/requirements/dev-requirements-py37.txt
@@ -16,3 +16,4 @@ requests
 beautifulsoup4
 pytest
 pytest-sugar
+pytest-mock
\ No newline at end of file
diff --git a/.circleci/requirements/dev-requirements.txt b/.circleci/requirements/dev-requirements.txt
index e94499e8..2ca98ed9 100644
--- a/.circleci/requirements/dev-requirements.txt
+++ b/.circleci/requirements/dev-requirements.txt
@@ -12,6 +12,7 @@ flake8
 pylint==1.9.4
 pytest
 pytest-sugar
+pytest-mock
 lxml
 requests
 beautifulsoup4
diff --git a/tests/unit/dash/test_resources.py b/tests/unit/dash/test_resources.py
index 62fe0aae..19f7ce4f 100644
--- a/tests/unit/dash/test_resources.py
+++ b/tests/unit/dash/test_resources.py
@@ -1,4 +1,3 @@
-import unittest
 import mock
 import dash_core_components as dcc
 
@@ -30,67 +29,66 @@ _monkey_patched_js_dist = [
     }
 ]
 
-dcc._js_dist = _monkey_patched_js_dist
-dcc.__version__ = 1
-
 
 class StatMock(object):
     st_mtime = 1
 
 
-class Tests(unittest.TestCase):
+def test_external(mocker):
+    mocker.patch('dash_core_components._js_dist')
+    dcc._js_dist = _monkey_patched_js_dist  # noqa: W0212,
+    dcc.__version__ = 1
+
+    app = dash.Dash(
+        __name__,
+        assets_folder='tests/assets',
+        assets_ignore='load_after.+.js'
+    )
+    app.layout = dcc.Markdown()
+    app.scripts.config.serve_locally = False
 
-    def test_external(self):
-        app = dash.Dash(
-            __name__,
-            assets_folder='tests/assets',
-            assets_ignore='load_after.+.js'
+    with mock.patch('dash.dash.os.stat', return_value=StatMock()):
+        resource = app._collect_and_register_resources(
+            app.scripts.get_all_scripts()
         )
-        app.layout = dcc.Markdown()
-        app.scripts.config.serve_locally = False
 
-        with mock.patch('dash.dash.os.stat', return_value=StatMock()):
-            resource = app._collect_and_register_resources(
-                app.scripts.get_all_scripts()
-            )
+    assert resource == [
+        'https://external_javascript.js',
+        'https://external_css.css',
+        'https://component_library.bundle.js'
+    ]
 
-        self.assertEqual(resource, [
-            'https://external_javascript.js',
-            'https://external_css.css',
-            'https://component_library.bundle.js'
-        ])
+def test_internal(mocker):
+    mocker.patch('dash_core_components._js_dist')
+    dcc._js_dist = _monkey_patched_js_dist  # noqa: W0212,
+    dcc.__version__ = 1
 
-    def test_internal(self):
-        app = dash.Dash(
-            __name__,
-            assets_folder='tests/assets',
-            assets_ignore='load_after.+.js'
-        )
-        app.layout = dcc.Markdown()
+    app = dash.Dash(
+        __name__,
+        assets_folder='tests/assets',
+        assets_ignore='load_after.+.js'
+    )
+    app.layout = dcc.Markdown()
 
-        self.assertEqual(app.scripts.config.serve_locally, True)
-        self.assertEqual(app.css.config.serve_locally, True)
+    assert app.scripts.config.serve_locally and app.css.config.serve_locally
 
-        with mock.patch('dash.dash.os.stat', return_value=StatMock()):
-            with mock.patch('dash.dash.importlib.import_module',
-                            return_value=dcc):
-                resource = app._collect_and_register_resources(
-                    app.scripts.get_all_scripts()
-                )
+    with mock.patch('dash.dash.os.stat', return_value=StatMock()):
+        with mock.patch('dash.dash.importlib.import_module',
+                        return_value=dcc):
+            resource = app._collect_and_register_resources(
+                app.scripts.get_all_scripts()
+            )
 
-        self.assertEqual(resource, [
-            '/_dash-component-suites/'
-            'dash_core_components/external_javascript.js?v=1&m=1',
-            '/_dash-component-suites/'
-            'dash_core_components/external_css.css?v=1&m=1',
-            '/_dash-component-suites/'
-            'dash_core_components/fake_dcc.js?v=1&m=1',
-        ])
+    assert resource == [
+        '/_dash-component-suites/'
+        'dash_core_components/external_javascript.js?v=1&m=1',
+        '/_dash-component-suites/'
+        'dash_core_components/external_css.css?v=1&m=1',
+        '/_dash-component-suites/'
+        'dash_core_components/fake_dcc.js?v=1&m=1',
+    ]
 
-        self.assertTrue(
-            'fake_dcc.min.js.map'
-            in app.registered_paths['dash_core_components'],
-            'Dynamic resource not available in registered path {}'.format(
-                app.registered_paths['dash_core_components']
-            )
+    assert 'fake_dcc.min.js.map' in app.registered_paths['dash_core_components'], \
+        'Dynamic resource not available in registered path {}'.format(
+            app.registered_paths['dash_core_components']
         )
