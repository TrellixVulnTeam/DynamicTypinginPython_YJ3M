commit c59568c5f16724b8be3604d7e499d78b8f2e7e07
Author: byron <byron@plot.ly>
Date:   Tue Jun 18 16:19:40 2019 -0400

    :ok_hand: also add open_new_tab

diff --git a/.pylintrc b/.pylintrc
index 766a5f6d..dd43d216 100644
--- a/.pylintrc
+++ b/.pylintrc
@@ -401,7 +401,7 @@ valid-metaclass-classmethod-first-arg=mcs
 max-args=5
 
 # Maximum number of attributes for a class (see R0902).
-max-attributes=7
+max-attributes=20
 
 # Maximum number of boolean expressions in a if statement
 max-bool-expr=5
diff --git a/.pylintrc37 b/.pylintrc37
index 533bbade..16d3687e 100644
--- a/.pylintrc37
+++ b/.pylintrc37
@@ -500,7 +500,7 @@ valid-metaclass-classmethod-first-arg=mcs
 max-args=5
 
 # Maximum number of attributes for a class (see R0902).
-max-attributes=7
+max-attributes=20
 
 # Maximum number of boolean expressions in an if statement.
 max-bool-expr=5
diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 1df006e4..257ef0f9 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -3,7 +3,6 @@ import os
 import sys
 import logging
 import warnings
-from time import sleep as wait
 import percy
 
 from selenium import webdriver
@@ -25,7 +24,7 @@ from dash.testing.errors import DashAppLoadingError, BrowserError
 logger = logging.getLogger(__name__)
 
 
-class Browser(DashPageMixin):  # pylint: disable=too-many-instance-attributes
+class Browser(DashPageMixin):
     def __init__(self, browser, remote=None, wait_timeout=10):
         self._browser = browser.lower()
         self._wait_timeout = wait_timeout
@@ -196,16 +195,28 @@ class Browser(DashPageMixin):  # pylint: disable=too-many-instance-attributes
 
     def toggle_window(self):
         """switch between the current working window and the new opened one"""
-        if len(self.driver.window_handles) < 2:
-            raise BrowserError("there is no new opening window")
-
         idx = (self._window_idx + 1) % 2
         self.switch_window(idx=idx)
         self._window_idx += 1
 
     def switch_window(self, idx=0):
+        """switch to window by window index
+        shortcut to `driver.switch_to.window`
+        """
+        if len(self.driver.window_handles) <= idx:
+            raise BrowserError("there is no second window in Browser")
+
         self.driver.switch_to.window(self.driver.window_handles[idx])
-        wait(0.5)
+
+    def open_new_tab(self, url=None):
+        """open a new tab in browser
+        url is not set, equals to `server_url`
+        """
+        self.driver.execute_script(
+            'window.open("{}", "new window")'.format(
+                self.server_url if url is None else url
+            )
+        )
 
     def get_webdriver(self, remote):
         return (
