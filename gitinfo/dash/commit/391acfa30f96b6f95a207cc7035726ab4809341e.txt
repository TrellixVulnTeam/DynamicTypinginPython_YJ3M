commit 391acfa30f96b6f95a207cc7035726ab4809341e
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Mon Jun 13 10:15:28 2016 -0700

    Fix lint

diff --git a/renderer/src/components/EditableDiv.react.js b/renderer/src/components/EditableDiv.react.js
index d060c790..61d89d67 100644
--- a/renderer/src/components/EditableDiv.react.js
+++ b/renderer/src/components/EditableDiv.react.js
@@ -5,6 +5,7 @@
  */
 
 
+import R from 'ramda';
 import Radium from 'radium';
 import React, { PropTypes } from 'react';
 import ReactDOM from 'react-dom';
@@ -19,8 +20,6 @@ const baseStyles = {
     }
 }
 
-import R from 'ramda';
-
 class EditableDiv extends React.Component {
 
     constructor(props) {
diff --git a/renderer/src/components/core/Draggable.react.js b/renderer/src/components/core/Draggable.react.js
index f6c7d550..226f2e74 100644
--- a/renderer/src/components/core/Draggable.react.js
+++ b/renderer/src/components/core/Draggable.react.js
@@ -1,6 +1,6 @@
 'use strict';
 
-import React, { Component, PropTypes } from 'react';
+import React, { Component } from 'react';
 import { DragSource } from 'react-dnd';
 
 const style = {
@@ -29,7 +29,7 @@ const collectProps = (connect, monitor) => ({
 
 class Draggable extends Component {
     render() {
-        console.warn('Draggable: ', this.props);
+        console.warn('Draggable: ', this.props); // eslint-disable-line
         const { isDragging, connectDragSource } = this.props;
         return connectDragSource(
             isDragging ?
diff --git a/renderer/src/components/core/Droppable.react.js b/renderer/src/components/core/Droppable.react.js
index 6a7eb6b0..21b39e7d 100644
--- a/renderer/src/components/core/Droppable.react.js
+++ b/renderer/src/components/core/Droppable.react.js
@@ -1,13 +1,15 @@
 'use strict';
 
-import React, { PropTypes, Component } from 'react';
+import React, { Component } from 'react';
 import { DropTarget } from 'react-dnd';
 
+/* eslint-disable no-unused-vars */
 const spec = {
     drop(props, monitor, component) {return {}},
     hover(props, monitor, component) {return {}},
     canDrop(props, monitor) {return true;}
 };
+/* eslint-enable no-unused-vars */
 
 function collectProps(connect, monitor) {
     return {
@@ -21,7 +23,7 @@ function collectProps(connect, monitor) {
 
 class Droppable extends Component {
     render() {
-        console.warn('Droppable: ', this.props);
+        console.warn('Droppable: ', this.props); // eslint-disable-line
         const { canDrop, isOver, connectDropTarget } = this.props;
         const isActive = canDrop && isOver;
 
diff --git a/renderer/src/components/core/EditableContent.react.js b/renderer/src/components/core/EditableContent.react.js
index 9546d573..bf2baff3 100644
--- a/renderer/src/components/core/EditableContent.react.js
+++ b/renderer/src/components/core/EditableContent.react.js
@@ -8,14 +8,16 @@ import { updateProps } from '../../actions'
  * as a prop
  */
 
+/* eslint-disable no-unused-vars */
 const mapStateToProps = (state, ownProps) => {
   return {}
 }
+/* eslint-enable no-unused-vars */
 
 const mapDispatchToProps = (dispatch, ownProps) => {
   return {
     updateProps: (newProps) => {
-        console.warn('newProps: ', newProps);
+        console.warn('newProps: ', newProps); // eslint-disable-line
         dispatch(updateProps({
             props: newProps,
             itempath: React.Children.only(ownProps.children).props.path
diff --git a/renderer/src/reducers/dependencyGraph.js b/renderer/src/reducers/dependencyGraph.js
index 5765b3f2..d8e201d2 100644
--- a/renderer/src/reducers/dependencyGraph.js
+++ b/renderer/src/reducers/dependencyGraph.js
@@ -1,7 +1,7 @@
 import {DepGraph} from 'dependency-graph';
 
-import {crawlLayout} from './utils';
 import spec from '../spec'; // TODO: this'll eventually load from the API
+import {crawlLayout} from './utils';
 
 const initialGraph = new DepGraph();
 
diff --git a/renderer/src/reducers/paths.js b/renderer/src/reducers/paths.js
index 85495226..5f9cd4e5 100644
--- a/renderer/src/reducers/paths.js
+++ b/renderer/src/reducers/paths.js
@@ -1,5 +1,5 @@
-import {crawlLayout, createTreePath} from './utils'
 import spec from '../spec'; // TODO: this'll eventually load from the API
+import {crawlLayout, createTreePath} from './utils'
 
 const initialPaths = {};
 
