commit c0c88b3c70c6e515895d0e25cb055a04eeecc2f5
Author: Philippe Duval <philippe@plot.ly>
Date:   Wed Sep 12 13:01:27 2018 -0400

    Remove reloading state.

diff --git a/src/actions/api.js b/src/actions/api.js
index c652470e..4fd205a3 100644
--- a/src/actions/api.js
+++ b/src/actions/api.js
@@ -103,4 +103,4 @@ export function getReloadHash() {
         'GET',
         'reloadRequest'
     )
-}
\ No newline at end of file
+}
diff --git a/src/components/core/Reloader.react.js b/src/components/core/Reloader.react.js
index 6eda3a5e..55b0e5aa 100644
--- a/src/components/core/Reloader.react.js
+++ b/src/components/core/Reloader.react.js
@@ -11,7 +11,6 @@ class Reloader extends React.Component {
             this.state = {
                 hash: null,
                 interval,
-                reloading: false,
                 disabled: false
             }
         } else {
@@ -29,14 +28,14 @@ class Reloader extends React.Component {
                 this.setState({hash: reloadHash.content.reloadHash});
                 return;
             }
-            if (reloadHash.content.reloadHash !== this.state.hash && !this.state.reloading ) {
+            if (reloadHash.content.reloadHash !== this.state.hash) {
                 // eslint-disable-next-line no-undef
                 window.clearInterval(this._intervalId);
                 if (reloadHash.content.hard) {
                     // Assets file have changed, need to reload them.
                     // eslint-disable-next-line no-undef
                     window.top.location.reload();
-                } else if (!this.state.reloading) {
+                } else {
                     // Py file has changed, just rebuild the reducers.
                     dispatch({'type': 'RELOAD'});
                 }
@@ -49,9 +48,7 @@ class Reloader extends React.Component {
         const { disabled, interval } = this.state;
         if (!disabled && !this._intervalId) {
             this._intervalId = setInterval(() => {
-                if (!this.state.reloading) {
-                    dispatch(getReloadHash());
-                }
+                dispatch(getReloadHash());
             }, interval);
         }
     }
