commit da8cd7264d9587b91df08d3478e3b045f15767f3
Author: byron <byron@plot.ly>
Date:   Thu Mar 21 00:17:01 2019 -0400

    :alembic: fix test render

diff --git a/src/actions/api.js b/src/actions/api.js
index d6d12689..fe47549b 100644
--- a/src/actions/api.js
+++ b/src/actions/api.js
@@ -1,8 +1,8 @@
 /* global fetch: true, document: true */
 import cookie from 'cookie';
 import {merge} from 'ramda';
-import {urlBase} from '../utils';
 import {onError} from '../actions';
+import {urlBase} from '../utils';
 
 function GET(path) {
     return fetch(path, {
@@ -73,14 +73,14 @@ function apiThunk(endpoint, method, store, id, body, headers = {}) {
                 /* eslint-disable no-console */
                 console.error(err);
                 /* eslint-enable no-console */
-                err.text().then(text => {
+                if (err) {
                     dispatch(
                         onError({
                             type: 'backEnd',
-                            errorPage: text,
+                            errorPage: err,
                         })
-                    );
-                });
+                    )
+                }
             });
     };
 }
diff --git a/src/actions/index.js b/src/actions/index.js
index 714ce43d..0ac67095 100644
--- a/src/actions/index.js
+++ b/src/actions/index.js
@@ -56,7 +56,14 @@ function triggerDefaultState(dispatch, getState) {
     const {InputGraph, MultiGraph} = graphs;
     const allNodes = InputGraph.overallOrder();
     // overallOrder will assert circular dependencies for multi output.
-    MultiGraph.overallOrder();
+    try{
+        MultiGraph.overallOrder();
+    }catch(err) {
+        dispatch(onError({
+            type: 'backEnd',
+            errorPage: err,
+        }))
+    }
     const inputNodeIds = [];
     allNodes.reverse();
     allNodes.forEach(nodeId => {
@@ -787,14 +794,12 @@ function updateOutput(
             });
         })
         .catch(err => {
-            err.text().then(text => {
-                dispatch(
-                    onError({
-                        type: 'backEnd',
-                        errorPage: text,
-                    })
-                );
-            });
+            dispatch(
+                onError({
+                    type: 'backEnd',
+                    errorPage: err,
+                })
+            )
         });
 }
 
diff --git a/src/components/error/ComponentErrorBoundary.react.js b/src/components/error/ComponentErrorBoundary.react.js
index 8bdb9876..3e002f0a 100644
--- a/src/components/error/ComponentErrorBoundary.react.js
+++ b/src/components/error/ComponentErrorBoundary.react.js
@@ -29,7 +29,7 @@ class UnconnectedComponentErrorBoundary extends Component {
                 info,
             })
         );
-        dispatch(revert);
+        // dispatch(revert);
     }
 
     /* eslint-disable react/no-did-update-set-state */
diff --git a/src/components/error/GlobalErrorContainer.react.js b/src/components/error/GlobalErrorContainer.react.js
index a13b1584..e1bd3026 100644
--- a/src/components/error/GlobalErrorContainer.react.js
+++ b/src/components/error/GlobalErrorContainer.react.js
@@ -15,7 +15,7 @@ class UnconnectedGlobalErrorContainer extends Component {
     resolveError(dispatch, type, myId) {
         if (type === 'backEnd') {
             dispatch(resolveError({type}));
-            dispatch(revert());
+            // dispatch(revert);
         } else {
             dispatch(resolveError({myId, type}));
         }
@@ -25,11 +25,11 @@ class UnconnectedGlobalErrorContainer extends Component {
         const {error, dispatch} = this.props;
         if (!isEmpty(error.backEnd)) {
             return (
-                <div
-                    className="dash-backend-error"
-                    dangerouslySetInnerHTML={{__html: error.backEnd.errorPage}}
-                />
-            );
+                <div className="dash-backend-error">
+                    <h2> {error.backEnd.errorPage.message} </h2>
+                    <pre className="traceback"> {error.backEnd.errorPage.stack} </pre>
+                </div>
+            )
         }
         return (
             <div id="_dash-global-error-container">
diff --git a/tests/test_render.py b/tests/test_render.py
index ae4a12f6..81072f29 100644
--- a/tests/test_render.py
+++ b/tests/test_render.py
@@ -2276,5 +2276,5 @@ class Tests(IntegrationTests):
 
         # Front-end failed to render.
         self.wait_for_text_to_equal(
-            'body', 'Error loading dependencies', timeout=2
+            'body', 'Dependency Cycle Found', timeout=2
         )
