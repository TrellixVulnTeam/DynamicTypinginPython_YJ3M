commit 6933512334ba84c4dd44e8c55eb83dce7353b8ac
Author: Shammamah Hossain <shammamah.hossain@gmail.com>
Date:   Mon Dec 10 10:47:56 2018 -0500

    Create and implement new exception types.

diff --git a/dash/dash.py b/dash/dash.py
index 3beb7898..29d4d9a9 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -275,7 +275,7 @@ class Dash(object):
     def layout(self, value):
         if (not isinstance(value, Component) and
                 not isinstance(value, collections.Callable)):
-            raise Exception(
+            raise exceptions.NoLayoutException(
                 ''
                 'Layout must be a dash component '
                 'or a function that returns '
@@ -301,7 +301,7 @@ class Dash(object):
         )
         missing = [missing for check, missing in checks if not check]
         if missing:
-            raise Exception(
+            raise exceptions.InvalidIndexException(
                 'Did you forget to include {} in your index string ?'.format(
                     ', '.join('{%' + x + '%}' for x in missing)
                 )
@@ -472,14 +472,14 @@ class Dash(object):
     # Serve the JS bundles for each package
     def serve_component_suites(self, package_name, path_in_package_dist):
         if package_name not in self.registered_paths:
-            raise exceptions.InvalidResourceError(
+            raise exceptions.DependencyException(
                 'Error loading dependency.\n'
                 '"{}" is not a registered library.\n'
                 'Registered libraries are: {}'
                 .format(package_name, list(self.registered_paths.keys())))
 
         elif path_in_package_dist not in self.registered_paths[package_name]:
-            raise exceptions.InvalidResourceError(
+            raise exceptions.DependencyException(
                 '"{}" is registered but the path requested is not valid.\n'
                 'The path requested: "{}"\n'
                 'List of registered paths: {}'
@@ -542,7 +542,7 @@ class Dash(object):
 
         if missing:
             plural = 's' if len(missing) > 1 else ''
-            raise Exception(
+            raise exceptions.InvalidIndexException(
                 'Missing element{pl} {ids} in index.'.format(
                     ids=', '.join(missing),
                     pl=plural
diff --git a/dash/exceptions.py b/dash/exceptions.py
index 5ec2779a..b8770324 100644
--- a/dash/exceptions.py
+++ b/dash/exceptions.py
@@ -64,3 +64,9 @@ class InvalidConfig(DashException):
 
 class InvalidResourceError(DashException):
     pass
+
+class InvalidIndexException(DashException):
+    pass
+
+class DependencyException(DashException):
+    pass
diff --git a/dash/resources.py b/dash/resources.py
index 603bd37a..15d173e6 100644
--- a/dash/resources.py
+++ b/dash/resources.py
@@ -3,7 +3,7 @@ import warnings
 import os
 
 from .development.base_component import ComponentRegistry
-
+from . import exceptions
 
 # pylint: disable=old-style-class
 class Resources:
@@ -45,7 +45,7 @@ class Resources:
                 )
                 continue
             else:
-                raise Exception(
+                raise exceptions.ResourceException(
                     '{} does not have a '
                     'relative_package_path, absolute_path, or an '
                     'external_url.'.format(
