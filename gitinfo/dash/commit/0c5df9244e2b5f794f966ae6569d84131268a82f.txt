commit 0c5df9244e2b5f794f966ae6569d84131268a82f
Author: Byron Zhu <byronz@users.noreply.github.com>
Date:   Tue Aug 20 16:55:44 2019 -0400

    Update CONTRIBUTING.md
    
    Co-Authored-By: alexcjohnson <johnson.alex.c@gmail.com>

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 6af344fb..21321dbd 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -35,7 +35,7 @@ After Dash 1.2, The renderer bundle and its peer dependencies can be packed and
 1.  `renderer npm`  installs all the npm modules using this  `package.json`  files. Note that the  `package-lock.json`  file is the computed reference product for the versions defined with tilde(~) or caret(^) syntax in  **npm**
 2.  `renderer bundles`  parses the locked version JSON, copies all the peer dependencies into dash_renderer folder, bundles the renderer assets, and generates an `__init__.py`  to map all the resources
 3.  `renderer digest {renderer version}`  computes the content hash of each asset in  `dash_renderer`  folder, prints out the result in logs, and dumps into a JSON file  `digest.json`
-4.  `renderer watch` runs the webpack in watch mode, so any source code change triggers a rebuild
+4.  `renderer watch` runs webpack in watch mode, so any source code change triggers a rebuild. Use this if you are actively updating renderer code and you want to test your changes immediately.
 
 When a change in renderer code doesn't reflect in your browser as expected, this could be: confused bundle generation, caching issue in a browser, python package not in `editable` mode, etc. The new tool reduces the risk of bundle assets by adding the digest to help compare asset changes.
 
