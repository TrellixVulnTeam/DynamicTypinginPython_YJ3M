commit 69ccd079ed6c038c27e92be7ac7760741d0432eb
Author: byron <byron@plot.ly>
Date:   Sat Apr 6 01:23:35 2019 -0400

    :hankey: another possible

diff --git a/package.json b/package.json
index 03e81cf0..34b70316 100644
--- a/package.json
+++ b/package.json
@@ -57,6 +57,7 @@
     "babel-plugin-transform-es2015-modules-commonjs-simple": "^6.7.4",
     "babel-preset-es2015-webpack": "^6.4.1",
     "babel-preset-stage-2": "^6.24.1",
+    "check-prop-types": "^1.1.2",
     "css-loader": "^1.0.0",
     "eslint": "^5.15.3",
     "eslint-config-airbnb": "^17.1.0",
diff --git a/src/TreeContainer.js b/src/TreeContainer.js
index e1b4f054..9e635b7a 100644
--- a/src/TreeContainer.js
+++ b/src/TreeContainer.js
@@ -68,23 +68,47 @@ class TreeContainer extends Component {
         }
         const component = Registry.resolve(_dashprivate_layout.type, _dashprivate_layout.namespace);
 
-        const getCheckedElement = (component) => {return class extends React.Component {
-            componentDidMount() {
-                assertPropTypes(component.propTypes, _dashprivate_layout.props, 'component prop', component);
+        const getCheckedElement = (component) => {
+            return class CheckedComponent extends React.Component {
+                componentDidMount() {
+                    assertPropTypes(
+                        component.propTypes,
+                        _dashprivate_layout.props,
+                        'component prop', component
+                    );
+                }
+                render() {
+                    return React.createElement(
+                        component,
+                        mergeAll([
+                            omit(['children'], _dashprivate_layout.props),
+                            { loading_state, setProps }
+                        ]),
+                        children
+                    );
+                }
             }
-            render() {
-                return React.createElement(
-                    component,
-                    mergeAll([
-                        omit(['children'], _dashprivate_layout.props),
-                        { loading_state, setProps }
-                    ]),
-                    ...(Array.isArray(children) ? children : [children])
-                )
-            }
-        };};
-        return React.createElement(getCheckedElement(component));
+        };
 
+        if (Array.isArray(children)) {
+            return React.createElement(
+                component,
+                mergeAll([
+                    omit(['children'], _dashprivate_layout.props),
+                    { loading_state, setProps }
+                ]),
+                ...children
+            );
+        }
+        const checkedElement = React.createElement(getCheckedElement(component));
+        return (
+            <ComponentErrorBoundary
+                componentType={_dashprivate_layout.type}
+                componentId={_dashprivate_layout.props.id}
+            >
+                {checkedElement}
+            </ComponentErrorBoundary>
+        );
     }
 
     getSetProps() {
@@ -147,15 +171,8 @@ class TreeContainer extends Component {
         const children = this.getChildren(layoutProps.children);
         const setProps = this.getSetProps(_dashprivate_dispatch);
 
-        return (
-            <ComponentErrorBoundary
-                componentType={_dashprivate_layout.type}
-                componentId={_dashprivate_layout.props.id}
-            >
-                {this.getComponent(_dashprivate_layout, children, _dashprivate_loadingState, setProps)}
-            </ComponentErrorBoundary>
-        );
-    }
+        return this.getComponent(_dashprivate_layout, children, _dashprivate_loadingState, setProps);
+    };
 }
 
 TreeContainer.propTypes = {
@@ -164,7 +181,7 @@ TreeContainer.propTypes = {
     _dashprivate_layout: PropTypes.object,
     _dashprivate_loadingState: PropTypes.object,
     _dashprivate_paths: PropTypes.any,
-    _dashprivate_requestQueue: PropTypes.object,
+    _dashprivate_requestQueue: PropTypes.any,
 };
 
 function mapDispatchToProps(dispatch) {
diff --git a/src/components/error/FrontEnd/FrontEndErrorContainer.react.js b/src/components/error/FrontEnd/FrontEndErrorContainer.react.js
index 63e319f1..a957a830 100644
--- a/src/components/error/FrontEnd/FrontEndErrorContainer.react.js
+++ b/src/components/error/FrontEnd/FrontEndErrorContainer.react.js
@@ -44,11 +44,11 @@ class FrontEndErrorContainer extends Component {
 FrontEndErrorContainer.propTypes = {
     errors: PropTypes.array,
     resolve: PropTypes.func,
-    inAlertsTray: PropTypes.bool,
+    inAlertsTray: PropTypes.any,
 };
 
 FrontEndErrorContainer.propTypes = {
-    inAlertsTray: false,
+    inAlertsTray: PropTypes.any,
 };
 
 export {FrontEndErrorContainer};
diff --git a/src/components/error/GlobalErrorOverlay.react.js b/src/components/error/GlobalErrorOverlay.react.js
index 4597739f..7f7366fb 100644
--- a/src/components/error/GlobalErrorOverlay.react.js
+++ b/src/components/error/GlobalErrorOverlay.react.js
@@ -1,7 +1,7 @@
 import React, {Component} from 'react';
 import PropTypes from 'prop-types';
 import {isEmpty} from 'ramda';
-import {FrontEndError} from './FrontEnd/FrontEndError.react';
+// import {FrontEndError} from './FrontEnd/FrontEndError.react';
 import './GlobalErrorOverlay.css';
 import {FrontEndErrorContainer} from './FrontEnd/FrontEndErrorContainer.react';
 
@@ -12,7 +12,7 @@ export default class GlobalErrorOverlay extends Component {
 
     render() {
         const {resolve, visible, error, toastsEnabled} = this.props;
-        let backEndErrors;
+        // let backEndErrors;
         let frontEndErrors;
         if (toastsEnabled) {
             let errors = [];
@@ -55,5 +55,5 @@ GlobalErrorOverlay.propTypes = {
     resolve: PropTypes.func,
     visible: PropTypes.bool,
     error: PropTypes.object,
-    toastsEnabled: PropTypes.boolean,
+    toastsEnabled: PropTypes.any,
 };
diff --git a/src/components/error/menu/DebugMenu.react.js b/src/components/error/menu/DebugMenu.react.js
index 78326687..7005cb02 100644
--- a/src/components/error/menu/DebugMenu.react.js
+++ b/src/components/error/menu/DebugMenu.react.js
@@ -167,8 +167,8 @@ class DebugMenu extends Component {
 DebugMenu.propTypes = {
     children: PropTypes.object,
     errors: PropTypes.object,
-    resolveError: PropTypes.function,
-    dispatch: PropTypes.function,
+    resolveError: PropTypes.any,
+    dispatch: PropTypes.any,
 };
 
 export {DebugMenu};
