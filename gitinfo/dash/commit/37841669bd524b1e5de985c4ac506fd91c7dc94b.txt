commit 37841669bd524b1e5de985c4ac506fd91c7dc94b
Author: chriddyp <chris@plot.ly>
Date:   Tue Mar 21 22:58:46 2017 -0400

    raise exception if a required property isn't specified

diff --git a/dash/development/base_component.py b/dash/development/base_component.py
index 3afb4767..4ba3287c 100644
--- a/dash/development/base_component.py
+++ b/dash/development/base_component.py
@@ -211,6 +211,13 @@ def generate_class(typename, props, description, namespace):
             self._type = '{typename}'
             self._namespace = '{namespace}'
             self._events = {events}
+
+            for k in {required_args}:
+                if k not in kwargs:
+                    raise Exception(
+                        'Required argument `' + k + '` was not specified.'
+                    )
+
             super({typename}, self).__init__({argtext})
 
         def __repr__(self):
@@ -240,6 +247,8 @@ def generate_class(typename, props, description, namespace):
         default_argtext = '**kwargs'
         argtext = '**kwargs'
 
+    required_args = required_props(props)
+
     d = c.format(**locals())
 
     scope = {'Component': Component}
@@ -248,6 +257,11 @@ def generate_class(typename, props, description, namespace):
     return result
 
 
+def required_props(props):
+    return [prop_name for prop_name, prop in props.iteritems()
+            if prop['required']]
+
+
 def reorder_props(props):
     # If "content" is a prop, then move it to the front to respect
     # dash convention
diff --git a/tests/development/TestReactComponent.react.js b/tests/development/TestReactComponent.react.js
index 7a466a94..49303498 100644
--- a/tests/development/TestReactComponent.react.js
+++ b/tests/development/TestReactComponent.react.js
@@ -70,14 +70,8 @@ ReactComponent.propTypes = {
         })
     }),
 
-    // You can chain any of the above with `isRequired` to make sure a warning
-    // is shown if the prop isn't provided.
-    requiredFunc: React.PropTypes.func.isRequired,
-
     // A value of any data type
-    requiredAny: React.PropTypes.any.isRequired,
-
-    requiredArray: React.PropTypes.array.isRequired,
+    optionalAny: React.PropTypes.any,
 
     customProp: function(props, propName, componentName) {
         if (!/matchme/.test(props[propName])) {
diff --git a/tests/development/TestReactComponentRequired.react.js b/tests/development/TestReactComponentRequired.react.js
new file mode 100644
index 00000000..0c24eda7
--- /dev/null
+++ b/tests/development/TestReactComponentRequired.react.js
@@ -0,0 +1,19 @@
+import React from 'react';
+// A react component with all of the available proptypes to run tests over
+
+/**
+ * This is a description of the component.
+ * It's multiple lines long.
+ */
+class ReactComponent extends Component {
+    render() {
+        return '';
+    }
+}
+
+ReactComponent.propTypes = {
+    content: React.PropTypes.node,
+    id: React.PropTypes.string.isRequired,
+};
+
+export default ReactComponent;
diff --git a/tests/development/metadata_required_test.json b/tests/development/metadata_required_test.json
new file mode 100644
index 00000000..6afc8021
--- /dev/null
+++ b/tests/development/metadata_required_test.json
@@ -0,0 +1,20 @@
+{
+  "description": "This is a description of the component.\nIt's multiple lines long.",
+  "methods": [],
+  "props": {
+    "content": {
+      "type": {
+        "name": "node"
+      },
+      "required": false,
+      "description": ""
+    },
+    "id": {
+      "type": {
+        "name": "string"
+      },
+      "required": true,
+      "description": ""
+    }
+  }
+}
\ No newline at end of file
diff --git a/tests/development/metadata_test.json b/tests/development/metadata_test.json
index 0db9f417..341924ad 100644
--- a/tests/development/metadata_test.json
+++ b/tests/development/metadata_test.json
@@ -174,25 +174,11 @@
       "required": false,
       "description": ""
     },
-    "requiredFunc": {
-      "type": {
-        "name": "func"
-      },
-      "required": true,
-      "description": ""
-    },
-    "requiredAny": {
+    "optionalAny": {
       "type": {
         "name": "any"
       },
-      "required": true,
-      "description": ""
-    },
-    "requiredArray": {
-      "type": {
-        "name": "array"
-      },
-      "required": true,
+      "required": false,
       "description": ""
     },
     "customProp": {
diff --git a/tests/development/test_base_component.py b/tests/development/test_base_component.py
index a5ca1c23..b72599c3 100644
--- a/tests/development/test_base_component.py
+++ b/tests/development/test_base_component.py
@@ -484,6 +484,23 @@ class TestGenerateClass(unittest.TestCase):
             namespace='TableComponents'
         )
 
+        path = os.path.join(
+            'tests', 'development', 'metadata_required_test.json'
+        )
+        with open(path) as data_file:
+            json_string = data_file.read()
+            required_data = json\
+                .JSONDecoder(object_pairs_hook=collections.OrderedDict)\
+                .decode(json_string)
+            self.required_data = required_data
+
+        self.ComponentClassRequired = generate_class(
+            typename='TableRequired',
+            props=required_data['props'],
+            description=required_data['description'],
+            namespace='TableComponents'
+        )
+
     def test_to_plotly_json(self):
         c = self.ComponentClass()
         self.assertEqual(c.to_plotly_json(), {
@@ -567,7 +584,7 @@ class TestGenerateClass(unittest.TestCase):
 
     def test_events(self):
         self.assertEqual(
-            self.ComponentClass()._events,
+            self.ComponentClass().available_events,
             ['restyle', 'relayout', 'click']
         )
 
@@ -584,6 +601,15 @@ class TestGenerateClass(unittest.TestCase):
         )
 
 
+    def test_required_props(self):
+        with self.assertRaises(Exception):
+            self.ComponentClassRequired()
+        self.ComponentClassRequired(id='test')
+        with self.assertRaises(Exception):
+            self.ComponentClassRequired(id='test', lahlah='test')
+        with self.assertRaises(Exception):
+            self.ComponentClassRequired(content='test')
+
 class TestMetaDataConversions(unittest.TestCase):
     def setUp(self):
         path = os.path.join('tests', 'development', 'metadata_test.json')
@@ -638,11 +664,7 @@ class TestMetaDataConversions(unittest.TestCase):
 
             ])],
 
-            ['requiredFunc', ''],
-
-            ['requiredAny', 'boolean | number | string | dict | list'],
-
-            ['requiredArray', 'list'],
+            ['optionalAny', 'boolean | number | string | dict | list'],
 
             ['customProp', ''],
 
@@ -720,10 +742,9 @@ def assert_docstring(assertEqual, docstring):
             "  - layout (dict; optional): layout describes "
             "the rest of the figure",
 
-            "- requiredAny (boolean | number | string | dict | "
-            "list; required)",
+            "- optionalAny (boolean | number | string | dict | "
+            "list; optional)",
 
-            "- requiredArray (list; required)",
             "- customProp (optional)",
             "- customArrayProp (list; optional)",
             '- id (string; optional)',
