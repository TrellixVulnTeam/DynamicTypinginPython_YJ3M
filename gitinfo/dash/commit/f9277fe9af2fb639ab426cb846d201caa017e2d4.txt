commit f9277fe9af2fb639ab426cb846d201caa017e2d4
Author: alexcjohnson <alex@plot.ly>
Date:   Tue Oct 29 20:39:35 2019 -0400

    fix fingerprint for nested folders and pathological cases

diff --git a/dash/fingerprint.py b/dash/fingerprint.py
index 01db7af5..b9c23d30 100644
--- a/dash/fingerprint.py
+++ b/dash/fingerprint.py
@@ -1,31 +1,27 @@
 import re
 
-build_regex = re.compile(r'^(?P<filename>[\w@~-]+)(?P<extension>.*)$')
-
-check_regex = re.compile(
-    r'^(?P<filename>.*)[.]v[\w-]+m[0-9a-fA-F]+(?P<extension>(?:(?:(?<![.])[.])?[\w])+)$'
-)
+cache_regex = re.compile(r"^v[\w-]+m[0-9a-fA-F]+$")
 
 
 def build_fingerprint(path, version, hash_value):
-    res = build_regex.match(path)
+    path_parts = path.split("/")
+    filename, extension = path_parts[-1].split(".", 1)
 
-    return '{}.v{}m{}{}'.format(
-        res.group('filename'),
-        str(version).replace('.', '_'),
+    return "{}.v{}m{}.{}".format(
+        "/".join(path_parts[:-1] + [filename]),
+        str(version).replace(".", "_"),
         hash_value,
-        res.group('extension'),
+        extension,
     )
 
 
 def check_fingerprint(path):
+    path_parts = path.split("/")
+    name_parts = path_parts[-1].split(".")
+
     # Check if the resource has a fingerprint
-    res = check_regex.match(path)
-
-    # Resolve real resource name from fingerprinted resource path
-    return (
-        res.group('filename') + res.group('extension')
-        if res is not None
-        else path,
-        res is not None,
-    )
+    if len(name_parts) > 2 and cache_regex.match(name_parts[1]):
+        original_name = ".".join([name_parts[0]] + name_parts[2:])
+        return "/".join(path_parts[:-1] + [original_name]), True
+
+    return path, False
diff --git a/tests/unit/test_fingerprint.py b/tests/unit/test_fingerprint.py
index e8858f70..36de80dd 100644
--- a/tests/unit/test_fingerprint.py
+++ b/tests/unit/test_fingerprint.py
@@ -22,27 +22,78 @@ valid_resources = [
     {"path": "dash.plotly.css", "fingerprint": "dash.v1m1.plotly.css"},
     {"path": "dash.plotly.xxx.yyy.zzz", "fingerprint": "dash.v1m1.plotly.xxx.yyy.zzz"},
     {"path": "dash~plotly.js", "fingerprint": "dash~plotly.v1m1.js"},
+    {"path": "nested/folder/file.js", "fingerprint": "nested/folder/file.v1m1.js"},
+    {
+        # kind of pathological, but we have what looks like a version string
+        # in a different place - still works
+        "path": "nested.v2m2/folder/file.js",
+        "fingerprint": "nested.v2m2/folder/file.v1m1.js"
+    },
+    {
+        # even works if it gets doubled up in the right place
+        "path": "nested/folder/file.v2m2.js",
+        "fingerprint": "nested/folder/file.v1m1.v2m2.js"
+    },
+    {
+        "path": "nested.dotted/folder.structure/file.name.css",
+        "fingerprint": "nested.dotted/folder.structure/file.v1m1.name.css",
+    },
+    {
+        "path": "dash..plotly.js",
+        "fingerprint": "dash.v1_1_1m1234567890..plotly.js",
+        "version": "1.1.1",
+        "hash": "1234567890",
+    },
+    {
+        "path": "dash.",
+        "fingerprint": "dash.v1_1_1m1234567890.",
+        "version": "1.1.1",
+        "hash": "1234567890",
+    },
+    {
+        "path": "dash..",
+        "fingerprint": "dash.v1_1_1m1234567890..",
+        "version": "1.1.1",
+        "hash": "1234567890",
+    },
+    {
+        "path": "dash.js.",
+        "fingerprint": "dash.v1_1_1m1234567890.js.",
+        "version": "1.1.1",
+        "hash": "1234567890",
+    },
+    {
+        "path": "dash.j-s",
+        "fingerprint": "dash.v1_1_1m1234567890.j-s",
+        "version": "1.1.1",
+        "hash": "1234567890",
+    },
 ]
 
 valid_fingerprints = [
     "react@16.v1_1_2m1571771240.8.6.min.js",
-    "dash.plotly.v1_1_1m1234567890.js",
-    "dash.plotly.v1_1_1m1234567890.j_s",
-    "dash.plotly.v1_1_1m1234567890.css",
-    "dash.plotly.v1_1_1m1234567890.xxx.yyy.zzz",
-    "dash.plotly.v1_1_1-alpha1m1234567890.js",
-    "dash.plotly.v1_1_1-alpha_3m1234567890.js",
-    "dash.plotly.v1_1_1m1234567890123.js",
-    "dash.plotly.v1_1_1m4bc3.js",
+    "dash.v1_1_1m1234567890.plotly.js",
+    "dash.v1_1_1m1234567890.plotly.j_s",
+    "dash.v1_1_1m1234567890.plotly.css",
+    "dash.v1_1_1m1234567890.plotly.xxx.yyy.zzz",
+    "dash.v1_1_1-alpha1m1234567890.plotly.js",
+    "dash.v1_1_1-alpha_3m1234567890.plotly.js",
+    "dash.v1_1_1m1234567890123.plotly.js",
+    "dash.v1_1_1m4bc3.plotly.js",
     "dash~plotly.v1m1.js",
+    "nested/folder/file.v1m1.js",
+    "nested.dotted/folder.structure/file.v1m1.name.css",
+    # this one has a pattern that looks like the version string in the wrong place
+    # AND one in the right place.
+    "nested.v2m2/folder/file.v1m1.js",
+    "nested.v2m2.dotted/folder.structure/file.v1m1.name.css",
 ]
 
 invalid_fingerprints = [
-    "dash.plotly.v1_1_1m1234567890..js",
-    "dash.plotly.v1_1_1m1234567890.",
-    "dash.plotly.v1_1_1m1234567890..",
-    "dash.plotly.v1_1_1m1234567890.js.",
-    "dash.plotly.v1_1_1m1234567890.j-s",
+    "dash.plotly.v1_1_1m1234567890.js",
+    "folder/dash.plotly.v1_1_1m1234567890.js",
+    "nested.v1m1/folder/file.js",
+    "nested.v1m1.dotted/folder.structure/file.name.css",
 ]
 
 
@@ -64,8 +115,8 @@ def test_fingerprint():
 
     for resource in valid_fingerprints:
         (_, has_fingerprint) = check_fingerprint(resource)
-        assert has_fingerprint
+        assert has_fingerprint, resource
 
     for resource in invalid_fingerprints:
         (_, has_fingerprint) = check_fingerprint(resource)
-        assert not has_fingerprint
+        assert not has_fingerprint, resource
