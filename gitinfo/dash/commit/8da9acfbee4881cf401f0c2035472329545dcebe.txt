commit 8da9acfbee4881cf401f0c2035472329545dcebe
Author: Chris Parmer <chris@plot.ly>
Date:   Fri Aug 18 15:47:17 2017 -0400

    Fix Circle Tests

diff --git a/appveyor.yaml b/appveyor.yaml
deleted file mode 100644
index 397528c3..00000000
--- a/appveyor.yaml
+++ /dev/null
@@ -1,56 +0,0 @@
-# From https://github.com/cloudify-cosmo/appveyor-utils, recommended by
-# http://help.appveyor.com/discussions/questions/1548-a-configuration-file-for-tox
-environment:
-  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
-  # /E:ON and /V:ON options are not enabled in the batch script intepreter
-  # See: http://stackoverflow.com/a/13751649/163740
-  CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
-  TOX_ENV: "pywin"
-
-  nodejs_version: "6.9.2"
-
-  matrix:
-    - PYTHON: "C:\\Python27"
-      PYTHON_VERSION: "2.7.8"
-      PYTHON_ARCH: "32"
-
-    - PYTHON: "C:\\Python27-x64"
-      PYTHON_VERSION: "2.7.8"
-      PYTHON_ARCH: "64"
-
-install:
-  # Download setup scripts and unzip
-  - ps: "wget https://github.com/cloudify-cosmo/appveyor-utils/archive/master.zip -OutFile ./master.zip"
-  - "7z e master.zip */appveyor/* -oappveyor"
-
-  # Install Python (from the official .msi of http://python.org) and pip when
-  # not already installed.
-  - "powershell ./appveyor/install.ps1"
-
-  # Prepend newly installed Python to the PATH of this build (this cannot be
-  # done from inside the powershell script as it would require to restart
-  # the parent CMD process).
-  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
-
-  # Check that we have the expected version and architecture for Python
-  - "python --version"
-  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
-
-  # Get the latest stable version of Node.js or io.js
-  - ps: Install-Product node $env:nodejs_version
-  # install modules
-  - npm install
-
-build:
-  - npm run build-prod
-
-before_test:
-  - "%CMD_IN_ENV% pip install tox"
-
-test_script:
-  - "%CMD_IN_ENV% tox -e %TOX_ENV%"
-
-  # Node
-  - node --version
-  - npm --version
-  - npm run test
diff --git a/appveyor.yml b/appveyor.yml
deleted file mode 100644
index d7ab3e29..00000000
--- a/appveyor.yml
+++ /dev/null
@@ -1,51 +0,0 @@
-# Adapted from
-# https://github.com/PyCQA/pyflakes/blob/master/.appveyor.yml
-
-# To activate, change the Appveyor settings to use `.appveyor.yml`.
-install:
-  - python -m pip install -r dev-requirements.txt
-
-  # Fetch the three main PyPy releases
-  - ps: (New-Object Net.WebClient).DownloadFile('https://bitbucket.org/pypy/pypy/downloads/pypy-2.6.1-win32.zip', "$env:appveyor_build_folder\pypy-2.6.1-win32.zip")
-  - ps: 7z x pypy-2.6.1-win32.zip | Out-Null
-  - move pypy-2.6.1-win32 C:\
-
-  - ps: (New-Object Net.WebClient).DownloadFile('https://bitbucket.org/pypy/pypy/downloads/pypy2-v5.3.1-win32.zip', "$env:appveyor_build_folder\pypy2-v5.3.1-win32.zip")
-  - ps: 7z x pypy2-v5.3.1-win32.zip | Out-Null
-  - move pypy2-v5.3.1-win32 C:\
-
-  - ps: (New-Object Net.WebClient).DownloadFile('https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-win32.zip', "$env:appveyor_build_folder\pypy3-2.4.0-win32.zip")
-  - ps: 7z x pypy3-2.4.0-win32.zip | Out-Null
-  - move pypy3-2.4.0-win32 C:\
-
-  # pypy3 installer provides 'pypy.exe', not pypy3.exe.
-  - copy C:\pypy3-2.4.0-win32\pypy.exe C:\pypy3-2.4.0-win32\pypy3.exe
-
-  # Only pypy2-5.3.1 is integrated into tox, as pypy3-2.4.0 fails and
-  # a Windows distribution of pypy3-5.2 isnt available yet.
-  - ps: $env:path = "$env:path;C:\pypy2-v5.3.1-win32"
-
-  # pypy3-2.4.0 and pypy-2.6.1 are manually bootstrapped and tested
-  - ps: (New-Object Net.WebClient).DownloadFile('https://bootstrap.pypa.io/get-pip.py', "$env:appveyor_build_folder\get-pip.py")
-  # errors are ignored due to https://github.com/pypa/pip/issues/2669#issuecomment-136405390
-  # NOTE: If and when a new version of PyPy3 is released for Windows that
-  #       supports anything newer than Python 3.2, remove the setuptools pin.
-  - ps: C:\pypy3-2.4.0-win32\pypy3 "$env:appveyor_build_folder\get-pip.py"; C:\pypy3-2.4.0-win32\pypy3 -m pip install -U --force-reinstall pip==8.1.2 "setuptools<30"; echo "ignore error"
-  - ps: C:\pypy-2.6.1-win32\pypy "$env:appveyor_build_folder\get-pip.py"
-
-  # Get the latest stable version of Node.js or io.js
-  - ps: Install-Product node $env:nodejs_version
-  # install modules
-  - npm install
-  - npm install --only=dev
-  - ./node_modules/.bin/webpack --config=config/webpack.config.prod.js
-
-build: off
-
-test_script:
-  - python -m tox
-
-  # Node
-  - node --version
-  - npm --version
-  - npm run test
diff --git a/dev-requirements.txt b/dev-requirements.txt
index 971d712d..9d0576c9 100644
--- a/dev-requirements.txt
+++ b/dev-requirements.txt
@@ -1,6 +1,6 @@
-dash_core_components==0.4.0
-dash_html_components==0.5.0
-dash.ly==0.15.2
+dash_core_components==0.12.0
+dash_html_components==0.7.0
+dash==0.17.7
 percy
 selenium
 mock
diff --git a/tests/test_render.py b/tests/test_render.py
index d264c729..6e3693f5 100644
--- a/tests/test_render.py
+++ b/tests/test_render.py
@@ -63,7 +63,6 @@ class Tests(IntegrationTests):
 
         el = self.wait_for_element_by_id('_dash-app-content')
 
-        # TODO - Why is `font-size` being used not `fontSize`?
         # TODO - Make less fragile with http://lxml.de/lxmlhtml.html#html-diff
         rendered_dom = '''
             <div>
@@ -119,31 +118,32 @@ class Tests(IntegrationTests):
 
         # Somehow the html attributes are unordered.
         # Try different combinations (they're all valid html)
+        style_permutations = [
+            'style="color: red; font-size: 30px;"',
+            'style="font-size: 30px; color: red;"'
+        ]
         permutations = itertools.permutations([
             'id="p.c.3"',
             'class="my-class"',
             'title="tooltip"',
-            'style="color: red; font-size: 30px;"'
-        ], 4)
+        ], 3)
         passed = False
         for permutation in permutations:
-            passed = (
-                re.sub(comment_regex, '', el.get_attribute('innerHTML')) ==
-                re.sub(
+            for style in style_permutations:
+                actual_cleaned = re.sub(comment_regex, '', el.get_attribute('innerHTML'))
+                expected_cleaned = re.sub(
                     comment_regex,
                     '',
                     rendered_dom.replace('\n', '')
                                 .replace('    ', '')
-                                .replace('PERMUTE', ' '.join(permutation))
+                                .replace('PERMUTE', ' '.join(list(permutation) + [style]))
                 )
-            )
-            if passed:
-                break
+                passed = passed or (actual_cleaned == expected_cleaned)
         if not passed:
             raise Exception(
                 'HTML does not match\nActual:\n{}\n\nExpected:\n{}'.format(
-                    el.get_attribute('innerHTML'),
-                    rendered_dom
+                    actual_cleaned,
+                    expected_cleaned
                 )
             )
 
