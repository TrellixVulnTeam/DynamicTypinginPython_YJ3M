commit ebf51c96441b6fe460dd23b51bdcad0d334bc423
Author: byron <byron@plot.ly>
Date:   Sat Aug 17 03:40:51 2019 -0400

    optimize bundles for CI, react dev version is slow

diff --git a/.circleci/config.yml b/.circleci/config.yml
index a34aa8a9..6c827e7e 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -102,7 +102,7 @@ jobs:
           command: |
               . venv/bin/activate && pip install --upgrade -e . --quiet && mkdir packages
               python setup.py sdist && mv dist/* packages/
-              cd dash-renderer && npm run build && python setup.py sdist && mv dist/* ../packages/ && cd ..
+              cd dash-renderer && npm run build:ci && python setup.py sdist && mv dist/* ../packages/ && cd ..
               git clone --depth 1 https://github.com/plotly/dash-core-components.git
               cd dash-core-components && npm install --ignore-scripts && npm run build && python setup.py sdist && mv dist/* ../packages/  && cd ..
               git clone --depth 1 https://github.com/plotly/dash-renderer-test-components
diff --git a/dash-renderer/package.json b/dash-renderer/package.json
index 40068f04..eb2dbbbd 100644
--- a/dash-renderer/package.json
+++ b/dash-renderer/package.json
@@ -12,6 +12,7 @@
     "build:renderer": "webpack --mode development && webpack --mode production",
     "build:dev": "webpack --mode development --watch",
     "build": "renderer npm && renderer bundles",
+    "build:ci": "renderer npm && renderer bundles True",
     "start": "webpack-serve ./webpack.serve.config.js",
     "format": "prettier --config .prettierrc --write \"src/**/*.js\"",
     "format:test": "prettier --config .prettierrc \"src/**/*.js\" --list-different",
diff --git a/dash/development/build_renderer.py b/dash/development/build_renderer.py
index b6245742..c12608dc 100644
--- a/dash/development/build_renderer.py
+++ b/dash/development/build_renderer.py
@@ -67,7 +67,7 @@ def npm():
 
 
 @job("parse package-lock.json and produce the bundles")
-def bundles():
+def bundles(ci=False):
     # make sure we start from fresh folder
     if os.path.exists(assets):
         logger.warning(u"ðŸš¨ %s already exists, remove it!", assets)
@@ -95,10 +95,16 @@ def bundles():
             _concat((assets, "{}@{}.min.js".format(name, version))),
         )
 
-        shutil.copyfile(
-            _concat((npm_modules, name) + bundle["dev"]),
-            _concat((assets, "{}@{}.js".format(name, version))),
-        )
+        if ci and name != 'prop-types':
+            shutil.copyfile(
+                _concat((npm_modules, name) + bundle["prod"]),
+                _concat((assets, "{}@{}.js".format(name, version))),
+            )
+        else:
+            shutil.copyfile(
+                _concat((npm_modules, name) + bundle["dev"]),
+                _concat((assets, "{}@{}.js".format(name, version))),
+            )
 
     # run build
     os.chdir(renderer)
diff --git a/tests/integration/IntegrationTests.py b/tests/integration/IntegrationTests.py
index 0db03a6b..a450cb30 100644
--- a/tests/integration/IntegrationTests.py
+++ b/tests/integration/IntegrationTests.py
@@ -12,7 +12,7 @@ from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
 from selenium.webdriver.support.ui import WebDriverWait
 from selenium.webdriver.support import expected_conditions as EC
 
-TIMEOUT = 20
+TIMEOUT = 5
 
 
 class SeleniumDriverTimeout(Exception):
