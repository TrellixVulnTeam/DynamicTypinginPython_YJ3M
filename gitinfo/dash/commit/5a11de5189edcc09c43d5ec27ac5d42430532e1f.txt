commit 5a11de5189edcc09c43d5ec27ac5d42430532e1f
Author: alexcjohnson <alex@plot.ly>
Date:   Fri Mar 27 09:57:07 2020 -0400

    refactor callback validation tests order-agnostic
    py2 may alter the order...

diff --git a/tests/integration/devtools/test_callback_validation.py b/tests/integration/devtools/test_callback_validation.py
index 88246a93..a026af3c 100644
--- a/tests/integration/devtools/test_callback_validation.py
+++ b/tests/integration/devtools/test_callback_validation.py
@@ -8,26 +8,44 @@ debugging = dict(
 )
 
 
-def check_error(dash_duo, index, message, snippets):
+def check_errors(dash_duo, specs):
+    # Order-agnostic check of all the errors shown.
     # This is not fully general - despite the selectors below, it only applies
     # to front-end errors with no back-end errors in the list.
-    # Also the index is as on the page, which is opposite the execution order.
-
-    found_message = dash_duo.find_elements(".dash-fe-error__title")[index].text
-    assert found_message == message
-
-    if not snippets:
-        return
-
-    dash_duo.find_elements(".test-devtools-error-toggle")[index].click()
-
-    found_text = dash_duo.wait_for_element(".dash-backend-error").text
-    for snip in snippets:
-        assert snip in found_text
-
-    # hide the error detail again - so only one detail is be visible at a time
-    dash_duo.find_elements(".test-devtools-error-toggle")[index].click()
-    dash_duo.wait_for_no_elements(".dash-backend-error")
+    cnt = len(specs)
+    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, str(cnt))
+
+    found = []
+    for i in range(cnt):
+        msg = dash_duo.find_elements(".dash-fe-error__title")[i].text
+        dash_duo.find_elements(".test-devtools-error-toggle")[i].click()
+        txt = dash_duo.wait_for_element(".dash-backend-error").text
+        dash_duo.find_elements(".test-devtools-error-toggle")[i].click()
+        dash_duo.wait_for_no_elements(".dash-backend-error")
+        found.append((msg, txt))
+
+    orig_found = found[:]
+
+    for i, (message, snippets) in enumerate(specs):
+        for j, (msg, txt) in enumerate(found):
+            if msg == message and all(snip in txt for snip in snippets):
+                print(j)
+                found.pop(j)
+                break
+        else:
+            raise AssertionError(
+                (
+                    "error {} ({}) not found with text:\n"
+                    "  {}\nThe found messages were:\n---\n{}"
+                ).format(
+                    i,
+                    message,
+                    "\n  ".join(snippets),
+                    "\n---\n".join(
+                        "{}\n{}".format(msg, txt) for msg, txt in orig_found
+                    ),
+                )
+            )
 
 
 def test_dvcv001_blank(dash_duo):
@@ -39,17 +57,15 @@ def test_dvcv001_blank(dash_duo):
         return 42
 
     dash_duo.start_server(app, **debugging)
-
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "2")
-
-    check_error(
-        dash_duo, 0, "A callback is missing Inputs", ["there are no `Input` elements."]
-    )
-    check_error(
+    check_errors(
         dash_duo,
-        1,
-        "A callback is missing Outputs",
-        ["Please provide an output for this callback:"],
+        [
+            ["A callback is missing Inputs", ["there are no `Input` elements."]],
+            [
+                "A callback is missing Outputs",
+                ["Please provide an output for this callback:"],
+            ],
+        ],
     )
 
 
@@ -64,35 +80,33 @@ def test_dvcv002_blank_id_prop(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "5")
-
     # the first one is just an artifact... the other 4 we care about
-    check_error(dash_duo, 0, "Same `Input` and `Output`", [])
-
-    check_error(
-        dash_duo,
-        1,
-        "Callback item missing ID",
-        ['Input[0].id = ""', "Every item linked to a callback needs an ID"],
-    )
-    check_error(
-        dash_duo,
-        2,
-        "Callback property error",
-        ['Input[0].property = ""', "expected `property` to be a non-empty string."],
-    )
-    check_error(
-        dash_duo,
-        3,
-        "Callback item missing ID",
-        ['Output[1].id = ""', "Every item linked to a callback needs an ID"],
-    )
-    check_error(
-        dash_duo,
-        4,
-        "Callback property error",
-        ['Output[1].property = ""', "expected `property` to be a non-empty string."],
-    )
+    specs = [
+        ["Same `Input` and `Output`", []],
+        [
+            "Callback item missing ID",
+            ['Input[0].id = ""', "Every item linked to a callback needs an ID"],
+        ],
+        [
+            "Callback property error",
+            [
+                'Input[0].property = ""',
+                "expected `property` to be a non-empty string.",
+            ],
+        ],
+        [
+            "Callback item missing ID",
+            ['Output[1].id = ""', "Every item linked to a callback needs an ID"],
+        ],
+        [
+            "Callback property error",
+            [
+                'Output[1].property = ""',
+                "expected `property` to be a non-empty string.",
+            ],
+        ],
+    ]
+    check_errors(dash_duo, specs)
 
 
 def test_dvcv003_duplicate_outputs_same_callback(dash_duo):
@@ -114,24 +128,21 @@ def test_dvcv003_duplicate_outputs_same_callback(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "2")
-
-    check_error(
-        dash_duo,
-        0,
-        "Overlapping wildcard callback outputs",
+    specs = [
         [
-            'Output 1 ({"a":ALL}.children)',
-            'overlaps another output ({"a":1}.children)',
-            "used in this callback",
+            "Overlapping wildcard callback outputs",
+            [
+                'Output 1 ({"a":ALL}.children)',
+                'overlaps another output ({"a":1}.children)',
+                "used in this callback",
+            ],
         ],
-    )
-    check_error(
-        dash_duo,
-        1,
-        "Duplicate callback Outputs",
-        ["Output 1 (a.children) is already used by this callback."],
-    )
+        [
+            "Duplicate callback Outputs",
+            ["Output 1 (a.children) is already used by this callback."],
+        ],
+    ]
+    check_errors(dash_duo, specs)
 
 
 def test_dvcv004_duplicate_outputs_across_callbacks(dash_duo):
@@ -180,54 +191,35 @@ def test_dvcv004_duplicate_outputs_across_callbacks(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "5")
-
-    check_error(
-        dash_duo,
-        0,
-        "Overlapping wildcard callback outputs",
+    specs = [
         [
-            'Output 0 ({"a":MATCH}.children)',
-            'overlaps another output ({"a":1}.children)',
-            "used in a different callback.",
+            "Overlapping wildcard callback outputs",
+            [
+                'Output 0 ({"a":MATCH}.children)',
+                'overlaps another output ({"a":1}.children)',
+                "used in a different callback.",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        1,
-        "Overlapping wildcard callback outputs",
         [
-            'Output 1 ({"b":1,"c":ALL}.children)',
-            'overlaps another output ({"b":ALL,"c":1}.children)',
-            "used in a different callback.",
+            "Overlapping wildcard callback outputs",
+            [
+                'Output 1 ({"b":1,"c":ALL}.children)',
+                'overlaps another output ({"b":ALL,"c":1}.children)',
+                "used in a different callback.",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        2,
-        "Overlapping wildcard callback outputs",
         [
-            'Output 0 ({"a":ALL}.children)',
-            'overlaps another output ({"a":1}.children)',
-            "used in a different callback.",
+            "Overlapping wildcard callback outputs",
+            [
+                'Output 0 ({"a":ALL}.children)',
+                'overlaps another output ({"a":1}.children)',
+                "used in a different callback.",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        3,
-        "Duplicate callback outputs",
-        ["Output 0 (b.children) is already in use."],
-    )
-
-    check_error(
-        dash_duo,
-        4,
-        "Duplicate callback outputs",
-        ["Output 0 (a.children) is already in use."],
-    )
+        ["Duplicate callback outputs", ["Output 0 (b.children) is already in use."]],
+        ["Duplicate callback outputs", ["Output 0 (a.children) is already in use."]],
+    ]
+    check_errors(dash_duo, specs)
 
 
 def test_dvcv005_input_output_overlap(dash_duo):
@@ -257,43 +249,33 @@ def test_dvcv005_input_output_overlap(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "4")
-
-    check_error(
-        dash_duo,
-        0,
-        "Same `Input` and `Output`",
+    specs = [
         [
-            'Input 0 ({"b":MATCH,"c":1}.children)',
-            "can match the same component(s) as",
-            'Output 1 ({"b":MATCH,"c":1}.children)',
+            "Same `Input` and `Output`",
+            [
+                'Input 0 ({"b":MATCH,"c":1}.children)',
+                "can match the same component(s) as",
+                'Output 1 ({"b":MATCH,"c":1}.children)',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        1,
-        "Same `Input` and `Output`",
         [
-            'Input 0 ({"a":1}.children)',
-            "can match the same component(s) as",
-            'Output 0 ({"a":ALL}.children)',
+            "Same `Input` and `Output`",
+            [
+                'Input 0 ({"a":1}.children)',
+                "can match the same component(s) as",
+                'Output 0 ({"a":ALL}.children)',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        2,
-        "Same `Input` and `Output`",
-        ["Input 0 (c.children)", "matches Output 1 (c.children)"],
-    )
-
-    check_error(
-        dash_duo,
-        3,
-        "Same `Input` and `Output`",
-        ["Input 0 (a.children)", "matches Output 0 (a.children)"],
-    )
+        [
+            "Same `Input` and `Output`",
+            ["Input 0 (c.children)", "matches Output 1 (c.children)"],
+        ],
+        [
+            "Same `Input` and `Output`",
+            ["Input 0 (a.children)", "matches Output 0 (a.children)"],
+        ],
+    ]
+    check_errors(dash_duo, specs)
 
 
 def test_dvcv006_inconsistent_wildcards(dash_duo):
@@ -317,51 +299,41 @@ def test_dvcv006_inconsistent_wildcards(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "4")
-
-    check_error(
-        dash_duo,
-        0,
-        "`Input` / `State` wildcards not in `Output`s",
+    specs = [
         [
-            'State 0 ({"d":MATCH,"dd":MATCH}.children)',
-            "has MATCH or ALLSMALLER on key(s) d, dd",
-            'where Output 0 ({"a":MATCH}.children)',
+            "`Input` / `State` wildcards not in `Output`s",
+            [
+                'State 0 ({"d":MATCH,"dd":MATCH}.children)',
+                "has MATCH or ALLSMALLER on key(s) d, dd",
+                'where Output 0 ({"a":MATCH}.children)',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        1,
-        "`Input` / `State` wildcards not in `Output`s",
         [
-            'Input 1 ({"c":ALLSMALLER}.children)',
-            "has MATCH or ALLSMALLER on key(s) c",
-            'where Output 0 ({"a":MATCH}.children)',
+            "`Input` / `State` wildcards not in `Output`s",
+            [
+                'Input 1 ({"c":ALLSMALLER}.children)',
+                "has MATCH or ALLSMALLER on key(s) c",
+                'where Output 0 ({"a":MATCH}.children)',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        2,
-        "`Input` / `State` wildcards not in `Output`s",
         [
-            'Input 0 ({"b":MATCH}.children)',
-            "has MATCH or ALLSMALLER on key(s) b",
-            'where Output 0 ({"a":MATCH}.children)',
+            "`Input` / `State` wildcards not in `Output`s",
+            [
+                'Input 0 ({"b":MATCH}.children)',
+                "has MATCH or ALLSMALLER on key(s) b",
+                'where Output 0 ({"a":MATCH}.children)',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        3,
-        "Mismatched `MATCH` wildcards across `Output`s",
         [
-            'Output 1 ({"b":ALL,"c":1}.children)',
-            "does not have MATCH wildcards on the same keys as",
-            'Output 0 ({"b":MATCH}.children).',
+            "Mismatched `MATCH` wildcards across `Output`s",
+            [
+                'Output 1 ({"b":ALL,"c":1}.children)',
+                "does not have MATCH wildcards on the same keys as",
+                'Output 0 ({"b":MATCH}.children).',
+            ],
         ],
-    )
+    ]
+    check_errors(dash_duo, specs)
 
 
 def test_dvcv007_disallowed_ids(dash_duo):
@@ -377,49 +349,39 @@ def test_dvcv007_disallowed_ids(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "4")
-
-    check_error(
-        dash_duo,
-        0,
-        "Callback wildcard ID error",
+    specs = [
         [
-            'Input[0].id["b"] = {"c":1}',
-            "Wildcard callback ID values must be either wildcards",
-            "or constants of one of these types:",
-            "string, number, boolean",
+            "Callback wildcard ID error",
+            [
+                'Input[0].id["b"] = {"c":1}',
+                "Wildcard callback ID values must be either wildcards",
+                "or constants of one of these types:",
+                "string, number, boolean",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        1,
-        "Callback wildcard ID error",
         [
-            'Output[0].id["c"] = ALLSMALLER',
-            "Allowed wildcards for Outputs are:",
-            "ALL, MATCH",
+            "Callback wildcard ID error",
+            [
+                'Output[0].id["c"] = ALLSMALLER',
+                "Allowed wildcards for Outputs are:",
+                "ALL, MATCH",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        2,
-        "Callback wildcard ID error",
         [
-            'Output[0].id["a"] = [4]',
-            "Wildcard callback ID values must be either wildcards",
-            "or constants of one of these types:",
-            "string, number, boolean",
+            "Callback wildcard ID error",
+            [
+                'Output[0].id["a"] = [4]',
+                "Wildcard callback ID values must be either wildcards",
+                "or constants of one of these types:",
+                "string, number, boolean",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        3,
-        "Callback wildcard ID error",
-        ['Output[0].id has key ""', "Keys must be non-empty strings."],
-    )
+        [
+            "Callback wildcard ID error",
+            ['Output[0].id has key ""', "Keys must be non-empty strings."],
+        ],
+    ]
+    check_errors(dash_duo, specs)
 
 
 def bad_id_app(**kwargs):
@@ -461,63 +423,53 @@ def bad_id_app(**kwargs):
 def test_dvcv008_wrong_callback_id(dash_duo):
     dash_duo.start_server(bad_id_app(), **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "4")
-
-    check_error(
-        dash_duo,
-        0,
-        "ID not found in layout",
-        [
-            "Attempting to connect a callback Input item to component:",
-            '"yeah-no"',
-            "but no components with that id exist in the layout.",
-            "If you are assigning callbacks to components that are",
-            "generated by other callbacks (and therefore not in the",
-            "initial layout), you can suppress this exception by setting",
-            "`suppress_callback_exceptions=True`.",
-            "This ID was used in the callback(s) for Output(s):",
-            "outer-input.value",
+    specs = [
+        [
+            "ID not found in layout",
+            [
+                "Attempting to connect a callback Input item to component:",
+                '"yeah-no"',
+                "but no components with that id exist in the layout.",
+                "If you are assigning callbacks to components that are",
+                "generated by other callbacks (and therefore not in the",
+                "initial layout), you can suppress this exception by setting",
+                "`suppress_callback_exceptions=True`.",
+                "This ID was used in the callback(s) for Output(s):",
+                "outer-input.value",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        1,
-        "ID not found in layout",
         [
-            "Attempting to connect a callback Output item to component:",
-            '"nope"',
-            "but no components with that id exist in the layout.",
-            "This ID was used in the callback(s) for Output(s):",
-            "inner-div.children, nope.children",
+            "ID not found in layout",
+            [
+                "Attempting to connect a callback Output item to component:",
+                '"nope"',
+                "but no components with that id exist in the layout.",
+                "This ID was used in the callback(s) for Output(s):",
+                "inner-div.children, nope.children",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        2,
-        "ID not found in layout",
         [
-            "Attempting to connect a callback State item to component:",
-            '"what"',
-            "but no components with that id exist in the layout.",
-            "This ID was used in the callback(s) for Output(s):",
-            "inner-div.children, nope.children",
+            "ID not found in layout",
+            [
+                "Attempting to connect a callback State item to component:",
+                '"what"',
+                "but no components with that id exist in the layout.",
+                "This ID was used in the callback(s) for Output(s):",
+                "inner-div.children, nope.children",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        3,
-        "ID not found in layout",
         [
-            "Attempting to connect a callback Output item to component:",
-            '"nuh-uh"',
-            "but no components with that id exist in the layout.",
-            "This ID was used in the callback(s) for Output(s):",
-            "nuh-uh.children",
+            "ID not found in layout",
+            [
+                "Attempting to connect a callback Output item to component:",
+                '"nuh-uh"',
+                "but no components with that id exist in the layout.",
+                "This ID was used in the callback(s) for Output(s):",
+                "nuh-uh.children",
+            ],
         ],
-    )
+    ]
+    check_errors(dash_duo, specs)
 
 
 def test_dvcv009_suppress_callback_exceptions(dash_duo):
@@ -559,84 +511,68 @@ def test_dvcv010_bad_props(dash_duo):
 
     dash_duo.start_server(app, **debugging)
 
-    dash_duo.wait_for_text_to_equal(dash_duo.devtools_error_count_locator, "6")
-
-    check_error(
-        dash_duo,
-        0,
-        "Invalid prop for this component",
+    specs = [
         [
-            'Property "never" was used with component ID:',
-            '{"a":1}',
-            "in one of the Input items of a callback.",
-            "This ID is assigned to a dash_core_components.Input component",
-            "in the layout, which does not support this property.",
-            "This ID was used in the callback(s) for Output(s):",
-            '{"a":MATCH}.no',
+            "Invalid prop for this component",
+            [
+                'Property "never" was used with component ID:',
+                '{"a":1}',
+                "in one of the Input items of a callback.",
+                "This ID is assigned to a dash_core_components.Input component",
+                "in the layout, which does not support this property.",
+                "This ID was used in the callback(s) for Output(s):",
+                '{"a":MATCH}.no',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        1,
-        "Invalid prop for this component",
         [
-            'Property "nope" was used with component ID:',
-            '{"a":1}',
-            "in one of the State items of a callback.",
-            "This ID is assigned to a dash_core_components.Input component",
-            '{"a":MATCH}.no',
+            "Invalid prop for this component",
+            [
+                'Property "nope" was used with component ID:',
+                '{"a":1}',
+                "in one of the State items of a callback.",
+                "This ID is assigned to a dash_core_components.Input component",
+                '{"a":MATCH}.no',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        2,
-        "Invalid prop for this component",
         [
-            'Property "no" was used with component ID:',
-            '{"a":1}',
-            "in one of the Output items of a callback.",
-            "This ID is assigned to a dash_core_components.Input component",
-            '{"a":MATCH}.no',
+            "Invalid prop for this component",
+            [
+                'Property "no" was used with component ID:',
+                '{"a":1}',
+                "in one of the Output items of a callback.",
+                "This ID is assigned to a dash_core_components.Input component",
+                '{"a":MATCH}.no',
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        3,
-        "Invalid prop for this component",
         [
-            'Property "pdq" was used with component ID:',
-            '"inner-input"',
-            "in one of the Input items of a callback.",
-            "This ID is assigned to a dash_core_components.Input component",
-            "inner-div.xyz",
+            "Invalid prop for this component",
+            [
+                'Property "pdq" was used with component ID:',
+                '"inner-input"',
+                "in one of the Input items of a callback.",
+                "This ID is assigned to a dash_core_components.Input component",
+                "inner-div.xyz",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        4,
-        "Invalid prop for this component",
         [
-            'Property "value" was used with component ID:',
-            '"inner-div"',
-            "in one of the State items of a callback.",
-            "This ID is assigned to a dash_html_components.Div component",
-            "inner-div.xyz",
+            "Invalid prop for this component",
+            [
+                'Property "value" was used with component ID:',
+                '"inner-div"',
+                "in one of the State items of a callback.",
+                "This ID is assigned to a dash_html_components.Div component",
+                "inner-div.xyz",
+            ],
         ],
-    )
-
-    check_error(
-        dash_duo,
-        5,
-        "Invalid prop for this component",
         [
-            'Property "xyz" was used with component ID:',
-            '"inner-div"',
-            "in one of the Output items of a callback.",
-            "This ID is assigned to a dash_html_components.Div component",
-            "inner-div.xyz",
+            "Invalid prop for this component",
+            [
+                'Property "xyz" was used with component ID:',
+                '"inner-div"',
+                "in one of the Output items of a callback.",
+                "This ID is assigned to a dash_html_components.Div component",
+                "inner-div.xyz",
+            ],
         ],
-    )
+    ]
+    check_errors(dash_duo, specs)
