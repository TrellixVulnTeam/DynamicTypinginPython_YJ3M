commit 9d59e91533186c6feb56e0c7f2273d19fe75555a
Author: byron <byron@plot.ly>
Date:   Sun Apr 14 22:53:23 2019 -0400

    :rotating_light: fix lint error

diff --git a/dash/_configs.py b/dash/_configs.py
index 3e9354f7..886772ac 100644
--- a/dash/_configs.py
+++ b/dash/_configs.py
@@ -4,32 +4,34 @@ import os
 from . import exceptions
 from ._utils import AttributeDict
 
-load_dash_env_vars = lambda: AttributeDict(
-    {
-        var: os.getenv(var, os.getenv(var.lower()))
-        for var in (
-            'DASH_APP_NAME',
-            'DASH_URL_BASE_PATHNAME',
-            'DASH_ROUTES_PATHNAME_PREFIX',
-            'DASH_REQUESTS_PATHNAME_PREFIX',
-            'DASH_SUPPRESS_CALLBACK_EXCEPTIONS',
-            'DASH_ASSETS_EXTERNAL_PATH',
-            'DASH_INCLUDE_ASSETS_FILES',
-            'DASH_COMPONENTS_CACHE_MAX_AGE',
-            'DASH_INCLUDE_ASSETS_FILES',
-            'DASH_SERVE_DEV_BUNDLES',
-            'DASH_DEBUG',
-            'DASH_HOT_RELOAD',
-            'DASH_HOT_RELOAD_INTERVAL',
-            'DASH_HOT_RELOAD_WATCH_INTERVAL',
-            'DASH_HOT_RELOAD_MAX_RETRY',
-            'DASH_SILENCE_ROUTES_LOGGING',
-        )
-    }
-)
+def load_dash_env_vars():
+    return AttributeDict(
+        {
+            var: os.getenv(var, os.getenv(var.lower()))
+            for var in (
+                'DASH_APP_NAME',
+                'DASH_URL_BASE_PATHNAME',
+                'DASH_ROUTES_PATHNAME_PREFIX',
+                'DASH_REQUESTS_PATHNAME_PREFIX',
+                'DASH_SUPPRESS_CALLBACK_EXCEPTIONS',
+                'DASH_ASSETS_EXTERNAL_PATH',
+                'DASH_INCLUDE_ASSETS_FILES',
+                'DASH_COMPONENTS_CACHE_MAX_AGE',
+                'DASH_INCLUDE_ASSETS_FILES',
+                'DASH_SERVE_DEV_BUNDLES',
+                'DASH_DEBUG',
+                'DASH_HOT_RELOAD',
+                'DASH_HOT_RELOAD_INTERVAL',
+                'DASH_HOT_RELOAD_WATCH_INTERVAL',
+                'DASH_HOT_RELOAD_MAX_RETRY',
+                'DASH_SILENCE_ROUTES_LOGGING',
+            )
+        }
+    )
 
 DASH_ENV_VARS = load_dash_env_vars()
 
+
 def get_combined_config(name, val, default=None):
     '''consolidate the config with priority from high to low
     provided init value > OS environ > default
@@ -44,6 +46,7 @@ def get_combined_config(name, val, default=None):
     return env.lower() == 'true' if env.lower() in {'true', 'false'} \
         else env
 
+
 def pathname_configs(
         url_base_pathname=None,
         routes_pathname_prefix=None,
