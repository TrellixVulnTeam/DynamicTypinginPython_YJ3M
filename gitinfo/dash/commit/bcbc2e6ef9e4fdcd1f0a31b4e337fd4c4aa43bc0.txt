commit bcbc2e6ef9e4fdcd1f0a31b4e337fd4c4aa43bc0
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Fri Jun 17 09:45:03 2016 -0700

    Move `component-suites/` to an external repo
    
    `dash-components-core`

diff --git a/component-suites/config/.eslintrc.json b/component-suites/config/.eslintrc.json
deleted file mode 100644
index 57305a48..00000000
--- a/component-suites/config/.eslintrc.json
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-    "extends": "../../config/eslint/eslintrc-node.json"
-}
diff --git a/component-suites/config/webpack.config.dev.js b/component-suites/config/webpack.config.dev.js
deleted file mode 100644
index acf718b3..00000000
--- a/component-suites/config/webpack.config.dev.js
+++ /dev/null
@@ -1,18 +0,0 @@
-'use strict';
-
-var compose = require('ramda').compose;
-
-var babel = require('../../config/partials/babel');
-var defineEnv = require('../../config/partials/defineEnv');
-var entryDev = require('../../config/partials/entryDev')
-var outputDev = require('../../config/partials/outputDev');
-var sourceMapDev = require('../../config/partials/sourceMapDev');
-var baseConfig = require('./webpack.config');
-
-module.exports = compose(
-    babel,
-    defineEnv,
-    entryDev,
-    outputDev,
-    sourceMapDev
-)(baseConfig);
diff --git a/component-suites/config/webpack.config.js b/component-suites/config/webpack.config.js
deleted file mode 100644
index b72ec98f..00000000
--- a/component-suites/config/webpack.config.js
+++ /dev/null
@@ -1,17 +0,0 @@
-'use strict';
-
-var path = require('path');
-
-var ROOT = process.cwd();
-var SRC = path.join(ROOT, 'src');
-
-module.exports = {
-    cache: false,
-    // Resolution path for `entry`.
-    context: SRC,
-    resolve: {
-        // Need `''` so referencing modules by `name.js` works.
-        extensions: ['', '.js', '.jsx'],
-        modulesDirectories: ['node_modules']
-    }
-};
diff --git a/component-suites/package.json b/component-suites/package.json
deleted file mode 100644
index 6920eb51..00000000
--- a/component-suites/package.json
+++ /dev/null
@@ -1,28 +0,0 @@
-{
-  "name": "component-suites",
-  "version": "0.0.1",
-  "description": "Component suites for Dash2",
-  "main": "lib/basic/index.js",
-  "scripts": {
-    "clean-lib": "mkdir -p lib && rm -rf lib/*",
-    "transpile-dev": "npm run clean-lib && npm run extract-metadata && ../node_modules/.bin/babel --source-root ./src/ -d lib/ src/",
-    "transpile-dev-watch": "npm run clean-lib && npm run extract-metadata && ../node_modules/.bin/babel --watch --source-root ./src/ -d lib/ src/",
-    "build-dev": "../node_modules/.bin/webpack --config=config/webpack.config.dev.js",
-    "extract-metadata": "mkdir -p lib && react-docgen --pretty -o lib/metadata.json src/basic/components",
-    "dev": "../node_modules/.bin/webpack-dev-server --config=config/webpack.config.dev.js",
-    "lint": "../node_modules/.bin/eslint --quiet --fix --ignore-path ../.gitignore .",
-    "start": "npm run transpile-dev-watch",
-    "test": "npm run lint"
-  },
-  "author": "Per Nilsson <per@sproutlab.com>",
-  "license": "MIT",
-  "dependencies": {
-    "radium": "^0.17.1",
-    "ramda": "^0.21.0",
-    "react-docgen": "^2.8.2",
-    "react-dom": "^15.1.0"
-  },
-  "devDependencies": {
-    "react": "^15.1.0"
-  }
-}
diff --git a/component-suites/src/basic/Styles.js b/component-suites/src/basic/Styles.js
deleted file mode 100644
index 8add81be..00000000
--- a/component-suites/src/basic/Styles.js
+++ /dev/null
@@ -1,12 +0,0 @@
-const palette = {
-    feature: 'rgb(35, 189, 228)',
-    contrast: 'rgb(255, 40, 29)',
-    base: 'rgb(45, 58, 60)',
-    baseHover: 'rgba(45, 58, 60, 0.8)',
-    baselight: 'rgb(245, 246, 249)',
-    background: 'rgb(255, 255, 255)'
-};
-
-export default {
-    colors: palette
-}
diff --git a/component-suites/src/basic/components/EditableDiv.react.js b/component-suites/src/basic/components/EditableDiv.react.js
deleted file mode 100644
index ae63ddcb..00000000
--- a/component-suites/src/basic/components/EditableDiv.react.js
+++ /dev/null
@@ -1,91 +0,0 @@
-import R from 'ramda';
-import React, {Component, PropTypes} from 'react';
-import ReactDOM from 'react-dom';
-
-// each suite might have its own set of Styles
-import Styles from '../Styles';
-
-const baseStyles = {
-    color: Styles.colors.base,
-    ':hover': {
-        color: Styles.colors.baseHover
-    }
-}
-
-/**
- * A div for displaying text. The text is editable.
- */
-export default class EditableDiv extends Component {
-
-    constructor(props) {
-        super(props);
-        this.state = {inEditMode: false};
-    }
-
-    componentDidUpdate() {
-        if (this.state.inEditMode) ReactDOM.findDOMNode(this.refs.input).focus();
-    }
-
-    render() {
-        if (this.state.inEditMode) {
-            return (
-                <div>
-                    <input
-                        ref="input"
-                        autofocus={true}
-                        style={R.mergeAll([
-                            {border: 'none', padding: 0, margin: 0},
-                            baseStyles,
-                            this.props.style
-                        ])}
-                        value={this.props.text}
-                        onChange={(e) => this.props.updateProps({text: e.target.value})}
-                        onBlur={() => this.setState({inEditMode: false})}
-                    />
-                </div>
-            );
-        }
-        else {
-            return (
-                <div style={R.merge(baseStyles, this.props.style)}
-                     onClick={() => {
-                        if (this.props.editable) this.setState({inEditMode: true});
-                    }}
-                >
-                    {this.props.text}
-                </div>
-            );
-        }
-    }
-
-}
-
-EditableDiv.propTypes = {
-
-    /**
-     * The displayed text of this component.
-     */
-    text: PropTypes.string.isRequired,
-
-    /**
-     * The style of the text.
-     */
-    style: PropTypes.object,
-
-    /**
-     * Whether or not this component should be rendered as editable.
-     * Passed in from renderer.
-     */
-    editable: PropTypes.bool,
-
-    /**
-     * Function that updates the state tree.
-     * Passed in from renderer.
-     */
-    updateProps: PropTypes.func.isRequired
-};
-
-EditableDiv.defaultProps = {
-    style: {},
-    editable: false
-};
diff --git a/component-suites/src/basic/components/Header.react.js b/component-suites/src/basic/components/Header.react.js
deleted file mode 100644
index f418ecbc..00000000
--- a/component-suites/src/basic/components/Header.react.js
+++ /dev/null
@@ -1,22 +0,0 @@
-'use strict';
-
-import React, {Component, PropTypes} from 'react';
-
-/**
- * A component that greets a person in a header
- */
-class Header extends Component {
-    render() {
-        return <h2>Hello, {this.props.name}</h2>;
-    }
-}
-
-Header.propTypes = {
-
-    /**
-     * The name of the person you want to greet
-     */
-    name: PropTypes.string.isRequired
-};
-
-export default Header;
diff --git a/component-suites/src/basic/components/InputControl.react.js b/component-suites/src/basic/components/InputControl.react.js
deleted file mode 100644
index fc1d4a5f..00000000
--- a/component-suites/src/basic/components/InputControl.react.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import React, {Component, PropTypes} from 'react';
-
-/*
- * A controlled input that calls `notifyObservers` on changes.
- */
-export default class InputControl extends Component {
-    constructor() {
-        super();
-        this.state = {
-            value: ''
-        }
-    }
-
-    handleChange(value) {
-        this.setState({value});
-        /**
-         * TODO (#22): Remove conditional. Always pass a callback function
-         * to components that can change value.
-         */
-        if (this.props.notifyObservers) {
-            this.props.notifyObservers({value})
-        }
-    }
-
-    render() {
-        return (
-            <input
-                value={this.state.value}
-                onChange={e => this.handleChange(e.target.value)}
-                {...this.props}
-            />
-        );
-    }
-}
-
-InputControl.propTypes = {
-
-    /**
-     * Function that updates the state tree.
-     * Passed in from renderer IF the component has observers.
-     * TODO (#22): Always pass a callback function to components that can change
-     * value.
-     */
-    notifyObservers: PropTypes.func
-};
diff --git a/component-suites/src/basic/index.js b/component-suites/src/basic/index.js
deleted file mode 100644
index 81ff515f..00000000
--- a/component-suites/src/basic/index.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import Radium from 'radium';
-
-import _EditableDiv from './components/EditableDiv.react';
-import Header from './components/Header.react';
-import InputControl from './components/InputControl.react';
-
-const EditableDiv = Radium(_EditableDiv);
-
-export {
-    EditableDiv,
-    Header,
-    InputControl
-};
\ No newline at end of file
diff --git a/renderer/package.json b/renderer/package.json
index 24a5e690..ccea1299 100644
--- a/renderer/package.json
+++ b/renderer/package.json
@@ -17,6 +17,7 @@
   "author": "chriddyp",
   "license": "MIT",
   "dependencies": {
+    "dash-components-core": "0.0.3",
     "dependency-graph": "^0.4.1",
     "immutable": "^3.8.1",
     "json-loader": "^0.5.4",
diff --git a/renderer/src/registry.js b/renderer/src/registry.js
index 65b6396a..02fc166c 100644
--- a/renderer/src/registry.js
+++ b/renderer/src/registry.js
@@ -1,7 +1,7 @@
 'use strict';
 
 /* eslint-disable import/named */
-import { EditableDiv, Header, InputControl } from '../../component-suites/lib/basic';
+import { EditableDiv, Header, InputControl } from '../../node_modules/dash-components-core/lib/basic';
 /* eslint-enable import/named */
 
 import EditableContent from './components/core/EditableContent.react';
