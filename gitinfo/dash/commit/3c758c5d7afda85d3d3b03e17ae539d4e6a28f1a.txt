commit 3c758c5d7afda85d3d3b03e17ae539d4e6a28f1a
Author: t4rk1n <t4rk@outlook.com>
Date:   Thu Feb 14 12:59:37 2019 -0500

    :bug: Fix hot reload adding the changed component dist to the assets.

diff --git a/dash/dash.py b/dash/dash.py
index 42dc2bb3..ecb7bbf1 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -1193,42 +1193,43 @@ class Dash(object):
         self._hard_reload = True
         self._reload_hash = _generate_hash()
 
-        asset_path = os.path.relpath(
-            filename, os.path.commonprefix([self._assets_folder, filename]))\
-            .replace('\\', '/').lstrip('/')
-
-        self._changed_assets.append({
-            'url': self.get_asset_url(asset_path),
-            'modified': int(modified),
-            'is_css': filename.endswith('css')
-        })
-
-        if filename not in self._assets_files and not deleted:
-            res = self._add_assets_resource(asset_path, filename)
-            if filename.endswith('js'):
-                self.scripts.append_script(res)
-            elif filename.endswith('css'):
-                self.css.append_css(res)
-
-        if deleted:
-            if filename in self._assets_files:
-                self._assets_files.remove(filename)
-
-            def delete_resource(resources):
-                to_delete = None
-                for r in resources:
-                    if r.get('asset_path') == asset_path:
-                        to_delete = r
-                        break
-                if to_delete:
-                    resources.remove(to_delete)
-
-            if filename.endswith('js'):
-                # pylint: disable=protected-access
-                delete_resource(self.scripts._resources._resources)
-            elif filename.endswith('css'):
-                # pylint: disable=protected-access
-                delete_resource(self.css._resources._resources)
+        if self._assets_folder in filename:
+            asset_path = os.path.relpath(
+                filename, os.path.commonprefix([self._assets_folder, filename])
+            ).replace('\\', '/').lstrip('/')
+
+            self._changed_assets.append({
+                'url': self.get_asset_url(asset_path),
+                'modified': int(modified),
+                'is_css': filename.endswith('css')
+            })
+
+            if filename not in self._assets_files and not deleted:
+                res = self._add_assets_resource(asset_path, filename)
+                if filename.endswith('js'):
+                    self.scripts.append_script(res)
+                elif filename.endswith('css'):
+                    self.css.append_css(res)
+
+            if deleted:
+                if filename in self._assets_files:
+                    self._assets_files.remove(filename)
+
+                def delete_resource(resources):
+                    to_delete = None
+                    for r in resources:
+                        if r.get('asset_path') == asset_path:
+                            to_delete = r
+                            break
+                    if to_delete:
+                        resources.remove(to_delete)
+
+                if filename.endswith('js'):
+                    # pylint: disable=protected-access
+                    delete_resource(self.scripts._resources._resources)
+                elif filename.endswith('css'):
+                    # pylint: disable=protected-access
+                    delete_resource(self.css._resources._resources)
 
         self._lock.release()
 
