commit 4566a924ef109191660bf2176a24713896b004ef
Author: Carl Dawson <carl@carlsdawson.com>
Date:   Tue May 12 16:48:30 2020 -0700

    :tiger2: integration tests

diff --git a/tests/integration/clientside/assets/clientside.js b/tests/integration/clientside/assets/clientside.js
index 067d7b4a..eaee0e6a 100644
--- a/tests/integration/clientside/assets/clientside.js
+++ b/tests/integration/clientside/assets/clientside.js
@@ -56,6 +56,30 @@ window.dash_clientside.clientside = {
                 resolve('foo');
             }, 1);
         });
-    }
+    },
 
-}
+    triggered_to_str: function(n_clicks0, n_clicks1) {
+        const triggered = dash_clientside.callback_context.triggered;
+        return triggered.map(t => `${t.prop_id} = ${t.value}`).join(', ');
+    },
+
+    inputs_to_str: function(n_clicks0, n_clicks1) {
+        const inputs = dash_clientside.callback_context.inputs;
+        const keys = Object.keys(inputs);
+        return keys.map(k => `${k} = ${inputs[k]}`).join(', ');
+    },
+
+    inputs_list_to_str: function(n_clicks0, n_clicks1) {
+        return JSON.stringify(dash_clientside.callback_context.inputs_list);
+    },
+
+    states_to_str: function(val0, val1, st0, st1) {
+        const states = dash_clientside.callback_context.states;
+        const keys = Object.keys(states);
+        return keys.map(k => `${k} = ${states[k]}`).join(', ');
+    },
+
+    states_list_to_str: function(val0, val1, st0, st1) {
+        return JSON.stringify(dash_clientside.callback_context.states_list);
+    }
+};
diff --git a/tests/integration/clientside/test_clientside.py b/tests/integration/clientside/test_clientside.py
index 7fa87e47..dfb777b8 100644
--- a/tests/integration/clientside/test_clientside.py
+++ b/tests/integration/clientside/test_clientside.py
@@ -5,7 +5,7 @@ import dash_html_components as html
 import dash_core_components as dcc
 from dash import Dash
 from dash.dependencies import Input, Output, State, ClientsideFunction, ALL
-import dash
+from selenium.webdriver.common.keys import Keys
 
 
 def test_clsd001_simple_clientside_serverside_callback(dash_duo):
@@ -377,48 +377,311 @@ def test_clsd009_clientside_callback_context_triggered(dash_duo):
             html.Button("btn1:0", id={"btn1": 0}),
             html.Button("btn1:1", id={"btn1": 1}),
             html.Button("btn1:2", id={"btn1": 2}),
-            html.Div(id="output-clientside"),
+            html.Div(id="output-clientside", style={"font-family": "monospace"}),
         ]
     )
 
     app.clientside_callback(
-        """
-        function (n_clicks0, n_clicks1) {
-            console.log(dash_clientside.callback_context)
-            return `triggered: ${JSON.stringify(dash_clientside.callback_context.triggered)}`
-        }
-        """,
+        ClientsideFunction(namespace="clientside", function_name="triggered_to_str"),
         Output("output-clientside", "children"),
-        [Input("btn0", "n_clicks"),
-         Input({"btn1": ALL}, "n_clicks")],
+        [Input("btn0", "n_clicks"), Input({"btn1": ALL}, "n_clicks")],
     )
 
     dash_duo.start_server(app)
 
+    dash_duo.wait_for_text_to_equal("#output-clientside", ". = null")
+
+    dash_duo.find_element("#btn0").click()
+
     dash_duo.wait_for_text_to_equal(
-        "#output-clientside", r'triggered: [{"prop_id":".","value":null}]'
+        "#output-clientside", "btn0.n_clicks = 1",
+    )
+
+    dash_duo.find_element("button[id*='btn1\":0']").click()
+    dash_duo.find_element("button[id*='btn1\":0']").click()
+
+    dash_duo.wait_for_text_to_equal("#output-clientside", '{"btn1":0}.n_clicks = 2')
+
+    dash_duo.find_element("button[id*='btn1\":2']").click()
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside", '{"btn1":2}.n_clicks = 1',
+    )
+
+
+def test_clsd010_clientside_callback_context_inputs(dash_duo):
+    app = Dash(__name__, assets_folder="assets")
+
+    app.layout = html.Div(
+        [
+            html.Button("btn0", id="btn0"),
+            html.Button("btn1:0", id={"btn1": 0}),
+            html.Button("btn1:1", id={"btn1": 1}),
+            html.Button("btn1:2", id={"btn1": 2}),
+            html.Div(id="output-clientside", style={"font-family": "monospace"}),
+        ]
+    )
+
+    app.clientside_callback(
+        ClientsideFunction(namespace="clientside", function_name="inputs_to_str"),
+        Output("output-clientside", "children"),
+        [Input("btn0", "n_clicks"), Input({"btn1": ALL}, "n_clicks")],
+    )
+
+    dash_duo.start_server(app)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            "btn0.n_clicks = null, "
+            '{"btn1":0}.n_clicks = null, '
+            '{"btn1":1}.n_clicks = null, '
+            '{"btn1":2}.n_clicks = null'
+        ),
     )
 
     dash_duo.find_element("#btn0").click()
 
     dash_duo.wait_for_text_to_equal(
         "#output-clientside",
-        r'triggered: [{"prop_id":"btn0.n_clicks","value":1}]',
+        (
+            "btn0.n_clicks = 1, "
+            '{"btn1":0}.n_clicks = null, '
+            '{"btn1":1}.n_clicks = null, '
+            '{"btn1":2}.n_clicks = null'
+        ),
     )
 
+    dash_duo.find_element("button[id*='btn1\":0']").click()
     dash_duo.find_element("button[id*='btn1\":0']").click()
 
     dash_duo.wait_for_text_to_equal(
         "#output-clientside",
-        r'triggered: [{"prop_id":"{\"btn1\":0}.n_clicks","value":1}]',
+        (
+            "btn0.n_clicks = 1, "
+            '{"btn1":0}.n_clicks = 2, '
+            '{"btn1":1}.n_clicks = null, '
+            '{"btn1":2}.n_clicks = null'
+        ),
     )
 
     dash_duo.find_element("button[id*='btn1\":2']").click()
 
     dash_duo.wait_for_text_to_equal(
         "#output-clientside",
-        r'triggered: [{"prop_id":"{\"btn1\":2}.n_clicks","value":1}]',
+        (
+            "btn0.n_clicks = 1, "
+            '{"btn1":0}.n_clicks = 2, '
+            '{"btn1":1}.n_clicks = null, '
+            '{"btn1":2}.n_clicks = 1'
+        ),
+    )
+
+
+def test_clsd011_clientside_callback_context_inputs_list(dash_duo):
+    app = Dash(__name__, assets_folder="assets")
+
+    app.layout = html.Div(
+        [
+            html.Button("btn0", id="btn0"),
+            html.Button("btn1:0", id={"btn1": 0}),
+            html.Button("btn1:1", id={"btn1": 1}),
+            html.Button("btn1:2", id={"btn1": 2}),
+            html.Div(id="output-clientside", style={"font-family": "monospace"}),
+        ]
+    )
+
+    app.clientside_callback(
+        ClientsideFunction(namespace="clientside", function_name="inputs_list_to_str"),
+        Output("output-clientside", "children"),
+        [Input("btn0", "n_clicks"), Input({"btn1": ALL}, "n_clicks")],
+    )
+
+    dash_duo.start_server(app)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"btn0","property":"n_clicks"},'
+            '[{"id":{"btn1":0},"property":"n_clicks"},'
+            '{"id":{"btn1":1},"property":"n_clicks"},'
+            '{"id":{"btn1":2},"property":"n_clicks"}]]'
+        ),
+    )
+
+    dash_duo.find_element("#btn0").click()
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"btn0","property":"n_clicks","value":1},'
+            '[{"id":{"btn1":0},"property":"n_clicks"},'
+            '{"id":{"btn1":1},"property":"n_clicks"},'
+            '{"id":{"btn1":2},"property":"n_clicks"}]]'
+        ),
+    )
+
+    dash_duo.find_element("button[id*='btn1\":0']").click()
+    dash_duo.find_element("button[id*='btn1\":0']").click()
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"btn0","property":"n_clicks","value":1},'
+            '[{"id":{"btn1":0},"property":"n_clicks","value":2},'
+            '{"id":{"btn1":1},"property":"n_clicks"},'
+            '{"id":{"btn1":2},"property":"n_clicks"}]]'
+        ),
     )
 
+    dash_duo.find_element("button[id*='btn1\":2']").click()
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"btn0","property":"n_clicks","value":1},'
+            '[{"id":{"btn1":0},"property":"n_clicks","value":2},'
+            '{"id":{"btn1":1},"property":"n_clicks"},'
+            '{"id":{"btn1":2},"property":"n_clicks","value":1}]]'
+        ),
+    )
     # TODO: flush out these tests and make them look prettier.
     #  Maybe one test for each of the callback_context properties?
+
+
+def test_clsd012_clientside_callback_context_states(dash_duo):
+    app = Dash(__name__, assets_folder="assets")
+
+    app.layout = html.Div(
+        [
+            dcc.Input(id="in0"),
+            dcc.Input(id={"in1": 0}),
+            dcc.Input(id={"in1": 1}),
+            dcc.Input(id={"in1": 2}),
+            html.Div(id="output-clientside", style={"font-family": "monospace"}),
+        ]
+    )
+
+    app.clientside_callback(
+        ClientsideFunction(namespace="clientside", function_name="states_to_str"),
+        Output("output-clientside", "children"),
+        [Input("in0", "n_submit"), Input({"in1": ALL}, "n_submit")],
+        [State("in0", "value"), State({"in1": ALL}, "value")],
+    )
+
+    dash_duo.start_server(app)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            "in0.value = null, "
+            '{"in1":0}.value = null, '
+            '{"in1":1}.value = null, '
+            '{"in1":2}.value = null'
+        ),
+    )
+
+    dash_duo.find_element("#in0").send_keys("test 0" + Keys.RETURN)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            "in0.value = test 0, "
+            '{"in1":0}.value = null, '
+            '{"in1":1}.value = null, '
+            '{"in1":2}.value = null'
+        ),
+    )
+
+    dash_duo.find_element("input[id*='in1\":0']").send_keys("test 1" + Keys.RETURN)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            "in0.value = test 0, "
+            '{"in1":0}.value = test 1, '
+            '{"in1":1}.value = null, '
+            '{"in1":2}.value = null'
+        ),
+    )
+
+    dash_duo.find_element("input[id*='in1\":2']").send_keys("test 2" + Keys.RETURN)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            "in0.value = test 0, "
+            '{"in1":0}.value = test 1, '
+            '{"in1":1}.value = null, '
+            '{"in1":2}.value = test 2'
+        ),
+    )
+
+
+def test_clsd013_clientside_callback_context_states_list(dash_duo):
+    app = Dash(__name__, assets_folder="assets")
+
+    app.layout = html.Div(
+        [
+            dcc.Input(id="in0"),
+            dcc.Input(id={"in1": 0}),
+            dcc.Input(id={"in1": 1}),
+            dcc.Input(id={"in1": 2}),
+            html.Div(id="output-clientside", style={"font-family": "monospace"}),
+        ]
+    )
+
+    app.clientside_callback(
+        ClientsideFunction(namespace="clientside", function_name="states_list_to_str"),
+        Output("output-clientside", "children"),
+        [Input("in0", "n_submit"), Input({"in1": ALL}, "n_submit")],
+        [State("in0", "value"), State({"in1": ALL}, "value")],
+    )
+
+    dash_duo.start_server(app)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"in0","property":"value"},'
+            '[{"id":{"in1":0},"property":"value"},'
+            '{"id":{"in1":1},"property":"value"},'
+            '{"id":{"in1":2},"property":"value"}]]'
+        ),
+    )
+
+    dash_duo.find_element("#in0").send_keys("test 0" + Keys.RETURN)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"in0","property":"value","value":"test 0"},'
+            '[{"id":{"in1":0},"property":"value"},'
+            '{"id":{"in1":1},"property":"value"},'
+            '{"id":{"in1":2},"property":"value"}]]'
+        ),
+    )
+
+    dash_duo.find_element("input[id*='in1\":0']").send_keys("test 1" + Keys.RETURN)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"in0","property":"value","value":"test 0"},'
+            '[{"id":{"in1":0},"property":"value","value":"test 1"},'
+            '{"id":{"in1":1},"property":"value"},'
+            '{"id":{"in1":2},"property":"value"}]]'
+        ),
+    )
+
+    dash_duo.find_element("input[id*='in1\":2']").send_keys("test 2" + Keys.RETURN)
+
+    dash_duo.wait_for_text_to_equal(
+        "#output-clientside",
+        (
+            '[{"id":"in0","property":"value","value":"test 0"},'
+            '[{"id":{"in1":0},"property":"value","value":"test 1"},'
+            '{"id":{"in1":1},"property":"value"},'
+            '{"id":{"in1":2},"property":"value","value":"test 2"}]]'
+        ),
+    )
