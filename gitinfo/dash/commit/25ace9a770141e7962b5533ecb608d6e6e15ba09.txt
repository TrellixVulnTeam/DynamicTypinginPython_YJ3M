commit 25ace9a770141e7962b5533ecb608d6e6e15ba09
Author: byron <byron@plot.ly>
Date:   Mon Jun 3 16:58:19 2019 -0400

    :alembic:
    
    tuning the tests with docker failure

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 5011b90d..8be8538b 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -16,6 +16,7 @@ from selenium.common.exceptions import WebDriverException, TimeoutException
 from dash.testing.wait import text_to_equal
 from dash.testing.errors import DashAppLoadingError
 
+
 logger = logging.getLogger(__name__)
 
 
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index 0a0d9a25..f0068625 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -1,3 +1,4 @@
+# pylint: disable=too-few-public-methods
 """Utils methods for pytest-dash such wait_for wrappers"""
 import time
 import logging
@@ -13,24 +14,46 @@ def until(
     poll=0.1,
     msg="expected condition not met within timeout",
 ):  # noqa: C0330
+    res = None
+    logger.debug(
+        "start wait.until with %s, timeout[%s], poll[%s]",
+        wait_cond,
+        timeout,
+        poll,
+    )
     end_time = time.time() + timeout
-    while not wait_cond():
+    while not res:
         if time.time() > end_time:
             raise TestingTimeoutError(msg)
         time.sleep(poll)
+        res = wait_cond()
+        logger.debug("poll => %s", time.time())
+
+    return res
 
 
 def until_not(
     wait_cond, timeout, poll=0.1, msg="expected condition met within timeout"
 ):  # noqa: C0330
+    res = True
+    logger.debug(
+        "start wait.until with %s, timeout[%s], poll[%s]",
+        wait_cond,
+        timeout,
+        poll,
+    )
     end_time = time.time() + timeout
-    while wait_cond():
+    while res:
         if time.time() > end_time:
             raise TestingTimeoutError(msg)
         time.sleep(poll)
+        res = wait_cond()
+        logger.debug("poll => %s", time.time())
+
+    return res
 
 
-class text_to_equal(object):  # pylint: disable=too-few-public-methods
+class text_to_equal(object):
     def __init__(self, selector, text):
         self.selector = selector
         self.text = text
diff --git a/tests/integration/devtools/test_devtools_error_handling.py b/tests/integration/devtools/test_devtools_error_handling.py
index 206767ae..b9743a5e 100644
--- a/tests/integration/devtools/test_devtools_error_handling.py
+++ b/tests/integration/devtools/test_devtools_error_handling.py
@@ -117,7 +117,7 @@ def test_dev003_validation_errors_in_place(dash_duo):
         dev_tools_hot_reload=False,
     )
 
-    dash_duo.find_element("#button").click()
+    dash_duo.wait_for_element("#button").click()
     dash_duo.wait_for_text_to_equal(".test-devtools-error-count", "1")
     dash_duo.percy_snapshot("devtools - validation exception - closed")
 
@@ -151,7 +151,7 @@ def test_dev004_validation_errors_creation(dash_duo):
         dev_tools_hot_reload=False,
     )
 
-    dash_duo.find_element("#button").click()
+    dash_duo.wait_for_element("#button").click()
     dash_duo.wait_for_text_to_equal(".test-devtools-error-count", "1")
     dash_duo.percy_snapshot("devtools - validation creation exception - closed")
 
diff --git a/tests/integration/devtools/test_devtools_ui.py b/tests/integration/devtools/test_devtools_ui.py
index 293762ca..b65ca3ec 100644
--- a/tests/integration/devtools/test_devtools_ui.py
+++ b/tests/integration/devtools/test_devtools_ui.py
@@ -2,6 +2,8 @@ import dash_core_components as dcc
 import dash_html_components as html
 import dash
 
+import dash.testing.wait as wait
+
 
 def test_dev020_disable_props_check_config(dash_duo):
     app = dash.Dash(__name__)
@@ -54,8 +56,9 @@ def test_dev021_disable_ui_config(dash_duo):
     )
 
     dash_duo.wait_for_text_to_equal("#tcid", "Hello Disable UI")
-    assert "Invalid argument `animate` passed into Graph" in str(
-        dash_duo.get_logs()
+    logs = str(wait.until(dash_duo.get_logs, timeout=1))
+    assert (
+        "Invalid argument `animate` passed into Graph" in logs
     ), "the error should present in the console without DEV tools UI"
 
     assert not dash_duo.find_elements(
diff --git a/tests/integration/devtools/test_props_check.py b/tests/integration/devtools/test_props_check.py
index 97ca81d1..57e075e2 100644
--- a/tests/integration/devtools/test_props_check.py
+++ b/tests/integration/devtools/test_props_check.py
@@ -3,6 +3,8 @@ import dash_html_components as html
 import dash
 from dash.dependencies import Input, Output
 
+from selenium.common.exceptions import TimeoutException
+
 
 def test_dev100_prop_check_errors_with_path(dash_duo):
     app = dash.Dash(__name__)
@@ -190,8 +192,7 @@ def test_dev100_prop_check_errors_with_path(dash_duo):
         },
     }
 
-    app.layout = html.Div(
-        [html.Div(id="content"), dcc.Location(id="location")])
+    app.layout = html.Div([html.Div(id="content"), dcc.Location(id="location")])
 
     @app.callback(
         Output("content", "children"), [Input("location", "pathname")]
@@ -216,26 +217,14 @@ def test_dev100_prop_check_errors_with_path(dash_duo):
     for tcid in test_cases:
         dash_duo.driver.get("{}/{}".format(dash_duo.server_url, tcid))
         if test_cases[tcid]["fail"]:
-            try:
-                dash_duo.wait_for_element(
-                    ".test-devtools-error-toggle"
-                ).click()
-            except Exception as e:
-                raise Exception(
-                    "Error popup not shown for {}".format(tcid)
-                )
+            dash_duo.wait_for_element(".test-devtools-error-toggle").click()
             dash_duo.percy_snapshot(
                 "devtools validation exception: {}".format(
                     test_cases[tcid]["name"]
                 )
             )
         else:
-            try:
-                dash_duo.wait_for_element("#new-component")
-            except Exception as e:
-                raise Exception(
-                    "Component not rendered in {}".format(tcid)
-                )
+            dash_duo.wait_for_element("#new-component")
             dash_duo.percy_snapshot(
                 "devtools validation no exception: {}".format(
                     test_cases[tcid]["name"]
