commit d6b4a21b29fa180df2fb9dc258a9eefa661d1479
Author: alexcjohnson <alex@plot.ly>
Date:   Fri Mar 27 16:22:06 2020 -0400

    callback graph update + wildcards
    turns out this was broken since updating viz.js to v2.x

diff --git a/dash-renderer/src/actions/dependencies.js b/dash-renderer/src/actions/dependencies.js
index 7243fa28..111ffb62 100644
--- a/dash-renderer/src/actions/dependencies.js
+++ b/dash-renderer/src/actions/dependencies.js
@@ -646,6 +646,7 @@ export function computeGraphs(dependencies, dispatchError) {
         inputMap,
         outputPatterns,
         inputPatterns,
+        callbacks: parsedDependencies,
     };
 
     if (hasError) {
diff --git a/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.react.js b/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.react.js
index f2a0dacd..ae53f4ca 100644
--- a/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.react.js
+++ b/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.react.js
@@ -1,34 +1,43 @@
-import React, {Component} from 'react';
+import React, {useEffect, useRef} from 'react';
+import PropTypes from 'prop-types';
+
 import './CallbackGraphContainer.css';
 
-import viz from 'viz.js';
+import Viz from 'viz.js';
+import {Module, render} from 'viz.js/full.render';
 
-import PropTypes from 'prop-types';
+import {stringifyId} from '../../../actions/dependencies';
+
+const CallbackGraphContainer = ({graphs}) => {
+    const el = useRef(null);
+
+    const viz = useRef(null);
+
+    const makeViz = () => {
+        viz.current = new Viz({Module, render});
+    };
 
-class CallbackGraphContainer extends Component {
-    constructor(props) {
-        super(props);
+    if (!viz.current) {
+        makeViz();
     }
-    render() {
-        const {dependenciesRequest} = this.props;
+
+    useEffect(() => {
+        const {callbacks} = graphs;
         const elements = {};
-        const callbacks = [];
-        const links = dependenciesRequest.content.map(({inputs, output}, i) => {
-            callbacks.push(`cb${i};`);
-            function recordAndReturn([id, property]) {
-                elements[id] = elements[id] || {};
-                elements[id][property] = true;
-                return `"${id}.${property}"`;
+        const callbacksOut = [];
+        const links = callbacks.map(({inputs, outputs}, i) => {
+            callbacksOut.push(`cb${i};`);
+            function recordAndReturn({id, property}) {
+                const idClean = stringifyId(id)
+                    .replace(/[\{\}".;\[\]()]/g, '')
+                    .replace(/:/g, '-')
+                    .replace(/,/g, '_');
+                elements[idClean] = elements[idClean] || {};
+                elements[idClean][property] = true;
+                return `"${idClean}.${property}"`;
             }
-            const out_nodes = output
-                .replace(/^\.\./, '')
-                .replace(/\.\.$/, '')
-                .split('...')
-                .map(o => recordAndReturn(o.split('.')))
-                .join(', ');
-            const in_nodes = inputs
-                .map(({id, property}) => recordAndReturn([id, property]))
-                .join(', ');
+            const out_nodes = outputs.map(recordAndReturn).join(', ');
+            const in_nodes = inputs.map(recordAndReturn).join(', ');
             return `{${in_nodes}} -> cb${i} -> {${out_nodes}};`;
         });
 
@@ -39,7 +48,7 @@ class CallbackGraphContainer extends Component {
             graph [penwidth=0];
             subgraph callbacks {
                 node [shape=circle, width=0.3, label="", color="#00CC96"];
-                ${callbacks.join('\n')} }
+                ${callbacksOut.join('\n')} }
 
             ${Object.entries(elements)
                 .map(
@@ -55,19 +64,29 @@ class CallbackGraphContainer extends Component {
 
             ${links.join('\n')} }`;
 
-        return (
-            <div
-                className="dash-callback-dag--container"
-                dangerouslySetInnerHTML={{
-                    __html: viz(dot, {format: 'svg'}),
-                }}
-            />
-        );
-    }
-}
+        // eslint-disable-next-line no-console
+        console.log(dot);
+
+        viz.current
+            .renderSVGElement(dot)
+            .then(vizEl => {
+                el.current.innerHTML = '';
+                el.current.appendChild(vizEl);
+            })
+            .catch(e => {
+                // https://github.com/mdaines/viz.js/wiki/Caveats
+                makeViz();
+                // eslint-disable-next-line no-console
+                console.error(e);
+                el.current.innerHTML = 'Error creating callback graph';
+            });
+    });
+
+    return <div className="dash-callback-dag--container" ref={el} />;
+};
 
 CallbackGraphContainer.propTypes = {
-    dependenciesRequest: PropTypes.object,
+    graphs: PropTypes.object,
 };
 
 export {CallbackGraphContainer};
diff --git a/dash-renderer/src/components/error/GlobalErrorContainer.react.js b/dash-renderer/src/components/error/GlobalErrorContainer.react.js
index 28f344c5..6f61b07f 100644
--- a/dash-renderer/src/components/error/GlobalErrorContainer.react.js
+++ b/dash-renderer/src/components/error/GlobalErrorContainer.react.js
@@ -10,14 +10,11 @@ class UnconnectedGlobalErrorContainer extends Component {
     }
 
     render() {
-        const {error, dependenciesRequest} = this.props;
+        const {error, graphs, children} = this.props;
         return (
             <div id="_dash-global-error-container">
-                <DebugMenu
-                    error={error}
-                    dependenciesRequest={dependenciesRequest}
-                >
-                    <div id="_dash-app-content">{this.props.children}</div>
+                <DebugMenu error={error} graphs={graphs}>
+                    <div id="_dash-app-content">{children}</div>
                 </DebugMenu>
             </div>
         );
@@ -27,12 +24,12 @@ class UnconnectedGlobalErrorContainer extends Component {
 UnconnectedGlobalErrorContainer.propTypes = {
     children: PropTypes.object,
     error: PropTypes.object,
-    dependenciesRequest: PropTypes.object,
+    graphs: PropTypes.object,
 };
 
 const GlobalErrorContainer = connect(state => ({
     error: state.error,
-    dependenciesRequest: state.dependenciesRequest,
+    graphs: state.graphs,
 }))(Radium(UnconnectedGlobalErrorContainer));
 
 export default GlobalErrorContainer;
diff --git a/dash-renderer/src/components/error/menu/DebugMenu.react.js b/dash-renderer/src/components/error/menu/DebugMenu.react.js
index cce9e9ac..e25c8cc2 100644
--- a/dash-renderer/src/components/error/menu/DebugMenu.react.js
+++ b/dash-renderer/src/components/error/menu/DebugMenu.react.js
@@ -31,7 +31,7 @@ class DebugMenu extends Component {
             toastsEnabled,
             callbackGraphOpened,
         } = this.state;
-        const {error, dependenciesRequest} = this.props;
+        const {error, graphs} = this.props;
 
         const menuClasses = opened
             ? 'dash-debug-menu dash-debug-menu--opened'
@@ -40,9 +40,7 @@ class DebugMenu extends Component {
         const menuContent = opened ? (
             <div className="dash-debug-menu__content">
                 {callbackGraphOpened ? (
-                    <CallbackGraphContainer
-                        dependenciesRequest={dependenciesRequest}
-                    />
+                    <CallbackGraphContainer graphs={graphs} />
                 ) : null}
                 {error.frontEnd.length > 0 || error.backEnd.length > 0 ? (
                     <div className="dash-debug-menu__button-container">
@@ -152,7 +150,7 @@ class DebugMenu extends Component {
 DebugMenu.propTypes = {
     children: PropTypes.object,
     error: PropTypes.object,
-    dependenciesRequest: PropTypes.object,
+    graphs: PropTypes.object,
 };
 
 export {DebugMenu};
