commit 1fd5ee81f2c692a4666e44161b6548b808503b07
Author: byron <byron@plot.ly>
Date:   Fri Nov 8 12:18:41 2019 -0500

    :ok_hand: make thing simpler and cleaner

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 6486badb..44dba546 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -1,6 +1,7 @@
 # pylint: disable=missing-docstring
 import os
 import sys
+import time
 import logging
 import warnings
 import percy
@@ -135,12 +136,10 @@ class Browser(DashPageMixin):
         logger.info("taking snapshot name => %s", snapshot_name)
         try:
             if wait_for_callbacks:
-                until(
-                    self._wait_for_callbacks,
-                    timeout=40,
-                    poll=0.5,
-                    sleep_first=True,
-                )
+                # the extra one second sleep adds safe margin in the context
+                # of wait_for_callbacks
+                time.sleep(1)
+                until(self._wait_for_callbacks, timeout=40, poll=0.3)
         except TestingTimeoutError:
             # API will log the error but this TimeoutError should not block
             # the test execution to continue and it will still do a snapshot
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index 0d721d13..707def00 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -13,11 +13,9 @@ def until(
     wait_cond,
     timeout,
     poll=0.1,
-    sleep_first=False,
     msg="expected condition not met within timeout",
 ):  # noqa: C0330
-
-    res = False if sleep_first else wait_cond()
+    res = wait_cond()
     logger.debug(
         "start wait.until with method, timeout, poll => %s %s %s",
         wait_cond,
@@ -39,10 +37,9 @@ def until_not(
     wait_cond,
     timeout,
     poll=0.1,
-    sleep_first=False,
     msg="expected condition met within timeout",
 ):  # noqa: C0330
-    res = False if sleep_first else wait_cond()
+    res = wait_cond()
     logger.debug(
         "start wait.until_not method, timeout, poll => %s %s %s",
         wait_cond,
