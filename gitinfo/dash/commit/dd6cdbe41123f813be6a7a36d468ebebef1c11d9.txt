commit dd6cdbe41123f813be6a7a36d468ebebef1c11d9
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Wed May 25 09:58:45 2016 -0700

    Fixes for hot reloading
    
    - Add module.hot.accept listener to store as per https://github.com/reactjs/react-redux/releases/tag/v2.0.0
    - Move store initialization out of index.js to avoid reassigning store variable
    - Split containers up into AppContainer (Provider) and TreeContainer (the Spec'd layout)

diff --git a/renderer/src/AppContainer.react.js b/renderer/src/AppContainer.react.js
new file mode 100644
index 00000000..eba6db3d
--- /dev/null
+++ b/renderer/src/AppContainer.react.js
@@ -0,0 +1,14 @@
+import React from 'react';
+import {Provider} from 'react-redux'
+
+import {initializeStore} from './store';
+import TreeContainer from './TreeContainer.react.js';
+
+const store = initializeStore();
+
+export default () => (
+    <Provider store={store}>
+        <TreeContainer/>
+    </Provider>
+);
+
diff --git a/renderer/src/container.react.js b/renderer/src/TreeContainer.react.js
similarity index 100%
rename from renderer/src/container.react.js
rename to renderer/src/TreeContainer.react.js
diff --git a/renderer/src/index.js b/renderer/src/index.js
index 58236aa2..f1230893 100644
--- a/renderer/src/index.js
+++ b/renderer/src/index.js
@@ -4,17 +4,10 @@
 
 import React from 'react';
 import ReactDOM from 'react-dom';
-import Container from './container.react.js';
 
-import { Provider } from 'react-redux'
-import { createStore } from 'redux'
-import reducer from './reducers/reducer.js';
-
-const store = createStore(reducer);
+import AppContainer from './AppContainer.react.js';
 
 ReactDOM.render(
-    <Provider store={store}>
-        <Container/>
-    </Provider>,
+    <AppContainer/>,
     document.getElementById('react-entry-point')
 );
diff --git a/renderer/src/store.js b/renderer/src/store.js
new file mode 100644
index 00000000..093c2d78
--- /dev/null
+++ b/renderer/src/store.js
@@ -0,0 +1,22 @@
+import { createStore, applyMiddleware } from 'redux'
+import thunk from 'redux-thunk'
+
+import reducer from './reducers/reducer';
+
+export const initializeStore = () => {
+    const store = createStore(
+        reducer,
+        applyMiddleware(thunk)
+    );
+
+    if (module.hot) {
+        // Enable hot module replacement for reducers
+        module.hot.accept('./reducers', () => {
+          const nextRootReducer = require('./reducers/reducer');
+          store.replaceReducer(nextRootReducer);
+        });
+    }
+
+    return store;
+};
+
