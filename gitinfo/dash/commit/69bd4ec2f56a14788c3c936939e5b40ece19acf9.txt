commit 69bd4ec2f56a14788c3c936939e5b40ece19acf9
Author: chriddyp <chris@plot.ly>
Date:   Mon Mar 6 16:57:25 2017 -0500

    Include loading state in the tab title

diff --git a/src/AppContainer.react.js b/src/AppContainer.react.js
index 4e70a915..d10e153c 100644
--- a/src/AppContainer.react.js
+++ b/src/AppContainer.react.js
@@ -3,6 +3,7 @@ import {Provider} from 'react-redux'
 
 import initializeStore from './store';
 import TreeContainer from './TreeContainer.react';
+import Loading from './components/core/Loading.react';
 import { initialize } from './actions';
 
 const store = initializeStore();
@@ -11,7 +12,10 @@ store.dispatch(initialize());
 
 const AppContainer = () => (
     <Provider store={store}>
-        <TreeContainer/>
+        <div>
+            <TreeContainer/>
+            <Loading/>
+        </div>
     </Provider>
 );
 
diff --git a/src/components/core/Loading.react.js b/src/components/core/Loading.react.js
new file mode 100644
index 00000000..873ba56a
--- /dev/null
+++ b/src/components/core/Loading.react.js
@@ -0,0 +1,41 @@
+/* global document:true */
+
+import { connect } from 'react-redux'
+import { isEmpty } from 'ramda'
+import React, {Component, PropTypes} from 'react'
+
+
+class Loading extends Component {
+    constructor(props) {
+        super(props);
+        this.state = {
+            initialTitle: document.title
+        };
+    }
+
+    componentWillReceiveProps(props) {
+        if (!isEmpty(props.requestQueue)) {
+            document.title = 'Updating...';
+        } else {
+            document.title = this.state.initialTitle;
+        }
+    }
+
+    shouldComponentUpdate() {
+        return false;
+    }
+
+    render() {
+        return null;
+    }
+}
+
+Loading.propTypes = {
+    requestQueue: PropTypes.array.required
+}
+
+export default connect(
+    state => ({
+        requestQueue: state.requestQueue
+    })
+)(Loading);
