commit 12fa1b14f946b5c0c82ff757f3d98c23ff17154c
Author: byron <byron@plot.ly>
Date:   Tue Jun 4 00:15:50 2019 -0400

    :alembic: dbg

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 8be8538b..3ca1396e 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -14,13 +14,14 @@ from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
 from selenium.common.exceptions import WebDriverException, TimeoutException
 
 from dash.testing.wait import text_to_equal
+from dash.testing.locators import DashLocatorsMixin
 from dash.testing.errors import DashAppLoadingError
 
 
 logger = logging.getLogger(__name__)
 
 
-class Browser(object):
+class Browser(DashLocatorsMixin):
     def __init__(self, browser, remote=None, wait_timeout=10):
         self._browser = browser.lower()
         self._wait_timeout = wait_timeout
@@ -28,9 +29,7 @@ class Browser(object):
         self._driver = self.get_webdriver(remote)
         self._driver.implicitly_wait(2)
 
-        self._wd_wait = WebDriverWait(
-            driver=self.driver, timeout=wait_timeout, poll_frequency=0.2
-        )
+        self._wd_wait = WebDriverWait(self.driver, wait_timeout, 0.2)
         self._last_ts = 0
         self._url = None
 
@@ -62,6 +61,14 @@ class Browser(object):
         logger.info("taking snapshot name => %s", snapshot_name)
         self.percy_runner.snapshot(name=snapshot_name)
 
+    def find_element(self, css_selector):
+        """wrapper for find_element_by_css_selector from driver"""
+        return self.driver.find_element_by_css_selector(css_selector)
+
+    def find_elements(self, css_selector):
+        """wrapper for find_elements_by_css_selector from driver"""
+        return self.driver.find_elements_by_css_selector(css_selector)
+
     def _wait_for(self, method, args, timeout, msg):
         """abstract generic pattern for explicit webdriver wait"""
         _wait = (
@@ -69,16 +76,13 @@ class Browser(object):
             if timeout is None
             else WebDriverWait(self.driver, timeout)
         )
+        logger.debug(
+            "WebdriverWait timeout => %s, poll => %s",
+            _wait._timeout,
+            _wait._poll,
+        )
         return _wait.until(method(*args), msg)
 
-    def find_element(self, css_selector):
-        """wrapper for find_element_by_css_selector from driver"""
-        return self.driver.find_element_by_css_selector(css_selector)
-
-    def find_elements(self, css_selector):
-        """wrapper for find_elements_by_css_selector from driver"""
-        return self.driver.find_elements_by_css_selector(css_selector)
-
     def wait_for_element(self, css_selector, timeout=None):
         return self.wait_for_element_by_css_selector(css_selector, timeout)
 
diff --git a/dash/testing/locators.py b/dash/testing/locators.py
new file mode 100644
index 00000000..92701e8c
--- /dev/null
+++ b/dash/testing/locators.py
@@ -0,0 +1,7 @@
+class DashLocatorsMixin(object):
+    def dev_tools_error_counts(self):
+        return int(
+            self.driver.find_element_by_css_selector(
+                ".test-devtools-error-count"
+            ).text
+        )
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index f0068625..882af22b 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -2,6 +2,7 @@
 """Utils methods for pytest-dash such wait_for wrappers"""
 import time
 import logging
+from selenium.common.exceptions import StaleElementReferenceException
 from dash.testing.errors import TestingTimeoutError
 
 
@@ -59,8 +60,15 @@ class text_to_equal(object):
         self.text = text
 
     def __call__(self, driver):
-        elem = driver.find_element_by_css_selector(self.selector)
-        return (
-            str(elem.text) == self.text
-            or str(elem.get_attribute("value")) == self.text
-        )
+        try:
+            elem = driver.find_element_by_css_selector(self.selector)
+            logger.debug(
+                "text to equal {%s} => expected %s", elem.text, self.text
+            )
+            return (
+                str(elem.text) == self.text
+                or str(elem.get_attribute("value")) == self.text
+            )
+        except StaleElementReferenceException:
+            logger.warning("text_to_equal, element is still stale")
+            return False
diff --git a/tests/integration/devtools/test_devtools_error_handling.py b/tests/integration/devtools/test_devtools_error_handling.py
index b9743a5e..70ded14d 100644
--- a/tests/integration/devtools/test_devtools_error_handling.py
+++ b/tests/integration/devtools/test_devtools_error_handling.py
@@ -117,7 +117,8 @@ def test_dev003_validation_errors_in_place(dash_duo):
         dev_tools_hot_reload=False,
     )
 
-    dash_duo.wait_for_element("#button").click()
+    dash_duo.find_element("#button").click()
+    # assert dash_duo.dev_tools_error_counts == 1,
     dash_duo.wait_for_text_to_equal(".test-devtools-error-count", "1")
     dash_duo.percy_snapshot("devtools - validation exception - closed")
 
