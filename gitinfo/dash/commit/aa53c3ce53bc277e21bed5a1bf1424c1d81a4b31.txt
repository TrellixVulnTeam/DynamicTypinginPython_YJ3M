commit aa53c3ce53bc277e21bed5a1bf1424c1d81a4b31
Author: Nicolas Kruchten <nicolas@datacratic.com>
Date:   Wed Apr 10 12:06:32 2019 -0400

    conditionally load GlobalErrorContainer in dev mode

diff --git a/src/components/error/GlobalErrorContainerPassthrough.react.js b/src/components/error/GlobalErrorContainerPassthrough.react.js
new file mode 100644
index 00000000..11f4975f
--- /dev/null
+++ b/src/components/error/GlobalErrorContainerPassthrough.react.js
@@ -0,0 +1,17 @@
+import React, {Component} from 'react';
+import PropTypes from 'prop-types';
+
+class GlobalErrorContainer extends Component {
+    constructor(props) {
+        super(props);
+    }
+    render() {
+        return <div id="_dash-app-content">{this.props.children}</div>;
+    }
+}
+
+GlobalErrorContainer.propTypes = {
+    children: PropTypes.object,
+};
+
+export default GlobalErrorContainer;
diff --git a/webpack.config.js b/webpack.config.js
index cb29b04f..0f744e01 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -1,3 +1,4 @@
+const webpack = require('webpack');
 const path = require('path');
 const packagejson = require('./package.json');
 
@@ -59,9 +60,22 @@ module.exports = (env, argv) => {
                 },
                 {
                     test: /\.svg$/,
-                    use: ['@svgr/webpack']
-                }
+                    use: ['@svgr/webpack'],
+                },
             ],
-        }
+        },
+        plugins: [
+            new webpack.NormalModuleReplacementPlugin(
+                /(.*)GlobalErrorContainer.react(\.*)/,
+                function(resource) {
+                    if (mode === 'production') {
+                        resource.request = resource.request.replace(
+                            /GlobalErrorContainer.react/,
+                            'GlobalErrorContainerPassthrough.react'
+                        );
+                    }
+                }
+            ),
+        ],
     };
 };
