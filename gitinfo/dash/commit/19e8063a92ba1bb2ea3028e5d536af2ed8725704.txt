commit 19e8063a92ba1bb2ea3028e5d536af2ed8725704
Author: byron <byron@plot.ly>
Date:   Thu Aug 29 12:42:40 2019 -0400

    :sparkles: :bug: add true remote for selenium

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 18526e41..64153257 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -49,7 +49,7 @@ class Browser(DashPageMixin):
         self._wait_timeout = wait_timeout
         self._percy_finalize = percy_finalize
 
-        self._driver = until(lambda: self.get_webdriver(), timeout=1)
+        self._driver = until(self.get_webdriver, timeout=1)
         self._driver.implicitly_wait(2)
 
         self._wd_wait = WebDriverWait(self.driver, wait_timeout)
@@ -290,17 +290,9 @@ class Browser(DashPageMixin):
 
     def get_webdriver(self):
         try:
-            return (
-                getattr(self, "_get_{}".format(self._browser))()
-                if not self._remote
-                else webdriver.Remote(
-                    command_executor=self._remote_url,
-                    desired_capabilities={'browserName': self._browser}
-                )
-            )
+            return getattr(self, "_get_{}".format(self._browser))()
         except WebDriverException:
             logger.exception("<<<Webdriver not initialized correctly>>>")
-            return None
 
     def _get_wd_options(self):
         options = (
@@ -334,8 +326,16 @@ class Browser(DashPageMixin):
             },
         )
 
-        chrome = webdriver.Chrome(
-            options=options, desired_capabilities=capabilities
+        chrome = (
+            webdriver.Remote(
+                command_executor=self._remote_url,
+                options=options,
+                desired_capabilities=capabilities,
+            )
+            if self._remote
+            else webdriver.Chrome(
+                options=options, desired_capabilities=capabilities
+            )
         )
 
         # https://bugs.chromium.org/p/chromium/issues/detail?id=696481
@@ -373,8 +373,16 @@ class Browser(DashPageMixin):
             "browser.helperApps.neverAsk.saveToDisk",
             "application/octet-stream",  # this MIME is generic for binary
         )
-        return webdriver.Firefox(
-            firefox_profile=fp, options=options, capabilities=capabilities
+        return (
+            webdriver.Remote(
+                command_executor=self._remote_url,
+                options=options,
+                desired_capabilities=capabilities,
+            )
+            if self._remote
+            else webdriver.Firefox(
+                firefox_profile=fp, options=options, capabilities=capabilities
+            )
         )
 
     @staticmethod
diff --git a/dash/testing/plugin.py b/dash/testing/plugin.py
index 256e31bd..fb94455d 100644
--- a/dash/testing/plugin.py
+++ b/dash/testing/plugin.py
@@ -34,7 +34,7 @@ def pytest_addoption(parser):
     )
 
     dash.addoption(
-        "--remote_url",
+        "--remote-url",
         action="store",
         default="http://localhost:4444/wd/hub",
         help="set a different selenium grid remote url if other than default"
