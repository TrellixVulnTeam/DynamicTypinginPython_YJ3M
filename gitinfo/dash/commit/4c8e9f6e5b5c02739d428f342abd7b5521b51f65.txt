commit 4c8e9f6e5b5c02739d428f342abd7b5521b51f65
Author: byron <byron@plot.ly>
Date:   Tue Jul 9 18:52:03 2019 -0400

    :sparkles: add download support for both browser

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 873e9b25..1c3e42a5 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -30,11 +30,13 @@ class Browser(DashPageMixin):
         headless=False,
         options=None,
         remote=None,
+        download_path=None,
         wait_timeout=10,
     ):
         self._browser = browser.lower()
         self._headless = headless
         self._options = options
+        self._download_path = download_path
         self._wait_timeout = wait_timeout
 
         self._driver = self.get_webdriver(remote)
@@ -273,6 +275,14 @@ class Browser(DashPageMixin):
         if "DASH_TEST_CHROMEPATH" in os.environ:
             options.binary_location = os.environ["DASH_TEST_CHROMEPATH"]
 
+        options.add_experimental_option(
+            "prefs",
+            {
+                "download.default_directory": self.download_path,
+                "download.prompt_for_download": False,
+            },
+        )
+
         chrome = webdriver.Chrome(
             options=options, desired_capabilities=capabilities
         )
@@ -288,16 +298,14 @@ class Browser(DashPageMixin):
 
         # https://developer.mozilla.org/en-US/docs/Download_Manager_preferences
         fp = webdriver.FirefoxProfile()
-
-        # this will be useful if we wanna test download csv or other data
-        # files with selenium
-        # TODO this could be replaced with a tmpfixture from pytest too
-        fp.set_preference("browser.download.dir", "/tmp")
+        fp.set_preference("browser.download.dir", self.download_path)
         fp.set_preference("browser.download.folderList", 2)
-        fp.set_preference("browser.download.manager.showWhenStarting", False)
-
+        fp.set_preference(
+            "browser.helperApps.neverAsk.saveToDisk",
+            "application/octet-stream",  # this MIME is generic for binary
+        )
         return webdriver.Firefox(
-            fp, options=options, capabilities=capabilities
+            firefox_profile=fp, options=options, capabilities=capabilities
         )
 
     @staticmethod
@@ -363,3 +371,7 @@ class Browser(DashPageMixin):
         """
         self._url = value
         self.wait_for_page()
+
+    @property
+    def download_path(self):
+        return self._download_path
diff --git a/dash/testing/plugin.py b/dash/testing/plugin.py
index 96d80996..1fba6b8d 100644
--- a/dash/testing/plugin.py
+++ b/dash/testing/plugin.py
@@ -80,21 +80,23 @@ def dash_process_server():
 
 
 @pytest.fixture
-def dash_br(request):
+def dash_br(request, tmpdir):
     with Browser(
         browser=request.config.getoption("webdriver"),
         headless=request.config.getoption("headless"),
         options=request.config.hook.pytest_setup_options(),
+        download_path=tmpdir.mkdir('download').strpath
     ) as browser:
         yield browser
 
 
 @pytest.fixture
-def dash_duo(request, dash_thread_server):
+def dash_duo(request, dash_thread_server, tmpdir):
     with DashComposite(
         dash_thread_server,
         browser=request.config.getoption("webdriver"),
         headless=request.config.getoption("headless"),
         options=request.config.hook.pytest_setup_options(),
+        download_path=tmpdir.mkdir('download').strpath
     ) as dc:
         yield dc
