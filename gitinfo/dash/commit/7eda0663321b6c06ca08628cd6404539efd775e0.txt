commit 7eda0663321b6c06ca08628cd6404539efd775e0
Author: chriddyp <chriddyp@users.noreply.github.com>
Date:   Mon Jun 5 21:30:10 2017 -0400

    python 3 tests (#57)

diff --git a/circle.yml b/circle.yml
index abb3864c..cee5e1de 100644
--- a/circle.yml
+++ b/circle.yml
@@ -1,7 +1,17 @@
+machine:
+  post:
+    - pyenv global 2.7.10 3.3.3 3.4.3 3.5.0
+  environment:
+    TOX_PYTHON_27: python2.7
+    TOX_PYTHON_33: python3.3
+    TOX_PYTHON_34: python3.4
+    TOX_PYTHON_35: python3.5
+
+
 dependencies:
-   pre:
-     - pip install tox
+  pre:
+    - pip install tox
 
 test:
-   override:
-     - tox
+  override:
+    - tox
diff --git a/dash/dash.py b/dash/dash.py
index 952e5a55..ebd504ee 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -13,6 +13,7 @@ import datetime
 import collections
 
 import dash_renderer
+
 from .dependencies import Event, Input, Output, State
 from .resources import Scripts, Css
 from .development.base_component import Component
@@ -153,7 +154,7 @@ class Dash(object):
                 *args,
                 **kwargs
             )
-        class_decorator.func_name = f.func_name
+        class_decorator.__name__ = f.__name__
         return class_decorator
 
     def create_access_codes(self):
diff --git a/dash/plotly_api.py b/dash/plotly_api.py
index be17e99a..3976cf88 100644
--- a/dash/plotly_api.py
+++ b/dash/plotly_api.py
@@ -1,4 +1,5 @@
 import plotly
+from six import iteritems
 
 
 def create_or_overwrite_dash_app(filename, sharing, app_url):
@@ -7,7 +8,7 @@ def create_or_overwrite_dash_app(filename, sharing, app_url):
         'sharing': sharing,
         'app_url': app_url
     }
-    for arg_name, arg_value in required_args.iteritems():
+    for arg_name, arg_value in iteritems(required_args):
         if arg_value is None:
             raise Exception('{} is required'.format(arg_name))
     if sharing not in ['private', 'secret', 'public']:
diff --git a/dash/resources.py b/dash/resources.py
index 162c2c02..d79b7f05 100644
--- a/dash/resources.py
+++ b/dash/resources.py
@@ -1,8 +1,9 @@
 from copy import copy
-from .development.base_component import Component
 import warnings
 import collections
 
+from .development.base_component import Component
+
 
 class Resources():
     def __init__(self, resource_name, layout):
diff --git a/dev-requirements.txt b/dev-requirements.txt
new file mode 100644
index 00000000..37f2c005
--- /dev/null
+++ b/dev-requirements.txt
@@ -0,0 +1,12 @@
+dash_core_components>=0.4.0
+dash_html_components>=0.5.0
+dash_renderer
+percy
+selenium
+mock
+tox
+tox-pyenv
+mock
+six
+plotly>=2.0.8
+requests[security]
diff --git a/requirements.txt b/requirements.txt
index df80ee44..b515ff0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,25 +1,47 @@
+appnope==0.1.0
+backports.shutil-get-terminal-size==1.0.0
 click==6.7
-dash-core-components==0.2.11
-dash-html-components==0.3.8
-dash-renderer
+dash-core-components==0.3.3
+dash-html-components==0.4.0
+dash-renderer==0.2.9
+dash.ly==0.14.0
 decorator==4.0.11
 enum34==1.1.6
 Flask==0.12
 Flask-Compress==1.4.0
+Flask-SeaSurf==0.2.2
+funcsigs==1.0.2
 functools32==3.2.3.post2
-ipython-genutils==0.1.0
+ipdb==0.10.2
+ipython==5.3.0
+ipython-genutils==0.2.0
 itsdangerous==0.24
 Jinja2==2.9.5
 jsonschema==2.6.0
 jupyter-core==4.3.0
 MarkupSafe==1.0
+mock==2.0.0
 nbformat==4.3.0
 numpy==1.11.0
-plotly==2.0.5
+pathlib2==2.2.1
+pbr==2.1.0
+pexpect==4.2.1
+pickleshare==0.7.4
+plotly==2.0.8
+pluggy==0.4.0
+prompt-toolkit==1.0.14
+ptyprocess==0.5.1
+py==1.4.33
+Pygments==2.2.0
 python-dateutil==2.5.3
-pytz==2016.10
+pytz==2017.2
 requests==2.13.0
 requests-file==1.4.1
+scandir==1.5
+simplegeneric==0.8.1
 six==1.10.0
+tox==2.7.0
 traitlets==4.3.2
-Werkzeug==0.11.15
+virtualenv==15.1.0
+wcwidth==0.1.7
+Werkzeug==0.12.1
diff --git a/setup.py b/setup.py
index dafc5cc7..adfca913 100644
--- a/setup.py
+++ b/setup.py
@@ -12,7 +12,7 @@ setup(
     description='',
     long_description=open('README.md').read(),
     install_requires=[
-        'Flask',
+        'Flask>=0.12',
         'flask-compress',
         'flask-seasurf',
         'plotly'
diff --git a/tests/test_authentication.py b/tests/test_authentication.py
index ecf16a48..00343b48 100644
--- a/tests/test_authentication.py
+++ b/tests/test_authentication.py
@@ -4,8 +4,14 @@ import dash
 import plotly
 import dash_html_components as html
 from dash import authentication, plotly_api
-import Cookie
-import mock
+import six
+from six.moves import http_cookies
+from six import iteritems
+
+if six.PY3:
+    from unittest import mock
+else:
+    import mock
 
 
 # This is a real live access token associated with the
@@ -41,8 +47,8 @@ class ViewAccessTest(unittest.TestCase):
             )
 
     def test_check_view_access(self):
-        for user_type, user_attributes in users.iteritems():
-            for permission, fid in self.fids.iteritems():
+        for user_type, user_attributes in iteritems(users):
+            for permission, fid in iteritems(self.fids):
                 if permission == 'public' or user_type == 'creator':
                     assertFunc = self.assertTrue
                 else:
@@ -81,8 +87,8 @@ def get_cookie(res, cookie_name):
     cookie_string = [h for h in headers if (
         h[0] == 'Set-Cookie' and cookie_name in h[1]
     )][0][1]
-    cookie = Cookie.SimpleCookie(cookie_string)
-    access_granted_cookie = cookie[cookie.keys()[0]].value
+    cookie = http_cookies.SimpleCookie(cookie_string)
+    access_granted_cookie = cookie[list(cookie.keys())[0]].value
     return access_granted_cookie
 
 
@@ -172,8 +178,8 @@ class ProtectedViewsTest(unittest.TestCase):
 
     def test_protected_endpoints_with_auth_cookie(self):
         apps = self.create_apps()
-        for user_type, user_attributes in users.iteritems():
-            for app_name, app in apps.iteritems():
+        for user_type, user_attributes in iteritems(users):
+            for app_name, app in iteritems(apps):
                 app.layout = html.Div()
                 self.check_endpoints(
                     app,
diff --git a/tox.ini b/tox.ini
index 24308aef..77935530 100644
--- a/tox.ini
+++ b/tox.ini
@@ -1,9 +1,30 @@
 [tox]
-envlist = py27, py34
+envlist = py27,py33,py34,py35
 
 [testenv]
-deps=dash-renderer
-    dash-core-components
-    dash-html-components
+deps = -rdev-requirements.txt
+passenv=TOX_*
+
+[testenv:py27]
+basepython={env:TOX_PYTHON_35}
+commands =
+    python --version
+    python -m unittest discover -s tests/
+
+[testenv:py33]
+basepython={env:TOX_PYTHON_33}
+commands =
+    python --version
+    python -m unittest discover -s tests/
+
+[testenv:py34]
+basepython={env:TOX_PYTHON_34}
+commands =
+    python --version
+    python -m unittest discover -s tests/
+
+[testenv:py35]
+basepython={env:TOX_PYTHON_35}
 commands =
+    python --version
     python -m unittest discover -s tests/
