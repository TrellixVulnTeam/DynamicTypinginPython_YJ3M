commit 07abc5a40f8c833b211ce7c05b912d2ce8f35fa9
Author: Chris P <christopher.parmer@gmail.com>
Date:   Mon Apr 13 01:49:45 2015 -0400

    first crack at some abstraction

diff --git a/basic/DataBackend.py b/basic/DataBackend.py
new file mode 100644
index 00000000..b828c5b1
--- /dev/null
+++ b/basic/DataBackend.py
@@ -0,0 +1,89 @@
+import pandas as pd
+import numpy as np
+from collections import deque
+
+from Templatize import HTMLElement as H
+from Templatize import WriteTemplate
+
+
+class Graph():
+    def __init__(self):
+        self.graph_id = 'top_graph'
+        self.slider_x = 'X'
+        self.slider_y = 'Y'
+        self.title_input = 'title'
+
+        # Title
+        WriteTemplate('banner', [H('h1', {}, 'Official Initials')])
+
+        WriteTemplate('leftcolumn', [
+            # Column Title
+            H('h4', {}, 'Etch a Sketch!!'),
+
+            # First slider
+            H('label', {'for': self.slider_x}, 'X Position'),
+            H('input', {
+                'type': 'range',
+                'class': 'u-full-width show-values',
+                'name': self.slider_x,
+                'value': 0,
+                'min': 10,
+                'max': 2000,
+                'step': 10
+            }),
+
+            # Second slider
+            H('label', {'for': self.slider_y}, 'Y Position'),
+            H('input', {
+                'type': 'range',
+                'class': 'u-full-width show-values',
+                'name': self.slider_y,
+                'value': 0,
+                'min': 10,
+                'max': 2000,
+                'step': 10
+            }),
+
+            H('label', {}, 'Title'),
+            H('input', {
+                'class': 'u-full-width',
+                'type': 'text',
+                'placeholder': 'bloomingdales',
+                'name': self.title_input})
+        ])
+
+        WriteTemplate('rightcolumn', [
+            H('H4', {}, 'Time Frame'),
+            H('iframe', dict(id=self.graph_id,
+                             src="https://plot.ly/~playground/7.embed",
+                             style="width: 100%; height: 500px; border: none;"))
+        ])
+
+        self.last_x = deque([], 100)
+        self.last_y = deque([], 100)
+
+    def on_page_load(self):
+        pass
+
+    def on_pong(self, message):
+        messages = []
+        return messages
+
+    def replot(self, app_state):
+        self.last_x.append(app_state[self.slider_x])
+        self.last_y.append(app_state[self.slider_y])
+        messages = [
+            {
+                'id': self.graph_id,
+                'task': 'newPlot',
+                'layout': {
+                    'title': app_state[self.title_input]
+                },
+                'data': [{
+                    'x': list(self.last_x),
+                    'y': list(self.last_y)
+                }]
+            }
+        ]
+
+        return messages
diff --git a/basic/Layout.py b/basic/Layout.py
new file mode 100644
index 00000000..e69de29b
diff --git a/basic/Templatize.py b/basic/Templatize.py
new file mode 100644
index 00000000..cc042dae
--- /dev/null
+++ b/basic/Templatize.py
@@ -0,0 +1,33 @@
+def WriteTemplate(name_of_block, list_of_elements):
+    template = '\n'.join(list_of_elements)
+    with open('templates/'+name_of_block + '.html', 'w') as f:
+        f.write(template)
+
+
+def HTMLElement(element='div', attributes={}, content=''):
+        element = element
+        attributes = attributes
+        if element in ['input', 'img']:
+            is_closing = False
+        else:
+            is_closing = True
+        if not is_closing and content != '':
+            raise Exception('Cant have content in a non-closing HTML tag!')
+
+        if element in ['input', 'select'] and 'name' not in attributes:
+            raise Exception('"name" attribute not found in {}. '
+                            'This element will not appear in '
+                            'the app_state.'.format(element))
+
+        content = content
+
+        el = '<{}'.format(element)
+        for attribute, value in attributes.iteritems():
+            el += ' {}="{}"'.format(attribute, value)
+        el += '>'
+
+        el += content
+
+        if is_closing:
+            el += '</{}>'.format(element)
+        return el
diff --git a/basic/app.py b/basic/app.py
new file mode 100644
index 00000000..091e5cd7
--- /dev/null
+++ b/basic/app.py
@@ -0,0 +1,61 @@
+from gevent import monkey
+monkey.patch_all()
+
+from flask import Flask, render_template
+from flask.ext.socketio import SocketIO, emit
+
+import json
+import plotly
+import re
+
+import DataBackend
+
+app = Flask(__name__)
+app.debug = True
+app.config['SECRET_KEY'] = 'secret!'
+socketio = SocketIO(app)
+
+graph = DataBackend.Graph()
+
+nan_regex = re.compile(r'\bNaN\b')
+
+
+def replace_nan(encoded):
+    regex = re.compile(r'\bNaN\b')
+    return regex.sub('null', encoded)
+
+
+@app.route('/')
+def index():
+    graph.on_page_load()
+    app.logger.info('index')
+    return render_template('index.html')
+
+
+@socketio.on('connect')
+def on_connect():
+    app.logger.info('on connect')
+    emit('server response', {'data': 'Connected'})
+
+
+@socketio.on('replot')
+def replot(message):
+    app.logger.info('replot: {}'.format(message))
+    messages = graph.replot(message)
+    jmessages = replace_nan(json.dumps(messages,
+                                       cls=plotly.utils.PlotlyJSONEncoder))
+    emit('postMessage', jmessages)
+
+
+@socketio.on('pong')
+def on_pong(message):
+    app.logger.info('on_pong: {}'.format(message))
+    messages = graph.on_pong(message)
+    jmessages = replace_nan(json.dumps(messages,
+                                       cls=plotly.utils.PlotlyJSONEncoder))
+    emit('postMessage', jmessages)
+
+
+if __name__ == '__main__':
+    socketio.run(app, host='0.0.0.0', port=9999)
+    # socketio.run(app, port=9999)
diff --git a/basic/leftcolumn.html b/basic/leftcolumn.html
new file mode 100644
index 00000000..adcaa703
--- /dev/null
+++ b/basic/leftcolumn.html
@@ -0,0 +1,5 @@
+<h4>Etch a Sketch!!</h4>
+<label for="X">X Position</label>
+<input name="X" min="10" max="2000" value="0" step="10" type="range" class="u-full-width show-values">
+<label for="Y">Y Position</label>
+<input name="Y" min="10" max="2000" value="0" step="10" type="range" class="u-full-width show-values">
\ No newline at end of file
diff --git a/basic/static/css/normalize.css b/basic/static/css/normalize.css
new file mode 100644
index 00000000..81c6f31e
--- /dev/null
+++ b/basic/static/css/normalize.css
@@ -0,0 +1,427 @@
+/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
+
+/**
+ * 1. Set default font family to sans-serif.
+ * 2. Prevent iOS text size adjust after orientation change, without disabling
+ *    user zoom.
+ */
+
+html {
+  font-family: sans-serif; /* 1 */
+  -ms-text-size-adjust: 100%; /* 2 */
+  -webkit-text-size-adjust: 100%; /* 2 */
+}
+
+/**
+ * Remove default margin.
+ */
+
+body {
+  margin: 0;
+}
+
+/* HTML5 display definitions
+   ========================================================================== */
+
+/**
+ * Correct `block` display not defined for any HTML5 element in IE 8/9.
+ * Correct `block` display not defined for `details` or `summary` in IE 10/11
+ * and Firefox.
+ * Correct `block` display not defined for `main` in IE 11.
+ */
+
+article,
+aside,
+details,
+figcaption,
+figure,
+footer,
+header,
+hgroup,
+main,
+menu,
+nav,
+section,
+summary {
+  display: block;
+}
+
+/**
+ * 1. Correct `inline-block` display not defined in IE 8/9.
+ * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
+ */
+
+audio,
+canvas,
+progress,
+video {
+  display: inline-block; /* 1 */
+  vertical-align: baseline; /* 2 */
+}
+
+/**
+ * Prevent modern browsers from displaying `audio` without controls.
+ * Remove excess height in iOS 5 devices.
+ */
+
+audio:not([controls]) {
+  display: none;
+  height: 0;
+}
+
+/**
+ * Address `[hidden]` styling not present in IE 8/9/10.
+ * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
+ */
+
+[hidden],
+template {
+  display: none;
+}
+
+/* Links
+   ========================================================================== */
+
+/**
+ * Remove the gray background color from active links in IE 10.
+ */
+
+a {
+  background-color: transparent;
+}
+
+/**
+ * Improve readability when focused and also mouse hovered in all browsers.
+ */
+
+a:active,
+a:hover {
+  outline: 0;
+}
+
+/* Text-level semantics
+   ========================================================================== */
+
+/**
+ * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
+ */
+
+abbr[title] {
+  border-bottom: 1px dotted;
+}
+
+/**
+ * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
+ */
+
+b,
+strong {
+  font-weight: bold;
+}
+
+/**
+ * Address styling not present in Safari and Chrome.
+ */
+
+dfn {
+  font-style: italic;
+}
+
+/**
+ * Address variable `h1` font-size and margin within `section` and `article`
+ * contexts in Firefox 4+, Safari, and Chrome.
+ */
+
+h1 {
+  font-size: 2em;
+  margin: 0.67em 0;
+}
+
+/**
+ * Address styling not present in IE 8/9.
+ */
+
+mark {
+  background: #ff0;
+  color: #000;
+}
+
+/**
+ * Address inconsistent and variable font size in all browsers.
+ */
+
+small {
+  font-size: 80%;
+}
+
+/**
+ * Prevent `sub` and `sup` affecting `line-height` in all browsers.
+ */
+
+sub,
+sup {
+  font-size: 75%;
+  line-height: 0;
+  position: relative;
+  vertical-align: baseline;
+}
+
+sup {
+  top: -0.5em;
+}
+
+sub {
+  bottom: -0.25em;
+}
+
+/* Embedded content
+   ========================================================================== */
+
+/**
+ * Remove border when inside `a` element in IE 8/9/10.
+ */
+
+img {
+  border: 0;
+}
+
+/**
+ * Correct overflow not hidden in IE 9/10/11.
+ */
+
+svg:not(:root) {
+  overflow: hidden;
+}
+
+/* Grouping content
+   ========================================================================== */
+
+/**
+ * Address margin not present in IE 8/9 and Safari.
+ */
+
+figure {
+  margin: 1em 40px;
+}
+
+/**
+ * Address differences between Firefox and other browsers.
+ */
+
+hr {
+  -moz-box-sizing: content-box;
+  box-sizing: content-box;
+  height: 0;
+}
+
+/**
+ * Contain overflow in all browsers.
+ */
+
+pre {
+  overflow: auto;
+}
+
+/**
+ * Address odd `em`-unit font size rendering in all browsers.
+ */
+
+code,
+kbd,
+pre,
+samp {
+  font-family: monospace, monospace;
+  font-size: 1em;
+}
+
+/* Forms
+   ========================================================================== */
+
+/**
+ * Known limitation: by default, Chrome and Safari on OS X allow very limited
+ * styling of `select`, unless a `border` property is set.
+ */
+
+/**
+ * 1. Correct color not being inherited.
+ *    Known issue: affects color of disabled elements.
+ * 2. Correct font properties not being inherited.
+ * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
+ */
+
+button,
+input,
+optgroup,
+select,
+textarea {
+  color: inherit; /* 1 */
+  font: inherit; /* 2 */
+  margin: 0; /* 3 */
+}
+
+/**
+ * Address `overflow` set to `hidden` in IE 8/9/10/11.
+ */
+
+button {
+  overflow: visible;
+}
+
+/**
+ * Address inconsistent `text-transform` inheritance for `button` and `select`.
+ * All other form control elements do not inherit `text-transform` values.
+ * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
+ * Correct `select` style inheritance in Firefox.
+ */
+
+button,
+select {
+  text-transform: none;
+}
+
+/**
+ * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
+ *    and `video` controls.
+ * 2. Correct inability to style clickable `input` types in iOS.
+ * 3. Improve usability and consistency of cursor style between image-type
+ *    `input` and others.
+ */
+
+button,
+html input[type="button"], /* 1 */
+input[type="reset"],
+input[type="submit"] {
+  -webkit-appearance: button; /* 2 */
+  cursor: pointer; /* 3 */
+}
+
+/**
+ * Re-set default cursor for disabled elements.
+ */
+
+button[disabled],
+html input[disabled] {
+  cursor: default;
+}
+
+/**
+ * Remove inner padding and border in Firefox 4+.
+ */
+
+button::-moz-focus-inner,
+input::-moz-focus-inner {
+  border: 0;
+  padding: 0;
+}
+
+/**
+ * Address Firefox 4+ setting `line-height` on `input` using `!important` in
+ * the UA stylesheet.
+ */
+
+input {
+  line-height: normal;
+}
+
+/**
+ * It's recommended that you don't attempt to style these elements.
+ * Firefox's implementation doesn't respect box-sizing, padding, or width.
+ *
+ * 1. Address box sizing set to `content-box` in IE 8/9/10.
+ * 2. Remove excess padding in IE 8/9/10.
+ */
+
+input[type="checkbox"],
+input[type="radio"] {
+  box-sizing: border-box; /* 1 */
+  padding: 0; /* 2 */
+}
+
+/**
+ * Fix the cursor style for Chrome's increment/decrement buttons. For certain
+ * `font-size` values of the `input`, it causes the cursor style of the
+ * decrement button to change from `default` to `text`.
+ */
+
+input[type="number"]::-webkit-inner-spin-button,
+input[type="number"]::-webkit-outer-spin-button {
+  height: auto;
+}
+
+/**
+ * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
+ * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
+ *    (include `-moz` to future-proof).
+ */
+
+input[type="search"] {
+  -webkit-appearance: textfield; /* 1 */
+  -moz-box-sizing: content-box;
+  -webkit-box-sizing: content-box; /* 2 */
+  box-sizing: content-box;
+}
+
+/**
+ * Remove inner padding and search cancel button in Safari and Chrome on OS X.
+ * Safari (but not Chrome) clips the cancel button when the search input has
+ * padding (and `textfield` appearance).
+ */
+
+input[type="search"]::-webkit-search-cancel-button,
+input[type="search"]::-webkit-search-decoration {
+  -webkit-appearance: none;
+}
+
+/**
+ * Define consistent border, margin, and padding.
+ */
+
+fieldset {
+  border: 1px solid #c0c0c0;
+  margin: 0 2px;
+  padding: 0.35em 0.625em 0.75em;
+}
+
+/**
+ * 1. Correct `color` not being inherited in IE 8/9/10/11.
+ * 2. Remove padding so people aren't caught out if they zero out fieldsets.
+ */
+
+legend {
+  border: 0; /* 1 */
+  padding: 0; /* 2 */
+}
+
+/**
+ * Remove default vertical scrollbar in IE 8/9/10/11.
+ */
+
+textarea {
+  overflow: auto;
+}
+
+/**
+ * Don't inherit the `font-weight` (applied by a rule above).
+ * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
+ */
+
+optgroup {
+  font-weight: bold;
+}
+
+/* Tables
+   ========================================================================== */
+
+/**
+ * Remove most spacing between table cells.
+ */
+
+table {
+  border-collapse: collapse;
+  border-spacing: 0;
+}
+
+td,
+th {
+  padding: 0;
+}
\ No newline at end of file
diff --git a/basic/static/css/pyshiny.css b/basic/static/css/pyshiny.css
new file mode 100644
index 00000000..9ff206ac
--- /dev/null
+++ b/basic/static/css/pyshiny.css
@@ -0,0 +1,419 @@
+/*
+* Adapted from
+* Skeleton V2.0.4
+* Copyright 2014, Dave Gamache
+* www.getskeleton.com
+* Free to use under the MIT license.
+* http://www.opensource.org/licenses/mit-license.php
+* 12/29/2014
+*/
+
+
+/* Table of contents
+––––––––––––––––––––––––––––––––––––––––––––––––––
+- Grid
+- Base Styles
+- Typography
+- Links
+- Buttons
+- Forms
+- Lists
+- Code
+- Tables
+- Spacing
+- Utilities
+- Clearing
+- Media Queries
+*/
+
+
+/* Grid
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+.container {
+  position: relative;
+  width: 100%;
+  max-width: 1000px;
+  margin: 0 auto;
+  padding: 0 20px;
+  box-sizing: border-box; }
+.column,
+.columns {
+  width: 100%;
+  float: left;
+  box-sizing: border-box; }
+
+/* For devices larger than 400px */
+@media (min-width: 400px) {
+  .container {
+    width: 85%;
+    padding: 0; }
+}
+
+/* For devices larger than 550px */
+@media (min-width: 550px) {
+  .container {
+    width: 80%; }
+  .column,
+  .columns {
+    margin-left: 4%; }
+  .column:first-child,
+  .columns:first-child {
+    margin-left: 0; }
+
+  .one.column,
+  .one.columns                    { width: 4.66666666667%; }
+  .two.columns                    { width: 13.3333333333%; }
+  .three.columns                  { width: 22%;            }
+  .four.columns                   { width: 30.6666666667%; }
+  .five.columns                   { width: 39.3333333333%; }
+  .six.columns                    { width: 48%;            }
+  .seven.columns                  { width: 56.6666666667%; }
+  .eight.columns                  { width: 65.3333333333%; }
+  .nine.columns                   { width: 74.0%;          }
+  .ten.columns                    { width: 82.6666666667%; }
+  .eleven.columns                 { width: 91.3333333333%; }
+  .twelve.columns                 { width: 100%; margin-left: 0; }
+
+  .one-third.column               { width: 30.6666666667%; }
+  .two-thirds.column              { width: 65.3333333333%; }
+
+  .one-half.column                { width: 48%; }
+
+  /* Offsets */
+  .offset-by-one.column,
+  .offset-by-one.columns          { margin-left: 8.66666666667%; }
+  .offset-by-two.column,
+  .offset-by-two.columns          { margin-left: 17.3333333333%; }
+  .offset-by-three.column,
+  .offset-by-three.columns        { margin-left: 26%;            }
+  .offset-by-four.column,
+  .offset-by-four.columns         { margin-left: 34.6666666667%; }
+  .offset-by-five.column,
+  .offset-by-five.columns         { margin-left: 43.3333333333%; }
+  .offset-by-six.column,
+  .offset-by-six.columns          { margin-left: 52%;            }
+  .offset-by-seven.column,
+  .offset-by-seven.columns        { margin-left: 60.6666666667%; }
+  .offset-by-eight.column,
+  .offset-by-eight.columns        { margin-left: 69.3333333333%; }
+  .offset-by-nine.column,
+  .offset-by-nine.columns         { margin-left: 78.0%;          }
+  .offset-by-ten.column,
+  .offset-by-ten.columns          { margin-left: 86.6666666667%; }
+  .offset-by-eleven.column,
+  .offset-by-eleven.columns       { margin-left: 95.3333333333%; }
+
+  .offset-by-one-third.column,
+  .offset-by-one-third.columns    { margin-left: 34.6666666667%; }
+  .offset-by-two-thirds.column,
+  .offset-by-two-thirds.columns   { margin-left: 69.3333333333%; }
+
+  .offset-by-one-half.column,
+  .offset-by-one-half.columns     { margin-left: 52%; }
+
+}
+
+
+/* Base Styles
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+/* NOTE
+html is set to 62.5% so that all the REM measurements throughout Skeleton
+are based on 10px sizing. So basically 1.5rem = 15px :) */
+html {
+  font-size: 62.5%; }
+body {
+  font-size: 1.5em; /* currently ems cause chrome bug misinterpreting rems on body element */
+  line-height: 1.6;
+  font-weight: 400;
+  font-family: "Open Sans", "HelveticaNeue", "Helvetica Neue", Helvetica, Arial, sans-serif;
+  color: #222; }
+
+
+/* Typography
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+h1, h2, h3, h4, h5, h6 {
+  margin-top: 0;
+  margin-bottom: 2rem;
+  font-weight: 300; }
+h1 { font-size: 4.0rem; line-height: 1.2;  letter-spacing: -.1rem;}
+h2 { font-size: 3.6rem; line-height: 1.25; letter-spacing: -.1rem; }
+h3 { font-size: 3.0rem; line-height: 1.3;  letter-spacing: -.1rem; }
+h4 { font-size: 2.4rem; line-height: 1.35; letter-spacing: -.08rem; }
+h5 { font-size: 1.8rem; line-height: 1.5;  letter-spacing: -.05rem; }
+h6 { font-size: 1.5rem; line-height: 1.6;  letter-spacing: 0; }
+
+/* Larger than phablet */
+@media (min-width: 550px) {
+  h1 { font-size: 5.0rem; }
+  h2 { font-size: 4.2rem; }
+  h3 { font-size: 3.6rem; }
+  h4 { font-size: 3.0rem; }
+  h5 { font-size: 2.4rem; }
+  h6 { font-size: 1.5rem; }
+}
+
+p {
+  margin-top: 0; }
+
+
+/* Links
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+a {
+  color: #1EAEDB; }
+a:hover {
+  color: #0FA0CE; }
+
+
+/* Buttons
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+.button,
+button,
+input[type="submit"],
+input[type="reset"],
+input[type="button"] {
+  display: inline-block;
+  height: 38px;
+  padding: 0 30px;
+  color: #555;
+  text-align: center;
+  font-size: 11px;
+  font-weight: 600;
+  line-height: 38px;
+  letter-spacing: .1rem;
+  text-transform: uppercase;
+  text-decoration: none;
+  white-space: nowrap;
+  background-color: transparent;
+  border-radius: 4px;
+  border: 1px solid #bbb;
+  cursor: pointer;
+  box-sizing: border-box; }
+.button:hover,
+button:hover,
+input[type="submit"]:hover,
+input[type="reset"]:hover,
+input[type="button"]:hover,
+.button:focus,
+button:focus,
+input[type="submit"]:focus,
+input[type="reset"]:focus,
+input[type="button"]:focus {
+  color: #333;
+  border-color: #888;
+  outline: 0; }
+.button.button-primary,
+button.button-primary,
+input[type="submit"].button-primary,
+input[type="reset"].button-primary,
+input[type="button"].button-primary {
+  color: #FFF;
+  background-color: #33C3F0;
+  border-color: #33C3F0; }
+.button.button-primary:hover,
+button.button-primary:hover,
+input[type="submit"].button-primary:hover,
+input[type="reset"].button-primary:hover,
+input[type="button"].button-primary:hover,
+.button.button-primary:focus,
+button.button-primary:focus,
+input[type="submit"].button-primary:focus,
+input[type="reset"].button-primary:focus,
+input[type="button"].button-primary:focus {
+  color: #FFF;
+  background-color: #1EAEDB;
+  border-color: #1EAEDB; }
+
+
+/* Forms
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+input[type="email"],
+input[type="number"],
+input[type="search"],
+input[type="text"],
+input[type="tel"],
+input[type="url"],
+input[type="password"],
+textarea,
+select {
+  height: 38px;
+  padding: 6px 10px; /* The 6px vertically centers text on FF, ignored by Webkit */
+  background-color: #fff;
+  border: 1px solid #D1D1D1;
+  border-radius: 4px;
+  box-shadow: none;
+  box-sizing: border-box; }
+/* Removes awkward default styles on some inputs for iOS */
+input[type="email"],
+input[type="number"],
+input[type="search"],
+input[type="text"],
+input[type="tel"],
+input[type="url"],
+input[type="password"],
+textarea {
+  -webkit-appearance: none;
+     -moz-appearance: none;
+          appearance: none; }
+textarea {
+  min-height: 65px;
+  padding-top: 6px;
+  padding-bottom: 6px; }
+input[type="email"]:focus,
+input[type="number"]:focus,
+input[type="search"]:focus,
+input[type="text"]:focus,
+input[type="tel"]:focus,
+input[type="url"]:focus,
+input[type="password"]:focus,
+textarea:focus,
+select:focus {
+  border: 1px solid #33C3F0;
+  outline: 0; }
+label,
+legend {
+  display: block;
+  margin-bottom: .5rem;
+  font-weight: 600; }
+fieldset {
+  padding: 0;
+  border-width: 0; }
+input[type="checkbox"],
+input[type="radio"] {
+  display: inline; }
+label > .label-body {
+  display: inline-block;
+  margin-left: .5rem;
+  font-weight: normal; }
+
+
+/* Lists
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+ul {
+  list-style: circle inside; }
+ol {
+  list-style: decimal inside; }
+ol, ul {
+  padding-left: 0;
+  margin-top: 0; }
+ul ul,
+ul ol,
+ol ol,
+ol ul {
+  margin: 1.5rem 0 1.5rem 3rem;
+  font-size: 90%; }
+li {
+  margin-bottom: 1rem; }
+
+
+/* Code
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+code {
+  padding: .2rem .5rem;
+  margin: 0 .2rem;
+  font-size: 90%;
+  white-space: nowrap;
+  background: #F1F1F1;
+  border: 1px solid #E1E1E1;
+  border-radius: 4px; }
+pre > code {
+  display: block;
+  padding: 1rem 1.5rem;
+  white-space: pre; }
+
+
+/* Tables
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+th,
+td {
+  padding: 12px 15px;
+  text-align: left;
+  border-bottom: 1px solid #E1E1E1; }
+th:first-child,
+td:first-child {
+  padding-left: 0; }
+th:last-child,
+td:last-child {
+  padding-right: 0; }
+
+
+/* Spacing
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+button,
+.button {
+  margin-bottom: 1rem; }
+input,
+textarea,
+select,
+fieldset {
+  margin-bottom: 1.5rem; }
+pre,
+blockquote,
+dl,
+figure,
+table,
+p,
+ul,
+ol,
+form {
+  margin-bottom: 2.5rem; }
+
+
+/* Utilities
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+.u-full-width {
+  width: 100%;
+  box-sizing: border-box; }
+.u-max-full-width {
+  max-width: 100%;
+  box-sizing: border-box; }
+.u-pull-right {
+  float: right; }
+.u-pull-left {
+  float: left; }
+
+
+/* Misc
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+hr {
+  margin-top: 3rem;
+  margin-bottom: 3.5rem;
+  border-width: 0;
+  border-top: 1px solid #E1E1E1; }
+
+
+/* Clearing
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+
+/* Self Clearing Goodness */
+.container:after,
+.row:after,
+.u-cf {
+  content: "";
+  display: table;
+  clear: both; }
+
+
+/* Media Queries
+–––––––––––––––––––––––––––––––––––––––––––––––––– */
+/*
+Note: The best way to structure the use of media queries is to create the queries
+near the relevant code. For example, if you wanted to change the styles for buttons
+on small devices, paste the mobile query code up in the buttons section and style it
+there.
+*/
+
+
+/* Larger than mobile */
+@media (min-width: 400px) {}
+
+/* Larger than phablet (also point when grid becomes active) */
+@media (min-width: 550px) {}
+
+/* Larger than tablet */
+@media (min-width: 750px) {}
+
+/* Larger than desktop */
+@media (min-width: 1000px) {}
+
+/* Larger than Desktop HD */
+@media (min-width: 1200px) {}
diff --git a/basic/static/js/layoutState.js b/basic/static/js/layoutState.js
new file mode 100644
index 00000000..cd3153d9
--- /dev/null
+++ b/basic/static/js/layoutState.js
@@ -0,0 +1,49 @@
+$(document).ready(function(){
+
+    // Record and send the state when inputs change
+    $('input, select').each(function(i, obj) {
+        if(obj.type==="checkbox" || obj.type==="radio"){
+            $(obj).change(function(){
+                console.log(getState());
+                sendState({}, {});
+            });
+        } else {
+            obj.oninput = function(){
+                if($(obj).hasClass("show-output")){
+                    $('output[for='+obj.name+']')[0].value = obj.value;
+                }
+                console.log(getState());
+                sendState({}, {});
+            };
+        }
+    });
+});
+
+function getState(payload) {
+    var payload = payload || {};
+    $('input').each(function(i, el) {
+        if (el.type==="radio") {
+            var value = $('input[name='+el.name+']:checked').val();
+            if(typeof value === "undefined"){
+                value = null;
+            }
+            payload[el.name] = value;
+        } else if (el.type==="checkbox") {
+            payload[el.value] = $(el).is(':checked');
+        } else if (el.type==="text") {
+            payload[el.name] = el.value;
+        } else {
+            payload[el.name] = el.value;
+        }
+    });
+    $('select').each(function(i, el) {
+        payload[el.name] = el.value;
+    });
+    return payload;
+}
+
+function sendState(that, payload){
+    var payload = payload || {};
+    payload = getState(payload);
+    socket.emit('replot', payload);
+}
diff --git a/basic/static/js/plotlyEmbed.js b/basic/static/js/plotlyEmbed.js
new file mode 100644
index 00000000..fcaa6bff
--- /dev/null
+++ b/basic/static/js/plotlyEmbed.js
@@ -0,0 +1,79 @@
+var socket = io.connect('http://' + document.domain + ':' + location.port);
+$(document).ready(function(){
+
+    function init_graph_obj(id){
+        var obj = {
+            graphContentWindow: $('#'+id)[0].contentWindow,
+            id: id
+        };
+        obj.pinger = setInterval(function(){
+            obj.graphContentWindow.postMessage({task: 'ping'}, 'https://plot.ly');
+        }, 500);
+        return obj;
+    }
+
+    var graphs = {};
+    $('iframe').each(function(i, obj){
+        graphs[obj.id] = init_graph_obj(obj.id);
+    });
+
+    //
+    // Sockets
+    //
+
+    namespace = ''; // change to an empty string to use the global namespace
+
+    // the socket.io documentation recommends sending an explicit package upon connection
+    // this is specially important when using the global namespace
+    var socket = io.connect('http://' + document.domain + ':' + location.port);
+
+    socket.on('connect', function() {
+        socket.emit('my event', {data: 'I\'m connected!'});
+    });
+
+    socket.on('postMessage', function(msg_string) {
+        $('.left-pane').show();
+        $('.loading').hide();
+        var msgs = JSON.parse(msg_string);
+        for(var i=0; i<msgs.length; i++){
+            graphs[msgs[i].id].graphContentWindow.postMessage(msgs[i], 'https://plot.ly');
+        }
+    });
+
+    window.addEventListener('message', function(e){
+        var message = e.data;
+        var graph;
+        for(var i in graphs) {
+            if(graphs[i].graphContentWindow === e.source) {
+                graph = graphs[i];
+            }
+        }
+        if(typeof graph === "undefined") {
+            return;
+        }
+
+        var pinger = graph.pinger;
+        var graphContentWindow = graph.graphContentWindow;
+        var id = graph.id;
+
+        if('pong' in message && message.pong) {
+            clearInterval(pinger);
+            graphContentWindow.postMessage({
+                'task': 'listen',
+                'events': ['click']
+            }, 'https://plot.ly');
+            var payload = getState({});
+            payload[id] = id;
+            socket.emit('pong', payload);
+        } else if (message.type==='hover' ||
+                    message.type==='zoom'  ||
+                    message.type==='click') {
+            if(message.type !== 'zoom') {
+                for(var i in message.points) {
+                    delete message.points[i].data;
+                }
+            }
+            sendState({}, {'click': message});
+        }
+    });
+});
diff --git a/basic/templates/banner.html b/basic/templates/banner.html
new file mode 100644
index 00000000..87def432
--- /dev/null
+++ b/basic/templates/banner.html
@@ -0,0 +1 @@
+<h1>Official Initials</h1>
\ No newline at end of file
diff --git a/basic/templates/base.html b/basic/templates/base.html
new file mode 100644
index 00000000..50594564
--- /dev/null
+++ b/basic/templates/base.html
@@ -0,0 +1,26 @@
+<!doctype html>
+<html>
+
+<head>
+    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,700' rel='stylesheet' type='text/css'>
+    <link href='static/css/pyshiny.css' rel='stylesheet' type='text/css'>
+
+    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
+    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.16/socket.io.min.js"></script>
+</head>
+
+<body>
+
+    {% block content %}{% endblock %}
+
+</body>
+
+
+<footer>
+
+    <script type="text/javascript" src="static/js/layoutState.js"></script>
+    <script type="text/javascript" src="static/js/plotlyEmbed.js"></script>
+
+</footer>
+
+</html>
diff --git a/basic/templates/fullindex.html b/basic/templates/fullindex.html
new file mode 100644
index 00000000..b1363611
--- /dev/null
+++ b/basic/templates/fullindex.html
@@ -0,0 +1,82 @@
+{% extends "layouts/layout_twopane.html" %}
+
+{% block banner %}
+    <h3>
+        Official Initials
+    </h3>
+{% endblock %}
+
+{% block leftcolumn %}
+
+    {% include leftcolumn.html %}
+
+    <h4>Etch A Sketch</h4>
+
+    <label for="X">X Position</label>
+    <input  type="range"
+            class="u-full-width show-values"
+            name="X"
+            value="10" min="10" max="2000" step="10">
+
+    <label for="Y">Y Position</label>
+    <input  type="range"
+            class="u-full-width show-values"
+            name="Y"
+            value="10" min="10" max="2000" step="10">
+
+    <label for="searchterms">Title</label>
+    <input class="u-full-width" type="text" placeholder="bloomingdales" name="title">
+
+    <label for="valuesDropdown">Values</label>
+    <select class="u-full-width" name="valuesDropdown">
+        <option value="lifeExp">Life Expectancy</option>
+        <option value="pop">Population</option>
+        <option value="gdp">GDP per Capita</option>
+    </select>
+
+    <label>
+        <input value="python" type="checkbox">
+        <span class="label-body">Python</span>
+    </label>
+
+    <label>
+        <input value="matlab" type="checkbox">
+        <span class="label-body">Matlab</span>
+    </label>
+
+
+    <legend>
+        Animals
+    </legend>
+    <label>
+        <input value="cats" name="animal" type="radio">
+        <span class="label-body">Cats</span>
+    </label>
+
+    <label>
+        <input value="dogs" name="animal" type="radio">
+        <span class="label-body">Dogs</span>
+    </label>
+
+
+    <a href="#" class="button">
+        Refresh
+    </a>
+
+{% endblock %}
+
+{% block rightcolumn %}
+
+    <h4>Quarterly Earnings</h4>
+    <iframe id="top_graph"
+            src="https://plot.ly/~playground/7.embed"
+            style="width: 100%; height: 500px; border: none;">
+    </iframe>
+
+    <h4>Forecasts</h4>
+    <iframe id="bottom_graph"
+            src="https://plot.ly/~playground/7.embed"
+            style="width: 100%; height: 500px; border: none;">
+    </iframe>
+
+{% endblock %}
diff --git a/basic/templates/index.html b/basic/templates/index.html
new file mode 100644
index 00000000..4cfe88e1
--- /dev/null
+++ b/basic/templates/index.html
@@ -0,0 +1,18 @@
+{% extends "layouts/layout_twopane.html" %}
+
+{% block banner %}
+    {% include "banner.html" %}
+{% endblock %}
+
+{% block leftcolumn %}
+
+    <h1>Cross language mixin</h1>
+    {% include "leftcolumn.html" %}
+
+{% endblock %}
+
+{% block rightcolumn %}
+
+    {% include "rightcolumn.html" %}
+
+{% endblock %}
diff --git a/basic/templates/layouts/base.html b/basic/templates/layouts/base.html
new file mode 100644
index 00000000..5ab64ee8
--- /dev/null
+++ b/basic/templates/layouts/base.html
@@ -0,0 +1,15 @@
+<!doctype html>
+<html>
+
+<head>
+    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,300,600' rel='stylesheet' type='text/css'>
+</head>
+
+<body>
+
+    {% block content %}{% endblock %}
+
+</body>
+
+
+</html>
diff --git a/basic/templates/layouts/layout_twopane.html b/basic/templates/layouts/layout_twopane.html
new file mode 100644
index 00000000..6afdf683
--- /dev/null
+++ b/basic/templates/layouts/layout_twopane.html
@@ -0,0 +1,23 @@
+{% extends "base.html" %}
+{% block content %}
+
+    <div class="container">
+
+        <div style="border-bottom: lightgrey solid thin;">
+                {% block banner %}{% endblock %}
+        </div>
+
+        <div class="row">
+
+            <div class="three columns">
+                {% block leftcolumn %}{% endblock %}
+            </div>
+
+            <div class="nine columns">
+                {% block rightcolumn %}{% endblock %}
+            </div>
+
+        </div>
+    </div>
+
+{% endblock %}
diff --git a/basic/templates/leftcolumn.html b/basic/templates/leftcolumn.html
new file mode 100644
index 00000000..69be56a6
--- /dev/null
+++ b/basic/templates/leftcolumn.html
@@ -0,0 +1,7 @@
+<h4>Etch a Sketch!!</h4>
+<label for="X">X Position</label>
+<input name="X" min="10" max="2000" value="0" step="10" type="range" class="u-full-width show-values">
+<label for="Y">Y Position</label>
+<input name="Y" min="10" max="2000" value="0" step="10" type="range" class="u-full-width show-values">
+<label>Title</label>
+<input placeholder="bloomingdales" type="text" class="u-full-width" name="title">
\ No newline at end of file
diff --git a/basic/templates/rightcolumn.html b/basic/templates/rightcolumn.html
new file mode 100644
index 00000000..682cd057
--- /dev/null
+++ b/basic/templates/rightcolumn.html
@@ -0,0 +1,2 @@
+<H4>Time Frame</H4>
+<iframe src="https://plot.ly/~playground/7.embed" style="width: 100%; height: 500px; border: none;" id="top_graph"></iframe>
\ No newline at end of file
