commit 041df7fcada95492d3bcf23e42c832bae5d84aa0
Author: alexcjohnson <alex@plot.ly>
Date:   Fri Apr 3 16:45:50 2020 -0400

    --pause option for dash.testing
    use with a single test case, eg:
        pytest -k cbmt006 --pause
    drops you in the python debugger, you can also use the js console

diff --git a/dash/dash.py b/dash/dash.py
index 1a854654..09b0ae61 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -787,7 +787,7 @@ class Dash(object):
             "output": callback_id,
             "inputs": [c.to_dict() for c in inputs],
             "state": [c.to_dict() for c in state],
-            "clientside_function": None
+            "clientside_function": None,
         }
         self.callback_map[callback_id] = {
             "inputs": callback_spec["inputs"],
diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index c9b1aa98..f67ab308 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -42,6 +42,7 @@ class Browser(DashPageMixin):
         percy_finalize=True,
         percy_assets_root="",
         wait_timeout=10,
+        pause=False,
     ):
         self._browser = browser.lower()
         self._remote_url = remote_url
@@ -54,6 +55,7 @@ class Browser(DashPageMixin):
         self._wait_timeout = wait_timeout
         self._percy_finalize = percy_finalize
         self._percy_run = percy_run
+        self._pause = pause
 
         self._driver = until(self.get_webdriver, timeout=1)
         self._driver.implicitly_wait(2)
@@ -312,6 +314,14 @@ class Browser(DashPageMixin):
                 )
             )
 
+        if self._pause:
+            try:
+                import pdb as pdb_
+            except ImportError:
+                import ipdb as pdb_
+
+            pdb_.set_trace()
+
     def select_dcc_dropdown(self, elem_or_selector, value=None, index=None):
         dropdown = self._get_element(elem_or_selector)
         dropdown.click()
diff --git a/dash/testing/plugin.py b/dash/testing/plugin.py
index 0881e143..724f07c6 100644
--- a/dash/testing/plugin.py
+++ b/dash/testing/plugin.py
@@ -49,6 +49,12 @@ def pytest_addoption(parser):
         help="set this flag to control percy finalize at CI level",
     )
 
+    dash.addoption(
+        "--pause",
+        action="store_true",
+        help="pause using pdb after opening the test app, so you can interact with it",
+    )
+
 
 @pytest.mark.tryfirst
 def pytest_addhooks(pluginmanager):
@@ -114,6 +120,7 @@ def dash_br(request, tmpdir):
         download_path=tmpdir.mkdir("download").strpath,
         percy_assets_root=request.config.getoption("percy_assets"),
         percy_finalize=request.config.getoption("nopercyfinalize"),
+        pause=request.config.getoption("pause"),
     ) as browser:
         yield browser
 
@@ -130,6 +137,7 @@ def dash_duo(request, dash_thread_server, tmpdir):
         download_path=tmpdir.mkdir("download").strpath,
         percy_assets_root=request.config.getoption("percy_assets"),
         percy_finalize=request.config.getoption("nopercyfinalize"),
+        pause=request.config.getoption("pause"),
     ) as dc:
         yield dc
 
@@ -146,5 +154,6 @@ def dashr(request, dashr_server, tmpdir):
         download_path=tmpdir.mkdir("download").strpath,
         percy_assets_root=request.config.getoption("percy_assets"),
         percy_finalize=request.config.getoption("nopercyfinalize"),
+        pause=request.config.getoption("pause"),
     ) as dc:
         yield dc
diff --git a/tests/integration/callbacks/test_multiple_callbacks.py b/tests/integration/callbacks/test_multiple_callbacks.py
index 7b46e95c..517fb127 100644
--- a/tests/integration/callbacks/test_multiple_callbacks.py
+++ b/tests/integration/callbacks/test_multiple_callbacks.py
@@ -241,11 +241,7 @@ def test_cbmt005_multi_converging_chain(dash_duo):
 def test_cbmt006_derived_props(dash_duo):
     app = dash.Dash(__name__)
     app.layout = html.Div(
-        [
-            html.Div(id="output"),
-            html.Button("click", id="btn"),
-            dcc.Store(id="store"),
-        ]
+        [html.Div(id="output"), html.Button("click", id="btn"), dcc.Store(id="store"),]
     )
 
     @app.callback(
