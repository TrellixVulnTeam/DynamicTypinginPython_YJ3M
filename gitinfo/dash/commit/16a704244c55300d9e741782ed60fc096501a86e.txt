commit 16a704244c55300d9e741782ed60fc096501a86e
Author: byron <byron@plot.ly>
Date:   Mon Aug 12 15:48:55 2019 -0400

    add back

diff --git a/.circleci/config.yml b/.circleci/config.yml
index 7b335668..1faf0a2e 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -183,7 +183,6 @@ jobs:
         environment:
           PERCY_PARALLEL_TOTAL: '-1'
           PYVERSION: python37
-          PERCY_ENABLE: '0'
     parallelism: 1
     steps:
       - checkout
@@ -198,8 +197,7 @@ jobs:
             . venv/bin/activate && cd packages && ls -la
             find . -name "*.gz" | xargs pip install --force-reinstall && pip list | grep dash && cd ..
             TESTFILES=$(circleci tests glob "tests/integration/**/test_*.py" | circleci tests split --split-by=timings)
-            pytest --headless tests/integration/test_calendar_props.py
-            # pytest --headless --nopercyfinalize --junitxml=test-reports/junit_intg.xml ${TESTFILES}
+            pytest --headless --nopercyfinalize --junitxml=test-reports/junit_intg.xml ${TESTFILES}
       - store_artifacts:
           path: test-reports
       - store_test_results:
diff --git a/tests/integration/test_calendar_props.py b/tests/integration/test_calendar_props.py
deleted file mode 100644
index d74ffe50..00000000
--- a/tests/integration/test_calendar_props.py
+++ /dev/null
@@ -1,110 +0,0 @@
-import itertools
-import pytest
-
-import dash_core_components as dcc
-import dash_html_components as html
-import dash
-from dash.dependencies import Input, Output
-import dash.testing.wait as wait
-
-DAY_SELECTOR = 'div[data-visible="true"] td.CalendarDay'
-
-
-@pytest.mark.DCC594
-def test_cdpr001_date_clearable_true_works(dash_duo):
-
-    app = dash.Dash(__name__)
-    app.layout = html.Div([dcc.DatePickerRange(id="dpr", clearable=True)])
-
-    dash_duo.start_server(app)
-
-    start_date = dash_duo.find_element('input[aria-label="Start Date"]')
-    end_date = dash_duo.find_element('input[aria-label="End Date"]')
-
-    start_date.click()
-
-    dash_duo.find_elements(DAY_SELECTOR)[0].click()
-    dash_duo.find_elements(DAY_SELECTOR)[-1].click()
-
-    close_btn = dash_duo.wait_for_element('button[aria-label="Clear Dates"]')
-
-    assert start_date.get_attribute("value") and end_date.get_attribute(
-        "value"
-    ), "both start date and end date should get values"
-
-    close_btn.click()
-    assert not start_date.get_attribute(
-        "value"
-    ) and not end_date.get_attribute(
-        "value"
-    ), "both start and end dates should be cleared"
-
-
-def test_cdpr002_updatemodes(dash_duo):
-    app = dash.Dash(__name__)
-
-    app.layout = html.Div(
-        [
-            dcc.DatePickerRange(
-                id="date-picker-range",
-                start_date_id="startDate",
-                end_date_id="endDate",
-                start_date_placeholder_text="Select a start date!",
-                end_date_placeholder_text="Select an end date!",
-                updatemode="bothdates",
-            ),
-            html.Div(id="date-picker-range-output"),
-        ]
-    )
-
-    @app.callback(
-        Output("date-picker-range-output", "children"),
-        [
-            Input("date-picker-range", "start_date"),
-            Input("date-picker-range", "end_date"),
-        ],
-    )
-    def update_output(start_date, end_date):
-        return "{} - {}".format(start_date, end_date)
-
-    dash_duo.start_server(app=app)
-
-    start_date = dash_duo.find_element("#startDate")
-    start_date.click()
-
-    end_date = dash_duo.find_element("#endDate")
-    end_date.click()
-
-    assert (
-        dash_duo.find_element("#date-picker-range-output").text
-        == "None - None"
-    ), "the output should not update when both clicked but no selection happen"
-
-    start_date.click()
-
-    dash_duo.find_elements(DAY_SELECTOR)[4].click()
-    assert (
-        dash_duo.find_element("#date-picker-range-output").text
-        == "None - None"
-    ), "the output should not update when only one is selected"
-
-    eday = dash_duo.find_elements(DAY_SELECTOR)[-4]
-    wait.until(lambda: eday.is_displayed() and eday.is_enabled(), timeout=2)
-    eday.click()
-
-    date_tokens = set(start_date.get_attribute("value").split("/"))
-    date_tokens.update(end_date.get_attribute("value").split("/"))
-
-    assert (
-        set(
-            itertools.chain(
-                *[
-                    _.split("-")
-                    for _ in dash_duo.find_element(
-                        "#date-picker-range-output"
-                    ).text.split(" - ")
-                ]
-            )
-        )
-        == date_tokens
-    ), "date should match the callback output"
