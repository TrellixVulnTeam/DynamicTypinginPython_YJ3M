commit c05890968898cb7f7aec7800743023fc228be631
Author: Ryan Marren <rymarr@tuta.io>
Date:   Sun Jun 24 22:09:37 2018 -0400

    Generate an _imports_.py file so py classes import normally.

diff --git a/dash/development/component_loader.py b/dash/development/component_loader.py
index e8ba5686..74d2e557 100644
--- a/dash/development/component_loader.py
+++ b/dash/development/component_loader.py
@@ -1,5 +1,6 @@
 import collections
 import json
+import os
 from .base_component import generate_class
 from .base_component import generate_class_file
 
@@ -62,15 +63,20 @@ def generate_classes(namespace, metadata_path='lib/metadata.json'):
     Usage: generate_classes()
 
     Keyword arguments:
+    namespace -- name of the generated python package (also output dir)
+
     metadata_path -- a path to a JSON file created by
     [`react-docgen`](https://github.com/reactjs/react-docgen).
 
-    output_dir -- the directory to put component classes in
-
     Returns:
     """
 
     data = _get_metadata(metadata_path)
+    imports_path = os.path.join(namespace, '_imports_.py')
+
+    # Make sure the file doesn't exist, as we use append write
+    if os.path.exists(imports_path):
+        os.remove(imports_path)
 
     # Iterate over each property name (which is a path to the component)
     for componentPath in data:
@@ -88,3 +94,16 @@ def generate_classes(namespace, metadata_path='lib/metadata.json'):
             componentData['description'],
             namespace
         )
+
+        # Add an import statement for this component
+        with open(imports_path, 'a') as f:
+            f.write('from .{0:s} import {0:s}\n'.format(name))
+
+    # Add the __all__ value so we can import * from _imports_
+    all_imports = [p.split('/').pop().split('.')[0] for p in data]
+    with open(imports_path, 'a') as f:
+        array_string = '[\n'
+        for a in all_imports:
+            array_string += '    "{:s}",\n'.format(a)
+        array_string += ']\n'
+        f.write('\n\n__all__ = {:s}'.format(array_string))
