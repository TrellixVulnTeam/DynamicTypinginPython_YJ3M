commit 99b26bc49a9a29c67ae9a61f6a2800c1ec2e0a14
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Sat Jul 30 17:10:48 2016 -0700

    WIP: Serve up component suite bundles in HEAD

diff --git a/dash/click_example.py b/dash/click_example.py
index eb7d4323..d20d8f94 100644
--- a/dash/click_example.py
+++ b/dash/click_example.py
@@ -160,4 +160,11 @@ dash.react('xslice', ['heatmap'])(plot_xslice)
 
 
 if __name__ == "__main__":
-    dash.server.run(port=8050, debug=True)
+    dash.run_server(
+        port=8050,
+        debug=True,
+        component_suites=[
+            'dash_core_components-0.1.4-py2.7.egg',
+            'dash_html_components-0.2.3-py2.7.egg'
+        ]
+    )
diff --git a/dash/dash/react.py b/dash/dash/react.py
index aabbb417..fd3f0785 100644
--- a/dash/dash/react.py
+++ b/dash/dash/react.py
@@ -1,12 +1,35 @@
 import flask
-import plotly
 import json
-from flask import Flask, url_for
+from os import path, listdir
+import plotly
+from flask import Flask, url_for, send_from_directory
 from flask.ext.cors import CORS
 
+# Get local path for site-packages
+plotly_module_path = path.abspath(plotly.__file__)
+plotly_module_name = 'plotly'
+plotly_name_index = plotly_module_path.index(plotly_module_name)
+site_packages_path = plotly_module_path[:plotly_name_index]
+# TEMP: check path
+print('site_packages_path: ' + site_packages_path)
+
+# TODO: figure out how we can support local module installations
+# using `python setup.py install`, where the module directory has
+# appended `-[MODULE_VERSION]-[pyVERSTION].egg`
+# e.g. dash_core_components-0.1.4-py2.7.egg
+# IDEA:
+# 1. Traverse site-packages looking for comp. suite root names;
+# 2. map root names to real directory names;
+# 3. use mapping in the `component_suites` req. handler.
+#
+# dash_component_suites = [f for f in listdir(dir)
+#     if f.startswith('dash_') and
+#     not f.endswith('dist-info')
+# ]
 
 class Dash(object):
     def __init__(self, name=None, url_namespace='', server=None):
+
         self.layout = None
 
         self.react_map = {}
@@ -22,25 +45,41 @@ class Dash(object):
 
         CORS(self.server) # TODO: lock this down to dev node server port
 
+        self.server.add_url_rule(
+            '{}/'.format(url_namespace),
+            endpoint='{}_{}'.format(url_namespace, 'index'),
+            view_func=self.index)
+
         self.server.add_url_rule(
             '{}/initialize'.format(url_namespace),
             view_func=self.initialize,
             endpoint='{}_{}'.format(url_namespace, 'initialize'))
+
         self.server.add_url_rule(
             '{}/interceptor'.format(url_namespace),
             view_func=self.interceptor,
             endpoint='{}_{}'.format(url_namespace, 'interceptor'),
             methods=['POST'])
+
         self.server.add_url_rule(
-            '{}/'.format(url_namespace),
-            endpoint='{}_{}'.format(url_namespace, 'index'),
-            view_func=self.index)
+            '{}/js/component-suites/<path:path>'.format(url_namespace),
+            endpoint='{}_{}'.format(url_namespace, 'js'),
+            view_func=self.component_suites)
 
+        # Serve up the main dash bundle with the treeRenderer
         with self.server.app_context():
             url_for('static', filename='bundle.js')
 
+    def component_suites(self, path):
+        # http://localhost:8050/js/component-suites/dash_core_components-0.1.4-py2.7.egg/bundle.js
+        print(site_packages_path + path)
+        return send_from_directory(site_packages_path, path)
+
     def index(self):
-        return flask.render_template('index.html')
+        return flask.render_template(
+            'index.html',
+            component_suites=self.component_suites
+        )
 
     def initialize(self):
         return flask.jsonify(json.loads(json.dumps(self.layout,
@@ -70,6 +109,10 @@ class Dash(object):
 
         return self.react_map[target_id]['callback'](*parents)
 
+    def run_server(self, port=8050, debug=True, component_suites=[]):
+        self.component_suites = component_suites
+        self.server.run(port=port, debug=debug)
+
     def react(self, component_id, parents=[]):
         def wrap_func(func):
             def add_context(*args, **kwargs):
diff --git a/dash/templates/index.html b/dash/templates/index.html
index 9d2d05a3..8e895d46 100644
--- a/dash/templates/index.html
+++ b/dash/templates/index.html
@@ -2,14 +2,13 @@
 <html>
     <head>
         <meta charset="UTF-8" />
+        {% for suite in component_suites %}
+            <script src="/js/component-suites/{{suite}}/lib/bundle.js"></script>
+        {% endfor %}
     </head>
     <body>
         <div id="react-entry-point"></div>
     </body>
 
-    <script type="text/javascript">
-
-    </script>
-
     <script type="text/javascript" src="static/bundle.js"></script>
 </html>
