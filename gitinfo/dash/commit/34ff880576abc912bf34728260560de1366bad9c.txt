commit 34ff880576abc912bf34728260560de1366bad9c
Author: chriddyp <chris@plot.ly>
Date:   Tue Apr 26 17:39:27 2016 -0400

    :star: an `UpdateDependants` container
    
    `UpdateDpendants` copies the child component and passes in a connected
    `updateDependants` dispatching function that the presentational or
    widget control can use when it wants to signify that its state has
    updated and that itâ€™s dependent components should use its new props to
    update their values via the `/update-components` POST request

diff --git a/renderer/src/components/core/UpdateDependants.react.js b/renderer/src/components/core/UpdateDependants.react.js
new file mode 100644
index 00000000..4ced8dca
--- /dev/null
+++ b/renderer/src/components/core/UpdateDependants.react.js
@@ -0,0 +1,46 @@
+import React, { PropTypes } from 'react';
+import { connect } from 'react-redux';
+
+import { updateDependants, updateProps } from '../../actions';
+
+/*
+ * UpdateDependants passes a connected updateDependants handler down to
+ * its child as a prop
+ */
+
+const mapStateToProps = () => ({});
+
+const mapDispatchToProps = (dispatch, ownProps) => {
+    return {
+        updateDependants: (updatedProps) => {
+            const payload = {
+                updatedProps, // pass in the entire prop object or just updates?
+
+                // we *need* the ID, should we just pass / merge everything in?
+                id: React.Children.only(ownProps.children).props.id,
+                itempath: React.Children.only(ownProps.children).props.path
+            };
+
+            // Update this component's props
+            dispatch(updateProps(payload));
+
+            // Update this component's dependants depending in these new props
+            dispatch(updateDependants(payload));
+
+        }
+    }
+};
+
+const UpdateDependants = ({ updateDependants, children }) => {
+    // pass updateDependants as props to the child element e.g. an <input>
+    return React.cloneElement(children, {updateDependants});
+}
+
+UpdateDependants.propTypes = {
+    updateDependants: PropTypes.func.isRequired
+};
+
+export default connect(
+    mapStateToProps,
+    mapDispatchToProps
+)(UpdateDependants);
diff --git a/renderer/src/renderTree.js b/renderer/src/renderTree.js
index 6abcb270..5eb3332b 100644
--- a/renderer/src/renderTree.js
+++ b/renderer/src/renderTree.js
@@ -58,6 +58,15 @@ export default function render(component, path=[]) {
         );
     }
 
+    // has dependants?
+    if (component.props.id && dependencyGraph.dependantsOf(component.props.id)) {
+        content = (
+            <UpdateDependants>
+                {content}
+            </UpdateDependants>
+        );
+    }
+
     return content;
 
 }
