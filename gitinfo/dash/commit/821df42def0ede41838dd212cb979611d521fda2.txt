commit 821df42def0ede41838dd212cb979611d521fda2
Author: chriddyp <chris@plot.ly>
Date:   Thu Sep 7 12:17:26 2017 -0400

    add some more sanity check snapshots

diff --git a/tests/test_render.py b/tests/test_render.py
index 2d743f5c..7db642b5 100644
--- a/tests/test_render.py
+++ b/tests/test_render.py
@@ -391,8 +391,7 @@ class Tests(IntegrationTests):
             []
         )
 
-        # Take a screenshot with percy
-        # self.percy_runner.snapshot(name='dcc')
+        self.percy_runner.snapshot()
 
         assert_clean_console(self)
 
@@ -424,6 +423,7 @@ class Tests(IntegrationTests):
 
         output1 = self.wait_for_element_by_id('output-1')
         wait_for(lambda: output1.text == 'initial value')
+        self.percy_runner.snapshot()
 
         input1 = self.wait_for_element_by_id('input')
         input1.clear()
@@ -432,6 +432,7 @@ class Tests(IntegrationTests):
 
         output1 = lambda: self.wait_for_element_by_id('output-1')
         wait_for(lambda: output1().text == 'hello world')
+        self.percy_runner.snapshot()
 
         self.assertEqual(
             call_count.value,
@@ -509,6 +510,7 @@ class Tests(IntegrationTests):
                 </div>'''.replace('\n', '').replace('  ', '')
             )
         )
+        self.percy_runner.snapshot()
 
         # the paths should include these new output IDs
         self.assertEqual(
@@ -548,6 +550,7 @@ class Tests(IntegrationTests):
             ),
             []
         )
+        self.percy_runner.snapshot()
 
         assert_clean_console(self)
 
@@ -763,6 +766,7 @@ class Tests(IntegrationTests):
             generic_chapter_assertions('chapter1')
 
         chapter1_assertions()
+        self.percy_runner.snapshot()
 
         # switch chapters
         (self.driver.find_elements_by_css_selector(
@@ -771,6 +775,7 @@ class Tests(IntegrationTests):
 
         # sleep just to make sure that no calls happen after our check
         time.sleep(2)
+        self.percy_runner.snapshot()
         wait_for(lambda: call_counts['body'].value == 2)
         wait_for(lambda: call_counts['chapter2-graph'].value == 1)
         wait_for(lambda: call_counts['chapter2-label'].value == 1)
@@ -815,6 +820,7 @@ class Tests(IntegrationTests):
         )[2]).click()
         # sleep just to make sure that no calls happen after our check
         time.sleep(2)
+        self.percy_runner.snapshot()
         wait_for(lambda: call_counts['body'].value == 3)
         wait_for(lambda: call_counts['chapter3-graph'].value == 1)
         wait_for(lambda: call_counts['chapter3-label'].value == 1)
@@ -867,6 +873,8 @@ class Tests(IntegrationTests):
             self.driver.find_element_by_id('body').text ==
             'Just a string'
         ))
+        self.percy_runner.snapshot()
+
         # each element should exist in the dom
         paths = self.driver.execute_script(
             'return window.store.getState().paths'
@@ -884,6 +892,7 @@ class Tests(IntegrationTests):
         )[0]).click()
         time.sleep(0.5)
         chapter1_assertions()
+        self.percy_runner.snapshot()
 
         # switch to 5
         (self.driver.find_elements_by_css_selector(
@@ -901,6 +910,7 @@ class Tests(IntegrationTests):
         chapter5_button().click()
         wait_for(lambda: chapter5_div().text == chapter5_output_children)
         time.sleep(0.5)
+        self.percy_runner.snapshot()
         self.assertEqual(call_counts['chapter5-output'].value, 1)
 
     def test_dependencies_on_components_that_dont_exist(self):
@@ -935,6 +945,7 @@ class Tests(IntegrationTests):
 
         el = self.wait_for_element_by_id('output-1')
         wait_for(lambda: el.text == 'initial value')
+        self.percy_runner.snapshot()
         time.sleep(1.0)
         self.assertEqual(output_1_call_count.value, 1)
         self.assertEqual(output_2_call_count.value, 0)
