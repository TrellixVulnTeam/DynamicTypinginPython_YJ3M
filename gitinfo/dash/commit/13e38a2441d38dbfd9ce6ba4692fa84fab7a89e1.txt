commit 13e38a2441d38dbfd9ce6ba4692fa84fab7a89e1
Author: chriddyp <chris@plot.ly>
Date:   Thu Mar 23 21:26:57 2017 -0400

    support event exceptions

diff --git a/dash/dash.py b/dash/dash.py
index 42808f17..ddb7f867 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -319,13 +319,15 @@ class Dash(object):
                     ).replace('    ', ''))
 
                 if not self.config.supress_callback_exceptions:
+
                     if getattr(self.layout, 'id', None) == arg.component_id:
                         component = self.layout
                     else:
                         component = self.layout[arg.component_id]
+
                     if (hasattr(arg, 'component_property') and
                             arg.component_property not in
-                            component._prop_names):
+                            component.available_properties):
                         raise exceptions.NonExistantPropException('''
                             Attempting to assign a callback with
                             the property "{}" but the component
@@ -336,23 +338,24 @@ class Dash(object):
                                    arg.component_id,
                                    arg.component_property,
                                    arg.component_id,
-                                   component._prop_names).replace('    ', ''))
+                                   component.available_properties
+                                   ).replace('    ', ''))
+
                     if (hasattr(arg, 'component_event') and
                             arg.component_event not in
-                            # TODO - Rename `_prop_names` to `available_props`
-                            # and add `available_events` to components
-                            getattr(component, 'available_events', ['click', 'blur'])):
-                        raise exceptions.NonExistantPropException('''
+                            component.available_events):
+                        raise exceptions.NonExistantEventException('''
                             Attempting to assign a callback with
-                            the property "{}" but the component
-                            "{}" doesn't have "{}" as a property.\n
-                            Here is a list of the available properties in "{}":
+                            the event "{}" but the component
+                            "{}" doesn't have "{}" as an event.\n
+                            Here is a list of the available events in "{}":
                             {}
-                        '''.format(arg.component_property,
+                        '''.format(arg.component_event,
                                    arg.component_id,
-                                   arg.component_property,
+                                   arg.component_event,
                                    arg.component_id,
-                                   component._prop_names).replace('    ', ''))
+                                   component.available_events
+                                   ).replace('    ', ''))
 
         if len(state) > 0 and len(events) == 0 and len(inputs) == 0:
             raise exceptions.MissingEventsException('''
diff --git a/dash/exceptions.py b/dash/exceptions.py
index a4035e6a..8c0381ae 100644
--- a/dash/exceptions.py
+++ b/dash/exceptions.py
@@ -14,6 +14,10 @@ class NonExistantPropException(CallbackException):
     pass
 
 
+class NonExistantEventException(CallbackException):
+    pass
+
+
 class UndefinedLayoutException(CallbackException):
     pass
 
@@ -21,8 +25,14 @@ class UndefinedLayoutException(CallbackException):
 class IncorrectTypeException(CallbackException):
     pass
 
+
 class MissingEventsException(CallbackException):
     pass
 
+
 class LayoutIsNotDefined(CallbackException):
     pass
+
+
+class IDsCantContainPeriods(CallbackException):
+    pass
diff --git a/tests/test_react.py b/tests/test_react.py
index 884ba1a8..eec37182 100644
--- a/tests/test_react.py
+++ b/tests/test_react.py
@@ -10,6 +10,7 @@ import warnings
 from dash.dependencies import Event, Input, Output, State
 from dash import exceptions
 
+
 def generate_css(css_links):
     return '\n'.join([
         '<link rel="stylesheet" href="{}"></link>'.format(l)
@@ -27,7 +28,6 @@ def generate_js(js_links):
 class IntegrationTest(unittest.TestCase):
     def setUp(self):
         self.app = dash.Dash('my-app')
-
         self.app.layout = Div([
             Div('Hello World', id='header', style={'color': 'red'}),
             dcc.Input(id='id1', placeholder='Type a value'),
@@ -416,7 +416,6 @@ class IntegrationTest(unittest.TestCase):
                     "/component-suites/dash_renderer/bundle.js?v=0.2.9"
                 ])
             )
-            print(len(w))
             assert len(w) == 1
 
         self.app.scripts.config.serve_locally = False
@@ -437,8 +436,11 @@ class IntegrationTest(unittest.TestCase):
 class TestCallbacks(unittest.TestCase):
     def test_callback_registry(self):
         app = dash.Dash('')
+        input = dcc.Input(id='input')
+        input._events = ['blur', 'change']
+
         app.layout = Div([
-            dcc.Input(id='input'),
+            input,
             Div(id='output')
         ], id='body')
 
@@ -512,7 +514,35 @@ class TestCallbacks(unittest.TestCase):
         )
 
     def test_exception_event_not_in_component(self):
-        pass
+        app = dash.Dash('')
+        app.layout = Div([
+            Div(id='button'),
+            Div(id='output'),
+            dcc.Graph(id='graph')
+        ], id='body')
+
+        for id in ['output', 'body']:
+            self.assertRaises(
+                exceptions.NonExistantEventException,
+                app.callback,
+                Output('output', 'content'),
+                events=[Event(id, 'style')]
+            )
+            app.callback(
+                Output('output', 'content'),
+                events=[Event(id, 'click')]
+            )
+
+        self.assertRaises(
+            exceptions.NonExistantEventException,
+            app.callback,
+            Output('output', 'content'),
+            events=[Event('graph', 'zoom')]
+        )
+        app.callback(
+            Output('output', 'content'),
+            events=[Event('graph', 'click')]
+        )
 
     def test_exception_component_is_not_right_type(self):
         app = dash.Dash('')
