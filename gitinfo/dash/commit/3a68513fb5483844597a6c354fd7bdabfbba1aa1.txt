commit 3a68513fb5483844597a6c354fd7bdabfbba1aa1
Author: alexcjohnson <alex@plot.ly>
Date:   Tue Jul 30 00:11:07 2019 -0400

    more abs positioning options, and abs debugger urls too!

diff --git a/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.css b/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.css
index fb98faa5..02f1c10e 100644
--- a/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.css
+++ b/dash-renderer/src/components/error/CallbackGraph/CallbackGraphContainer.css
@@ -1,3 +1,7 @@
+.dash-absolute-debug .dash-callback-dag--container {
+    position: absolute;
+}
+
 .dash-callback-dag--container {
     border-radius: 4px;
     position: fixed;
diff --git a/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js b/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js
index b1486036..16ab4058 100644
--- a/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js
+++ b/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js
@@ -1,8 +1,10 @@
+import {connect} from 'react-redux';
 import './FrontEndError.css';
 import {Component} from 'react';
 import CollapseIcon from '../icons/CollapseIcon.svg';
 import PropTypes from 'prop-types';
 import '../Percy.css';
+import {urlBase} from '../../../utils';
 
 import werkzeugCss from '../werkzeug.css.txt';
 
@@ -75,7 +77,7 @@ class FrontEndError extends Component {
 }
 
 /* eslint-disable no-inline-comments, no-magic-numbers */
-function ErrorContent({error}) {
+function UnconnectedErrorContent({error, base}) {
     return (
         <div className="error-container">
             {/*
@@ -124,6 +126,9 @@ function ErrorContent({error}) {
                             srcDoc={error.html.replace(
                                 '</head>',
                                 `<style type="text/css">${werkzeugCss}</style></head>`
+                            ).replace(
+                                '="?__debugger__',
+                                `="${base}?__debugger__`
                             )}
                             style={{
                                 /*
@@ -155,16 +160,19 @@ const errorPropTypes = PropTypes.shape({
     html: PropTypes.string,
 });
 
-ErrorContent.propTypes = {
+UnconnectedErrorContent.propTypes = {
     error: errorPropTypes,
-    type: PropTypes.oneOf(['backEnd', 'frontEnd']),
+    base: PropTypes.string,
 };
 
+const ErrorContent = connect(
+    state => ({base: urlBase(state.config)})
+)(UnconnectedErrorContent);
+
 FrontEndError.propTypes = {
     e: PropTypes.shape({
         myUID: PropTypes.string,
         timestamp: PropTypes.object,
-        type: PropTypes.oneOf(['backEnd', 'frontEnd']),
         error: errorPropTypes,
     }),
     resolve: PropTypes.func,
diff --git a/dash-renderer/src/components/error/GlobalErrorOverlay.css b/dash-renderer/src/components/error/GlobalErrorOverlay.css
index 318efa88..ed6b8f0f 100644
--- a/dash-renderer/src/components/error/GlobalErrorOverlay.css
+++ b/dash-renderer/src/components/error/GlobalErrorOverlay.css
@@ -7,6 +7,10 @@
     font-variant-ligatures: common-ligatures;
 }
 
+.dash-absolute-debug .dash-error-card {
+    position: absolute;
+}
+
 .dash-error-card {
     box-sizing: border-box;
     background: #ffffff;
