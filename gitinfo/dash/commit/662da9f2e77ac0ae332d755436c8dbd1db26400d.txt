commit 662da9f2e77ac0ae332d755436c8dbd1db26400d
Author: chriddyp <chris@plot.ly>
Date:   Tue Apr 26 17:40:16 2016 -0400

    :wrench: keep the request queue in the store
    
    (weâ€™ll need this in a subsequent commit)

diff --git a/renderer/src/actions/index.js b/renderer/src/actions/index.js
index 250d50ab..ae776146 100644
--- a/renderer/src/actions/index.js
+++ b/renderer/src/actions/index.js
@@ -3,9 +3,12 @@ import { createAction } from 'redux-actions';
 export const ACTIONS = (action) => {
     const actionList = {
         ON_PROP_CHANGE: 'ON_PROP_CHANGE'
+        SET_REQUEST_QUEUE: 'SET_REQUEST_QUEUE'
     };
     if (actionList[action]) return actionList[action];
     else throw new Error(`${action} is not defined.`)
 };
 
 export const updateProps = createAction(ACTIONS('ON_PROP_CHANGE'));
+export const setRequestQueue = createAction(ACTIONS('SET_REQUEST_QUEUE'));
+
diff --git a/renderer/src/reducers/reducer.js b/renderer/src/reducers/reducer.js
index b147e881..fe58301f 100644
--- a/renderer/src/reducers/reducer.js
+++ b/renderer/src/reducers/reducer.js
@@ -3,6 +3,8 @@
 import { combineReducers } from 'redux';
 import layout from './layout';
 import dependencyGraph from './dependencyGraph';
+import paths from './paths';
+import requestQueue from './requestQueue';
 
 const reducer = combineReducers({layout, dependencyGraph, paths, requestQueue});
 
diff --git a/renderer/src/reducers/requestQueue.js b/renderer/src/reducers/requestQueue.js
new file mode 100644
index 00000000..886930e5
--- /dev/null
+++ b/renderer/src/reducers/requestQueue.js
@@ -0,0 +1,15 @@
+const requestQueue = (state = [], action) => {
+    switch (action.type) {
+        case 'SET_REQUEST_QUEUE':
+            if (Array.isArray(action.payload)) {
+                state = action.payload;
+            }
+
+            return state;
+
+        default:
+            return state;
+    }
+}
+
+export default requestQueue;
