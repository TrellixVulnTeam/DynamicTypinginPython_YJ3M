commit 0b1adf2ba0f5a18c31996250c9233e0995bc9857
Author: byron <byron@plot.ly>
Date:   Fri Jun 7 12:09:05 2019 -0400

    :bug: oh forget to migrate this one

diff --git a/tests/integration/callbacks/test_basic_callback.py b/tests/integration/callbacks/test_basic_callback.py
index 9c064b53..91c9635e 100644
--- a/tests/integration/callbacks/test_basic_callback.py
+++ b/tests/integration/callbacks/test_basic_callback.py
@@ -79,73 +79,64 @@ def test_cbsc002_callbacks_generating_children(dash_duo):
 
     assert call_count.value == 1, "called once at initial stage"
 
-    pad_input, pad_div = (
-        BeautifulSoup(
-            dash_duo.driver.find_element_by_css_selector(
-                "#react-entry-point"
-            ).get_attribute("innerHTML"),
-            "lxml",
-        )
-        .select_one("#output > div")
-        .contents
-    )
+    pad_input, pad_div = dash_duo.dash_innerhtml_dom.select_one(
+        "#output > div"
+    ).contents
 
-    dash_duo.assertEqual(pad_input.attrs["value"], "sub input initial value")
-    dash_duo.assertEqual(pad_input.attrs["id"], "sub-input-1")
-    dash_duo.assertEqual(pad_input.name, "input")
+    assert (
+        pad_input.attrs["value"] == "sub input initial value"
+        and pad_input.attrs["id"] == "sub-input-1"
+    )
+    assert pad_input.name == "input"
 
-    dash_duo.assertTrue(
+    assert (
         pad_div.text == pad_input.attrs["value"]
-        and pad_div.get("id") == "sub-output-1",
-        "the sub-output-1 content reflects to sub-input-1 value",
-    )
+        and pad_div.get("id") == "sub-output-1"
+    ), "the sub-output-1 content reflects to sub-input-1 value"
 
     dash_duo.percy_snapshot(name="callback-generating-function-1")
 
-    # the paths should include these new output IDs
-    dash_duo.assertEqual(
-        dash_duo.driver.execute_script("return window.store.getState().paths"),
-        {
-            "input": ["props", "children", 0],
-            "output": ["props", "children", 1],
-            "sub-input-1": [
-                "props",
-                "children",
-                1,
-                "props",
-                "children",
-                "props",
-                "children",
-                0,
-            ],
-            "sub-output-1": [
-                "props",
-                "children",
-                1,
-                "props",
-                "children",
-                "props",
-                "children",
-                1,
-            ],
-        },
-    )
+    assert dash_duo.redux_state_paths == {
+        "input": ["props", "children", 0],
+        "output": ["props", "children", 1],
+        "sub-input-1": [
+            "props",
+            "children",
+            1,
+            "props",
+            "children",
+            "props",
+            "children",
+            0,
+        ],
+        "sub-output-1": [
+            "props",
+            "children",
+            1,
+            "props",
+            "children",
+            "props",
+            "children",
+            1,
+        ],
+    }, "the paths should include these new output IDs"
 
     # editing the input should modify the sub output
-    sub_input = dash_duo.driver.find_element_by_id("sub-input-1")
+    dash_duo.find_element("#sub-input-1").send_keys("deadbeef")
 
-    sub_input.send_keys("deadbeef")
+    assert (
+        dash_duo.find_element("#sub-output-1").text
+        == pad_input.attrs["value"] + "deadbeef"
+    ), "deadbeef is added"
+
+    # the total updates is initial one + the text input changes
     dash_duo.wait_for_text_to_equal(
         "#sub-output-1", pad_input.attrs["value"] + "deadbeef"
     )
 
-    dash_duo.assertEqual(
-        call_count.value,
-        len("deadbeef") + 1,
-        "the total updates is initial one + the text input changes",
-    )
+    rqs = dash_duo.redux_state_rqs
+    assert rqs, "request queue is not empty"
+    assert all((rq["status"] == 200 and not rq["rejected"] for rq in rqs))
 
-    dash_duo.request_queue_assertions(call_count.value + 1)
     dash_duo.percy_snapshot(name="callback-generating-function-2")
-
-    dash_duo.assertTrue(dash_duo.is_console_clean())
+    assert dash_duo.get_logs() == [], "console is clean"
