commit eb4f55fd2eac545184f0b1e9bda5fee45b255633
Author: alexcjohnson <alex@plot.ly>
Date:   Wed Jan 16 15:57:11 2019 -0500

    fix trailing whitespace in component generation

diff --git a/dash/development/_py_components_generation.py b/dash/development/_py_components_generation.py
index 58c821ed..60b39d6d 100644
--- a/dash/development/_py_components_generation.py
+++ b/dash/development/_py_components_generation.py
@@ -501,7 +501,7 @@ def map_js_to_py_types_prop_types(type_object):
             ', '.join(
                 "'{}'".format(t)
                 for t in list(type_object['value'].keys())),
-            'Those keys have the following types: \n{}'.format(
+            'Those keys have the following types:\n{}'.format(
                 '\n'.join(create_prop_docstring(
                     prop_name=prop_name,
                     type_object=prop,
@@ -544,7 +544,7 @@ def map_js_to_py_types_flow_types(type_object):
         signature=lambda indent_num: 'dict containing keys {}.\n{}'.format(
             ', '.join("'{}'".format(d['key'])
                       for d in type_object['signature']['properties']),
-            '{}Those keys have the following types: \n{}'.format(
+            '{}Those keys have the following types:\n{}'.format(
                 '  ' * indent_num,
                 '\n'.join(
                     create_prop_docstring(
diff --git a/tests/development/test_base_component.py b/tests/development/test_base_component.py
index 86e288f8..79657be8 100644
--- a/tests/development/test_base_component.py
+++ b/tests/development/test_base_component.py
@@ -7,9 +7,7 @@ import shutil
 import unittest
 import plotly
 
-from dash.development.base_component import (
-    Component,
-    _explicitize_args)
+from dash.development.base_component import Component
 from dash.development._py_components_generation import generate_class_string, generate_class_file, generate_class, \
     create_docstring, prohibit_events, js_to_py_type
 
@@ -547,17 +545,23 @@ class TestGenerateClassFile(unittest.TestCase):
     def tearDown(self):
         shutil.rmtree('TableComponents')
 
+    def assert_no_trailing_spaces(self, s):
+        for line in s.split('\n'):
+            self.assertEqual(line, line.rstrip())
+
     def test_class_string(self):
         self.assertEqual(
             self.expected_class_string,
             self.component_class_string
         )
+        self.assert_no_trailing_spaces(self.component_class_string)
 
     def test_class_file(self):
         self.assertEqual(
             self.expected_class_string,
             self.written_class_string
         )
+        self.assert_no_trailing_spaces(self.written_class_string)
 
 
 class TestGenerateClass(unittest.TestCase):
@@ -793,11 +797,11 @@ class TestMetaDataConversions(unittest.TestCase):
             ['optionalObjectWithShapeAndNestedDescription', '\n'.join([
 
                 "dict containing keys 'color', 'fontSize', 'figure'.",
-                "Those keys have the following types: ",
+                "Those keys have the following types:",
                 "  - color (string; optional)",
                 "  - fontSize (number; optional)",
                 "  - figure (optional): Figure is a plotly graph object. figure has the following type: dict containing keys 'data', 'layout'.",  # noqa: E501
-                "Those keys have the following types: ",
+                "Those keys have the following types:",
                 "  - data (list; optional): data is a collection of traces",
                 "  - layout (dict; optional): layout describes the rest of the figure"  # noqa: E501
 
@@ -869,7 +873,7 @@ def assert_docstring(assertEqual, docstring):
             "following type: dict containing keys "
             "'color', 'fontSize', 'figure'.",
 
-            "Those keys have the following types: ",
+            "Those keys have the following types:",
             "  - color (string; optional)",
             "  - fontSize (number; optional)",
 
@@ -877,7 +881,7 @@ def assert_docstring(assertEqual, docstring):
             "figure has the following type: dict containing "
             "keys 'data', 'layout'.",
 
-            "Those keys have the following types: ",
+            "Those keys have the following types:",
             "  - data (list; optional): data is a collection of traces",
 
             "  - layout (dict; optional): layout describes "
@@ -927,7 +931,7 @@ class TestFlowMetaDataConversions(unittest.TestCase):
             ['optionalSignature(shape)', '\n'.join([
 
                 "dict containing keys 'checked', 'children', 'customData', 'disabled', 'label', 'primaryText', 'secondaryText', 'style', 'value'.",
-                "Those keys have the following types: ",
+                "Those keys have the following types:",
                 "- checked (boolean; optional)",
                 "- children (a list of or a singular dash component, string or number; optional)",
                 "- customData (bool | number | str | dict | list; required): A test description",
@@ -943,9 +947,9 @@ class TestFlowMetaDataConversions(unittest.TestCase):
             ['requiredNested', '\n'.join([
 
                 "dict containing keys 'customData', 'value'.",
-                "Those keys have the following types: ",
+                "Those keys have the following types:",
                 "- customData (required): . customData has the following type: dict containing keys 'checked', 'children', 'customData', 'disabled', 'label', 'primaryText', 'secondaryText', 'style', 'value'.",
-                "  Those keys have the following types: ",
+                "  Those keys have the following types:",
                 "  - checked (boolean; optional)",
                 "  - children (a list of or a singular dash component, string or number; optional)",
                 "  - customData (bool | number | str | dict | list; required)",
@@ -1006,7 +1010,7 @@ def assert_flow_docstring(assertEqual, docstring):
             "'children', 'customData', 'disabled', 'label', 'primaryText', 'secondaryText', "
             "'style', 'value'.",
 
-            "  Those keys have the following types: ",
+            "  Those keys have the following types:",
             "  - checked (boolean; optional)",
             "  - children (a list of or a singular dash component, string or number; optional)",
             "  - customData (bool | number | str | dict | list; required): A test description",
@@ -1020,13 +1024,13 @@ def assert_flow_docstring(assertEqual, docstring):
             "- requiredNested (required): . requiredNested has the following type: dict containing "
             "keys 'customData', 'value'.",
 
-            "  Those keys have the following types: ",
+            "  Those keys have the following types:",
 
             "  - customData (required): . customData has the following type: dict containing "
             "keys 'checked', 'children', 'customData', 'disabled', 'label', 'primaryText', "
             "'secondaryText', 'style', 'value'.",
 
-            "    Those keys have the following types: ",
+            "    Those keys have the following types:",
             "    - checked (boolean; optional)",
             "    - children (a list of or a singular dash component, string or number; optional)",
             "    - customData (bool | number | str | dict | list; required)",
diff --git a/tests/test_integration.py b/tests/test_integration.py
index 2d9be799..c68dba75 100644
--- a/tests/test_integration.py
+++ b/tests/test_integration.py
@@ -11,7 +11,7 @@ import dash_flow_example
 
 import dash
 
-from dash.dependencies import Input, Output, State
+from dash.dependencies import Input, Output
 from dash.exceptions import PreventUpdate
 from .IntegrationTests import IntegrationTests
 from .utils import assert_clean_console, invincible, wait_for
@@ -105,7 +105,7 @@ class Tests(IntegrationTests):
             return data
 
         self.startServer(app)
-        output1 = self.wait_for_text_to_equal('#output-1', 'initial value')
+        self.wait_for_text_to_equal('#output-1', 'initial value')
         self.percy_snapshot(name='wildcard-callback-1')
 
         input1 = self.wait_for_element_by_id('input')
@@ -113,7 +113,7 @@ class Tests(IntegrationTests):
 
         input1.send_keys('hello world')
 
-        output1 = self.wait_for_text_to_equal('#output-1', 'hello world')
+        self.wait_for_text_to_equal('#output-1', 'hello world')
         self.percy_snapshot(name='wildcard-callback-2')
 
         self.assertEqual(
