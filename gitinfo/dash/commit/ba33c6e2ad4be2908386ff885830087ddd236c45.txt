commit ba33c6e2ad4be2908386ff885830087ddd236c45
Author: Ryan Marren <rymarr@tuta.io>
Date:   Fri Jun 22 08:31:35 2018 -0400

    Minor formatting updates.

diff --git a/dash/dash.py b/dash/dash.py
index b3091d27..92871c07 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -480,7 +480,7 @@ class Dash(object):
 
         def _raise_invalid(bad_val, outer_val, bad_type, path, index=None,
                            toplevel=False):
-            outer_id = "id={:s}".format(outer_val.id) \
+            outer_id = "(id={:s})".format(outer_val.id) \
                         if getattr(outer_val, 'id', False) else ''
             outer_type = type(outer_val).__name__
             raise exceptions.ReturnValueNotJSONSerializable('''
@@ -508,9 +508,10 @@ class Dash(object):
                 ),
                 location=(
                     "\n" +
-                    ("[{:d}] {:s} {:s}\n".format(index, outer_type, outer_id)
+                    ("[{:d}] {:s} {:s}".format(index, outer_type, outer_id)
                      if index is not None
-                     else (outer_type + ' ' + outer_id + "\n")) + path + "\n"
+                     else ('-   ' + outer_type + ' ' + outer_id))
+                    + "\n" + path + "\n"
                 ) if not toplevel else '',
                 bad_val=bad_val).replace('    ', ''))
 
@@ -544,7 +545,7 @@ class Dash(object):
                                 bad_val=child,
                                 outer_val=val,
                                 bad_type=type(child).__name__,
-                                path=p + type(child).__name__,
+                                path=p + "\n" + type(child).__name__,
                                 index=index
                             )
 
diff --git a/dash/development/base_component.py b/dash/development/base_component.py
index 36da23a5..92941afe 100644
--- a/dash/development/base_component.py
+++ b/dash/development/base_component.py
@@ -158,15 +158,15 @@ class Component(collections.MutableMapping):
         """Yield each item with its path in the tree."""
         children = getattr(self, 'children', None)
         children_type = type(children).__name__
-        children_id = "id={:s}".format(children.id) \
+        children_id = "(id={:s})".format(children.id) \
                       if getattr(children, 'id', False) else ''
         children_string = children_type + ' ' + children_id
 
         # children is just a component
         if isinstance(children, Component):
-            yield children_string + "\n", children
+            yield children_string, children
             for p, t in children.traverse_with_paths():
-                yield "\n".join([children_string, p]) + "\n", t
+                yield "\n".join([children_string, p]), t
 
         # children is a list of components
         elif isinstance(children, collections.MutableSequence):
@@ -174,13 +174,13 @@ class Component(collections.MutableMapping):
                 list_path = "[{:d}] {:s} {}".format(
                     idx,
                     type(i).__name__,
-                    "id={:s}".format(i.id) if getattr(i, 'id', False) else ''
+                    "(id={:s})".format(i.id) if getattr(i, 'id', False) else ''
                 )
-                yield list_path + "\n", i
+                yield list_path, i
 
                 if isinstance(i, Component):
                     for p, t in i.traverse_with_paths():
-                        yield "\n".join([list_path, p]) + "\n", t
+                        yield "\n".join([list_path, p]), t
 
     def __iter__(self):
         """Yield IDs in the tree of children."""
