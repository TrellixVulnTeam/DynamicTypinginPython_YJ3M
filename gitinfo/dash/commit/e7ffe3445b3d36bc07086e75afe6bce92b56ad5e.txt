commit e7ffe3445b3d36bc07086e75afe6bce92b56ad5e
Author: Chris P <christopher.parmer@gmail.com>
Date:   Thu Apr 9 23:44:32 2015 -0400

    more dropdowns!

diff --git a/gapminder/DataBackend.py b/gapminder/DataBackend.py
index bf9b1c95..8c926728 100644
--- a/gapminder/DataBackend.py
+++ b/gapminder/DataBackend.py
@@ -8,7 +8,9 @@ class Graph():
                               'examples/gapminder/data/'
                               'gapminderDataFiveYear.txt', sep='\t')
         self.country = 'United States'
-        self.yaxis = 'pop'
+        self.xaxis = 'gdpPercap'
+        self.yaxis = 'lifeExp'
+        self.size = 'pop'
 
     def on_page_load(self):
         pass
@@ -22,25 +24,29 @@ class Graph():
         return messages
 
     def replot(self, app_state):
-        if 'click' in app_state or 'select' in app_state:
-            return self.on_click(app_state)
-        else:
-            return self.on_slide(app_state)
+        self.yaxis = app_state['yaxis']
+        self.xaxis = app_state['xaxis']
+        self.size = app_state['size']
+
+        if 'click' in app_state:
+            curveNumber = app_state['click']['points'][0]['curveNumber']
+            pointNumber = app_state['click']['points'][0]['pointNumber']
+            text = self.on_slide(app_state)[0]['data'][curveNumber]['text']
+            self.country = text.get_value(text.index[pointNumber])
 
-    def on_slide(self, app_state):
         dfi = self.df[(self.df['year'] == app_state['slider']) &
                       (self.df['country'] != 'Kuwait')]
         traces = []
         for c in dfi['continent'].unique():
             dfc = dfi[dfi['continent'] == c]
             traces.append({
-                'x': dfc['gdpPercap'],
-                'y': dfc['lifeExp'],
+                'x': dfc[self.xaxis],
+                'y': dfc[self.yaxis],
                 'text': dfc['country'],
                 'mode': 'markers',
                 'marker': {
-                    'size': dfc['pop'],
-                    'sizeref': max(self.df['pop'])/7500,
+                    'size': dfc[self.size],
+                    'sizeref': max(self.df[self.size])/7500,
                     'sizemode': 'area'
                 },
                 'name': c
@@ -54,15 +60,15 @@ class Graph():
                     'type': 'log',
                     'autorange': False,
                     'range': np.log10([(
-                        min(self.df['gdpPercap'])*0.5),
-                        max(self.df['gdpPercap'])*1.1])
+                        min(self.df[self.xaxis])*0.5),
+                        max(self.df[self.xaxis])*1.1])
                 },
                 'yaxis': {
                     'title': 'Life Expectancy',
                     'autorange': False,
                     'range': [
-                        min(self.df['lifeExp'])*0.8,
-                        max(self.df['lifeExp'])*1.2]
+                        min(self.df[self.yaxis])*0.8,
+                        max(self.df[self.yaxis])*1.2]
                 },
                 'hovermode': 'closest',
                 'annotations': [
@@ -91,17 +97,6 @@ class Graph():
             }
         ]
 
-        return messages
-
-    def on_click(self, app_state):
-        if 'click' in app_state:
-            curveNumber = app_state['click']['points'][0]['curveNumber']
-            pointNumber = app_state['click']['points'][0]['pointNumber']
-            text = self.on_slide(app_state)[0]['data'][curveNumber]['text']
-            self.country = text.get_value(text.index[pointNumber])
-        else:
-            self.yaxis = app_state['yaxis']
-
         dfi = self.df[self.df['country'] == self.country]
         labels = {
             'pop': 'Population',
@@ -136,13 +131,13 @@ class Graph():
                 ]
             }
         }
-        messages = [
+        messages.extend([
             {
                 'id': 'line',
                 'task': 'newPlot',
                 'data': fig['data'],
                 'layout': fig['layout']
             }
-        ]
+        ])
 
         return messages
diff --git a/gapminder/templates/index.html b/gapminder/templates/index.html
index 4f3739ad..a9b6d072 100644
--- a/gapminder/templates/index.html
+++ b/gapminder/templates/index.html
@@ -60,7 +60,7 @@
                             margin-left: 20px;
                             margin-top: 28px;
                             display: inline-block;">
-                    Drilling Down with Sliders, Click Events, and Dropdowns
+                    Drilling Down with Sliders, Click Events, and Dropdown
                 </div>
                 <div style="height: 100%;
                             display: inline-block;
@@ -93,11 +93,24 @@
                     </iframe>
                     <form class="pure-form" style="float: right;">
                         <fieldset>
+                            <select id="xaxis">
+                                <option value="pop">Population</option>
+                                <option value="lifeExp">Life Expectancy</option>
+                                <option value="gdpPercap">GDP per Capita</option>
+                            </select>
+
                             <select id="yaxis">
                                 <option value="pop">Population</option>
                                 <option value="lifeExp">Life Expectancy</option>
                                 <option value="gdpPercap">GDP per Capita</option>
                             </select>
+
+                            <select id="size">
+                                <option value="pop">Population</option>
+                                <option value="lifeExp">Life Expectancy</option>
+                                <option value="gdpPercap">GDP per Capita</option>
+                            </select>
+
                         </fieldset>
                     </form>
                 </div>
@@ -197,6 +210,8 @@
 
                 payload.slider = $('#slider').slider("value");
                 payload.yaxis = $('#yaxis option:selected').val();
+                payload.xaxis = $('#xaxis option:selected').val();
+                payload.size = $('#size option:selected').val();
 
                 socket.emit('replot', payload)
             }
@@ -204,6 +219,12 @@
             $('#yaxis').change(function(){
                 sendState({}, {'select': true})
             });
+            $('#xaxis').change(function(){
+                sendState({}, {'select': true})
+            });
+            $('#size').change(function(){
+                sendState({}, {'select': true})
+            });
         });
 
     </script>
