commit c19494d301b8825a28560a969985eed614946ad5
Author: chriddyp <chris@plot.ly>
Date:   Wed Feb 15 21:15:40 2017 -0500

    crudely fix initialization race condition

diff --git a/src/actions/index.js b/src/actions/index.js
index dc79ee03..e242273c 100644
--- a/src/actions/index.js
+++ b/src/actions/index.js
@@ -45,23 +45,24 @@ export const initialize = function() {
             // TODO - will need to recompute paths when the layout changes
             // from request responses
             dispatch(computePaths(layout));
-        }));
-        fetch('/dependencies', {method: 'GET'})
-        .then(res => res.json().then(dependencies => {
-            dispatch(computeGraphs(dependencies));
-            /*
-             * Fire an initial propChange event for each of the controllers
-             * so that the observer leaves can update
-             */
-            // TODO - Remove this setTimeout
-            setTimeout(function(){
-                const {graphs} = getState();
-                const {EventGraph} = graphs;
-                EventGraph.overallOrder().forEach(nodeId => {
-                    dispatch(notifyObservers({event: 'propChange', id: nodeId}));
-                });
-            }, 0)
-        }))
+        })).then(function() {
+            fetch('/dependencies', {method: 'GET'})
+            .then(res => res.json().then(dependencies => {
+                dispatch(computeGraphs(dependencies));
+                /*
+                 * Fire an initial propChange event for each of the controllers
+                 * so that the observer leaves can update
+                 */
+                // TODO - Remove this setTimeout
+                setTimeout(function(){
+                    const {graphs} = getState();
+                    const {EventGraph} = graphs;
+                    EventGraph.overallOrder().forEach(nodeId => {
+                        dispatch(notifyObservers({event: 'propChange', id: nodeId}));
+                    });
+                }, 50)
+            }));
+        });
     }
 }
 
