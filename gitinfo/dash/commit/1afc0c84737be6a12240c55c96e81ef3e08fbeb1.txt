commit 1afc0c84737be6a12240c55c96e81ef3e08fbeb1
Author: alexcjohnson <alex@plot.ly>
Date:   Wed May 15 17:48:43 2019 -0400

    serve_locally by default

diff --git a/dash/dash.py b/dash/dash.py
index cf6ee38e..8a2c9a1e 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -1376,9 +1376,12 @@ class Dash(object):
             self._watch_thread.daemon = True
             self._watch_thread.start()
 
-        if debug and self._dev_tools.serve_dev_bundles:
+        if (debug and self._dev_tools.serve_dev_bundles and
+                not self.scripts.config.serve_locally):
             # Dev bundles only works locally.
             self.scripts.config.serve_locally = True
+            print('WARNING: dev bundles requested with serve_locally=False.\n'
+                  'This is not supported, switching to serve_locally=True')
 
         return debug
 
diff --git a/dash/resources.py b/dash/resources.py
index 5ca7b1f7..87cd8b3a 100644
--- a/dash/resources.py
+++ b/dash/resources.py
@@ -66,10 +66,17 @@ class Resources:
         return self._filter_resources(all_resources, dev_bundles)
 
 
+# pylint: disable=too-few-public-methods
+class _Config:
+    def __init__(self, infer_from_layout, serve_locally):
+        self.infer_from_layout = infer_from_layout
+        self.serve_locally = serve_locally
+
+
 class Css:
     def __init__(self, layout=None):
         self._resources = Resources('_css_dist', layout)
-        self._resources.config = self.config
+        self._resources.config = self.config = _Config(True, True)
 
     def _update_layout(self, layout):
         self._resources.layout = layout
@@ -80,16 +87,11 @@ class Css:
     def get_all_css(self):
         return self._resources.get_all_resources()
 
-    # pylint: disable=no-init, too-few-public-methods
-    class config:
-        infer_from_layout = True
-        serve_locally = False
-
 
 class Scripts:
     def __init__(self, layout=None):
         self._resources = Resources('_js_dist', layout)
-        self._resources.config = self.config
+        self._resources.config = self.config = _Config(True, True)
 
     def _update_layout(self, layout):
         self._resources.layout = layout
@@ -99,8 +101,3 @@ class Scripts:
 
     def get_all_scripts(self, dev_bundles=False):
         return self._resources.get_all_resources(dev_bundles)
-
-    # pylint: disable=no-init, too-few-public-methods
-    class config:
-        infer_from_layout = True
-        serve_locally = False
diff --git a/tests/IntegrationTests.py b/tests/IntegrationTests.py
index 13a69f1f..be7c4bb9 100644
--- a/tests/IntegrationTests.py
+++ b/tests/IntegrationTests.py
@@ -69,10 +69,9 @@ class IntegrationTests(unittest.TestCase):
             s.server_process.terminate()
             time.sleep(2)
 
-    def startServer(s, dash):
+    def startServer(s, app):
         def run():
-            dash.scripts.config.serve_locally = True
-            dash.run_server(
+            app.run_server(
                 port=8050,
                 debug=False,
                 processes=4,
diff --git a/tests/test_integration.py b/tests/test_integration.py
index ab66dd02..a8a7c919 100644
--- a/tests/test_integration.py
+++ b/tests/test_integration.py
@@ -562,7 +562,6 @@ class Tests(IntegrationTests):
 
     def test_multi_output(self):
         app = Dash(__name__)
-        app.scripts.config.serve_locally = True
 
         app.layout = html.Div([
             html.Button('OUTPUT', id='output-btn'),
@@ -663,7 +662,6 @@ class Tests(IntegrationTests):
 
     def test_multi_output_no_update(self):
         app = Dash(__name__)
-        app.scripts.config.serve_locally = True
 
         app.layout = html.Div([
             html.Button('B', 'btn'),
@@ -696,7 +694,6 @@ class Tests(IntegrationTests):
 
     def test_no_update_chains(self):
         app = Dash(__name__)
-        app.scripts.config.serve_locally = True
 
         app.layout = html.Div([
             dcc.Input(id='a_in', value='a'),
diff --git a/tests/test_resources.py b/tests/test_resources.py
index 38b4351f..3b830283 100644
--- a/tests/test_resources.py
+++ b/tests/test_resources.py
@@ -48,6 +48,7 @@ class Tests(unittest.TestCase):
         )
         app.layout = dcc.Markdown()
         app.scripts.config.serve_locally = False
+        app.scripts.config.xxx = 123
 
         with mock.patch('dash.dash.os.stat', return_value=StatMock()):
             resource = app._collect_and_register_resources(
@@ -67,7 +68,9 @@ class Tests(unittest.TestCase):
             assets_ignore='load_after.+.js'
         )
         app.layout = dcc.Markdown()
-        app.scripts.config.serve_locally = True
+
+        self.assertEqual(app.scripts.config.serve_locally, True)
+        self.assertEqual(app.css.config.serve_locally, True)
 
         with mock.patch('dash.dash.os.stat', return_value=StatMock()):
             with mock.patch('dash.dash.importlib.import_module',
