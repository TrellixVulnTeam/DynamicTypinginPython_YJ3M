commit 8aa3f2515cda460483c0da981e6e482212ef147a
Author: Ryan Patrick Kyle <ryan@plot.ly>
Date:   Tue Jan 22 12:27:04 2019 -0500

    :left_right_arrow: added byteify fn to prevent str >> unicode
    
    :bug: modified prop_names
    
    address trailing whitespace
    
    :wrench: flake8 and pylint edits
    
    :shower: pylint edits

diff --git a/dash/development/_r_components_generation.py b/dash/development/_r_components_generation.py
index d3d0512a..485e4f64 100644
--- a/dash/development/_r_components_generation.py
+++ b/dash/development/_r_components_generation.py
@@ -142,7 +142,7 @@ def generate_class_string(name, props, project_shortname, prefix):
         '\'{}\''.format(p)
         for p in prop_keys
         if '*' not in p and
-        p != 'setProps' + ['**kwargs']
+        p not in ['setProps']
     )
 
     # in R, we set parameters with no defaults to NULL
@@ -161,8 +161,7 @@ def generate_class_string(name, props, project_shortname, prefix):
     # Filter props to remove those we don't want to expose
     for item in prop_keys[:]:
         if item.endswith('-*') \
-                or item in r_keywords \
-                or item == 'setProps':
+                or item in r_keywords + ['setProps']:
             prop_keys.remove(item)
 
     default_argtext += ", ".join(
diff --git a/dash/development/component_generator.py b/dash/development/component_generator.py
index 09a0857a..16cb3c09 100644
--- a/dash/development/component_generator.py
+++ b/dash/development/component_generator.py
@@ -65,7 +65,9 @@ def generate_components(components_source, project_shortname,
             file=sys.stderr)
         sys.exit(1)
 
-    metadata = json.loads(out.decode(), object_pairs_hook=OrderedDict)
+    jsondata_unicode = json.loads(out.decode(), object_pairs_hook=OrderedDict)
+    metadata = byteify(jsondata_unicode)
+
     generator_methods = [generate_class_file]
 
     if rprefix:
@@ -89,7 +91,8 @@ def generate_components(components_source, project_shortname,
 
     if rprefix:
         with open('package.json', 'r') as f:
-            pkg_data = json.load(f, object_pairs_hook=OrderedDict)
+            jsondata_unicode = json.load(f, object_pairs_hook=OrderedDict)
+            pkg_data = byteify(jsondata_unicode)
 
         generate_exports(
             project_shortname, components, metadata, pkg_data, prefix
@@ -133,5 +136,16 @@ def cli():
         rprefix=args.r_prefix)
 
 
+def byteify(input_object):
+    if isinstance(input_object, dict):
+        return {byteify(key): byteify(value)
+                for key, value in input_object.iteritems()}
+    elif isinstance(input_object, list):
+        return [byteify(element) for element in input_object]
+    elif isinstance(input_object, unicode):
+        return input_object.encode('utf-8')
+    return input_object
+
+
 if __name__ == '__main__':
     cli()
