commit 8bb8312a6f7f940da5b2701d82d0556baf65fb6a
Author: byron <byron@plot.ly>
Date:   Thu Jun 6 01:37:25 2019 -0400

    :alien: add and improve APIs

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index 7435bae9..cf192a07 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -19,7 +19,7 @@ from selenium.common.exceptions import (
     NoSuchElementException,
 )
 
-from dash.testing.wait import text_to_equal
+from dash.testing.wait import text_to_equal, style_to_equal
 from dash.testing.locators import DashLocatorsMixin
 from dash.testing.errors import DashAppLoadingError
 
@@ -102,7 +102,7 @@ class Browser(DashLocatorsMixin):
         logger.debug(
             "method, timeout, poll => %s %s %s",
             method,
-            _wait.timeout,  # pylint: disable=protected-access
+            _wait._timeout,  # pylint: disable=protected-access
             _wait._poll,  # pylint: disable=protected-access
         )
 
@@ -120,6 +120,16 @@ class Browser(DashLocatorsMixin):
             "cannot find_element using the css selector",
         )
 
+    def wait_for_style_to_equal(self, selector, style, val, timeout=None):
+        return self._wait_for(
+            method=style_to_equal,
+            args=(selector, style, val),
+            timeout=timeout,
+            msg="style val => {} {} not found within {}s".format(
+                style, val, timeout
+            ),
+        )
+
     def wait_for_text_to_equal(self, selector, text, timeout=None):
         return self._wait_for(
             method=text_to_equal,
@@ -133,7 +143,7 @@ class Browser(DashLocatorsMixin):
         self.driver.get(self.server_url)
         try:
             self.wait_for_element_by_css_selector(
-                "#react-entry-point", timeout=timeout
+                self.dash_entry_locator, timeout=timeout
             )
         except TimeoutException:
             logger.exception(
@@ -253,3 +263,15 @@ class Browser(DashLocatorsMixin):
         """
         self._url = value
         self.wait_for_page()
+
+    @property
+    def redux_state_paths(self):
+        return self.driver.execute_script(
+            "return window.store.getState().paths"
+        )
+
+    @property
+    def redux_state_rqs(self):
+        return self.driver.execute_script(
+            "return window.store.getState().requestQueue"
+        )
diff --git a/dash/testing/locators.py b/dash/testing/locators.py
index 56b9ed5a..177d188f 100644
--- a/dash/testing/locators.py
+++ b/dash/testing/locators.py
@@ -1,8 +1,9 @@
 # pylint: disable=too-few-public-methods
 class DashLocatorsMixin(object):
-    def dev_tools_error_counts(self):
-        return int(
-            self.driver.find_element_by_css_selector(
-                ".test-devtools-error-count"
-            ).text
-        )
+    @property
+    def devtools_error_count_locator(self):
+        return ".test-devtools-error-count"
+
+    @property
+    def dash_entry_locator(self):
+        return "#react-entry-point"
diff --git a/dash/testing/wait.py b/dash/testing/wait.py
index 808671e6..5d62d93c 100644
--- a/dash/testing/wait.py
+++ b/dash/testing/wait.py
@@ -17,7 +17,7 @@ def until(
 ):  # noqa: C0330
     res = None
     logger.debug(
-        "start wait.until with %s, timeout[%s], poll[%s]",
+        "start wait.until with method, timeout, poll => %s %s %s",
         wait_cond,
         timeout,
         poll,
@@ -38,7 +38,7 @@ def until_not(
 ):  # noqa: C0330
     res = True
     logger.debug(
-        "start wait.until with %s, timeout[%s], poll[%s]",
+        "start wait.until_not method, timeout, poll => %s %s %s",
         wait_cond,
         timeout,
         poll,
@@ -72,3 +72,20 @@ class text_to_equal(object):
         except WebDriverException:
             logger.exception("text_to_equal encountered an exception")
             return False
+
+
+class style_to_equal(object):
+    def __init__(self, selector, style, val):
+        self.selector = selector
+        self.style = style
+        self.val = val
+
+    def __call__(self, driver):
+        try:
+            elem = driver.find_element_by_css_selector(self.selector)
+            val = elem.value_of_css_property(self.style)
+            logger.debug("style to equal {%s} => expected %s", val, self.val)
+            return val == self.val
+        except WebDriverException:
+            logger.exception("style_to_equal encountered an exception")
+            return False
