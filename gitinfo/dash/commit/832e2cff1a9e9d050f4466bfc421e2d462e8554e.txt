commit 832e2cff1a9e9d050f4466bfc421e2d462e8554e
Author: alexcjohnson <alex@plot.ly>
Date:   Mon Dec 2 14:24:13 2019 -0500

    :hocho: uniqid

diff --git a/dash-renderer/package.json b/dash-renderer/package.json
index 1478d7e8..faf11441 100644
--- a/dash-renderer/package.json
+++ b/dash-renderer/package.json
@@ -32,7 +32,6 @@
     "redux": "^3.4.0",
     "redux-actions": "^0.9.1",
     "redux-thunk": "^2.0.1",
-    "uniqid": "^5.0.3",
     "viz.js": "1.8.0"
   },
   "devDependencies": {
diff --git a/dash-renderer/src/components/error/ComponentErrorBoundary.react.js b/dash-renderer/src/components/error/ComponentErrorBoundary.react.js
index 4de5e6bb..6b52be55 100644
--- a/dash-renderer/src/components/error/ComponentErrorBoundary.react.js
+++ b/dash-renderer/src/components/error/ComponentErrorBoundary.react.js
@@ -2,7 +2,6 @@ import {connect} from 'react-redux';
 import {Component} from 'react';
 import PropTypes from 'prop-types';
 import Radium from 'radium';
-import uniqid from 'uniqid';
 import {onError, revert} from '../../actions';
 
 class UnconnectedComponentErrorBoundary extends Component {
@@ -10,7 +9,6 @@ class UnconnectedComponentErrorBoundary extends Component {
         super(props);
         this.state = {
             myID: props.componentId,
-            myUID: uniqid(),
             oldChildren: null,
             hasError: false,
         };
@@ -24,7 +22,6 @@ class UnconnectedComponentErrorBoundary extends Component {
         const {dispatch} = this.props;
         dispatch(
             onError({
-                myUID: this.state.myUID,
                 myID: this.state.myID,
                 type: 'frontEnd',
                 error,
diff --git a/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js b/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js
index a63ab622..b639686a 100644
--- a/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js
+++ b/dash-renderer/src/components/error/FrontEnd/FrontEndError.react.js
@@ -167,7 +167,6 @@ const ErrorContent = connect(state => ({base: urlBase(state.config)}))(
 
 FrontEndError.propTypes = {
     e: PropTypes.shape({
-        myUID: PropTypes.string,
         timestamp: PropTypes.object,
         error: errorPropTypes,
     }),
diff --git a/dash-renderer/src/persistence.js b/dash-renderer/src/persistence.js
index e1c45787..39bd0118 100644
--- a/dash-renderer/src/persistence.js
+++ b/dash-renderer/src/persistence.js
@@ -66,7 +66,6 @@ import {
     type,
 } from 'ramda';
 import {createAction} from 'redux-actions';
-import uniqid from 'uniqid';
 
 import Registry from './registry';
 
@@ -81,7 +80,6 @@ function err(e) {
     /* eslint-disable no-console */
 
     return createAction('ON_ERROR')({
-        myUID: uniqid(),
         myID: storePrefix,
         type: 'frontEnd',
         error,
diff --git a/dash-renderer/webpack.config.js b/dash-renderer/webpack.config.js
index 2c506f78..b0e6583e 100644
--- a/dash-renderer/webpack.config.js
+++ b/dash-renderer/webpack.config.js
@@ -10,7 +10,7 @@ const defaults = {
         rules: [
             {
                 test: /\.js$/,
-                exclude: /node_modules\/(?!uniqid\/|check-prop-types\/)/,
+                exclude: /node_modules\/(?!check-prop-types\/)/,
                 use: {
                     loader: 'babel-loader',
                 },
