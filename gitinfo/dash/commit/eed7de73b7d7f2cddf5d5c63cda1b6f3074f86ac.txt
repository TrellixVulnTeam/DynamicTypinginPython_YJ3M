commit eed7de73b7d7f2cddf5d5c63cda1b6f3074f86ac
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Sun Jul 31 11:36:50 2016 -0700

    Resolve components from `window[namespace]`

diff --git a/renderer/src/registry.js b/renderer/src/registry.js
index 008c7606..3364f793 100644
--- a/renderer/src/registry.js
+++ b/renderer/src/registry.js
@@ -19,5 +19,22 @@ export default {
     P,
     Pre,
     Span,
-    Strong
+    Strong,
+
+    resolve: (componentName, namespace) => {
+        const ns = window[namespace];
+
+        if (ns) {
+            if (ns[componentName]) {
+                return ns[componentName];
+            }
+
+            throw new Error(`Component ${componentName} not found in
+                ${namespace}`);
+        }
+
+        throw new Error(`${namespace} was not found, make sure to
+            \`pip install ${namespace}\` and pass it as string in the
+            \`component_suites\` kwarg to \`dash.run_server\`.`);
+    }
 };
diff --git a/renderer/src/renderTree.js b/renderer/src/renderTree.js
index 3011cb80..3f5e9e27 100644
--- a/renderer/src/renderTree.js
+++ b/renderer/src/renderTree.js
@@ -34,9 +34,10 @@ export default function render(component, dependencyGraph, path=[]) {
     }
 
     // Create wrapping parent element
+    // TODO Remove all static component references from Registry
     const element = R.has(component.type, Registry)
         ? Registry[component.type]
-        : component.type; // TODO: check against React's registry - this may not be native component either
+        : Registry.resolve(component.type, component.namespace);
 
     const parent = React.createElement(
         element,
