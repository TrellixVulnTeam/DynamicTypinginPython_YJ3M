commit c642b84f5e0fa3cc44296d1e2797350dc1c87648
Author: Philippe Duval <philippe@plot.ly>
Date:   Tue Nov 13 19:38:48 2018 -0500

    :feet: Move generate imports/files methods to base_components.

diff --git a/dash/development/base_component.py b/dash/development/base_component.py
index 10db6e0f..af589f45 100644
--- a/dash/development/base_component.py
+++ b/dash/development/base_component.py
@@ -4,6 +4,8 @@ import os
 import inspect
 import abc
 import sys
+import textwrap
+
 import six
 
 from ._all_keywords import kwlist
@@ -884,3 +886,37 @@ def js_to_py_type(type_object, is_flow_type=False, indent_num=0):
         # All other types
         return js_to_py_types[js_type_name]()
     return ''
+
+
+def generate_imports(project_shortname, components):
+    with open(os.path.join(project_shortname, '_imports_.py'), 'w') as f:
+        f.write(textwrap.dedent(
+            '''
+            {}
+
+            __all__ = [
+            {}
+            ]
+            '''.format(
+                '\n'.join(
+                    'from .{0} import {0}'.format(x) for x in components),
+                ',\n'.join('    "{}"'.format(x) for x in components)
+            )
+        ).lstrip())
+
+
+def generate_classes_files(project_shortname, metadata, *component_generators):
+    components = []
+    for component_path, component_data in metadata.items():
+        component_name = component_path.split('/')[-1].split('.')[0]
+        components.append(component_name)
+
+        for generator in component_generators:
+            generator(
+                component_name,
+                component_data['props'],
+                component_data['description'],
+                project_shortname
+            )
+
+    return components
diff --git a/dash/development/component_generator.py b/dash/development/component_generator.py
index c7072d06..a06cd7ce 100644
--- a/dash/development/component_generator.py
+++ b/dash/development/component_generator.py
@@ -6,8 +6,9 @@ import subprocess
 import shlex
 import os
 
-from .component_loader import generate_imports, generate_classes_files
 from .base_component import generate_class_file
+from .base_component import generate_imports
+from .base_component import generate_classes_files
 
 
 # pylint: disable=too-many-locals
diff --git a/dash/development/component_loader.py b/dash/development/component_loader.py
index a0552302..99a451fd 100644
--- a/dash/development/component_loader.py
+++ b/dash/development/component_loader.py
@@ -1,8 +1,9 @@
 import collections
 import json
 import os
-import textwrap
 
+from .base_component import generate_imports
+from .base_component import generate_classes_files
 from .base_component import generate_class
 from .base_component import generate_class_file
 from .base_component import ComponentRegistry
@@ -18,23 +19,6 @@ def _get_metadata(metadata_path):
     return data
 
 
-def generate_imports(project_shortname, components):
-    with open(os.path.join(project_shortname, '_imports_.py'), 'w') as f:
-        f.write(textwrap.dedent(
-            '''
-            {}
-
-            __all__ = [
-            {}
-            ]
-            '''.format(
-                '\n'.join(
-                    'from .{0} import {0}'.format(x) for x in components),
-                ',\n'.join('    "{}"'.format(x) for x in components)
-            )
-        ).lstrip())
-
-
 def load_components(metadata_path,
                     namespace='default_namespace'):
     """Load React component metadata into a format Dash can parse.
@@ -78,23 +62,6 @@ def load_components(metadata_path,
     return components
 
 
-def generate_classes_files(project_shortname, metadata, *component_generators):
-    components = []
-    for component_path, component_data in metadata.items():
-        component_name = component_path.split('/')[-1].split('.')[0]
-        components.append(component_name)
-
-        for generator in component_generators:
-            generator(
-                component_name,
-                component_data['props'],
-                component_data['description'],
-                project_shortname
-            )
-
-    return components
-
-
 def generate_classes(namespace, metadata_path='lib/metadata.json'):
     """Load React component metadata into a format Dash can parse,
     then create python class files.
