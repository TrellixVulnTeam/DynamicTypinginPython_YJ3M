commit 4a00662356b1c099b3d6f1acac61e03b56bb23cf
Author: Chris P <chris@plot.ly>
Date:   Mon Apr 15 13:59:30 2019 -0400

    improve exception handling and include more tests
    
    previously, wasn’t catching the “expected an array” case as we were
    only splitting on `

diff --git a/src/exceptions.js b/src/exceptions.js
index fd09b114..56f53f8f 100644
--- a/src/exceptions.js
+++ b/src/exceptions.js
@@ -2,6 +2,13 @@ import {contains, has} from 'ramda';
 
 export function propTypeErrorHandler(e, props, type) {
     /*
+     * propType error messages are constructed in
+     * https://github.com/facebook/prop-types/blob/v15.7.2/factoryWithTypeCheckers.js
+     * (Version 15.7.2)
+     *
+     * Parse these exception objects to remove JS source code and improve
+     * the clarity.
+     *
      * If wrong prop type was passed in, e.message looks like:
      *
      * Error: "Failed component prop type: Invalid component prop `animate` of type `number` supplied to `function GraphWithDefaults(props) {
@@ -39,11 +46,11 @@ export function propTypeErrorHandler(e, props, type) {
         }
         errorMessage += ` is required but it was not provided.`;
 
-    } else if(contains('Invalid component prop', e.message)) {
+    } else if(contains(', expected ', e.message)) {
 
         const invalidPropPath = messageParts[1];
         const invalidPropTypeProvided = messageParts[3];
-        const expectedPropType = messageParts[7];
+        const expectedPropType = e.message.split(', expected ')[1];
 
         errorMessage = `Invalid argument \`${invalidPropPath}\` passed into ${type}`;
         if (props.id) {
@@ -52,8 +59,8 @@ export function propTypeErrorHandler(e, props, type) {
         errorMessage += '.';
 
         errorMessage += (
-            `\nExpected type \`${expectedPropType}\`` +
-            `\nWas supplied type \`${invalidPropTypeProvided}\``
+            `\nExpected ${expectedPropType}` +
+            `\nWas supplied type \`${invalidPropTypeProvided}\`.`
         );
 
         if (has(invalidPropPath, props)) {
diff --git a/tests/test_render.py b/tests/test_render.py
index 465b7bf0..85cad671 100644
--- a/tests/test_render.py
+++ b/tests/test_render.py
@@ -2405,6 +2405,79 @@ class Tests(IntegrationTests):
                 }
             },
 
+            'invalid-arrayOf': {
+                'fail': True,
+                'name': 'invalid arrayOf',
+                'component': dcc.Checklist,
+                'props': {
+                    'options': 'test',
+                }
+            },
+
+            'invalid-oneOf': {
+                'fail': True,
+                'name': 'invalid oneOf',
+                'component': dcc.Input,
+                'props': {
+                    'type': 'test',
+                }
+            },
+
+            'invalid-oneOfType': {
+                'fail': True,
+                'name': 'invalid oneOfType',
+                'component': dcc.Input,
+                'props': {
+                    'max': True,
+                }
+            },
+
+            'invalid-shape-1': {
+                'fail': True,
+                'name': 'invalid shape 1',
+                'component': dcc.Graph,
+                'props': {
+                    'config': {
+                        'this': 'that'
+                    }
+                }
+            },
+
+            'invalid-shape-2': {
+                'fail': True,
+                'name': 'invalid shape 2',
+                'component': dcc.Graph,
+                'props': {
+                    'config': {
+                        'edits': {
+                            'legendPosition': 'asdf'
+                        }
+                    }
+                }
+            },
+
+            'invalid-shape-3': {
+                'fail': True,
+                'name': 'invalid shape 3',
+                'component': dcc.Graph,
+                'props': {
+                    'toImageButtonOptions': {
+                        'format': 'asdf'
+                    }
+                }
+            },
+
+            'invalid-shape-4': {
+                'fail': True,
+                'name': 'invalid shape 4',
+                'component': dcc.Graph,
+                'props': {
+                    'toImageButtonOptions': {
+                        'asdf': 'test'
+                    }
+                }
+            },
+
             'string-not-list': {
                 'fail': True,
                 'name': 'string-not-a-list',
