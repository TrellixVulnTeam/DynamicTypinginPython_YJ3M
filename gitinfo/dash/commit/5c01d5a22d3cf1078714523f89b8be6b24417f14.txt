commit 5c01d5a22d3cf1078714523f89b8be6b24417f14
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Sat Jul 30 15:13:29 2016 -0700

    Export component namespace in layout JSON

diff --git a/dash/dash/development/base_component.py b/dash/dash/development/base_component.py
index cbede16b..785a43cc 100644
--- a/dash/dash/development/base_component.py
+++ b/dash/dash/development/base_component.py
@@ -22,6 +22,7 @@ class Component(collections.MutableSequence):
                       for p in self._prop_names
                       if p != 'content' and hasattr(self, p)},
             'type': self._type,
+            'namespace': self._namespace,
             'children': self.content
         }
         if hasattr(self, 'dependencies'):
@@ -88,7 +89,7 @@ class Component(collections.MutableSequence):
         self.content.insert(index, component)
 
 
-def generate_class(typename, component_arguments, setup):
+def generate_class(typename, component_arguments, setup, namespace):
     # http://jameso.be/2013/08/06/namedtuple.html
     import sys
     c = '''class {typename}(Component):
@@ -97,6 +98,7 @@ def generate_class(typename, component_arguments, setup):
         def __init__(self, {default_argtext}):
             self._prop_names = {list_of_valid_keys}
             self._type = '{typename}'
+            self._namespace = '{namespace}'
             super({typename}, self).__init__({argtext})
             setup(self)
 
@@ -126,7 +128,7 @@ def generate_class(typename, component_arguments, setup):
 
     d = c.format(**locals())
 
-    namespace = {'Component': Component, 'setup': setup}
-    exec d in namespace
-    result = namespace[typename]
+    scope = {'Component': Component, 'setup': setup}
+    exec d in scope
+    result = scope[typename]
     return result
diff --git a/dash/dash/development/component_loader.py b/dash/dash/development/component_loader.py
index 83b53f7c..14a541ca 100644
--- a/dash/dash/development/component_loader.py
+++ b/dash/dash/development/component_loader.py
@@ -10,7 +10,8 @@ def load_components(metadata_path,
                     default_props=['id', 'key', 'className', 'style',
                                    'dependencies', 'dangerouslySetInnerHTML',
                                    'suppressContentEditableWarning'],
-                    namespace={},
+                    namespace='default_namespace',
+                    scope={},
                     module_name='__main__'):
     """Load React component metadata into a format Dash can parse.
 
@@ -61,8 +62,9 @@ def load_components(metadata_path,
         component = generate_class(
             component_spec['type'],
             component_spec['valid_kwargs'],
-            component_spec['setup']
+            component_spec['setup'],
+            namespace
         )
 
         component.__module__ = module_name
-        namespace[component_spec['type']] = component
+        scope[component_spec['type']] = component
