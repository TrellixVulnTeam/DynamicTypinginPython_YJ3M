commit 11fcdf1fe371ec74a01044792b6ef9a3ddad0b1d
Author: chriddyp <chris@plot.ly>
Date:   Wed Feb 15 19:40:48 2017 -0500

    v0.12.2 - New logic for serving bundles

diff --git a/dash/react.py b/dash/react.py
index 9188c391..e687252c 100644
--- a/dash/react.py
+++ b/dash/react.py
@@ -4,6 +4,7 @@ import plotly
 from flask import Flask, url_for, send_from_directory
 from flask.ext.cors import CORS
 from dependency_resolver import Resolver
+import os
 
 
 class Dash(object):
@@ -58,9 +59,17 @@ class Dash(object):
 
     # Serve the JS bundles for each package
     def serve_component_suites(self, path):
-        # TODO - resolver should be able to figure out the local installation path
-        name = self.resolver.resolve_dependency_name(path)
-        return send_from_directory(self.resolver.site_packages_path, name)
+        # path is like 'dash_html_components/bundle.js'
+        package, bundle_name = path.split('/')
+        if (package not in self.component_suites and
+           package != 'dash_renderer'):
+
+            raise Exception(
+                'Attempting to server {} but {} '.format(path, package) +
+                'was not defined in component_suites')
+
+        directory = os.path.join(self.resolver.site_packages_path, package)
+        return send_from_directory(directory, bundle_name)
 
     def index(self):
         scripts = ', '.join([
diff --git a/setup.py b/setup.py
index f5f512b7..63758d5b 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@ from setuptools import setup
 
 setup(
     name='dash.ly',
-    version='0.12.1',
+    version='0.12.2',
     author='chris p',
     author_email='chris@plot.ly',
     packages=['dash', 'dash/development'],
