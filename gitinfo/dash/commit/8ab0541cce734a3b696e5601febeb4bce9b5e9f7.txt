commit 8ab0541cce734a3b696e5601febeb4bce9b5e9f7
Author: chriddyp <chris@plot.ly>
Date:   Mon Apr 18 23:14:04 2016 -0400

    wire up redux

diff --git a/renderer/src/actions/index.js b/renderer/src/actions/index.js
index e69de29b..f6de6b26 100644
--- a/renderer/src/actions/index.js
+++ b/renderer/src/actions/index.js
@@ -0,0 +1,3 @@
+import { createAction } from 'redux-actions';
+
+export const editChildrenString = createAction('EDIT_CHILDREN_STRING');
diff --git a/renderer/src/container.react.js b/renderer/src/container.react.js
index 9842aff0..cc09f231 100644
--- a/renderer/src/container.react.js
+++ b/renderer/src/container.react.js
@@ -5,20 +5,22 @@
 import React, { Component } from 'react';
 import HTML5Backend from 'react-dnd-html5-backend';
 import { DragDropContext } from 'react-dnd';
+import { Provider } from 'react-redux'
+import { createStore } from 'redux'
 
 import renderTree from './renderTree.js';
 import spec from './spec.js';
+import reducer from './reducers/reducer.js';
 
-// const store = createStore(reducer);
+const store = createStore(reducer);
 
 class Container extends Component {
   render () {
-      return renderTree(spec);
-    //   return (
-    //       <Provider store={store}>
-    //         {renderTree(spec)}
-    //     </Provider>
-    // );
+      return (
+          <Provider store={store}>
+            {renderTree(spec)}
+        </Provider>
+    );
   }
 }
 
diff --git a/renderer/src/package.json b/renderer/src/package.json
index 979c3df0..cbc99ac5 100644
--- a/renderer/src/package.json
+++ b/renderer/src/package.json
@@ -21,7 +21,8 @@
     "react-dnd-html5-backend": "^2.1.2",
     "react-dom": "^15.0.1",
     "react-redux": "^4.4.5",
-    "redux": "^3.4.0"
+    "redux": "^3.4.0",
+    "redux-actions": "^0.9.1"
   },
   "devDependencies": {
     "babel-plugin-react-transform": "^2.0.2",
diff --git a/renderer/src/reducers/layout.js b/renderer/src/reducers/layout.js
new file mode 100644
index 00000000..5a7e5071
--- /dev/null
+++ b/renderer/src/reducers/layout.js
@@ -0,0 +1,36 @@
+import R from 'ramda';
+
+import spec from '../spec.js';
+
+const pad = R.curry((array, paddingValue) => array.reduce((r, v) => {
+    r.push(paddingValue);
+    r.push(v);
+}));
+const createTreePath = (array) => pad(array);
+
+const layout = (state, action) => {
+    switch (action.type) {
+        case 'EDIT_CHILDREN_STRING':
+            // TODO: Update the children component of the state with this action
+            console.warn('EDIT_CHILDREN_STRING: ', action);
+            return state;
+        case 'REORDER_CHILDREN': {
+            // TODO: wire this in to our drop targets
+            const itemTreePath = createTreePath(action.itempath);  // [3, 1, 4, 5]
+
+            const targetTreePath = R.append(
+                'children',
+                createTreePath(action.targetpath)
+            );
+
+            const item = state.getIn(itemTreePath);
+            state = state.deleteIn(itemTreePath);
+            state = state.setIn(targetTreePath, item);
+            return state;
+        }
+        default:
+            return spec;
+    }
+}
+
+export default layout;
diff --git a/renderer/src/reducers/reducer.js b/renderer/src/reducers/reducer.js
new file mode 100644
index 00000000..9211708e
--- /dev/null
+++ b/renderer/src/reducers/reducer.js
@@ -0,0 +1,8 @@
+'use strict'
+
+import { combineReducers } from 'redux';
+import layout from './layout';
+
+const reducer = combineReducers({layout});
+
+export default reducer;
