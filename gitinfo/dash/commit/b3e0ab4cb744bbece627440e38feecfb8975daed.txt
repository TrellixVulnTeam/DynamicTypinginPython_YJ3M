commit b3e0ab4cb744bbece627440e38feecfb8975daed
Author: Per Nilsson <per.nilsson@formidablelabs.com>
Date:   Sun Jul 31 18:53:06 2016 -0700

    Resolve component suite package paths
    
    - Support `python setup.py sdist` installs
    - Support `python setup.py install [upload]` installs

diff --git a/dash/dash/dependency_resolver.py b/dash/dash/dependency_resolver.py
new file mode 100644
index 00000000..61d3b322
--- /dev/null
+++ b/dash/dash/dependency_resolver.py
@@ -0,0 +1,42 @@
+import os
+
+class Resolver(object):
+
+    site_packages_path = None
+
+    def __init__(self, dependency, dependencyName):
+        self.site_packages_path = self._get_site_packages_path(dependency, dependencyName)
+
+    def _get_site_packages_path(self, dependency, dependencyName):
+        # Get local path for site-packages
+        module_path = os.path.abspath(dependency.__file__)
+        module_name = dependencyName
+        module_name_index = module_path.index(module_name)
+        site_packages_path = module_path[:module_name_index]
+
+        return site_packages_path
+
+    # Support local module installations using `python setup.py install`,
+    # where the module directory has
+    # appended `-[MODULE_VERSION]-[pyVERSTION].egg`
+    # path can be 'dash_html_components/bundle.js'
+    # Resolved path can be 'dash_html_components-0.2.3-py2.7.egg/bundle.js'
+    def resolve_dependency_name(self, path):
+        # Split the path into parts
+        path_parts = path.split(os.sep)
+        # Package name is first part
+        package_name = path_parts[0]
+        # Find the real directory that matches package name
+        matches = [f for f in os.listdir(self.site_packages_path)
+            if f.startswith(package_name) and
+            not f.endswith('dist-info')
+        ]
+
+        package_dir = matches[0]
+
+        # For local EGG installs, the package is nested underneath
+        if package_dir.endswith('.egg'):
+            package_dir = os.sep.join([package_dir, package_name])
+
+        # Return original path with package name replaced by resolved name
+        return os.sep.join([package_dir] + path_parts[1:])
diff --git a/dash/dash/react.py b/dash/dash/react.py
index fd3f0785..1694ae72 100644
--- a/dash/dash/react.py
+++ b/dash/dash/react.py
@@ -1,37 +1,19 @@
 import flask
 import json
-from os import path, listdir
 import plotly
 from flask import Flask, url_for, send_from_directory
 from flask.ext.cors import CORS
 
-# Get local path for site-packages
-plotly_module_path = path.abspath(plotly.__file__)
-plotly_module_name = 'plotly'
-plotly_name_index = plotly_module_path.index(plotly_module_name)
-site_packages_path = plotly_module_path[:plotly_name_index]
-# TEMP: check path
-print('site_packages_path: ' + site_packages_path)
-
-# TODO: figure out how we can support local module installations
-# using `python setup.py install`, where the module directory has
-# appended `-[MODULE_VERSION]-[pyVERSTION].egg`
-# e.g. dash_core_components-0.1.4-py2.7.egg
-# IDEA:
-# 1. Traverse site-packages looking for comp. suite root names;
-# 2. map root names to real directory names;
-# 3. use mapping in the `component_suites` req. handler.
-#
-# dash_component_suites = [f for f in listdir(dir)
-#     if f.startswith('dash_') and
-#     not f.endswith('dist-info')
-# ]
+from dependency_resolver import Resolver
 
 class Dash(object):
     def __init__(self, name=None, url_namespace='', server=None):
 
         self.layout = None
 
+        # Resolve site-packages location by using plotly as canonical dependency
+        self.resolver = Resolver(plotly, 'plotly')
+
         self.react_map = {}
 
         if server is not None:
@@ -71,9 +53,8 @@ class Dash(object):
             url_for('static', filename='bundle.js')
 
     def component_suites(self, path):
-        # http://localhost:8050/js/component-suites/dash_core_components-0.1.4-py2.7.egg/bundle.js
-        print(site_packages_path + path)
-        return send_from_directory(site_packages_path, path)
+        name = self.resolver.resolve_dependency_name(path)
+        return send_from_directory(self.resolver.site_packages_path, name)
 
     def index(self):
         return flask.render_template(
diff --git a/dash/templates/index.html b/dash/templates/index.html
index 8e895d46..9c6c3d49 100644
--- a/dash/templates/index.html
+++ b/dash/templates/index.html
@@ -3,7 +3,7 @@
     <head>
         <meta charset="UTF-8" />
         {% for suite in component_suites %}
-            <script src="/js/component-suites/{{suite}}/lib/bundle.js"></script>
+            <script src="/js/component-suites/{{suite}}/bundle.js"></script>
         {% endfor %}
     </head>
     <body>
