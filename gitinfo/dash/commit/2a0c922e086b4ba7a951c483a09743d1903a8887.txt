commit 2a0c922e086b4ba7a951c483a09743d1903a8887
Author: Valentijn Nieman <valentijnnieman@gmail.com>
Date:   Fri Sep 14 14:10:26 2018 -0400

    Add (broken) test for interpolate_index renderer

diff --git a/tests/test_integration.py b/tests/test_integration.py
index c2ee5406..e4b61c54 100644
--- a/tests/test_integration.py
+++ b/tests/test_integration.py
@@ -591,13 +591,9 @@ class Tests(IntegrationTests):
             )
         ])
 
-        call_count = Value('i', 0)
-
         @app.callback(Output('output-1', 'children'), [Input('input', 'value')])
         def update_output(value):
-            call_count.value = call_count.value + 1
             return value
-        call_count = Value('i', 0)
 
         self.startServer(app)
 
@@ -614,3 +610,78 @@ class Tests(IntegrationTests):
         self.assertEqual('request_pre changed this text!', output_pre.text)
         self.assertEqual('request_post changed this text!', output_post.text)
         self.percy_snapshot(name='request-hooks')
+
+    def test_with_custom_renderer_interpolated(self):
+        app = dash.Dash(__name__)
+
+        app.layout = html.Div([
+            dcc.Input(
+                id='input',
+                value='initial value'
+            ),
+            html.Div(
+                html.Div([
+                    html.Div(id='output-1'),
+                    html.Div(id='output-pre'),
+                    html.Div(id='output-post')
+                ])
+            )
+        ])
+
+        @app.callback(Output('output-1', 'children'), [Input('input', 'value')])
+        def update_output(value):
+            return value
+
+        scripts = app._generate_scripts_html()
+        css = app._generate_css_dist_html()
+        config = app._generate_config_html()
+        metas = app._generate_meta_html()
+        title = "test custom renderer on interpolated_index"
+        favicon = ''
+        _app_entry = '''
+        <div id="react-entry-point">
+            <div class="_dash-loading">
+                Loading...
+            </div>
+        </div>
+        '''
+        renderer = '''
+        <script id="_dash-renderer" type"application/javascript">
+            console.log('firing up a custom renderer!')
+            const renderer = new DashRenderer({
+                request_pre: () => {
+                    var output = document.getElementById('output-pre')
+                    if(output) {
+                        output.innerHTML = 'request_pre changed this text!';
+                    }
+                },
+                request_post: () => {
+                    var output = document.getElementById('output-post')
+                    if(output) {
+                        output.innerHTML = 'request_post changed this text!';
+                    }
+                }
+            })
+        </script>
+        '''
+
+        index = app.interpolate_index(
+            metas=metas, title=title, css=css, config=config,
+            scripts=scripts, app_entry=_app_entry, favicon=favicon,
+            renderer=renderer)
+
+        self.startServer(app)
+
+        input1 = self.wait_for_element_by_id('input')
+        input1.clear()
+
+        input1.send_keys('fire request hooks')
+
+        output1 = self.wait_for_element_by_id('output-1')
+        output_pre = self.wait_for_element_by_id('output-pre')
+        output_post = self.wait_for_element_by_id('output-post')
+
+        self.assertEqual('fire request hooks', output1.text)
+        self.assertEqual('request_pre changed this text!', output_pre.text)
+        self.assertEqual('request_post changed this text!', output_post.text)
+        self.percy_snapshot(name='request-hooks interpolated')
\ No newline at end of file
