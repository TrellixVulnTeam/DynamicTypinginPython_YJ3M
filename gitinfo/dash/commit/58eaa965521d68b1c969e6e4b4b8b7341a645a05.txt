commit 58eaa965521d68b1c969e6e4b4b8b7341a645a05
Author: alexcjohnson <alex@plot.ly>
Date:   Wed Jan 29 23:55:07 2020 -0500

    update tests for pendingCallbacks and new paths structure

diff --git a/dash/testing/browser.py b/dash/testing/browser.py
index e89b8948..f23323ff 100644
--- a/dash/testing/browser.py
+++ b/dash/testing/browser.py
@@ -152,11 +152,8 @@ class Browser(DashPageMixin):
             # as diff reference for the build run.
             logger.error(
                 "wait_for_callbacks failed => status of invalid rqs %s",
-                list(
-                    _ for _ in self.redux_state_rqs if not _.get("responseTime")
-                ),
+                self.redux_state_rqs,
             )
-            logger.debug("full content of the rqs => %s", self.redux_state_rqs)
 
         self.percy_runner.snapshot(name=snapshot_name)
 
diff --git a/dash/testing/dash_page.py b/dash/testing/dash_page.py
index 5c0445e5..855bf127 100644
--- a/dash/testing/dash_page.py
+++ b/dash/testing/dash_page.py
@@ -33,7 +33,15 @@ class DashPageMixin(object):
     @property
     def redux_state_rqs(self):
         return self.driver.execute_script(
-            "return window.store.getState().requestQueue"
+            """
+            return window.store.getState().requestQueue.map(function(cb) {
+                var out = {};
+                for (var key in cb) {
+                    if (typeof cb[key] !== 'function') { out[key] = cb[key]; }
+                }
+                return out;
+            })
+            """
         )
 
     @property
@@ -41,19 +49,7 @@ class DashPageMixin(object):
         return self.driver.execute_script("return window.store")
 
     def _wait_for_callbacks(self):
-        if self.window_store:
-            # note that there is still a small chance of FP (False Positive)
-            # where we get two earlier requests in the queue, this returns
-            # True but there are still more requests to come
-            return self.redux_state_rqs and all(
-                (
-                    _.get("responseTime")
-                    for _ in self.redux_state_rqs
-                    if _.get("controllerId")
-                )
-            )
-
-        return True
+        return not self.window_store or self.redux_state_rqs == []
 
     def get_local_storage(self, store_id="local"):
         return self.driver.execute_script(
diff --git a/tests/integration/callbacks/state_path.json b/tests/integration/callbacks/state_path.json
index 7c6bf0ff..94ca6b4d 100644
--- a/tests/integration/callbacks/state_path.json
+++ b/tests/integration/callbacks/state_path.json
@@ -1,146 +1,155 @@
 {
     "chapter1": {
-        "toc": ["props", "children", 0],
-        "body": ["props", "children", 1],
-        "chapter1-header": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            0
-        ],
-        "chapter1-controls": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            1
-        ],
-        "chapter1-label": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            2
-        ],
-        "chapter1-graph": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            3
-        ]
+        "objs": {},
+        "strs": {
+            "toc": ["props", "children", 0],
+            "body": ["props", "children", 1],
+            "chapter1-header": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                0
+            ],
+            "chapter1-controls": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                1
+            ],
+            "chapter1-label": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                2
+            ],
+            "chapter1-graph": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                3
+            ]
+        }
     },
     "chapter2": {
-        "toc": ["props", "children", 0],
-        "body": ["props", "children", 1],
-        "chapter2-header": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            0
-        ],
-        "chapter2-controls": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            1
-        ],
-        "chapter2-label": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            2
-        ],
-        "chapter2-graph": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            "props",
-            "children",
-            3
-        ]
+        "objs": {},
+        "strs": {
+            "toc": ["props", "children", 0],
+            "body": ["props", "children", 1],
+            "chapter2-header": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                0
+            ],
+            "chapter2-controls": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                1
+            ],
+            "chapter2-label": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                2
+            ],
+            "chapter2-graph": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                "props",
+                "children",
+                3
+            ]
+        }
     },
     "chapter3": {
-        "toc": ["props", "children", 0],
-        "body": ["props", "children", 1],
-        "chapter3-header": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            0,
-            "props",
-            "children",
-            "props",
-            "children",
-            0
-        ],
-        "chapter3-label": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            0,
-            "props",
-            "children",
-            "props",
-            "children",
-            1
-        ],
-        "chapter3-graph": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            0,
-            "props",
-            "children",
-            "props",
-            "children",
-            2
-        ],
-        "chapter3-controls": [
-            "props",
-            "children",
-            1,
-            "props",
-            "children",
-            0,
-            "props",
-            "children",
-            "props",
-            "children",
-            3
-        ]
+        "objs": {},
+        "strs": {
+            "toc": ["props", "children", 0],
+            "body": ["props", "children", 1],
+            "chapter3-header": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                0,
+                "props",
+                "children",
+                "props",
+                "children",
+                0
+            ],
+            "chapter3-label": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                0,
+                "props",
+                "children",
+                "props",
+                "children",
+                1
+            ],
+            "chapter3-graph": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                0,
+                "props",
+                "children",
+                "props",
+                "children",
+                2
+            ],
+            "chapter3-controls": [
+                "props",
+                "children",
+                1,
+                "props",
+                "children",
+                0,
+                "props",
+                "children",
+                "props",
+                "children",
+                3
+            ]
+        }
     }
-}
\ No newline at end of file
+}
diff --git a/tests/integration/callbacks/test_basic_callback.py b/tests/integration/callbacks/test_basic_callback.py
index 48fd53a7..f13be38b 100644
--- a/tests/integration/callbacks/test_basic_callback.py
+++ b/tests/integration/callbacks/test_basic_callback.py
@@ -1,12 +1,10 @@
 from multiprocessing import Value
 
-from bs4 import BeautifulSoup
-
 import dash_core_components as dcc
 import dash_html_components as html
 import dash_table
 import dash
-from dash.dependencies import Input, Output, State
+from dash.dependencies import Input, Output
 from dash.exceptions import PreventUpdate
 
 
@@ -42,8 +40,7 @@ def test_cbsc001_simple_callback(dash_duo):
         "hello world"
     ), "initial count + each key stroke"
 
-    rqs = dash_duo.redux_state_rqs
-    assert len(rqs) == 1
+    assert dash_duo.redux_state_rqs == []
 
     assert dash_duo.get_logs() == []
 
@@ -98,7 +95,9 @@ def test_cbsc002_callbacks_generating_children(dash_duo):
 
     dash_duo.percy_snapshot(name="callback-generating-function-1")
 
-    assert dash_duo.redux_state_paths == {
+    paths = dash_duo.redux_state_paths
+    assert paths["objs"] == {}
+    assert paths["strs"] == {
         "input": ["props", "children", 0],
         "output": ["props", "children", 1],
         "sub-input-1": [
@@ -136,9 +135,7 @@ def test_cbsc002_callbacks_generating_children(dash_duo):
         "#sub-output-1", pad_input.attrs["value"] + "deadbeef"
     )
 
-    rqs = dash_duo.redux_state_rqs
-    assert rqs, "request queue is not empty"
-    assert all((rq["status"] == 200 and not rq["rejected"] for rq in rqs))
+    assert dash_duo.redux_state_rqs == [], "pendingCallbacks is empty"
 
     dash_duo.percy_snapshot(name="callback-generating-function-2")
     assert dash_duo.get_logs() == [], "console is clean"
diff --git a/tests/integration/callbacks/test_layout_paths_with_callbacks.py b/tests/integration/callbacks/test_layout_paths_with_callbacks.py
index 3f4f5219..061e22cb 100644
--- a/tests/integration/callbacks/test_layout_paths_with_callbacks.py
+++ b/tests/integration/callbacks/test_layout_paths_with_callbacks.py
@@ -152,7 +152,7 @@ def test_cblp001_radio_buttons_callbacks_generating_children(dash_duo):
             '#{}-graph:not(.dash-graph--pending)'.format(chapter)
         )
 
-        for key in dash_duo.redux_state_paths:
+        for key in dash_duo.redux_state_paths["strs"]:
             assert dash_duo.find_elements(
                 "#{}".format(key)
             ), "each element should exist in the dom"
@@ -169,20 +169,18 @@ def test_cblp001_radio_buttons_callbacks_generating_children(dash_duo):
         wait.until(
             lambda: (
                 dash_duo.driver.execute_script(
-                    "return document."
-                    'querySelector("#{}-graph:not(.dash-graph--pending) .js-plotly-plot").'.format(
+                    'return document.querySelector("' +
+                    "#{}-graph:not(.dash-graph--pending) .js-plotly-plot".format(
                         chapter
                     )
-                    + "layout.title.text"
+                    + '").layout.title.text'
                 )
                 == value
             ),
             TIMEOUT,
         )
 
-        rqs = dash_duo.redux_state_rqs
-        assert rqs, "request queue is not empty"
-        assert all((rq["status"] == 200 and not rq["rejected"] for rq in rqs))
+        assert dash_duo.redux_state_rqs == [], "pendingCallbacks is empty"
 
     def check_call_counts(chapters, count):
         for chapter in chapters:
@@ -224,12 +222,15 @@ def test_cblp001_radio_buttons_callbacks_generating_children(dash_duo):
     dash_duo.find_elements('input[type="radio"]')[3].click()  # switch to 4
     dash_duo.wait_for_text_to_equal("#body", "Just a string")
     dash_duo.percy_snapshot(name="chapter-4")
-    for key in dash_duo.redux_state_paths:
+
+    paths = dash_duo.redux_state_paths
+    assert paths["objs"] == {}
+    for key in paths["strs"]:
         assert dash_duo.find_elements(
             "#{}".format(key)
         ), "each element should exist in the dom"
 
-    assert dash_duo.redux_state_paths == {
+    assert paths["strs"] == {
         "toc": ["props", "children", 0],
         "body": ["props", "children", 1],
     }
diff --git a/tests/integration/callbacks/test_multiple_callbacks.py b/tests/integration/callbacks/test_multiple_callbacks.py
index 7be877dd..84c8af1d 100644
--- a/tests/integration/callbacks/test_multiple_callbacks.py
+++ b/tests/integration/callbacks/test_multiple_callbacks.py
@@ -31,8 +31,7 @@ def test_cbmt001_called_multiple_times_and_out_of_order(dash_duo):
         dash_duo.find_element("#output").text == "3"
     ), "clicked button 3 times"
 
-    rqs = dash_duo.redux_state_rqs
-    assert len(rqs) == 1 and not rqs[0]["rejected"]
+    assert dash_duo.redux_state_rqs == []
 
     dash_duo.percy_snapshot(
         name="test_callbacks_called_multiple_times_and_out_of_order"
diff --git a/tests/integration/renderer/test_dependencies.py b/tests/integration/renderer/test_dependencies.py
index ef62c440..6213d71f 100644
--- a/tests/integration/renderer/test_dependencies.py
+++ b/tests/integration/renderer/test_dependencies.py
@@ -40,8 +40,6 @@ def test_rddp001_dependencies_on_components_that_dont_exist(dash_duo):
 
     assert output_1_call_count.value == 2 and output_2_call_count.value == 0
 
-    rqs = dash_duo.redux_state_rqs
-    assert len(rqs) == 1
-    assert rqs[0]["controllerId"] == "output-1.children" and not rqs[0]['rejected']
+    assert dash_duo.redux_state_rqs == []
 
     assert dash_duo.get_logs() == []
diff --git a/tests/integration/renderer/test_due_diligence.py b/tests/integration/renderer/test_due_diligence.py
index 88ef5fbf..720d7839 100644
--- a/tests/integration/renderer/test_due_diligence.py
+++ b/tests/integration/renderer/test_due_diligence.py
@@ -87,7 +87,9 @@ def test_rddd001_initial_state(dash_duo):
         r.json() == []
     ), "no dependencies present in app as no callbacks are defined"
 
-    assert dash_duo.redux_state_paths == {
+    paths = dash_duo.redux_state_paths
+    assert paths["objs"] == {}
+    assert paths["strs"] == {
         abbr: [
             int(token)
             if token in string.digits
@@ -102,8 +104,7 @@ def test_rddd001_initial_state(dash_duo):
         )
     }, "paths should reflect to the component hierarchy"
 
-    rqs = dash_duo.redux_state_rqs
-    assert not rqs, "no callback => no requestQueue"
+    assert dash_duo.redux_state_rqs == [], "no callback => no pendingCallbacks"
 
     dash_duo.percy_snapshot(name="layout")
     assert dash_duo.get_logs() == [], "console has no errors"
