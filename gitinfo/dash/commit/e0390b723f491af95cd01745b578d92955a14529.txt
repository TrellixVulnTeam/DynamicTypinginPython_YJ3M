commit e0390b723f491af95cd01745b578d92955a14529
Author: Philippe Duval <philippe@plot.ly>
Date:   Tue Sep 4 12:16:23 2018 -0400

    Add dev_bundle resources support.

diff --git a/dash/dash.py b/dash/dash.py
index 9e323835..1b1e29b3 100644
--- a/dash/dash.py
+++ b/dash/dash.py
@@ -86,6 +86,7 @@ class Dash(object):
             external_scripts=None,
             external_stylesheets=None,
             suppress_callback_exceptions=None,
+            serve_dev_bundles=False,
             components_cache_max_age=None,
             **kwargs):
 
@@ -221,6 +222,7 @@ class Dash(object):
         self._layout = None
         self._cached_layout = None
         self.routes = []
+        self._serve_dev_bundle = serve_dev_bundles
 
         # add a handler for components suites errors to return 404
         self.server.errorhandler(exceptions.InvalidResourceError)(
@@ -373,11 +375,14 @@ class Dash(object):
         # pylint: disable=protected-access
         srcs = self._collect_and_register_resources(
             self.scripts._resources._filter_resources(
-                dash_renderer._js_dist_dependencies
+                dash_renderer._js_dist_dependencies,
+                dev_bundles=self._serve_dev_bundle
             )) + self._external_scripts + self._collect_and_register_resources(
-                self.scripts.get_all_scripts() +
+                self.scripts.get_all_scripts(
+                    dev_bundles=self._serve_dev_bundle) +
                 self.scripts._resources._filter_resources(
-                    dash_renderer._js_dist
+                    dash_renderer._js_dist,
+                    dev_bundles=self._serve_dev_bundle
                 ))
 
         return '\n'.join([
diff --git a/dash/resources.py b/dash/resources.py
index c594864d..aa1ce871 100644
--- a/dash/resources.py
+++ b/dash/resources.py
@@ -16,7 +16,7 @@ class Resources:
     def append_resource(self, resource):
         self._resources.append(resource)
 
-    def _filter_resources(self, all_resources):
+    def _filter_resources(self, all_resources, dev_bundles=False):
         filtered_resources = []
         for s in all_resources:
             filtered_resource = {}
@@ -24,6 +24,10 @@ class Resources:
                 filtered_resource['namespace'] = s['namespace']
             if 'external_url' in s and not self.config.serve_locally:
                 filtered_resource['external_url'] = s['external_url']
+            elif 'dev_package_path' in s and dev_bundles:
+                filtered_resource['relative_package_path'] = (
+                    s['dev_package_path']
+                )
             elif 'relative_package_path' in s:
                 filtered_resource['relative_package_path'] = (
                     s['relative_package_path']
@@ -54,7 +58,7 @@ class Resources:
 
         return filtered_resources
 
-    def get_all_resources(self):
+    def get_all_resources(self, dev_bundles=False):
         all_resources = []
         if self.config.infer_from_layout:
             all_resources = (
@@ -63,7 +67,7 @@ class Resources:
         else:
             all_resources = self._resources
 
-        return self._filter_resources(all_resources)
+        return self._filter_resources(all_resources, dev_bundles)
 
     def get_inferred_resources(self):
         namespaces = []
@@ -127,8 +131,8 @@ class Scripts:  # pylint: disable=old-style-class
     def append_script(self, script):
         self._resources.append_resource(script)
 
-    def get_all_scripts(self):
-        return self._resources.get_all_resources()
+    def get_all_scripts(self, dev_bundles=False):
+        return self._resources.get_all_resources(dev_bundles)
 
     def get_inferred_scripts(self):
         return self._resources.get_inferred_resources()
