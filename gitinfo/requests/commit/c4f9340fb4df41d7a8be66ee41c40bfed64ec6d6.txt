commit c4f9340fb4df41d7a8be66ee41c40bfed64ec6d6
Author: Dmitry Medvinsky <me@dmedvinsky.name>
Date:   Fri Mar 1 12:43:39 2013 +0400

    Add ability to pass `response` to `HTTPError()`
    
    Just a little refactoring, but it seems nicer to me to be able to pass
    the response when constructing the `HTTPError` instance instead of
    constructing it and then changing the member variable.

diff --git a/AUTHORS.rst b/AUTHORS.rst
index 99639230..4395b3b2 100644
--- a/AUTHORS.rst
+++ b/AUTHORS.rst
@@ -122,3 +122,4 @@ Patches and Suggestions
 - Johnny Goodnow <j.goodnow29@gmail.com>
 - Denis Ryzhkov <denisr@denisr.com>
 - Wilfred Hughes <me@wilfred.me.uk> @dontYetKnow
+- Dmitry Medvinsky <me@dmedvinsky.name>
diff --git a/requests/exceptions.py b/requests/exceptions.py
index 6759af56..c0588f6a 100644
--- a/requests/exceptions.py
+++ b/requests/exceptions.py
@@ -16,7 +16,11 @@ class RequestException(RuntimeError):
 
 class HTTPError(RequestException):
     """An HTTP error occurred."""
-    response = None
+
+    def __init__(self, *args, **kwargs):
+        """ Initializes HTTPError with optional `response` object. """
+        self.response = kwargs.pop('response', None)
+        super(HTTPError, self).__init__(*args, **kwargs)
 
 
 class ConnectionError(RequestException):
diff --git a/requests/models.py b/requests/models.py
index faa0cbe4..3d27d0c5 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -657,9 +657,7 @@ class Response(object):
             http_error_msg = '%s Server Error: %s' % (self.status_code, self.reason)
 
         if http_error_msg:
-            http_error = HTTPError(http_error_msg)
-            http_error.response = self
-            raise http_error
+            raise HTTPError(http_error_msg, response=self)
 
     def close(self):
         return self.raw.release_conn()
diff --git a/test_requests.py b/test_requests.py
index 0a2e6433..e40d44f0 100644
--- a/test_requests.py
+++ b/test_requests.py
@@ -385,7 +385,17 @@ class RequestsTestCase(unittest.TestCase):
 
         # undo monkey patch
         HTTPConnectionPool.urlopen = old_urlopen
-        
+
+    def test_http_error(self):
+        error = requests.exceptions.HTTPError()
+        self.assertEqual(error.response, None)
+        response = requests.Response()
+        error = requests.exceptions.HTTPError(response=response)
+        self.assertEqual(error.response, response)
+        error = requests.exceptions.HTTPError('message', response=response)
+        self.assertEqual(str(error), 'message')
+        self.assertEqual(error.response, response)
+
 
 if __name__ == '__main__':
     unittest.main()
