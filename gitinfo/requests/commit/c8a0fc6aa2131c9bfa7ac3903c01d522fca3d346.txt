commit c8a0fc6aa2131c9bfa7ac3903c01d522fca3d346
Author: Piotr Jurkiewicz <piotr.jerzy.jurkiewicz@gmail.com>
Date:   Fri Apr 15 04:43:53 2016 +0200

    Use OrderedDict from .compat module

diff --git a/requests/structures.py b/requests/structures.py
index edbe3f5f..991056e4 100644
--- a/requests/structures.py
+++ b/requests/structures.py
@@ -10,6 +10,8 @@ Data structures that power Requests.
 
 import collections
 
+from .compat import OrderedDict
+
 
 class CaseInsensitiveDict(collections.MutableMapping):
     """
@@ -40,7 +42,7 @@ class CaseInsensitiveDict(collections.MutableMapping):
 
     """
     def __init__(self, data=None, **kwargs):
-        self._store = collections.OrderedDict()
+        self._store = OrderedDict()
         if data is None:
             data = {}
         self.update(data, **kwargs)
diff --git a/tests/test_requests.py b/tests/test_requests.py
index c112077f..6937e049 100755
--- a/tests/test_requests.py
+++ b/tests/test_requests.py
@@ -318,11 +318,11 @@ class TestRequests:
     def test_headers_preserve_order(self, httpbin):
         """Preserve order when headers provided as OrderedDict."""
         ses = requests.Session()
-        ses.headers = collections.OrderedDict()
+        ses.headers = OrderedDict()
         ses.headers['Accept-Encoding'] = 'identity'
         ses.headers['First'] = '1'
         ses.headers['Second'] = '2'
-        headers = collections.OrderedDict([('Third', '3'), ('Fourth', '4')])
+        headers = OrderedDict([('Third', '3'), ('Fourth', '4')])
         headers['Fifth'] = '5'
         headers['Second'] = '222'
         req = requests.Request('GET', httpbin('get'), headers = headers)
