commit 1bb91653ccb9ddb8252697eb10b506fb4108feb0
Author: Lukas Graf <lukas.graf@4teamwork.ch>
Date:   Sat Aug 8 00:19:10 2015 +0200

    Docs: Clarify that method-level params are not persisted in sessions.

diff --git a/docs/api.rst b/docs/api.rst
index 7225a837..8d277c81 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -81,6 +81,8 @@ Status Code Lookup
     >>> requests.codes['\o/']
     200
 
+.. _api-cookies:
+
 Cookies
 ~~~~~~~
 
diff --git a/docs/user/advanced.rst b/docs/user/advanced.rst
index 080ca24b..8466a4af 100644
--- a/docs/user/advanced.rst
+++ b/docs/user/advanced.rst
@@ -45,6 +45,24 @@ Any dictionaries that you pass to a request method will be merged with the
 session-level values that are set. The method-level parameters override session
 parameters.
 
+Note, however, that method-level parameters will *not* be persisted across
+requests, even if using a session. This example will only send the cookies
+with the first request, but not the second::
+
+    s = requests.Session()
+    r = s.get('http://httpbin.org/cookies', cookies={'from-my': 'browser'})
+    print(r.text)
+    # '{"cookies": {"from-my": "browser"}}'
+
+    r = s.get('http://httpbin.org/cookies')
+    print(r.text)
+    # '{"cookies": {}}'
+
+
+If you want to manually add cookies to your session, use the
+:ref:`Cookie utility functions <api-cookies>` to manipulate
+:attr:`Session.cookies <requests.Session.cookies>`.
+
 Sessions can also be used as context managers::
 
     with requests.Session() as s:
