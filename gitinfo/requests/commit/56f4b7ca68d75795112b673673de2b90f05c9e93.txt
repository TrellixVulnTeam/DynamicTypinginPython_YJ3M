commit 56f4b7ca68d75795112b673673de2b90f05c9e93
Author: Denis Ryzhkov <denisr@denisr.com>
Date:   Tue Feb 12 09:51:46 2013 +0300

    Deleted is_py2 check from unicode_header_name fix thanks to Lukasa.

diff --git a/requests/models.py b/requests/models.py
index 2ca5faa4..4120a8ee 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -325,8 +325,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         """Prepares the given HTTP headers."""
 
         if headers:
-            if is_py2:
-                headers = dict((builtin_str(name), value) for name, value in headers.items())
+            headers = dict((name.encode('ascii'), value) for name, value in headers.items())
             self.headers = CaseInsensitiveDict(headers)
         else:
             self.headers = CaseInsensitiveDict()
diff --git a/test_requests.py b/test_requests.py
index e506ffae..e12722d1 100644
--- a/test_requests.py
+++ b/test_requests.py
@@ -10,7 +10,7 @@ import unittest
 
 import requests
 from requests.auth import HTTPDigestAuth
-from requests.compat import is_py2, str
+from requests.compat import str
 
 try:
     import StringIO
@@ -252,8 +252,7 @@ class RequestsTestCase(unittest.TestCase):
         requests.get(httpbin('Ã¸'), params={'foo': 'foo'})
 
     def test_unicode_header_name(self):
-        if is_py2:
-            requests.put(httpbin('put'), headers={unicode('Content-Type'): 'application/octet-stream'}, data='\xff')
+        requests.put(httpbin('put'), headers={str('Content-Type'): 'application/octet-stream'}, data='\xff') # compat.str is unicode.
 
     def test_urlencoded_get_query_multivalued_param(self):
 
