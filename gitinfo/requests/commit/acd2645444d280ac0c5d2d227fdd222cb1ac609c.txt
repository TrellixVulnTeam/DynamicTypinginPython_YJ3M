commit acd2645444d280ac0c5d2d227fdd222cb1ac609c
Author: Mingyuan Xia <mxia@mxia.me>
Date:   Tue Nov 21 04:01:04 2017 +0800

    #4373, fix possible winreg value type difference (#4377)
    
    * #4373, fix possible winreg value type difference
    
    * add a test for ProxyOverride and ProxyEnable on win32
    
    * add tests for winreg key ProxyEnable with two possible types
    
    * fixing AppVeyor failures

diff --git a/requests/utils.py b/requests/utils.py
index 1cba5a93..42daa2d7 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -52,8 +52,10 @@ if sys.platform == 'win32':
         try:
             internetSettings = winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                 r'Software\Microsoft\Windows\CurrentVersion\Internet Settings')
-            proxyEnable = winreg.QueryValueEx(internetSettings,
-                                              'ProxyEnable')[0]
+            # ProxyEnable could be REG_SZ or REG_DWORD, normalizing it
+            proxyEnable = int(winreg.QueryValueEx(internetSettings,
+                                              'ProxyEnable')[0])
+            # ProxyOverride is almost always a string
             proxyOverride = winreg.QueryValueEx(internetSettings,
                                                 'ProxyOverride')[0]
         except OSError:
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 2292a8f0..2dd16923 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -5,6 +5,7 @@ import copy
 import filecmp
 from io import BytesIO
 import zipfile
+from collections import deque
 
 import pytest
 from requests import compat
@@ -666,6 +667,7 @@ def test_should_bypass_proxies_win_registry(url, expected, override,
             pass
 
     ie_settings = RegHandle()
+    proxyEnableValues = deque([1, "1"])
 
     def OpenKey(key, subkey):
         return ie_settings
@@ -673,7 +675,9 @@ def test_should_bypass_proxies_win_registry(url, expected, override,
     def QueryValueEx(key, value_name):
         if key is ie_settings:
             if value_name == 'ProxyEnable':
-                return [1]
+                # this could be a string (REG_SZ) or a 32-bit number (REG_DWORD)
+                proxyEnableValues.rotate()
+                return [proxyEnableValues[0]]
             elif value_name == 'ProxyOverride':
                 return [override]
 
@@ -684,6 +688,7 @@ def test_should_bypass_proxies_win_registry(url, expected, override,
     monkeypatch.setenv('NO_PROXY', '')
     monkeypatch.setattr(winreg, 'OpenKey', OpenKey)
     monkeypatch.setattr(winreg, 'QueryValueEx', QueryValueEx)
+    assert should_bypass_proxies(url, None) == expected
 
 
 @pytest.mark.parametrize(
