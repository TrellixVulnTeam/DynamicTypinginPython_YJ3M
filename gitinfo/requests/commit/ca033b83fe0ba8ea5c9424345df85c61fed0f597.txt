commit ca033b83fe0ba8ea5c9424345df85c61fed0f597
Author: Kwpolska <kwpolska@gmail.com>
Date:   Sat Jul 20 12:12:57 2013 +0200

    Some cosmetic updates to the docs
    
    Signed-off-by: Kwpolska <kwpolska@gmail.com>

diff --git a/README.rst b/README.rst
index 754f592e..48334cb7 100644
--- a/README.rst
+++ b/README.rst
@@ -59,7 +59,7 @@ Features
 Installation
 ------------
 
-To install requests, simply:
+To install Requests, simply:
 
 .. code-block:: bash
 
diff --git a/docs/api.rst b/docs/api.rst
index 08cb1b8d..a1c2cb99 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -186,7 +186,7 @@ Licensing
 
 One key difference that has nothing to do with the API is a change in the
 license from the ISC_ license to the `Apache 2.0`_ license. The Apache 2.0
-license ensures that contributions to requests are also covered by the Apache
+license ensures that contributions to Requests are also covered by the Apache
 2.0 license.
 
 .. _ISC: http://opensource.org/licenses/ISC
diff --git a/docs/dev/philosophy.rst b/docs/dev/philosophy.rst
index 41649dae..2f8ca855 100644
--- a/docs/dev/philosophy.rst
+++ b/docs/dev/philosophy.rst
@@ -38,4 +38,4 @@ Linux Distro Packages
 
 Distributions have been made for many Linux repositories, including: Ubuntu, Debian, RHEL, and Arch.
 
-These distributions are sometimes divergent forks, or are otherwise not kept up-to-date with the latest code and bugfixes. PyPI (and its mirrors) and GitHub are the official distribution sources; alternatives are not supported by the requests project.
+These distributions are sometimes divergent forks, or are otherwise not kept up-to-date with the latest code and bugfixes. PyPI (and its mirrors) and GitHub are the official distribution sources; alternatives are not supported by the Requests project.
diff --git a/docs/dev/todo.rst b/docs/dev/todo.rst
index ec33b7fb..dcc06f26 100644
--- a/docs/dev/todo.rst
+++ b/docs/dev/todo.rst
@@ -46,7 +46,7 @@ Requests currently supports the following versions of Python:
 
 Support for Python 3.1 and 3.2 may be dropped at any time.
 
-Google App Engine will never be officially supported. Pull requests for compatibility will be accepted, as long as they don't complicate the codebase.
+Google App Engine will never be officially supported. Pull Requests for compatibility will be accepted, as long as they don't complicate the codebase.
 
 
 Are you crazy?
diff --git a/docs/user/install.rst b/docs/user/install.rst
index 9a30168b..634a4d05 100644
--- a/docs/user/install.rst
+++ b/docs/user/install.rst
@@ -10,7 +10,7 @@ The first step to using any software package is getting it properly installed.
 Distribute & Pip
 ----------------
 
-Installing requests is simple with `pip <http://www.pip-installer.org/>`_::
+Installing Requests is simple with `pip <http://www.pip-installer.org/>`_::
 
     $ pip install requests
 
@@ -22,11 +22,11 @@ But, you really `shouldn't do that <http://www.pip-installer.org/en/latest/other
 
 
 
-Cheeseshop Mirror
+Cheeseshop (PyPI) Mirror
 -----------------
 
-If the Cheeseshop is down, you can also install Requests from one of the
-mirrors. `Crate.io <http://crate.io>`_ is one of them::
+If the Cheeseshop (a.k.a. PyPI) is down, you can also install Requests from one
+of the mirrors. `Crate.io <http://crate.io>`_ is one of them::
 
     $ pip install -i http://simple.crate.io/ requests
 
diff --git a/docs/user/quickstart.rst b/docs/user/quickstart.rst
index 51c85efe..6e3e08d3 100644
--- a/docs/user/quickstart.rst
+++ b/docs/user/quickstart.rst
@@ -117,7 +117,7 @@ You can also access the response body as bytes, for non-text requests::
 The ``gzip`` and ``deflate`` transfer-encodings are automatically decoded for you.
 
 For example, to create an image from binary data returned by a request, you can
-use the following code:
+use the following code::
 
     >>> from PIL import Image
     >>> from StringIO import StringIO
@@ -173,7 +173,7 @@ More complicated POST requests
 ------------------------------
 
 Typically, you want to send some form-encoded data â€” much like an HTML form.
-To do this, simply pass a dictionary to the `data` argument. Your
+To do this, simply pass a dictionary to the ``data`` argument. Your
 dictionary of data will automatically be form-encoded when the request is made::
 
     >>> payload = {'key1': 'value1', 'key2': 'value2'}
@@ -378,7 +378,7 @@ redirection as well::
 Timeouts
 --------
 
-You can tell requests to stop waiting for a response after a given number of
+You can tell Requests to stop waiting for a response after a given number of
 seconds with the ``timeout`` parameter::
 
     >>> requests.get('http://github.com', timeout=0.001)
