commit 7f14db17c8612aed71a181b084455b71e130ffc8
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon May 29 12:11:43 2017 -0400

    new requests namespace

diff --git a/HISTORY.rst b/HISTORY.rst
index a589f64b..a6ea30ab 100644
--- a/HISTORY.rst
+++ b/HISTORY.rst
@@ -592,7 +592,7 @@ This is the first release that follows our new release process. For more, see
 
 - Unicode URL improvements for Python 2.
 - Re-order JSON param for backwards compat.
-- Automatically defrag authentication schemes from host/pass URIs. (`#2249 <https://github.com/kennethreitz/requests/issues/2249>`_)
+- Automatically defrag authentication schemes from host/pass URIs. (`#2249 <https://github.com/requests/requests/issues/2249>`_)
 
 
 2.4.2 (2014-10-05)
@@ -600,19 +600,19 @@ This is the first release that follows our new release process. For more, see
 
 **Improvements**
 
-- FINALLY! Add json parameter for uploads! (`#2258 <https://github.com/kennethreitz/requests/pull/2258>`_)
-- Support for bytestring URLs on Python 3.x (`#2238 <https://github.com/kennethreitz/requests/pull/2238>`_)
+- FINALLY! Add json parameter for uploads! (`#2258 <https://github.com/requests/requests/pull/2258>`_)
+- Support for bytestring URLs on Python 3.x (`#2238 <https://github.com/requests/requests/pull/2238>`_)
 
 **Bugfixes**
 
-- Avoid getting stuck in a loop (`#2244 <https://github.com/kennethreitz/requests/pull/2244>`_)
-- Multiple calls to iter* fail with unhelpful error. (`#2240 <https://github.com/kennethreitz/requests/issues/2240>`_, `#2241 <https://github.com/kennethreitz/requests/issues/2241>`_)
+- Avoid getting stuck in a loop (`#2244 <https://github.com/requests/requests/pull/2244>`_)
+- Multiple calls to iter* fail with unhelpful error. (`#2240 <https://github.com/requests/requests/issues/2240>`_, `#2241 <https://github.com/requests/requests/issues/2241>`_)
 
 **Documentation**
 
-- Correct redirection introduction (`#2245 <https://github.com/kennethreitz/requests/pull/2245/>`_)
-- Added example of how to send multiple files in one request. (`#2227 <https://github.com/kennethreitz/requests/pull/2227/>`_)
-- Clarify how to pass a custom set of CAs (`#2248 <https://github.com/kennethreitz/requests/pull/2248/>`_)
+- Correct redirection introduction (`#2245 <https://github.com/requests/requests/pull/2245/>`_)
+- Added example of how to send multiple files in one request. (`#2227 <https://github.com/requests/requests/pull/2227/>`_)
+- Clarify how to pass a custom set of CAs (`#2248 <https://github.com/requests/requests/pull/2248/>`_)
 
 
 
diff --git a/README.rst b/README.rst
index bfe608b8..0e165b5f 100644
--- a/README.rst
+++ b/README.rst
@@ -10,16 +10,16 @@ Requests: HTTP for Humans
 .. image:: https://img.shields.io/pypi/pyversions/requests.svg
     :target: https://pypi.python.org/pypi/requests
 
-.. image:: https://travis-ci.org/kennethreitz/requests.svg?branch=master
-    :target: https://travis-ci.org/kennethreitz/requests
+.. image:: https://travis-ci.org/requests/requests.svg?branch=master
+    :target: https://travis-ci.org/requests/requests
 
-.. image:: https://codecov.io/github/kennethreitz/requests/coverage.svg?branch=master
-    :target: https://codecov.io/github/kennethreitz/requests
+.. image:: https://codecov.io/github/requests/requests/coverage.svg?branch=master
+    :target: https://codecov.io/github/requests/requests
     :alt: codecov.io
-    
-.. image:: https://img.shields.io/github/contributors/kennethreitz/requests.svg
-    :target: https://github.com/kennethreitz/requests/graphs/contributors
-    
+
+.. image:: https://img.shields.io/github/contributors/requests/requests.svg
+    :target: https://github.com/requests/requests/graphs/contributors
+
 .. image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg
     :target: https://saythanks.io/to/kennethreitz
 
@@ -50,7 +50,7 @@ Behold, the power of Requests:
 
 See `the similar code, sans Requests <https://gist.github.com/973705>`_.
 
-.. image:: https://raw.githubusercontent.com/kennethreitz/requests/master/docs/_static/requests-logo-small.png
+.. image:: https://raw.githubusercontent.com/requests/requests/master/docs/_static/requests-logo-small.png
     :target: http://docs.python-requests.org/
 
 
@@ -112,6 +112,6 @@ How to Contribute
 #. Write a test which shows that the bug was fixed or that the feature works as expected.
 #. Send a pull request and bug the maintainer until it gets merged and published. :) Make sure to add yourself to AUTHORS_.
 
-.. _`the repository`: http://github.com/kennethreitz/requests
-.. _AUTHORS: https://github.com/kennethreitz/requests/blob/master/AUTHORS.rst
-.. _Contributor Friendly: https://github.com/kennethreitz/requests/issues?direction=desc&labels=Contributor+Friendly&page=1&sort=updated&state=open
+.. _`the repository`: http://github.com/requests/requests
+.. _AUTHORS: https://github.com/requests/requests/blob/master/AUTHORS.rst
+.. _Contributor Friendly: https://github.com/requests/requests/issues?direction=desc&labels=Contributor+Friendly&page=1&sort=updated&state=open
diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index fe113734..71feba68 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -58,9 +58,9 @@
 
   <p></p>
 
-  <li><a href="http://github.com/kennethreitz/requests">Requests @ GitHub</a></li>
+  <li><a href="http://github.com/requests/requests">Requests @ GitHub</a></li>
   <li><a href="http://pypi.python.org/pypi/requests">Requests @ PyPI</a></li>
-  <li><a href="http://github.com/kennethreitz/requests/issues">Issue Tracker</a></li>
+  <li><a href="http://github.com/requests/requests/issues">Issue Tracker</a></li>
   <li><a href="http://docs.python-requests.org/en/latest/community/updates/#software-updates">Release History</a></li>
 </ul>
 
diff --git a/docs/community/support.rst b/docs/community/support.rst
index 63069308..4d5b0c35 100644
--- a/docs/community/support.rst
+++ b/docs/community/support.rst
@@ -26,7 +26,7 @@ File an Issue
 
 If you notice some unexpected behaviour in Requests, or want to see support
 for a new feature,
-`file an issue on GitHub <https://github.com/kennethreitz/requests/issues>`_.
+`file an issue on GitHub <https://github.com/requests/requests/issues>`_.
 
 
 E-mail
diff --git a/docs/community/updates.rst b/docs/community/updates.rst
index b4897a83..e1f0d8db 100644
--- a/docs/community/updates.rst
+++ b/docs/community/updates.rst
@@ -12,7 +12,7 @@ GitHub
 ------
 
 The best way to track the development of Requests is through
-`the GitHub repo <https://github.com/kennethreitz/requests>`_.
+`the GitHub repo <https://github.com/requests/requests>`_.
 
 Twitter
 -------
diff --git a/docs/dev/contributing.rst b/docs/dev/contributing.rst
index 93181dad..265994b3 100644
--- a/docs/dev/contributing.rst
+++ b/docs/dev/contributing.rst
@@ -187,7 +187,7 @@ through the `GitHub issues`_, **both open and closed**, to confirm that the bug
 hasn't been reported before. Duplicate bug reports are a huge drain on the time
 of other contributors, and should be avoided as much as possible.
 
-.. _GitHub issues: https://github.com/kennethreitz/requests/issues
+.. _GitHub issues: https://github.com/requests/requests/issues
 
 
 Feature Requests
diff --git a/docs/dev/todo.rst b/docs/dev/todo.rst
index d4862fbb..f2e572ce 100644
--- a/docs/dev/todo.rst
+++ b/docs/dev/todo.rst
@@ -6,11 +6,11 @@ Requests is under active development, and contributions are more than welcome!
 #. Check for open issues or open a fresh issue to start a discussion around a bug.
    There is a Contributor Friendly tag for issues that should be ideal for people who are not very
    familiar with the codebase yet.
-#. Fork `the repository <https://github.com/kennethreitz/requests>`_ on GitHub and start making your
+#. Fork `the repository <https://github.com/requests/requests>`_ on GitHub and start making your
    changes to a new branch.
 #. Write a test which shows that the bug was fixed.
 #. Send a pull request and bug the maintainer until it gets merged and published. :)
-   Make sure to add yourself to `AUTHORS <https://github.com/kennethreitz/requests/blob/master/AUTHORS.rst>`_.
+   Make sure to add yourself to `AUTHORS <https://github.com/requests/requests/blob/master/AUTHORS.rst>`_.
 
 Feature Freeze
 --------------
diff --git a/docs/index.rst b/docs/index.rst
index 4caf556a..af88bfd3 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -17,11 +17,11 @@ Release v\ |version|. (:ref:`Installation <install>`)
 .. image:: https://img.shields.io/pypi/pyversions/requests.svg
     :target: https://pypi.python.org/pypi/requests
 
-.. image:: https://travis-ci.org/kennethreitz/requests.svg?branch=master
-    :target: https://travis-ci.org/kennethreitz/requests
+.. image:: https://travis-ci.org/requests/requests.svg?branch=master
+    :target: https://travis-ci.org/requests/requests
 
-.. image:: https://codecov.io/github/kennethreitz/requests/coverage.svg?branch=master
-    :target: https://codecov.io/github/kennethreitz/requests
+.. image:: https://codecov.io/github/requests/requests/coverage.svg?branch=master
+    :target: https://codecov.io/github/requests/requests
     :alt: codecov.io
 
 .. image:: https://img.shields.io/badge/Say%20Thanks!-ðŸ¦‰-1EAEDB.svg
diff --git a/docs/user/advanced.rst b/docs/user/advanced.rst
index b7775f24..2aac434c 100644
--- a/docs/user/advanced.rst
+++ b/docs/user/advanced.rst
@@ -280,7 +280,7 @@ immediately. You can override this behaviour and defer downloading the response
 body until you access the :attr:`Response.content <requests.Response.content>`
 attribute with the ``stream`` parameter::
 
-    tarball_url = 'https://github.com/kennethreitz/requests/tarball/master'
+    tarball_url = 'https://github.com/requests/requests/tarball/master'
     r = requests.get(tarball_url, stream=True)
 
 At this point only the response headers have been downloaded and the connection
@@ -642,7 +642,7 @@ from GitHub. Suppose we wanted commit ``a050faf`` on Requests. We would get it
 like so::
 
     >>> import requests
-    >>> r = requests.get('https://api.github.com/repos/kennethreitz/requests/git/commits/a050faf084662f3a352dd1a941f2c7c9f886d4ad')
+    >>> r = requests.get('https://api.github.com/repos/requests/requests/git/commits/a050faf084662f3a352dd1a941f2c7c9f886d4ad')
 
 We should confirm that GitHub responded correctly. If it has, we want to work
 out what type of content it is. Do this like so::
@@ -697,12 +697,12 @@ we should probably avoid making ham-handed POSTS to it. Instead, let's play
 with the Issues feature of GitHub.
 
 This documentation was added in response to
-`Issue #482 <https://github.com/kennethreitz/requests/issues/482>`_. Given that
+`Issue #482 <https://github.com/requests/requests/issues/482>`_. Given that
 this issue already exists, we will use it as an example. Let's start by getting it.
 
 ::
 
-    >>> r = requests.get('https://api.github.com/repos/kennethreitz/requests/issues/482')
+    >>> r = requests.get('https://api.github.com/repos/requests/requests/issues/482')
     >>> r.status_code
     200
 
@@ -745,7 +745,7 @@ is to POST to the thread. Let's do it.
 ::
 
     >>> body = json.dumps({u"body": u"Sounds great! I'll get right on it!"})
-    >>> url = u"https://api.github.com/repos/kennethreitz/requests/issues/482/comments"
+    >>> url = u"https://api.github.com/repos/requests/requests/issues/482/comments"
 
     >>> r = requests.post(url=url, data=body)
     >>> r.status_code
@@ -779,7 +779,7 @@ that.
     5804413
 
     >>> body = json.dumps({u"body": u"Sounds great! I'll get right on it once I feed my cat."})
-    >>> url = u"https://api.github.com/repos/kennethreitz/requests/issues/comments/5804413"
+    >>> url = u"https://api.github.com/repos/requests/requests/issues/comments/5804413"
 
     >>> r = requests.patch(url=url, data=body, auth=auth)
     >>> r.status_code
diff --git a/docs/user/install.rst b/docs/user/install.rst
index 922c489b..96884558 100644
--- a/docs/user/install.rst
+++ b/docs/user/install.rst
@@ -22,7 +22,7 @@ Get the Source Code
 -------------------
 
 Requests is actively developed on GitHub, where the code is
-`always available <https://github.com/kennethreitz/requests>`_.
+`always available <https://github.com/requests/requests>`_.
 
 You can either clone the public repository::
 
diff --git a/requests/auth.py b/requests/auth.py
index cd9be911..a44b4d15 100644
--- a/requests/auth.py
+++ b/requests/auth.py
@@ -227,7 +227,7 @@ class HTTPDigestAuth(AuthBase):
         """
 
         # If response is not 4xx, do not auth
-        # See https://github.com/kennethreitz/requests/issues/3772
+        # See https://github.com/requests/requests/issues/3772
         if not 400 <= r.status_code < 500:
             self._thread_local.num_401_calls = 1
             return r
diff --git a/requests/models.py b/requests/models.py
index b4a523d9..c22cc1c9 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -13,7 +13,7 @@ import sys
 
 # Import encoding now, to avoid implicit import later.
 # Implicit import within threads may cause LookupError when standard library is in a ZIP,
-# such as in Embedded Python. See https://github.com/kennethreitz/requests/issues/3578.
+# such as in Embedded Python. See https://github.com/requests/requests/issues/3578.
 import encodings.idna
 
 from urllib3.fields import RequestField
@@ -348,7 +348,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         #: We're unable to blindly call unicode/str functions
         #: as this will include the bytestring indicator (b'')
         #: on python 3.x.
-        #: https://github.com/kennethreitz/requests/pull/2238
+        #: https://github.com/requests/requests/pull/2238
         if isinstance(url, bytes):
             url = url.decode('utf8')
         else:
diff --git a/requests/sessions.py b/requests/sessions.py
index 9b74f5dd..82a978c2 100755
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -164,9 +164,9 @@ class SessionRedirectMixin(object):
 
             self.rebuild_method(prepared_request, resp)
 
-            # https://github.com/kennethreitz/requests/issues/1084
+            # https://github.com/requests/requests/issues/1084
             if resp.status_code not in (codes.temporary_redirect, codes.permanent_redirect):
-                # https://github.com/kennethreitz/requests/issues/3490
+                # https://github.com/requests/requests/issues/3490
                 purged_headers = ('Content-Length', 'Content-Type', 'Transfer-Encoding')
                 for header in purged_headers:
                     prepared_request.headers.pop(header, None)
diff --git a/requests/utils.py b/requests/utils.py
index 5976192f..056f6fb3 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -171,7 +171,7 @@ def get_netrc_auth(url, raise_errors=False):
             except KeyError:
                 # os.path.expanduser can fail when $HOME is undefined and
                 # getpwuid fails. See http://bugs.python.org/issue20164 &
-                # https://github.com/kennethreitz/requests/issues/1846
+                # https://github.com/requests/requests/issues/1846
                 return
 
             if os.path.exists(loc):
diff --git a/tests/test_lowlevel.py b/tests/test_lowlevel.py
index 301dc3e4..c87234bc 100755
--- a/tests/test_lowlevel.py
+++ b/tests/test_lowlevel.py
@@ -28,7 +28,7 @@ def test_digestauth_401_count_reset_on_redirect():
     """Ensure we correctly reset num_401_calls after a successful digest auth,
     followed by a 302 redirect to another digest auth prompt.
 
-    See https://github.com/kennethreitz/requests/issues/1979.
+    See https://github.com/requests/requests/issues/1979.
     """
     text_401 = (b'HTTP/1.1 401 UNAUTHORIZED\r\n'
                 b'Content-Length: 0\r\n'
@@ -138,7 +138,7 @@ def test_digestauth_401_only_sent_once():
 def test_digestauth_only_on_4xx():
     """Ensure we only send digestauth on 4xx challenges.
 
-    See https://github.com/kennethreitz/requests/issues/3772.
+    See https://github.com/requests/requests/issues/3772.
     """
     text_200_chal = (b'HTTP/1.1 200 OK\r\n'
                      b'Content-Length: 0\r\n'
diff --git a/tests/test_requests.py b/tests/test_requests.py
index 3cb56c33..b8350cb7 100755
--- a/tests/test_requests.py
+++ b/tests/test_requests.py
@@ -455,7 +455,7 @@ class TestRequests:
     @pytest.mark.parametrize('key', ('User-agent', 'user-agent'))
     def test_user_agent_transfers(self, httpbin, key):
 
-        heads = {key: 'Mozilla/5.0 (github.com/kennethreitz/requests)'}
+        heads = {key: 'Mozilla/5.0 (github.com/requests/requests)'}
 
         r = requests.get(httpbin('user-agent'), headers=heads)
         assert heads[key] in r.text
@@ -2075,7 +2075,7 @@ class TestTimeout:
             pass
 
     def test_encoded_methods(self, httpbin):
-        """See: https://github.com/kennethreitz/requests/issues/2316"""
+        """See: https://github.com/requests/requests/issues/2316"""
         r = requests.request(b'GET', httpbin('get'))
         assert r.ok
 
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 0b37e57f..41858b37 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -367,7 +367,7 @@ def test_get_auth_from_url(url, auth):
         ),
     ))
 def test_requote_uri_with_unquoted_percents(uri, expected):
-    """See: https://github.com/kennethreitz/requests/issues/2356"""
+    """See: https://github.com/requests/requests/issues/2356"""
     assert requote_uri(uri) == expected
 
 
