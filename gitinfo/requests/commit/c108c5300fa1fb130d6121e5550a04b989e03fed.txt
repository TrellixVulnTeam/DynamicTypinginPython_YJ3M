commit c108c5300fa1fb130d6121e5550a04b989e03fed
Author: Kenneth Reitz <me@kennethreitz.com>
Date:   Sun Oct 23 17:18:39 2011 -0400

    No mo' HttpError

diff --git a/requests/__init__.py b/requests/__init__.py
index fd8853d9..2d9fa113 100644
--- a/requests/__init__.py
+++ b/requests/__init__.py
@@ -23,7 +23,7 @@ __copyright__ = 'Copyright 2011 Kenneth Reitz'
 
 
 from . import utils
-from .models import HTTPError, Request, Response
+from .models import Request, Response
 from .api import request, get, head, post, patch, put, delete
 from .sessions import session
 from .status_codes import codes
diff --git a/requests/models.py b/requests/models.py
index 1fac1a8d..fd74ed54 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -12,21 +12,22 @@ import urllib2
 import socket
 import zlib
 
-from urllib2 import HTTPError
 from urlparse import urlparse, urlunparse, urljoin
 from datetime import datetime
 
+from .auth import dispatch as auth_dispatch
 from .hooks import dispatch_hook
 from .structures import CaseInsensitiveDict
 from .packages.poster.encode import multipart_encode
 from .packages.poster.streaminghttp import register_openers, get_handlers
-from .utils import (dict_from_cookiejar, get_unicode_from_response, stream_decode_response_unicode, decode_gzip, stream_decode_gzip)
 from .status_codes import codes
 from .exceptions import Timeout, URLRequired, TooManyRedirects
 from .monkeys import Request as _Request
 from .monkeys import HTTPRedirectHandler
+from .utils import (
+    dict_from_cookiejar, get_unicode_from_response,
+    stream_decode_response_unicode, decode_gzip, stream_decode_gzip)
 
-from .auth import dispatch as auth_dispatch
 
 REDIRECT_STATI = (codes.moved, codes.found, codes.other, codes.temporary_moved)
 
diff --git a/requests/sessions.py b/requests/sessions.py
index 5993b27c..ee9dafab 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -51,7 +51,9 @@ def merge_kwargs(local_kwarg, default_kwarg):
 class Session(object):
     """A Requests session."""
 
-    __attrs__ = ['headers', 'cookies', 'auth', 'timeout', 'proxies', 'hooks', 'params', 'config']
+    __attrs__ = [
+        'headers', 'cookies', 'auth', 'timeout', 'proxies', 'hooks',
+        'params', 'config']
 
 
     def __init__(self,
@@ -62,7 +64,8 @@ class Session(object):
         proxies=None,
         hooks=None,
         params=None,
-        config=None):
+        config=None,
+        keep_alive=True):
 
         self.headers = headers or {}
         self.cookies = cookies or {}
@@ -72,6 +75,7 @@ class Session(object):
         self.hooks = hooks or {}
         self.params = params or {}
         self.config = config or {}
+        self.keep_alive = keep_alive
 
         for (k, v) in defaults.items():
             self.config.setdefault(k, v)
@@ -169,7 +173,6 @@ class Session(object):
         # Send the HTTP Request.
         r.send()
 
-
         return r.response
 
 
