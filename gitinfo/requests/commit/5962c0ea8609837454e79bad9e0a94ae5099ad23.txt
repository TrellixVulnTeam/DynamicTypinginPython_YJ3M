commit 5962c0ea8609837454e79bad9e0a94ae5099ad23
Author: James Rowe <jnrowe@gmail.com>
Date:   Fri May 27 00:17:44 2011 -0700

    Subclass dict for CaseInsensitiveDict.

diff --git a/requests/structures.py b/requests/structures.py
index 0c82c7b4..bfee7b19 100644
--- a/requests/structures.py
+++ b/requests/structures.py
@@ -8,30 +8,14 @@ Datastructures that power Requests.
 
 """
 
-from UserDict import DictMixin
-
-
-class CaseInsensitiveDict(DictMixin):
+class CaseInsensitiveDict(dict):
     """Case-insensitive Dictionary for :class:`Response <models.Response>` Headers.
 
     For example, ``headers['content-encoding']`` will return the
     value of a ``'Content-Encoding'`` response header."""
 
-    def __init__(self, *args, **kwargs):
-        # super(CaseInsensitiveDict, self).__init__()
-        self.data = dict(*args, **kwargs)
-
-    def __repr__(self):
-        return self.data.__repr__()
-
-    def __getstate__(self):
-        return self.data.copy()
-
-    def __setstate__(self, d):
-        self.data = d
-
     def _lower_keys(self):
-        return map(str.lower, self.data.keys())
+        return map(str.lower, self.keys())
 
 
     def __contains__(self, key):
@@ -39,26 +23,6 @@ class CaseInsensitiveDict(DictMixin):
 
 
     def __getitem__(self, key):
-
-        if key.lower() in self:
+        # We allow fall-through here, so values default to None
+        if key in self:
             return self.items()[self._lower_keys().index(key.lower())][1]
-
-
-    def __setitem__(self, key, value):
-        return self.data.__setitem__(key, value)
-
-
-    def __delitem__(self, key):
-        return self.data.__delitem__(key)
-
-
-    def __keys__(self):
-        return self.data.__keys__()
-
-
-    def __iter__(self):
-        return self.data.__iter__()
-
-
-    def iteritems(self):
-        return self.data.iteritems()
