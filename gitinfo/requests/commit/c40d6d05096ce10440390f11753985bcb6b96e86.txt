commit c40d6d05096ce10440390f11753985bcb6b96e86
Author: Daniele Tricoli <eriol@mornie.org>
Date:   Sun Feb 5 04:18:22 2012 +0100

    Since requests 0.10.1 dropped Python5 support, to catch an exception and
    store the exception object in a variable the "as" keyword can be used so
    Python3 will not raise a SyntaxError

diff --git a/requests/packages/oreos/structures.py b/requests/packages/oreos/structures.py
index 063d5f96..ae1bfe6a 100644
--- a/requests/packages/oreos/structures.py
+++ b/requests/packages/oreos/structures.py
@@ -362,7 +362,7 @@ class MultiDict(TypeConversionDict):
         """
         try:
             return dict.pop(self, key)[0]
-        except KeyError, e:
+        except KeyError as e:
             if default is not _missing:
                 return default
             raise KeyError(str(e))
@@ -372,7 +372,7 @@ class MultiDict(TypeConversionDict):
         try:
             item = dict.popitem(self)
             return (item[0], item[1][0])
-        except KeyError, e:
+        except KeyError as e:
             raise KeyError(str(e))
 
     def poplist(self, key):
@@ -389,7 +389,7 @@ class MultiDict(TypeConversionDict):
         """Pop a ``(key, list)`` tuple from the dict."""
         try:
             return dict.popitem(self)
-        except KeyError, e:
+        except KeyError as e:
             raise KeyError(str(e))
 
     def __copy__(self):
