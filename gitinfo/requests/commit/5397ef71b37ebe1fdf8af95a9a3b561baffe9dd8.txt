commit 5397ef71b37ebe1fdf8af95a9a3b561baffe9dd8
Author: Ian Cordasco <graffatcolmingov@gmail.com>
Date:   Tue Nov 10 21:22:24 2015 -0600

    Fix super_len for partially read files
    
    Closes #2872

diff --git a/requests/utils.py b/requests/utils.py
index 5975d0f1..132cd2b5 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -48,19 +48,26 @@ def dict_to_sequence(d):
 
 
 def super_len(o):
+    total_length = 0
+    current_position = 0
+
     if hasattr(o, '__len__'):
-        return len(o)
+        total_length = len(o)
+
+    elif hasattr(o, 'len'):
+        total_length = o.len
 
-    if hasattr(o, 'len'):
-        return o.len
+    elif hasattr(o, 'getvalue'):
+        # e.g. BytesIO, cStringIO.StringIO
+        total_length = len(o.getvalue())
 
-    if hasattr(o, 'fileno'):
+    elif hasattr(o, 'fileno'):
         try:
             fileno = o.fileno()
         except io.UnsupportedOperation:
             pass
         else:
-            filesize = os.fstat(fileno).st_size
+            total_length = os.fstat(fileno).st_size
 
             # Having used fstat to determine the file length, we need to
             # confirm that this file was opened up in binary mode.
@@ -75,11 +82,10 @@ def super_len(o):
                     FileModeWarning
                 )
 
-            return filesize
+    if hasattr(o, 'tell'):
+        current_position = o.tell()
 
-    if hasattr(o, 'getvalue'):
-        # e.g. BytesIO, cStringIO.StringIO
-        return len(o.getvalue())
+    return max(0, total_length - current_position)
 
 
 def get_netrc_auth(url, raise_errors=False):
