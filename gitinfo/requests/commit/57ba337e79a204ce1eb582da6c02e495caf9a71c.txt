commit 57ba337e79a204ce1eb582da6c02e495caf9a71c
Author: Kenneth Reitz <me@kennethreitz.com>
Date:   Mon Jan 23 01:58:32 2012 -0500

     assert isinstance

diff --git a/test_requests.py b/test_requests.py
index 08ef5178..761d322a 100755
--- a/test_requests.py
+++ b/test_requests.py
@@ -287,7 +287,7 @@ class RequestsTestSuite(unittest.TestCase):
 
             response = requests.get(url)
 
-            self.assertIsInstance(response.url, str)
+            assert isinstance(response.url, str)
 
 
     def test_unicode_get(self):
@@ -698,11 +698,11 @@ class RequestsTestSuite(unittest.TestCase):
         # Iterating on these responses should produce empty sequences
         r = safe.get('http://_/')
         self.assertEqual(list(r.iter_lines()), [])
-        self.assertIsInstance(r.error, requests.exceptions.ConnectionError)
+        assert isinstance(r.error, requests.exceptions.ConnectionError)
 
         r = safe.get('http://_/')
         self.assertEqual(list(r.iter_content()), [])
-        self.assertIsInstance(r.error, requests.exceptions.ConnectionError)
+         assert isinstancer.error, requests.exceptions.ConnectionError)
 
         # When not in safe mode, should raise Timeout exception
         with self.assertRaises(requests.exceptions.Timeout):
@@ -712,7 +712,7 @@ class RequestsTestSuite(unittest.TestCase):
         r = requests.get(httpbin('stream', '1000'), timeout=0.0001,
                 config=dict(safe_mode=True))
         self.assertIsNone(r.content)
-        self.assertIsInstance(r.error, requests.exceptions.Timeout)
+         assert isinstance(r.error, requests.exceptions.Timeout)
 
 
 if __name__ == '__main__':
