commit 256c86f8f7deb5375c38b6cc55c3d54d0366d283
Author: Kenneth Reitz <me@kennethreitz.com>
Date:   Tue Aug 23 23:52:43 2011 -0400

    moving curl into utils
    #139

diff --git a/requests/models.py b/requests/models.py
index 0d90ea92..5ff9eb48 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -383,41 +383,6 @@ class Request(object):
 
         return self.sent
 
-    @property
-    def curl(self):
-        """Creates a curl command from the request"""
-
-        #TODO - Auth with User names and accounts
-        #TODO - Files
-        #TODO - OAuth
-        #TODO - Cookies?
-
-        #: -L/--location - if there is a redirect, redo request on the new place
-        curl_cmd = 'curl -L '
-
-        #: -H/--header - Extra header to use when getting a web page
-        header = ''
-        if self.headers:
-            header = header.join(['-H "' + key + ':' + value + '" ' for key, value in self.headers.iteritems()])
-
-        if self.method.upper() == 'HEAD':
-            #: -I/--head - fetch headers only
-            method_opt = '-I '
-        else:
-            #: -X/--request - specify request method
-            method_opt = '-X %s ' % self.method.upper()
-
-        data = ''
-        if self.method in ('PUT', 'POST', 'PATCH'):
-            #: -d/--data - send specified data in post request.
-            if isinstance(self.data, (list, tuple)):
-                data = data.join(['-d ' + key + '=' + value + ' ' for key, value in self.data])
-            elif self._enc_data is not None:
-                data = '-d ' + self._enc_data + ' '
-
-        #: Params handled in _build_url
-        return curl_cmd + method_opt + data + header + '"' + self._build_url() + '"'
-
 
 class Response(object):
     """The core :class:`Response <Response>` object. All
diff --git a/requests/utils.py b/requests/utils.py
index 2b55a164..51ec4bfe 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -165,4 +165,39 @@ def decode_gzip(content):
     :param content: bytestring to gzip-decode.
     """
 
-    return zlib.decompress(content, 16+zlib.MAX_WBITS)
\ No newline at end of file
+    return zlib.decompress(content, 16+zlib.MAX_WBITS)
+
+
+def curl_from_request(request):
+    """Creates a curl command from the request."""
+
+    #TODO - Auth with User names and accounts
+    #TODO - Files
+    #TODO - OAuth
+    #TODO - Cookies?
+
+    #: -L/--location - if there is a redirect, redo request on the new place
+    curl_cmd = 'curl -L '
+
+    #: -H/--header - Extra header to use when getting a web page
+    header = ''
+    if request.headers:
+        header = header.join(['-H "' + key + ':' + value + '" ' for key, value in request.headers.iteritems()])
+
+    if request.method.upper() == 'HEAD':
+        #: -I/--head - fetch headers only
+        method_opt = '-I '
+    else:
+        #: -X/--request - specify request method
+        method_opt = '-X %s ' % request.method.upper()
+
+    data = ''
+    if request.method in ('PUT', 'POST', 'PATCH'):
+        #: -d/--data - send specified data in post request.
+        if isinstance(request.data, (list, tuple)):
+            data = data.join(['-d ' + key + '=' + value + ' ' for key, value in request.data])
+        elif request._enc_data is not None:
+            data = '-d ' + request._enc_data + ' '
+
+    #: Params handled in _build_url
+    return curl_cmd + method_opt + data + header + '"' + request._build_url() + '"'
\ No newline at end of file
