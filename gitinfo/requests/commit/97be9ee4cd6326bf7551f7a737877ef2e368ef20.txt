commit 97be9ee4cd6326bf7551f7a737877ef2e368ef20
Author: Ben <mastahyeti@gmail.com>
Date:   Tue Jan 17 15:20:52 2012 -0600

    The async.send method wasn't really doing anything useful. It was just calling the r.send() method of the Request object 'r'. It took an optional kwarg pools, and assigned it to r._pools which isn't used by anything. This situation was eaither broken or not fully implemented yet. I modified async.map to call r.send rather than send(r) and then modified async.send to actually make use of the pool that it is passed.

diff --git a/requests/async.py b/requests/async.py
index 36f6c5a9..53aa8418 100644
--- a/requests/async.py
+++ b/requests/async.py
@@ -52,7 +52,7 @@ def send(r, pool=None):
     and can hence limit concurrency."""
 
     if pool != None:
-        print pool.full()
+
         return pool.spawn(r.send)
 
     return gevent.spawn(r.send)
