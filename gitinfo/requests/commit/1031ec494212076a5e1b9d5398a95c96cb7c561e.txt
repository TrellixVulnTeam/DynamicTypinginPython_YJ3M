commit 1031ec494212076a5e1b9d5398a95c96cb7c561e
Author: Joseph McCullough <joseph@vertstudios.com>
Date:   Tue Nov 8 12:10:06 2011 -0600

    Reverted GET example back to Github.

diff --git a/docs/user/quickstart.rst b/docs/user/quickstart.rst
index 4bebe95c..69e86c40 100644
--- a/docs/user/quickstart.rst
+++ b/docs/user/quickstart.rst
@@ -23,22 +23,21 @@ Make a GET Request
 
 Making a standard request with Requests is very simple.
 
-Let's use httpbin to test our requests. ::
+Let's get GitHub's public timeline ::
 
-    r = requests.get("http://httpbin.org/get")
+    r = requests.get('https://github.com/timeline.json')
 
 Now, we have a :class:`Response` object called ``r``. We can get all the
 information we need from this.
 
 
-
 Response Content
 ----------------
 
 We can read the content of the server's response::
 
     >>> r.content
-    '{\n  "url": "http://httpbin.org/get", \n  "headers": ...
+    '[{"repository":{"open_issues":0,"url":"https://github.com/...
 
 
 Make a POST Request
@@ -55,12 +54,11 @@ argument to the requests.post method with your dictionary ::
     >>> dataDict = {"key1":"value1", "key2":"value2"}
     >>> r = requests.post("http://httpbin.org/post", data=dataDict)
     >>> r.content
-    '{\n  "origin": "::ffff:YourIpAddress", \n  "files": {}, \n  "form": {\n    "key2": "value2", \n    "key1": "value1"\n  }, 
+    '{\n  "origin": "::ffff:YourIpAddress", \n  "files": {}, \n  "form": {\n    "key2": "value2", \n    "key1": "value1"\n  }, ...
 
 Note the data= argument is equivalent to -d in cURL scripts. dataDict will
 be form-encoded. 
 
-
 Response Status Codes
 ---------------------
 
@@ -186,4 +184,3 @@ Requests supports it!::
 -----------------------
 
 Ready for more? Check out the :ref:`advanced <advanced>` section.
-
