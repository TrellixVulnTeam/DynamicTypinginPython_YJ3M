commit 319b570f8212c5681326782764e4a0e361e95ea5
Author: Kenneth Reitz <me@kennethreitz.com>
Date:   Sun May 15 13:13:41 2011 -0400

    much better index

diff --git a/docs/index.rst b/docs/index.rst
index 1f315c79..86020d1d 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -10,9 +10,17 @@ Release |version|.
 
 Requests is an :ref:`ISC Licensed <isc>` HTTP library, written in Python, for human beings.
 
-Most existing Python modules for sending HTTP requests are extremely verbose and cumbersome. Python's builtin :py:class:`urllib2` module provides all the HTTP capabilities required, but the api is thoroughly **broken**. It reqires an *enormous* amount of work (even method overrides) to perform the simplest of tasks.
+Most existing Python modules for sending HTTP requests are extremely verbose
+and cumbersome. Python's builtin :py:class:`urllib2` module provides all the
+HTTP capabilities required, but the api is thoroughly **broken**. It reqires an
+*enormous* amount of work (even method overrides) to perform the simplest of
+tasks.
 
-Enter Requests. Requests allow you to send **GET**, **HEAD**, **PUT**, **POST**, and **DELETE** HTTP requests. You can add headers, form data, miltipart files, and parameters with simple Python dictionaries, and access the response data in the same way. It's powered by :py:class:`urllib2`, but it does all the hard work and crazy hacks for you.
+Enter Requests. Requests allow you to send **GET**, **HEAD**, **PUT**,
+**POST**, and **DELETE** HTTP requests. You can add headers, form data,
+multipart files, and parameters with simple Python dictionaries, and access the
+response data in the same way. It's powered by :py:class:`urllib2`, but it does
+all the hard work and crazy hacks for you.
 
 
 It's Simple
@@ -20,10 +28,6 @@ It's Simple
 
 How Simple?
 
-
-requests
-~~~~~~~~
-
 ::
 
     >>> import requests
@@ -31,27 +35,54 @@ requests
     >>> r.headers['content-encoding']
     json
 
+See `the same code, without Requests <http://gist.github.com/some-gist>`
 
-urllib2
-~~~~~~~
 
-::
+Testimonals
+~~~~~~~~~~~
+
+**Daniel Greenfeld**
+    Nuked a 1200 LOC spaghetti code library with 10 lines of code thanks to @kennethreitz's request library. Today has been AWESOME.
 
-    # complicated.
+**Kenny Meyers**
+     Python HTTP: When in doubt, or when not in doubt, use Requests. Beautiful, simple, Pythonic.
 
 
-I recommend you start with :ref:`Installation <install>`.
+User Guide
+~~~~~~~~~~
 
+This part of the documentation, which is mostly prose, begins with some background information about Requests, then focuses on step-by-step instructions for getting the most out of Requests.
 
+.. toctree::
+   :maxdepth: 2
 
+   guide
 
 
+API Documentation
+~~~~~~~~~~~~~~~~~
 
-Contents:
+If you are looking for information on a specific function, class or method,
+this part of the documentation is for you.
 
 .. toctree::
    :maxdepth: 2
 
+   api
+
+
+Developer Documentation
+~~~~~~~~~~~~~~~~~~~~~~~
+
+If you want to contribute to the project, this part of the documentation is for
+you.
+
+.. toctree::
+   :maxdepth: 2
+
+   api
+
+
 Indices and tables
 ==================
 
