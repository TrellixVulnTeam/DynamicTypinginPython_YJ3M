commit 5e94f38001fdaccda924aab9e5f0ffc064492129
Author: Viktor Haag <Viktor.Haag@Desire2Learn.com>
Date:   Fri May 24 14:01:30 2013 -0400

    - fixed func call syntax on lower to lower()
    - added test cases for trying to test GETS on mixed-case schemas

diff --git a/requests/adapters.py b/requests/adapters.py
index b4502796..b4f5bf6c 100644
--- a/requests/adapters.py
+++ b/requests/adapters.py
@@ -118,7 +118,7 @@ class HTTPAdapter(BaseAdapter):
         :param verify: Whether we should actually verify the certificate.
         :param cert: The SSL certificate to verify.
         """
-        if url.lower.startswith('https') and verify:
+        if url.lower().startswith('https') and verify:
 
             cert_loc = None
 
diff --git a/requests/sessions.py b/requests/sessions.py
index ccd76340..a55f84da 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -467,7 +467,7 @@ class Session(SessionRedirectMixin):
         """Returns the appropriate connnection adapter for the given URL."""
         for (prefix, adapter) in self.adapters.items():
 
-            if url.lower.startswith(prefix):
+            if url.lower().startswith(prefix):
                 return adapter
 
         # Nothing matches :-/
diff --git a/test_requests.py b/test_requests.py
index 4a4831e5..36006008 100755
--- a/test_requests.py
+++ b/test_requests.py
@@ -87,6 +87,27 @@ class RequestsTestCase(unittest.TestCase):
         self.assertEqual(request.url,
             "http://example.com/path?key=value&a=b#fragment")
 
+    def test_mixed_case_scheme_acceptable(self):
+        s = requests.Session()
+        r = requests.Request('GET', 'HTTP://httbin.org/get')
+        r = s.send(r.prepare())
+        self.assertEqual(r.status_code,200)
+        r = requests.Request('GET', 'hTTp://httbin.org/get')
+        r = s.send(r.prepare())
+        self.assertEqual(r.status_code,200)
+        r = requests.Request('GET', 'HttP://httbin.org/get')
+        r = s.send(r.prepare())
+        self.assertEqual(r.status_code,200)
+        r = requests.Request('GET', 'HTTPS://httbin.org/get')
+        r = s.send(r.prepare())
+        self.assertEqual(r.status_code,200)
+        r = requests.Request('GET', 'hTTps://httbin.org/get')
+        r = s.send(r.prepare())
+        self.assertEqual(r.status_code,200)
+        r = requests.Request('GET', 'HttPs://httbin.org/get')
+        r = s.send(r.prepare())
+        self.assertEqual(r.status_code,200)
+
     def test_HTTP_200_OK_GET_ALTERNATIVE(self):
         r = requests.Request('GET', httpbin('get'))
         s = requests.Session()
