commit 6a8a480d6c535e8fd52526875296576c5309203c
Author: Ryan Munro <ryan@submersible.io>
Date:   Wed Jan 20 10:48:12 2016 -0800

    Review changes to TooManyRedirect exception with response

diff --git a/requests/sessions.py b/requests/sessions.py
index ba09612e..c177c602 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -110,11 +110,7 @@ class SessionRedirectMixin(object):
                 resp.raw.read(decode_content=False)
 
             if i >= self.max_redirects:
-                raise TooManyRedirects(
-                    'Exceeded %s redirects.' % self.max_redirects,
-                    request=prepared_request,
-                    response=resp
-                )
+                raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects, response=resp)
 
             # Release the connection back into the pool.
             resp.close()
diff --git a/test_requests.py b/test_requests.py
index 95ccdaca..ef233a0f 100755
--- a/test_requests.py
+++ b/test_requests.py
@@ -24,7 +24,7 @@ from requests.cookies import cookiejar_from_dict, morsel_to_cookie
 from requests.exceptions import (ConnectionError, ConnectTimeout,
                                  InvalidSchema, InvalidURL, MissingSchema,
                                  ReadTimeout, Timeout, RetryError, TooManyRedirects)
-from requests.models import PreparedRequest, DEFAULT_REDIRECT_LIMIT
+from requests.models import PreparedRequest
 from requests.structures import CaseInsensitiveDict
 from requests.sessions import SessionRedirectMixin
 from requests.models import urlencode
@@ -192,10 +192,11 @@ class TestRequests(object):
         try:
             requests.get(httpbin('redirect', '50'))
         except TooManyRedirects as e:
-            assert e.request is not None
-            assert len(e.response.history) == DEFAULT_REDIRECT_LIMIT
+            assert '/relative-redirect/20' in e.request.url
+            assert e.request.url == e.response.url
+            assert len(e.response.history) == 30
         else:
-            assert False
+            pytest.fail()
 
     def test_HTTP_302_TOO_MANY_REDIRECTS_WITH_PARAMS(self, httpbin):
         s = requests.session()
@@ -203,10 +204,11 @@ class TestRequests(object):
         try:
             s.get(httpbin('redirect', '50'))
         except TooManyRedirects as e:
-            assert e.request is not None
+            assert '/relative-redirect/45' in e.request.url
+            assert e.request.url == e.response.url
             assert len(e.response.history) == 5
         else:
-            assert False
+            pytest.fail()
 
     # def test_HTTP_302_ALLOW_REDIRECT_POST(self):
     #     r = requests.post(httpbin('status', '302'), data={'some': 'data'})
