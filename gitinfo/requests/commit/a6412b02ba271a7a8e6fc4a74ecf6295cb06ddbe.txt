commit a6412b02ba271a7a8e6fc4a74ecf6295cb06ddbe
Author: Nick Hatch <nhatch@barackobama.com>
Date:   Sun Dec 11 01:55:04 2011 -0600

    Fix spelling errors, typos.

diff --git a/docs/_themes/README.rst b/docs/_themes/README.rst
index 8648482a..2e875d46 100644
--- a/docs/_themes/README.rst
+++ b/docs/_themes/README.rst
@@ -2,7 +2,7 @@ krTheme Sphinx Style
 ====================
 
 This repository contains sphinx styles Kenneth Reitz uses in most of 
-his projects. It is a drivative of Mitsuhiko's themes for Flask and Flask related
+his projects. It is a derivative of Mitsuhiko's themes for Flask and Flask related
 projects.  To use this style in your Sphinx documentation, follow
 this guide:
 
diff --git a/docs/index.rst b/docs/index.rst
index b2851e47..1dc8a0ca 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -38,7 +38,7 @@ Testimonials
 `Twitter, Inc <http://twitter.com>`_,
 `Readability <http://readability.com>`_, and
 Federal US Institutions
-use Requests internally. It has been installed over 45,000 times from PyPi.
+use Requests internally. It has been installed over 45,000 times from PyPI.
 
 **Armin Ronacher**
     Requests is the perfect example how beautiful an API can be with the
diff --git a/docs/user/advanced.rst b/docs/user/advanced.rst
index 87b180c1..099dabd7 100644
--- a/docs/user/advanced.rst
+++ b/docs/user/advanced.rst
@@ -10,7 +10,7 @@ Session Objects
 ---------------
 
 The Session object allows you to persist certain parameters across
-requests. It also perstists cookies across all requests made from the
+requests. It also persists cookies across all requests made from the
 Session instance.
 
 A session object has all the methods of the main Requests API.
@@ -49,7 +49,7 @@ All values that are contained within a session are directly available to you. Se
 Body Content Workflow
 ----------------------
 
-By default, When you make a request, the body of the response isn't downloaded immediately. The response headers are downloaded when you make a request, but the content isn't downloaded until you access the :class:`Response.content` attribute.
+By default, when you make a request, the body of the response isn't downloaded immediately. The response headers are downloaded when you make a request, but the content isn't downloaded until you access the :class:`Response.content` attribute.
 
 Let's walk through it::
 
@@ -91,8 +91,8 @@ If you'd like to disable keep-alive, you can simply set the ``keep_alive`` confi
 Asynchronous Requests
 ----------------------
 
-Requests has first-class support for concurrent requests, powered
-by gevent. This allows you to send a bunch of HTTP requests at the same
+Requests has first-class support for concurrent requests, powered by gevent.
+This allows you to send a bunch of HTTP requests at the same time.
 
 First, let's import the async module. Heads up â€” if you don't have
 `gevent <http://pypi.python.org/pypi/gevent>`_ this will fail::
@@ -231,7 +231,7 @@ Let's pretend that we have a web service that will only respond if the
         def __init__(self, username):
             # setup any auth-related data here
             self.username = username
-        
+
         def __call__(self, r):
             # modify and return the request
             r.headers['X-Pizza'] = self.username
diff --git a/docs/user/quickstart.rst b/docs/user/quickstart.rst
index c9d9d53c..34741174 100644
--- a/docs/user/quickstart.rst
+++ b/docs/user/quickstart.rst
@@ -300,7 +300,7 @@ establishing OAuth connections. Documentation and examples can be found on the r
 Redirection and History
 -----------------------
 
-Requests will automatically perform location redirection while using impodotent methods.
+Requests will automatically perform location redirection while using idempotent methods.
 
 GitHub redirects all HTTP requests to HTTPS. Let's see what happens::
 
diff --git a/requests/api.py b/requests/api.py
index 0b124e03..82db6cf4 100644
--- a/requests/api.py
+++ b/requests/api.py
@@ -39,7 +39,7 @@ def request(method, url,
     :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
     :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
     :param files: (optional) Dictionary of 'name': file-like-objects (or {'name': ('filename', fileobj)}) for multipart encoding upload.
-    :param auth: (optional) Auth typle to enable Basic/Digest/Custom HTTP Auth.
+    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
     :param timeout: (optional) Float describing the timeout of the request.
     :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.
     :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
diff --git a/requests/defaults.py b/requests/defaults.py
index 7a5a3fb8..e8db67ab 100644
--- a/requests/defaults.py
+++ b/requests/defaults.py
@@ -11,7 +11,7 @@ Configurations:
 :base_headers: Default HTTP headers.
 :verbose: Stream to write request logging to.
 :timeout: Seconds until request timeout.
-:max_redirects: Maximum njumber of redirects allowed within a request.
+:max_redirects: Maximum number of redirects allowed within a request.
 :decode_unicode: Decode unicode responses automatically?
 :keep_alive: Reuse HTTP Connections?
 :max_retries: The number of times a request should be retried in the event of a connection failure.
diff --git a/requests/exceptions.py b/requests/exceptions.py
index d20a95cd..d0f8f39a 100644
--- a/requests/exceptions.py
+++ b/requests/exceptions.py
@@ -13,10 +13,10 @@ class RequestException(Exception):
     request."""
 
 class HTTPError(RequestException):
-    """An HTTP error occured."""
+    """An HTTP error occurred."""
 
 class ConnectionError(RequestException):
-    """A Connection error occured."""
+    """A Connection error occurred."""
 
 class Timeout(RequestException):
     """The request timed out."""
diff --git a/requests/models.py b/requests/models.py
index dadaeffb..f1a2d49b 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -151,7 +151,7 @@ class Request(object):
 
             if resp:
 
-                # Fallback to None if there's no staus_code, for whatever reason.
+                # Fallback to None if there's no status_code, for whatever reason.
                 response.status_code = getattr(resp, 'status', None)
 
                 # Make headers case-insensitive.
@@ -171,7 +171,7 @@ class Request(object):
                 # Save cookies in Response.
                 response.cookies = cookies
 
-            # Save original resopnse for later.
+            # Save original response for later.
             response.raw = resp
 
             if is_error:
diff --git a/requests/sessions.py b/requests/sessions.py
index 247aa183..20d22613 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -123,7 +123,7 @@ class Session(object):
         :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.
         :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.
         :param files: (optional) Dictionary of 'filename': file-like-objects for multipart encoding upload.
-        :param auth: (optional) Auth typle to enable Basic/Digest/Custom HTTP Auth.
+        :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.
         :param timeout: (optional) Float describing the timeout of the request.
         :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.
         :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.
diff --git a/requests/utils.py b/requests/utils.py
index f31cad88..6d7b8686 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -4,7 +4,7 @@
 requests.utils
 ~~~~~~~~~~~~~~
 
-This module provides utlity functions that are used within Requests
+This module provides utility functions that are used within Requests
 that are also useful for external consumption.
 
 """
@@ -374,7 +374,7 @@ def requote_path(path):
     """Re-quote the given URL path component.
 
     This function passes the given path through an unquote/quote cycle to
-    ensure that it is fully and consistenty quoted.
+    ensure that it is fully and consistently quoted.
     """
     parts = path.split("/")
     parts = (urllib.quote(urllib.unquote(part), safe="") for part in parts)
