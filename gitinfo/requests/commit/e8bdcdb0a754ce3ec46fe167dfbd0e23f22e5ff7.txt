commit e8bdcdb0a754ce3ec46fe167dfbd0e23f22e5ff7
Author: Ian Cordasco <graffatcolmingov@gmail.com>
Date:   Wed Dec 4 06:45:18 2013 -0600

    Address feedback from #1729
    
    - Make the PreparedRequest's cookie jar an implementation detail

diff --git a/requests/auth.py b/requests/auth.py
index ba979b59..6664cd80 100644
--- a/requests/auth.py
+++ b/requests/auth.py
@@ -170,8 +170,8 @@ class HTTPDigestAuth(AuthBase):
             r.content
             r.raw.release_conn()
             prep = r.request.copy()
-            extract_cookies_to_jar(prep.cookies, r.request, r.raw)
-            prep.prepare_cookies(prep.cookies)
+            extract_cookies_to_jar(prep._cookies, r.request, r.raw)
+            prep.prepare_cookies(prep._cookies)
 
             prep.headers['Authorization'] = self.build_digest_header(
                 prep.method, prep.url)
diff --git a/requests/models.py b/requests/models.py
index 31d120e8..34dce181 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -270,9 +270,9 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         self.url = None
         #: dictionary of HTTP headers.
         self.headers = None
-        #: The `CookieJar` used to create the Cookie header will be stored here
-        #: after prepare_cookies is called
-        self.cookies = None
+        # The `CookieJar` used to create the Cookie header will be stored here
+        # after prepare_cookies is called
+        self._cookies = None
         #: request body to send to the server.
         self.body = None
         #: dictionary of callback hooks, for internal usage.
@@ -302,7 +302,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         p.method = self.method
         p.url = self.url
         p.headers = self.headers.copy()
-        p.cookies = self.cookies.copy()
+        p._cookies = self._cookies.copy()
         p.body = self.body
         p.hooks = self.hooks
         return p
@@ -478,11 +478,11 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         """Prepares the given HTTP cookie data."""
 
         if isinstance(cookies, cookielib.CookieJar):
-            self.cookies = cookies
+            self._cookies = cookies
         else:
-            self.cookies = cookiejar_from_dict(cookies)
+            self._cookies = cookiejar_from_dict(cookies)
 
-        cookie_header = get_cookie_header(self.cookies, self)
+        cookie_header = get_cookie_header(self._cookies, self)
         if cookie_header is not None:
             self.headers['Cookie'] = cookie_header
 
diff --git a/requests/sessions.py b/requests/sessions.py
index 52adb7a0..06e17d4b 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -153,8 +153,9 @@ class SessionRedirectMixin(object):
             except KeyError:
                 pass
 
-            extract_cookies_to_jar(prepared_request.cookies, prepared_request, resp.raw)
-            prepared_request.prepare_cookies(prepared_request.cookies)
+            extract_cookies_to_jar(prepared_request._cookies,
+                                   prepared_request, resp.raw)
+            prepared_request.prepare_cookies(prepared_request._cookies)
 
             resp = self.send(
                 prepared_request,
