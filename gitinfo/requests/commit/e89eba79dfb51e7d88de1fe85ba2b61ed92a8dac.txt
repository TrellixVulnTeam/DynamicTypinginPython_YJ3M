commit e89eba79dfb51e7d88de1fe85ba2b61ed92a8dac
Author: Kenneth Reitz <me@kennethreitz.com>
Date:   Mon Feb 14 09:53:56 2011 -0500

    added response.url support for 301's and the like.

diff --git a/README.rst b/README.rst
index 9b3cfb68..1c0289a1 100644
--- a/README.rst
+++ b/README.rst
@@ -88,6 +88,9 @@ All request functions return a Response object (see below).
     Request.content:
         (Bytes) Received Content
 
+    Request.url
+        (String) URL of response. Useful for detecting redirects. 
+
 
 **HTTP Authentication Registry:**
 
diff --git a/requests/core.py b/requests/core.py
index 5d9e5b74..71f69638 100644
--- a/requests/core.py
+++ b/requests/core.py
@@ -137,8 +137,9 @@ class Request(object):
 					resp = opener(req)
 					self.response.status_code = resp.code
 					self.response.headers = resp.info().dict
-					if self.method.lower() == 'get':
+					if self.method == 'GET':
 						self.response.content = resp.read()
+					self.response.url = resp.url
 
 					success = True
 				except urllib2.HTTPError as why:
@@ -172,6 +173,7 @@ class Request(object):
 					self.response.status_code = resp.code
 					self.response.headers = resp.info().dict
 					self.response.content = resp.read()
+					self.response.url = resp.url
 
 					success = True
 
@@ -208,6 +210,7 @@ class Request(object):
 					self.response.status_code = resp.code
 					self.response.headers = resp.info().dict
 					self.response.content = resp.read()
+					self.response.url = resp.url
 
 					success = True
 
@@ -230,6 +233,7 @@ class Response(object):
 		self.content = None
 		self.status_code = None
 		self.headers = dict()
+		self.url = None
 		
 	def __repr__(self):
 		return '<Response [%s]>' % (self.status_code)
