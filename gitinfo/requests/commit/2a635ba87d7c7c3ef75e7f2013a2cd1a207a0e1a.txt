commit 2a635ba87d7c7c3ef75e7f2013a2cd1a207a0e1a
Author: Alexandre Sieira <alexandre.sieira@gmail.com>
Date:   Mon Oct 5 11:18:23 2015 -0300

    Update default user-agent (#2785)
    
    * Updated default user agent so that it includes only the requests
    version;
    * Added PyCharm / IDEA project directory to `.gitignore`.

diff --git a/.gitignore b/.gitignore
index 9fcc6c3d..ff9256c6 100644
--- a/.gitignore
+++ b/.gitignore
@@ -15,6 +15,7 @@ requests.egg-info/
 *.swp
 *.egg
 env/
+.idea/
 
 .workon
 
diff --git a/requests/utils.py b/requests/utils.py
index 3d4c7945..0bac9a44 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -552,33 +552,7 @@ def select_proxy(url, proxies):
 
 def default_user_agent(name="python-requests"):
     """Return a string representing the default user agent."""
-    _implementation = platform.python_implementation()
-
-    if _implementation == 'CPython':
-        _implementation_version = platform.python_version()
-    elif _implementation == 'PyPy':
-        _implementation_version = '%s.%s.%s' % (sys.pypy_version_info.major,
-                                                sys.pypy_version_info.minor,
-                                                sys.pypy_version_info.micro)
-        if sys.pypy_version_info.releaselevel != 'final':
-            _implementation_version = ''.join([_implementation_version, sys.pypy_version_info.releaselevel])
-    elif _implementation == 'Jython':
-        _implementation_version = platform.python_version()  # Complete Guess
-    elif _implementation == 'IronPython':
-        _implementation_version = platform.python_version()  # Complete Guess
-    else:
-        _implementation_version = 'Unknown'
-
-    try:
-        p_system = platform.system()
-        p_release = platform.release()
-    except IOError:
-        p_system = 'Unknown'
-        p_release = 'Unknown'
-
-    return " ".join(['%s/%s' % (name, __version__),
-                     '%s/%s' % (_implementation, _implementation_version),
-                     '%s/%s' % (p_system, p_release)])
+    return '%s/%s' % (name, __version__)
 
 
 def default_headers():
