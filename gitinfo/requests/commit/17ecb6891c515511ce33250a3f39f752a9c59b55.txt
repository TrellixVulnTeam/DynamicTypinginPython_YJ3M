commit 17ecb6891c515511ce33250a3f39f752a9c59b55
Author: Sorin Sbarnea <sorin.sbarnea@gmail.com>
Date:   Wed Apr 10 16:15:28 2013 +0100

    * Documented the logging, requested in #1297
    * Added build directory and *.egg to .gitignore
    * Added sphinx as setup requirement in order to be able to build documentation with `pyhton setup.py build_sphinx`
    
    modified:   .gitignore
    modified:   docs/api.rst
    modified:   setup.py

diff --git a/.gitignore b/.gitignore
index a88418db..e1ea2a60 100644
--- a/.gitignore
+++ b/.gitignore
@@ -7,10 +7,12 @@ pylint.txt
 toy.py
 violations.pyflakes.txt
 cover/
+build/
 docs/_build
 requests.egg-info/
 *.pyc
 *.swp
+*.egg
 env/
 
 .workon
diff --git a/docs/api.rst b/docs/api.rst
index 771d7a82..dce19d3e 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -165,9 +165,23 @@ API Changes
 
   ::
 
-      # Verbosity should now be configured with logging
-      my_config = {'verbose': sys.stderr}
-      requests.get('http://httpbin.org/headers', config=my_config)  # bad!
+      import requests
+      import logging
+
+      # these two lines enable debugging at httplib level (requests->urllib3->httplib)
+      # you will see the REQUEST, including HEADERS and DATA, and RESPONSE with HEADERS but without DATA.
+      # the only thing missing will be the response.body which is not logged.
+      import httplib
+      httplib.HTTPConnection.debuglevel = 1
+      
+      logging.basicConfig() # you need to initialize logging, otherwise you will not see anything from requests
+      logging.getLogger().setLevel(logging.DEBUG)
+      requests_log = logging.getLogger("requests")
+      requests_log.setLevel(logging.DEBUG)
+      requests_log.propagate = True
+      
+      requests.get('http://httpbin.org/headers')
+
 
 
 Licensing
diff --git a/setup.py b/setup.py
index 52dfe025..64e305bc 100755
--- a/setup.py
+++ b/setup.py
@@ -39,6 +39,7 @@ setup(
     package_dir={'requests': 'requests'},
     include_package_data=True,
     install_requires=requires,
+    setup_requires=['sphinx'],
     license=open('LICENSE').read(),
     zip_safe=False,
     classifiers=(
