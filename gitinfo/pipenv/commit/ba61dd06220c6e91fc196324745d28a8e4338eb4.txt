commit ba61dd06220c6e91fc196324745d28a8e4338eb4
Author: Ulrik Johansson <ulrik.johansson@blocket.se>
Date:   Wed Sep 19 07:40:05 2018 +0200

    Use less ambiguous env var name for pyup api key

diff --git a/docs/advanced.rst b/docs/advanced.rst
index a3f044cb..f2fdee05 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -241,7 +241,7 @@ Example::
    client usage.
 
    You can also use your own safety API key by setting the
-   environment variable ``PIPENV_CHECK_KEY``.
+   environment variable ``PIPENV_PYUP_API_KEY``.
 
 
 â˜¤ Community Integrations
diff --git a/news/2825.feature b/news/2825.feature
index 9dcbf4ff..ba112a58 100644
--- a/news/2825.feature
+++ b/news/2825.feature
@@ -1,2 +1,2 @@
-Added environment variable `PIPENV_CHECK_KEY` to add ability
+Added environment variable `PIPENV_PYUP_API_KEY` to add ability
 to override the bundled pyup.io API key.
diff --git a/pipenv/core.py b/pipenv/core.py
index 830834a4..91633aed 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -55,7 +55,7 @@ from .environments import (
     PIPENV_DONT_USE_PYENV,
     SESSION_IS_INTERACTIVE,
     PIPENV_CACHE_DIR,
-    PIPENV_CHECK_KEY,
+    PIPENV_PYUP_API_KEY,
 )
 
 # Packages that should be ignored later.
@@ -2277,7 +2277,7 @@ def do_check(
         ignored = ""
     c = delegator.run(
         '"{0}" {1} check --json --key={2} {3}'.format(
-            python, escape_grouped_arguments(path), PIPENV_CHECK_KEY, ignored
+            python, escape_grouped_arguments(path), PIPENV_PYUP_API_KEY, ignored
         )
     )
     try:
diff --git a/pipenv/environments.py b/pipenv/environments.py
index 6762709d..558bafd2 100644
--- a/pipenv/environments.py
+++ b/pipenv/environments.py
@@ -194,7 +194,7 @@ Default is to prompt the user for an answer if the current command line session
 if interactive.
 """
 
-PIPENV_CHECK_KEY = os.environ.get("PIPENV_CHECK_KEY", "1ab8d58f-5122e025-83674263-bc1e79e0")
+PIPENV_PYUP_API_KEY = os.environ.get("PIPENV_PYUP_API_KEY", "1ab8d58f-5122e025-83674263-bc1e79e0")
 
 # Internal, support running in a different Python from sys.executable.
 PIPENV_PYTHON = os.environ.get("PIPENV_PYTHON")
