commit 0e56fef36f25dd3b6994d7323e7a3948b48e59a5
Author: Dan Ryan <dan@danryan.co>
Date:   Mon May 27 13:00:14 2019 -0400

    Clean up env variable documentation
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/docs/advanced.rst b/docs/advanced.rst
index 710e6da3..bdd0d704 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -358,7 +358,9 @@ Pipenv supports creating custom shortcuts in the (optional) ``[scripts]`` sectio
 You can then run ``pipenv run <shortcut name>`` in your terminal to run the command in the
 context of your pipenv virtual environment even if you have not activated the pipenv shell first.
 
-For example, in your Pipfile::
+For example, in your Pipfile:
+
+.. code-block:: toml
 
     [scripts]
     printspam = "python -c \"print('I am a silly example, no one would need to do this')\""
@@ -369,18 +371,25 @@ And then in your terminal::
     I am a silly example, no one would need to do this
 
 Commands that expect arguments will also work.
-For example::
+For example:
 
+.. code-block:: toml
     [scripts]
     echospam = "echo I am really a very silly example"
 
+::
+
     $ pipenv run echospam "indeed"
     I am really a very silly example indeed
 
 â˜¤ Support for Environment Variables
 -----------------------------------
 
-Pipenv supports the usage of environment variables in values, only in the ``[[source]]`` section. For example::
+Pipenv supports the usage of environment variables in place of authentication fragments
+in your Pipfile. These will only be parsed if they are present in the ``[[source]]``
+section. For example:
+
+.. code-block:: toml
 
     [[source]]
     url = "https://${PYPI_USERNAME}:${PYPI_PASSWORD}@my_private_repo.example.com/simple"
@@ -394,7 +403,8 @@ Pipenv supports the usage of environment variables in values, only in the ``[[so
     maya = {version="*", index="pypi"}
     records = "*"
 
-Environment variables is better specified as ``${MY_ENVAR}`` or ``$MY_ENVAR``.
+Environment variables may be specified as ``${MY_ENVAR}`` or ``$MY_ENVAR``.
+
 On Windows, ``%MY_ENVAR%`` is supported in addition to ``${MY_ENVAR}`` or ``$MY_ENVAR``.
 
 
