commit b32dd524d1041d2c1fc867f533ac314ff776ca24
Author: Rafael Pivato <rpivato@gmail.com>
Date:   Sun May 17 16:42:12 2020 -0300

    Safety help strings

diff --git a/pipenv/cli/command.py b/pipenv/cli/command.py
index 464fded0..9d405168 100644
--- a/pipenv/cli/command.py
+++ b/pipenv/cli/command.py
@@ -410,7 +410,8 @@ def run(state, command, args):
 
 
 @cli.command(
-    short_help="Checks for security vulnerabilities and against PEP 508 markers provided in Pipfile.",
+    short_help="Checks for PyUp Safety security vulnerabilities and against"
+               " PEP 508 markers provided in Pipfile.",
     context_settings=subcommand_context
 )
 @option(
@@ -423,22 +424,23 @@ def run(state, command, args):
     "--db",
     nargs=1,
     default=lambda: os.environ.get('PIPENV_SAFETY_DB', False),
-    help="Path to a local vulnerability database. Default: ENV PIPENV_SAFETY_DB or None",
+    help="Path to a local PyUp Safety vulnerabilities database."
+         " Default: ENV PIPENV_SAFETY_DB or None.",
 )
 @option(
     "--ignore",
     "-i",
     multiple=True,
-    help="Ignore specified vulnerability during safety checks.",
+    help="Ignore specified vulnerability during PyUp Safety checks.",
 )
 @option(
     "--output",
     type=Choice(["default", "json", "full-report", "bare"]),
     default="default",
-    help="Translates to --json, --full-report or --bare from safety check",
+    help="Translates to --json, --full-report or --bare from PyUp Safety check",
 )
 @option(
-    "--safety-key",
+    "--key",
     help="Safety API key from PyUp.io for scanning dependencies against a live"
          " vulnerabilities database. Leave blank for scanning against a"
          " database that only updates once a month.",
@@ -459,12 +461,12 @@ def check(
     style=False,
     ignore=None,
     output="default",
-    safety_key=None,
+    key=None,
     quiet=False,
     args=None,
     **kwargs
 ):
-    """Checks for security vulnerabilities and against PEP 508 markers provided in Pipfile."""
+    """Checks for PyUp Safety security vulnerabilities and against PEP 508 markers provided in Pipfile."""
     from ..core import do_check
 
     do_check(
@@ -475,7 +477,7 @@ def check(
         db=db,
         ignore=ignore,
         output=output,
-        safety_key=safety_key,
+        key=key,
         quiet=quiet,
         args=args,
         pypi_mirror=state.pypi_mirror,
diff --git a/pipenv/core.py b/pipenv/core.py
index fc137a1c..3d61bad1 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -2565,7 +2565,7 @@ def do_check(
     db=False,
     ignore=None,
     output="default",
-    safety_key=None,
+    key=None,
     quiet=False,
     args=None,
     pypi_mirror=None
@@ -2683,8 +2683,8 @@ def do_check(
         if not quiet and not environments.is_quiet():
             click.echo(crayons.normal("Using local database {}".format(db)))
         cmd.append("--db={0}".format(db))
-    if not db and (safety_key or PIPENV_PYUP_API_KEY):
-        cmd = cmd + ["--key={0}".format(safety_key or PIPENV_PYUP_API_KEY)]
+    elif key or PIPENV_PYUP_API_KEY:
+        cmd = cmd + ["--key={0}".format(key or PIPENV_PYUP_API_KEY)]
     if ignored:
         for cve in ignored:
             cmd += cve
