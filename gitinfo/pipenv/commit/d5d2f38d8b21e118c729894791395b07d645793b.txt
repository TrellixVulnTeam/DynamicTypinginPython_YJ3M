commit d5d2f38d8b21e118c729894791395b07d645793b
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Sep 1 20:04:39 2017 -0400

    phew
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/Pipfile.lock b/Pipfile.lock
index 609e0fea..a73d3226 100644
--- a/Pipfile.lock
+++ b/Pipfile.lock
@@ -145,7 +145,6 @@
         "snowballstemmer": {
             "version": "==1.2.1"
         },
-        "sphinx": "<=1.5.5",
         "toml": {
             "version": "==0.9.2"
         },
diff --git a/pipenv/cli.py b/pipenv/cli.py
index 2f2922a9..9cce4982 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -451,8 +451,14 @@ def do_lock(no_hashes=True):
         # Create the lockfile.
         lockfile = project._lockfile
 
+        # Cleanup lockfile.
+        for section in ('default', 'develop'):
+            for k, v in lockfile[section].copy().items():
+                if not hasattr(v, 'keys'):
+                    del lockfile[section][k]
+
         # Resolve dev-package dependencies.
-        deps = convert_deps_to_pip(project.parsed_pipfile.get('dev-packages', {}), r=False)
+        deps = convert_deps_to_pip(project.dev_packages, r=False)
         results = resolve_deps(deps, sources=project.sources)
 
         # Add develop dependencies to lockfile.
@@ -463,9 +469,8 @@ def do_lock(no_hashes=True):
         click.echo(crayons.yellow('Locking {0} dependencies...'.format(crayons.red('[packages]'))), err=True)
 
         # Resolve package dependencies.
-        deps = convert_deps_to_pip(project.parsed_pipfile.get('packages', {}), r=False)
+        deps = convert_deps_to_pip(project.packages, r=False)
         results = resolve_deps(deps, sources=project.sources)
-        print(results)
 
         # Add default dependencies to lockfile.
         for dep in results:
@@ -473,12 +478,14 @@ def do_lock(no_hashes=True):
             if not no_hashes:
                 lockfile['default'][dep['name']]['hash'] = dep['hash']
 
-        # Write out lockfile.
+
+        # Write out the lockfile.
         with open(project.lockfile_location, 'w') as f:
             json.dump(lockfile, f, indent=4, separators=(',', ': '), sort_keys=True)
             # Write newline at end of document. GH Issue #319.
             f.write('\n')
 
+
         click.echo('{0} Pipfile.lock{1}'.format(crayons.yellow('Updated'), crayons.yellow('!')), err=True)
 
     else:
diff --git a/pipenv/project.py b/pipenv/project.py
index 6d316bce..58ef8de7 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -196,6 +196,24 @@ class Project(object):
         with open(self.lockfile_location) as lock:
             return json.load(lock)
 
+    @property
+    def packages(self):
+        ps = {}
+        for k, v in self.parsed_pipfile.get('packages', {}).items():
+            # Skip VCS deps.
+            if not hasattr(v, 'keys'):
+                ps.update({k: v})
+        return ps
+
+    @property
+    def dev_packages(self):
+        ps = {}
+        for k, v in self.parsed_pipfile.get('dev-packages', {}).items():
+            # Skip VCS deps.
+            if not hasattr(v, 'keys'):
+                ps.update({k: v})
+        return ps
+
     def create_pipfile(self):
         data = {u'source': [{u'url': u'https://pypi.python.org/simple', u'verify_ssl': True}], u'packages': {}, 'dev-packages': {}}
         self.write_toml(data, 'Pipfile')
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 31ecbf2a..66df8d04 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -44,13 +44,19 @@ def resolve_deps(deps, sources=None):
 
     r = Resolver(constraints=constraints, repository=pypi)
     results = []
+
     for result in r.resolve():
 
         # VCS dependency.
         if result.link:
-            print(convert_deps_from_pip(result.link.url))
+            d = convert_deps_from_pip(result.link.url)
+            name = list(d.keys())[0]
+            dep = dict(name=name)
 
-        results.append({'name': result.name, 'version': str(result.specifier).replace('==', '')})
+            dep.update(d[name])
+            results.append(dep)
+        else:
+            results.append({'name': result.name, 'version': str(result.specifier).replace('==', '')})
 
     return results
 
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 49e0a021..4e1ec9e0 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -55,7 +55,7 @@ class TestUtils:
         # pinax = { git = 'git://github.com/pinax/pinax.git', ref = '1.4'}
         deps = {'pinax': {'git': 'git://github.com/pinax/pinax.git', 'ref': '1.4'}}
         deps = pipenv.utils.convert_deps_to_pip(deps, r=False)
-        assert deps[0] == 'git+git://github.com/pinax/pinax.git@1.4#egg=pinax'
+        assert deps[0] == '-e git+git://github.com/pinax/pinax.git@1.4#egg=pinax'
 
         # test hashes
         deps = {'FooProject': {'version': '==1.2', 'hash': 'sha256:2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824'}}
