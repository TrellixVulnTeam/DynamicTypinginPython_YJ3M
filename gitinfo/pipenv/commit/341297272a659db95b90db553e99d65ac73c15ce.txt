commit 341297272a659db95b90db553e99d65ac73c15ce
Author: Tzu-ping Chung <uranusjr@gmail.com>
Date:   Thu Jul 5 01:56:05 2018 +0800

    Need to be able to get venv path before creating

diff --git a/pipenv/core.py b/pipenv/core.py
index 442227ff..1a9bccce 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -902,9 +902,9 @@ def do_create_virtualenv(python=None, site_packages=False, pypi_mirror=None):
         sys.executable,
         "-m",
         "virtualenv",
-        project.virtualenv_location,
         "--prompt=({0})".format(project.name),
         "--python={0}".format(python),
+        project.get_location_for_virtualenv(),
     ]
 
     # Pass site-packages flag to virtualenv, if desiredâ€¦
diff --git a/pipenv/project.py b/pipenv/project.py
index 6139112e..df6b4112 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -237,12 +237,10 @@ class Project(object):
 
         return False
 
-    @classmethod
-    def _get_virtualenv_location(cls, name):
-        venv = get_workon_home() / name
-        if not venv.exists():
-            return ""
-        return "{0}".format(venv)
+    def get_location_for_virtualenv(self):
+        if self.is_venv_in_project():
+            return os.path.join(self.project_directory, ".venv")
+        return str(get_workon_home().joinpath(self.virtualenv_name))
 
     @classmethod
     def _sanitize(cls, name):
@@ -315,20 +313,10 @@ class Project(object):
         if PIPENV_VIRTUALENV:
             return PIPENV_VIRTUALENV
 
-        # Use cached version, if available.
-        if self._virtualenv_location:
-            return self._virtualenv_location
-
-        assert self.project_directory, "project not created"
-
-        # Default mode.
-        if not self.is_venv_in_project():
-            loc = self._get_virtualenv_location(self.virtualenv_name)
-        # The user wants the virtualenv in the project.
-        else:
-            loc = os.path.join(self.project_directory, ".venv")
-        self._virtualenv_location = loc
-        return loc
+        if not self._virtualenv_location:   # Use cached version, if available.
+            assert self.project_directory, "project not created"
+            self._virtualenv_location = self.get_location_for_virtualenv()
+        return self._virtualenv_location
 
     @property
     def virtualenv_src_location(self):
