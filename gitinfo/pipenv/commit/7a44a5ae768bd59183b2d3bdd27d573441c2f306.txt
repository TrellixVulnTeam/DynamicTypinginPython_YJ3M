commit 7a44a5ae768bd59183b2d3bdd27d573441c2f306
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Mar 14 08:32:14 2018 -0400

    more patterns
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/docs/advanced.rst b/docs/advanced.rst
index 84230240..bf31dfe8 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -476,5 +476,5 @@ To summarize:
 
 - For libraries, define **abstract dependencies** via ``install_requires`` in ``setup.py``. The decision of which version exactly to be installed and where to obtain that dependency is not yours to make!
 - For applications, define **dependencies and where to get them** in the `Pipfile` and use this file to update the set of **concrete dependencies** in ``Pipfile.lock``. This file defines a specific idempotent environment that is known to work for your project. The ``Pipfile.lock`` is your source of truth. The ``Pipfile`` is a convenience for you to create that lock-file, in that it allows you to still remain somewhat vague about the exact version of a dependency to be used. ``pipenv`` is there to help you define a working conflict-free set of specific dependency-versions, which would otherwise be a very tedious task.
-- Of course ``Pipfile`` and ``pipenv`` are still useful for library developers, as they can be used to define a development or test environment.
-- And of course there are projects for which the distinction between library and application isn't that clear. In that case, use ``install_requires`` alongside ``pipenv`` and ``Pipfile``.
+- Of course, ``Pipfile`` and ``pipenv`` are still useful for library developers, as they can be used to define a development or test environment.
+- And, of course, there are projects for which the distinction between library and application isn't that clear. In that case, use ``install_requires`` alongside ``pipenv`` and ``Pipfile``.
