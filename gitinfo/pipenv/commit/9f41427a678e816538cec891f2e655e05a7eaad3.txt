commit 9f41427a678e816538cec891f2e655e05a7eaad3
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sat Feb 17 08:20:18 2018 -0500

    pip hash mode compatibility for pipenv lock -r
    
    #1417
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/HISTORY.txt b/HISTORY.txt
index b2f9d0ad..4547262c 100644
--- a/HISTORY.txt
+++ b/HISTORY.txt
@@ -2,6 +2,7 @@
  - Add --system flag to $ pipenv check.
  - Removal of package name suggestions.
  - Support for [scripts] in Pipfile.
+ - Comment out invalid (to pip's hash checkign mode) packages from `$ pipenv lock -r`.
  - Updated patched version of dotenv.
 9.0.3:
  - v9.0.1.
diff --git a/pipenv/core.py b/pipenv/core.py
index fee6ab1a..4f8b51e3 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -718,7 +718,10 @@ def do_install_dependencies(
     dev=False, only=False, bare=False, requirements=False, allow_global=False,
     ignore_hashes=False, skip_lock=False, verbose=False, concurrent=True
 ):
-    """"Executes the install functionality."""
+    """"Executes the install functionality.
+
+    If requirements is True, simply spits out a requirements format to stdout.
+    """
 
     def cleanup_procs(procs, concurrent):
         for c in procs:
@@ -783,6 +786,19 @@ def do_install_dependencies(
         only=only
     )
     failed_deps_list = []
+
+    # Comment out packages that shouldn't be included in
+    # requirements.txt, for pip.
+
+    # Additional package selectors, specific to pip's --hash checking mode.
+    EXCLUDED_PACKAGES = list(BAD_PACKAGES) + ['-e .'] + ['-e file://'] + ['file://']
+    for l in (deps_list, dev_deps_list):
+        for i, dep in enumerate(l):
+            for bad_package in EXCLUDED_PACKAGES:
+                if dep[0].startswith(bad_package):
+                    l[i] = list(l[i])
+                    l[i][0] = '# {0}'.format(l[i][0])
+
     if requirements:
         # Output only default dependencies
         if not dev:
