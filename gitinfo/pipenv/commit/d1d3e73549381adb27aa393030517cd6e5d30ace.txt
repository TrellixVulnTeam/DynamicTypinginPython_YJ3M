commit d1d3e73549381adb27aa393030517cd6e5d30ace
Author: Dan Ryan <dan.ryan@sensus.com>
Date:   Fri Sep 8 19:01:57 2017 -0400

    Fix flake8 lint errors

diff --git a/pipenv/utils.py b/pipenv/utils.py
index 03afd54f..d727d775 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -73,7 +73,7 @@ def resolve_deps(deps, sources=None, verbose=False, hashes=False):
                 cleaned_releases = {}
                 for api_version, api_info in api_releases.items():
                     cleaned_releases[clean_pkg_version(api_version)] = api_info
-    
+
                 for release in cleaned_releases[version]:
                     collected_hashes.append(release['digests']['sha256'])
 
@@ -259,6 +259,7 @@ def is_vcs(pipfile_entry):
 
 
 def pep440_version(version):
+    """Normalize version to PEP 440 standards"""
     # use pip built in version parser
     return str(pip.index.parse_version(version))
 
@@ -351,14 +352,14 @@ def walk_up(bottom):
 
 
 def find_requirements(max_depth=3):
-        """Returns the path of a Pipfile in parent directories."""
-        i = 0
-        for c, d, f in walk_up(os.getcwd()):
-            i += 1
-
-            if i < max_depth:
-                if 'requirements.txt':
-                    r = os.path.join(c, 'requirements.txt')
-                    if os.path.isfile(r):
-                        return r
-        raise RuntimeError('No requirements.txt found!')
+    """Returns the path of a Pipfile in parent directories."""
+    i = 0
+    for c, d, f in walk_up(os.getcwd()):
+        i += 1
+
+        if i < max_depth:
+            if 'requirements.txt':
+                r = os.path.join(c, 'requirements.txt')
+                if os.path.isfile(r):
+                    return r
+    raise RuntimeError('No requirements.txt found!')
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index a5283f2b..b5cf939a 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -42,7 +42,7 @@ class TestPipenv():
         assert delegator.run('pipenv --python python').return_code == 0
         assert delegator.run('pipenv install Werkzeug').return_code == 0
         assert delegator.run('pipenv install pytest --dev').return_code == 0
-        assert delegator.run('pipenv install regex').return_code == 0 # failing before
+        assert delegator.run('pipenv install regex').return_code == 0  # failing before
         assert delegator.run('pipenv install git+https://github.com/requests/requests.git@v2.18.4#egg=requests').return_code == 0
         assert delegator.run('pipenv lock').return_code == 0
 
