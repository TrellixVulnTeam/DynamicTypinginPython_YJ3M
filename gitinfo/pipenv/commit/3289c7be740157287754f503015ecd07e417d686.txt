commit 3289c7be740157287754f503015ecd07e417d686
Author: Dan Ryan <dan@danryan.co>
Date:   Tue Jan 22 17:31:23 2019 -0500

    Update pythonfinder windows implementation
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/vendor/pythonfinder/models/mixins.py b/pipenv/vendor/pythonfinder/models/mixins.py
index 79a9d806..31c3c202 100644
--- a/pipenv/vendor/pythonfinder/models/mixins.py
+++ b/pipenv/vendor/pythonfinder/models/mixins.py
@@ -85,7 +85,7 @@ class BasePath(object):
             if key in self.__dict__:
                 del self.__dict__[key]
         self._children = {}
-        for key in self._pythons.keys():
+        for key in list(self._pythons.keys()):
             del self._pythons[key]
 
     @property
diff --git a/pipenv/vendor/pythonfinder/models/path.py b/pipenv/vendor/pythonfinder/models/path.py
index cedd8192..005a17b1 100644
--- a/pipenv/vendor/pythonfinder/models/path.py
+++ b/pipenv/vendor/pythonfinder/models/path.py
@@ -552,8 +552,8 @@ class PathEntry(BasePath):
     is_root = attr.ib(default=True, type=bool)
 
     def __del__(self):
-        if "children" in self.__dict__:
-            del self.__dict__["children"]
+        if "_children" in self.__dict__:
+            del self.__dict__["_children"]
         BasePath.__del__(self)
 
     def _filter_children(self):
diff --git a/pipenv/vendor/pythonfinder/models/python.py b/pipenv/vendor/pythonfinder/models/python.py
index ebded1b6..8900660e 100644
--- a/pipenv/vendor/pythonfinder/models/python.py
+++ b/pipenv/vendor/pythonfinder/models/python.py
@@ -316,7 +316,7 @@ class PythonFinder(BaseFinder, BasePath):
 class PythonVersion(object):
     major = attr.ib(default=0, type=int)
     minor = attr.ib(default=None)  # type: Optional[int]
-    patch = attr.ib(default=0)  # type: Optional[int]
+    patch = attr.ib(default=None)  # type: Optional[int]
     is_prerelease = attr.ib(default=False, type=bool)
     is_postrelease = attr.ib(default=False, type=bool)
     is_devrelease = attr.ib(default=False, type=bool)
@@ -339,7 +339,13 @@ class PythonVersion(object):
                 if not isinstance(executable, six.string_types):
                     executable = executable.as_posix()
                 instance_dict = self.parse_executable(executable)
-                self.update_metadata(instance_dict)
+                for k in instance_dict.keys():
+                    try:
+                        super(PythonVersion, self).__getattribute__(k)
+                    except AttributeError:
+                        continue
+                    else:
+                        setattr(self, k, instance_dict[k])
                 result = instance_dict.get(key)
         return result
 
diff --git a/pipenv/vendor/pythonfinder/models/windows.py b/pipenv/vendor/pythonfinder/models/windows.py
index 74be716a..5d446339 100644
--- a/pipenv/vendor/pythonfinder/models/windows.py
+++ b/pipenv/vendor/pythonfinder/models/windows.py
@@ -39,13 +39,13 @@ class WindowsFinder(BaseFinder):
     ):
         # type (...) -> List[PathEntry]
         version_matcher = operator.methodcaller(
-            "matches", major, minor, patch, pre, dev, arch, python_version=name
-        )
-        py_filter = filter(
-            None, filter(lambda c: version_matcher(c), self.version_list)
+            "matches", major, minor, patch, pre, dev, arch, python_name=name
         )
+        pythons = [
+            py for py in self.version_list if version_matcher(py)
+        ]
         version_sort = operator.attrgetter("version_sort")
-        return [c.comes_from for c in sorted(py_filter, key=version_sort, reverse=True)]
+        return [c.comes_from for c in sorted(pythons, key=version_sort, reverse=True)]
 
     def find_python_version(
         self,
