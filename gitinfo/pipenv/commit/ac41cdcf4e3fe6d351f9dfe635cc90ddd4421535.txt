commit ac41cdcf4e3fe6d351f9dfe635cc90ddd4421535
Author: Tzu-ping Chung <uranusjr@gmail.com>
Date:   Sat Jul 14 19:17:23 2018 +0800

    Remove duplicate and unused code

diff --git a/pipenv/core.py b/pipenv/core.py
index 40b2ef40..13793331 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -6,7 +6,6 @@ import sys
 import shutil
 import time
 import tempfile
-from glob import glob
 import json as simplejson
 import click
 import click_completion
@@ -51,8 +50,6 @@ from .environments import (
     PIPENV_SKIP_VALIDATION,
     PIPENV_HIDE_EMOJIS,
     PIPENV_INSTALL_TIMEOUT,
-    PYENV_ROOT,
-    PYENV_INSTALLED,
     PIPENV_YES,
     PIPENV_DONT_LOAD_ENV,
     PIPENV_DEFAULT_PYTHON_VERSION,
@@ -369,6 +366,7 @@ def ensure_python(three=None, python=None):
             err=True,
         )
         # Pyenv is installed
+        from .vendor.pythonfinder.environment import PYENV_INSTALLED
         if not PYENV_INSTALLED:
             abort()
         else:
diff --git a/pipenv/environments.py b/pipenv/environments.py
index afe82988..037e75a3 100644
--- a/pipenv/environments.py
+++ b/pipenv/environments.py
@@ -209,12 +209,5 @@ PIPENV_SKIP_VALIDATION = True
 # Internal, the default shell to use if shell detection fails.
 PIPENV_SHELL = os.environ.get("SHELL") or os.environ.get("PYENV_SHELL")
 
-# Internal, to tell if pyenv is installed.
-PYENV_ROOT = os.environ.get("PYENV_ROOT", os.path.expanduser("~/.pyenv"))
-PYENV_INSTALLED = (
-    bool(os.environ.get("PYENV_SHELL")) or
-    bool(os.environ.get("PYENV_ROOT"))
-)
-
 # Internal, to tell whether the command line session is interactive.
 SESSION_IS_INTERACTIVE = bool(os.isatty(sys.stdout.fileno()))
