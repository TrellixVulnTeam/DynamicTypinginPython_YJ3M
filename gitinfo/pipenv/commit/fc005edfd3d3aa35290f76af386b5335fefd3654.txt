commit fc005edfd3d3aa35290f76af386b5335fefd3654
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sat Sep 23 15:04:33 2017 -0400

    remove legacy code
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/tests/test_legacy.py b/tests/test_legacy.py
index d8ffdc5f..6d37291d 100644
--- a/tests/test_legacy.py
+++ b/tests/test_legacy.py
@@ -128,46 +128,6 @@ class TestPipenv():
         delegator.run('rm -fr test_timeout_short')
         del os.environ['PIPENV_TIMEOUT']
 
-    def test_pipenv_uninstall(self):
-        delegator.run('mkdir test_pipenv_uninstall')
-        os.chdir('test_pipenv_uninstall')
-
-        # Build the environment.
-        os.environ['PIPENV_VENV_IN_PROJECT'] = '1'
-        assert delegator.run('touch Pipfile').return_code == 0
-        assert delegator.run('pipenv --python python').return_code == 0
-
-        # Add entries to Pipfile.
-        assert delegator.run('pipenv install Werkzeug').return_code == 0
-        assert delegator.run('pipenv install pytest --dev').return_code == 0
-
-        pipfile_output = delegator.run('cat Pipfile').out
-        pipfile_list = pipfile_output.split('\n')
-
-        assert 'werkzeug = "*"' in pipfile_list
-        assert 'pytest = "*"' in pipfile_list
-        assert '[packages]' in pipfile_list
-        assert '[dev-packages]' in pipfile_list
-
-        # Uninstall from dev-packages, removing TOML section.
-        assert delegator.run('pipenv uninstall pytest').return_code == 0
-
-        # Test uninstalling non-existant dependency.
-        c = delegator.run('pipenv uninstall NotAPackage')
-        assert c.return_code == 0
-        assert 'No package NotAPackage to remove from Pipfile.' in c.out
-
-        pipfile_output = delegator.run('cat Pipfile').out
-        pipfile_list = pipfile_output.split('\n')
-
-        assert 'Werkzeug = "*"' in pipfile_list
-        assert 'pytest = "*"' not in pipfile_list
-        assert '[packages]' in pipfile_list
-        # assert '[dev-packages]' not in pipfile_list
-
-        os.chdir('..')
-        delegator.run('rm -fr test_pipenv_uninstall')
-
     def test_pipenv_uninstall_dev(self):
         delegator.run('mkdir test_pipenv_uninstall_dev')
         os.chdir('test_pipenv_uninstall_dev')
