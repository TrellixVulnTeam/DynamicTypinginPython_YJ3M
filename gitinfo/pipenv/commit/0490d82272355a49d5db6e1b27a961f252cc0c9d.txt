commit 0490d82272355a49d5db6e1b27a961f252cc0c9d
Author: Vincent Philippon <sindaewoh@gmail.com>
Date:   Fri Oct 13 19:08:41 2017 -0400

    Add pipenv graph --reverse
    
    Outputs the reversed dependencies graph.
    
    Ex:
    requests==2.18.4
      - lib_with_good_taste==1.0.0 [requires requests>=2.18]
        - package_using_lib_with_good_taste==1.2.3 [requires lib_with_good_taste]

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 5b9c55e1..c3a66654 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -2306,7 +2306,8 @@ def check(three=None, python=False, unused=False, style=False, args=None):
 @click.command(help=u"Displays currentlyâ€“installed dependency graph information.")
 @click.option('--bare', is_flag=True, default=False, help="Minimal output.")
 @click.option('--json', is_flag=True, default=False, help="Output JSON.")
-def graph(bare=False, json=False):
+@click.option('--reverse', is_flag=True, default=False, help="Reversed dependency graph.")
+def graph(bare=False, json=False, reverse=False):
     try:
         python_path = which('python')
     except AttributeError:
@@ -2319,12 +2320,26 @@ def graph(bare=False, json=False):
         )
         sys.exit(1)
 
-    j = '--json' if json else ''
+    if reverse and json:
+        click.echo(
+            u'{0}: {1}'.format(
+                crayons.red('Warning', bold=True),
+                u'Using both --reverse and --json together is not supported. '
+                u'Please select one of the two options.',
+            ), err=True
+        )
+        sys.exit(1)
+
+    flag = ''
+    if json:
+        flag = '--json'
+    if reverse:
+        flag = '--reverse'
 
     cmd = '"{0}" {1} {2}'.format(
         python_path,
         shellquote(pipdeptree.__file__.rstrip('cdo')),
-        j
+        flag
     )
 
     # Run dep-tree.
@@ -2344,8 +2359,8 @@ def graph(bare=False, json=False):
         else:
             for line in c.out.split('\n'):
 
-                # Ignore bad packages.
-                if line.split('==')[0] in BAD_PACKAGES:
+                # Ignore bad packages as top level.
+                if line.split('==')[0] in BAD_PACKAGES and not reverse:
                     continue
 
                 # Bold top-level packages.
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 60f6429f..d5c2de1c 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -1,4 +1,5 @@
 import os
+import re
 import tempfile
 import shutil
 import json
@@ -108,6 +109,30 @@ class TestPipenv:
             assert 'requests' in p.pipenv('graph').out
             assert 'requests' in p.pipenv('graph --json').out
 
+    @pytest.mark.cli
+    def test_pipenv_graph_reverse(self):
+        with PipenvInstance() as p:
+            p.pipenv('install requests==2.18.4')
+            output = p.pipenv('graph --reverse').out
+
+            requests_dependency = [
+                ('certifi', 'certifi>=2017.4.17'),
+                ('chardet', 'chardet(>=3.0.2,<3.1.0|<3.1.0,>=3.0.2)'),
+                ('idna', 'idna(>=2.5,<2.7|<2.7,>=2.5)'),
+                ('urllib3', 'urllib3(>=1.21.1,<1.23|<1.23,>=1.21.1)')
+            ]
+
+            for dep_name, dep_constraint in requests_dependency:
+                dep_match = re.search(r'^{}==[\d.]+$'.format(dep_name), output, flags=re.MULTILINE)
+                dep_requests_match = re.search(r'^  - requests==2.18.4 \[requires: {}\]$'.format(dep_constraint), output, flags=re.MULTILINE)
+                assert dep_match is not None
+                assert dep_requests_match is not None
+                assert dep_requests_match.start() > dep_match.start()
+
+            c = p.pipenv('graph --reverse --json')
+            assert c.return_code == 1
+            assert 'Warning: Using both --reverse and --json together is not supported.' in c.err
+
     @pytest.mark.cli
     def test_pipenv_check(self):
         with PipenvInstance() as p:
