commit fa3934ac0d0f3a06264aedd0954b9d939109e64b
Author: Tzu-ping Chung <uranusjr@gmail.com>
Date:   Sat Apr 7 18:34:39 2018 +0800

    Cherry-pick changes from #1909
    
    Let's hope this works.

diff --git a/.travis.yml b/.travis.yml
index 477bc363..63a6420e 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,6 +9,7 @@ env:
   - TEST_SUITE='dotvenv or check or unused or requirements'
   - TEST_SUITE='complex'
   - TEST_SUITE='markers or run or project or utils'
+  - TEST_SUITE='not (dotvenv or check or unused or requirements or complex or markers or run or project or utils or install)'
 
 # command to install dependencies
 install:
diff --git a/appveyor.yml b/appveyor.yml
index e36f0e97..59de24ca 100644
--- a/appveyor.yml
+++ b/appveyor.yml
@@ -35,6 +35,10 @@ environment:
       PYTHON_VERSION: "2.7.x"
       TEST_SUITE: '"markers or run or project or utils"'
 
+    - PYTHON: "C:\\Python27-x64"
+      PYTHON_VERSION: "2.7.x"
+      TEST_SUITE: 'not (dotvenv or check or unused or requirements or complex or markers or run or project or utils or install)'
+
     - PYTHON: "C:\\Python27-x64"
       PYTHON_VERSION: "2.7.x"
       TEST_SUITE: "install"
@@ -57,6 +61,10 @@ environment:
       PYTHON_VERSION: "3.6.x"
       TEST_SUITE: '"markers or run or project or utils"'
 
+    - PYTHON: "C:\\Python36-x64"
+      PYTHON_VERSION: "3.6.x"
+      TEST_SUITE: 'not (dotvenv or check or unused or requirements or complex or markers or run or project or utils or install)'
+
     - PYTHON: "C:\\Python36-x64"
       PYTHON_VERSION: "3.6.x"
       TEST_SUITE: "install"
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 05967fcb..2f67a150 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -238,7 +238,7 @@ class TestPipenv:
     @pytest.mark.install
     def test_install_parse_error(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
-            
+
             # Make sure unparseable packages don't wind up in the pipfile
             # Escape $ for shell input
             with open(p.pipfile_path, 'w') as f:
@@ -280,7 +280,7 @@ class TestPipenv:
             assert 'urllib3' in p.lockfile['default']
             assert 'certifi' in p.lockfile['default']
 
-    @pytest.mark.complex_lock
+    @pytest.mark.complex
     @pytest.mark.lock
     def test_complex_lock(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
@@ -1284,10 +1284,11 @@ multicommand = "bash -c \"cd docs && make html\""
             assert c.return_code == 0
             assert c.out == 'foo\n'
             assert c.err == ''
-            if os.name != 'nt':
-                c = p.pipenv('run notfoundscript')
-                assert c.return_code == 1
-                assert c.out == ''
+
+            c = p.pipenv('run notfoundscript')
+            assert c.return_code == 1
+            assert c.out == ''
+            if os.name != 'nt':     # TODO: Implement this message for Windows.
                 assert 'Error' in c.err
                 assert 'randomthingtotally (from notfoundscript)' in c.err
 
