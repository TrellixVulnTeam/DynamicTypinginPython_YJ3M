commit 0bf7a4845155b30080a3f65872e92a7577a9eec5
Author: Dan Ryan <dan@danryan.co>
Date:   Tue Nov 20 11:21:02 2018 -0500

    Make sure we actually create the pipfile
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/core.py b/pipenv/core.py
index cc042fe3..6f1a7a2d 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -1712,14 +1712,8 @@ def do_install(
     # Don't search for requirements.txt files if the user provides one
     if requirements or package_args or project.pipfile_exists:
         skip_requirements = True
-    # Don't attempt to install develop and default packages if Pipfile is missing
-    if not project.pipfile_exists and not (package_args or dev) and not code:
-        if not (ignore_pipfile or deploy):
-            raise exceptions.PipfileNotFound(project.path_to("Pipfile"))
-        elif ((skip_lock and deploy) or ignore_pipfile) and not project.lockfile_exists:
-            raise exceptions.LockfileNotFound(project.path_to("Pipfile.lock"))
     concurrent = not sequential
-    # Ensure that virtualenv is available.
+    # Ensure that virtualenv is available and pipfile are available
     ensure_project(
         three=three,
         python=python,
@@ -1729,6 +1723,12 @@ def do_install(
         skip_requirements=skip_requirements,
         pypi_mirror=pypi_mirror,
     )
+    # Don't attempt to install develop and default packages if Pipfile is missing
+    if not project.pipfile_exists and not (package_args or dev) and not code:
+        if not (ignore_pipfile or deploy):
+            raise exceptions.PipfileNotFound(project.path_to("Pipfile"))
+        elif ((skip_lock and deploy) or ignore_pipfile) and not project.lockfile_exists:
+            raise exceptions.LockfileNotFound(project.path_to("Pipfile.lock"))
     # Load the --pre settings from the Pipfile.
     if not pre:
         pre = project.settings.get("allow_prereleases")
diff --git a/tests/integration/test_install_basic.py b/tests/integration/test_install_basic.py
index b1bc6e69..ec4a471a 100644
--- a/tests/integration/test_install_basic.py
+++ b/tests/integration/test_install_basic.py
@@ -423,6 +423,9 @@ requests
 @pytest.mark.install
 def test_install_creates_pipfile(PipenvInstance):
     with PipenvInstance(chdir=True) as p:
+        if os.path.isfile(p.pipfile_path):
+            os.unlink(p.pipfile_path)
+        assert not os.path.isfile(p.pipfile_path)
         c = p.pipenv("install")
         assert c.return_code == 0
         assert os.path.isfile(p.pipfile_path)
