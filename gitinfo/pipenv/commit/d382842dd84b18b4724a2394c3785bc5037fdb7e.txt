commit d382842dd84b18b4724a2394c3785bc5037fdb7e
Author: Tzu-ping Chung <uranusjr@gmail.com>
Date:   Sun Jun 24 15:55:04 2018 +0800

    Remove unused utility function
    
    All get_converted_relative_path usages are now pushed into
    requirementslib.

diff --git a/pipenv/utils.py b/pipenv/utils.py
index 4c0db27c..a19f7ed0 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -856,11 +856,6 @@ def path_to_url(path):
     return Path(normalize_drive(os.path.abspath(path))).as_uri()
 
 
-def get_converted_relative_path(path, relative_to=os.curdir):
-    """Given a vague relative path, return the path relative to the given location"""
-    return os.path.join('.', os.path.relpath(path, start=relative_to))
-
-
 def walk_up(bottom):
     """Mimic os.walk, but walk 'up' instead of down the directory tree.
     From: https://gist.github.com/zdavkeos/1098474
diff --git a/tests/unit/test_utils.py b/tests/unit/test_utils.py
index 7847551a..7fafdaa9 100644
--- a/tests/unit/test_utils.py
+++ b/tests/unit/test_utils.py
@@ -220,32 +220,6 @@ class TestUtils:
         assert pipenv.utils.is_valid_url(url)
         assert pipenv.utils.is_valid_url(not_url) is False
 
-    @pytest.mark.utils
-    @pytest.mark.parametrize(
-        'input_path, expected',
-        [
-            ('artifacts/file.zip', './artifacts/file.zip'),
-            ('./artifacts/file.zip', './artifacts/file.zip'),
-            ('../otherproject/file.zip', './../otherproject/file.zip'),
-        ],
-    )
-    @pytest.mark.skipif(os.name == 'nt', reason='Nix-based file paths tested')
-    def test_nix_converted_relative_path(self, input_path, expected):
-        assert pipenv.utils.get_converted_relative_path(input_path) == expected
-
-    @pytest.mark.utils
-    @pytest.mark.parametrize(
-        'input_path, expected',
-        [
-            ('artifacts/file.zip', '.\\artifacts\\file.zip'),
-            ('./artifacts/file.zip', '.\\artifacts\\file.zip'),
-            ('../otherproject/file.zip', '.\\..\\otherproject\\file.zip'),
-        ],
-    )
-    @pytest.mark.skipif(os.name != 'nt', reason='Windows-based file paths tested')
-    def test_win_converted_relative_path(self, input_path, expected):
-        assert pipenv.utils.get_converted_relative_path(input_path) == expected
-
     @pytest.mark.utils
     def test_download_file(self):
         url = "https://github.com/kennethreitz/pipenv/blob/master/README.rst"
