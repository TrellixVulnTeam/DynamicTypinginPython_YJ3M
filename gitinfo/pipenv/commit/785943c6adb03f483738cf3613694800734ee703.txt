commit 785943c6adb03f483738cf3613694800734ee703
Author: Dan Ryan <dan@danryan.co>
Date:   Wed Nov 21 18:32:23 2018 -0500

    Fix bug in lockfile generation
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/project.py b/pipenv/project.py
index 26ec696c..142c5862 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -785,10 +785,11 @@ class Project(object):
 
     def get_lockfile_meta(self):
         from .vendor.plette.lockfiles import PIPFILE_SPEC_CURRENT
-        sources = self.lockfile_content.get("_meta", {}).get("sources", [])
-        if not sources:
-            sources = self.pipfile_sources
-        elif not isinstance(sources, list):
+        if self.lockfile_exists:
+            sources = self.lockfile_content.get("_meta", {}).get("sources", [])
+        else:
+            sources = [dict(source) for source in self.parsed_pipfile["source"]]
+        if not isinstance(sources, list):
             sources = [sources,]
         return {
             "hash": {"sha256": self.calculate_pipfile_hash()},
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 84a4c105..5ee8158e 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -320,7 +320,7 @@ class Resolver(object):
         if self.sources:
             requirementstxt_sources = " ".join(self.pip_args) if self.pip_args else ""
             requirementstxt_sources = requirementstxt_sources.replace(" --", "\n--")
-        constraints_file.write(u"{0}\n".format(requirementstxt_sources))
+            constraints_file.write(u"{0}\n".format(requirementstxt_sources))
         constraints = self.initial_constraints
         constraints_file.write(u"\n".join([c for c in constraints]))
         constraints_file.close()
@@ -843,7 +843,6 @@ def mkdir_p(newdir):
                 if exn.errno != errno.EEXIST:
                     raise
 
-                
 
 def is_required_version(version, specified_version):
     """Check to see if there's a hard requirement for version
