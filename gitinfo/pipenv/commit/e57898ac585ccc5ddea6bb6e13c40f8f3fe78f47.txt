commit e57898ac585ccc5ddea6bb6e13c40f8f3fe78f47
Author: Dan Ryan <dan@danryan.co>
Date:   Fri Jul 5 23:51:10 2019 -0400

    Fix windows test failure and leaky session from xmlrpc call
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/tests/integration/test_project.py b/tests/integration/test_project.py
index efdc03b6..cf1efa63 100644
--- a/tests/integration/test_project.py
+++ b/tests/integration/test_project.py
@@ -161,7 +161,7 @@ def test_include_editable_packages(PipenvInstance, testsroot, pathlib_tmpdir):
     with PipenvInstance(chdir=True) as p:
         with tarfile.open(source_path, "r:gz") as tarinfo:
             tarinfo.extractall(path=str(pathlib_tmpdir))
-        c = p.pipenv('install -e {}'.format(package))
+        c = p.pipenv('install -e {0!r}'.format(package))
         assert c.return_code == 0
         project = Project()
         assert "requests" in [
diff --git a/tests/pytest-pypi/pytest_pypi/app.py b/tests/pytest-pypi/pytest_pypi/app.py
index 607d2199..fd7b64a1 100644
--- a/tests/pytest-pypi/pytest_pypi/app.py
+++ b/tests/pytest-pypi/pytest_pypi/app.py
@@ -1,19 +1,22 @@
-import os
-import json
+# -*- coding: utf-8 -*-
+from __future__ import absolute_import, print_function
+import contextlib
 import io
+import json
+import os
 import sys
 
-if sys.version_info[:2] >= (3, 0):
-    from xmlrpc.client import ServerProxy
-else:
-    from xmlrpclib import ServerProxy
-
-from zipfile import is_zipfile
 from tarfile import is_tarfile
+from zipfile import is_zipfile
 
 import requests
+
 from flask import Flask, redirect, abort, render_template, send_file, jsonify
 
+if sys.version_info[:2] >= (3, 0):
+    from xmlrpc.client import ServerProxy
+else:
+    from xmlrpclib import ServerProxy
 
 app = Flask(__name__)
 session = requests.Session()
@@ -22,9 +25,20 @@ packages = {}
 ARTIFACTS = {}
 
 
+@contextlib.contextmanager
+def xml_pypi_server(server):
+    session = requests.Session()
+    client = ServerProxy(server, session)
+    try:
+        yield client
+    finally:
+        session.close()
+
+
 def get_pypi_package_names():
-    client = ServerProxy("https://pypi.org/pypi")
-    pypi_packages = set(client.list_packages())
+    pypi_packages = set()
+    with xml_pypi_server("https://pypi.org/pypi") as client:
+        pypi_packages = set(client.list_packages())
     return pypi_packages
 
 
