commit c4f1ac1762eedb97d9b590f587b60d93bad77745
Author: Dan Ryan <dan@danryan.co>
Date:   Fri Aug 24 02:28:31 2018 -0400

    Add vsts build definitions
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/.vsts-ci/docs.yml b/.vsts-ci/docs.yml
new file mode 100644
index 00000000..1b9d3701
--- /dev/null
+++ b/.vsts-ci/docs.yml
@@ -0,0 +1,20 @@
+phases:
+- phase:
+  displayName: Docs
+  queue: Hosted Linux Preview
+
+  steps:
+  - task: UsePythonVersion@0
+    inputs:
+      versionSpec: '3.7'
+
+  - template: steps/install-dependencies.yml
+
+  - bash: tox -e docs
+    displayName: Build docs
+
+  - task: PublishBuildArtifacts@1
+    displayName: 'Publish Artifact: docs'
+    inputs:
+      PathtoPublish: docs/build
+      ArtifactName: docs
diff --git a/.vsts-ci/phases/run-tests-windows.yml b/.vsts-ci/phases/run-tests-windows.yml
new file mode 100644
index 00000000..6b6f86fa
--- /dev/null
+++ b/.vsts-ci/phases/run-tests-windows.yml
@@ -0,0 +1,12 @@
+steps:
+- task: UsePythonVersion@0
+  displayName: Use Python $(python.version)
+  inputs:
+    versionSpec: '$(python.version)'
+    architecture: '$(python.architecture)'
+
+- template: ../steps/install-dependencies.yml
+
+- template: ../steps/create-virtualenv.yml
+
+- template: ../steps/run-tests.yml
diff --git a/.vsts-ci/phases/test.yml b/.vsts-ci/phases/test.yml
new file mode 100644
index 00000000..49339e28
--- /dev/null
+++ b/.vsts-ci/phases/test.yml
@@ -0,0 +1,68 @@
+parameters:
+  queue:
+
+phases:
+- phase: Test_Primary
+  displayName: Test Primary
+
+  queue:
+    name: ${{ parameters.queue }}
+    parallel: 2
+    matrix:
+      Python27:
+        python.version: '2.7'
+        python.architecture: x64
+      ${{ if eq(parameters.queue, 'Hosted VS2017') }}:
+        # TODO remove once Hosted VS2017 has Python 3.7
+        Python37:
+          python.version: '>= 3.7.0-b2'
+          python.architecture: x64
+
+  steps:
+  - ${{ if eq(parameters.queue, 'Hosted VS2017') }}:
+    - template: ../steps/run-tests-windows.yml
+
+#   - ${{ if ne(parameters.queue, 'Hosted VS2017') }}:
+#     - template: ../steps/run-tests.yml
+
+- phase: Test_Secondary
+  displayName: Test Secondary
+  # Run after Test_Primary so we don't devour time and jobs if tests are going to fail
+  dependsOn: Test_Primary
+
+  queue:
+    name: ${{ parameters.queue }}
+    parallel: 5
+    matrix:
+      Python34:
+        python.version: '3.4'
+        python.architecture: x64
+      Python35:
+        python.version: '3.5'
+        python.architecture: x64
+      # TODO remove `if` once Hosted VS2017 has Python 3.7
+    #   ${{ if ne(parameters.queue, 'Hosted VS2017') }}:
+    #     Python37:
+    #       python.version: '3.7'
+    #       python.architecture: x64
+      # On Windows, test x86 builds
+      Python36:
+        python.version: '3.6'
+        python.architecture: x64
+        Python27-x86:
+          python.version: '2.7'
+          python.architecture: x86
+        Python36-x86:
+          python.version: '3.6'
+          python.architecture: x86
+        # TODO change to 3.7 once Hosted VS2017 has Python 3.7
+        Python37-x86:
+          python.version: '>= 3.7.0-b2'
+          python.architecture: x86
+
+  steps:
+  - ${{ if eq(parameters.queue, 'Hosted VS2017') }}:
+    - template: ../steps/run-tests-windows.yml
+
+#   - ${{ if ne(parameters.queue, 'Hosted VS2017') }}:
+#     - template: ../steps/run-tests.yml
diff --git a/.vsts-ci/steps/create-virtualenv.yml b/.vsts-ci/steps/create-virtualenv.yml
new file mode 100644
index 00000000..f789aa72
--- /dev/null
+++ b/.vsts-ci/steps/create-virtualenv.yml
@@ -0,0 +1,6 @@
+steps:
+- script: |
+   virtualenv D:\.venv
+   D:\.venv\Scripts\activate.bat && D:\.venv\Scripts\pip.exe install -e . && D:\.venv\Scripts\pipenv install --dev
+   D:\.venv\Scripts\activate.bat && echo D:\.venv\Scripts\pipenv --venv && echo D:\.venv\Scripts\pipenv --py && echo D:\.venv\Scripts\pipenv run python --version
+  displayName: Make Virtualenv
diff --git a/.vsts-ci/steps/install-dependencies.yml b/.vsts-ci/steps/install-dependencies.yml
new file mode 100644
index 00000000..dfe733b6
--- /dev/null
+++ b/.vsts-ci/steps/install-dependencies.yml
@@ -0,0 +1,3 @@
+steps:
+- script: 'python -m pip install --upgrade pip && python -m pip install -e .'
+  displayName: Upgrade Pip & Install Pipenv
diff --git a/.vsts-ci/steps/run-tests.yml b/.vsts-ci/steps/run-tests.yml
new file mode 100644
index 00000000..0860185e
--- /dev/null
+++ b/.vsts-ci/steps/run-tests.yml
@@ -0,0 +1,20 @@
+steps:
+- powershell: |
+    # Fix Git SSL errors
+    pip install certifi tox
+    python -m certifi > cacert.txt
+    $env:GIT_SSL_CAINFO = $(Get-Content cacert.txt)
+    # Shorten paths to get under MAX_PATH or else integration tests will fail
+    # https://bugs.python.org/issue18199
+    subst T: $env:TEMP
+    $env:TEMP = "T:\"
+    $env:TMP = "T:\"
+    D:\.venv\Scripts\activate.ps1 && D:\.venv\Scripts\pipenv run pytest -n 4 --ignore=pipenv\patched --ignore=pipenv\vendor --junitxml=test-results.xml tests
+  displayName: Tox run integration tests
+
+- task: PublishTestResults@2
+  displayName: Publish Test Results
+  inputs:
+    testResultsFiles: junit/*.xml
+    testRunTitle: 'Python $(python.version)'
+  condition: succeededOrFailed()
diff --git a/.vsts-ci/windows.yml b/.vsts-ci/windows.yml
new file mode 100644
index 00000000..494e4eff
--- /dev/null
+++ b/.vsts-ci/windows.yml
@@ -0,0 +1,8 @@
+phases:
+- template: phases/test.yml
+  parameters:
+    queue: Hosted VS2017
+
+- template: phases/package.yml
+  parameters:
+    queue: Hosted VS2017
