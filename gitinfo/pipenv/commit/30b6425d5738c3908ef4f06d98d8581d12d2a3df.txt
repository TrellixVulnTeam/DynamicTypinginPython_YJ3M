commit 30b6425d5738c3908ef4f06d98d8581d12d2a3df
Author: Dan Ryan <dan@danryan.co>
Date:   Sat Jun 23 23:35:35 2018 -0400

    Updated requirementslib and tests
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/vendor/requirementslib/__init__.py b/pipenv/vendor/requirementslib/__init__.py
index e7273226..36caf359 100644
--- a/pipenv/vendor/requirementslib/__init__.py
+++ b/pipenv/vendor/requirementslib/__init__.py
@@ -1,5 +1,5 @@
 # -*- coding=utf-8 -*-
-__version__ = "1.0.2"
+__version__ = "1.0.3"
 
 
 from .exceptions import RequirementError
diff --git a/pipenv/vendor/requirementslib/models/requirements.py b/pipenv/vendor/requirementslib/models/requirements.py
index 9fa3e6ca..16d99863 100644
--- a/pipenv/vendor/requirementslib/models/requirements.py
+++ b/pipenv/vendor/requirementslib/models/requirements.py
@@ -392,7 +392,7 @@ class FileRequirement(BaseRequirement):
         ):
             seed = unquote(self.link.url_without_fragment) or self.uri
         else:
-            seed = self.formatted_path or self.link.url or self.uri
+            seed = self.formatted_path or unquote(self.link.url_without_fragment) or self.uri
         # add egg fragments to remote artifacts (valid urls only)
         if not self._has_hashed_name and self.is_remote_artifact:
             seed += "#egg={0}".format(self.name)
@@ -794,9 +794,7 @@ class Requirement(object):
 
     @property
     def constraint_line(self):
-        if self.is_named or self.is_vcs:
-            return self.as_line()
-        return self.req.req.line
+        return self.as_line()
 
     def as_pipfile(self):
         good_keys = (
diff --git a/pipenv/vendor/requirementslib/utils.py b/pipenv/vendor/requirementslib/utils.py
index e25d2e85..95cf8873 100644
--- a/pipenv/vendor/requirementslib/utils.py
+++ b/pipenv/vendor/requirementslib/utils.py
@@ -69,8 +69,10 @@ def get_converted_relative_path(path, relative_to=os.curdir):
     path = start.joinpath(".", path).relative_to(start)
     # Normalize these to use forward slashes even on windows
     if os.name == "nt":
-        return os.altsep.join([".", path.as_posix()])
-    return os.sep.join([".", path.as_posix()])
+        relpath = os.altsep.join([".", path.as_posix()])
+    relpath = os.sep.join([".", path.as_posix()])
+    if relpath == './.':
+        return '.'
 
 
 def multi_split(s, split):
diff --git a/pipenv/vendor/vendor.txt b/pipenv/vendor/vendor.txt
index 1936b858..c70ebc07 100644
--- a/pipenv/vendor/vendor.txt
+++ b/pipenv/vendor/vendor.txt
@@ -27,7 +27,7 @@ requests==2.19.1
     idna==2.7
     urllib3==1.23
     certifi==2018.4.16
-requirementslib==1.0.2
+requirementslib==1.0.3
     attrs==18.1.0
     distlib==0.2.7
     packaging==17.1
diff --git a/tests/integration/test_install_twists.py b/tests/integration/test_install_twists.py
index dfa265a2..0a48bafb 100644
--- a/tests/integration/test_install_twists.py
+++ b/tests/integration/test_install_twists.py
@@ -48,14 +48,16 @@ zip_safe=False
         assert c.return_code == 0
         assert 'testpipenv' in p.lockfile['default']
         assert p.lockfile['default']['testpipenv']['extras'] == ['dev']
+        assert 'six' in p.lockfile['default']
         c = p.pipenv('--rm')
         assert c.return_code == 0
         project.write_toml({'packages': {}, 'dev-packages': {}})
         c = p.pipenv('install {0}'.format(line))
         assert c.return_code == 0
         assert 'testpipenv' in p.pipfile['packages']
-        assert p.pipfile['packages']['testpipenv']['path'] in ['.', './.']
+        assert p.pipfile['packages']['testpipenv']['path'] == '.'
         assert p.pipfile['packages']['testpipenv']['extras'] == ['dev']
+        assert 'six' in p.lockfile['default']
 
 
 @pytest.mark.e
