commit f8499281e8cb39c4c6dc76836fe4c63de1dd2564
Author: Tzu-ping Chung <uranusjr@gmail.com>
Date:   Tue Mar 27 12:14:04 2018 +0800

    Ensure locking works with eggs
    
    Patch notpip to recognise .egg formats on PyPI. Close #1849, ref #1850.

diff --git a/pipenv/patched/notpip/req/req_set.py b/pipenv/patched/notpip/req/req_set.py
index 75766bba..fb999ab9 100644
--- a/pipenv/patched/notpip/req/req_set.py
+++ b/pipenv/patched/notpip/req/req_set.py
@@ -97,8 +97,11 @@ def make_abstract_dist(req_to_install):
     """
     if req_to_install.editable:
         return IsSDist(req_to_install)
-    elif req_to_install.link and req_to_install.link.is_wheel:
-        return IsWheel(req_to_install)
+    elif req_to_install.link:
+        if req_to_install.link.is_wheel:
+            return IsWheel(req_to_install)
+        elif req_to_install.link.ext == '.egg':
+            return IsEgg(req_to_install)
     else:
         return IsSDist(req_to_install)
 
@@ -114,6 +117,17 @@ class IsWheel(DistAbstraction):
         pass
 
 
+# XXX: I don't know what I'm doing HALP. - uranusjr
+class IsEgg(DistAbstraction):
+
+    def dist(self, finder):
+        return pkg_resources.Distribution.from_filename(
+            self.req_to_install.source_dir)
+
+    def prep_for_dist(self):
+        pass
+
+
 class IsSDist(DistAbstraction):
 
     def dist(self, finder):
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 49cf3cc8..92c4427c 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -878,6 +878,21 @@ import records
 
         assert command == '{0}/bin/activate'.format(venv)
 
+    @pytest.mark.lock
+    def test_lock_handle_eggs(self, pypi):
+        """Ensure locking works with packages provoding egg formats.
+        """
+        with PipenvInstance() as p:
+            with open(p.pipfile_path, 'w') as f:
+                f.write("""
+[packages]
+RandomWords = "*"
+                """)
+            c = p.pipenv('lock --verbose')
+            assert c.return_code == 0
+            assert 'randomwords' in p.lockfile['default']
+            assert p.lockfile['default']['randomwords']['version'] == '==0.2.1'
+
     @pytest.mark.lock
     @pytest.mark.requirements
     def test_lock_requirements_file(self, pypi):
