commit c2462e3b23cf775a0196454240ad4e35cacfbaaa
Author: Dan Ryan <dan@danryan.co>
Date:   Tue Apr 17 00:24:34 2018 -0400

    Refactor `split_index` and `split_extra_index`
    
    - Interpolate environment vars into pipfile sources
    - Use first to more efficiently handle list comprehensions
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/core.py b/pipenv/core.py
index a354d69e..39013c0f 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -46,8 +46,7 @@ from .utils import (
     is_star,
     TemporaryDirectory,
     rmtree,
-    split_index,
-    split_extra_index,
+    split_argument,
 )
 from .import pep508checker, progress
 from .environments import (
@@ -795,8 +794,8 @@ def do_install_dependencies(
     for dep, ignore_hash, block in deps_list_bar:
         if len(procs) < PIPENV_MAX_SUBPROCESS:
             # Use a specific index, if specified.
-            dep, index = split_index(dep)
-            dep, extra_index = split_extra_index(dep)
+            dep, index = split_argument(dep, short='i', long_='index')
+            dep, extra_index = split_argument(dep, long_='extra-index-url')
             # Install the module.
             c = pip_install(
                 dep,
@@ -827,8 +826,8 @@ def do_install_dependencies(
             failed_deps_list, label=INSTALL_LABEL2
         ):
             # Use a specific index, if specified.
-            dep, index = split_index(dep)
-            dep, extra_index = split_extra_index(dep)
+            dep, index = split_argument(dep, short='i', long_='index')
+            dep, extra_index = split_argument(dep, long_='extra-index-url')
             # Install the module.
             c = pip_install(
                 dep,
@@ -1859,8 +1858,8 @@ def do_install(
     index_indicators = ['-i', '--index', '--extra-index-url']
     index, extra_indexes = None, None
     if more_packages and any(more_packages[0].startswith(s) for s in index_indicators):
-        line, index = split_index(' '.join(line))
-        line, extra_indexes = split_extra_index(line)
+        line, index = split_argument(' '.join(line), short='i', long_='index')
+        line, extra_indexes = split_argumetn(line, long_='extra-index-url')
         package_names = line.split()
         package_name = package_names[0]
         if len(package_names) > 1:
diff --git a/pipenv/project.py b/pipenv/project.py
index eed62a54..99bac0a3 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -7,6 +7,7 @@ import sys
 import base64
 import hashlib
 import contoml
+from first import first
 import pipfile
 import pipfile.api
 import toml
@@ -613,7 +614,11 @@ class Project(object):
     @property
     def pipfile_sources(self):
         if 'source' in self.parsed_pipfile:
-            return self.parsed_pipfile['source']
+            sources = []
+            for s in self.parsed_pipfile['source']:
+                s['url'] = os.path.expandvars(s['url'])
+                sources.append(s)
+            return sources
         return [DEFAULT_SOURCE]
 
     @property
@@ -645,19 +650,17 @@ class Project(object):
 
     def get_source(self, name=None, url=None):
         def find_source(sources, name=None, url=None):
-            if name:
-                source = [s for s in sources if s.get('name') == name]
-            elif url:
+            if url:
                 source = [s for s in sources if s.get('url') in url]
-            if source:
-                return source[0]
+            else:
+                source = [s for s in sources if s.get('name') == name] 
+            return first(source)
 
         found_source = find_source(self.sources, name=name, url=url)
-        if found_source:
-            return found_source
-        found_source = find_source(self.pipfile_sources, name=name, url=url)
-        if found_source:
-            return found_source
+        if not found_source:
+            found_source = find_source(self.pipfile_sources, name=name, url=url)
+            if found_source:
+                return found_source
         raise SourceNotFound(name or url)
 
     def destroy_lockfile(self):
@@ -693,7 +696,7 @@ class Project(object):
         p = self.parsed_pipfile
         # Don't re-capitalize file URLs or VCSs.
         converted = convert_deps_from_pip(package_name)
-        converted = converted[[k for k in converted.keys()][0]]
+        converted = converted[first(k for k in converted.keys())]
         if not (
             is_file(package_name) or is_vcs(converted) or 'path' in converted
         ):
@@ -703,7 +706,7 @@ class Project(object):
         if key not in p:
             p[key] = {}
         package = convert_deps_from_pip(package_name)
-        package_name = [k for k in package.keys()][0]
+        package_name = first(k for k in package.keys())
         name = self.get_package_name_in_pipfile(package_name, dev)
         if name and converted == '*':
             # Skip for wildcard version
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 5e5b9027..8f43c788 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -1297,29 +1297,19 @@ class TemporaryDirectory(object):
             rmtree(self.name)
 
 
-def split_index(req):
-    """Split an index argument from a requirement (finds None if not present)
+def split_argument(req, short=None, long_=None):
+    """Split an argument from a string (finds None if not present).
 
-    returns req, index
-    """
-    index_entries = [' -i ', ' --index ', ' --index=']
-    index = None
-    index_entry = first([entry for entry in index_entries if entry in req])
-    if index_entry:
-        req, index = req.split(index_entry)
-        remaining_line = index.split()
-        if len(remaining_line) > 1:
-            index, more_req = remaining_line[0], ' '.join(remaining_line[1:])
-            req = '{0} {1}'.format(req, more_req)
-    return req, index
-
-
-def split_extra_index(req):
-    """Split an extra index argument from a requirement (or None if not present)
+    Uses -short <arg>, --long <arg>, and --long=arg as permutations.
 
-    returns req, index
+    returns string, index
     """
-    index_entries = [' --extra-index-url ', ' --extra-index-url=']
+    index_entries = []
+    if long_:
+        long_ = ' --{0}'.format(long_)
+        index_entries.extend(['{0}{1}'.format(long_, s) for s in [' ', '=']])
+    if short:
+        index_entries.append(' -{0} '.format(short))
     index = None
     index_entry = first([entry for entry in index_entries if entry in req])
     if index_entry:
