commit 747317c5f622cb00deaa7e76a0efb0f437119eda
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sat May 5 21:18:22 2018 -0400

    tests
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/run-tests.sh b/run-tests.sh
index c71e62ec..f4133dee 100755
--- a/run-tests.sh
+++ b/run-tests.sh
@@ -8,6 +8,7 @@ set -eo pipefail
 PYPI_VENDOR_DIR="$(pwd)/tests/pypi/"
 export PYPI_VENDOR_DIR
 export PYTHONIOENCODING="utf-8"
+export LANG=C.UTF-8
 
 prefix() {
   sed "s/^/   $1:    /"
@@ -17,62 +18,37 @@ if [[ ! -z "$TEST_SUITE" ]]; then
 	echo "Using TEST_SUITE=$TEST_SUITE"
 fi
 
-# If running in CI environment…
-if [[ ! -z "$CI" ]]; then
-	echo "Running in a CI environment…"
-
-	# Use tap output for tests.
-	TAP_OUTPUT="1"
-	export TAP_OUTPUT
-
-	echo "Installing Pipenv…"
-
-	# pip uninstall -y pipenv
-	export PATH="~/.local/bin:$PATH"
-	pip install --user -e "$(pwd)" --upgrade
-	pipenv install --deploy --dev
+export PATH="~/.local/bin:$PATH"
+echo "Installing Pipenv…"
+pip install --user -e "$(pwd)" --upgrade
+pipenv install --deploy --dev
 
 # Otherwise, we're on a development machine.
-else
-	# First, try MacOS…
-	if [[ $(python -c "import sys; print(sys.platform)") == "darwin" ]]; then
-
-		echo "Clearing Caches…"
-		rm -fr ~/Library/Caches/pip
-		rm -fr ~/Library/Caches/pipenv
-
-	# Otherwise, assume Linux…
-	else
-		echo "Clearing Caches…"
-		rm -fr ~/.cache/pip
-		rm -fr ~/.cache/pipenv
-	fi
+# First, try MacOS…
+if [[ $(python -c "import sys; print(sys.platform)") == "darwin" ]]; then
 
-	# If the lockfile hasn't changed, skip installs.
-
-	echo "Installing Pipenv…"
-	pip install -e "$(pwd)" --upgrade-strategy=only-if-needed
-
-	echo "Installing dependencies…"
-	PIPENV_PYTHON=2.7 pipenv run pip install -e . --upgrade
-	PIPENV_PYTHON=3.6 pipenv run pip install -e . --upgrade
-	PIPENV_PYTHON=2.7 pipenv install --dev
-	PIPENV_PYTHON=3.6 pipenv install --dev
-
-fi
-
-# Use tap output if in a CI environment, otherwise just run the tests.
-if [[ "$TAP_OUTPUT" ]]; then
-	echo "$ pipenv run time python -m pytest -v -n auto -m \"$TEST_SUITE\" --tap-stream tests/ | tee report-$PYTHON.tap"
-	pipenv run time python -m pytest -v -n auto -m "$TEST_SUITE"  --tap-stream tests/ | tee report.tap
+	echo "Clearing Caches…"
+	rm -fr ~/Library/Caches/pip
+	rm -fr ~/Library/Caches/pipenv
 
+# Otherwise, assume Linux…
 else
-	echo "$ pipenv run time pytest -v -n auto tests -m \"$TEST_SUITE\""
-	# PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 2.7 &
-	# PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 3.6
-	# Better to run them sequentially.
-	PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
-	PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
-	# Cleanup junk.
-	rm -fr .venv
+	echo "Clearing Caches…"
+	rm -fr ~/.cache/pip
+	rm -fr ~/.cache/pipenv
 fi
+
+echo "Installing dependencies…"
+PIPENV_PYTHON=2.7 pipenv run pip install -e . --upgrade
+PIPENV_PYTHON=3.6 pipenv run pip install -e . --upgrade
+PIPENV_PYTHON=2.7 pipenv install --dev
+PIPENV_PYTHON=3.6 pipenv install --dev
+
+echo "$ pipenv run time pytest -v -n auto tests -m \"$TEST_SUITE\""
+# PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 2.7 &
+# PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 3.6
+# Better to run them sequentially.
+PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
+PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
+# Cleanup junk.
+rm -fr .venv
