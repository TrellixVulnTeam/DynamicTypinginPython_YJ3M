commit 7358399f6c29741166997380b572e1a6cc6f7d89
Author: Dan Ryan <dan@danryan.co>
Date:   Tue Sep 4 00:45:53 2018 -0400

    Windows edge case and news
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/news/1690.bugfix b/news/1690.bugfix
new file mode 100644
index 00000000..ec94c663
--- /dev/null
+++ b/news/1690.bugfix
@@ -0,0 +1 @@
+VCS Refs for locked local editable dependencies will now update appropriately to the latest hash when running ``pipenv update``.
diff --git a/news/2173.bugfix b/news/2173.bugfix
new file mode 100644
index 00000000..8d79613a
--- /dev/null
+++ b/news/2173.bugfix
@@ -0,0 +1 @@
+``.tar.gz`` and ``.zip`` artifacts will now have dependencies installed even when they are missing from the lockfile.
diff --git a/news/2279.bugfix b/news/2279.bugfix
new file mode 100644
index 00000000..f211ba47
--- /dev/null
+++ b/news/2279.bugfix
@@ -0,0 +1 @@
+The command line parser will now handle multiple ``-e/--editable`` dependencies properly via click's option parser to help mitigate future parsing issues.
diff --git a/news/2494.bugfix b/news/2494.bugfix
new file mode 100644
index 00000000..8aab779b
--- /dev/null
+++ b/news/2494.bugfix
@@ -0,0 +1 @@
+Fixed a bug which could cause ``-i/--index`` arguments to sometimes be incorrectly picked up in packages.  This is now handled in the command line parser.
diff --git a/news/2714.bugfix b/news/2714.bugfix
new file mode 100644
index 00000000..74c7fac0
--- /dev/null
+++ b/news/2714.bugfix
@@ -0,0 +1 @@
+Fixed a bug which could cause the ``-e/--editable`` argument on a dependency to be accidentally parsed as a dependency itself.
diff --git a/news/2748.bugfix b/news/2748.bugfix
new file mode 100644
index 00000000..fc807047
--- /dev/null
+++ b/news/2748.bugfix
@@ -0,0 +1 @@
+All markers are now included in ``pipenv lock --requirements`` output.
diff --git a/news/2760.bugfix b/news/2760.bugfix
new file mode 100644
index 00000000..11bc2e63
--- /dev/null
+++ b/news/2760.bugfix
@@ -0,0 +1 @@
+Fixed a bug in marker resolution which could cause duplicate and non-deterministic markers.
diff --git a/news/2766.bugfix b/news/2766.bugfix
new file mode 100644
index 00000000..f83cd084
--- /dev/null
+++ b/news/2766.bugfix
@@ -0,0 +1 @@
+Fixed a bug in the dependency resolver which caused regular issues when handling ``setup.py`` based dependency resolution.
diff --git a/news/2814.feature b/news/2814.feature
new file mode 100644
index 00000000..01818bc2
--- /dev/null
+++ b/news/2814.feature
@@ -0,0 +1 @@
+Deduplicate and refactor CLI to use stateful arguments and object passing.  See `this issue <https://github.com/pallets/click/issues/108>`_ for reference.
diff --git a/pipenv/vendor/requirementslib/models/requirements.py b/pipenv/vendor/requirementslib/models/requirements.py
index 471ebcea..13a3a60e 100644
--- a/pipenv/vendor/requirementslib/models/requirements.py
+++ b/pipenv/vendor/requirementslib/models/requirements.py
@@ -638,21 +638,18 @@ class VCSRequirement(FileRequirement):
                     pipfile[key] = sorted(dedup([extra.lower() for extra in extras]))
             if key in VCS_LIST:
                 creation_args["vcs"] = key
-                composed_uri = add_ssh_scheme_to_git_uri(
-                    "{0}+{1}".format(key, pipfile.get(key))
-                ).split("+", 1)[1]
-                url_keys = [pipfile.get(key), composed_uri]
-                if any(is_valid_url(k) for k in url_keys) or any(is_file_url(k) for k in url_keys):
-                    creation_args["uri"] = pipfile.get(key)
+                target = pipfile.get(key)
+                drive, path = os.path.splitdrive(target)
+                if not drive and not os.path.exists(target) and (is_valid_url(target) or
+                        is_file_url(target) or target.startswith('git@')):
+                    creation_args["uri"] = target
                 else:
-                    creation_args["path"] = pipfile.get(key)
-                    if os.path.isabs(pipfile.get(key)):
-                        creation_args["uri"] = Path(pipfile.get(key)).absolute().as_uri()
+                    creation_args["path"] = target
+                    if os.path.isabs(target):
+                        creation_args["uri"] = path_to_url(target)
             else:
                 creation_args[key] = pipfile.get(key)
         creation_args["name"] = name
-        print("Creating req from pipfile: %s" % pipfile)
-        print("Using creation args: %s" % creation_args)
         return cls(**creation_args)
 
     @classmethod
