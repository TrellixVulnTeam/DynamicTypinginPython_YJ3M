commit ef42f84427f4d0a06668f82d7459b06583957348
Author: Dan Ryan <dan@danryan.co>
Date:   Fri Nov 23 17:59:05 2018 -0500

    Add artifacts and fix hash gathering
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/utils.py b/pipenv/utils.py
index 4a558111..b1b73316 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -19,9 +19,10 @@ from click import echo as click_echo
 from first import first
 from vistir.misc import fs_str
 
-six.add_move(six.MovedAttribute("Mapping", "collections", "collections.abc"))
-six.add_move(six.MovedAttribute("Sequence", "collections", "collections.abc"))
-from six.moves import Mapping, Sequence
+six.add_move(six.MovedAttribute("Mapping", "collections", "collections.abc"))  # noqa
+six.add_move(six.MovedAttribute("Sequence", "collections", "collections.abc"))  # noqa
+six.add_move(six.MovedAttribute("Set", "collections", "collections.abc"))  # noqa
+from six.moves import Mapping, Sequence, Set
 
 from vistir.compat import ResourceWarning
 
@@ -436,9 +437,8 @@ class Resolver(object):
                 ):
                     if not ireq_hashes:
                         ireq_hashes = set()
-                    ireq_hashes |= set(
-                        self.resolver.repository._hash_cache.get_hash(ireq.link)
-                    )
+                    new_hashes = self.resolver.repository._hash_cache.get_hash(ireq.link)
+                    add_to_set(ireq_hashes, new_hashes)
                 else:
                     ireq_hashes = set(ireq_hashes)
                 # The _ONLY CASE_ where we flat out set the value is if it isn't present
@@ -1487,3 +1487,15 @@ def sys_version(version_tuple):
     sys.version_info = version_tuple
     yield
     sys.version_info = old_version
+
+
+def add_to_set(original_set, element):
+    """Given a set and some arbitrary element, add the element(s) to the set"""
+    if not element:
+        return original_set
+    if isinstance(element, Set):
+        original_set |= element
+    elif isinstance(element, (list, tuple)):
+        original_set |= set(element)
+    else:
+        original_set.add(element)
diff --git a/tests/pypi/pathlib2/pathlib2-2.3.2-py2.py3-none-any.whl b/tests/pypi/pathlib2/pathlib2-2.3.2-py2.py3-none-any.whl
new file mode 100644
index 00000000..0cd52d85
Binary files /dev/null and b/tests/pypi/pathlib2/pathlib2-2.3.2-py2.py3-none-any.whl differ
diff --git a/tests/pypi/pathlib2/pathlib2-2.3.2.tar.gz b/tests/pypi/pathlib2/pathlib2-2.3.2.tar.gz
new file mode 100644
index 00000000..86e784d1
Binary files /dev/null and b/tests/pypi/pathlib2/pathlib2-2.3.2.tar.gz differ
diff --git a/tests/pypi/scandir/scandir-1.9.0-cp27-cp27m-win32.whl b/tests/pypi/scandir/scandir-1.9.0-cp27-cp27m-win32.whl
new file mode 100644
index 00000000..fd2f1047
Binary files /dev/null and b/tests/pypi/scandir/scandir-1.9.0-cp27-cp27m-win32.whl differ
diff --git a/tests/pypi/scandir/scandir-1.9.0-cp27-cp27m-win_amd64.whl b/tests/pypi/scandir/scandir-1.9.0-cp27-cp27m-win_amd64.whl
new file mode 100644
index 00000000..7c718c67
Binary files /dev/null and b/tests/pypi/scandir/scandir-1.9.0-cp27-cp27m-win_amd64.whl differ
diff --git a/tests/pypi/scandir/scandir-1.9.0-cp36-cp36m-win32.whl b/tests/pypi/scandir/scandir-1.9.0-cp36-cp36m-win32.whl
new file mode 100644
index 00000000..39bff799
Binary files /dev/null and b/tests/pypi/scandir/scandir-1.9.0-cp36-cp36m-win32.whl differ
diff --git a/tests/pypi/scandir/scandir-1.9.0-cp36-cp36m-win_amd64.whl b/tests/pypi/scandir/scandir-1.9.0-cp36-cp36m-win_amd64.whl
new file mode 100644
index 00000000..10a8d7ef
Binary files /dev/null and b/tests/pypi/scandir/scandir-1.9.0-cp36-cp36m-win_amd64.whl differ
diff --git a/tests/pypi/scandir/scandir-1.9.0.tar.gz b/tests/pypi/scandir/scandir-1.9.0.tar.gz
new file mode 100644
index 00000000..f134aace
Binary files /dev/null and b/tests/pypi/scandir/scandir-1.9.0.tar.gz differ
