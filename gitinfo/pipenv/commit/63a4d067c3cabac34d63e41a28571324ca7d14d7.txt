commit 63a4d067c3cabac34d63e41a28571324ca7d14d7
Author: Dan Ryan <dan@danryan.co>
Date:   Wed Nov 21 20:16:31 2018 -0500

    Bump plette, requirementslib, and fix lockfile generation
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/project.py b/pipenv/project.py
index 142c5862..ef34eeb8 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -752,10 +752,9 @@ class Project(object):
                 "develop": self._lockfile["develop"].copy()
             }
             lockfile_dict.update({"_meta": self.get_lockfile_meta()})
-            _created_lockfile = Req_Lockfile.from_data(
+            lockfile = Req_Lockfile.from_data(
                 path=self.lockfile_location, data=lockfile_dict, meta_from_project=False
             )
-            lockfile._lockfile = _created_lockfile
         elif self.lockfile_exists:
             try:
                 lockfile = Req_Lockfile.load(self.lockfile_location)
diff --git a/pipenv/vendor/plette/__init__.py b/pipenv/vendor/plette/__init__.py
index 8099f0b1..5daf460c 100644
--- a/pipenv/vendor/plette/__init__.py
+++ b/pipenv/vendor/plette/__init__.py
@@ -3,7 +3,7 @@ __all__ = [
     "Lockfile", "Pipfile",
 ]
 
-__version__ = '0.2.2'
+__version__ = '0.2.3.dev0'
 
 from .lockfiles import Lockfile
 from .pipfiles import Pipfile
diff --git a/pipenv/vendor/plette/models/base.py b/pipenv/vendor/plette/models/base.py
index d70752ee..fad0d09e 100644
--- a/pipenv/vendor/plette/models/base.py
+++ b/pipenv/vendor/plette/models/base.py
@@ -22,7 +22,7 @@ def validate(cls, data):
         v = VALIDATORS[key]
     except KeyError:
         v = VALIDATORS[key] = cerberus.Validator(schema, allow_unknown=True)
-    if v.validate(data, normalize=False):
+    if v.validate(dict(data), normalize=False):
         return
     raise ValidationError(data, v)
 
diff --git a/pipenv/vendor/requirementslib/models/requirements.py b/pipenv/vendor/requirementslib/models/requirements.py
index d034a12d..bfd69b37 100644
--- a/pipenv/vendor/requirementslib/models/requirements.py
+++ b/pipenv/vendor/requirementslib/models/requirements.py
@@ -3,6 +3,7 @@
 from __future__ import absolute_import
 
 import collections
+import copy
 import hashlib
 import os
 
@@ -312,9 +313,19 @@ class FileRequirement(object):
         )):
             if self.editable:
                 line = pip_shims.shims.path_to_url(self.setup_py_dir)
+                if self.extras:
+                    line = "{0}[{1}]".format(line, ",".join(self.extras))
                 _ireq = pip_shims.shims.install_req_from_editable(line)
             else:
-                _ireq = pip_shims.shims.install_req_from_line(Path(self.setup_py_dir).as_posix())
+                line = Path(self.setup_py_dir).as_posix()
+                if self.extras:
+                    line = "{0}[{1}]".format(line, ",".join(self.extras))
+                _ireq = pip_shims.shims.install_req_from_line(line)
+            if self.req:
+                _ireq.req = copy.deepcopy(self.req)
+            else:
+                if self.extras:
+                    _ireq.extras = set(self.extras)
             from .setup_info import SetupInfo
             subdir = getattr(self, "subdirectory", None)
             setupinfo = SetupInfo.from_ireq(_ireq, subdir=subdir)
@@ -453,10 +464,16 @@ class FileRequirement(object):
         if not name:
             _line = unquote(link.url_without_fragment) if link.url else uri
             if editable:
+                if extras:
+                    _line = "{0}[{1}]".format(_line, ",".join(sorted(set(extras))))
                 ireq = pip_shims.shims.install_req_from_editable(_line)
             else:
                 _line = path if (uri_scheme and uri_scheme == "path") else _line
+                if extras:
+                    _line = "{0}[{1}]".format(_line, ",".join(sorted(set(extras))))
                 ireq = pip_shims.shims.install_req_from_line(_line)
+            if extras and not ireq.extras:
+                ireq.extras = set(extras)
             setup_info = SetupInfo.from_ireq(ireq)
             setupinfo_dict = setup_info.as_dict()
             setup_name = setupinfo_dict.get("name", None)
@@ -488,7 +505,7 @@ class FileRequirement(object):
         return cls_inst
 
     @classmethod
-    def from_line(cls, line):
+    def from_line(cls, line, extras=None):
         line = line.strip('"').strip("'")
         link = None
         path = None
@@ -497,6 +514,8 @@ class FileRequirement(object):
         setup_path = None
         name = None
         req = None
+        if not extras:
+            extras = []
         if not any([is_installable_file(line), is_valid_url(line), is_file_url(line)]):
             try:
                 req = init_requirement(line)
@@ -515,7 +534,8 @@ class FileRequirement(object):
             "editable": editable,
             "setup_path": setup_path,
             "uri_scheme": prefer,
-            "line": line
+            "line": line,
+            "extras": extras
         }
         if link and link.is_wheel:
             from pip_shims import Wheel
@@ -1069,7 +1089,7 @@ class Requirement(object):
             (is_valid_url(possible_url) or is_file_url(line) or is_valid_url(line)) and
             not (line_is_vcs or is_vcs(possible_url))
         ):
-            r = FileRequirement.from_line(line_with_prefix)
+            r = FileRequirement.from_line(line_with_prefix, extras=extras)
         elif line_is_vcs:
             r = VCSRequirement.from_line(line_with_prefix, extras=extras)
             vcs = r.vcs
diff --git a/pipenv/vendor/requirementslib/models/setup_info.py b/pipenv/vendor/requirementslib/models/setup_info.py
index c32c2790..6839f184 100644
--- a/pipenv/vendor/requirementslib/models/setup_info.py
+++ b/pipenv/vendor/requirementslib/models/setup_info.py
@@ -220,19 +220,25 @@ class SetupInfo(object):
                 python_requires = parser.get("options", "python_requires")
                 if python_requires and not self.python_requires:
                     self.python_requires = python_requires
-            if parser.has_option("options", "extras_require"):
+            if "options.extras_require" in parser.sections():
                 self.extras.update(
                     {
                         section: [
-                            dep.strip()
+                            init_requirement(dep.strip())
                             for dep in parser.get(
                                 "options.extras_require", section
                             ).split("\n")
                             if dep
                         ]
                         for section in parser.options("options.extras_require")
+                        if section not in ["options", "metadata"]
                     }
                 )
+                if self.ireq.extras:
+                    self.requires.update({
+                        extra: self.extras[extra]
+                        for extra in self.ireq.extras if extra in self.extras
+                    })
 
     def run_setup(self):
         if self.setup_py is not None and self.setup_py.exists():
@@ -304,12 +310,10 @@ class SetupInfo(object):
                 )
                 if getattr(self.ireq, "extras", None):
                     for extra in self.ireq.extras:
+                        extra = metadata.get("extras", {}).get(extra)
+                        self.extras[extra] = [req for req in extra if req is not None]
                         self.requires.update(
-                            {
-                                req.key: req for req
-                                in metadata.get("extras", {}).get(extra)
-                                if req is not None
-                            }
+                            {req.key: req for req in extra if req is not None}
                         )
 
     def run_pyproject(self):
diff --git a/pipenv/vendor/vendor.txt b/pipenv/vendor/vendor.txt
index ff7226b2..ad879dac 100644
--- a/pipenv/vendor/vendor.txt
+++ b/pipenv/vendor/vendor.txt
@@ -32,7 +32,7 @@ requirementslib==1.3.1.post1
     distlib==0.2.8
     packaging==18.0
     pyparsing==2.2.2
-    plette==0.2.2
+    -e git+https://github.com/sarugaku/plette.git@master#egg=plette
         tomlkit==0.5.2
 shellingham==1.2.7
 six==1.11.0
