commit 54ed73bded986ae50146675c7d6b9598944eb788
Author: Nate Prewitt <Nate.Prewitt@gmail.com>
Date:   Tue Jan 31 08:58:49 2017 -0700

    make ensure_proper_casing togglable in ensure_pipfile
    
    This is being introduced because we don't want to
    validate our Pipfile for commands like `run`, `update`,
    or `shell`. We still have to verify that the Pipfile
    exists though for finding the virtualenv. This will
    toggle validation off when it's unneeded.

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 6ab445bc..ade9271e 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -64,7 +64,7 @@ def ensure_latest_pip():
         click.echo(crayons.blue(c.out))
 
 
-def ensure_pipfile():
+def ensure_pipfile(validate=True):
     """Creates a Pipfile for the project, if it doesn't exist."""
 
     # Assert Pipfile exists.
@@ -75,8 +75,10 @@ def ensure_pipfile():
         # Create the pipfile if it doesn't exist.
         project.create_pipfile()
 
-    # Ensure that the Pipfile is using proper casing.
-    ensure_proper_casing()
+    # Validate the Pipfile's contents.
+    if validate:
+        # Ensure that Pipfile is using proper casing.
+        ensure_proper_casing()
 
 
 def ensure_virtualenv(three=None, python=None):
@@ -97,9 +99,9 @@ def ensure_virtualenv(three=None, python=None):
         ensure_virtualenv(three=three, python=python)
 
 
-def ensure_project(three=None, python=None):
+def ensure_project(three=None, python=None, validate=True):
     """Ensures both Pipfile and virtualenv exist for the project."""
-    ensure_pipfile()
+    ensure_pipfile(validate=validate)
     ensure_virtualenv(three=three, python=python)
 
 
@@ -790,7 +792,7 @@ def lock(three=None, python=False):
 @click.option('--python', default=False, nargs=1, help="Specify which version of Python virtualenv should use.")
 def shell(three=None, python=False):
     # Ensure that virtualenv is available.
-    ensure_virtualenv(three=three, python=python)
+    ensure_project(three=three, python=python, validate=False)
 
     # Set an environment variable, so we know we're in the environment.
     os.environ['PIPENV_ACTIVE'] = '1'
@@ -846,7 +848,7 @@ def shell(three=None, python=False):
 @click.option('--python', default=False, nargs=1, help="Specify which version of Python virtualenv should use.")
 def run(command, args, three=None, python=False):
     # Ensure that virtualenv is available.
-    ensure_virtualenv(three=three, python=python)
+    ensure_project(three=three, python=python, validate=False)
 
     # Spawn the new process, and interact with it.
     try:
@@ -897,7 +899,7 @@ def check():
 def update(dev=False, three=None, python=None):
 
     # Ensure that virtualenv is available.
-    ensure_virtualenv(three=three, python=python)
+    ensure_project(three=three, python=python, validate=False)
 
     # Update pip to latest version.
     ensure_latest_pip()
