commit 27f83a8631220e6c799e80597484a0439c0271e1
Author: Frost Ming <mianghong@gmail.com>
Date:   Thu Dec 6 15:54:18 2018 +0800

    preserve inline spaces in toml

diff --git a/pipenv/utils.py b/pipenv/utils.py
index 9f03465c..b0920764 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -83,19 +83,31 @@ def cleanup_toml(tml):
 
 def convert_toml_outline_tables(parsed):
     """Converts all outline tables to inline tables."""
-    if isinstance(parsed, tomlkit.container.Container):
-        empty_inline_table = tomlkit.inline_table
-    else:
-        empty_inline_table = toml.TomlDecoder().get_empty_inline_table
+    def convert_tomlkit_table(section):
+        for key, value in section._body:
+            if not key:
+                continue
+            if hasattr(value, "keys") and not isinstance(value, tomlkit.items.InlineTable):
+                table = tomlkit.inline_table()
+                table.update(value.value)
+                section[key.key] = table
+
+    def convert_toml_table(section):
+        for package, value in section.items():
+            if hasattr(value, "keys") and not isinstance(toml.decoder.InlineTableDict):
+                table = toml.TomlDecoder().get_empty_inline_table()
+                table.update(value)
+                section[package] = table
+
     for section in ("packages", "dev-packages"):
         table_data = parsed.get(section, {})
-        for package, value in table_data.items():
-            if hasattr(value, "keys") and not isinstance(
-                value, (tomlkit.items.InlineTable, toml.decoder.InlineTableDict)
-            ):
-                table = empty_inline_table()
-                table.update(value)
-                table_data[package] = table
+        if not table_data:
+            continue
+        if isinstance(parsed, tomlkit.container.Container):
+            convert_tomlkit_table(table_data)
+        else:
+            convert_toml_table(table_data)
+
     return parsed
 
 
diff --git a/tests/integration/test_project.py b/tests/integration/test_project.py
index f9a2ba12..bec98d59 100644
--- a/tests/integration/test_project.py
+++ b/tests/integration/test_project.py
@@ -154,16 +154,21 @@ def test_rewrite_outline_table(PipenvInstance, pypi):
     with PipenvInstance(pypi=pypi, chdir=True) as p:
         with open(p.pipfile_path, 'w') as f:
             contents = """
+[packages]
+six = {version = "*", editable = true}
+
 [packages.requests]
 version = "*"
             """.strip()
             f.write(contents)
-        c = p.pipenv('install click')
+        c = p.pipenv("install -e click")
         assert c.return_code == 0
         with open(p.pipfile_path) as f:
             contents = f.read()
         assert "[packages.requests]" not in contents
+        assert 'six = {version = "*", editable = true}' in contents
         assert 'requests = {version = "*"}' in contents
+        assert 'click = {' in contents
 
 
 @pytest.mark.install
