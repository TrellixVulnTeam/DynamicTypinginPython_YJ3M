commit 7882912c30cfe91f0b9e644825f1cb2c1fe3e678
Author: Dan Ryan <dan@danryan.co>
Date:   Wed Oct 31 02:00:02 2018 -0400

    Fix circular import
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/_compat.py b/pipenv/_compat.py
index 6cc4c732..21996c8b 100644
--- a/pipenv/_compat.py
+++ b/pipenv/_compat.py
@@ -387,3 +387,15 @@ def decode_output(output):
             output = output.translate(UNICODE_TO_ASCII_TRANSLATION_MAP)
     output = output.decode(DEFAULT_ENCODING)
     return output
+
+
+def fix_utf8(text):
+    if not isinstance(text, six.string_types):
+        return text
+    from ._compat import decode_output
+    try:
+        text = decode_output(text)
+    except UnicodeDecodeError:
+        if six.PY2:
+            text = unicode.translate(vistir.misc.to_text(text), UNICODE_TO_ASCII_TRANSLATION_MAP)
+    return text
diff --git a/pipenv/core.py b/pipenv/core.py
index 2d16c559..7a6e7bb9 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -99,24 +99,6 @@ if PIPENV_COLORBLIND:
     crayons.disable()
 
 
-UNICODE_TO_ASCII_TRANSLATION_MAP = {
-    8230: u"...",
-    8211: u"-"
-}
-
-
-def fix_utf8(text):
-    if not isinstance(text, six.string_types):
-        return text
-    from ._compat import decode_output
-    try:
-        text = decode_output(text)
-    except UnicodeDecodeError:
-        if six.PY2:
-            text = unicode.translate(vistir.misc.to_text(text), UNICODE_TO_ASCII_TRANSLATION_MAP)
-    return text
-
-
 @contextlib.contextmanager
 def _spinner(text=None, nospin=None, spinner_name=None):
     if not text:
diff --git a/pipenv/exceptions.py b/pipenv/exceptions.py
index 11f69dc1..3d94efb6 100644
--- a/pipenv/exceptions.py
+++ b/pipenv/exceptions.py
@@ -1,17 +1,17 @@
 # -*- coding=utf-8 -*-
+from ._compat import fix_utf8
+from .patched import crayons
+from .vendor.click import echo as click_echo
 from .vendor.click.exceptions import (
-    ClickException,
     Abort,
-    Exit,
-    UsageError,
+    BadOptionUsage,
     BadParameter,
+    ClickException,
+    Exit,
     FileError,
     MissingParameter,
-    BadOptionUsage
+    UsageError,
 )
-from .vendor.click import echo as click_echo
-from .core import project, fix_utf8
-from .patched import crayons
 
 
 class PipenvException(ClickException):
@@ -20,7 +20,7 @@ class PipenvException(ClickException):
 
 class PipfileNotFound(ClickException):
     message = "{0}: Pipfile is missing! Cannot proceed.".format(
-        crayons.red("Error", bold=True),
+        crayons.red("Error", bold=True)
     )
 
 
@@ -41,6 +41,8 @@ class PipenvOptionsError(BadOptionUsage):
 
 class PipfileException(FileError):
     def __init__(self, hint=None):
+        from .core import project
+
         hint = "{0} {1}".format(crayons.red("ERROR (PACKAGE NOT INSTALLED):"), hint)
         filename = project.pipfile_location
         super(PipfileException, self).__init__(filename, hint)
@@ -57,7 +59,9 @@ class VirtualenvException(ClickException):
                 "There was an unexpected error while activating your virtualenv. "
                 "Continuing anyway..."
             )
-        message = fix_utf8("{0}: {1}".format(crayons.red("Warning", bold=True), message))
+        message = fix_utf8(
+            "{0}: {1}".format(crayons.red("Warning", bold=True), message)
+        )
         super(VirtualenvException, self).__init__(message)
 
 
