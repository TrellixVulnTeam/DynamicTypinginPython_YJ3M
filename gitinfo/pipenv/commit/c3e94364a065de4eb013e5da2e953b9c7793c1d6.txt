commit c3e94364a065de4eb013e5da2e953b9c7793c1d6
Author: Frost Ming <mianghong@gmail.com>
Date:   Thu Jan 17 12:57:02 2019 +0800

    Use the source passed in

diff --git a/pipenv/project.py b/pipenv/project.py
index 94962231..edbcff87 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -869,7 +869,7 @@ class Project(object):
             source = self.get_source(url=source)
         return source
 
-    def get_source(self, name=None, url=None, pipfile_only=False):
+    def get_source(self, name=None, url=None):
         def find_source(sources, name=None, url=None):
             source = None
             if name:
@@ -879,10 +879,9 @@ class Project(object):
             if source:
                 return first(source)
 
-        if not pipfile_only:
-            found_source = find_source(self.sources, name=name, url=url)
-            if found_source:
-                return found_source
+        found_source = find_source(self.sources, name=name, url=url)
+        if found_source:
+            return found_source
         found_source = find_source(self.pipfile_sources, name=name, url=url)
         if found_source:
             return found_source
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 2751a2ff..3cf6dc2f 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -234,10 +234,10 @@ def get_resolver_metadata(deps, index_lookup, markers_lookup, project, sources):
         dep = " ".join(remainder)
         req = Requirement.from_line(dep)
         constraints.append(req.constraint_line)
-
         if url:
-            index_lookup[req.name] = project.get_source(
-                url=url, pipfile_only=True).get("name")
+            source = first(s for s in sources if url.startswith(s.get("url")))
+            if source:
+                index_lookup[req.name] = source.get("name")
         # strip the marker and re-add it later after resolution
         # but we will need a fallback in case resolution fails
         # eg pypiwin32
@@ -837,7 +837,7 @@ def convert_deps_to_pip(deps, project=None, r=True, include_index=True):
 
     dependencies = []
     for dep_name, dep in deps.items():
-        indexes = project.sources if hasattr(project, "sources") else []
+        indexes = project.pipfile_sources if hasattr(project, "pipfile_sources") else []
         new_dep = Requirement.from_pipfile(dep_name, dep)
         if new_dep.index:
             include_index = True
