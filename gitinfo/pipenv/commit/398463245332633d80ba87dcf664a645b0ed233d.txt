commit 398463245332633d80ba87dcf664a645b0ed233d
Author: Dan Ryan <dan@danryan.co>
Date:   Sun Nov 11 23:38:09 2018 -0500

    Fix various bugs with python 2.7 and vendored deps
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/project.py b/pipenv/project.py
index fbc18f19..0eafff8e 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -350,7 +350,7 @@ class Project(object):
         if not self._environment:
             prefix = self.get_location_for_virtualenv()
             is_venv = prefix == sys.prefix
-            sources = self.sources.copy() if self.sources else [DEFAULT_SOURCE,]
+            sources = self.sources if self.sources else [DEFAULT_SOURCE,]
             self._environment = Environment(
                 prefix=prefix, is_venv=is_venv, sources=sources, pipfile=self.parsed_pipfile
             )
diff --git a/pipenv/vendor/requirementslib/models/setup_info.py b/pipenv/vendor/requirementslib/models/setup_info.py
index 481f0494..247d63f2 100644
--- a/pipenv/vendor/requirementslib/models/setup_info.py
+++ b/pipenv/vendor/requirementslib/models/setup_info.py
@@ -1,6 +1,7 @@
 # -*- coding=utf-8 -*-
 import contextlib
 import os
+import sys
 
 import attr
 import packaging.version
@@ -29,6 +30,11 @@ except ImportError:
 
 CACHE_DIR = os.environ.get("PIPENV_CACHE_DIR", user_cache_dir("pipenv"))
 
+# The following are necessary for people who like to use "if __name__" conditionals
+# in their setup.py scripts
+_setup_stop_after = None
+_setup_distribution = None
+
 
 @contextlib.contextmanager
 def _suppress_distutils_logs():
@@ -116,7 +122,7 @@ def get_metadata(path, pkg_name=None):
     if egg_dir is not None:
         import pkg_resources
 
-        egg_dir = os.path.abspath(egg_dir)
+        egg_dir = os.path.abspath(egg_dir.path)
         base_dir = os.path.dirname(egg_dir)
         path_metadata = pkg_resources.PathMetadata(base_dir, egg_dir)
         dist = next(
@@ -216,10 +222,26 @@ class SetupInfo(object):
         if self.setup_py is not None and self.setup_py.exists():
             with cd(self.setup_py.parent), _suppress_distutils_logs():
                 from setuptools.dist import distutils
+                save_argv = sys.argv.copy()
+                try:
+                # This is for you, Hynek
+                # see https://github.com/hynek/environ_config/blob/69b1c8a/setup.py
+                    global _setup_distribution, _setup_stop_after
+                    _setup_stop_after = "run"
+                    script_name = self.setup_py.as_posix()
+                    g = {"__file__": script_name, "__name__": "__main__"}
+                    sys.argv[0] = script_name
+                    sys.argv[1:] = ["egg_info", "--egg-base", self.base_dir]
+                    with open(script_name, 'rb') as f:
+                        exec(f.read(), g)
+                finally:
+                    _setup_stop_after = None
+                    sys.argv = save_argv
+                dist = _setup_distribution
+                if not dist:
+                    self.get_egg_metadata()
+                    return
 
-                dist = distutils.core.run_setup(
-                    self.setup_py.as_posix(), ["egg_info", "--egg-base", self.base_dir]
-                )
                 name = dist.get_name()
                 if name:
                     self.name = name
diff --git a/pipenv/vendor/vistir/contextmanagers.py b/pipenv/vendor/vistir/contextmanagers.py
index 59b97ca0..3f191120 100644
--- a/pipenv/vendor/vistir/contextmanagers.py
+++ b/pipenv/vendor/vistir/contextmanagers.py
@@ -118,10 +118,11 @@ def spinner(spinner_name=None, start_text=None, handler_map=None, nospin=False):
     """
 
     from .spin import create_spinner
-    has_yaspin = False
+    has_yaspin = None
     try:
         import yaspin
     except ImportError:
+        has_yaspin = False
         if not nospin:
             raise RuntimeError(
                 "Failed to import spinner! Reinstall vistir with command:"
@@ -132,6 +133,9 @@ def spinner(spinner_name=None, start_text=None, handler_map=None, nospin=False):
     else:
         has_yaspin = True
         spinner_name = ""
+    use_yaspin = (has_yaspin is False) or (nospin is True)
+    if has_yaspin is None or has_yaspin is True and not nospin:
+        use_yaspin = True
     if not start_text and nospin is False:
         start_text = "Running..."
     with create_spinner(
@@ -139,7 +143,7 @@ def spinner(spinner_name=None, start_text=None, handler_map=None, nospin=False):
         text=start_text,
         handler_map=handler_map,
         nospin=nospin,
-        use_yaspin=has_yaspin
+        use_yaspin=use_yaspin
     ) as _spinner:
         yield _spinner
 
diff --git a/pipenv/vendor/vistir/spin.py b/pipenv/vendor/vistir/spin.py
index 09ecbace..e7311555 100644
--- a/pipenv/vendor/vistir/spin.py
+++ b/pipenv/vendor/vistir/spin.py
@@ -291,7 +291,7 @@ class VistirSpinner(base_obj):
 
 def create_spinner(*args, **kwargs):
     nospin = kwargs.pop("nospin", False)
-    use_yaspin = kwargs.pop("use_yaspin", nospin)
+    use_yaspin = kwargs.pop("use_yaspin", not nospin)
     if nospin or not use_yaspin:
         return DummySpinner(*args, **kwargs)
     return VistirSpinner(*args, **kwargs)
