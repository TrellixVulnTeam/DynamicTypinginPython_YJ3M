commit 40f10e56734232d174fe06291030d799c036f049
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Feb 1 20:27:45 2017 -0500

    environments file

diff --git a/pipenv/cli.py b/pipenv/cli.py
index b5b9bad6..8e8f6440 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -22,6 +22,7 @@ from .project import Project
 from .utils import convert_deps_from_pip, convert_deps_to_pip, is_required_version
 from .__version__ import __version__
 from . import pep508checker
+from .environments import PIPENV_COLORBLIND, PIPENV_SHELL_COMPAT
 
 try:
     from HTMLParser import HTMLParser
@@ -43,8 +44,8 @@ else:
 # Enable shell completion.
 click_completion.init()
 
-# No color mode, for unfun people.
-if os.environ.get('PIPENV_COLORBLIND'):
+# Disable colors, for the soulless.
+if PIPENV_COLORBLIND:
     crayons.disable()
 
 # Disable warnings for Python 2.6.
@@ -826,7 +827,7 @@ def shell(three=None, python=False, compat=False, shell_args=None):
     os.environ['PIPENV_ACTIVE'] = '1'
 
     # Compatibility mode:
-    if compat:
+    if PIPENV_SHELL_COMPAT or compat:
         try:
             shell = os.environ['SHELL']
         except KeyError:
@@ -837,7 +838,7 @@ def shell(three=None, python=False, compat=False, shell_args=None):
 
         cmd = "{0} -i'".format(shell)
         args = []
-    
+
     # Standard (properly configured shell) mode:
     else:
         cmd = 'pew'
@@ -856,11 +857,11 @@ def shell(three=None, python=False, compat=False, shell_args=None):
         )
     )
 
-    # Activate the virtualenv if in compatibility mode. 
+    # Activate the virtualenv if in compatibility mode.
     if compat:
         c.sendline(activate_virtualenv())
 
-    # Send additional arguments to the subshell.    
+    # Send additional arguments to the subshell.
     if shell_args:
         c.sendline(' '.join(shell_args))
 
diff --git a/pipenv/environments.py b/pipenv/environments.py
new file mode 100644
index 00000000..4d6719ef
--- /dev/null
+++ b/pipenv/environments.py
@@ -0,0 +1,10 @@
+import os
+
+# Shell compatibility mode, for mis-configured shells.
+PIPENV_SHELL_COMPAT = os.environ.get('PIPENV_SHELL_COMPAT')
+
+# No color mode, for unfun people.
+PIPENV_COLORBLIND = os.environ.get('PIPENV_COLORBLIND')
+
+# User-configuraable max-depth for Pipfile searching.
+PIPENV_MAX_DEPTH = int(os.environ.get('PIPENV_MAX_DEPTH', '3'))
\ No newline at end of file
diff --git a/pipenv/project.py b/pipenv/project.py
index a025882f..18283124 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -9,10 +9,7 @@ from requests.compat import OrderedDict
 
 from .utils import format_toml, mkdir_p
 from .utils import convert_deps_from_pip
-
-
-# User-configuraable max-depth for Pipfile searching.
-PIPENV_MAX_DEPTH = int(os.environ.get('PIPENV_MAX_DEPTH', '3'))
+from .environments import PIPENV_MAX_DEPTH
 
 
 class Project(object):
