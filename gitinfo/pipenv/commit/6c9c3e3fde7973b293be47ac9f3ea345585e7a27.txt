commit 6c9c3e3fde7973b293be47ac9f3ea345585e7a27
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Sep 6 16:17:32 2017 -0400

    improvements to ensure-casings
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/cli.py b/pipenv/cli.py
index c4ff54ca..5515b257 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -28,7 +28,8 @@ from .utils import (convert_deps_from_pip, convert_deps_to_pip, is_required_vers
 from .__version__ import __version__
 from . import pep508checker, progress
 from .environments import (PIPENV_COLORBLIND, PIPENV_NOSPIN, PIPENV_SHELL_COMPAT,
-    PIPENV_VENV_IN_PROJECT, PIPENV_USE_SYSTEM, PIPENV_TIMEOUT, PIPENV_USE_HASHES)
+    PIPENV_VENV_IN_PROJECT, PIPENV_USE_SYSTEM, PIPENV_TIMEOUT, PIPENV_USE_HASHES,
+    PIPENV_SKIP_VALIDATION)
 
 # Backport required for earlier versions of Python.
 if sys.version_info < (3, 3):
@@ -140,7 +141,7 @@ def ensure_pipfile(validate=True):
             project.create_pipfile()
 
     # Validate the Pipfile's contents.
-    if validate and project.virtualenv_exists:
+    if validate and project.virtualenv_exists and not PIPENV_SKIP_VALIDATION:
         # Ensure that Pipfile is using proper casing.
         p = project.parsed_pipfile
         changed = ensure_proper_casing(pfile=p)
diff --git a/pipenv/environments.py b/pipenv/environments.py
index 6c740141..0cf81312 100644
--- a/pipenv/environments.py
+++ b/pipenv/environments.py
@@ -28,6 +28,9 @@ PIPENV_USE_SYSTEM = os.environ.get('VIRTUAL_ENV') if 'PIPENV_IGNORE_VIRTUALENVS'
 # Tells Pipenv to use hashing mode.
 PIPENV_USE_HASHES = os.environ.get('PIPENV_USE_HASHES')
 
+# Tells pipenv to skip case-checking (slow internet connections).
+PIPENV_SKIP_VALIDATION = os.environ.get('PIPENV_USE_HASHES')
+
 # Use shell compatibility mode when using venv in project mode.
 if PIPENV_VENV_IN_PROJECT:
     PIPENV_SHELL_COMPAT = True
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 44834041..c016e761 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -225,7 +225,7 @@ def pep423_name(name):
 def proper_case(package_name):
     """Properly case project name from pypi.org"""
     # Hit the simple API.
-    r = requests.get('https://pypi.org/pypi/{0}/json'.format(package_name), timeout=1, stream=True)
+    r = requests.get('https://pypi.org/pypi/{0}/json'.format(package_name), timeout=0.3, stream=True)
     if not r.ok:
         raise IOError('Unable to find package {0} in PyPI repository.'.format(package_name))
 
