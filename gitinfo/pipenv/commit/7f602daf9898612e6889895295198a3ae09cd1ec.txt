commit 7f602daf9898612e6889895295198a3ae09cd1ec
Author: Dan Ryan <dan@danryan.co>
Date:   Fri Aug 31 00:16:09 2018 -0400

    Expand a bit on sync vs ignore-pipfile
    
    - expanded a bit on the distinction between `sync` and `ignore-pipfile`
    - fixed a merge conflict resolution I did that erased some changes in master

diff --git a/docs/advanced.rst b/docs/advanced.rst
index fc23cc1a..f3122724 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -113,12 +113,13 @@ You can enforce that your ``Pipfile.lock`` is up to date using the ``--deploy``
 
 This will fail a build if the ``Pipfile.lock`` is out–of–date, instead of generating a new one.
 
-Or you can install packages exactly as specified in ``Pipfile.lock`` using the sync command::
+Or you can install packages exactly as specified in ``Pipfile.lock`` using the ``sync`` command::
 
     $ pipenv sync
 
-Note: ``pipenv install --ignore-pipfile`` is nearly equivalent to ``pipenv sync``, but you should use ``pipenv sync`` instead.
-``--ignore-pipfile`` may be removed in a future version.
+.. note::
+
+    ``pipenv install --ignore-pipfile`` is nearly equivalent to ``pipenv sync``, but you ``pipenv sync`` will *never* attempt to re-lock your dependencies as it is considered an atomic operation.  ``pipenv install`` by default does attempt to re-lock unless using the ``--deploy`` flag.
 
 Deploying System Dependencies
 /////////////////////////////
@@ -127,7 +128,7 @@ You can tell Pipenv to install a Pipfile's contents into its parent system with
 
     $ pipenv install --system
 
-This is useful for Docker containers, and deployment infrastructure (e.g. Heroku does this).
+This is useful for managing the system Python, and deployment infrastructure (e.g. Heroku does this).
 
 ☤ Pipenv and Other Python Distributions
 ---------------------------------------
