commit 1ad684a5ab22439997baa63713425820b0df5d56
Author: jacrotts <jacrotts@cisco.com>
Date:   Thu Oct 18 22:33:24 2018 -0500

    Implement some behavior for --bare in sync and clean, and add bare as an option to do_clean in cli.py

diff --git a/pipenv/cli/command.py b/pipenv/cli/command.py
index af1282b0..02bd5dc9 100644
--- a/pipenv/cli/command.py
+++ b/pipenv/cli/command.py
@@ -596,6 +596,7 @@ def sync(
 
 
 @cli.command(short_help="Uninstalls all packages not specified in Pipfile.lock.")
+@option("--bare", is_flag=True, default=False, help="Minimal output.")
 @option("--dry-run", is_flag=True, default=False, help="Just output unneeded packages.")
 @verbose_option
 @three_option
diff --git a/pipenv/core.py b/pipenv/core.py
index b23534d6..6129dc15 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -2582,7 +2582,8 @@ def do_sync(
         deploy=deploy,
         system=system,
     )
-    click.echo(crayons.green("All dependencies are now up-to-date!"))
+    if not bare:
+        click.echo(crayons.green("All dependencies are now up-to-date!"))
 
 
 def do_clean(ctx, three=None, python=None, dry_run=False, bare=False, pypi_mirror=None):
@@ -2611,14 +2612,15 @@ def do_clean(ctx, three=None, python=None, dry_run=False, bare=False, pypi_mirro
             )]
     failure = False
     for apparent_bad_package in installed_package_names:
-        if dry_run:
+        if dry_run and not bare:
             click.echo(apparent_bad_package)
         else:
-            click.echo(
-                crayons.white(
-                    fix_utf8("Uninstalling {0}…".format(repr(apparent_bad_package))), bold=True
+            if not bare:
+                click.echo(
+                    crayons.white(
+                        fix_utf8("Uninstalling {0}…".format(repr(apparent_bad_package))), bold=True
+                    )
                 )
-            )
             # Uninstall the package.
             c = delegator.run(
                 "{0} uninstall {1} -y".format(which_pip(), apparent_bad_package)
