commit 5d45e6e7347b86755a0c10679014cea43468c422
Author: Nate Prewitt <Nate.Prewitt@gmail.com>
Date:   Wed Feb 8 14:13:41 2017 -0700

    updating parse_download_fname and tests

diff --git a/pipenv/cli.py b/pipenv/cli.py
index c1ff3923..3beeeafb 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -351,7 +351,7 @@ def is_version(text):
     return re.match('^[\d]+\.[\d]+.*', text) or False
 
 
-def parse_download_fname(fname):
+def parse_download_fname(fname, name):
     fname, fextension = os.path.splitext(fname)
 
     if fextension == '.whl':
@@ -360,13 +360,11 @@ def parse_download_fname(fname):
     if fname.endswith('.tar'):
         fname, _ = os.path.splitext(fname)
 
-    fname_components = fname.split('-')
-    for n, component in enumerate(fname_components):
-        if is_version(component):
-            # Return what's left when we find start of version.
-            return '-'.join(fname_components[n:])
+    norm_fname = fname.lower().replace('_', '-')
+    norm_name = name.lower().replace('_', '-')
+    version = norm_fname.replace(norm_name, '').strip('-')
 
-    return ''
+    return version
 
 
 def get_downloads_info(names_map, section):
@@ -378,7 +376,7 @@ def get_downloads_info(names_map, section):
         # Get name from filename mapping.
         name = list(convert_deps_from_pip(names_map[fname]))[0]
         # Get the version info from the filenames.
-        version = parse_download_fname(fname)
+        version = parse_download_fname(fname, name)
 
         # Get the hash of each file.
         c = delegator.run('{0} hash {1}'.format(which_pip(), os.sep.join([project.download_location, fname])))
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 4a2c9af5..816a2f54 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -8,18 +8,19 @@ from pipenv.cli import parse_download_fname, ensure_proper_casing
 
 class TestPipenv():
 
-    @pytest.mark.parametrize('fname, expected', [
-        ('functools32-3.2.3-2.zip', '3.2.3-2'),
-        ('functools32-3.2.3-blah.zip', '3.2.3-blah'),
-        ('functools32-3.2.3.zip', '3.2.3'),
-        ('colorama-0.3.7-py2.py3-none-any.whl', '0.3.7'),
-        ('colorama-0.3.7-2-py2.py3-none-any.whl', '0.3.7-2'),
-        ('click-completion-0.2.1.tar.gz', '0.2.1'),
-        ('Twisted-16.5.0.tar.bz2', '16.5.0'),
-        ('Twisted-16.1.1-cp27-none-win_amd64.whl', '16.1.1')
+    @pytest.mark.parametrize('fname, name, expected', [
+        ('functools32-3.2.3-2.zip', 'functools32', '3.2.3-2'),
+        ('functools32-3.2.3-blah.zip', 'functools32', '3.2.3-blah'),
+        ('functools32-3.2.3.zip', 'functools32', '3.2.3'),
+        ('colorama-0.3.7-py2.py3-none-any.whl', 'colorama', '0.3.7'),
+        ('colorama-0.3.7-2-py2.py3-none-any.whl', 'colorama', '0.3.7-2'),
+        ('click-completion-0.2.1.tar.gz', 'click-completion', '0.2.1'),
+        ('Twisted-16.5.0.tar.bz2', 'Twisted', '16.5.0'),
+        ('Twisted-16.1.1-cp27-none-win_amd64.whl', 'twIsteD', '16.1.1'),
+        ('pdfminer.six-20140915.zip', 'pdfMiner.SIX', '20140915')
     ])
-    def test_parse_download_fname(self, fname, expected):
-        version = parse_download_fname(fname)
+    def test_parse_download_fname(self, fname, name, expected):
+        version = parse_download_fname(fname, name)
         assert version == expected
 
     def test_cli_usage(self):
