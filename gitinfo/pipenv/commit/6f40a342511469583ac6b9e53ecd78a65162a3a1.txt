commit 6f40a342511469583ac6b9e53ecd78a65162a3a1
Author: Hamad alghanim <dreamersoul1@gmail.com>
Date:   Tue Oct 17 01:28:46 2017 -0700

    remote req files are now working
    
    refactoring is needed

diff --git a/pipenv/cli.py b/pipenv/cli.py
index e787a96f..7aa759ed 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -37,7 +37,7 @@ from .utils import (
     convert_deps_from_pip, convert_deps_to_pip, is_required_version,
     proper_case, pep423_name, split_vcs, resolve_deps, shellquote, is_vcs,
     python_version, suggest_package, find_windows_executable, is_file,
-    prepare_pip_source_args
+    prepare_pip_source_args, is_valid_url, download_file
 )
 from .__version__ import __version__
 from . import pep508checker, progress
@@ -1743,9 +1743,28 @@ def install(
     if not pre:
         pre = project.settings.get('allow_prereleases')
 
+    temporary_requirements = "requirements-temp.txt"
+    remote = False
+    # Check if the file is remote or not
+    if requirements and is_valid_url(requirements):
+        # Download requirements file
+        click.echo(
+            crayons.normal(
+                u'Remote requirements file provided! Downloading…',
+            bold=True),
+        err=True)
+        download_file(requirements, temporary_requirements)
+        # Replace the url with the temporary requirements file
+        requirements = temporary_requirements
+        remote = True
+
     if requirements:
         click.echo(crayons.normal(u'Requirements file provided! Importing into Pipfile…', bold=True), err=True)
         import_requirements(r=project.path_to(requirements), dev=dev)
+        # If requirements file was provided by remote url delete the temporary file
+
+    if remote:
+        os.remove(project.path_to(temporary_requirements))
 
     if code:
         click.echo(crayons.normal(u'Discovering imports from local codebase…', bold=True))
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 3fea5fab..95f290d7 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -3,6 +3,7 @@ import os
 import hashlib
 import tempfile
 import sys
+import shutil
 import logging
 
 import click
@@ -913,3 +914,16 @@ def find_requirements(max_depth=3):
                 if os.path.isfile(r):
                     return r
     raise RuntimeError('No requirements.txt found!')
+
+def is_valid_url(url):
+    pieces = urlparse(url)
+    return all([pieces.scheme, pieces.netloc])
+
+def download_file(url, filename):
+    r = requests.get(url, stream=True)
+    if not r.ok:
+        raise IOError('Unable to download file')
+
+    r.raw.decode_content = True
+    with open(filename, 'wb') as f:
+        shutil.copyfileobj(r.raw, f)
