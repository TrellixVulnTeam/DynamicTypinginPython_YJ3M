commit 5366253f39c70cfc44e57683deacc2427dbfb832
Author: Dan Ryan <dan@danryan.co>
Date:   Sun Jul 15 20:19:17 2018 -0400

    More robust path searching
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/core.py b/pipenv/core.py
index 23982adb..c55cc734 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -12,6 +12,7 @@ import click_completion
 import crayons
 import dotenv
 import delegator
+from first import first
 import pipfile
 from blindspin import spinner
 import six
@@ -319,6 +320,7 @@ def find_a_system_python(python):
     # system always refers to sys.executable, which could point at a virtualenv
     # for global searches we most likely want to turn that off
     finder = Finder(system=True, global_search=True)
+    python_entry = None
     if not python:
         return None
     # when using the python launcher on windows we can find the versions ourselves
@@ -330,14 +332,32 @@ def find_a_system_python(python):
             return python_entry.path.as_posix()
     if os.path.isabs(python):
         return python
-    python_entry = finder.find_python_version(python)
+    version = [int(v) for v in python.split('.')]
+    minor = None
+    patch = None
+    if len(version) > 1:
+        minor = version[1]
+        if len(version) > 2:
+            patch = version[2]
+    python_entries = getattr(finder, 'system_path').find_all_python_versions(version[0])
+    python_entries = [(entry.py_version.version_tuple, entry) for entry in python_entries]
+    if minor and patch:
+        _py = first(entry for entry in python_entries if entry[0][:3] == (version[0], minor, patch))
+        python_entry = _py[1] if _py else None
+    elif minor:
+        _py = first(entry for entry in python_entries if entry[0][:3] == (version[0], minor))
+        python_entry = _py[1] if _py else None
+    else:
+        _py = first(python_entries)
+        python_entry = _py[1] if _py else None
     if not python_entry:
-        python_entry = finder.find_python_version(python, pre=True)
+        version_str = "{0}.{1}".format(version[0], minor) if minor else "{0}".format(version[0])
+        exe_name = "python{0}".format(version_str)
+        python_entry = finder.which(exe_name)
     if python_entry:
         return python_entry.path.as_posix()
     return None
 
-
 def ensure_python(three=None, python=None):
     # Support for the PIPENV_PYTHON environment variable.
     from .environments import PIPENV_PYTHON
