commit 79349dd8f1224d9235c5b9bf8d66bfcc6067e753
Author: Louie Lu <git@louie.lu>
Date:   Tue Jul 24 09:45:12 2018 +0800

    Addressed uranusjr comments

diff --git a/pipenv/core.py b/pipenv/core.py
index d72d2e0f..c1e7d015 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -1257,40 +1257,34 @@ def do_init(
                     ),
                     err=True,
                 )
-            elif old_hash is None:
-                # Lockfile corrupted, remove it and replaced
-                click.echo(
-                    crayons.red(
-                        u"Pipfile.lock is corrupted, replaced with ({0})…".format(
-                            new_hash[-6:]
-                        ),
-                        bold=True,
-                    ),
-                    err=True
-                )
-                os.remove(project.lockfile_location)
-                do_lock(
-                    system=system,
-                    pre=pre,
-                    keep_outdated=keep_outdated,
-                    verbose=verbose,
-                    write=True,
-                    pypi_mirror=pypi_mirror,
-                )
             else:
-                click.echo(
-                    crayons.red(
-                        u"Pipfile.lock ({0}) out of date, updating to ({1})…".format(
-                            old_hash[-6:], new_hash[-6:]
+                if not old_hash:
+                    # Lockfile corrupted, remove it and replaced
+                    click.echo(
+                        crayons.red(
+                            u"Pipfile.lock is corrupted, replaced with ({0})…".format(
+                                new_hash[-6:]
+                            ),
+                            bold=True,
                         ),
-                        bold=True,
-                    ),
-                    err=True,
-                )
+                        err=True
+                    )
+                    os.remove(project.lockfile_location)
+                else:
+                    click.echo(
+                        crayons.red(
+                            u"Pipfile.lock ({0}) out of date, updating to ({1})…".format(
+                                old_hash[-6:], new_hash[-6:]
+                            ),
+                            bold=True,
+                        ),
+                        err=True,
+                    )
                 do_lock(
                     system=system,
                     pre=pre,
                     keep_outdated=keep_outdated,
+                    verbose=verbose,
                     write=True,
                     pypi_mirror=pypi_mirror,
                 )
diff --git a/pipenv/project.py b/pipenv/project.py
index 275a6b41..c5f451e4 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -817,9 +817,9 @@ class Project(object):
 
         try:
             lockfile = self.load_lockfile(expand_env_vars=False)
-        except json.decoder.JSONDecodeError:
+        except ValueError:
             # Lockfile corrupted
-            return
+            return ""
         if "_meta" in lockfile and hasattr(lockfile, "keys"):
             return lockfile["_meta"].get("hash", {}).get("sha256")
         # Lockfile exists but has no hash at all
diff --git a/tests/integration/test_lock.py b/tests/integration/test_lock.py
index a0cdfe15..23d75f8e 100644
--- a/tests/integration/test_lock.py
+++ b/tests/integration/test_lock.py
@@ -392,9 +392,10 @@ django = "*"
 def test_lockfile_corrupted(PipenvInstance):
     with PipenvInstance() as p:
         with open(p.lockfile_path, 'w') as f:
-            f.write('{corrupt}')
+            f.write('{corrupted}')
         c = p.pipenv('install')
         assert c.return_code == 0
+        assert 'Pipfile.lock is corrupted' in c.err
         assert p.lockfile['_meta']
 
 
@@ -406,4 +407,5 @@ def test_lockfile_with_empty_dict(PipenvInstance):
             f.write('{}')
         c = p.pipenv('install')
         assert c.return_code == 0
-        assert p.lockfile['_meta']
\ No newline at end of file
+        assert 'Pipfile.lock is corrupted' in c.err
+        assert p.lockfile['_meta']
