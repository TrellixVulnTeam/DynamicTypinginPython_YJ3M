commit 8ebcd1ae757b4477d14d6c171dd566e2669ab82b
Author: Nate Prewitt <Nate.Prewitt@gmail.com>
Date:   Thu Feb 9 11:34:19 2017 -0700

    only use pypi.org for proper casing

diff --git a/pipenv/cli.py b/pipenv/cli.py
index d5d8ad47..846cbe59 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -144,26 +144,25 @@ def proper_case_section(section):
     """
     # Casing for section
     changed_values = False
-    proper_names = set(project.proper_names)
+    unknown_names = [k for k in section.keys() if k not in set(project.proper_names)]
 
     # Replace each package with proper casing.
-    for dep in section.keys():
-        if dep not in proper_names:
-            try:
-                # Get new casing for package name.
-                new_casing = proper_case(dep)
-            except IOError:
-                # Unable to normalize package name.
-                continue
+    for dep in unknown_names:
+        try:
+            # Get new casing for package name.
+            new_casing = proper_case(dep)
+        except IOError:
+            # Unable to normalize package name.
+            continue
 
-            if new_casing != dep:
-                changed_values = True
-                project.register_proper_name(new_casing)
+        if new_casing != dep:
+            changed_values = True
+            project.register_proper_name(new_casing)
 
-                # Replace old value with new value.
-                old_value = section[dep]
-                section[new_casing] = old_value
-                del section[dep]
+            # Replace old value with new value.
+            old_value = section[dep]
+            section[new_casing] = old_value
+            del section[dep]
 
     # Return whether or not values have been changed.
     return changed_values
@@ -595,7 +594,7 @@ def proper_case(package_name):
                 collected.append(data)
 
     # Hit the simple API.
-    r = requests.get('{0}/{1}'.format(project.source['url'], package_name))
+    r = requests.get('https://pypi.org/simple/{0}'.format(package_name))
     if not r.ok:
         raise IOError('Unable to find package {0} in PyPI repository.'.format(crayons.green(package_name)))
 
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 3a20d6cd..b894e0df 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -61,7 +61,7 @@ class TestPipenv():
 
         changed = ensure_proper_casing(p)
 
-        assert 'django' in p['packages']
+        assert 'Django' in p['packages']
         assert 'DjAnGO' not in p['packages']
 
         assert 'pytest' in p['dev-packages']
@@ -72,7 +72,7 @@ class TestPipenv():
     def test_ensure_proper_casing_no_change(self):
         """Ensure changed flag is false with no changes."""
         pfile_test = ("[packages]\n"
-                      "flask = \"==0.11\"\n"
+                      "Flask = \"==0.11\"\n"
                       "\n\n"
                       "[dev-packages]\n"
                       "pytest = \"*\"\n")
@@ -81,7 +81,7 @@ class TestPipenv():
         p = toml.loads(pfile_test)
         changed = ensure_proper_casing(p)
 
-        assert 'flask' in p['packages']
+        assert 'Flask' in p['packages']
         assert 'pytest' in p['dev-packages']
         assert changed is False
 
