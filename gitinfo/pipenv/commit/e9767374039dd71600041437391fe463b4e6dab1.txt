commit e9767374039dd71600041437391fe463b4e6dab1
Author: Dan Ryan <dan.ryan@canonical.com>
Date:   Wed Apr 8 20:06:54 2020 -0400

    Include data-requires-python in test pypi server
    
    - Fix test plugin for pypi runner
    
    Signed-off-by: Dan Ryan <dan.ryan@canonical.com>

diff --git a/tests/pytest-pypi/pytest_pypi/app.py b/tests/pytest-pypi/pytest_pypi/app.py
index 5484eeb7..5b1e693e 100644
--- a/tests/pytest-pypi/pytest_pypi/app.py
+++ b/tests/pytest-pypi/pytest_pypi/app.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from __future__ import absolute_import, print_function
+import collections
 import contextlib
 import io
 import json
@@ -8,12 +9,15 @@ import os
 from tarfile import is_tarfile
 from zipfile import is_zipfile
 
+import distlib.wheel
 import requests
 from six.moves import xmlrpc_client
 
 from flask import Flask, redirect, abort, render_template, send_file, jsonify
 
 
+ReleaseTuple = collections.namedtuple("ReleaseTuple", ["path", "requires_python"])
+
 app = Flask(__name__)
 session = requests.Session()
 
@@ -49,7 +53,7 @@ class Package(object):
 
     @property
     def json(self):
-        for path in self._package_dirs:
+        for path, _ in self._package_dirs:
             try:
                 with open(os.path.join(path, 'api.json')) as f:
                     return json.load(f)
@@ -59,7 +63,7 @@ class Package(object):
                 releases = response["releases"]
                 files = {
                     pkg for pkg_dir in self._package_dirs
-                    for pkg in os.listdir(pkg_dir)
+                    for pkg in os.listdir(pkg_dir.path)
                 }
                 for release in list(releases.keys()):
                     values = (
@@ -81,8 +85,13 @@ class Package(object):
     def add_release(self, path_to_binary):
         path_to_binary = os.path.abspath(path_to_binary)
         path, release = os.path.split(path_to_binary)
-        self.releases[release] = path_to_binary
-        self._package_dirs.add(path)
+        requires_python = ""
+        if path_to_binary.endswith(".whl"):
+            pkg = distlib.wheel.Wheel(path_to_binary)
+            md_dict = pkg.metadata.todict()
+            requires_python = md_dict.get("requires_python", "")
+        self.releases[release] = ReleaseTuple(path_to_binary, requires_python)
+        self._package_dirs.add(ReleaseTuple(path, requires_python))
 
 
 class Artifact(object):
@@ -194,7 +203,7 @@ def serve_package(package, release):
         package = packages[package]
 
         if release in package.releases:
-            return send_file(package.releases[release])
+            return send_file(package.releases[release].path)
 
     abort(404)
 
diff --git a/tests/pytest-pypi/pytest_pypi/templates/package.html b/tests/pytest-pypi/pytest_pypi/templates/package.html
index 26ba9eca..3d364517 100644
--- a/tests/pytest-pypi/pytest_pypi/templates/package.html
+++ b/tests/pytest-pypi/pytest_pypi/templates/package.html
@@ -6,8 +6,8 @@
 </head>
 <body>
 	<h1>Links for {{ package.name }}</h1>
-	{% for release in package.releases %}
-		<a href="/{{ package.name }}/{{ release }}">{{ release }}</a>
+	{% for release, value in package.releases.items() %}
+		<a href="/{{ package.name }}/{{ release }}"{%- if value.requires_python %} data-requires-python="{{ value.requires_python }}"{% endif %}>{{ release }}</a>
 		<br>
 	{% endfor %}
 </body>
