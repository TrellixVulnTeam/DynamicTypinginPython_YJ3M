commit a0f82865f850b9fb4266c33bc73414d6f5c2f9bc
Author: Dan Ryan <dan.ryan@canonical.com>
Date:   Mon May 18 17:22:23 2020 -0400

    Add tests for VCS pep508 subdependencies
    
    Signed-off-by: Dan Ryan <dan.ryan@canonical.com>

diff --git a/tests/fixtures/parent_folder/pep508-package/setup.py b/tests/fixtures/parent_folder/pep508-package/setup.py
new file mode 100644
index 00000000..dd7505e5
--- /dev/null
+++ b/tests/fixtures/parent_folder/pep508-package/setup.py
@@ -0,0 +1,22 @@
+import os
+
+from setuptools import find_packages, setup
+
+thisdir = os.path.abspath(os.path.dirname(__file__))
+version = "1.0.0"
+
+setup(
+    name="pep508_package",
+    version=version,
+    description="The Backend HTTP Server",
+    long_description="This is a package",
+    install_requires=[
+        "six",
+        "sibling_package @ {0}",
+    ],
+    extras_require={"testing": ["coverage", "flaky"], "dev": ["parver", "invoke", "wheel"]},
+    package_dir={"": "src"},
+    packages=["pep508_package"],
+    include_package_data=True,
+    zip_safe=True,
+)
diff --git a/tests/fixtures/parent_folder/pep508-package/src/pep508_package/__init__.py b/tests/fixtures/parent_folder/pep508-package/src/pep508_package/__init__.py
new file mode 100644
index 00000000..f102a9ca
--- /dev/null
+++ b/tests/fixtures/parent_folder/pep508-package/src/pep508_package/__init__.py
@@ -0,0 +1 @@
+__version__ = "0.0.1"
diff --git a/tests/fixtures/parent_folder/sibling_package/setup.py b/tests/fixtures/parent_folder/sibling_package/setup.py
new file mode 100644
index 00000000..115be2e6
--- /dev/null
+++ b/tests/fixtures/parent_folder/sibling_package/setup.py
@@ -0,0 +1,24 @@
+import os
+
+from setuptools import find_packages, setup
+
+thisdir = os.path.abspath(os.path.dirname(__file__))
+version = "1.0.0"
+
+testing_extras = ["coverage", "flaky"]
+
+setup(
+    name="sibling_package",
+    version=version,
+    description="The Backend HTTP Server",
+    long_description="This is a package",
+    install_requires=[
+        "toml",
+        "urllib3"
+    ],
+    tests_require=testing_extras,
+    package_dir={"": "src"},
+    packages=["sibling_package"],
+    include_package_data=True,
+    zip_safe=True,
+)
diff --git a/tests/fixtures/parent_folder/sibling_package/src/sibling_package/__init__.py b/tests/fixtures/parent_folder/sibling_package/src/sibling_package/__init__.py
new file mode 100644
index 00000000..f102a9ca
--- /dev/null
+++ b/tests/fixtures/parent_folder/sibling_package/src/sibling_package/__init__.py
@@ -0,0 +1 @@
+__version__ = "0.0.1"
diff --git a/tests/integration/test_lock.py b/tests/integration/test_lock.py
index 633e8f93..af7f1098 100644
--- a/tests/integration/test_lock.py
+++ b/tests/integration/test_lock.py
@@ -2,6 +2,7 @@
 
 import json
 import os
+import shutil
 import sys
 
 import pytest
@@ -10,6 +11,7 @@ from flaky import flaky
 from vistir.compat import Path
 from vistir.misc import to_text
 from pipenv.utils import temp_environ
+import delegator
 
 
 @pytest.mark.lock
@@ -728,3 +730,41 @@ def test_lock_nested_direct_url(PipenvInstance):
         assert "vistir" in p.lockfile["default"]
         assert "colorama" in p.lockfile["default"]
         assert "six" in p.lockfile["default"]
+
+
+@pytest.mark.lock
+def test_lock_nested_vcs_direct_url(PipenvInstance, monkeypatch):
+    package_parent = Path(__file__).absolute().parent.parent.joinpath(
+        "fixtures"
+    ).joinpath("parent_folder")
+    pep508_package = package_parent.joinpath("pep508-package")
+    sibling_package = package_parent.joinpath("sibling_package")
+    pep508_setuppy = pep508_package.joinpath("setup.py")
+    lines = []
+    for line in pep508_setuppy.read_text().split("\n"):
+        if line.strip().startswith('"sibling_package'):
+            line = line.format("{0}@master#subdirectory={1}".format(package_parent.as_uri(), "sibling_package"))
+        lines.append(line)
+    pep508_setuppy.write_text("\n".join(lines))
+    try:
+        with monkeypatch.context() as m:
+            m.chdir(package_parent.as_posix())
+            c = delegator.run("git init")
+            assert c.return_code == 0
+            c = delegator.run("git add .")
+            assert c.return_code == 0
+            c = delegator.run('git commit -m "initial commit"')
+            assert c.return_code == 0
+        with PipenvInstance() as p:
+            p._pipfile.add("pep508_package", {
+                "editable": True, "git": "{0}".format(package_parent.as_uri()),
+                "ref": "master", "subdirectory": "pep508-package"
+            })
+            c = p.pipenv("install")
+            assert c.return_code == 0
+            assert "git" in p.lockfile["default"]["pep508_package"]
+            assert "sibling_package" in p.lockfile["default"]
+            assert "git" in p.lockfie["default"]["sibling_package"]
+            assert "subdirectory" in p.lockfile["default"]["sibling_package"]
+    finally:
+        shutil.rmtree(package_parent.joinpath(".git").as_posix())
