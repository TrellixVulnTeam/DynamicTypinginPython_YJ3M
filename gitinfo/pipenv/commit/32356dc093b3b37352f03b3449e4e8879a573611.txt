commit 32356dc093b3b37352f03b3449e4e8879a573611
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Mar 21 06:54:29 2018 -0400

    improvements to pipfile
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/vendor/pipfile/__about__.py b/pipenv/patched/pipfile/__about__.py
similarity index 100%
rename from pipenv/vendor/pipfile/__about__.py
rename to pipenv/patched/pipfile/__about__.py
diff --git a/pipenv/vendor/pipfile/__init__.py b/pipenv/patched/pipfile/__init__.py
similarity index 100%
rename from pipenv/vendor/pipfile/__init__.py
rename to pipenv/patched/pipfile/__init__.py
diff --git a/pipenv/vendor/pipfile/api.py b/pipenv/patched/pipfile/api.py
similarity index 95%
rename from pipenv/vendor/pipfile/api.py
rename to pipenv/patched/pipfile/api.py
index 0c0aa517..e0604403 100644
--- a/pipenv/vendor/pipfile/api.py
+++ b/pipenv/patched/pipfile/api.py
@@ -82,7 +82,7 @@ class PipfileParser(object):
 
         return d
 
-    def parse(self):
+    def parse(self, inject_env=True):
         # Open the Pipfile.
         with open(self.filename) as f:
             content = f.read()
@@ -99,10 +99,15 @@ class PipfileParser(object):
         config.update(default_config)
 
         # Deserialize the TOML, and parse for Environment Variables
-        parsed_toml = self.inject_environment_variables(toml.loads(content))
+        parsed = toml.loads(content)
 
-        # Load the Pipfile's configuration.
-        config.update(parsed_toml)
+        if inject_env:
+            injected_toml = self.inject_environment_variables(parsed)
+
+            # Load the Pipfile's configuration.
+            config.update(injected_toml)
+        else:
+            config.update(parsed)
 
         # Structure the data for output.
         data = {
diff --git a/pipenv/project.py b/pipenv/project.py
index 968c371b..c9ced40c 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -307,6 +307,14 @@ class Project(object):
             _pipfile_cache[cache_key] = parsed
         return _pipfile_cache[cache_key]
 
+    @property
+    def pased_pure_pipfile(self):
+        with open(self.pipfile_location) as f:
+            contents = f.read()
+
+        return self._parse_pipfile(contents)
+
+
     def clear_pipfile_cache(self):
         """Clear pipfile cache (e.g., so we can mutate parsed pipfile)"""
         _pipfile_cache.clear()
