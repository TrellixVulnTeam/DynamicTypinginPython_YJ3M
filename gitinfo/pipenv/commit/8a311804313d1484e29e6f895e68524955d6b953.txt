commit 8a311804313d1484e29e6f895e68524955d6b953
Author: Diego Mora Cespedes <d.moracespedes@gmail.com>
Date:   Wed Sep 27 00:42:32 2017 +0200

    Display warning message if PYENV_ROOT is not set and abort if installed python is not the desired one

diff --git a/.gitignore b/.gitignore
index 8259196f..739fd3d3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -12,3 +12,4 @@ build
 test_project
 Pipfile.lock
 /.vscode/
+.idea
diff --git a/pipenv/cli.py b/pipenv/cli.py
index d869c5e3..3fe47f7d 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -46,7 +46,7 @@ from .environments import (
     PIPENV_COLORBLIND, PIPENV_NOSPIN, PIPENV_SHELL_FANCY,
     PIPENV_VENV_IN_PROJECT, PIPENV_USE_SYSTEM, PIPENV_TIMEOUT,
     PIPENV_SKIP_VALIDATION, PIPENV_HIDE_EMOJIS, PIPENV_INSTALL_TIMEOUT,
-    PYENV_INSTALLED, PIPENV_YES, PIPENV_DONT_LOAD_ENV,
+    PYENV_ROOT, PYENV_INSTALLED, PIPENV_YES, PIPENV_DONT_LOAD_ENV,
     PIPENV_DEFAULT_PYTHON_VERSION, PIPENV_MAX_SUBPROCESS,
     PIPENV_DONT_USE_PYENV, SESSION_IS_INTERACTIVE, PIPENV_USE_SYSTEM,
     PIPENV_DOTENV_LOCATION
@@ -122,7 +122,6 @@ urllib3.disable_warnings(InsecureRequestWarning)
 project = Project()
 
 
-
 def load_dot_env():
     if not PIPENV_DONT_LOAD_ENV:
         denv = dotenv.find_dotenv(PIPENV_DOTENV_LOCATION or os.sep.join([project.project_directory, '.env']))
@@ -390,13 +389,23 @@ def ensure_python(three=None, python=None):
     def activate_pyenv():
         """Adds all pyenv installations to the PATH."""
         if PYENV_INSTALLED:
-            for found in glob(
-                '{0}{1}versions{1}*{1}bin'.format(
-                    os.environ.get('PYENV_ROOT'),
-                    os.sep
+            if PYENV_ROOT:
+                for found in glob(
+                    '{0}{1}versions{1}*{1}bin'.format(
+                        PYENV_ROOT,
+                        os.sep
+                    )
+                ):
+                    add_to_path(found)
+            else:
+                click.echo(
+                    '{0}: PYENV_ROOT is not set. New python paths will '
+                    'probably not be exported properly after installation.'
+                    ''.format(
+                        crayons.red('Warning', bold=True),
+                    ), err=True
                 )
-            ):
-                add_to_path(found)
+
 
     global USING_DEFAULT_PYTHON
 
diff --git a/pipenv/environments.py b/pipenv/environments.py
index cb2810c0..dfb7fcdd 100644
--- a/pipenv/environments.py
+++ b/pipenv/environments.py
@@ -78,6 +78,8 @@ PIPENV_INSTALL_TIMEOUT = 60 * 15
 
 PIPENV_DONT_USE_PYENV = os.environ.get('PIPENV_DONT_USE_PYENV')
 
-PYENV_INSTALLED = (bool(os.environ.get('PYENV_SHELL')) or bool(os.environ.get('PYENV_ROOT')))
+PYENV_ROOT = os.environ.get('PYENV_ROOT')
+
+PYENV_INSTALLED = (bool(os.environ.get('PYENV_SHELL')) or bool(PYENV_ROOT))
 
 SESSION_IS_INTERACTIVE = bool(os.isatty(sys.stdout.fileno()))
