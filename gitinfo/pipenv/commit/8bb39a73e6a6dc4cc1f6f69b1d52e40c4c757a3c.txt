commit 8bb39a73e6a6dc4cc1f6f69b1d52e40c4c757a3c
Author: Dan Ryan <dan@danryan.co>
Date:   Mon Jun 17 02:04:55 2019 -0400

    Check stderr instead of stdout for message and add required info back to outdated packages
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/core.py b/pipenv/core.py
index abc2b8ac..59c4f469 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -1812,6 +1812,7 @@ def do_outdated(pypi_mirror=None):
         (pkg.project_name, pkg.parsed_version, pkg.latest_version)
         for pkg in project.environment.get_outdated_packages()
     }
+    reverse_deps = project.environment.reverse_dependencies()
     for result in installed_packages:
         dep = Requirement.from_line(str(result.as_requirement()))
         packages.update(dep.as_pipfile())
@@ -1841,15 +1842,18 @@ def do_outdated(pypi_mirror=None):
         version = None
         if name_in_pipfile:
             version = get_version(project.packages[name_in_pipfile])
+            reverse_deps = reverse_deps.get(name_in_pipfile)
+            if isinstance(reverse_deps, Mapping) and "required" in reverse_deps:
+                required = " {0} required".format(reverse_deps["required"])
             if version:
                 pipfile_version_text = " ({0} set in Pipfile)".format(version)
             else:
                 pipfile_version_text = " (Unpinned in Pipfile)"
         click.echo(
             crayons.yellow(
-                "Skipped Update of Package {0!s}: {1!s} installed{2!s}, "
-                "{3!s} available.".format(
-                    package, old_version, pipfile_version_text, new_version
+                "Skipped Update of Package {0!s}: {1!s} installed,{2!s}{3!s}, "
+                "{4!s} available.".format(
+                    package, old_version, required, pipfile_version_text, new_version
                 )
             ), err=True
         )
diff --git a/tests/integration/test_install_twists.py b/tests/integration/test_install_twists.py
index 38be0a57..a231c17d 100644
--- a/tests/integration/test_install_twists.py
+++ b/tests/integration/test_install_twists.py
@@ -382,7 +382,7 @@ def test_outdated_should_compare_postreleases_without_failing(PipenvInstance):
         assert c.return_code == 0
         c = p.pipenv("update --outdated")
         assert c.return_code == 0
-        assert "Skipped Update" in c.out
+        assert "Skipped Update" in c.err
         p._pipfile.update("ibm-db-sa-py3", "*")
         c = p.pipenv("update --outdated")
         assert c.return_code != 0
