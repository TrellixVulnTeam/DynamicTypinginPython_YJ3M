commit 97426bf1456bd390648a89e99fc0b214dfbf7e1a
Author: Felipe Arruda Pontes <felipe.arruda.pontes@gmail.com>
Date:   Mon Feb 13 21:19:36 2017 -0200

    rm mock for project.virtualenv_location in tests, fixing some url in tests and other typos as well

diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 27cef36a..219376e7 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -135,15 +135,14 @@ class TestPipenv():
 
         assert command == '{0}/bin/activate'.format(venv)
 
-    @patch('pipenv.project.Project.virtualenv_location', new_callable=PropertyMock(return_value='foo'))
     @patch('pipenv.project.Project.sources', new_callable=PropertyMock)
     @patch('delegator.run')
-    def test_pip_install_should_try_every_possible_source(self, mocked_delegator, mockec_sources, mocked_venv_location):
+    def test_pip_install_should_try_every_possible_source(self, mocked_delegator, mocked_sources):
         sources = [
             {'url': 'http://dontexistis.in.pypi/simple'},
             {'url': 'http://existis.in.pypi/simple'}
         ]
-        mockec_sources.return_value = sources
+        mocked_sources.return_value = sources
         first_cmd_return = Mock()
         first_cmd_return.return_code = 1
         second_cmd_return = Mock()
@@ -152,15 +151,14 @@ class TestPipenv():
         c = pip_install('package')
         assert c.return_code == 0
 
-    @patch('pipenv.project.Project.virtualenv_location', new_callable=PropertyMock(return_value='foo'))
     @patch('pipenv.project.Project.sources', new_callable=PropertyMock)
     @patch('delegator.run')
-    def test_pip_install_should_return_the_last_error_if_no_cmd_worked(self, mocked_delegator, mockec_sources, mocked_venv_location):
+    def test_pip_install_should_return_the_last_error_if_no_cmd_worked(self, mocked_delegator, mocked_sources):
         sources = [
             {'url': 'http://dontexistis.in.pypi/simple'},
             {'url': 'http://dontexistis.in.pypi/simple'}
         ]
-        mockec_sources.return_value = sources
+        mocked_sources.return_value = sources
         first_cmd_return = Mock()
         first_cmd_return.return_code = 1
         second_cmd_return = Mock()
@@ -170,15 +168,14 @@ class TestPipenv():
         assert c.return_code == 1
         assert c == second_cmd_return
 
-    @patch('pipenv.project.Project.virtualenv_location', new_callable=PropertyMock(return_value='foo'))
     @patch('pipenv.project.Project.sources', new_callable=PropertyMock)
     @patch('delegator.run')
-    def test_pip_install_should_return_the_first_cmd_that_worked(self, mocked_delegator, mockec_sources, mocked_venv_location):
+    def test_pip_install_should_return_the_first_cmd_that_worked(self, mocked_delegator, mocked_sources):
         sources = [
-            {'url': 'http://dontexistis.in.pypi/simple'},
-            {'url': 'http://dontexistis.in.pypi/simple'}
+            {'url': 'http://existis.in.pypi/simple'},
+            {'url': 'http://existis.in.pypi/simple'}
         ]
-        mockec_sources.return_value = sources
+        mocked_sources.return_value = sources
         first_cmd_return = Mock()
         first_cmd_return.return_code = 0
         second_cmd_return = Mock()
