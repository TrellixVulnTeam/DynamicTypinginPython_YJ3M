commit b3aa66b1542200994dcdd5770228568a7f6dbac7
Author: frostming <mianghong@gmail.com>
Date:   Thu Nov 8 17:26:39 2018 +0800

    make tomlkit dump toml's inline table

diff --git a/pipenv/project.py b/pipenv/project.py
index 74fe6527..6d59b4cb 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -572,10 +572,15 @@ class Project(object):
         """Clear pipfile cache (e.g., so we can mutate parsed pipfile)"""
         _pipfile_cache.clear()
 
+    @staticmethod
+    def _is_tomlkit_parsed_result(parsed):
+        """Check by duck typing of tomlkit.api.Container"""
+        return hasattr(parsed, "_body")
+
     @staticmethod
     def convert_outline_table(parsed):
         """Converts all outline to inline tables"""
-        if hasattr(parsed, "_body"):    # Duck-type that implies tomlkit.api.Container.
+        if Project._istomlkit_parsed_result(parsed):
             empty_inline_table = tomlkit.inline_table
         else:
             empty_inline_table = toml.TomlDecoder().get_empty_inline_table
@@ -852,11 +857,7 @@ class Project(object):
         if path is None:
             path = self.pipfile_location
         try:
-            if hasattr(data, "_body"):
-                formatted_data = tomlkit.dumps(data).rstrip()
-            else:
-                encoder = toml.encoder.TomlPreserveInlineDictEncoder()
-                formatted_data = toml.dumps(data, encoder=encoder).rstrip()
+            formatted_data = tomlkit.dumps(data).rstrip()
         except Exception:
             document = tomlkit.document()
             for section in ("packages", "dev-packages"):
diff --git a/pipenv/vendor/tomlkit/items.py b/pipenv/vendor/tomlkit/items.py
index 781e2e98..80e029d9 100644
--- a/pipenv/vendor/tomlkit/items.py
+++ b/pipenv/vendor/tomlkit/items.py
@@ -21,6 +21,7 @@ if PY2:
     from pipenv.vendor.backports.functools_lru_cache import lru_cache
 else:
     from functools import lru_cache
+from toml.decoder import InlineTableDict
 
 
 def item(value, _parent=None):
@@ -36,7 +37,10 @@ def item(value, _parent=None):
     elif isinstance(value, float):
         return Float(value, Trivia(), str(value))
     elif isinstance(value, dict):
-        val = Table(Container(), Trivia(), False)
+        if isinstance(value, InlineTableDict):
+            val = InlineTable(Container(), Trivia())
+        else:
+            val = Table(Container(), Trivia(), False)
         for k, v in sorted(value.items(), key=lambda i: (isinstance(i[1], dict), i[0])):
             val[k] = item(v, _parent=val)
 
diff --git a/tasks/vendoring/patches/vendor/tomlkit-dump-inline-table.patch b/tasks/vendoring/patches/vendor/tomlkit-dump-inline-table.patch
new file mode 100644
index 00000000..755bd31a
--- /dev/null
+++ b/tasks/vendoring/patches/vendor/tomlkit-dump-inline-table.patch
@@ -0,0 +1,24 @@
+diff --git a/pipenv/vendor/tomlkit/items.py b/pipenv/vendor/tomlkit/items.py
+index 781e2e98..80e029d9 100644
+--- a/pipenv/vendor/tomlkit/items.py
++++ b/pipenv/vendor/tomlkit/items.py
+@@ -21,6 +21,7 @@ if PY2:
+     from pipenv.vendor.backports.functools_lru_cache import lru_cache
+ else:
+     from functools import lru_cache
++from toml.decoder import InlineTableDict
+ 
+ 
+ def item(value, _parent=None):
+@@ -36,7 +37,10 @@ def item(value, _parent=None):
+     elif isinstance(value, float):
+         return Float(value, Trivia(), str(value))
+     elif isinstance(value, dict):
+-        val = Table(Container(), Trivia(), False)
++        if isinstance(value, InlineTableDict):
++            val = InlineTable(Container(), Trivia())
++        else:
++            val = Table(Container(), Trivia(), False)
+         for k, v in sorted(value.items(), key=lambda i: (isinstance(i[1], dict), i[0])):
+             val[k] = item(v, _parent=val)
+ 
