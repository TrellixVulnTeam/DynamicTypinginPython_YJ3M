commit 254829160e0b50916b9da18ebe4508d61a64f072
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Sep 13 11:29:49 2017 -0400

    better checks, shorter directories
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/cli.py b/pipenv/cli.py
index b0f6c340..41ca4393 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -322,25 +322,6 @@ def ensure_python(three=None, python=None):
         )
         sys.exit(1)
 
-    if project.required_python_version and (three is not None):
-
-        # Warn that they're doing something dumb.
-        if project.required_python_version not in python_version(path_to_python):
-            click.echo(
-                '{0}: Your Pipfile requires {1} {2}, '
-                'but you specified {3} ({4}).'.format(
-                    crayons.red('Warning', bold=True),
-                    crayons.white('python_version', bold=True),
-                    crayons.blue(project.required_python_version),
-                    crayons.blue(python_version(path_to_python)),
-                    crayons.green(path_to_python),
-                )
-            )
-            click.echo(
-                'We will carry on, as requested. {0} will likely fail.'
-                ''.format(crayons.red('$ pipenv check'))
-            )
-
     return path_to_python
 
 
@@ -377,6 +358,25 @@ def ensure_project(three=None, python=None, validate=True, system=False):
     if not system:
         ensure_virtualenv(three=three, python=python)
 
+        # Warn users if they are using the wrong version of Python.
+        if project.required_python_version:
+            path_to_python = which('python')
+            if project.required_python_version not in python_version(path_to_python):
+                click.echo(
+                    '{0}: Your Pipfile requires {1} {2}, '
+                    'but you are using {3} ({4}).'.format(
+                        crayons.red('Warning', bold=True),
+                        crayons.white('python_version', bold=True),
+                        crayons.blue(project.required_python_version),
+                        crayons.blue(python_version(path_to_python)),
+                        crayons.green(shorten_path(path_to_python))
+                    )
+                )
+                click.echo(
+                    '  {0} will surely fail.'
+                    ''.format(crayons.red('$ pipenv check'))
+                )
+
 
 def ensure_proper_casing(pfile):
     """Ensures proper casing of Pipfile packages, writes changes to disk."""
@@ -418,12 +418,20 @@ def proper_case_section(section):
     return changed_values
 
 
+def shorten_path(location):
+    """Returns a visually shorter representation of a given system path."""
+    return os.sep.join([s[0] if len(s) > (len('Pipfile')) else s for s in location.split(os.sep)])
+
+
 def do_where(virtualenv=False, bare=True):
     """Executes the where functionality."""
 
     if not virtualenv:
         location = project.pipfile_location
 
+        # Shorten the virual display of the path to the virtualenv.
+        location = shorten_path(location)
+
         if not location:
             click.echo(
                 'No Pipfile present at project home. Consider running '
