commit 37ba5571104be230a988df27573545e3ea96d44d
Author: Dan Ryan <dan@danryan.co>
Date:   Fri Jun 22 20:32:09 2018 -0400

    Get rid of em-dashes from cli and man help
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 91abc522..4ff57353 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -356,16 +356,16 @@ def cli(
     '--deploy',
     is_flag=True,
     default=False,
-    help=u"Abort if the Pipfile.lock is out–of–date, or Python version is wrong.",
+    help=u"Abort if the Pipfile.lock is out-of-date, or Python version is wrong.",
 )
 @option(
-    '--pre', is_flag=True, default=False, help=u"Allow pre–releases."
+    '--pre', is_flag=True, default=False, help=u"Allow pre-releases."
 )
 @option(
     '--keep-outdated',
     is_flag=True,
     default=False,
-    help=u"Keep out–dated dependencies from being updated in Pipfile.lock.",
+    help=u"Keep out-dated dependencies from being updated in Pipfile.lock.",
 )
 @option(
     '--selective-upgrade',
@@ -463,7 +463,7 @@ def install(
     '--keep-outdated',
     is_flag=True,
     default=False,
-    help=u"Keep out–dated dependencies from being updated in Pipfile.lock.",
+    help=u"Keep out-dated dependencies from being updated in Pipfile.lock.",
 )
 @option(
     '--pypi-mirror',
@@ -549,13 +549,13 @@ def uninstall(
     '--clear', is_flag=True, default=False, help="Clear the dependency cache."
 )
 @option(
-    '--pre', is_flag=True, default=False, help=u"Allow pre–releases."
+    '--pre', is_flag=True, default=False, help=u"Allow pre-releases."
 )
 @option(
     '--keep-outdated',
     is_flag=True,
     default=False,
-    help=u"Keep out–dated dependencies from being updated in Pipfile.lock.",
+    help=u"Keep out-dated dependencies from being updated in Pipfile.lock.",
 )
 def lock(
     three=None,
@@ -752,13 +752,13 @@ def check(
 )
 @option('--bare', is_flag=True, default=False, help="Minimal output.")
 @option(
-    '--pre', is_flag=True, default=False, help=u"Allow pre–releases."
+    '--pre', is_flag=True, default=False, help=u"Allow pre-releases."
 )
 @option(
     '--keep-outdated',
     is_flag=True,
     default=False,
-    help=u"Keep out–dated dependencies from being updated in Pipfile.lock.",
+    help=u"Keep out-dated dependencies from being updated in Pipfile.lock.",
 )
 @option(
     '--sequential',
@@ -770,13 +770,13 @@ def check(
     '--outdated',
     is_flag=True,
     default=False,
-    help=u"List out–of–date dependencies.",
+    help=u"List out-of-date dependencies.",
 )
 @option(
     '--dry-run',
     is_flag=True,
     default=None,
-    help=u"List out–of–date dependencies.",
+    help=u"List out-of-date dependencies.",
 )
 @argument('package', default=False)
 @pass_context
@@ -855,7 +855,7 @@ def update(
 
 
 @command(
-    short_help=u"Displays currently–installed dependency graph information."
+    short_help=u"Displays currently-installed dependency graph information."
 )
 @option('--bare', is_flag=True, default=False, help="Minimal output.")
 @option('--json', is_flag=True, default=False, help="Output JSON.")
diff --git a/pipenv/pipenv.1 b/pipenv/pipenv.1
index 10fc911f..d98972c0 100644
--- a/pipenv/pipenv.1
+++ b/pipenv/pipenv.1
@@ -40,9 +40,9 @@ level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
 .sp
 \fBPipenv\fP —\ the officially recommended Python packaging tool from \fI\%Python.org\fP, free (as in freedom).
 .sp
-Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. \fIWindows is a first–class citizen, in our world.\fP
+Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. \fIWindows is a first-class citizen, in our world.\fP
 .sp
-It automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your \fBPipfile\fP as you install/uninstall packages. It also generates the ever–important \fBPipfile.lock\fP, which is used to produce deterministic builds.
+It automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your \fBPipfile\fP as you install/uninstall packages. It also generates the ever-important \fBPipfile.lock\fP, which is used to produce deterministic builds.
 .sp
 The problems that Pipenv seeks to solve are multi\-faceted:
 .INDENT 0.0
@@ -670,7 +670,7 @@ Note the inclusion of \fB[requires] python_version = "3.6"\fP\&. This specifies
 of Python, and will be used automatically when running \fBpipenv install\fP against this \fBPipfile\fP in the future
 (e.g. on other machines). If this is not true, feel free to simply remove this section.
 .sp
-If you don\(aqt specify a Python version on the command–line, either the \fB[requires]\fP \fBpython_full_version\fP or \fBpython_version\fP will be selected
+If you don\(aqt specify a Python version on the command-line, either the \fB[requires]\fP \fBpython_full_version\fP or \fBpython_version\fP will be selected
 automatically, falling back to whatever your system\(aqs default \fBpython\fP installation is, at time of execution.
 .SS ☤ Editable Dependencies (e.g. \fB\-e .\fP )
 .sp
@@ -800,7 +800,7 @@ The shell launched in interactive mode. This means that if your shell reads its
 .UNINDENT
 .SS ☤ A Note about VCS Dependencies
 .sp
-Pipenv will resolve the sub–dependencies of VCS dependencies, but only if they are editable, like so:
+Pipenv will resolve the sub-dependencies of VCS dependencies, but only if they are editable, like so:
 .INDENT 0.0
 .INDENT 3.5
 .sp
@@ -813,7 +813,7 @@ requests = {git = "https://github.com/requests/requests.git", editable=true}
 .UNINDENT
 .UNINDENT
 .sp
-If editable is not true, sub–dependencies will not get resolved.
+If editable is not true, sub-dependencies will not get resolved.
 .SS ☤ Pipfile.lock Security Features
 .sp
 \fBPipfile.lock\fP takes advantage of some great new security improvements in \fBpip\fP\&.
@@ -931,7 +931,7 @@ $ pipenv install \-\-system \-\-deploy
 .UNINDENT
 .UNINDENT
 .sp
-This will fail a build if the \fBPipfile.lock\fP is out–of–date, instead of generating a new one.
+This will fail a build if the \fBPipfile.lock\fP is out-of-date, instead of generating a new one.
 .SS ☤ Generating a \fBrequirements.txt\fP
 .sp
 You can convert a \fBPipfile\fP and \fBPipenv.lock\fP into a \fBrequirements.txt\fP file very easily, and get all the benefits of hashes, extras, and other goodies we have included.
