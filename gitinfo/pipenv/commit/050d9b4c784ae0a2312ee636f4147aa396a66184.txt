commit 050d9b4c784ae0a2312ee636f4147aa396a66184
Author: John Vandenberg <jayvdb@gmail.com>
Date:   Wed Apr 3 12:31:17 2019 +0700

    graph tests: Replace requests with tablib 0.13.0
    
    These tests fail when using requests in a de-vendored installation
    because requests is part of the pre-installed image.
    
    tablib has fewer constraints on its dependencies, however its
    dependency tree is complicated enough to approximately test
    the same functionality, and allows the graph tests to pass
    even when de-vendored.

diff --git a/tests/integration/test_cli.py b/tests/integration/test_cli.py
index 6d936a7f..1ee9f64a 100644
--- a/tests/integration/test_cli.py
+++ b/tests/integration/test_cli.py
@@ -84,46 +84,60 @@ def test_pipenv_rm(PipenvInstance):
 @pytest.mark.cli
 def test_pipenv_graph(PipenvInstance):
     with PipenvInstance() as p:
-        c = p.pipenv('install requests')
+        c = p.pipenv('install tablib')
         assert c.ok
         graph = p.pipenv("graph")
         assert graph.ok
-        assert "requests" in graph.out
+        assert "tablib" in graph.out
         graph_json = p.pipenv("graph --json")
         assert graph_json.ok
-        assert "requests" in graph_json.out
+        assert "tablib" in graph_json.out
         graph_json_tree = p.pipenv("graph --json-tree")
         assert graph_json_tree.ok
-        assert "requests" in graph_json_tree.out
+        assert "tablib" in graph_json_tree.out
 
 
 @pytest.mark.cli
 def test_pipenv_graph_reverse(PipenvInstance):
     with PipenvInstance() as p:
-        c = p.pipenv('install requests==2.18.4')
+        c = p.pipenv('install tablib==0.13.0')
         assert c.ok
         c = p.pipenv('graph --reverse')
         assert c.ok
         output = c.out
 
+        c = p.pipenv('graph --reverse --json')
+        assert c.return_code == 1
+        assert 'Warning: Using both --reverse and --json together is not supported.' in c.err
+
         requests_dependency = [
-            ('certifi', 'certifi>=2017.4.17'),
-            ('chardet', 'chardet(>=3.0.2,<3.1.0|<3.1.0,>=3.0.2)'),
-            ('idna', 'idna(>=2.5,<2.7|<2.7,>=2.5)'),
-            ('urllib3', 'urllib3(>=1.21.1,<1.23|<1.23,>=1.21.1)')
+            ('backports.csv', 'backports.csv'),
+            ('odfpy', 'odfpy'),
+            ('openpyxl', 'openpyxl>=2.4.0'),
+            ('pyyaml', 'pyyaml'),
+            ('xlrd', 'xlrd'),
+            ('xlwt', 'xlwt'),
         ]
 
         for dep_name, dep_constraint in requests_dependency:
-            dep_match = re.search(r'^{}==[\d.]+$'.format(dep_name), output, flags=re.MULTILINE)
-            dep_requests_match = re.search(r'^  - requests==2.18.4 \[requires: {}\]$'.format(dep_constraint), output, flags=re.MULTILINE)
-            assert dep_match is not None
-            assert dep_requests_match is not None
+            pat = r'^[ -]*{}==[\d.]+'.format(dep_name)
+            dep_match = re.search(pat, output, flags=re.MULTILINE)
+            assert dep_match is not None, '{} not found in {}'.format(pat, output)
+
+            # openpyxl should be indented
+            if dep_name == 'openpyxl':
+                openpyxl_dep = re.search(r'^openpyxl', output, flags=re.MULTILINE)
+                assert openpyxl_dep is None, 'openpyxl should not appear at begining of lines in {}'.format(output)
+
+                assert '  - openpyxl==2.5.4 [requires: et-xmlfile]' in output
+            else:
+                dep_match = re.search(r'^[ -]*{}==[\d.]+$'.format(dep_name), output, flags=re.MULTILINE)
+                assert dep_match is not None, '{} not found at beginning of line in {}'.format(dep_name, output)
+
+            dep_requests_match = re.search(r'^ +- tablib==0.13.0 \[requires: {}\]$'.format(dep_constraint), output, flags=re.MULTILINE)
+            assert dep_requests_match is not None, 'constraint {} not found in {}'.format(dep_constraint, output)
             assert dep_requests_match.start() > dep_match.start()
 
-        c = p.pipenv('graph --reverse --json')
-        assert c.return_code == 1
-        assert 'Warning: Using both --reverse and --json together is not supported.' in c.err
-
 
 @pytest.mark.cli
 @pytest.mark.needs_internet(reason='required by check')
