commit b0ba9a8766dc2c3c18af458b5830ed1847fea3f6
Author: Dan Ryan <dan@danryan.co>
Date:   Sat Feb 23 14:23:18 2019 -0500

    Update syntax for context manager virtualenv test class
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/tests/integration/conftest.py b/tests/integration/conftest.py
index 929f3baf..e400fc06 100644
--- a/tests/integration/conftest.py
+++ b/tests/integration/conftest.py
@@ -373,11 +373,12 @@ class VirtualEnv(object):
         self.path = base_dir / name
 
     def __enter__(self):
+        self._old_environ = os.environ.copy()
         self.create()
         return self.activate()
 
     def __exit__(self, *args, **kwargs):
-        pass
+        os.environ = self._old_environ
 
     def create(self):
         python = Path(sys.executable).as_posix()
@@ -386,12 +387,9 @@ class VirtualEnv(object):
         assert c.return_code == 0
 
     def activate(self):
-        script_paths = [
-            self.path.joinpath(name).joinpath("activate_this.py")
-            for name in ("bin", "Scripts")
-        ]
-        activate_this = next(iter(path for path in script_paths if path.exists()), None)
-        if activate_this is not None:
+        script_path = "Scripts" if os.name == "nt" else "bin"
+        activate_this = self.path / script_path / "activate_this.py"
+        if activate_this.exists():
             with open(str(activate_this)) as f:
                 code = compile(f.read(), str(activate_this), "exec")
                 exec(code, dict(__file__=str(activate_this)))
@@ -403,9 +401,8 @@ class VirtualEnv(object):
 
 @pytest.fixture()
 def virtualenv(vistir_tmpdir):
-    with temp_environ():
-        venv = VirtualEnv(base_dir=vistir_tmpdir)
-        yield venv.activate()
+    with temp_environ(), VirtualEnv(base_dir=vistir_tmpdir) as venv:
+        yield venv
 
 
 @pytest.fixture()
diff --git a/tests/integration/test_pipenv.py b/tests/integration/test_pipenv.py
index a5f10216..ef8c23f2 100644
--- a/tests/integration/test_pipenv.py
+++ b/tests/integration/test_pipenv.py
@@ -90,8 +90,8 @@ def test_proper_names_unamanged_virtualenv(PipenvInstance, pypi):
 
 @pytest.mark.cli
 def test_directory_with_leading_dash(raw_venv, PipenvInstance):
-    with temp_environ():  # , raw_venv(name="-venv-with-dash") as venv:
-        with PipenvInstance(chdir=True, venv_in_project=False, name="-project-with-dash") as p:  # venv_root=venv.parent.as_posix(), ignore_virtualenvs=False) as p:
+    with temp_environ():
+        with PipenvInstance(chdir=True, venv_in_project=False, name="-project-with-dash") as p:
             if "PIPENV_VENV_IN_PROJECT" in os.environ:
                 del os.environ['PIPENV_VENV_IN_PROJECT']
             c = p.pipenv('run pip freeze')
