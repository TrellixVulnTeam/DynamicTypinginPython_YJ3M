commit 6f6539b1012a396edb146d377a3c6a7b6b4bae77
Author: Oliver Charlesworth <oliver.charlesworth@twosigmaiq.com>
Date:   Sun Apr 8 17:27:58 2018 +0100

    Fix things

diff --git a/.travis.yml b/.travis.yml
index 7db8cc1f..9ba03484 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -18,7 +18,9 @@ install:
 script:
   - 'if [[ -n "$RUN_INTEGRATION_TESTS" ]]; then rm -fr ~/.cache/pip; fi'
   - 'export PYPI_VENDOR_DIR="$(pwd)/tests/pypi/"'
-  - 'pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" --tap-stream'
+  - 'pip install -e "$(pwd)" --upgrade'
+  - 'pipenv install --deploy --system --dev'
+  - 'pipenv run time pytest -v -n 4 -m "$TEST_SUITE" tests --tap-stream'
 
 jobs:
   include:
diff --git a/appveyor.yml b/appveyor.yml
index 96c4478e..281be915 100644
--- a/appveyor.yml
+++ b/appveyor.yml
@@ -54,4 +54,4 @@ cache:
 
 test_script:
   - 'if "%RUN_INTEGRATION_TESTS%" == "True" (rmdir /s /q %LocalAppData%\pip\cache)'
-  - '%PYTHON%\python.exe -m pipenv run pytest -v -n auto -m "%TEST_SUITE%" tests'
+  - '%PYTHON%\python.exe -m pipenv run pytest -v -n 4 -m "%TEST_SUITE%" tests'
diff --git a/run-tests.sh b/run-tests.sh
index 15928880..92dadae5 100755
--- a/run-tests.sh
+++ b/run-tests.sh
@@ -5,36 +5,72 @@
 set -eo pipefail
 
 # Set the PYPI vendor URL for pytest-pypi.
-export PYPI_VENDOR_DIR="$(pwd)/tests/pypi/"
+PYPI_VENDOR_DIR="$(pwd)/tests/pypi/"
+export PYPI_VENDOR_DIR
+
+prefix() {
+  sed "s/^/   $1:    /"
+}
 
 if [[ ! -z "$TEST_SUITE" ]]; then
-    echo "Using TEST_SUITE=$TEST_SUITE"
+	echo "Using TEST_SUITE=$TEST_SUITE"
 fi
 
-# First, try MacOS…
-echo "Clearing Caches…"
-if [[ $(python -c "import sys; print(sys.platform)") == "darwin" ]]; then
-    CACHE_ROOT=~/Library/Caches
-# Otherwise, assume Linux…
+# If running in CI environment…
+if [[ ! -z "$CI" ]]; then
+	echo "Running in a CI environment…"
+
+	# Use tap output for tests.
+	TAP_OUTPUT="1"
+	export TAP_OUTPUT
+
+	echo "Installing Pipenv…"
+
+
+	pip install -e "$(pwd)" --upgrade
+	pipenv install --deploy --system --dev
+
+# Otherwise, we're on a development machine.
 else
-    CACHE_ROOT=~/.cache
-fi
-rm -fr ${CACHE_ROOT}/pip
-rm -fr ${CACHE_ROOT}/pipenv
+	# First, try MacOS…
+	if [[ $(python -c "import sys; print(sys.platform)") == "darwin" ]]; then
 
-# If the lockfile hasn't changed, skip installs.
-echo "Installing Pipenv…"
-pip install -e "$(pwd)" --upgrade-strategy=only-if-needed
+		echo "Clearing Caches…"
+		rm -fr ~/Library/Caches/pip
+		rm -fr ~/Library/Caches/pipenv
 
-echo "Installing dependencies…"
-PIPENV_PYTHON=2.7 pipenv run pip install -e . --upgrade
-PIPENV_PYTHON=3.6 pipenv run pip install -e . --upgrade
-PIPENV_PYTHON=2.7 pipenv install --dev
-PIPENV_PYTHON=3.6 pipenv install --dev
+	# Otherwise, assume Linux…
+	else
+		echo "Clearing Caches…"
+		rm -fr ~/.cache/pip
+		rm -fr ~/.cache/pipenv
+	fi
 
-echo "Running tests…"
-PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
-PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
+	# If the lockfile hasn't changed, skip installs.
 
-# Cleanup junk.
-rm -fr .venv
+	echo "Installing Pipenv…"
+	pip install -e "$(pwd)" --upgrade-strategy=only-if-needed
+
+	echo "Installing dependencies…"
+	PIPENV_PYTHON=2.7 pipenv run pip install -e . --upgrade
+	PIPENV_PYTHON=3.6 pipenv run pip install -e . --upgrade
+	PIPENV_PYTHON=2.7 pipenv install --dev
+	PIPENV_PYTHON=3.6 pipenv install --dev
+
+fi
+
+# Use tap output if in a CI environment, otherwise just run the tests.
+if [[ "$TAP_OUTPUT" ]]; then
+	echo "$ pipenv run time pytest -v -n auto tests -m \"$TEST_SUITE\" --tap-stream | tee report-$PYTHON.tap"
+	pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"  --tap-stream | tee report.tap
+
+else
+	echo "$ pipenv run time pytest -v -n auto tests -m \"$TEST_SUITE\""
+	# PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 2.7 &
+	# PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 3.6
+	# Better to run them sequentially.
+	PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
+	PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE"
+	# Cleanup junk.
+	rm -fr .venv
+fi
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 17be995e..4d6556b3 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -147,13 +147,11 @@ class TestPipenv:
     """The ultimate testing class."""
 
     @pytest.mark.cli
-    @py3_only
     def test_pipenv_where(self, pypi_secure):
         with PipenvInstance(pypi=pypi_secure) as p:
             assert normalize_drive(p.path) in p.pipenv('--where').out
 
     @pytest.mark.cli
-    @py3_only
     def test_pipenv_venv(self):
         with PipenvInstance() as p:
             p.pipenv('--python python')
@@ -161,7 +159,6 @@ class TestPipenv:
             assert os.path.isdir(venv_path)
 
     @pytest.mark.cli
-    @py3_only
     def test_pipenv_py(self):
         with PipenvInstance() as p:
             p.pipenv('--python python')
@@ -169,7 +166,6 @@ class TestPipenv:
             assert os.path.basename(python).startswith('python')
 
     @pytest.mark.cli
-    @py3_only
     def test_pipenv_rm(self):
         with PipenvInstance() as p:
             p.pipenv('--python python')
@@ -180,7 +176,6 @@ class TestPipenv:
             assert not os.path.isdir(venv_path)
 
     @pytest.mark.cli
-    @py3_only
     def test_pipenv_graph(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
             p.pipenv('install requests')
@@ -188,7 +183,6 @@ class TestPipenv:
             assert 'requests' in p.pipenv('graph --json').out
 
     @pytest.mark.cli
-    @py3_only
     def test_pipenv_graph_reverse(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
             p.pipenv('install requests==2.18.4')
@@ -214,20 +208,17 @@ class TestPipenv:
 
     @pytest.mark.cli
     @needs_internet
-    @py3_only
     def test_pipenv_check(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
             p.pipenv('install requests==1.0.0')
             assert 'requests' in p.pipenv('check').out
 
     @pytest.mark.cli
-    @py3_only
     def test_venv_envs(self):
         with PipenvInstance() as p:
             assert p.pipenv('--envs').out
 
     @pytest.mark.cli
-    @py3_only
     def test_bare_output(self):
         with PipenvInstance() as p:
             assert p.pipenv('').out
@@ -238,7 +229,6 @@ class TestPipenv:
             assert p.pipenv('--help').out
 
     @pytest.mark.cli
-    @py3_only
     def test_man(self):
         with PipenvInstance() as p:
             c = p.pipenv('--man')
@@ -246,7 +236,6 @@ class TestPipenv:
 
     @pytest.mark.cli
     @pytest.mark.install
-    @py3_only
     def test_install_parse_error(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
 
@@ -1086,7 +1075,6 @@ records = {extras = ["pandas"], version = "==0.5.2"}
     @pytest.mark.lock
     @pytest.mark.deploy
     @pytest.mark.cli
-    @py3_only
     def test_deploy_works(self, pypi):
 
         with PipenvInstance(pypi=pypi) as p:
@@ -1241,7 +1229,6 @@ requests = "==2.14.0"
 
     @pytest.mark.cli
     @pytest.mark.clean
-    @py3_only
     def test_clean_on_empty_venv(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
             c = p.pipenv('clean')
