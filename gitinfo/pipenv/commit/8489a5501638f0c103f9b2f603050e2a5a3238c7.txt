commit 8489a5501638f0c103f9b2f603050e2a5a3238c7
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Jan 23 18:58:07 2017 -0500

    cleanups

diff --git a/Pipfile b/Pipfile
index a4062b57..0c411b8e 100644
--- a/Pipfile
+++ b/Pipfile
@@ -1,7 +1,3 @@
-[[source]]
-url = "https://pypi.org/"
-verify_ssl = true
-
 [dev-packages]
 pytest = "*"
 
@@ -9,6 +5,6 @@ pytest = "*"
 crayons = "*"
 requirements-parser = "*"
 "delegator.py" = ">=0.0.6"
-"backports.shutil_get_terminal_size" = "*"
+"backports.shutil-get-terminal-size" = "*"
 toml = "*"
 click = "*"
diff --git a/Pipfile.lock b/Pipfile.lock
index 06d9c85d..47913f21 100644
--- a/Pipfile.lock
+++ b/Pipfile.lock
@@ -3,11 +3,9 @@
         "crayons": "==0.1.1",
         "requirements-parser": "==0.1.0",
         "pexpect": "==4.2.1",
-        "backports.shutil-get-terminal-size": "==1.0.0",
         "delegator.py": "==0.0.6",
-        "backports.shutil_get_terminal_size": "*",
+        "backports.shutil-get-terminal-size": "==1.0.0",
         "ptyprocess": "==0.5.1",
-        "Django": "==1.10.5",
         "toml": "==0.9.2",
         "colorama": "==0.3.7",
         "click": "==6.7"
@@ -28,6 +26,6 @@
             }
         ],
         "requires": {},
-        "Pipfile-sha256": "a7cbb1182b2b6a2663243a682e6c033d2c13c9ebdf8803d2b95616c1a6d02d24"
+        "Pipfile-sha256": "9dce3ee2973403fc73a25f360f56c3b998cbba56bff36761cf58ba966181390f"
     }
 }
\ No newline at end of file
diff --git a/pipenv/cli.py b/pipenv/cli.py
index fb1a1005..f2eb392f 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -160,6 +160,8 @@ def do_create_virtualenv():
 def do_lock(dev=False):
     """Executes the freeze functionality."""
 
+
+
     click.echo(crayons.yellow('Assuring all dependencies from Pipfile are installed...'))
 
     # Purge the virtualenv, for development dependencies.
@@ -458,6 +460,9 @@ def uninstall(package_name=False, more_packages=False, system=False):
 @click.command(help="Generates Pipfile.lock.")
 @click.option('--dev','-d', is_flag=True, default=False, help="Keeps dev-packages installed.")
 def lock(dev=False):
+    # Ensure that virtualenv is available.
+    ensure_project(dev=dev)
+
     do_lock(dev=dev)
 
 
