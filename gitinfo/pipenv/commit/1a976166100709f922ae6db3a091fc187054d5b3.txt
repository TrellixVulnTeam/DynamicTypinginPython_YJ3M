commit 1a976166100709f922ae6db3a091fc187054d5b3
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Tue Jan 24 15:52:37 2017 -0500

    remove pipenv install -r

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 43aa179f..4cc36bff 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -68,24 +68,12 @@ def ensure_virtualenv(three=None):
         ensure_virtualenv(three=three)
 
 
-
-
 def ensure_project(dev=False, three=None):
     """Ensures both Pipfile and virtualenv exist for the project."""
     ensure_pipfile(dev=dev)
     ensure_virtualenv(three=three)
 
 
-def clean_requirement(requirement):
-    """Cleans given requirement from additional data like, comments."""
-    return requirement[:requirement.index(' #') - 1].strip() if ' #' in requirement else requirement.strip()
-
-def from_requirements_file(r):
-    """Returns a list of packages from an open requirements file."""
-    # Ignore Comment lines, ignore -i lines.
-    return [clean_requirement(p) for p in r.read().split('\n') if p and not p.startswith('#') and not p.startswith('-i')]
-
-
 def do_where(virtualenv=False, bare=True):
     """Executes the where functionality."""
 
@@ -384,7 +372,6 @@ def cli(ctx, where=False, bare=False, three=False, help=False):
 @click.argument('package_name', default=False)
 @click.argument('more_packages', nargs=-1)
 @click.option('--dev','-d', is_flag=True, default=False, help="Install package(s) in [dev-packages].")
-@click.option('-r', type=click.File('r'), default=None, help="Use requirements.txt file.")
 @click.option('--three/--two', is_flag=True, default=None, help="Use Python 3/2 when creating virtualenv.")
 @click.option('--system', is_flag=True, default=False, help="System pip management.")
 def install(package_name=False, more_packages=False, r=False, dev=False, three=False, system=False):
@@ -395,11 +382,6 @@ def install(package_name=False, more_packages=False, r=False, dev=False, three=F
     # Allow more than one package to be provided.
     package_names = (package_name,) + more_packages
 
-    # If -r provided, read in package names.
-    if r:
-        package_names = from_requirements_file(r)
-        package_name = package_names.pop()
-
     # Install all dependencies, if none was provided.
     if package_name is False:
         click.echo(crayons.yellow('No package provided, installing all dependencies.'))
