commit 1126d79311a58eb8b0b858e4d391bf76f1a90664
Author: Nate Prewitt <Nate.Prewitt@gmail.com>
Date:   Thu Feb 9 08:40:05 2017 -0700

    more tests

diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 266967e3..3a20d6cd 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -4,8 +4,9 @@ import pytest
 import delegator
 import toml
 
-from pipenv.cli import (parse_download_fname, ensure_proper_casing,
-    parse_install_output)
+from pipenv.cli import (activate_virtualenv, ensure_proper_casing,
+    parse_download_fname, parse_install_output)
+from pipenv.project import Project
 
 class TestPipenv():
 
@@ -44,7 +45,7 @@ class TestPipenv():
         delegator.run('rm -fr test_project')
 
     def test_ensure_proper_casing_names(self):
-        """Ensure proper casing for package names"""
+        """Ensure proper casing for package names."""
         pfile_test = ("[packages]\n"
                       "DjAnGO = \"*\"\n"
                       "flask = \"==0.11\"\n"
@@ -69,7 +70,7 @@ class TestPipenv():
         assert changed is True
 
     def test_ensure_proper_casing_no_change(self):
-        """Ensure changed flag is false with no changes"""
+        """Ensure changed flag is false with no changes."""
         pfile_test = ("[packages]\n"
                       "flask = \"==0.11\"\n"
                       "\n\n"
@@ -85,6 +86,7 @@ class TestPipenv():
         assert changed is False
 
     def test_parse_install_output(self):
+        """Ensure pip output is parsed properly."""
         install_output = ("Collecting requests\n"
                           "Using cached requests-2.13.0-py2.py3-none-any.whl\n"
                           "Successfully downloaded requests-2.13.0\n"
@@ -97,6 +99,35 @@ class TestPipenv():
                           "Successfully downloaded click\n")
 
         names_map = dict(parse_install_output(install_output))
+
+        # Verify files are added to names map with appropriate project name.
         assert 'requests-2.13.0-py2.py3-none-any.whl' in names_map
         assert names_map['requests-2.13.0-py2.py3-none-any.whl'] == 'requests'
+
+        # Verify percent-encoded characters are unencoded (%21 -> !).
         assert 'foursquare-1!2015.4.7.tar.gz' in names_map
+
+    @pytest.mark.parametrize('shell, extension', [
+        ('/bin/bash', ''),
+        ('/bin/fish', '.fish'),
+        ('/bin/csh', '.csh'),
+        ('/bin/unknown', '')]
+    )
+    def test_activate_virtualenv(self, shell, extension):
+        orig_shell = os.environ['SHELL']
+        os.environ['SHELL'] = shell
+
+        # Get standard activation command for bash
+        command = activate_virtualenv()
+
+        # Return environment to initial shell config.
+        os.environ['SHELL'] = orig_shell
+
+        venv = Project().virtualenv_location
+        assert command == 'source {0}/bin/activate{1}'.format(venv, extension)
+
+    def test_activate_virtualenv_no_source(self):
+        command = activate_virtualenv(source=False)
+        venv = Project().virtualenv_location
+
+        assert command == '{0}/bin/activate'.format(venv)
diff --git a/tests/test_project.py b/tests/test_project.py
index 3017458b..b45d9809 100644
--- a/tests/test_project.py
+++ b/tests/test_project.py
@@ -11,3 +11,8 @@ class TestProject():
     def test_pew_by_default(self):
        proj = pipenv.project.Project()
        assert proj.virtualenv_location.endswith('.local/share/virtualenvs/pipenv')
+
+    def test_proper_names(self):
+        proj = pipenv.project.Project()
+        assert proj.virtualenv_location in proj.proper_names_location
+        assert isinstance(proj.proper_names, list)
