commit f26cc8565ab0e0c788f81696981ad67dc2fab0f2
Author: Hamad alghanim <dreamersoul1@gmail.com>
Date:   Tue Oct 17 01:41:37 2017 -0700

    flake8 fixes

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 1963a678..f916b725 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -1751,11 +1751,7 @@ def install(
     # Check if the file is remote or not
     if remote:
         # Download requirements file
-        click.echo(
-            crayons.normal(
-                u'Remote requirements file provided! Downloading…',
-            bold=True),
-        err=True)
+        click.echo(crayons.normal(u'Remote requirements file provided! Downloading…',bold=True),err=True)
         download_file(requirements, temporary_requirements)
         # Replace the url with the temporary requirements file
         requirements = temporary_requirements
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 69e15319..a796d104 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -529,7 +529,6 @@ def convert_deps_from_pip(dep):
     req = [r for r in requirements.parse(dep)][0]
     extras = {'extras': req.extras}
 
-
     # File installs.
     if (req.uri or (os.path.exists(req.path) if req.path else False) or
             os.path.exists(req.name)) and not req.vcs:
@@ -915,11 +914,13 @@ def find_requirements(max_depth=3):
                     return r
     raise RuntimeError('No requirements.txt found!')
 
+
 def is_valid_url(url):
     """Checks if a given string is an url"""
     pieces = urlparse(url)
     return all([pieces.scheme, pieces.netloc])
 
+
 def download_file(url, filename):
     """Downloads file from url to a path with filename"""
     r = requests.get(url, stream=True)
