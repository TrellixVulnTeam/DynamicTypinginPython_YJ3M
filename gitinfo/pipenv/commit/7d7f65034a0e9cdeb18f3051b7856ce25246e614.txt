commit 7d7f65034a0e9cdeb18f3051b7856ce25246e614
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Mar 2 14:49:05 2018 -0500

    fix all the things
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/resolver.py b/pipenv/resolver.py
index 91a785cc..cf58c124 100644
--- a/pipenv/resolver.py
+++ b/pipenv/resolver.py
@@ -1,19 +1,3 @@
-"""Pipenv Resolveer.
-
-Usage:
-  resolver.py
-  resolver.py <packages>... [--verbose] [--pre] [--clear]
-  resolver.py (-h | --help)
-  resolver.py --version
-
-Options:
-  -h --help     Show this screen.
-  --version     Show version.
-  --clear       Clear the cache.
-  --verbose     Display debug information to stderr.
-  --pre         Include pre-releases.
-"""
-
 import os
 import sys
 import json
@@ -29,22 +13,6 @@ import pipenv.core
 from docopt import docopt
 
 
-def cleanup_sysargv(argv):
-
-    new = []
-
-    try:
-        argv = argv[1].split('!!!')
-    except IndexError:
-        argv = []
-
-    for arg in argv[:]:
-        if arg.startswith('-e '):
-            new.append(arg)
-            del argv[argv.index(arg)]
-
-    return argv[:], new
-
 def which(*args, **kwargs):
     return sys.executable
 
@@ -53,16 +21,10 @@ def resolve(packages, pre, sources, verbose, clear):
 
 if __name__ == '__main__':
 
-    argv, new_packages = cleanup_sysargv(sys.argv)
-    args = docopt(__doc__, argv=argv)
-
-    is_verbose = args['--verbose']
-    do_pre = args['--pre']
-    do_clear = args['--clear']
-    packages = args['<packages>']
-
-    for package in new_packages:
-        packages.append(package)
+    is_verbose = '--verbose' in sys.argv
+    do_pre = '--pre' in sys.argv
+    do_clear = '--clear' in sys.argv
+    packages = os.environ['PIPENV_PACKAGES'].split('\n')
 
     project = pipenv.core.project
 
diff --git a/pipenv/utils.py b/pipenv/utils.py
index ee0a8dd2..41a92880 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -342,14 +342,15 @@ def venv_resolve_deps(deps, which, project, pre=False, verbose=False, clear=Fals
     import json
 
     resolver = shellquote(resolver.__file__.rstrip('co'))
-    cmd = '{0} {1} {2} {3} {4}'.format(which('python'), resolver, "!!!".join(deps), '--pre' if pre else '', '--verbose' if verbose else '')
+    cmd = '{0} {1} {2} {3}'.format(which('python'), resolver, '--pre' if pre else '', '--verbose' if verbose else '')
+    os.environ['PIPENV_PACKAGES'] = '\n'.join(deps)
 
     c = delegator.run(cmd, block=True)
 
     try:
         assert c.return_code == 0
     except AssertionError:
-        print(c.err[int(len(c.err) / 2):])
+        print(c.err[int(len(c.err) / 2) - 2:])
         sys.exit(c.return_code)
 
     if verbose:
