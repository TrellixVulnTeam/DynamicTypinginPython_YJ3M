commit 6817be920218f1351293aa0adfd111307ef8a255
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sun Mar 11 11:45:52 2018 -0400

    fix bug
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/HISTORY.txt b/HISTORY.txt
index 8e7059e5..2f1c3776 100644
--- a/HISTORY.txt
+++ b/HISTORY.txt
@@ -1,3 +1,5 @@
+11.4.1:
+ - Properly resolve hashes for private indexes.
 11.4.0:
  - Stability.
  - Don't install dependencies straight-away with pipenv–install — rely on the underlying pipenv sync architecture to pick up dependencies.
diff --git a/pipenv/patched/notpip/index.py b/pipenv/patched/notpip/index.py
index 85601124..562b73d7 100644
--- a/pipenv/patched/notpip/index.py
+++ b/pipenv/patched/notpip/index.py
@@ -707,7 +707,7 @@ class PackageFinder(object):
                          link.filename, link.requires_python)
             support_this_python = True
 
-        if not support_this_python and not ignore_requires_python:
+        if not support_this_python and not ignore_compatibility:
             logger.debug("The package %s is incompatible with the python"
                          "version in use. Acceptable python versions are:%s",
                          link, link.requires_python)
diff --git a/pipenv/patched/notpip/req/req_set.py b/pipenv/patched/notpip/req/req_set.py
index 92f51596..4fc447ee 100644
--- a/pipenv/patched/notpip/req/req_set.py
+++ b/pipenv/patched/notpip/req/req_set.py
@@ -476,7 +476,7 @@ class RequirementSet(object):
         # (remote url or package name)
 
         if ignore_requires_python:
-            self.ignore_requires_python = True
+            self.ignore_compatibility = True
 
         if req_to_install.constraint or req_to_install.prepared:
             return []
@@ -689,7 +689,7 @@ class RequirementSet(object):
             try:
                 check_dist_requires_python(dist)
             except (UnsupportedPythonVersion, TypeError) as e:
-                if self.ignore_requires_python:
+                if self.ignore_compatibility:
                     logger.warning(e.args[0])
                 else:
                     req_to_install.remove_temporary_source()
