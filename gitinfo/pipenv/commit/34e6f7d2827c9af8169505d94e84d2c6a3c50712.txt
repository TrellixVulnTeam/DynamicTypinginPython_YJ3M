commit 34e6f7d2827c9af8169505d94e84d2c6a3c50712
Author: Dan Ryan <dan@danryan.co>
Date:   Thu Nov 22 01:20:48 2018 -0500

    Fix patch function for plette
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/vendor/requirementslib/models/pipfile.py b/pipenv/vendor/requirementslib/models/pipfile.py
index 2879b654..84a4a26d 100644
--- a/pipenv/vendor/requirementslib/models/pipfile.py
+++ b/pipenv/vendor/requirementslib/models/pipfile.py
@@ -38,8 +38,26 @@ except ImportError:
 
 VALIDATORS = plette.models.base.VALIDATORS
 
+
 def patch_plette():
-    # type: () -> NoReturn
+    # type: () -> None
+
+    global VALIDATORS
+
+    def validate(cls, data):
+        # type: (Any, Dict[str, Any]) -> None
+        if not cerberus:    # Skip validation if Cerberus is not available.
+            return
+        schema = cls.__SCHEMA__
+        key = id(schema)
+        try:
+            v = VALIDATORS[key]
+        except KeyError:
+            v = VALIDATORS[key] = cerberus.Validator(schema, allow_unknown=True)
+        if v.validate(dict(data), normalize=False):
+            return
+        raise plette.models.base.ValidationError(data, v)
+
     names = ["plette.models.base", plette.models.base.__name__]
     names = [name for name in names if name in sys.modules]
     for name in names:
@@ -56,22 +74,6 @@ def patch_plette():
         sys.modules[name] = module
 
 
-def patch_plette():
-    # type: () -> NoReturn
-    names = ["plette.models.base", plette.models.base.__name__]
-    names = [name for name in names if name in sys.modules]
-    for name in names:
-        if name in sys.modules:
-            module = sys.modules[name]
-        else:
-            module = plette.models.base
-        original_fn = getattr(module, "validate")
-        for key in ["__qualname__", "__name__", "__module__"]:
-            setattr(validate, key, getattr(original_fn, key))
-        setattr(module, "validate", validate)
-        sys.modules[name] = module
-
-
 patch_plette()
 
 
