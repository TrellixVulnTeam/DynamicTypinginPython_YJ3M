commit 089bb57d7e514df102a23bcdb1f48d7d4e815133
Author: frostming <frostming@tencent.com>
Date:   Wed Jul 17 12:21:11 2019 +0800

    Update vendor packages

diff --git a/pipenv/vendor/pythonfinder/utils.py b/pipenv/vendor/pythonfinder/utils.py
index 477f3668..1c190b01 100644
--- a/pipenv/vendor/pythonfinder/utils.py
+++ b/pipenv/vendor/pythonfinder/utils.py
@@ -58,7 +58,10 @@ PYTHON_IMPLEMENTATIONS = (
     "pyston",
     "micropython",
 )
-KNOWN_EXTS = {"exe", "py", "fish", "sh", ""}
+if os.name == "nt":
+    KNOWN_EXTS = {"exe", "py", "bat", ""}
+else:
+    KNOWN_EXTS = {"sh", "bash", "csh", "zsh", "fish", "py", ""}
 KNOWN_EXTS = KNOWN_EXTS | set(
     filter(None, os.environ.get("PATHEXT", "").split(os.pathsep))
 )
diff --git a/pipenv/vendor/requirementslib/models/setup_info.py b/pipenv/vendor/requirementslib/models/setup_info.py
index 551f3e87..3bee49ea 100644
--- a/pipenv/vendor/requirementslib/models/setup_info.py
+++ b/pipenv/vendor/requirementslib/models/setup_info.py
@@ -28,6 +28,8 @@ from vistir.contextmanagers import cd, temp_path
 from vistir.misc import run
 from vistir.path import create_tracked_tempdir, ensure_mkdir_p, mkdir_p, rmtree
 
+from ..environment import MYPY_RUNNING
+from ..exceptions import RequirementError
 from .utils import (
     get_default_pyproject_backend,
     get_name_variants,
@@ -37,8 +39,6 @@ from .utils import (
     split_vcs_method_from_uri,
     strip_extras_markers_from_requirement,
 )
-from ..environment import MYPY_RUNNING
-from ..exceptions import RequirementError
 
 try:
     from setuptools.dist import distutils, Distribution
@@ -712,11 +712,13 @@ def ast_unparse(item, initial_mapping=False, analyzer=None, recurse=True):  # no
                     item.right = right_item
                     unparsed = item
                 else:
-                    unparsed = right_item + left_item
+                    unparsed = left_item + right_item
             else:
                 unparsed = item
         elif isinstance(item.op, ast.Sub):
             unparsed = unparse(item.left) - unparse(item.right)
+        else:
+            unparsed = item
     elif isinstance(item, ast.Name):
         if not initial_mapping:
             unparsed = item.id
diff --git a/pipenv/vendor/requirementslib/models/utils.py b/pipenv/vendor/requirementslib/models/utils.py
index 4b497954..e79ea7e9 100644
--- a/pipenv/vendor/requirementslib/models/utils.py
+++ b/pipenv/vendor/requirementslib/models/utils.py
@@ -505,7 +505,9 @@ def split_markers_from_line(line):
     # type: (AnyStr) -> Tuple[AnyStr, Optional[AnyStr]]
     """Split markers from a dependency"""
     quote_chars = ["'", '"']
-    line_quote = next(iter(quote for quote in quote_chars if line.startswith(quote)), None)
+    line_quote = next(
+        iter(quote for quote in quote_chars if line.startswith(quote)), None
+    )
     if line_quote and line.endswith(line_quote):
         line = line.strip(line_quote)
     if not any(line.startswith(uri_prefix) for uri_prefix in SCHEME_LIST):
diff --git a/tasks/release.py b/tasks/release.py
index 5b87a76a..610a36a9 100644
--- a/tasks/release.py
+++ b/tasks/release.py
@@ -82,6 +82,7 @@ def release(ctx, dry_run=False):
         ctx.run("towncrier --draft > CHANGELOG.draft.rst")
         log("would remove: news/*")
         log("would remove: CHANGELOG.draft.rst")
+        log("would update: pipenv/pipenv.1")
         log(f'Would commit with message: "Release v{version}"')
     else:
         ctx.run("towncrier")
@@ -90,6 +91,7 @@ def release(ctx, dry_run=False):
         )
         ctx.run("git rm CHANGELOG.draft.rst")
         generate_manual(ctx)
+        ctx.run("git add pipenv/pipenv.1")
         ctx.run(f'git commit -m "Release v{version}"')
 
     tag_content = tag_content.replace('"', '\\"')
