commit a42d85b1517d6029245a507313868630a72d7426
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Feb 16 19:42:03 2018 -0500

    scripts
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/Pipfile b/Pipfile
index 06e781d3..7a7dcc7a 100644
--- a/Pipfile
+++ b/Pipfile
@@ -12,3 +12,8 @@ pytest-xdist = "*"
 [packages]
 
 "e1839a8" = {path = ".", editable = true}
+
+
+[scripts]
+
+tests = "pytest tests"
\ No newline at end of file
diff --git a/pipenv/core.py b/pipenv/core.py
index 537b4b28..019a64e1 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -5,6 +5,7 @@ import codecs
 import os
 import sys
 import shutil
+import shlex
 import signal
 import time
 import tempfile
@@ -1974,6 +1975,10 @@ def do_run(command, args, three=None, python=False):
 
     load_dot_env()
 
+    # Script was foundâ€¦
+    if command in project.scripts:
+        command = ' '.join(project.scripts[command])
+
     # Separate out things that were passed in as a string.
     _c = list(command.split())
     command = _c.pop(0)
@@ -1995,11 +2000,12 @@ def do_run(command, args, three=None, python=False):
         command_path = system_which(command)
         if not command_path:
             click.echo(
-                '{0}: the command {1} could not be found within {2}.'
+                '{0}: the command {1} could not be found within {2} or Pipfile\'s {3}.'
                 ''.format(
                     crayons.red('Error', bold=True),
                     crayons.red(command),
-                    crayons.normal('PATH', bold=True)
+                    crayons.normal('PATH', bold=True),
+                    crayons.normal('[scripts]', bold=True)
                 ), err=True
             )
             sys.exit(1)
diff --git a/pipenv/project.py b/pipenv/project.py
index 100b4376..47b3175a 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -3,6 +3,7 @@ import json
 import os
 import re
 import sys
+import shlex
 import base64
 import hashlib
 
@@ -292,6 +293,15 @@ class Project(object):
         """A dictionary of the settings added to the Pipfile."""
         return self.parsed_pipfile.get('pipenv', {})
 
+    @property
+    def scripts(self):
+        scripts = self.parsed_pipfile.get('scripts', {})
+        for (k, v) in scripts.items():
+            scripts[k] = shlex.split(v, posix=True)
+
+        return scripts
+
+
     def update_settings(self, d):
         settings = self.settings
 
