commit 1a8111d4bb4a18a56e5e9d052ec37f66d543aeb9
Author: Dan Ryan <dan.ryan@canonical.com>
Date:   Tue May 19 00:09:18 2020 -0400

    Clean up tests
    
    Signed-off-by: Dan Ryan <dan.ryan@canonical.com>

diff --git a/pipenv/utils.py b/pipenv/utils.py
index 87185564..14cf15b7 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -1043,9 +1043,9 @@ def format_requirement_for_lockfile(req, markers_lookup, index_lookup, hashes=No
         entry["version"] = pf_entry.lstrip("=")
     else:
         entry.update(pf_entry)
-        if version is not None:
+        if version is not None and not req.is_vcs:
             entry["version"] = version
-        if req.line_instance.is_direct_url:
+        if req.line_instance.is_direct_url and not req.is_vcs:
             entry["file"] = req.req.uri
     if hashes:
         entry["hashes"] = sorted(set(hashes))
@@ -1056,7 +1056,7 @@ def format_requirement_for_lockfile(req, markers_lookup, index_lookup, hashes=No
         entry.update({"markers": markers})
     entry = translate_markers(entry)
     if req.vcs or req.editable:
-        for key in ("index", "version"):
+        for key in ("index", "version", "file"):
             try:
                 del entry[key]
             except KeyError:
@@ -1881,11 +1881,6 @@ def get_vcs_deps(
                     lockfile[name] = requirement.pipfile_entry[1]
                     lockfile[name]['ref'] = commit_hash
                     result.append(requirement)
-                    version = requirement.specifiers
-                    if not version and requirement.specifiers:
-                        version = requirement.specifiers
-                    if version:
-                        lockfile[name]['version'] = version
             except OSError:
                 continue
     return result, lockfile
diff --git a/tests/fixtures/parent_folder/pep508-package/setup.py b/tests/fixtures/parent_folder/pep508-package/setup.py
deleted file mode 100644
index dd7505e5..00000000
--- a/tests/fixtures/parent_folder/pep508-package/setup.py
+++ /dev/null
@@ -1,22 +0,0 @@
-import os
-
-from setuptools import find_packages, setup
-
-thisdir = os.path.abspath(os.path.dirname(__file__))
-version = "1.0.0"
-
-setup(
-    name="pep508_package",
-    version=version,
-    description="The Backend HTTP Server",
-    long_description="This is a package",
-    install_requires=[
-        "six",
-        "sibling_package @ {0}",
-    ],
-    extras_require={"testing": ["coverage", "flaky"], "dev": ["parver", "invoke", "wheel"]},
-    package_dir={"": "src"},
-    packages=["pep508_package"],
-    include_package_data=True,
-    zip_safe=True,
-)
diff --git a/tests/fixtures/parent_folder/pep508-package/src/pep508_package/__init__.py b/tests/fixtures/parent_folder/pep508-package/src/pep508_package/__init__.py
deleted file mode 100644
index f102a9ca..00000000
--- a/tests/fixtures/parent_folder/pep508-package/src/pep508_package/__init__.py
+++ /dev/null
@@ -1 +0,0 @@
-__version__ = "0.0.1"
diff --git a/tests/fixtures/parent_folder/sibling_package/setup.py b/tests/fixtures/parent_folder/sibling_package/setup.py
deleted file mode 100644
index 115be2e6..00000000
--- a/tests/fixtures/parent_folder/sibling_package/setup.py
+++ /dev/null
@@ -1,24 +0,0 @@
-import os
-
-from setuptools import find_packages, setup
-
-thisdir = os.path.abspath(os.path.dirname(__file__))
-version = "1.0.0"
-
-testing_extras = ["coverage", "flaky"]
-
-setup(
-    name="sibling_package",
-    version=version,
-    description="The Backend HTTP Server",
-    long_description="This is a package",
-    install_requires=[
-        "toml",
-        "urllib3"
-    ],
-    tests_require=testing_extras,
-    package_dir={"": "src"},
-    packages=["sibling_package"],
-    include_package_data=True,
-    zip_safe=True,
-)
diff --git a/tests/fixtures/parent_folder/sibling_package/src/sibling_package/__init__.py b/tests/fixtures/parent_folder/sibling_package/src/sibling_package/__init__.py
deleted file mode 100644
index f102a9ca..00000000
--- a/tests/fixtures/parent_folder/sibling_package/src/sibling_package/__init__.py
+++ /dev/null
@@ -1 +0,0 @@
-__version__ = "0.0.1"
diff --git a/tests/integration/test_lock.py b/tests/integration/test_lock.py
index af7f1098..ddd3f73b 100644
--- a/tests/integration/test_lock.py
+++ b/tests/integration/test_lock.py
@@ -733,38 +733,18 @@ def test_lock_nested_direct_url(PipenvInstance):
 
 
 @pytest.mark.lock
-def test_lock_nested_vcs_direct_url(PipenvInstance, monkeypatch):
-    package_parent = Path(__file__).absolute().parent.parent.joinpath(
-        "fixtures"
-    ).joinpath("parent_folder")
-    pep508_package = package_parent.joinpath("pep508-package")
-    sibling_package = package_parent.joinpath("sibling_package")
-    pep508_setuppy = pep508_package.joinpath("setup.py")
-    lines = []
-    for line in pep508_setuppy.read_text().split("\n"):
-        if line.strip().startswith('"sibling_package'):
-            line = line.format("{0}@master#subdirectory={1}".format(package_parent.as_uri(), "sibling_package"))
-        lines.append(line)
-    pep508_setuppy.write_text("\n".join(lines))
-    try:
-        with monkeypatch.context() as m:
-            m.chdir(package_parent.as_posix())
-            c = delegator.run("git init")
-            assert c.return_code == 0
-            c = delegator.run("git add .")
-            assert c.return_code == 0
-            c = delegator.run('git commit -m "initial commit"')
-            assert c.return_code == 0
-        with PipenvInstance() as p:
-            p._pipfile.add("pep508_package", {
-                "editable": True, "git": "{0}".format(package_parent.as_uri()),
-                "ref": "master", "subdirectory": "pep508-package"
-            })
-            c = p.pipenv("install")
-            assert c.return_code == 0
-            assert "git" in p.lockfile["default"]["pep508_package"]
-            assert "sibling_package" in p.lockfile["default"]
-            assert "git" in p.lockfie["default"]["sibling_package"]
-            assert "subdirectory" in p.lockfile["default"]["sibling_package"]
-    finally:
-        shutil.rmtree(package_parent.joinpath(".git").as_posix())
+@pytest.mark.needs_internet
+def test_lock_nested_vcs_direct_url(PipenvInstance):
+    with PipenvInstance(chdir=True) as p:
+        p._pipfile.add("pep508_package", {
+            "git": "https://github.com/techalchemy/test-package.git",
+            "editable": True,  "ref": "master",
+            "subdirectory": "parent_folder/pep508-package"
+        })
+        c = p.pipenv("install")
+        assert c.return_code == 0
+        assert "git" in p.lockfile["default"]["pep508_package"]
+        assert "sibling_package" in p.lockfile["default"]
+        assert "git" in p.lockfie["default"]["sibling_package"]
+        assert "subdirectory" in p.lockfile["default"]["sibling_package"]
+        assert "version" not in p.lockfile["default"]["sibling_package"]
