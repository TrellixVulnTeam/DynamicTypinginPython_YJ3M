commit 31c9de22141422079e03ba22d53d7948f5ef8f3a
Author: Dan Ryan <dan@danryan.co>
Date:   Sun Apr 8 12:06:46 2018 -0400

    Split python2 and python3
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/.travis.yml b/.travis.yml
index 93c49cb5..95657f26 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,17 +9,6 @@ env:
   global:
     - PYPI_VENDOR_DIR='./tests/pypi/'
     - GIT_ASK_YESNO='false'
-  matrix:
-    - TEST_SUITE='dotvenv or check or unused or requirements'
-      CACHE_NAME='JOB1'
-    - TEST_SUITE='complex'
-      CACHE_NAME='JOB2'
-    - TEST_SUITE='markers or run or project or utils'
-      CACHE_NAME='JOB3'
-    - TEST_SUITE='not (dotvenv or check or unused or requirements or complex or markers or run or project or utils or install)'
-      CACHE_NAME='JOB4'
-  # - TEST_SUITE='install'
-  #   CACHE_NAME='"$python"-JOB5'
 
 # command to install dependencies
 install:
@@ -30,42 +19,71 @@ install:
   - "pipenv run pip install -e ."
   - "pipenv install --dev"
 
-# command to run the dependencies
-script:
-  - 'if [[ "$TEST_SUITE" == "install" ]]; then export PYTEST_ADDOPTS="--cache-clear" && rm -rf ~/.cache/pip && rm -rf ~/.cache/pipenv; fi'
-  - "pip install --upgrade -e ."
-  - "pipenv run pip install -e ."
-  - "pipenv install --dev"
-  - 'echo Running Tests: "$TEST_SUITE"'
-  - 'pipenv run pytest -n auto -v -m "$TEST_SUITE" --ignore="pipenv/vendor" --ignore="pipenv/patched"'
+script: skip
 
 jobs:
   include:
-    - &integration
-      stage: integration
+    - &python3
+      stage: python3
+      python: "3.6"
       env:
         - TEST_SUITE='cli'
-        - CACHE_NAME='JOB0-1'
-      python: "2.7"
-    - <<: *integration
+        - CACHE_NAME='JOB6-1'
+      script:
+        - 'if [[ "$TEST_SUITE" == "install" ]]; then export PYTEST_ADDOPTS="--cache-clear" && rm -rf ~/.cache/pip && rm -rf ~/.cache/pipenv; fi'
+        - 'echo Running Tests: "$TEST_SUITE"'
+        - 'pipenv run pytest -n auto -v -m "$TEST_SUITE" --ignore="pipenv/vendor" --ignore="pipenv/patched"'
+    - <<: *python3
       env:
         - TEST_SUITE='install'
+        - CACHE_NAME='JOB5-1'
+    - <<: *python3
+      env:
+        - TEST_SUITE='dotvenv or cli or check or unused or requirements'
         - CACHE_NAME='JOB1-1'
+    - <<: *python3
+      env:
+        - TEST_SUITE='complex'
+        - CACHE_NAME='JOB2-1'
+    - <<: *python3
+      env:
+        - TEST_SUITE='markers or run or project or utils'
+        - CACHE_NAME='JOB3-1'
+    - <<: *python3
+      env:
+        - TEST_SUITE='not (dotvenv or cli or check or unused or requirements or complex or markers or run or project or utils or install)'
+        - CACHE_NAME='JOB4-1'
+    - &python2
+      stage: python2
       python: "2.7"
-      stage: integration
-    - <<: *integration
       env:
         - TEST_SUITE='cli'
-        - CACHE_NAME='JOB0-2'
-      python: "3.6"
-    - <<: *integration
+        - CACHE_NAME='JOB6-2'
+      script:
+        - 'if [[ "$TEST_SUITE" == "install" ]]; then export PYTEST_ADDOPTS="--cache-clear" && rm -rf ~/.cache/pip && rm -rf ~/.cache/pipenv; fi'
+        - 'echo Running Tests: "$TEST_SUITE"'
+        - 'pipenv run pytest -n auto -v -m "$TEST_SUITE" --ignore="pipenv/vendor" --ignore="pipenv/patched"'
+    - <<: *python2
       env:
         - TEST_SUITE='install'
+        - CACHE_NAME='JOB5-2'
+    - <<: *python2
+      env:
+        - TEST_SUITE='dotvenv or cli or check or unused or requirements'
         - CACHE_NAME='JOB1-2'
-      python: "3.6"
+    - <<: *python2
+      env:
+        - TEST_SUITE='complex'
+        - CACHE_NAME='JOB2-2'
+    - <<: *python2
+      env:
+        - TEST_SUITE='markers or run or project or utils'
+        - CACHE_NAME='JOB3-2'
+    - <<: *python2
+      env:
+        - TEST_SUITE='not (dotvenv or cli or check or unused or requirements or complex or markers or run or project or utils or install)'
+        - CACHE_NAME='JOB4-2'
 
 stages:
-  - integration
-  - test
-  # - name: takes-forever
-  #   if: branch = master
+  - python3
+  - python2
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 4b95807e..2e602eed 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -379,7 +379,6 @@ six = "*"
             assert c.return_code > 0
 
     @pytest.mark.files
-    @pytest.mark.run
     @pytest.mark.uninstall
     def test_uninstall_all_local_files(self):
         file_name = 'tablib-0.12.1.tar.gz'
@@ -401,32 +400,32 @@ six = "*"
     @pytest.mark.uninstall
     def test_uninstall_all_dev(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
-            c = p.pipenv('install --dev requests flask')
+            c = p.pipenv('install --dev requests six')
             assert c.return_code == 0
 
-            c = p.pipenv('install tpfd')
+            c = p.pipenv('install pytz')
             assert c.return_code == 0
 
-            assert 'tpfd' in p.pipfile['packages']
+            assert 'pytz' in p.pipfile['packages']
             assert 'requests' in p.pipfile['dev-packages']
-            assert 'flask' in p.pipfile['dev-packages']
-            assert 'tpfd' in p.lockfile['default']
+            assert 'six' in p.pipfile['dev-packages']
+            assert 'pytz' in p.lockfile['default']
             assert 'requests' in p.lockfile['develop']
-            assert 'flask' in p.lockfile['develop']
+            assert 'six' in p.lockfile['develop']
 
             c = p.pipenv('uninstall --all-dev')
             assert c.return_code == 0
             assert 'requests' not in p.pipfile['dev-packages']
-            assert 'pytest' not in p.pipfile['dev-packages']
+            assert 'six' not in p.pipfile['dev-packages']
             assert 'requests' not in p.lockfile['develop']
-            assert 'pytest' not in p.lockfile['develop']
-            assert 'tpfd' in p.pipfile['packages']
-            assert 'tpfd' in p.lockfile['default']
+            assert 'six' not in p.lockfile['develop']
+            assert 'pytz' in p.pipfile['packages']
+            assert 'pytz' in p.lockfile['default']
 
             c = p.pipenv('run python -m requests.help')
             assert c.return_code > 0
 
-            c = p.pipenv('run python -c "import tpfd"')
+            c = p.pipenv('run python -c "import pytz"')
             assert c.return_code == 0
 
     @pytest.mark.extras
@@ -643,7 +642,6 @@ requests = {version = "*", os_name = "== 'splashwear'"}
             assert c.return_code == 1
 
     @pytest.mark.markers
-    @pytest.mark.install
     @flaky
     def test_top_level_overrides_environment_markers(self, pypi):
         """Top-level environment markers should take precedence.
@@ -663,7 +661,6 @@ funcsigs = {version = "*", os_name = "== 'splashwear'"}
             assert p.lockfile['default']['funcsigs']['markers'] == "os_name == 'splashwear'"
 
     @pytest.mark.markers
-    @pytest.mark.install
     @flaky
     def test_global_overrides_environment_markers(self, pypi):
         """Empty (unconditional) dependency should take precedence.
@@ -1121,7 +1118,6 @@ requests = "==2.14.0"
             dep = list(p.lockfile['default'].values())[0]
             assert 'file' in dep, p.lockfile
 
-    @pytest.mark.install
     @pytest.mark.files
     @pytest.mark.resolver
     @pytest.mark.eggs
@@ -1145,7 +1141,6 @@ requests = "==2.14.0"
             assert c.return_code == 0
             assert all(pkg in p.lockfile['default'] for pkg in ['xlrd', 'xlwt', 'pyyaml', 'odfpy'])
 
-    @pytest.mark.install
     @pytest.mark.files
     @flaky
     def test_local_zipfiles(self, pypi):
@@ -1171,7 +1166,6 @@ requests = "==2.14.0"
 
             assert 'file' in dep or 'path' in dep
 
-    @pytest.mark.install
     @pytest.mark.files
     @pytest.mark.urls
     @needs_internet
@@ -1192,7 +1186,6 @@ requests = "==2.14.0"
             assert 'requests' in p.lockfile['default']
             assert 'records' in p.lockfile['default']
 
-    @pytest.mark.install
     @pytest.mark.files
     @flaky
     def test_relative_paths(self, pypi):
