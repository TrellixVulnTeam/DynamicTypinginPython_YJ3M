commit f34d38fcaa5917a5cc7c2e830abbea3314b250ae
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sat Jan 21 13:54:13 2017 -0500

    python command, not py

diff --git a/README.rst b/README.rst
index edd19238..d88c0940 100644
--- a/README.rst
+++ b/README.rst
@@ -1,7 +1,7 @@
-Pipenv: Sacred Marriage of Pipfile, Pip, & Virtualenv 
+Pipenv: Sacred Marriage of Pipfile, Pip, & Virtualenv
 =====================================================
 
-Pipenv is an experimental project that aims to bring the best of all packaging worlds to the Python world. It harnesses `Pipfile <https://github.com/pypa/pipfile>`_, pip, and virtualenv into one single toolchain. It features very pretty terminal colors. 
+Pipenv is an experimental project that aims to bring the best of all packaging worlds to the Python world. It harnesses `Pipfile <https://github.com/pypa/pipfile>`_, pip, and virtualenv into one single toolchain. It features very pretty terminal colors.
 
 It automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your ``Pipfile`` as you install/uninstall packages. The ``lock`` command generates a lockfile (``Pipfile.lock``).
 
@@ -10,19 +10,19 @@ It automatically creates and manages a virtualenv for your projects, as well as
 
 - Automatically finds your project home, recursively, by looking for a ``Pipfile``.
 - Automatically generates a ``Pipfile``, if one doesn't exist.
-- Automatically generates a ``Pipfile.lock``, if one doesn't exist. 
+- Automatically generates a ``Pipfile.lock``, if one doesn't exist.
 - Automatically creates a virtualenv in a standard location (``project/.venv``).
 - Automatically adds packages to a Pipfile when they are installed.
-- Automatically removes packages from a Pipfile when they are un-installed. 
+- Automatically removes packages from a Pipfile when they are un-installed.
 - Also automatically updates pip.
 
-The main commands are ``init``, which initializes the environment, ``install`` and ``uninstall``, and ``lock``, which generates a ``Pipfile.lock``. These are intended to replace ``$ pip install`` usage, as well as manual virtualenv management. 
+The main commands are ``init``, which initializes the environment, ``install`` and ``uninstall``, and ``lock``, which generates a ``Pipfile.lock``. These are intended to replace ``$ pip install`` usage, as well as manual virtualenv management.
 
-- ``py`` will run the Python interpreter from the virtualenv, with any arguments forwarded.
+- ``python`` will run the Python interpreter from the virtualenv, with any arguments forwarded.
 - ``purge`` will uninstall all packages from the virtualenv.
-- ``where`` will give location information about the current project. 
-- ``venv`` will give virtutalenv activation information. 
-- ``check`` asserts that PEP 508 requirements are being met by the current environment. 
+- ``where`` will give location information about the current project.
+- ``venv`` will give virtutalenv activation information.
+- ``check`` asserts that PEP 508 requirements are being met by the current environment.
 
 ‚ò§ Usage
 -------
@@ -42,17 +42,17 @@ The main commands are ``init``, which initializes the environment, ``install`` a
       init
       install
       purge
-      py
+      python
       uninstall
       venv
       where
-      
+
     $ pipenv where
     Pipfile found at /Users/kennethreitz/repos/project/Pipfile. Considering this to be the project home.
 
     $ pipenv where --venv
     Virtualenv location: /Users/kennethreitz/repos/project/.venv
-    
+
     $ pipenv venv --bare
     source /Users/kennethreitz/repos/project/.venv/bin/activate
 
@@ -64,7 +64,7 @@ The main commands are ``init``, which initializes the environment, ``install`` a
     Virtualenv location: /Users/kennethreitz/repos/project/.venv
     Pipfile.lock not found, creating...
     ...
-    
+
     To activate this project's virtualenv, run the following:
     $ source /Users/kennethreitz/repos/project/.venv/bin/activate
 
@@ -89,5 +89,5 @@ The main commands are ``init``, which initializes the environment, ``install`` a
 ::
 
     $ pip install pipenv
-    
+
 ‚ú®üç∞‚ú®
diff --git a/pipenv/core.py b/pipenv/core.py
index 86c3d17d..965b3407 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -430,7 +430,7 @@ def lock():
 
 @click.command()
 @click.argument('args', nargs=-1)
-def py(args):
+def python(args):
     # Spawn the Python process, and iteract with it.
     c = pexpect.spawn('{} {}'.format(which_python(), ' '.join(args)))
     c.interact()
@@ -462,7 +462,7 @@ cli.add_command(where)
 cli.add_command(install)
 cli.add_command(uninstall)
 cli.add_command(lock)
-cli.add_command(py)
+cli.add_command(python)
 cli.add_command(venv)
 cli.add_command(purge)
 cli.add_command(check)
