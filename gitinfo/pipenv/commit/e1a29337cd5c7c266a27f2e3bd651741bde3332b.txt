commit e1a29337cd5c7c266a27f2e3bd651741bde3332b
Author: Dan Ryan <dan@danryan.co>
Date:   Sun Jun 17 21:37:33 2018 -0400

    Update release logs, add release tasks
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/Pipfile b/Pipfile
index 82c51ada..ec959c32 100644
--- a/Pipfile
+++ b/Pipfile
@@ -14,7 +14,8 @@ flaky = "*"
 stdeb = {version="*", markers="sys_platform == 'linux'"}
 black = {version="*", markers="python_version >= '3.6'"}
 pytz = "*"
-towncrier = "*"
+towncrier = {git = "https://github.com/hawkowl/towncrier.git", editable = true, ref = "master"}
+parver = "*"
 
 [packages]
 
diff --git a/Pipfile.lock b/Pipfile.lock
index 45a16363..4503fff0 100644
--- a/Pipfile.lock
+++ b/Pipfile.lock
@@ -1,17 +1,15 @@
 {
     "_meta": {
         "hash": {
-            "sha256": "c62a2508eed06b8d1e3d8328bcf6f985a0436f1f5026b48121fe31f01de357b0"
+            "sha256": "ee9e8c04f9a6b7ad4cdaa7db728b51b9fef04b6cad9f012edd230a6241b43f92"
         },
         "pipfile-spec": 6,
         "requires": {},
-        "sources": [
-            {
-                "name": "pypi",
-                "url": "https://pypi.org/simple",
-                "verify_ssl": true
-            }
-        ]
+        "sources": [{
+            "name": "pypi",
+            "url": "https://pypi.org/simple",
+            "verify_ssl": true
+        }]
     },
     "default": {},
     "develop": {
@@ -43,6 +41,13 @@
             ],
             "version": "==1.1.5"
         },
+        "arpeggio": {
+            "hashes": [
+                "sha256:828ea85ca3c7a99125dc83000ca170c1ea1105c75cbf67a513c2e16e05e36f67",
+                "sha256:984a53471327bbb69ed528cac98fa6d42c1676300d047fc13fada69dd5f84ce4"
+            ],
+            "version": "==1.8.0"
+        },
         "attrs": {
             "hashes": [
                 "sha256:4b90b09eeeb9b88c35bc642cbac057e45a5fd85367b985bd2809c62b7b939265",
@@ -222,6 +227,13 @@
             ],
             "version": "==4.2.0"
         },
+        "parver": {
+            "hashes": [
+                "sha256:13a1141380aabcf6a7eb9bfc5197540a92f004eeab5a7f90e285cd51476ca512",
+                "sha256:d7be350da178d42de8c4bd346930bae05a18584110382a299af549ff08b848f9"
+            ],
+            "version": "==0.1.0"
+        },
         "packaging": {
             "hashes": [
                 "sha256:e9215d2d2535d3ae866c3d6efc77d5b24a0192cce0ff20e42896cc0664f889c0",
@@ -411,12 +423,9 @@
             "version": "==0.9.4"
         },
         "towncrier": {
-            "hashes": [
-                "sha256:2b6da2c90c0f053232775d96e816687bf607062b9b2947f625f5586c357cbd59",
-                "sha256:4643dafdde7d503cd6990dfba8043faa9f920fc4af0c2e69eb25488760534ac0"
-            ],
-            "index": "pypi",
-            "version": "==18.5.0"
+            "editable": true,
+            "git": "https://github.com/hawkowl/towncrier.git",
+            "ref": "491eec5e07e971894aa41b7c6f7892023d81bb81"
         },
         "tqdm": {
             "hashes": [
diff --git a/news/2123.bugfix b/news/2123.bugfix
index 2d0603e0..4725c4f8 100644
--- a/news/2123.bugfix
+++ b/news/2123.bugfix
@@ -1 +1,5 @@
-Pipenv will now parse & capitalize ``platform_python_implementation`` markers -- **note** this could cause an issue if you have an out of date ``Pipfile`` which lowercases the comparison value (e.g. ``cpython`` instead of ``CPython``).
+Pipenv will now parse & capitalize ``platform_python_implementation`` markers.
+
+ .. note:: 
+  
+    This could cause an issue if you have an out of date ``Pipfile`` which lowercases the comparison value (e.g. ``cpython`` instead of ``CPython``). 
diff --git a/news/2142.bugfix b/news/2142.bugfix
index b36d5d9d..4a215216 100644
--- a/news/2142.bugfix
+++ b/news/2142.bugfix
@@ -1 +1 @@
-Fixed a bug with parsing and grouping old-style setup.py extras during resolution
+Fixed a bug with parsing and grouping old-style ``setup.py`` extras during resolution
diff --git a/news/2194.docs b/news/2194.docs
index 562e52c0..9bd3b876 100644
--- a/news/2194.docs
+++ b/news/2194.docs
@@ -1 +1 @@
-Update the wording to clarify Pipenv's overall role in the packaging ecosystem.
+Update documentation wording to clarify Pipenv's overall role in the packaging ecosystem.
diff --git a/news/2255.feature b/news/2255.feature
index 7acb52bc..f78ef2c4 100644
--- a/news/2255.feature
+++ b/news/2255.feature
@@ -1,2 +1,2 @@
-Dropped vendored pip 9 and vendor, patch, and migrate to pip 10.
+Dropped vendored pip 9 and vendored, patched, and migrated to pip 10.
 Updated patched piptools version.
diff --git a/news/2255.vendor b/news/2255.vendor
index 7acb52bc..f78ef2c4 100644
--- a/news/2255.vendor
+++ b/news/2255.vendor
@@ -1,2 +1,2 @@
-Dropped vendored pip 9 and vendor, patch, and migrate to pip 10.
+Dropped vendored pip 9 and vendored, patched, and migrated to pip 10.
 Updated patched piptools version.
diff --git a/news/2269.bugfix b/news/2269.bugfix
index 7b63b595..223ffda2 100644
--- a/news/2269.bugfix
+++ b/news/2269.bugfix
@@ -1 +1 @@
-Updated requirementslib to fix a bug in pipfile parsing affecting relative path conversions.
+Updated ``requirementslib`` to fix a bug in pipfile parsing affecting relative path conversions.
diff --git a/news/2269.vendor b/news/2269.vendor
index 7b63b595..223ffda2 100644
--- a/news/2269.vendor
+++ b/news/2269.vendor
@@ -1 +1 @@
-Updated requirementslib to fix a bug in pipfile parsing affecting relative path conversions.
+Updated ``requirementslib`` to fix a bug in pipfile parsing affecting relative path conversions.
diff --git a/news/2309.behavior b/news/2309.behavior
new file mode 100644
index 00000000..2650524f
--- /dev/null
+++ b/news/2309.behavior
@@ -0,0 +1 @@
+Pipenv will now only search for ``requirements.txt`` files when creating new projects, and during that time only if the user doesn't specify packages to pass in.
diff --git a/news/2368.vendor b/news/2368.vendor
index 8a6860e3..9ccdffdc 100644
--- a/news/2368.vendor
+++ b/news/2368.vendor
@@ -1,26 +1,15 @@
-Updated vendored libraries.
-The following vendored libraries were updated:
+Updated vendored libraries. The following vendored libraries were updated:
 
   * distlib from version ``0.2.6`` to ``0.2.7``.
-
   * jinja2 from version ``2.9.5`` to ``2.10``.
-
   * pathlib2 from version ``2.1.0`` to ``2.3.2``.
-
   * parse from version ``2.8.0`` to ``2.8.4``.
-
   * pexpect from version ``2.5.2`` to ``2.6.0``.
-
   * requests from version ``2.18.4`` to ``2.19.1``.
-
   * idna from version ``2.6`` to ``2.7``.
-
   * certifi from version ``2018.1.16`` to ``2018.4.16``.
-
   * packaging from version ``16.8`` to ``17.1``.
-
   * six from version ``1.10.0`` to ``1.11.0``.
-
-  * requirementslib from version ``0.2.0`` to ``1.0.1``.
+  * requirementslib from version ``0.2.0`` to ``1.0.1``. 
 
 In addition, scandir was vendored and patched to avoid importing host system binaries when falling back to pathlib2.
diff --git a/news/releasing.trivial.rst b/news/releasing.trivial.rst
new file mode 100644
index 00000000..b78d0081
--- /dev/null
+++ b/news/releasing.trivial.rst
@@ -0,0 +1 @@
+Added release tasks for maintainers.
diff --git a/tasks/__init__.py b/tasks/__init__.py
index 5cb7fb29..581f5076 100644
--- a/tasks/__init__.py
+++ b/tasks/__init__.py
@@ -3,6 +3,6 @@
 # see https://github.com/pypa/pip/blob/95bcf8c5f6394298035a7332c441868f3b0169f4/tasks/__init__.py
 import invoke
 
-from . import vendoring
+from . import vendoring, release
 
-ns = invoke.Collection(vendoring)
+ns = invoke.Collection(vendoring, release)
diff --git a/tasks/release.py b/tasks/release.py
new file mode 100644
index 00000000..6a8977ee
--- /dev/null
+++ b/tasks/release.py
@@ -0,0 +1,100 @@
+# -*- coding=utf-8 -*-
+import datetime
+import invoke
+import sys
+from pipenv.__version__ import __version__
+from parver import Version
+from .vendoring import _get_git_root, drop_dir
+
+
+VERSION_FILE = 'pipenv/__version__.py'
+
+
+def log(msg):
+    print('[release] %s' % msg)
+
+
+def get_version_file(ctx):
+    return _get_git_root(ctx).joinpath(VERSION_FILE)
+
+
+def get_dist_dir(ctx):
+    return _get_git_root(ctx) / 'dist'
+
+
+def get_build_dir(ctx):
+    return _get_git_root(ctx) / 'build'
+
+
+def drop_dist_dirs(ctx):
+    log('Dropping Dist dir...')
+    drop_dir(get_dist_dir(ctx))
+    log('Dropping build dir...')
+    drop_dir(get_build_dir(ctx))
+
+
+@invoke.task
+def build_dists(ctx):
+    drop_dist_dirs(ctx)
+    log('Building sdist using %s ....' % sys.executable)
+    ctx.run('%s setup.py sdist' % sys.executable)
+    log('Building wheel using %s ....' % sys.executable)
+    ctx.run('%s setup.py bdist_wheel' % sys.executable)
+
+
+@invoke.task(build_dists)
+def upload_dists(ctx):
+    log('Uploading distributions to pypi...')
+    ctx.run('twine upload dist/*')
+
+
+@invoke.task
+def generate_changelog(ctx, commit=False):
+    log('Generating changelog...')
+    ctx.run('towncrier')
+    if commit:
+        log('Committing...')
+        ctx.run('git add .')
+        ctx.run('git commit -m "Update changelog."')
+
+
+@invoke.task
+def tag_version(ctx, push=False):
+    version = Version.parse(__version__)
+    log('Tagging revision: v%s' % version)
+    ctx.run('git tag v%s' % version)
+    if push:
+        log('Pushing tags...')
+        ctx.run('git push --tags')
+
+
+@invoke.task
+def bump_version(ctx, increment=True, release=False, dev=False, pre=False, tag=None, clear=False):
+    current_version = Version.parse(__version__)
+    today = datetime.date.today()
+    next_month_number = today.month + 1 if today.month != 12 else 1
+    next_year_number = today.year if next_month_number != 1 else today.year+1
+    next_month = (next_year_number, next_month_number, 0)
+    if pre and not tag:
+        print('Using "pre" requires a corresponding tag.')
+        return
+    if release and not dev and not pre:
+        new_version = current_version.replace(release=today.time_tuple()[:3]).clear(pre=True, dev=True)
+    elif release and (dev or pre):
+        new_version = current_version.replace(release=today.time_tuple()[:3])
+        if dev:
+            new_version = new_version.bump_dev()
+        elif pre:
+            new_version = new_version.bump_pre(tag=tag)
+    else:
+        new_version = current_version.replace(release=next_month)
+        if dev:
+            new_version.bump_dev()
+        elif pre:
+            new_version.bump_pre(tag=tag)
+    if clear:
+        new_version = new_version.clear(dev=True, pre=True, post=True)
+    log(ctx, 'Updating version to %s' % new_version.normalize())
+    version_file = get_version_file(ctx)
+    file_contents = version_file.read_text()
+    version_file.write_text(file_contents.replace(__version__, str(new_version.normalize())))
