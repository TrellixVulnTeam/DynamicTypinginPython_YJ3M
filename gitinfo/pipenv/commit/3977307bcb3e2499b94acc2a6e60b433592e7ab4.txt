commit 3977307bcb3e2499b94acc2a6e60b433592e7ab4
Author: Dan Ryan <dan@danryan.co>
Date:   Sun Nov 4 02:29:21 2018 -0500

    Update pythonfinder
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/vendor/pythonfinder/__init__.py b/pipenv/vendor/pythonfinder/__init__.py
index dbc0026b..0b22546a 100644
--- a/pipenv/vendor/pythonfinder/__init__.py
+++ b/pipenv/vendor/pythonfinder/__init__.py
@@ -1,6 +1,6 @@
 from __future__ import print_function, absolute_import
 
-__version__ = '1.1.7.dev0'
+__version__ = '1.1.7'
 
 # Add NullHandler to "pythonfinder" logger, because Python2's default root
 # logger has no handler and warnings like this would be reported:
diff --git a/pipenv/vendor/pythonfinder/models/path.py b/pipenv/vendor/pythonfinder/models/path.py
index 20b2c196..33b4ab58 100644
--- a/pipenv/vendor/pythonfinder/models/path.py
+++ b/pipenv/vendor/pythonfinder/models/path.py
@@ -144,7 +144,12 @@ class SystemPath(object):
         self.path_order = (
             before_path + [p.as_posix() for p in root_paths] + after_path
         )
+        pyenv_shim_path = os.path.join(PYENV_ROOT, "shims")
+        if pyenv_shim_path in self.path_order:
+            self.path_order.remove(pyenv_shim_path)
         self.paths.update(self.pyenv_finder.roots)
+        if pyenv_shim_path in self.paths:
+            del self.paths[pyenv_shim_path]
         self._register_finder("pyenv", self.pyenv_finder)
 
     def _setup_windows(self):
diff --git a/pipenv/vendor/pythonfinder/models/pyenv.py b/pipenv/vendor/pythonfinder/models/pyenv.py
index 1595a963..5874af64 100644
--- a/pipenv/vendor/pythonfinder/models/pyenv.py
+++ b/pipenv/vendor/pythonfinder/models/pyenv.py
@@ -44,6 +44,19 @@ class PyenvFinder(BaseFinder, BasePath):
             if path is not None
         )
 
+    def get_version_order(self):
+        version_order_file = self.root.joinpath("version").read_text(encoding="utf-8")
+        version_paths = [
+            p for p in self.root.glob("versions/*")
+            if not (p.parent.name == "envs" or p.name == "envs")
+        ]
+        versions = {v.name: v for v in version_paths}
+        version_order = [versions[v] for v in version_order_file.splitlines() if v in versions]
+        for version in version_order:
+            version_paths.remove(version)
+        version_order += version_paths
+        return version_order
+
     @classmethod
     def version_from_bin_dir(cls, base_dir, name=None):
         py_version = None
@@ -59,9 +72,7 @@ class PyenvFinder(BaseFinder, BasePath):
     def get_versions(self):
         versions = defaultdict()
         bin_ = sysconfig._INSTALL_SCHEMES[sysconfig._get_default_scheme()]["scripts"]
-        for p in self.root.glob("versions/*"):
-            if p.parent.name == "envs" or p.name == "envs":
-                continue
+        for p in self.get_version_order():
             bin_dir = Path(bin_.format(base=p.as_posix()))
             version_path = None
             if bin_dir.exists():
diff --git a/pipenv/vendor/requirementslib/__init__.py b/pipenv/vendor/requirementslib/__init__.py
index 5429d6ee..ba0ce9ae 100644
--- a/pipenv/vendor/requirementslib/__init__.py
+++ b/pipenv/vendor/requirementslib/__init__.py
@@ -1,5 +1,5 @@
 # -*- coding=utf-8 -*-
-__version__ = '1.2.4'
+__version__ = '1.2.5'
 
 import logging
 
