commit 2e10ff6c7d3735bd98c806b94e7df1b5640f6fee
Author: Dan Ryan <dan@danryan.co>
Date:   Tue Nov 13 18:08:00 2018 -0500

    Fix pythonfinder
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/vendor/pythonfinder/models/path.py b/pipenv/vendor/pythonfinder/models/path.py
index 53c2360c..7fae3312 100644
--- a/pipenv/vendor/pythonfinder/models/path.py
+++ b/pipenv/vendor/pythonfinder/models/path.py
@@ -33,6 +33,11 @@ from ..utils import (
 from .python import PythonVersion
 
 
+ASDF_SHIM_PATH = normalize_path(os.path.join(ASDF_DATA_DIR, "shims"))
+PYENV_SHIM_PATH = normalize_path(os.path.join(PYENV_ROOT, "shims"))
+SHIM_PATHS = [ASDF_SHIM_PATH, PYENV_SHIM_PATH]
+
+
 @attr.s
 class SystemPath(object):
     global_search = attr.ib(default=True)
@@ -434,6 +439,7 @@ class SystemPath(object):
                     path=p.absolute(), is_root=True, only_python=only_python
                 )
                 for p in _path_objects
+                if not any(shim in normalize_path(str(p)) for shim in SHIM_PATHS)
             }
         )
         return cls(
@@ -476,6 +482,8 @@ class PathEntry(BasePath):
             yield (self.path.as_posix(), copy.deepcopy(self))
         elif self.is_root:
             for child in self._filter_children():
+                if any(shim in normalize_path(str(child)) for shim in SHIM_PATHS):
+                    continue
                 yield (child.as_posix(), PathEntry.create(path=child, **pass_args))
         return
 
@@ -566,6 +574,8 @@ class PathEntry(BasePath):
             if not guessed_name:
                 child_creation_args["name"] = name
             for pth, python in pythons.items():
+                if any(shim in normalize_path(str(pth)) for shim in SHIM_PATHS):
+                    continue
                 pth = ensure_path(pth)
                 children[pth.as_posix()] = PathEntry(
                     py_version=python,
