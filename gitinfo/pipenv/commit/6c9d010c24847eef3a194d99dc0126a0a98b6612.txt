commit 6c9d010c24847eef3a194d99dc0126a0a98b6612
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Jan 25 16:00:44 2017 -0500

    ensure proper casing of pipfile packages

diff --git a/pipenv/cli.py b/pipenv/cli.py
index f8c457ff..2bd1260c 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -61,6 +61,9 @@ def ensure_pipfile():
         # Create the pipfile if it doesn't exist.
         project.create_pipfile()
 
+    # Ensure that the Pipfile is using proper casing.
+    ensure_proper_casing()
+
 
 def ensure_virtualenv(three=None):
     """Creates a virtualenv, if one doesn't exist."""
@@ -85,6 +88,38 @@ def ensure_project(three=None):
     ensure_pipfile()
     ensure_virtualenv(three=three)
 
+def ensure_proper_casing():
+    """Ensures proper casing of Pipfile packages, writes to disk."""
+    p = project.parsed_pipfile
+
+    # Casing for [packages]
+    if 'packages' in p:
+        # Replace each package with proper casing.
+        for dep in p['packages']:
+
+            # Get new casing for package name.
+            new_casing = proper_case(dep)
+
+            # Replace old value with new value.
+            old_value = p['packages'][dep]
+            del p['packages'][dep]
+            p['packages'][new_casing] = old_value
+
+    if 'dev-packages' in p:
+        # casing for [dev-packages]
+        for dep in p['dev-packages']:
+
+            # Get new casing for package name.
+            new_casing = proper_case(dep)
+
+            # Replace old value with new value.
+            old_value = p['dev-packages'][dep]
+            del p['dev-packages'][dep]
+            p['dev-packages'][new_casing] = old_value
+
+    # Write pipfile out to disk.
+    project.write(p)
+
 
 def do_where(virtualenv=False, bare=True):
     """Executes the where functionality."""
@@ -121,7 +156,7 @@ def do_install_dependencies(dev=False, only=False, bare=False, requirements=Fals
     if only or not project.lockfile_exists:
         if not bare:
             click.echo(crayons.yellow('Installing dependencies from Pipfile...'))
-        lockfile = json.loads(p.lock())
+            lockfile = json.loads(p.lock())
     else:
         if not bare:
             click.echo(crayons.yellow('Installing dependencies from Pipfile.lock...'))
diff --git a/pipenv/project.py b/pipenv/project.py
index 747dd90c..2cedc4c6 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -81,6 +81,10 @@ class Project(object):
         with open('Pipfile', 'w') as f:
             f.write(toml.dumps(data))
 
+    def write(self, data):
+        with open(self.pipfile_location, 'w') as f:
+            f.write(toml.dumps(data))
+
     @property
     def source(self):
         # TODO: Should load from Pipfile.lock too.
