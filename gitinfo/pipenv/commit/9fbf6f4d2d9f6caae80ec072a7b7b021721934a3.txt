commit 9fbf6f4d2d9f6caae80ec072a7b7b021721934a3
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sat Mar 10 07:52:39 2018 -0500

    skip dep resolution when ireq is None
    
    #1653
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/Pipfile.lock b/Pipfile.lock
index 2396bb9f..1c545525 100644
--- a/Pipfile.lock
+++ b/Pipfile.lock
@@ -214,6 +214,7 @@
             "hashes": [
                 "sha256:7f8ae7f5bdf75671a718d2daf0a64b7885f74510bcd98b1a0bb420eb9a9d0cff"
             ],
+            "markers": "python_version == '>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*'",
             "version": "==0.6.0"
         },
         "py": {
diff --git a/pipenv/patched/piptools/repositories/pypi.py b/pipenv/patched/piptools/repositories/pypi.py
index cdfb8c12..a77b6502 100755
--- a/pipenv/patched/piptools/repositories/pypi.py
+++ b/pipenv/patched/piptools/repositories/pypi.py
@@ -162,27 +162,29 @@ class PyPIRepository(BaseRepository):
     def get_dependencies(self, ireq):
         json_results = set()
         json_raised = False
-        if self.use_json:
-            try:
-                json_results = self.get_json_dependencies(ireq)
-            except TypeError:
-                json_raised = True
-                json_results = set()
 
-        legacy_raised = False
-        try:
-            legacy_results = self.get_legacy_dependencies(ireq)
-        except Exception:
-            legacy_raised = True
-            legacy_results = set()
-
-        if all((legacy_raised, json_raised)):
-            raise ValueError(
-                'Your dependencies could not be resolved.\n'
-                'Please run "$ pipenv-resolver {0!r} --verbose" to debug.'.format(str(ireq.req))
-            )
-
-        json_results.update(legacy_results)
+        if ireq:
+            if self.use_json:
+                try:
+                    json_results = self.get_json_dependencies(ireq)
+                except TypeError:
+                    json_raised = True
+                    json_results = set()
+
+            legacy_raised = False
+            try:
+                legacy_results = self.get_legacy_dependencies(ireq)
+            except Exception:
+                legacy_raised = True
+                legacy_results = set()
+
+            if all((legacy_raised, json_raised)):
+                raise ValueError(
+                    'Your dependencies could not be resolved.\n'
+                    'Please run "$ pipenv-resolver {0!r} --verbose" to debug.'.format(str(ireq.req))
+                )
+
+            json_results.update(legacy_results)
         return json_results
 
     def get_legacy_dependencies(self, ireq):
