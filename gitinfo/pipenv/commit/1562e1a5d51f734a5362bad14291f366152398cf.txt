commit 1562e1a5d51f734a5362bad14291f366152398cf
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Sun Mar 11 10:44:18 2018 -0400

    resolve all hashes #1667

diff --git a/pipenv/patched/piptools/resolver.py b/pipenv/patched/piptools/resolver.py
index e93cc149..c9c6bd85 100755
--- a/pipenv/patched/piptools/resolver.py
+++ b/pipenv/patched/piptools/resolver.py
@@ -305,7 +305,7 @@ class Resolver(object):
         dependency_strings = self.dependency_cache[ireq]
         log.debug('  {:25} requires {}'.format(format_requirement(ireq),
                                                ', '.join(sorted(dependency_strings, key=lambda s: s.lower())) or '-'))
-        from pip._vendor.packaging.markers import InvalidMarker
+        from notpip._vendor.packaging.markers import InvalidMarker
         for dependency_string in dependency_strings:
             individual_dependencies = [dep.strip() for dep in dependency_string.split(', ')]
             cleaned_deps = []
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 1d22061e..fd4278fe 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -443,12 +443,12 @@ def resolve_deps(deps, which, project, sources=None, verbose=False, python=False
                         click.echo('{0}: Error generating hash for {1}'.format(crayons.red('Warning', bold=True), name))
 
             # Collect un-collectable hashes (should work with devpi).
-            if not collected_hashes:
-                try:
-                    collected_hashes = list(list(resolver.resolve_hashes([result]).items())[0][1])
-                except (ValueError, KeyError, ConnectionError, IndexError):
-                    if verbose:
-                        print('Error generating hash for {}'.format(name))
+
+            try:
+                collected_hashes = collected_hashes + list(list(resolver.resolve_hashes([result]).items())[0][1])
+            except (ValueError, KeyError, ConnectionError, IndexError):
+                if verbose:
+                    print('Error generating hash for {}'.format(name))
 
             d = {'name': name, 'version': version, 'hashes': collected_hashes}
 
