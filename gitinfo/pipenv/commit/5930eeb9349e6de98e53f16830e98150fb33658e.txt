commit 5930eeb9349e6de98e53f16830e98150fb33658e
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Sep 18 13:09:25 2017 -0400

    improvements to inline table conversion
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/project.py b/pipenv/project.py
index 29749e91..003991be 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -172,21 +172,29 @@ class Project(object):
 
     @property
     def parsed_pipfile(self):
+        # Open the pipfile, read it into memory.
         with open(self.pipfile_location) as f:
-            data = toml.loads(f.read())
+            contents = f.read()
 
-        # Convert all outline tables to inline tables.
-        for section in ('packages', 'dev-packages'):
-            for package in data.get(section):
+        # If any outline tables are present...
+        if ('[packages.' in contents) or ('[dev-packages.' in contents):
+
+            data = toml.loads(contents)
 
-                # Convert things to inline tables — fancy :)
-                if hasattr(data[section][package], 'keys'):
-                    _data = data[section][package]
-                    data[section][package] = toml._get_empty_inline_table(dict)
-                    data[section][package].update(_data)
+            # Convert all outline tables to inline tables.
+            for section in ('packages', 'dev-packages'):
+                for package in data.get(section):
+
+                    # Convert things to inline tables — fancy :)
+                    if hasattr(data[section][package], 'keys'):
+                        _data = data[section][package]
+                        data[section][package] = toml._get_empty_inline_table(dict)
+                        data[section][package].update(_data)
 
-        # We lose comments here, but it's for the best.)
-        return contoml.loads(toml.dumps(data, preserve=True))
+            # We lose comments here, but it's for the best.)
+            return contoml.loads(toml.dumps(data, preserve=True))
+        else:
+            return contoml.loads(contents)
 
     @property
     def _pipfile(self):
