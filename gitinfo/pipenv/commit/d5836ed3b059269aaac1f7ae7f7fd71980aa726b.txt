commit d5836ed3b059269aaac1f7ae7f7fd71980aa726b
Author: Dan Ryan <dan@danryan.co>
Date:   Wed Aug 22 03:10:34 2018 -0400

    Just strip https from test mirror index
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/run-tests.sh b/run-tests.sh
index 614d5a41..64d79648 100755
--- a/run-tests.sh
+++ b/run-tests.sh
@@ -56,10 +56,8 @@ echo "$ pipenv run time pytest -v -n auto tests -m \"$TEST_SUITE\""
 # PIPENV_PYTHON=2.7 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 2.7 &
 # PIPENV_PYTHON=3.6 pipenv run time pytest -v -n auto tests -m "$TEST_SUITE" | prefix 3.6
 # Better to run them sequentially.
-export REQUESTS_CA_BUNDLE=$(readlink -f ./tests/pytest-pypi/pytest_pypi/certs/cacert.pem)
 PIPENV_PYTHON=2.7 pipenv run time pytest
 PIPENV_PYTHON=3.7 pipenv run time pytest
-set -u REQUESTS_CA_BUNDLE
 
 # test revendoring
 pip3 install --upgrade invoke requests parver
diff --git a/tests/integration/conftest.py b/tests/integration/conftest.py
index 5f1925b1..76a429e0 100644
--- a/tests/integration/conftest.py
+++ b/tests/integration/conftest.py
@@ -10,16 +10,15 @@ from pipenv.vendor import requests
 from pipenv.vendor import six
 from pipenv.vendor import toml
 from pytest_pypi.app import prepare_packages as prepare_pypi_packages
-from pytest_pypi.certs import where as certs_where
 
 if six.PY2:
     class ResourceWarning(Warning):
         pass
 
-os.environ["REQUESTS_CA_BUNDLE"] = certs_where()
 
 HAS_WARNED_GITHUB = False
 
+
 def check_internet():
     try:
         # Kenneth represents the Internet LGTM.
diff --git a/tests/integration/test_install_basic.py b/tests/integration/test_install_basic.py
index ab6648f4..8ae644ec 100644
--- a/tests/integration/test_install_basic.py
+++ b/tests/integration/test_install_basic.py
@@ -51,6 +51,10 @@ def test_mirror_install(PipenvInstance, pypi):
         assert "pypi.org" not in mirror_url
         # This should sufficiently demonstrate the mirror functionality
         # since pypi.org is the default when PIPENV_TEST_INDEX is unset.
+        # we don't run the secure http-bin so we need to make sure this is not a https url
+        if any(host in mirror_url for host in ["localhost", "127.0.0.1"]):
+            if mirror_url.startswith("https://"):
+                mirror_url = mirror_url.replace("https://", "http://")
         c = p.pipenv("install requests --pypi-mirror {0}".format(mirror_url))
         assert c.return_code == 0
         # Ensure the --pypi-mirror parameter hasn't altered the Pipfile or Pipfile.lock sources
