commit 92ab06e6634f04850a0aafb718a22dcb11fa66a2
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Wed Sep 20 21:26:07 2017 -0400

    PIPENV_PIPFILE
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/environments.py b/pipenv/environments.py
index dc5eadb3..52c66e41 100644
--- a/pipenv/environments.py
+++ b/pipenv/environments.py
@@ -18,6 +18,9 @@ PIPENV_COLORBLIND = bool(os.environ.get('PIPENV_COLORBLIND'))
 # Disable spinner for better test and deploy logs (for the unworthy).
 PIPENV_NOSPIN = bool(os.environ.get('PIPENV_NOSPIN'))
 
+# Specify a custom Pipfile location.
+PIPENV_PIPFILE = os.environ.get('PIPENV_PIPFILE')
+
 # Tells pipenv to not try to install -e dependencies to get their dependency information.
 PIPENV_DONT_EAT_EDITABLES = bool(os.environ.get('PIPENV_DONT_EAT_EDITABLES'))
 
diff --git a/pipenv/project.py b/pipenv/project.py
index cbb3ad0b..e5823115 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -16,8 +16,13 @@ from .utils import (
     find_requirements, is_file, is_vcs, python_version
 )
 from .environments import PIPENV_MAX_DEPTH, PIPENV_VENV_IN_PROJECT
-from .environments import PIPENV_USE_SYSTEM
+from .environments import PIPENV_USE_SYSTEM, PIPENV_PIPFILE
 
+if PIPENV_PIPFILE:
+    if not os.path.isfile(PIPENV_PIPFILE):
+        raise RuntimeError('Given PIPENV_PIPFILE is not found!')
+    else:
+        PIPENV_PIPFILE = os.path.abspath(PIPENV_PIPFILE)
 
 class Project(object):
     """docstring for Project"""
@@ -152,6 +157,9 @@ class Project(object):
 
     @property
     def pipfile_location(self):
+        if PIPENV_PIPFILE:
+            return PIPENV_PIPFILE
+
         if self._pipfile_location is None:
             try:
                 loc = pipfile.Pipfile.find(max_depth=PIPENV_MAX_DEPTH)
