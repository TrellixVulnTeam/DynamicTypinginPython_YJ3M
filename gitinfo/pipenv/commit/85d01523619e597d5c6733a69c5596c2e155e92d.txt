commit 85d01523619e597d5c6733a69c5596c2e155e92d
Author: Dan Ryan <dan@danryan.co>
Date:   Sat Jul 6 03:50:23 2019 -0400

    Fix windows specific sort order quirks
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/pipenv/vendor/pythonfinder/models/python.py b/pipenv/vendor/pythonfinder/models/python.py
index 15fc9b5f..427eb694 100644
--- a/pipenv/vendor/pythonfinder/models/python.py
+++ b/pipenv/vendor/pythonfinder/models/python.py
@@ -354,7 +354,7 @@ class PythonVersion(object):
     architecture = attr.ib(default=None)  # type: Optional[str]
     comes_from = attr.ib(default=None)  # type: Optional[PathEntry]
     executable = attr.ib(default=None)  # type: Optional[str]
-    company = attr.ib(default="PythonCore")  # type: Optional[str]
+    company = attr.ib(default=None)  # type: Optional[str]
     name = attr.ib(default=None, type=str)
 
     def __getattribute__(self, key):
@@ -392,7 +392,7 @@ class PythonVersion(object):
         postrelease.  ``(0, 3, 7, 3, 2)`` represents a non-core python release, e.g. by
         a repackager of python like Continuum.
         """
-        company_sort = 1 if self.company == "PythonCore" else 0
+        company_sort = 1 if (self.company and self.company == "PythonCore") else 0
         release_sort = 2
         if self.is_postrelease:
             release_sort = 3
diff --git a/pipenv/vendor/pythonfinder/pythonfinder.py b/pipenv/vendor/pythonfinder/pythonfinder.py
index b0097c22..400a3170 100644
--- a/pipenv/vendor/pythonfinder/pythonfinder.py
+++ b/pipenv/vendor/pythonfinder/pythonfinder.py
@@ -308,6 +308,7 @@ class Finder(object):
         )
         if not isinstance(versions, Iterable):
             versions = [versions]
+        # This list has already been mostly sorted on windows, we don't need to reverse it again
         path_list = sorted(versions, key=version_sort, reverse=True)
         path_map = {}  # type: Dict[str, PathEntry]
         for path in path_list:
@@ -317,4 +318,4 @@ class Finder(object):
                 resolved_path = path.path.absolute()
             if not path_map.get(resolved_path.as_posix()):
                 path_map[resolved_path.as_posix()] = path
-        return list(path_map.values())
+        return path_list
