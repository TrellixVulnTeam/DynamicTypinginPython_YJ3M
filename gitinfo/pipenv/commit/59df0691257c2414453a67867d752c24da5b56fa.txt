commit 59df0691257c2414453a67867d752c24da5b56fa
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Thu Sep 14 13:52:59 2017 -0400

    potential fix for windows
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 00f2ff58..02497d7b 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -390,7 +390,7 @@ def ensure_project(three=None, python=None, validate=True, system=False, warn=Tr
         if warn:
             # Warn users if they are using the wrong version of Python.
             if project.required_python_version:
-                path_to_python = shellquote(which('python'))
+                path_to_python = which('python')
                 if project.required_python_version not in python_version(path_to_python):
                     puts(
                         '{0}: Your Pipfile requires {1} {2}, '
@@ -1031,9 +1031,13 @@ def pip_download(package_name):
 def which(command):
     if os.name == 'nt':
         if command.endswith('.py'):
-            return os.sep.join([project.virtualenv_location] + ['Scripts\{0}'.format(command)])
-        return os.sep.join([project.virtualenv_location] + ['Scripts\{0}.exe'.format(command)])
-    return os.sep.join([project.virtualenv_location] + ['bin/{0}'.format(command)])
+            p = os.sep.join([project.virtualenv_location] + ['Scripts\{0}'.format(command)])
+        else:
+            p = os.sep.join([project.virtualenv_location] + ['Scripts\{0}.exe'.format(command)])
+    else:
+        p = os.sep.join([project.virtualenv_location] + ['bin/{0}'.format(command)])
+
+    return shellquote(p)
 
 
 def which_pip(allow_global=False):
diff --git a/pipenv/utils.py b/pipenv/utils.py
index ba101c55..66812c78 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -29,9 +29,6 @@ def python_version(path_to_python):
     if not path_to_python:
         return None
 
-    # Quote the path to Python, for Windows.
-    path_to_python = shellquote(path_to_python)
-
     try:
         TEMPLATE = 'Python {}.{}.{}'
         c = delegator.run('{0} --version'.format(path_to_python), block=False)
