commit f4fba435333a0680f3cfd7884924e74544567165
Author: Dan Ryan <dan.ryan@canonical.com>
Date:   Tue May 19 15:39:05 2020 -0400

    Update requirementslib and vistir
    
    Signed-off-by: Dan Ryan <dan.ryan@canonical.com>

diff --git a/pipenv/vendor/requirementslib/models/setup_info.py b/pipenv/vendor/requirementslib/models/setup_info.py
index 8d05c286..f0d40f29 100644
--- a/pipenv/vendor/requirementslib/models/setup_info.py
+++ b/pipenv/vendor/requirementslib/models/setup_info.py
@@ -926,7 +926,7 @@ class Analyzer(ast.NodeVisitor):
         return unparsed
 
     def unparse_list(self, item):
-        return type(item)([unparse(el) for el in item])
+        return type(item)([self.unparse(el) for el in item])
 
     def unparse_tuple(self, item):
         return self.unparse_list(item)
@@ -966,6 +966,17 @@ class Analyzer(ast.NodeVisitor):
             )
         return self.resolved_function_names
 
+    def parse_setup_function(self):
+        setup = {}  # type: Dict[Any, Any]
+        self.unmap_binops()
+        function_names = self.parse_functions()
+        if "setup" in function_names:
+            setup = self.unparse(function_names["setup"])
+        keys = list(setup.keys())
+        if len(keys) == 1 and keys[0] is None:
+            _, setup = setup.popitem()
+        return setup
+
 
 def ast_unparse(item, initial_mapping=False, analyzer=None, recurse=True):  # noqa:C901
     # type: (Any, bool, Optional[Analyzer], bool) -> Union[List[Any], Dict[Any, Any], Tuple[Any, ...], STRING_TYPE]
diff --git a/pipenv/vendor/vistir/compat.py b/pipenv/vendor/vistir/compat.py
index bea5b5e7..a21df8f3 100644
--- a/pipenv/vendor/vistir/compat.py
+++ b/pipenv/vendor/vistir/compat.py
@@ -29,6 +29,7 @@ __all__ = [
     "TemporaryDirectory",
     "NamedTemporaryFile",
     "to_native_string",
+    "samefile",
     "Mapping",
     "Hashable",
     "MutableMapping",
@@ -80,6 +81,7 @@ if sys.version_info >= (3, 4):  # pragma: no cover
         MutableSequence,
         Callable,
     )
+    from os.path import samefile
 
 else:  # pragma: no cover
     # Only Python 2.7 is supported
@@ -110,6 +112,24 @@ else:  # pragma: no cover
     NamedTemporaryFile = _NamedTemporaryFile
     from pipenv.vendor.backports.weakref import finalize  # type: ignore
 
+    try:
+        from os.path import samefile
+    except ImportError:
+
+        def samestat(s1, s2):
+            """Test whether two stat buffers reference the same file."""
+            return s1.st_ino == s2.st_ino and s1.st_dev == s2.st_dev
+
+        def samefile(f1, f2):
+            """Test whether two pathnames reference the same actual file or
+            directory This is determined by the device number and i-node number
+            and raises an exception if an os.stat() call on either pathname
+            fails."""
+            s1 = os.stat(f1)
+            s2 = os.stat(f2)
+            return samestat(s1, s2)
+
+
 try:
     # Introduced Python 3.5
     from json import JSONDecodeError
