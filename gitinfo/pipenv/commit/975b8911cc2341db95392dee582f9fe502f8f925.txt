commit 975b8911cc2341db95392dee582f9fe502f8f925
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Mon Sep 18 19:45:09 2017 -0400

    obtain dependencies from -e deps
    
    Fixes #592
    
    Signed-off-by: Kenneth Reitz <me@kennethreitz.org>

diff --git a/pipenv/cli.py b/pipenv/cli.py
index 16e7f853..8ee7a47c 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -858,7 +858,8 @@ def do_lock(verbose=False, system=False, clear=False):
         sources=project.sources,
         verbose=verbose,
         python=python_version(which('python', allow_global=system)),
-        clear=clear
+        clear=clear,
+        which=which
     )
 
     # Add develop dependencies to lockfile.
@@ -879,6 +880,7 @@ def do_lock(verbose=False, system=False, clear=False):
 
                 if is_vcs(installed[name]):
                     lockfile['develop'].update(installed)
+
             except IndexError:
                 pass
 
@@ -898,7 +900,8 @@ def do_lock(verbose=False, system=False, clear=False):
         deps,
         sources=project.sources,
         verbose=verbose,
-        python=python_version(which('python', allow_global=system))
+        python=python_version(which('python', allow_global=system)),
+        which=which
     )
 
     # Add default dependencies to lockfile.
diff --git a/pipenv/utils.py b/pipenv/utils.py
index 08e13967..40627704 100644
--- a/pipenv/utils.py
+++ b/pipenv/utils.py
@@ -71,7 +71,22 @@ class HackedPythonVersion(object):
             del os.environ['PIP_PYTHON_VERSION']
 
 
-def resolve_deps(deps, sources=None, verbose=False, python=False, clear=False):
+def best_matches_from(path, which):
+    def gen(path, which):
+        path = os.path.abspath(os.sep.join([path, 'setup.py']))
+
+        if os.path.isfile(path):
+            # Install the path into develop mode, since it's going to be used anyway...
+            output = delegator.run('{0} {1} develop -v'.format(which('python'), shellquote(path))).out
+
+        for line in output.split('\n'):
+            if line.startswith('Searching for'):
+                yield line.split('for')[1].strip()
+
+    return list(gen(path, which))
+
+
+def resolve_deps(deps, which, sources=None, verbose=False, python=False, clear=False):
     """Given a list of dependencies, return a resolved list of dependencies,
     using pip-tools -- and their hashes, using the warehouse API / pip.
     """
@@ -83,13 +98,18 @@ def resolve_deps(deps, sources=None, verbose=False, python=False, clear=False):
             name = 'PipCommand'
 
         constraints = []
+        extra_constraints = []
 
         for dep in deps:
             if dep.startswith('-e '):
                 constraint = pip.req.InstallRequirement.from_editable(dep[len('-e '):])
+                # Resolve extra constraints from -e packages (that rely on setuptools.)
+                extra_constraints = best_matches_from(dep[len('-e ')], which=which)
+                extra_constraints = [pip.req.InstallRequirement.from_line(c) for c in extra_constraints]
             else:
                 constraint = pip.req.InstallRequirement.from_line(dep)
             constraints.append(constraint)
+            constraints.extend(extra_constraints)
 
         pip_command = get_pip_command()
 
diff --git a/setup.py b/setup.py
index 86d2da9c..052f045d 100644
--- a/setup.py
+++ b/setup.py
@@ -28,7 +28,7 @@ required = [
     'pip-tools>=1.9.0',
     'setuptools>=36.3.0',
     'semver',
-    'requests'
+    'requests>2.0.0'
 ]
 
 if sys.version_info < (2, 7):
