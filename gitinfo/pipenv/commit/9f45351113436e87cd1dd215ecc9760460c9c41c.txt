commit 9f45351113436e87cd1dd215ecc9760460c9c41c
Author: Dan Ryan <dan@danryan.co>
Date:   Sat Apr 7 18:16:30 2018 -0400

    Move install test to normal job and fix backport
    
    Signed-off-by: Dan Ryan <dan@danryan.co>

diff --git a/.travis.yml b/.travis.yml
index 47cb97d4..8b73c38b 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -10,6 +10,7 @@ env:
   - TEST_SUITE='complex'
   - TEST_SUITE='markers or run or project or utils'
   - TEST_SUITE='not (dotvenv or check or unused or requirements or complex or markers or run or project or utils or install)'
+  - TEST_SUITE='install'
 
 # command to install dependencies
 install:
@@ -19,21 +20,21 @@ install:
 
 # command to run the dependencies
 script:
-  - 'if [[ -n "$RUN_INTEGRATION_TESTS" ]]; then rm -fr ~/.cache/pip; fi'
+  - 'if [[ "$TEST_SUITE" == "install" ]]; then rm -fr ~/.cache/pip; fi'
   - "pipenv run bash ./run-tests.sh"
 
 jobs:
   include:
     - stage: integration
       env: TEST_SUITE='cli'
-    - stage: takes-forever
-      env:
-        - TEST_SUITE='install'
-        - PYTEST_ADDOPTS='--cache-clear'
-        - RUN_INTEGRATION_TESTS=1
+    # - stage: takes-forever
+    #   env:
+    #     - TEST_SUITE='install'
+    #     - PYTEST_ADDOPTS='--cache-clear'
+    #     - RUN_INTEGRATION_TESTS=1
 
 stages:
   - integration
   - test
-  - name: takes-forever
-    if: branch = master
+  # - name: takes-forever
+  #   if: branch = master
diff --git a/pipenv/core.py b/pipenv/core.py
index a4f438b3..7792e315 100644
--- a/pipenv/core.py
+++ b/pipenv/core.py
@@ -74,7 +74,7 @@ from .environments import (
 
 # Backport required for earlier versions of Python.
 if sys.version_info < (3, 3):
-    from backports.shutil_get_terminal_size import get_terminal_size
+    from .vendor.backports.shutil_get_terminal_size import get_terminal_size
 else:
     from shutil import get_terminal_size
 # Packages that should be ignored later.
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 4d6556b3..86201bde 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -235,7 +235,6 @@ class TestPipenv:
             assert c.return_code == 0 or c.err
 
     @pytest.mark.cli
-    @pytest.mark.install
     def test_install_parse_error(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
 
@@ -282,7 +281,7 @@ class TestPipenv:
 
     @pytest.mark.complex
     @pytest.mark.lock
-    @pytest.mark.skip(reason='Does not work')
+    @pytest.mark.skip(reason='Does not work unless you can explicitly install into py2')
     def test_complex_lock(self, pypi):
         with PipenvInstance(pypi=pypi) as p:
             c = p.pipenv('install apscheduler')
@@ -334,7 +333,6 @@ records = "*"
             c = p.pipenv('run python -c "import tablib"')
             assert c.return_code == 0
 
-    @pytest.mark.cli
     @pytest.mark.install
     @flaky
     def test_install_without_dev_section(self, pypi):
@@ -1051,13 +1049,13 @@ maya = "*"
     @pytest.mark.extras
     @pytest.mark.lock
     @pytest.mark.complex
-    @pytest.mark.skip(reason='This is toooo flaky; need to mock this')
+    @flaky(max_runs=5)
     @needs_internet
-    def test_complex_lock_deep_extras(self):
+    def test_complex_lock_deep_extras(self, pypi):
         # records[pandas] requires tablib[pandas] which requires pandas.
         # This uses the real PyPI; Pandas has too many requirements to mock.
 
-        with PipenvInstance() as p:
+        with PipenvInstance(pypi=pypi) as p:
             with open(p.pipfile_path, 'w') as f:
                 contents = """
 [packages]
