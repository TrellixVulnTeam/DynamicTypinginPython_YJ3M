commit cd28874469f6454b12d56975cbca1c3bc4f3439a
Author: Frost Ming <mianghong@gmail.com>
Date:   Thu Mar 22 20:46:35 2018 +0800

    add tests
    
    fix the broken `items()`
    
    Fix test cases
    
    Keep contoml untouched

diff --git a/pipenv/patched/contoml/file/file.py b/pipenv/patched/contoml/file/file.py
index 27001fc3..16017b99 100755
--- a/pipenv/patched/contoml/file/file.py
+++ b/pipenv/patched/contoml/file/file.py
@@ -231,7 +231,7 @@ class TOMLFile:
         if has_anonymous_entry():
             return items
         else:
-            return list(items) + [('', self[''])]
+            return items + [('', self[''])]
 
     @property
     def primitive(self):
@@ -271,18 +271,6 @@ class TOMLFile:
     def elements(self):
         return self._elements
 
-    _marker = object()
-
-    def pop(self, item, default=_marker):
-        """Pops an item and return the value"""
-        if item in self:
-            rv = self[item]
-            del self[item]
-            return rv
-        if default is self._marker:
-            raise KeyError(item)
-        return default
-
     def __str__(self):
 
         is_empty = (not self['']) and (not tuple(k for k in self.keys() if k))
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 4d6556b3..00ab99cd 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -590,6 +590,43 @@ tpfd = "*"
             c = p.pipenv('run python -c "import requests; import idna; import certifi; import records; import tpfd; import parse;"')
             assert c.return_code == 0
 
+    @pytest.mark.install
+    @pytest.mark.run
+    def test_pep423_name_install(self, pypi):
+        with PipenvInstance(pypi=pypi) as p:
+            with open(p.pipfile_path, 'w') as f:
+                contents = """
+[packages]
+python_dateutil = "*"
+"""
+                f.write(contents)
+
+            c = p.pipenv('install')
+            assert c.return_code == 0
+
+            c = p.pipenv('install python-dateutil')
+            assert c.return_code == 0
+            assert 'python-dateutil' in p.pipfile['packages']
+            assert 'python_dateutil' not in p.pipfile['packages']
+
+    @pytest.mark.uninstall
+    @pytest.mark.run
+    def test_pep423_name_uninstall(self, pypi):
+        with PipenvInstance(pypi=pypi) as p:
+            with open(p.pipfile_path, 'w') as f:
+                contents = """
+[packages]
+python_dateutil = "*"
+"""
+                f.write(contents)
+
+            c = p.pipenv('install')
+            assert c.return_code == 0
+
+            c = p.pipenv('uninstall python-dateutil')
+            assert 'python_dateutil' not in p.pipfile['packages']
+            assert 'python-dateutil' not in p.lockfile['default']
+
     @pytest.mark.install
     @pytest.mark.resolver
     @pytest.mark.backup_resolver
