commit bdb16a3e94c83fe49529780adebcac28165ed5d7
Author: Kenneth Reitz <me@kennethreitz.org>
Date:   Fri Sep 29 08:15:10 2017 -0400

    Update README.rst

diff --git a/README.rst b/README.rst
index 85e0ce5e..cc55390a 100644
--- a/README.rst
+++ b/README.rst
@@ -116,42 +116,51 @@ Fish is the best shell. You should use it.
       --where          Output project home information.
       --venv           Output virtualenv information.
       --py             Output Python interpreter information.
+      --envs           Output Environment Variable options.
       --rm             Remove the virtualenv.
       --bare           Minimal output.
+      --completion     Output completion (to be eval'd).
+      --man            Display manpage.
       --three / --two  Use Python 3/2 when creating virtualenv.
       --python TEXT    Specify which version of Python virtualenv should use.
-      -h, --help       Show this message then exit.
-      --jumbotron  An easter egg, effectively.
+      --site-packages  Enable site-packages for the virtualenv.
+      --jumbotron      An easter egg, effectively.
       --version        Show the version and exit.
+      -h, --help       Show this message and exit.
 
 
     Usage Examples:
-       Create a new project using Python 3:
-       $ pipenv --three
-
        Create a new project using Python 3.6, specifically:
        $ pipenv --python 3.6
 
        Install all dependencies for a project (including dev):
        $ pipenv install --dev
 
-       Create a lockfile:
-       $ pipenv lock
+       Create a lockfile containing pre-releases:
+       $ pipenv lock --pre
 
        Show a graph of your installed dependencies:
        $ pipenv graph
 
+       Check your installed dependencies for security vulnerabilties:
+       $ pipenv check
+
+       Install a local setup.py into your virtual environment/Pipfile:
+       $ pipenv install -e .
+
     Commands:
       check      Checks for security vulnerabilities and...
       graph      Displays currentlyâ€“installed dependency graph...
       install    Installs provided packages and adds them to...
       lock       Generates Pipfile.lock.
+      open       View a given module in your editor.
       run        Spawns a command installed into the...
       shell      Spawns a shell within the virtualenv.
       uninstall  Un-installs a provided package and removes it...
       update     Uninstalls all packages, and re-installs...
 
 
+
 Locate the project::
 
     $ pipenv --where
