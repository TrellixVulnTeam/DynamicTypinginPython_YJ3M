commit 6cbd38f46d83d085e1a5096661b8da35312e4f05
Author: Delirious Lettuce <delirious.lettuce@gmail.com>
Date:   Sun Nov 26 23:26:24 2017 -0700

    Fix typos:
      `resursively` | `recursively`
      `additonal` | `additional`
      `occured` | `occurred`
      `vulnerabilties` | `vulnerabilities`
      `gven` | `given`
      `pipenev` | `pipenv`
      `requirments` | `requirements`
      `virtualenvrionment` | `virtualenvironment`
      `envrionment` | `environment`
      `dependecies` | `dependencies`
      `requiments` | `requirements`
      `Seperated` | `Separated`
      `bugifx` | `bugfix`
      `supression` | `suppression`
      `intall` | `install`
      `Suport` | `Support`
      `autocurrections` | `autocorrections`
      `coccurency` | `concurrency`
      `consistient` | `consistent`
      `saftey` | `safety`
      `afer` | `after`
      `configuraable` | `configurable`
      `remporary` | `temporary`
      `depdendencies` | `dependencies`
      `pactched` | `patched`

diff --git a/HISTORY.txt b/HISTORY.txt
index 606c1572..fcca2e33 100644
--- a/HISTORY.txt
+++ b/HISTORY.txt
@@ -1,5 +1,5 @@
- - Prompt user to destroy and recreate virtualenvrionment if they are in a currently activated envrionment.
- - Added enhancement for pip-tools to resolve dependecies with specific versions of python
+ - Prompt user to destroy and recreate virtualenvironment if they are in a currently activated environment.
+ - Added enhancement for pip-tools to resolve dependencies with specific versions of python
  - Fixed bug where newlines were not escaped in .env files when loaded
 8.3.2:
  - Moved automated update check to once every 24 hours. 
@@ -11,14 +11,14 @@
  - Updated vendored delegator.py.         
  - Changed --dev flag for the uninstall command to --all-dev to better represent what it does.
 8.3.0:
- - Add support for installation from remote requiments file.
+ - Add support for installation from remote requirements file.
  - Add --reverse to pipenv graph, displaying inverted dependency graph.
  - VCS dependencies now install sequentially to avoid write lock conflicts.
  - Allow PIPENV_IGNORE_VIRTUALENVS to work with pipenv shell on Windows.
  - Enforce newline termination of Pipfile.
  - More robust requirements.txt conversion experience.
  - Respect allow_prereleases in all locking scenarios.
- - Seperated default and development dependency output when using lock -r and lock -r -d respectively.
+ - Separated default and development dependency output when using lock -r and lock -r -d respectively.
  - Print whole help message with pipenv --help.
 8.2.7:
  - Add update --sequential.
@@ -27,7 +27,7 @@
  - Update vendored setuptools.
  - Improvements to check --unused.
  - Fix install for local sdist packages.
- - Updating the patched pip-tools with the wheel dependency bugifx.
+ - Updating the patched pip-tools with the wheel dependency bugfix.
  - Fix git remote address modified changing underscore to a hyphen.
  - Fix py2toml with dashes (dev-packages)
  - Fix for --dry-run, reporting backwards.
@@ -109,7 +109,7 @@
  - Fix argument parsing.
 7.9.7:
  - Fix help printout screen (and update it).
- - Use urllib3's warning supression directly.
+ - Use urllib3's warning suppression directly.
 7.9.6:
  - Did you mean?
 7.9.5:
@@ -174,17 +174,17 @@
  - Change --two, and --three to use --python 2 and --python 3 under the hood.
  - This restores --two / --three usage on windows.
 7.6.8:
- - `pipenv intall -r requirements.txt --dev` now works.
+ - `pipenv install -r requirements.txt --dev` now works.
 7.6.7:
  - New less-fancy progress bars (for linux users, specifically).
- - Suport --python 3.
+ - Support --python 3.
 7.6.6:
  - Packaging problem.
 7.6.5:
  - Patched vendored 'safety' package to remove yaml dependency — should work on all Pythons now.
 7.6.4:
  - Extensive integration test suite.
- - Don't suggest autocurrections as often.
+ - Don't suggest autocorrections as often.
  - Cleanups.
  - Don't depend on setuptools anymore.
 7.6.3:
@@ -224,13 +224,13 @@
 7.4.4:
  - PIPENV_PIPFILE environment variable support.
  - --site-packages flag, for the crazy at heart.
- - Installation conccurency on Windows.
- - make `graph --json` consistient with `graph`.
+ - Installation concurrency on Windows.
+ - make `graph --json` consistent with `graph`.
  - Much better support for suggesting package names.
  - Updated to pipfile spec 4, support for path= for relative package names.
  - Import sources from requirements files.
  - Cleanup stderr/stdout.
- - 'pipenv check' only reports saftey now for Python 3.
+ - 'pipenv check' only reports safety now for Python 3.
 7.4.3:
  - Download/install things concurrently.
 7.4.2:
@@ -406,7 +406,7 @@
 5.3.3:
  - Automatic notification of version updates.
 5.3.2:
- - Automatic locking afer install/uninstall (because it's fast now!)
+ - Automatic locking after install/uninstall (because it's fast now!)
 5.3.1:
  - Improvements for windows.
 5.3.0:
@@ -511,7 +511,7 @@
  - Removal of $ pipenv install --requirements.
  - Addition of $ pipenv lock -r.
 3.3.2:
- - User-configuraable max-depth for Pipfile searching.
+ - User-configurable max-depth for Pipfile searching.
  - Bugfix.
 3.3.1:
  - Bugfix for install.
@@ -532,11 +532,11 @@
 3.2.10:
  - Fix bugs.
 3.2.9:
- - Remove remporary requirements.txt after installation.
+ - Remove temporary requirements.txt after installation.
  - Add support for --python option, for specifying any version of Python.
  - Read source Pipfile.lock.
 3.2.8:
- - Lock before installing all depdendencies, if lockfile isn't present.
+ - Lock before installing all dependencies, if lockfile isn't present.
 3.2.7:
  - Cache proper names for great speed increases.
 3.2.6:
diff --git a/NOTICES b/NOTICES
index e6475ef8..91070e82 100644
--- a/NOTICES
+++ b/NOTICES
@@ -1,3 +1,3 @@
-The contents of the vendor and pactched directories are subject to different licenses
+The contents of the vendor and patched directories are subject to different licenses
 than the rest of this project. Their respective licenses can be looked
 up at pypi.python.org.
diff --git a/README.rst b/README.rst
index a756b194..adcf7ae3 100644
--- a/README.rst
+++ b/README.rst
@@ -151,7 +151,7 @@ Fish is the best shell. You should use it.
        Show a graph of your installed dependencies:
        $ pipenv graph
 
-       Check your installed dependencies for security vulnerabilties:
+       Check your installed dependencies for security vulnerabilities:
        $ pipenv check
 
        Install a local setup.py into your virtual environment/Pipfile:
diff --git a/docs/advanced.rst b/docs/advanced.rst
index 83ee9184..7e292038 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -284,7 +284,7 @@ will detect it.
 
     - ``PIPENV_NOSPIN`` — Disable terminal spinner, for cleaner logs. Automatically set in CI environments.
 
-    - ``PIPENV_MAX_DEPTH`` — Set to an integer for the maximum number of directories to resursively
+    - ``PIPENV_MAX_DEPTH`` — Set to an integer for the maximum number of directories to recursively
       search for a Pipfile.
 
     - ``PIPENV_TIMEOUT`` — Set to an integer for the max number of seconds Pipenv will
diff --git a/docs/basics.rst b/docs/basics.rst
index 064dbf82..22fdc708 100644
--- a/docs/basics.rst
+++ b/docs/basics.rst
@@ -270,7 +270,7 @@ $ pipenv uninstall
 //////////////////
 
 ``$ pipenv uninstall`` supports all of the parameters in `pipenv install <#pipenv-install>`_,
-as well as two additonal options, ``--all`` and ``--all-dev``.
+as well as two additional options, ``--all`` and ``--all-dev``.
 
     - ``--all`` — This parameter will purge all files from the virtual environment,
       but leave the Pipfile untouched.
diff --git a/pipenv/cli.py b/pipenv/cli.py
index 0c1b2397..cc0fe855 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -1171,7 +1171,7 @@ def do_lock(verbose=False, system=False, clear=False, pre=False):
     try:
         lockfile['_meta']['host-environment-markers'] = simplejson.loads(c.out)
     except ValueError:
-        click.echo(crayons.red("An unexpected error occured while accessing your virtualenv's python installation!"))
+        click.echo(crayons.red("An unexpected error occurred while accessing your virtualenv's python installation!"))
         click.echo('Please run $ {0} to re-create your environment.'.format(crayons.red('pipenv --rm')))
         sys.exit(1)
 
@@ -1544,7 +1544,7 @@ Usage Examples:
    Show a graph of your installed dependencies:
    $ {4}
 
-   Check your installed dependencies for security vulnerabilties:
+   Check your installed dependencies for security vulnerabilities:
    $ {7}
 
    Install a local setup.py into your virtual environment/Pipfile:
diff --git a/pipenv/project.py b/pipenv/project.py
index 5cfd1321..cd047875 100644
--- a/pipenv/project.py
+++ b/pipenv/project.py
@@ -59,7 +59,7 @@ class Project(object):
         for k, v in self.parsed_pipfile.get(package_section, {}).items():
             # Skip editable VCS deps.
             if hasattr(v, 'keys'):
-                # When a vcs url is gven without editable it only appears as a key
+                # When a vcs url is given without editable it only appears as a key
                 if is_vcs(v) or is_vcs(k):
                     # Non-editable VCS entries can't be resolved by piptools
                     if 'editable' not in v:
@@ -182,7 +182,7 @@ class Project(object):
     @property
     def proper_names_location(self):
         if self._proper_names_location is None:
-            loc = os.sep.join([self.virtualenv_location, 'pipenev-proper-names.txt'])
+            loc = os.sep.join([self.virtualenv_location, 'pipenv-proper-names.txt'])
             self._proper_names_location = loc
 
         # Create the database, if it doesn't exist.
diff --git a/tests/test_pipenv.py b/tests/test_pipenv.py
index 453dc66d..70f292e1 100644
--- a/tests/test_pipenv.py
+++ b/tests/test_pipenv.py
@@ -894,7 +894,7 @@ requests = "==2.14.0"
     @pytest.mark.install
     @pytest.mark.files
     @pytest.mark.urls
-    def test_install_remote_requirments(self):
+    def test_install_remote_requirements(self):
         with PipenvInstance() as p:
             # using a github hosted requirements.txt file
             c = p.pipenv('install -r https://raw.githubusercontent.com/kennethreitz/pipenv/3688148ac7cfecefb085c474b092c31d791952c1/tests/test_artifacts/requirements.txt')
