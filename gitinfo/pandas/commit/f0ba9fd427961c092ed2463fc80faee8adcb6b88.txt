commit f0ba9fd427961c092ed2463fc80faee8adcb6b88
Author: Evan Wright <evanpw@gmail.com>
Date:   Sun Mar 29 10:38:55 2015 -0400

    Include _maybe_cast into _maybe_upcast_putmask inline, and fix Series.where test for Windows

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 2774edb6e..ec805aba3 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -1081,26 +1081,6 @@ def _infer_dtype_from_scalar(val):
     return dtype, val
 
 
-def _maybe_cast(dtype, value):
-    """
-    If `dtype` is date-like, then:
-        if `value` == nan, then convert to NaT
-        if `value` is an integer or integer array, convert to `dtype`
-    """
-    if dtype in _DATELIKE_DTYPES:
-        if np.isscalar(value):
-            if isnull(value):
-                return tslib.iNaT
-            elif is_integer(value):
-                return np.array(value, dtype=dtype)
-
-        elif isinstance(value, np.ndarray):
-            if issubclass(dtype.type, np.integer):
-                return np.array(value, dtype=dtype)
-
-    return value
-
-
 def _maybe_promote(dtype, fill_value=np.nan):
 
     # if we passed an array here, determine the fill value by dtype
@@ -1186,8 +1166,18 @@ def _maybe_upcast_putmask(result, mask, other):
     """
 
     if mask.any():
-
-        other = _maybe_cast(result.dtype, other)
+        # Two conversions for date-like dtypes that can't be done automatically
+        # in np.place:
+        #   NaN -> NaT
+        #   integer or integer array -> date-like array
+        if result.dtype in _DATELIKE_DTYPES:
+            if lib.isscalar(other):
+                if isnull(other):
+                    other = tslib.iNaT
+                elif is_integer(other):
+                    other = np.array(other, dtype=result.dtype)
+            elif is_integer_dtype(other):
+                other = np.array(other, dtype=result.dtype)
 
         def changeit():
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 80996950a..e140ffd97 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1689,7 +1689,7 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
             self.assertEqual(s.dtype, expected.dtype)
 
         # GH 9731
-        s = Series(np.arange(10))
+        s = Series(np.arange(10), dtype='int64')
         mask = s > 5
         values = [2.5, 3.5, 4.5, 5.5]
         s[mask] = values
