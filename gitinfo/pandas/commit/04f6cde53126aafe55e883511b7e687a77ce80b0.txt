commit 04f6cde53126aafe55e883511b7e687a77ce80b0
Author: Nicolas Bonnotte <nbonnotte@users.noreply.github.com>
Date:   Sun Oct 2 13:56:58 2016 +0200

    to_latex encoding follows the documentation (py2 ascii, py3 utf8) (#14329)
    
    * to_latex: encoding default follows the documentation (py2 ascii, py3 utf8)
    
    * Adapt tests: codecs.open with explicit encoding parameter

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 1cc689528..6fb0090de 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1635,7 +1635,8 @@ class DataFrame(NDFrame):
             When set to False prevents from escaping latex special
             characters in column names.
         encoding : str, default None
-            Default encoding is ascii in Python 2 and utf-8 in Python 3
+            A string representing the encoding to use in the output file,
+            defaults to 'ascii' on Python 2 and 'utf-8' on Python 3.
         decimal : string, default '.'
             Character recognized as decimal separator, e.g. ',' in Europe
 
diff --git a/pandas/formats/format.py b/pandas/formats/format.py
index e5089983a..770666614 100644
--- a/pandas/formats/format.py
+++ b/pandas/formats/format.py
@@ -654,6 +654,9 @@ class DataFrameFormatter(TableFormatter):
         latex_renderer = LatexFormatter(self, column_format=column_format,
                                         longtable=longtable)
 
+        if encoding is None:
+            encoding = 'ascii' if compat.PY2 else 'utf-8'
+
         if hasattr(self.buf, 'write'):
             latex_renderer.write_result(self.buf)
         elif isinstance(self.buf, compat.string_types):
diff --git a/pandas/tests/formats/test_format.py b/pandas/tests/formats/test_format.py
index 58e9b30e7..3bbfd621d 100644
--- a/pandas/tests/formats/test_format.py
+++ b/pandas/tests/formats/test_format.py
@@ -2823,7 +2823,7 @@ c  10  11  12  13  14\
         if compat.PY3:  # python3: pandas default encoding is utf-8
             with tm.ensure_clean('test.tex') as path:
                 df.to_latex(path)
-                with codecs.open(path, 'r') as f:
+                with codecs.open(path, 'r', encoding='utf-8') as f:
                     self.assertEqual(df.to_latex(), f.read())
         else:
             # python2 default encoding is ascii, so an error should be raised
