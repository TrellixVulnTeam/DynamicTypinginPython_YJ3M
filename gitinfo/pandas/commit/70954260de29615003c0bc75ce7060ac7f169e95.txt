commit 70954260de29615003c0bc75ce7060ac7f169e95
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu Jul 12 11:42:56 2012 -0400

    DOC: additional note on complex date parsing in read_*

diff --git a/doc/source/gotchas.rst b/doc/source/gotchas.rst
index a86c2b405..941fb6707 100644
--- a/doc/source/gotchas.rst
+++ b/doc/source/gotchas.rst
@@ -4,6 +4,7 @@
 .. ipython:: python
    :suppress:
 
+   import os
    import numpy as np
    from pandas import *
    randn = np.random.randn
@@ -260,3 +261,44 @@ PeriodIndex:
 
    span = period_range('1215-01-01', '1381-01-01', freq='D')
    span
+
+
+Parsing Dates from Text Files
+-----------------------------
+
+When parsing multiple text file columns into a single date column, the new date
+column is prepended to the data and then `index_col` specification is indexed off
+of the new set of columns rather than the original ones:
+
+.. ipython:: python
+   :suppress:
+
+   data =  ("KORD,19990127, 19:00:00, 18:56:00, 0.8100\n"
+            "KORD,19990127, 20:00:00, 19:56:00, 0.0100\n"
+            "KORD,19990127, 21:00:00, 20:56:00, -0.5900\n"
+            "KORD,19990127, 21:00:00, 21:18:00, -0.9900\n"
+            "KORD,19990127, 22:00:00, 21:56:00, -0.5900\n"
+            "KORD,19990127, 23:00:00, 22:56:00, -0.5900")
+
+   with open('tmp.csv', 'w') as fh:
+       fh.write(data)
+
+.. ipython:: python
+
+   print open('tmp.csv').read()
+
+   date_spec = {'nominal': [1, 2], 'actual': [1, 3]}
+   df = read_csv('tmp.csv', header=None,
+                 parse_dates=date_spec,
+                 keep_date_col=True,
+                 index_col=0)
+
+   # index_col=0 refers to the combined column "nominal" and not the original
+   # first column of 'KORD' strings
+
+   df
+
+.. ipython:: python
+   :suppress:
+
+   os.remove('tmp.csv')
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 8c67b7d96..281f9f604 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -273,6 +273,19 @@ You can also use a dict to specify custom name columns:
    df = read_csv('tmp.csv', header=None, parse_dates=date_spec)
    df
 
+It is important to remember that if multiple text columns are to be parsed into
+a single date column, then a new column is prepended to the data. The `index_col`
+specification is based off of this new set of columns rather than the original
+data columns:
+
+
+.. ipython:: python
+
+   date_spec = {'nominal': [1, 2], 'actual': [1, 3]}
+   df = read_csv('tmp.csv', header=None, parse_dates=date_spec,
+                 index_col=0) #index is the nominal column
+   df
+
 Date Parsing Functions
 ~~~~~~~~~~~~~~~~~~~~~~
 Finally, the parser allows you can specify a custom ``date_parser`` function to
