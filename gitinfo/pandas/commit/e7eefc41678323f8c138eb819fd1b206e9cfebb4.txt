commit e7eefc41678323f8c138eb819fd1b206e9cfebb4
Author: tomrod <thomas.roderick@gmail.com>
Date:   Mon Jan 9 13:27:54 2017 -0500

    ERR: Clarified error in read_sas method when buffer object provided without a format
    
    Author: tomrod <thomas.roderick@gmail.com>
    
    Closes #14947 from tomrod/sas_read_format_bugfix and squashes the following commits:
    
    1285dbb [tomrod] flake8 testing
    4cf9231 [tomrod] PEP8 compliance
    ab76d80 [tomrod] Updating to match pep8 whitespace requirements in sasreader.py
    ffdce1d [tomrod] Updating to match pep8 as per @jorisvandenbossche
    aa1ada3 [tomrod] More specific error message, moved imports to top of files
    bf60d23 [tomrod] Adding tests, creating updated information
    5efdb85 [tomrod] Adding tests
    f8166fc [tomrod] Updated based on feedback from jreback
    b52f204 [tomrod] Clarified error in read_sas method when buffer object provided without format

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 0148a4706..8b6b765a8 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -282,6 +282,7 @@ Performance Improvements
 - Improved performance of ``pd.wide_to_long()`` (:issue:`14779`)
 - Increased performance of ``pd.factorize()`` by releasing the GIL with ``object`` dtype when inferred as strings (:issue:`14859`)
 
+- When reading buffer object in ``read_sas()`` method without specified format, filepath string is inferred rather than buffer object.
 
 
 .. _whatsnew_0200.bug_fixes:
diff --git a/pandas/io/sas/sasreader.py b/pandas/io/sas/sasreader.py
index 081d780f7..29e7f131f 100644
--- a/pandas/io/sas/sasreader.py
+++ b/pandas/io/sas/sasreader.py
@@ -1,10 +1,12 @@
 """
 Read SAS sas7bdat or xport files.
 """
+from pandas import compat
 
 
 def read_sas(filepath_or_buffer, format=None, index=None, encoding=None,
              chunksize=None, iterator=False):
+
     """
     Read SAS files stored as either XPORT or SAS7BDAT format files.
 
@@ -29,8 +31,12 @@ def read_sas(filepath_or_buffer, format=None, index=None, encoding=None,
     DataFrame if iterator=False and chunksize=None, else SAS7BDATReader
     or XportReader
     """
-
     if format is None:
+        buffer_error_msg = ("If this is a buffer object rather "
+                            "than a string name, you must specify "
+                            "a format string")
+        if not isinstance(filepath_or_buffer, compat.string_types):
+            raise ValueError(buffer_error_msg)
         try:
             fname = filepath_or_buffer.lower()
             if fname.endswith(".xpt"):
diff --git a/pandas/io/tests/sas/test_sas.py b/pandas/io/tests/sas/test_sas.py
new file mode 100644
index 000000000..237e3676c
--- /dev/null
+++ b/pandas/io/tests/sas/test_sas.py
@@ -0,0 +1,13 @@
+import pandas.util.testing as tm
+from pandas.compat import StringIO
+from pandas import read_sas
+
+
+class TestSas(tm.TestCase):
+
+    def test_sas_buffer_format(self):
+
+        # GH14947
+        b = StringIO("")
+        with self.assertRaises(ValueError):
+            read_sas(b)
