commit 38a34be9108fc76b68e57860506f428d8d67e002
Author: Kernc <kerncece@gmail.com>
Date:   Tue Mar 7 08:27:38 2017 -0500

    BUG: repr SparseDataFrame after setting a value
    
    closes #15488
    
    Author: Kernc <kerncece@gmail.com>
    
    Closes #15489 from kernc/sdf-repr and squashes the following commits:
    
    2dc145c [Kernc] BUG: repr SparseDataFrame after setting a value

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index f1df8f456..e459c854d 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -698,7 +698,7 @@ Bug Fixes
 
 - Bug in ``to_sql`` when writing a DataFrame with numeric index names (:issue:`15404`).
 - Bug in ``Series.iloc`` where a ``Categorical`` object for list-like indexes input was returned, where a ``Series`` was expected. (:issue:`14580`)
-
+- Bug in repr-formatting a ``SparseDataFrame`` after a value was set on (a copy of) one of its series (:issue:`15488`)
 
 
 - Bug in  groupby operations with timedelta64 when passing ``numeric_only=False`` (:issue:`5724`)
diff --git a/pandas/formats/format.py b/pandas/formats/format.py
index 9dde3b000..622c4cd3b 100644
--- a/pandas/formats/format.py
+++ b/pandas/formats/format.py
@@ -716,9 +716,6 @@ class DataFrameFormatter(TableFormatter):
     def _get_formatted_column_labels(self, frame):
         from pandas.core.index import _sparsify
 
-        def is_numeric_dtype(dtype):
-            return issubclass(dtype.type, np.number)
-
         columns = frame.columns
 
         if isinstance(columns, MultiIndex):
diff --git a/pandas/tests/sparse/test_format.py b/pandas/tests/sparse/test_format.py
index 0c0e773d1..ba870a2c3 100644
--- a/pandas/tests/sparse/test_format.py
+++ b/pandas/tests/sparse/test_format.py
@@ -116,3 +116,15 @@ class TestSparseDataFrameFormatting(tm.TestCase):
 
         with option_context("display.max_rows", 3):
             self.assertEqual(repr(sparse), repr(df))
+
+    def test_sparse_repr_after_set(self):
+        # GH 15488
+        sdf = pd.SparseDataFrame([[np.nan, 1], [2, np.nan]])
+        res = sdf.copy()
+
+        # Ignore the warning
+        with pd.option_context('mode.chained_assignment', None):
+            sdf[0][1] = 2  # This line triggers the bug
+
+        repr(sdf)
+        tm.assert_sp_frame_equal(sdf, res)
