commit be86b6583f97a49ded14bdd4290ccf721bf1f645
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Apr 10 09:18:06 2020 -0700

    CLN: remove unnecessary Series._convert calls (#32949)

diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 085d037c1..eb6554bf2 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -5709,7 +5709,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         numeric: bool_t = False,
         timedelta: bool_t = False,
         coerce: bool_t = False,
-        copy: bool_t = True,
     ) -> FrameOrSeries:
         """
         Attempt to infer better dtype for object columns
@@ -5726,10 +5725,6 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         coerce : bool, default False
             If True, force conversion with unconvertible values converted to
             nulls (NaN or NaT).
-        copy : bool, default True
-            If True, return a copy even if no copy is necessary (e.g. no
-            conversion was done). Note: This is meant for internal use, and
-            should not be confused with inplace.
 
         Returns
         -------
@@ -5739,14 +5734,13 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         validate_bool_kwarg(numeric, "numeric")
         validate_bool_kwarg(timedelta, "timedelta")
         validate_bool_kwarg(coerce, "coerce")
-        validate_bool_kwarg(copy, "copy")
         return self._constructor(
             self._mgr.convert(
                 datetime=datetime,
                 numeric=numeric,
                 timedelta=timedelta,
                 coerce=coerce,
-                copy=copy,
+                copy=True,
             )
         ).__finalize__(self)
 
diff --git a/pandas/core/groupby/generic.py b/pandas/core/groupby/generic.py
index 208cbfc5b..59de03624 100644
--- a/pandas/core/groupby/generic.py
+++ b/pandas/core/groupby/generic.py
@@ -29,7 +29,7 @@ import warnings
 
 import numpy as np
 
-from pandas._libs import Timestamp, lib
+from pandas._libs import lib
 from pandas._typing import FrameOrSeries
 from pandas.util._decorators import Appender, Substitution, doc
 
@@ -388,7 +388,7 @@ class SeriesGroupBy(GroupBy[Series]):
         result = self._wrap_series_output(
             output=output, index=self.grouper.result_index
         )
-        return self._reindex_output(result)._convert(datetime=True)
+        return self._reindex_output(result)
 
     def _wrap_transformed_output(
         self, output: Mapping[base.OutputKey, Union[Series, np.ndarray]]
@@ -1346,14 +1346,10 @@ class DataFrameGroupBy(GroupBy[DataFrame]):
 
             # values are not series or array-like but scalars
             else:
-                # only coerce dates if we find at least 1 datetime
-                should_coerce = any(isinstance(x, Timestamp) for x in values)
                 # self._selection_name not passed through to Series as the
                 # result should not take the name of original selection
                 # of columns
-                return Series(values, index=key_index)._convert(
-                    datetime=True, coerce=should_coerce
-                )
+                return Series(values, index=key_index)
 
         else:
             # Handle cases like BinGrouper
@@ -1703,7 +1699,7 @@ class DataFrameGroupBy(GroupBy[DataFrame]):
         if self.axis == 1:
             result = result.T
 
-        return self._reindex_output(result)._convert(datetime=True)
+        return self._reindex_output(result)
 
     def _wrap_transformed_output(
         self, output: Mapping[base.OutputKey, Union[Series, np.ndarray]]
