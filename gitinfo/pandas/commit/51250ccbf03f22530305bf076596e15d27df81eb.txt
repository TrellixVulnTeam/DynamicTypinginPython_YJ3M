commit 51250ccbf03f22530305bf076596e15d27df81eb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Apr 12 21:45:34 2012 -0400

    ENH: add to_datetime method to Index, close #208

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 69315e548..bd9701782 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -110,6 +110,13 @@ class Index(np.ndarray):
         return Index(self.values.astype(dtype), name=self.name,
                      dtype=dtype)
 
+    def to_datetime(self):
+        """
+        For an Index containing strings or datetime.datetime objects, attempt
+        conversion to DatetimeIndex
+        """
+        return DatetimeIndex(self.values)
+
     @property
     def dtype(self):
         return self.values.dtype
@@ -1397,7 +1404,7 @@ class DatetimeIndex(Int64Index):
     def __repr__(self):
         if self.offset is not None:
             output = str(self.__class__) + '\n'
-            output += 'offset: %s, timezone: %s\n' % (self.offset, self.tz)
+            output += 'freq: %s, timezone: %s\n' % (self.offset, self.tz)
             if len(self) > 0:
                 output += '[%s, ..., %s]\n' % (self[0], self[-1])
             output += 'length: %d' % len(self)
diff --git a/pandas/tests/test_timeseries.py b/pandas/tests/test_timeseries.py
index f311cc0cd..02490d0e2 100644
--- a/pandas/tests/test_timeseries.py
+++ b/pandas/tests/test_timeseries.py
@@ -376,7 +376,12 @@ class TestTimeSeries(unittest.TestCase):
         assert_series_equal(dresult, expected)
         self.assertEquals(dresult.name, 'foo')
 
+    def test_index_to_datetime(self):
+        idx = Index(['1/1/2000', '1/2/2000', '1/3/2000'])
 
+        result = idx.to_datetime()
+        expected = DatetimeIndex(datetools.to_datetime(idx.values))
+        self.assert_(result.equals(expected))
 
 def _skip_if_no_pytz():
     try:
