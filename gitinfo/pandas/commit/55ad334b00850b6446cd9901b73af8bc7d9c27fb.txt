commit 55ad334b00850b6446cd9901b73af8bc7d9c27fb
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri May 22 19:15:05 2020 -0700

    REF: make BusinessMixin a cdef class (#34285)
    
    * REF: make BusinessMixin a cdef class
    
    * REF: Make BusinessMixin a cdef class

diff --git a/pandas/_libs/tslibs/offsets.pyx b/pandas/_libs/tslibs/offsets.pyx
index dce6d01e3..e872d1683 100644
--- a/pandas/_libs/tslibs/offsets.pyx
+++ b/pandas/_libs/tslibs/offsets.pyx
@@ -988,13 +988,17 @@ def delta_to_tick(delta: timedelta) -> Tick:
 # --------------------------------------------------------------------
 
 
-class BusinessMixin(SingleConstructorOffset):
+cdef class BusinessMixin(SingleConstructorOffset):
     """
     Mixin to business types to provide related functions.
     """
+
+    cdef readonly:
+        timedelta _offset
+
     def __init__(self, n=1, normalize=False, offset=timedelta(0)):
         BaseOffset.__init__(self, n, normalize)
-        object.__setattr__(self, "_offset", offset)
+        self._offset = offset
 
     @property
     def offset(self):
@@ -1014,6 +1018,11 @@ class BusinessMixin(SingleConstructorOffset):
             out += ": " + ", ".join(attrs)
         return out
 
+    cpdef __setstate__(self, state):
+        # We need to use a cdef/cpdef method to set the readonly _offset attribute
+        BaseOffset.__setstate__(self, state)
+        self._offset = state["_offset"]
+
 
 class BusinessHourMixin(BusinessMixin):
     _adjust_dst = False
@@ -1067,6 +1076,9 @@ class BusinessHourMixin(BusinessMixin):
         object.__setattr__(self, "start", start)
         object.__setattr__(self, "end", end)
 
+    def __reduce__(self):
+        return type(self), (self.n, self.normalize, self.start, self.end, self.offset)
+
     def _repr_attrs(self) -> str:
         out = super()._repr_attrs()
         hours = ",".join(
diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index a36950b27..1163a43f7 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -869,6 +869,13 @@ class _CustomBusinessMonth(CustomMixin, BusinessMixin, liboffsets.MonthOffset):
         BusinessMixin.__init__(self, n, normalize, offset)
         CustomMixin.__init__(self, weekmask, holidays, calendar)
 
+    def __reduce__(self):
+        # None for self.calendar bc np.busdaycalendar doesnt pickle nicely
+        return (
+            type(self),
+            (self.n, self.normalize, self.weekmask, self.holidays, None, self.offset),
+        )
+
     @cache_readonly
     def cbday_roll(self):
         """
