commit af0bd8f0d4ea6cc50769ad85507f3ed3d0dfb49a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Dec 24 16:37:01 2011 -0500

    BUG: raise Exception when calling Series.sort on an array view, GH #316

diff --git a/RELEASE.rst b/RELEASE.rst
index 2b2893b9d..b2c41aa95 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -31,6 +31,9 @@ pandas 0.6.2
 
   - Rename ``DataFrame.delevel`` to ``DataFrame.reset_index`` and add
     deprecation warning
+  - `Series.sort` (an in-place operation) called on a Series which is a view on
+    a larger array (e.g. a column in a DataFrame) will generate an Exception to
+    prevent accidentally modifying the data source (GH #316)
 
 **New features / modules**
 
@@ -92,6 +95,7 @@ Thanks
 - Andreas Hilboll
 - Adam Klein
 - Matt Harrison
+- Arthur Gerigk
 - Gregg Lind
 - Solomon Negusse
 - Wouter Overmeire
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 2310e98d7..9273c6499 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1189,9 +1189,14 @@ copy : boolean, default False
         """
         sortedSeries = self.order(na_last=True)
 
-        # if not self.flags.owndata:
-        #     raise Exception('This Series is a view of some other array, to '
-        #                     'sort in-place you must create a copy')
+        true_base = self
+        while true_base.base is not None:
+            true_base = true_base.base
+
+        if (true_base is not None and
+            (true_base.ndim != 1 or true_base.shape != self.shape)):
+            raise Exception('This Series is a view of some other array, to '
+                            'sort in-place you must create a copy')
 
         self[:] = sortedSeries
         self.index = sortedSeries.index
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index d068c2454..78d932ad8 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3202,11 +3202,12 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = frame.take(indexer)
         assert_frame_equal(result, expected)
 
-    # punting on trying to fix this for now
-    # def test_frame_column_inplace_sort_exception(self):
-    #     s = self.frame['A']
-    #     self.assert_(not s.flags.owndata)
-    #     self.assertRaises(Exception, s.sort)
+    def test_frame_column_inplace_sort_exception(self):
+        s = self.frame['A']
+        self.assertRaises(Exception, s.sort)
+
+        cp = s.copy()
+        cp.sort() # it works!
 
     def test_combine_first(self):
         # disjoint
