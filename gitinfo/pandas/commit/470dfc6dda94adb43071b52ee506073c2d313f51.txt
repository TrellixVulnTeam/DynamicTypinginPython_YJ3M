commit 470dfc6dda94adb43071b52ee506073c2d313f51
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Mon May 25 00:38:50 2020 -0700

    CLN: always pass op to combine_series_frame (#34347)

diff --git a/pandas/core/ops/__init__.py b/pandas/core/ops/__init__.py
index 66b71687f..856a18233 100644
--- a/pandas/core/ops/__init__.py
+++ b/pandas/core/ops/__init__.py
@@ -641,7 +641,6 @@ def _arith_method_FRAME(cls: Type["DataFrame"], op, special: bool):
     default_axis = _get_frame_op_default_axis(op_name)
 
     na_op = get_array_op(op)
-    is_logical = op.__name__.strip("_").lstrip("_") in ["and", "or", "xor"]
 
     if op_name in _op_descriptions:
         # i.e. include "add" but not "__add__"
@@ -666,18 +665,11 @@ def _arith_method_FRAME(cls: Type["DataFrame"], op, special: bool):
             new_data = self._combine_frame(other, na_op, fill_value)
 
         elif isinstance(other, ABCSeries):
-            # For these values of `axis`, we end up dispatching to Series op,
-            # so do not want the masked op.
-            # TODO: the above comment is no longer accurate since we now
-            #  operate blockwise if other._values is an ndarray
-            pass_op = op if axis in [0, "columns", None] else na_op
-            pass_op = pass_op if not is_logical else op
-
             if fill_value is not None:
                 raise NotImplementedError(f"fill_value {fill_value} not supported.")
 
             axis = self._get_axis_number(axis) if axis is not None else 1
-            new_data = _combine_series_frame(self, other, pass_op, axis=axis)
+            new_data = _combine_series_frame(self, other, op, axis=axis)
         else:
             # in this case we always have `np.ndim(other) == 0`
             if fill_value is not None:
