commit 3c1cc3504caa08d1105a67690be196002c5f8dae
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 28 12:46:26 2012 -0400

    ENH: mix arrays and scalars in DataFrame constructor, close #1329

diff --git a/RELEASE.rst b/RELEASE.rst
index e10c51ab1..9bd99b5d7 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -76,6 +76,7 @@ pandas 0.8.0
   - Add inplace option to Series/DataFrame.rename and sort_index,
     DataFrame.drop_duplicates (#805, #207)
   - More helpful error message when nothing passed to Series.reindex (#1267)
+  - Can mix array and scalars as dict-value inputs to DataFrame ctor (#1329)
 
 **API Changes**
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index df3387cc3..227b926f5 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -4537,10 +4537,13 @@ def extract_index(data):
             elif isinstance(v, dict):
                 have_dicts = True
                 indexes.append(v.keys())
-            else:
+            elif isinstance(v, (list, np.ndarray)):
                 have_raw_arrays = True
                 raw_lengths.append(len(v))
 
+        if not indexes and not raw_lengths:
+            raise ValueError('If use all scalar values, must pass index')
+
         if have_series or have_dicts:
             index = _union_indexes(indexes)
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index e5d964b32..3168e3e7f 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1739,6 +1739,14 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assert_(df['complex'].dtype == np.complex128)
         self.assert_(df['object'].dtype == np.object_)
 
+    def test_constructor_arrays_and_scalars(self):
+        df = DataFrame({'a': randn(10), 'b': True})
+        exp = DataFrame({'a': df['a'].values, 'b': [True] * 10})
+
+        assert_frame_equal(df, exp)
+
+        self.assertRaises(ValueError, DataFrame, {'a': False, 'b': True})
+
     def test_constructor_DataFrame(self):
         df = DataFrame(self.frame)
         assert_frame_equal(df, self.frame)
