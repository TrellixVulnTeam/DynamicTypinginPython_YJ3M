commit a189d5d0775e46cb8fc2a68955c85e499ed04e6c
Author: jreback <jeff@reback.net>
Date:   Tue Apr 22 18:24:05 2014 -0400

    CLN: failing test on 2.6/windows re GH6866, CustomBusinessMonth

diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index 0c8d3c716..1b8b82235 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -1,4 +1,3 @@
-import sys
 from datetime import date, datetime, timedelta
 from pandas.compat import range
 from pandas import compat
@@ -306,17 +305,8 @@ class SingleConstructorOffset(DateOffset):
         return cls()
 
 
-class BusinessDay(SingleConstructorOffset):
-    """
-    DateOffset subclass representing possibly n business days
-    """
-    _prefix = 'B'
-
-    def __init__(self, n=1, **kwds):
-        self.n = int(n)
-        self.kwds = kwds
-        self.offset = kwds.get('offset', timedelta(0))
-        self.normalize = kwds.get('normalize', False)
+class BusinessMixin(object):
+    """ mixin to business types to provide related functions """
 
     # TODO: Combine this with DateOffset by defining a whitelisted set of
     # attributes on each object rather than the existing behavior of iterating
@@ -345,6 +335,18 @@ class BusinessDay(SingleConstructorOffset):
         out += '>'
         return out
 
+class BusinessDay(BusinessMixin, SingleConstructorOffset):
+    """
+    DateOffset subclass representing possibly n business days
+    """
+    _prefix = 'B'
+
+    def __init__(self, n=1, **kwds):
+        self.n = int(n)
+        self.kwds = kwds
+        self.offset = kwds.get('offset', timedelta(0))
+        self.normalize = kwds.get('normalize', False)
+
     @property
     def freqstr(self):
         try:
@@ -706,7 +708,7 @@ class BusinessMonthBegin(MonthOffset):
 
 
 
-class CustomBusinessMonthEnd(MonthOffset):
+class CustomBusinessMonthEnd(BusinessMixin, MonthOffset):
     """
     **EXPERIMENTAL** DateOffset of one custom business month
 
@@ -736,7 +738,6 @@ class CustomBusinessMonthEnd(MonthOffset):
         self.offset = kwds.get('offset', timedelta(0))
         self.normalize = kwds.get('normalize', False)
         self.weekmask = kwds.get('weekmask', 'Mon Tue Wed Thu Fri')
-        holidays = kwds.get('holidays', [])
         self.cbday = CustomBusinessDay(n=self.n,**kwds)
         self.m_offset = MonthEnd()
 
@@ -762,13 +763,7 @@ class CustomBusinessMonthEnd(MonthOffset):
         result = self.cbday.rollback(new)
         return as_timestamp(result)
         
-    def __repr__(self):
-        if sys.version_info.major < 3:
-            return BusinessDay.__repr__.__func__(self)
-        else:
-            return BusinessDay.__repr__(self)
-
-class CustomBusinessMonthBegin(MonthOffset):
+class CustomBusinessMonthBegin(BusinessMixin, MonthOffset):
     """
     **EXPERIMENTAL** DateOffset of one custom business month
 
@@ -798,7 +793,6 @@ class CustomBusinessMonthBegin(MonthOffset):
         self.offset = kwds.get('offset', timedelta(0))
         self.normalize = kwds.get('normalize', False)
         self.weekmask = kwds.get('weekmask', 'Mon Tue Wed Thu Fri')
-        holidays = kwds.get('holidays', [])
         self.cbday = CustomBusinessDay(n=self.n,**kwds)
         self.m_offset = MonthBegin()
 
@@ -824,13 +818,6 @@ class CustomBusinessMonthBegin(MonthOffset):
         result = self.cbday.rollforward(new)
         return as_timestamp(result)
 
-        
-    def __repr__(self):
-        if sys.version_info.major < 3:
-            return BusinessDay.__repr__.__func__(self)
-        else:
-            return BusinessDay.__repr__(self)
-
 class Week(DateOffset):
     """
     Weekly offset
