commit b2aeaf14ccbf3105ff35bb293d08fac4573d964c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Sep 28 16:31:08 2011 -0400

    STY: got rid of superfluous autogen docs

diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index cd1439eb3..346352422 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -106,35 +106,36 @@ def merge_indexer_%(name)s(ndarray[%(c_type)s] values, dict oldMap):
 
 """
 
+'''
+Backfilling logic for generating fill vector
+
+Diagram of what's going on
+
+Old      New    Fill vector    Mask
+         .        0               1
+         .        0               1
+         .        0               1
+A        A        0               1
+         .        1               1
+         .        1               1
+         .        1               1
+         .        1               1
+         .        1               1
+B        B        1               1
+         .        2               1
+         .        2               1
+         .        2               1
+C        C        2               1
+         .                        0
+         .                        0
+D
+'''
+
 backfill_template = """@cython.boundscheck(False)
 @cython.wraparound(False)
 def backfill_%(name)s(ndarray[%(c_type)s] oldIndex,
                       ndarray[%(c_type)s] newIndex,
                       dict oldMap, dict newMap):
-    '''
-    Backfilling logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .        0               1
-             .        0               1
-             .        0               1
-    A        A        0               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    B        B        1               1
-             .        2               1
-             .        2               1
-             .        2               1
-    C        C        2               1
-             .                        0
-             .                        0
-    D
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -181,32 +182,34 @@ def backfill_%(name)s(ndarray[%(c_type)s] oldIndex,
 
 """
 
+'''
+Padding logic for generating fill vector
+
+Diagram of what's going on
+
+Old      New    Fill vector    Mask
+         .                        0
+         .                        0
+         .                        0
+A        A        0               1
+         .        0               1
+         .        0               1
+         .        0               1
+         .        0               1
+         .        0               1
+B        B        1               1
+         .        1               1
+         .        1               1
+         .        1               1
+C        C        2               1
+'''
+
+
 pad_template = """@cython.boundscheck(False)
 @cython.wraparound(False)
 def pad_%(name)s(ndarray[%(c_type)s] oldIndex,
                  ndarray[%(c_type)s] newIndex,
                  dict oldMap, dict newMap):
-    '''
-    Padding logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .                        0
-             .                        0
-             .                        0
-    A        A        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-    B        B        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    C        C        2               1
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index f35a11fc2..ddb6e5191 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -205,27 +205,6 @@ def merge_indexer_bool(ndarray[uint8_t] values, dict oldMap):
 def pad_float64(ndarray[float64_t] oldIndex,
                  ndarray[float64_t] newIndex,
                  dict oldMap, dict newMap):
-    '''
-    Padding logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .                        0
-             .                        0
-             .                        0
-    A        A        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-    B        B        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    C        C        2               1
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -281,27 +260,6 @@ def pad_float64(ndarray[float64_t] oldIndex,
 def pad_object(ndarray[object] oldIndex,
                  ndarray[object] newIndex,
                  dict oldMap, dict newMap):
-    '''
-    Padding logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .                        0
-             .                        0
-             .                        0
-    A        A        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-    B        B        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    C        C        2               1
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -357,27 +315,6 @@ def pad_object(ndarray[object] oldIndex,
 def pad_int32(ndarray[int32_t] oldIndex,
                  ndarray[int32_t] newIndex,
                  dict oldMap, dict newMap):
-    '''
-    Padding logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .                        0
-             .                        0
-             .                        0
-    A        A        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-    B        B        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    C        C        2               1
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -433,27 +370,6 @@ def pad_int32(ndarray[int32_t] oldIndex,
 def pad_int64(ndarray[int64_t] oldIndex,
                  ndarray[int64_t] newIndex,
                  dict oldMap, dict newMap):
-    '''
-    Padding logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .                        0
-             .                        0
-             .                        0
-    A        A        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-    B        B        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    C        C        2               1
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -509,27 +425,6 @@ def pad_int64(ndarray[int64_t] oldIndex,
 def pad_bool(ndarray[uint8_t] oldIndex,
                  ndarray[uint8_t] newIndex,
                  dict oldMap, dict newMap):
-    '''
-    Padding logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .                        0
-             .                        0
-             .                        0
-    A        A        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-             .        0               1
-    B        B        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    C        C        2               1
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -586,30 +481,6 @@ def pad_bool(ndarray[uint8_t] oldIndex,
 def backfill_float64(ndarray[float64_t] oldIndex,
                       ndarray[float64_t] newIndex,
                       dict oldMap, dict newMap):
-    '''
-    Backfilling logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .        0               1
-             .        0               1
-             .        0               1
-    A        A        0               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    B        B        1               1
-             .        2               1
-             .        2               1
-             .        2               1
-    C        C        2               1
-             .                        0
-             .                        0
-    D
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -659,30 +530,6 @@ def backfill_float64(ndarray[float64_t] oldIndex,
 def backfill_object(ndarray[object] oldIndex,
                       ndarray[object] newIndex,
                       dict oldMap, dict newMap):
-    '''
-    Backfilling logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .        0               1
-             .        0               1
-             .        0               1
-    A        A        0               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    B        B        1               1
-             .        2               1
-             .        2               1
-             .        2               1
-    C        C        2               1
-             .                        0
-             .                        0
-    D
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -732,30 +579,6 @@ def backfill_object(ndarray[object] oldIndex,
 def backfill_int32(ndarray[int32_t] oldIndex,
                       ndarray[int32_t] newIndex,
                       dict oldMap, dict newMap):
-    '''
-    Backfilling logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .        0               1
-             .        0               1
-             .        0               1
-    A        A        0               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    B        B        1               1
-             .        2               1
-             .        2               1
-             .        2               1
-    C        C        2               1
-             .                        0
-             .                        0
-    D
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -805,30 +628,6 @@ def backfill_int32(ndarray[int32_t] oldIndex,
 def backfill_int64(ndarray[int64_t] oldIndex,
                       ndarray[int64_t] newIndex,
                       dict oldMap, dict newMap):
-    '''
-    Backfilling logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .        0               1
-             .        0               1
-             .        0               1
-    A        A        0               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    B        B        1               1
-             .        2               1
-             .        2               1
-             .        2               1
-    C        C        2               1
-             .                        0
-             .                        0
-    D
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
@@ -878,30 +677,6 @@ def backfill_int64(ndarray[int64_t] oldIndex,
 def backfill_bool(ndarray[uint8_t] oldIndex,
                       ndarray[uint8_t] newIndex,
                       dict oldMap, dict newMap):
-    '''
-    Backfilling logic for generating fill vector
-
-    Diagram of what's going on
-
-    Old      New    Fill vector    Mask
-             .        0               1
-             .        0               1
-             .        0               1
-    A        A        0               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-             .        1               1
-    B        B        1               1
-             .        2               1
-             .        2               1
-             .        2               1
-    C        C        2               1
-             .                        0
-             .                        0
-    D
-    '''
     cdef int i, j, oldLength, newLength, curLoc
     cdef ndarray[int32_t, ndim=1] fill_vec
     cdef int newPos, oldPos
