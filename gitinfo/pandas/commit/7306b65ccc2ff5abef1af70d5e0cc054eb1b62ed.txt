commit 7306b65ccc2ff5abef1af70d5e0cc054eb1b62ed
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 30 18:58:45 2012 -0500

    ENH: handle fractional seconds when parsing multiple datetime components. close #2209

diff --git a/pandas/io/tests/test_date_converters.py b/pandas/io/tests/test_date_converters.py
index b6aecc12f..3c2a46112 100644
--- a/pandas/io/tests/test_date_converters.py
+++ b/pandas/io/tests/test_date_converters.py
@@ -93,6 +93,22 @@ year, month, day, hour, minute, second, a, b
         self.assert_('ymdHMS' in df)
         self.assert_(df.ymdHMS.ix[0] == datetime(2001, 1, 5, 10, 0, 0))
 
+    def test_datetime_fractional_seconds(self):
+        data = """\
+year, month, day, hour, minute, second, a, b
+2001, 01, 05, 10, 00, 0.123456, 0.0, 10.
+2001, 01, 5, 10, 0, 0.500000, 1., 11.
+"""
+        datecols = {'ymdHMS': [0, 1, 2, 3, 4, 5]}
+        df = read_table(StringIO(data), sep=',', header=0,
+                        parse_dates=datecols,
+                        date_parser=conv.parse_all_fields)
+        self.assert_('ymdHMS' in df)
+        self.assert_(df.ymdHMS.ix[0] == datetime(2001, 1, 5, 10, 0, 0,
+                                                 microsecond=123456))
+        self.assert_(df.ymdHMS.ix[1] == datetime(2001, 1, 5, 10, 0, 0,
+                                                 microsecond=500000))
+
     def test_generic(self):
         data = "year, month, day, a\n 2001, 01, 10, 10.\n 2001, 02, 1, 11."
         datecols = {'ym': [0, 1]}
diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index 7c055d1bb..69542a2cd 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -620,13 +620,18 @@ def try_parse_year_month_day(ndarray[object] years, ndarray[object] months,
 
     return result
 
-def try_parse_datetime_components(ndarray[object] years, ndarray[object] months,
-    ndarray[object] days, ndarray[object] hours, ndarray[object] minutes,
-    ndarray[object] seconds):
+def try_parse_datetime_components(ndarray[object] years,
+                                  ndarray[object] months,
+                                  ndarray[object] days,
+                                  ndarray[object] hours,
+                                  ndarray[object] minutes,
+                                  ndarray[object] seconds):
 
     cdef:
         Py_ssize_t i, n
         ndarray[object] result
+        int secs
+        double micros
 
     from datetime import datetime
 
@@ -637,8 +642,15 @@ def try_parse_datetime_components(ndarray[object] years, ndarray[object] months,
     result = np.empty(n, dtype='O')
 
     for i from 0 <= i < n:
+        secs = int(seconds[i])
+
+        micros = seconds[i] - secs
+        if micros > 0:
+            micros = micros * 1000000
+
         result[i] = datetime(int(years[i]), int(months[i]), int(days[i]),
-                             int(hours[i]), int(minutes[i]), int(seconds[i]))
+                             int(hours[i]), int(minutes[i]), int(secs),
+                             int(micros))
 
     return result
 
