commit 9328b0c63bf17a467f8b69844feed2148d116116
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu May 24 10:46:06 2012 -0400

    ENH: return DatetimeIndex from to_datetime, control formatting of datetime64 values in DatetimeIndex.__repr__

diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index d49664108..97eb323db 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -411,15 +411,22 @@ class DatetimeIndex(Int64Index):
         return lib.ints_to_pydatetime(self.asi8)
 
     def __repr__(self):
+        from pandas.core.format import _format_datetime64
+        values = self.values
+
+        freq = None
         if self.offset is not None:
-            output = str(self.__class__)
-            if len(self) > 0:
-                output += '\n[%s, ..., %s]' % (self[0], self[-1])
-            tagline = '\nLength: %d, Freq: %s, Timezone: %s'
-            output += tagline % (len(self), self.offset.freqstr, self.tz)
-            return output
-        else:
-            return Index.__repr__(self)
+            freq = self.offset.freqstr
+
+        summary = str(self.__class__)
+        if len(self) > 0:
+            first = _format_datetime64(values[0])
+            last = _format_datetime64(values[-1])
+            summary += '\n[%s, ..., %s]' % (first, last)
+        tagline = '\nLength: %d, Freq: %s, Timezone: %s'
+        summary += tagline % (len(self), freq, self.tz)
+
+        return summary
 
     __str__ = __repr__
 
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index ef6e9e0d1..7201de7de 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -400,6 +400,7 @@ class TestTimeSeries(unittest.TestCase):
         assert_almost_equal(result, expected)
 
         result2 = to_datetime(strings)
+        self.assert_(isinstance(result2, DatetimeIndex))
         assert_almost_equal(result, result2)
 
         malformed = np.array(['1/100/2000', np.nan], dtype=object)
diff --git a/pandas/tseries/tools.py b/pandas/tseries/tools.py
index d7a296df8..f770fee21 100644
--- a/pandas/tseries/tools.py
+++ b/pandas/tseries/tools.py
@@ -78,6 +78,7 @@ def to_datetime(arg, errors='ignore', dayfirst=False):
     ret : datetime if parsing succeeded
     """
     from pandas.core.series import Series
+    from pandas.tseries.index import DatetimeIndex
     if arg is None:
         return arg
     elif isinstance(arg, datetime):
@@ -90,10 +91,12 @@ def to_datetime(arg, errors='ignore', dayfirst=False):
     elif isinstance(arg, (np.ndarray, list)):
         if isinstance(arg, list):
             arg = np.array(arg, dtype='O')
-        return lib.string_to_datetime(com._ensure_object(arg),
-                                      raise_=errors == 'raise',
-                                      dayfirst=dayfirst)
-
+        result = lib.string_to_datetime(com._ensure_object(arg),
+                                        raise_=errors == 'raise',
+                                        dayfirst=dayfirst)
+        if com.is_datetime64_dtype(result):
+            result = DatetimeIndex(result)
+        return result
     try:
         if not arg:
             return arg
