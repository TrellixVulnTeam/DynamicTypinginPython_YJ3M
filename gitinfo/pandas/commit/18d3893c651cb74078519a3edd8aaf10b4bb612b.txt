commit 18d3893c651cb74078519a3edd8aaf10b4bb612b
Author: y-p <yoval@gmx.com>
Date:   Sun Mar 31 14:31:30 2013 +0300

    BLD: Travis revamped their log widget, be verbose and fold furiously

diff --git a/.travis.yml b/.travis.yml
index 6842f5584..a5f963e04 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,8 +1,9 @@
 language: python
 
+# travis insist on having at least one entry here, rather then
+# all in the matrix section
 python:
   - 2.6
-  - 3.3
 
 env:
   global:
@@ -16,6 +17,8 @@ matrix:
       env: FULL_DEPS=true
     - python: 3.2
       env: FULL_DEPS=true
+    - python: 3.3
+
 
 # allow importing from site-packages,
 # so apt-get python-x works for system pythons
@@ -27,8 +30,8 @@ before_install:
   - echo "Waldo1"
   - echo $VIRTUAL_ENV
   - date
-  - export PIP_ARGS=-q # comment this this to debug travis install issues
-  - export APT_ARGS=-qq # comment this to debug travis install issues
+  # - export PIP_ARGS=-q # comment this this to debug travis install issues
+  # - export APT_ARGS=-qq # comment this to debug travis install issues
   # - set -x # enable this to see bash commands
   - source ci/before_install.sh # we need to source this to bring in the env
   - python -V
diff --git a/ci/install.sh b/ci/install.sh
index 442b999a9..d158b0f98 100755
--- a/ci/install.sh
+++ b/ci/install.sh
@@ -6,8 +6,30 @@ echo "inside $0"
 # workaround for travis ignoring system_site_packages in travis.yml
 rm -f $VIRTUAL_ENV/lib/python$TRAVIS_PYTHON_VERSION/no-global-site-packages.txt
 
+function pip_install {
+    NAME="$1"
+    if [ x"$2" != x"$2" ]; then
+        NAME=$2;
+    fi
+    echo "travis_fold:begin:$NAME"
+    pip install $PIP_ARGS  "$1"
+    echo "travis_fold:end:$NAME"
+}
+function apt_install {
+    NAME=$1
+    if [ x"$2" != x"!2" ]; then
+        NAME=$2;
+    fi
+    echo "travis_fold:begin:$NAME"
+    sudo apt-get install $APT_ARGS "$1"
+    echo "travis_fold:end:$NAME"
+}
+
 # Hard Deps
-pip install $PIP_ARGS --use-mirrors cython nose python-dateutil pytz
+pip_install cython
+pip_install nose
+pip_install python-dateutil
+pip_install pytz
 
 # try and get numpy as a binary deb
 
@@ -17,59 +39,63 @@ pip install $PIP_ARGS --use-mirrors cython nose python-dateutil pytz
 # fi
 
 if [ ${TRAVIS_PYTHON_VERSION} == "3.2" ]; then
-    sudo apt-get $APT_ARGS install python3-numpy;
+    apt_install  python3-numpy;
 elif [ ${TRAVIS_PYTHON_VERSION} == "3.3" ] || [  x"$LOCALE_OVERRIDE" != x""  ]; then # should be >=3,3
-    pip $PIP_ARGS install https://github.com/numpy/numpy/archive/v1.7.0.tar.gz;
+    pip_install numpy==1.7.0
 else
-     pip install numpy==1.6.1
+     pip_install numpy==1.6.1
 fi
 
 # Optional Deps
 if [ x"$FULL_DEPS" == x"true" ]; then
     echo "Installing FULL_DEPS"
     if [ ${TRAVIS_PYTHON_VERSION} == "2.7" ]; then
-        sudo apt-get $APT_ARGS install python-scipy;
+        apt_install python-scipy;
     fi
 
     if [ ${TRAVIS_PYTHON_VERSION} == "3.2" ]; then
-        sudo apt-get $APT_ARGS install python3-scipy;
+        apt_install $APT_ARGS install python3-scipy;
     fi
 
     if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
         sudo apt-get $APT_ARGS install libhdf5-serial-dev;
-        pip install numexpr
-        pip install tables
+        pip_install numexpr
+        pip_install tables
     fi
 
-    pip install $PIP_ARGS --use-mirrors openpyxl matplotlib;
-    pip install $PIP_ARGS --use-mirrors xlrd xlwt;
-    pip install $PIP_ARGS 'http://downloads.sourceforge.net/project/pytseries/scikits.timeseries/0.91.3/scikits.timeseries-0.91.3.tar.gz?r='
+    pip_install matplotlib;
+    pip_install openpyxl;
+    pip_install xlwt;
+    pip_install xlrd ;
+    pip_install 'http://downloads.sourceforge.net/project/pytseries/scikits.timeseries/0.91.3/scikits.timeseries-0.91.3.tar.gz?r=' scikit.timeseries
 fi
 
-if [ x"$VBENCH" == x"true" ]; then
-    if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
-        sudo apt-get $APT_ARGS install libhdf5-serial-dev;
-        pip install numexpr
-        pip install tables
-    fi
-    pip $PIP_ARGS install sqlalchemy git+git://github.com/pydata/vbench.git;
-fi
+# if [ x"$VBENCH" == x"true" ]; then
+#     if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
+#         sudo apt-get $APT_ARGS install libhdf5-serial-dev;
+#         pip install numexpr
+#         pip install tables
+#     fi
+#     pip $PIP_ARGS install sqlalchemy git+git://github.com/pydata/vbench.git;
+# fi
 
 #build and install pandas
+echo "travis_fold:begin:pandas-install"
 python setup.py build_ext install
+echo "travis_fold:end:pandas-install"
 
 #HACK: pandas is a statsmodels dependency
 # so we need to install it after pandas
 if [ x"$FULL_DEPS" == x"true" ]; then
-    pip install patsy
+    pip_install patsy
     # pick recent 0.5dev dec/2012
-    pip install git+git://github.com/statsmodels/statsmodels@c9062e43b8a5f7385537ca95#egg=statsmodels
+    pip_install git+git://github.com/statsmodels/statsmodels@c9062e43b8a5f7385537ca95#egg=statsmodels statsmodels
 fi;
 
 # make sure the desired locale is generated
 if [ x"$LOCALE_OVERRIDE" != x"" ]; then
     # piggyback this build for plotting tests. oh boy.
-    pip install $PIP_ARGS --use-mirrors  matplotlib;
+    pip_install  matplotlib;
 
     sudo locale-gen "$LOCALE_OVERRIDE"
 fi
diff --git a/ci/script.sh b/ci/script.sh
index 92ac30697..898628562 100755
--- a/ci/script.sh
+++ b/ci/script.sh
@@ -10,14 +10,13 @@ if [ x"$LOCALE_OVERRIDE" != x"" ]; then
     # also do slow tests here, especially plotting
     nosetests --exe -w /tmp -A "not network" pandas;
     exit
-fi
-
-if [ x"$VBENCH" != x"true" ]; then
+elif [ x"$VBENCH" != x"true" ]; then
+    # plain/FULL_DEPS
     nosetests --exe -w /tmp -A "not slow" pandas;
     exit
 fi
 
-if [ x"$VBENCH" == x"true" ]; then
-    python vb_suite/perf_HEAD.py;
-    exit
-fi
+# if [ x"$VBENCH" == x"true" ]; then
+#     python vb_suite/perf_HEAD.py;
+#     exit
+# fi
