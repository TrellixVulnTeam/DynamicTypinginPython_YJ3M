commit 6521f0433ef5e88270b08ffd83e14598999ffe7d
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Jun 15 11:39:19 2012 -0400

    ENH: overwrite keyword in DataFrame.update

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 4e4c44bfe..c903a9dd0 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3143,7 +3143,7 @@ class DataFrame(NDFrame):
         combiner = lambda x, y: np.where(isnull(x), y, x)
         return self.combine(other, combiner)
 
-    def update(self, other, join='left'):
+    def update(self, other, join='left', overwrite=True):
         """
         Modify DataFrame in place using non-NA values from passed
         DataFrame. Aligns on indices
@@ -3152,6 +3152,9 @@ class DataFrame(NDFrame):
         ----------
         other : DataFrame
         join : {'left', 'right', 'outer', 'inner'}, default 'left'
+        overwrite : boolean, default True
+            If True then overwrite values for common keys in the calling
+            frame
         """
         if join != 'left':
             raise NotImplementedError
@@ -3160,7 +3163,11 @@ class DataFrame(NDFrame):
         for col in self.columns:
             this = self[col].values
             that = other[col].values
-            self[col] = np.where(isnull(that), this, that)
+            if overwrite:
+                mask = isnull(that)
+            else:
+                mask = notnull(this)
+            self[col] = np.where(mask, this, that)
 
     #----------------------------------------------------------------------
     # Misc methods
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index d9081eb40..d61ce7df0 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5235,6 +5235,23 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                               [1.5, nan, 7.]])
         assert_frame_equal(df, expected)
 
+    def test_update_nooverwrite(self):
+        df = DataFrame([[1.5, nan, 3.],
+                        [1.5, nan, 3.],
+                        [1.5, nan, 3],
+                        [1.5, nan, 3]])
+
+        other = DataFrame([[3.6, 2., np.nan],
+                           [np.nan, np.nan, 7]], index=[1, 3])
+
+        df.update(other, overwrite=False)
+
+        expected = DataFrame([[1.5, nan, 3],
+                              [1.5, 2, 3],
+                              [1.5, nan, 3],
+                              [1.5, nan, 3.]])
+        assert_frame_equal(df, expected)
+
     def test_combineAdd(self):
         # trivial
         comb = self.frame.combineAdd(self.frame)
