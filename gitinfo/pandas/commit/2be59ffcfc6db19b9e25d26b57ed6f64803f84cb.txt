commit 2be59ffcfc6db19b9e25d26b57ed6f64803f84cb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 25 16:57:46 2011 -0500

    ENH: wrap NumPy C API function for detecting all integer types

diff --git a/RELEASE.rst b/RELEASE.rst
index fc52dee24..2d140c3fe 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -112,6 +112,7 @@ pandas 0.6.0
   - Use Series name in GroupBy for result index (GH #363)
   - Refactor Series/DataFrame stat methods to use common set of NaN-friendly
     function
+  - Handle NumPy scalar integers at C level in Cython conversion routines
 
 **Bug fixes**
 
@@ -163,6 +164,7 @@ pandas 0.6.0
   - Fix bug in .ix-based indexing with partial retrieval when a label is not
     contained in a level
   - Index name was not being pickled (GH #408)
+  - Level name should be passed to result index in GroupBy.apply (GH #416)
 
 Thanks
 ------
@@ -182,6 +184,7 @@ Thanks
 - Chang She
 - Ted Square
 - Aman Thakral
+- Chris Uga
 - Dieter Vandenbussche
 - carljv
 - rsamson
diff --git a/pandas/src/numpy_helper.h b/pandas/src/numpy_helper.h
new file mode 100644
index 000000000..d43f30492
--- /dev/null
+++ b/pandas/src/numpy_helper.h
@@ -0,0 +1,6 @@
+#include "numpy/ndarrayobject.h"
+
+inline int
+is_integer_object(PyObject* obj) {
+  return PyArray_IsIntegerScalar(obj);
+}
diff --git a/pandas/src/parsing.pyx b/pandas/src/parsing.pyx
index 76f62991a..224ff3aac 100644
--- a/pandas/src/parsing.pyx
+++ b/pandas/src/parsing.pyx
@@ -150,7 +150,7 @@ def maybe_convert_objects(ndarray[object] objects):
         elif cpython.PyBool_Check(val):
             seen_bool = 1
             bools[i] = val
-        elif cpython.PyInt_Check(val) or cpython.PyLong_Check(val):
+        elif is_integer_object(val):
             seen_int = 1
             floats[i] = <float64_t> val
             if not seen_null:
diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index a0e760561..57ce1f553 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -49,6 +49,9 @@ cdef double_t *get_double_ptr(ndarray arr):
 
     return <double_t *> arr.data
 
+cdef extern from "numpy_helper.h":
+    inline int is_integer_object(object)
+
 cdef extern from "math.h":
     double sqrt(double x)
 
diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index 89342c8a7..a07574ef2 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -176,6 +176,16 @@ def test_convert_objects():
     result = lib.maybe_convert_objects(arr)
     assert(result.dtype == np.object_)
 
+def test_convert_objects_ints():
+    # test that we can detect many kinds of integers
+    dtypes = ['i1', 'i2', 'i4', 'i8', 'u1', 'u2', 'u4', 'u8']
+
+    for dtype_str in dtypes:
+        arr = np.array(list(np.arange(20, dtype=dtype_str)), dtype='O')
+        assert(arr[0].dtype == np.dtype(dtype_str))
+        result = lib.maybe_convert_objects(arr)
+        assert(issubclass(result.dtype.type, np.integer))
+
 class TestMoments(unittest.TestCase):
     pass
 
