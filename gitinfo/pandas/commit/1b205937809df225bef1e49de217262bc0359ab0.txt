commit 1b205937809df225bef1e49de217262bc0359ab0
Author: David Stephens <dstephens99@gmail.com>
Date:   Sat Mar 28 12:14:32 2015 -0700

    COMPAT: Fix dl_mult_symbols for Python3

diff --git a/pandas/io/data.py b/pandas/io/data.py
index 936e5facd..3e077bf52 100644
--- a/pandas/io/data.py
+++ b/pandas/io/data.py
@@ -326,18 +326,23 @@ def _dl_mult_symbols(symbols, start, end, interval, chunksize, retry_count, paus
                      method):
     stocks = {}
     failed = []
+    passed = []
     for sym_group in _in_chunks(symbols, chunksize):
         for sym in sym_group:
             try:
                 stocks[sym] = method(sym, start, end, interval, retry_count, pause)
+                passed.append(sym)
             except IOError:
                 warnings.warn('Failed to read symbol: {0!r}, replacing with '
                               'NaN.'.format(sym), SymbolWarning)
                 failed.append(sym)
 
+    if len(passed) == 0:
+        raise RemoteDataError("No data fetched using "
+                              "{0!r}".format(method.__name__))
     try:
-        if len(stocks) > 0 and len(failed) > 0:
-            df_na = stocks.values()[0].copy()
+        if len(stocks) > 0 and len(failed) > 0 and len(passed) > 0:
+            df_na = stocks[passed[0]].copy()
             df_na[:] = np.nan
             for sym in failed:
                 stocks[sym] = df_na
@@ -347,7 +352,6 @@ def _dl_mult_symbols(symbols, start, end, interval, chunksize, retry_count, paus
         raise RemoteDataError("No data fetched using "
                               "{0!r}".format(method.__name__))
 
-
 _source_functions = {'google': _get_hist_google, 'yahoo': _get_hist_yahoo}
 
 
diff --git a/pandas/io/tests/test_data.py b/pandas/io/tests/test_data.py
index 6b29ffb9d..70a25a45c 100644
--- a/pandas/io/tests/test_data.py
+++ b/pandas/io/tests/test_data.py
@@ -101,6 +101,10 @@ class TestGoogle(tm.TestCase):
         self.assertIn('INVALID', pan.minor_axis)
 
     @network
+    def test_get_multi_all_invalid(self):
+        sl = ['INVALID', 'INVALID2', 'INVALID3']
+        self.assertRaises(RemoteDataError, web.get_data_google, sl, '2012')
+
     def test_get_multi2(self):
         with warnings.catch_warnings(record=True) as w:
             for locale in self.locales:
