commit aed5689a90209bf8748dde207a7110c1c31036b7
Author: alimcmaster1 <alimcmaster1@gmail.com>
Date:   Fri Oct 26 00:59:29 2018 +0100

    isort imports-io (#23332)
    
    Signed-off-by: alimcmaster1 <alimcmaster1@gmail.com>

diff --git a/pandas/io/api.py b/pandas/io/api.py
index f542a8176..496a00126 100644
--- a/pandas/io/api.py
+++ b/pandas/io/api.py
@@ -4,20 +4,21 @@ Data IO api
 
 # flake8: noqa
 
-from pandas.io.parsers import read_csv, read_table, read_fwf
 from pandas.io.clipboards import read_clipboard
 from pandas.io.excel import ExcelFile, ExcelWriter, read_excel
-from pandas.io.pytables import HDFStore, get_store, read_hdf
-from pandas.io.json import read_json
-from pandas.io.html import read_html
-from pandas.io.sql import read_sql, read_sql_table, read_sql_query
-from pandas.io.sas import read_sas
 from pandas.io.feather_format import read_feather
+from pandas.io.gbq import read_gbq
+from pandas.io.html import read_html
+from pandas.io.json import read_json
+from pandas.io.packers import read_msgpack, to_msgpack
 from pandas.io.parquet import read_parquet
-from pandas.io.stata import read_stata
+from pandas.io.parsers import read_csv, read_fwf, read_table
 from pandas.io.pickle import read_pickle, to_pickle
-from pandas.io.packers import read_msgpack, to_msgpack
-from pandas.io.gbq import read_gbq
+from pandas.io.pytables import HDFStore, get_store, read_hdf
+from pandas.io.sas import read_sas
+from pandas.io.sql import read_sql, read_sql_query, read_sql_table
+from pandas.io.stata import read_stata
+
 
 # deprecation, xref #13790
 def Term(*args, **kwargs):
diff --git a/pandas/io/clipboards.py b/pandas/io/clipboards.py
index 70c978a3b..287a03c2e 100644
--- a/pandas/io/clipboards.py
+++ b/pandas/io/clipboards.py
@@ -1,10 +1,9 @@
 """ io on the clipboard """
 import warnings
 
-from pandas.compat import StringIO, PY2, PY3
-
-from pandas.core.dtypes.generic import ABCDataFrame
 from pandas import compat, get_option, option_context
+from pandas.compat import PY2, PY3, StringIO
+from pandas.core.dtypes.generic import ABCDataFrame
 
 
 def read_clipboard(sep=r'\s+', **kwargs):  # pragma: no cover
diff --git a/pandas/io/common.py b/pandas/io/common.py
index 2056c25dd..40247c4ae 100644
--- a/pandas/io/common.py
+++ b/pandas/io/common.py
@@ -1,21 +1,21 @@
 """Common IO api utilities"""
 
-import os
-import csv
 import codecs
+import csv
 import mmap
-from contextlib import contextmanager, closing
+import os
 import zipfile
+from contextlib import closing, contextmanager
 
-from pandas.compat import StringIO, BytesIO, string_types, text_type
-from pandas import compat
-from pandas.io.formats.printing import pprint_thing
 import pandas.core.common as com
-from pandas.core.dtypes.common import is_number, is_file_like
-
+from pandas import compat
+from pandas.compat import BytesIO, StringIO, string_types, text_type
+from pandas.core.dtypes.common import is_file_like, is_number
 # compat
-from pandas.errors import (ParserError, DtypeWarning,  # noqa
-                           EmptyDataError, ParserWarning)
+from pandas.errors import (  # noqa
+    DtypeWarning, EmptyDataError, ParserError, ParserWarning
+)
+from pandas.io.formats.printing import pprint_thing
 
 # gh-12665: Alias for now and remove later.
 CParserError = ParserError
diff --git a/pandas/io/date_converters.py b/pandas/io/date_converters.py
index 377373f8a..1a22ee724 100644
--- a/pandas/io/date_converters.py
+++ b/pandas/io/date_converters.py
@@ -1,7 +1,8 @@
 """This module is designed for community supported date conversion functions"""
-from pandas.compat import range, map
 import numpy as np
+
 from pandas._libs.tslibs import parsing
+from pandas.compat import map, range
 
 
 def parse_date_time(date_col, time_col):
diff --git a/pandas/io/excel.py b/pandas/io/excel.py
index c1cbccb7c..c6a04b9bd 100644
--- a/pandas/io/excel.py
+++ b/pandas/io/excel.py
@@ -2,39 +2,37 @@
 Module parse to/from Excel
 """
 
-# ---------------------------------------------------------------------
-# ExcelFile class
-from datetime import datetime, date, time, MINYEAR, timedelta
-
-import os
 import abc
+import os
 import warnings
-from textwrap import fill
-from io import UnsupportedOperation
+# ---------------------------------------------------------------------
+# ExcelFile class
+from datetime import MINYEAR, date, datetime, time, timedelta
 from distutils.version import LooseVersion
+from io import UnsupportedOperation
+from textwrap import fill
 
 import numpy as np
 
 import pandas._libs.json as json
-from pandas.util._decorators import Appender, deprecate_kwarg
-from pandas.errors import EmptyDataError
-
 import pandas.compat as compat
-from pandas.compat import (map, zip, reduce, range, lrange, u, add_metaclass,
-                           string_types, OrderedDict)
-
-from pandas.core.dtypes.common import (
-    is_integer, is_float,
-    is_bool, is_list_like)
-
+from pandas.compat import (
+    OrderedDict, add_metaclass, lrange, map, range, reduce, string_types, u,
+    zip
+)
 from pandas.core import config
+from pandas.core.dtypes.common import (
+    is_bool, is_float, is_integer, is_list_like
+)
 from pandas.core.frame import DataFrame
-
-from pandas.io.parsers import TextParser
-from pandas.io.common import (_is_url, _urlopen, _validate_header_arg,
-                              get_filepath_or_buffer, _NA_VALUES,
-                              _stringify_path)
+from pandas.errors import EmptyDataError
+from pandas.io.common import (
+    _NA_VALUES, _is_url, _stringify_path, _urlopen, _validate_header_arg,
+    get_filepath_or_buffer
+)
 from pandas.io.formats.printing import pprint_thing
+from pandas.io.parsers import TextParser
+from pandas.util._decorators import Appender, deprecate_kwarg
 
 __all__ = ["read_excel", "ExcelWriter", "ExcelFile"]
 
diff --git a/pandas/io/feather_format.py b/pandas/io/feather_format.py
index 1bc652621..436c16839 100644
--- a/pandas/io/feather_format.py
+++ b/pandas/io/feather_format.py
@@ -1,7 +1,8 @@
 """ feather-format compat """
 
 from distutils.version import LooseVersion
-from pandas import DataFrame, RangeIndex, Int64Index
+
+from pandas import DataFrame, Int64Index, RangeIndex
 from pandas.compat import range
 from pandas.io.common import _stringify_path
 
diff --git a/pandas/io/html.py b/pandas/io/html.py
index 04534ff59..a1d3f4589 100644
--- a/pandas/io/html.py
+++ b/pandas/io/html.py
@@ -3,22 +3,22 @@ HTML IO.
 
 """
 
+import numbers
 import os
 import re
-import numbers
-
 from distutils.version import LooseVersion
 
+import pandas.core.common as com
+from pandas import Series, compat
+from pandas.compat import (
+    binary_type, iteritems, lmap, lrange, raise_with_traceback, string_types,
+    u
+)
 from pandas.core.dtypes.common import is_list_like
 from pandas.errors import EmptyDataError
-from pandas.io.common import _is_url, urlopen, _validate_header_arg
-from pandas.io.parsers import TextParser
-from pandas import compat
-from pandas.compat import (lrange, lmap, u, string_types, iteritems,
-                           raise_with_traceback, binary_type)
-from pandas import Series
-import pandas.core.common as com
+from pandas.io.common import _is_url, _validate_header_arg, urlopen
 from pandas.io.formats.printing import pprint_thing
+from pandas.io.parsers import TextParser
 
 _IMPORTS = False
 _HAS_BS4 = False
diff --git a/pandas/io/parquet.py b/pandas/io/parquet.py
index 6ab56c68a..aef1d84a1 100644
--- a/pandas/io/parquet.py
+++ b/pandas/io/parquet.py
@@ -1,10 +1,11 @@
 """ parquet compat """
 
-from warnings import catch_warnings
 from distutils.version import LooseVersion
-from pandas import DataFrame, RangeIndex, Int64Index, get_option
-from pandas.compat import string_types
+from warnings import catch_warnings
+
 import pandas.core.common as com
+from pandas import DataFrame, Int64Index, RangeIndex, get_option
+from pandas.compat import string_types
 from pandas.io.common import get_filepath_or_buffer, is_s3_url
 
 
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index eeba30ed8..8dd50fceb 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -2,50 +2,51 @@
 Module contains tools for processing files into DataFrames or other objects
 """
 from __future__ import print_function
-from collections import defaultdict
-import re
+
 import csv
+import datetime
+import re
 import sys
 import warnings
-import datetime
+from collections import defaultdict
 from textwrap import fill
 
 import numpy as np
 
+import pandas._libs.lib as lib
+import pandas._libs.ops as libops
+import pandas._libs.parsers as parsers
+import pandas.core.common as com
 from pandas import compat
-from pandas.compat import (range, lrange, PY3, StringIO, lzip,
-                           zip, string_types, map, u)
+from pandas._libs.tslibs import parsing
+from pandas.compat import (
+    PY3, StringIO, lrange, lzip, map, range, string_types, u, zip
+)
+from pandas.core import algorithms
+from pandas.core.arrays import Categorical
+from pandas.core.dtypes.cast import astype_nansafe
 from pandas.core.dtypes.common import (
-    is_integer, ensure_object,
-    is_list_like, is_integer_dtype,
-    is_float, is_dtype_equal,
-    is_object_dtype, is_string_dtype,
-    is_scalar, is_categorical_dtype)
+    ensure_object, is_categorical_dtype, is_dtype_equal, is_float, is_integer,
+    is_integer_dtype, is_list_like, is_object_dtype, is_scalar,
+    is_string_dtype
+)
 from pandas.core.dtypes.dtypes import CategoricalDtype
 from pandas.core.dtypes.missing import isna
-from pandas.core.dtypes.cast import astype_nansafe
-from pandas.core.index import (Index, MultiIndex, RangeIndex,
-                               ensure_index_from_sequences)
-from pandas.core.series import Series
 from pandas.core.frame import DataFrame
-from pandas.core.arrays import Categorical
-from pandas.core import algorithms
-import pandas.core.common as com
-from pandas.io.date_converters import generic_parser
-from pandas.errors import ParserWarning, ParserError, EmptyDataError
-from pandas.io.common import (get_filepath_or_buffer, is_file_like,
-                              _validate_header_arg, _get_handle,
-                              UnicodeReader, UTF8Recoder, _NA_VALUES,
-                              BaseIterator, _infer_compression)
+from pandas.core.index import (
+    Index, MultiIndex, RangeIndex, ensure_index_from_sequences
+)
+from pandas.core.series import Series
 from pandas.core.tools import datetimes as tools
-
+from pandas.errors import EmptyDataError, ParserError, ParserWarning
+from pandas.io.common import (
+    _NA_VALUES, BaseIterator, UnicodeReader, UTF8Recoder, _get_handle,
+    _infer_compression, _validate_header_arg, get_filepath_or_buffer,
+    is_file_like
+)
+from pandas.io.date_converters import generic_parser
 from pandas.util._decorators import Appender
 
-import pandas._libs.lib as lib
-import pandas._libs.parsers as parsers
-import pandas._libs.ops as libops
-from pandas._libs.tslibs import parsing
-
 # BOM character (byte order mark)
 # This exists at the beginning of a file to indicate endianness
 # of a file (stream). Unfortunately, this marker screws up parsing,
diff --git a/pandas/io/pickle.py b/pandas/io/pickle.py
index d52a571da..4e71462f4 100644
--- a/pandas/io/pickle.py
+++ b/pandas/io/pickle.py
@@ -3,8 +3,9 @@ import warnings
 
 import numpy as np
 from numpy.lib.format import read_array, write_array
-from pandas.compat import BytesIO, cPickle as pkl, pickle_compat as pc, PY3
-from pandas.core.dtypes.common import is_datetime64_dtype, _NS_DTYPE
+
+from pandas.compat import PY3, BytesIO, cPickle as pkl, pickle_compat as pc
+from pandas.core.dtypes.common import _NS_DTYPE, is_datetime64_dtype
 from pandas.io.common import _get_handle, _stringify_path
 
 
diff --git a/pandas/io/s3.py b/pandas/io/s3.py
index 7d1360934..4998e4c04 100644
--- a/pandas/io/s3.py
+++ b/pandas/io/s3.py
@@ -1,5 +1,6 @@
 """ s3 support for remote file interactivity """
 from pandas import compat
+
 try:
     import s3fs
     from botocore.exceptions import NoCredentialsError
diff --git a/pandas/io/sas/sas_xport.py b/pandas/io/sas/sas_xport.py
index 385396909..c32658048 100644
--- a/pandas/io/sas/sas_xport.py
+++ b/pandas/io/sas/sas_xport.py
@@ -8,17 +8,16 @@ The file format is defined here:
 https://support.sas.com/techsup/technote/ts140.pdf
 """
 
-from datetime import datetime
 import struct
 import warnings
+from datetime import datetime
 
 import numpy as np
 
-from pandas.util._decorators import Appender
-from pandas import compat
-
-from pandas.io.common import get_filepath_or_buffer, BaseIterator
 import pandas as pd
+from pandas import compat
+from pandas.io.common import BaseIterator, get_filepath_or_buffer
+from pandas.util._decorators import Appender
 
 _correct_line1 = ("HEADER RECORD*******LIBRARY HEADER RECORD!!!!!!!"
                   "000000000000000000000000000000  ")
diff --git a/pandas/io/sql.py b/pandas/io/sql.py
index 882fa0092..3876792d6 100644
--- a/pandas/io/sql.py
+++ b/pandas/io/sql.py
@@ -4,28 +4,28 @@ Collection of query wrappers / abstractions to both facilitate data
 retrieval and to reduce dependency on DB-specific API.
 """
 
-from __future__ import print_function, division
-from datetime import datetime, date, time
+from __future__ import division, print_function
 
-import warnings
 import re
+import warnings
+from contextlib import contextmanager
+from datetime import date, datetime, time
+
 import numpy as np
 
 import pandas._libs.lib as lib
-from pandas.core.dtypes.missing import isna
-from pandas.core.dtypes.dtypes import DatetimeTZDtype
-from pandas.core.dtypes.common import (
-    is_list_like, is_dict_like,
-    is_datetime64tz_dtype)
-
-from pandas.compat import (map, zip, raise_with_traceback,
-                           string_types, text_type)
+from pandas.compat import (
+    map, raise_with_traceback, string_types, text_type, zip
+)
 from pandas.core.api import DataFrame, Series
 from pandas.core.base import PandasObject
+from pandas.core.dtypes.common import (
+    is_datetime64tz_dtype, is_dict_like, is_list_like
+)
+from pandas.core.dtypes.dtypes import DatetimeTZDtype
+from pandas.core.dtypes.missing import isna
 from pandas.core.tools.datetimes import to_datetime
 
-from contextlib import contextmanager
-
 
 class SQLAlchemyRequired(ImportError):
     pass
diff --git a/pandas/io/stata.py b/pandas/io/stata.py
index 68b2182c2..00d1a9258 100644
--- a/pandas/io/stata.py
+++ b/pandas/io/stata.py
@@ -13,27 +13,29 @@ http://www.statsmodels.org/devel/
 import datetime
 import struct
 import sys
-from collections import OrderedDict
 import warnings
+from collections import OrderedDict
 
 import numpy as np
 from dateutil.relativedelta import relativedelta
 
+from pandas import DatetimeIndex, compat, isna, to_datetime, to_timedelta
 from pandas._libs.lib import infer_dtype
 from pandas._libs.tslibs import NaT, Timestamp
 from pandas._libs.writers import max_len_string_array
-
-from pandas import compat, to_timedelta, to_datetime, isna, DatetimeIndex
-from pandas.compat import (lrange, lmap, lzip, text_type, string_types, range,
-                           zip, BytesIO)
+from pandas.compat import (
+    BytesIO, lmap, lrange, lzip, range, string_types, text_type, zip
+)
 from pandas.core.arrays import Categorical
 from pandas.core.base import StringMixin
-from pandas.core.dtypes.common import (is_categorical_dtype, ensure_object,
-                                       is_datetime64_dtype)
+from pandas.core.dtypes.common import (
+    ensure_object, is_categorical_dtype, is_datetime64_dtype
+)
 from pandas.core.frame import DataFrame
 from pandas.core.series import Series
-from pandas.io.common import (get_filepath_or_buffer, BaseIterator,
-                              _stringify_path)
+from pandas.io.common import (
+    BaseIterator, _stringify_path, get_filepath_or_buffer
+)
 from pandas.util._decorators import Appender, deprecate_kwarg
 
 _version_error = ("Version of given Stata file is not 104, 105, 108, "
diff --git a/setup.cfg b/setup.cfg
index ee3984499..de3bd356e 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -96,21 +96,6 @@ skip=
     pandas/util/_print_versions.py,
     pandas/util/_decorators.py,
     pandas/util/_test_decorators.py,
-    pandas/io/s3.py,
-    pandas/io/parquet.py,
-    pandas/io/feather_format.py,
-    pandas/io/api.py,
-    pandas/io/sql.py,
-    pandas/io/clipboards.py,
-    pandas/io/excel.py,
-    pandas/io/date_converters.py,
-    pandas/io/testing.py,
-    pandas/io/common.py,
-    pandas/io/parsers.py,
-    pandas/io/html.py,
-    pandas/io/pickle.py,
-    pandas/io/stata.py,
-    pandas/io/sas/sas_xport.py,
     pandas/io/sas/sas7bdat.py,
     pandas/io/formats/console.py,
     pandas/io/formats/excel.py,
