commit 8aee1cd8b8a711021f70fe62ecc3f548aa6e89c4
Author: westurner <wes.turner@gmail.com>
Date:   Mon Mar 24 19:09:07 2014 -0500

    PERF: dataframe.from_records: read into list w/ itertools.islice when specifying nrows #6700

diff --git a/doc/source/release.rst b/doc/source/release.rst
index df0f472c3..be988236c 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -185,6 +185,8 @@ Improvements to existing features
 - Performance improvement when converting ``DatetimeIndex`` to floating ordinals
   using ``DatetimeConverter`` (:issue:`6636`)
 - Performance improvement for  ``DataFrame.shift`` (:issue: `5609`)
+- Performance improvement for ``DataFrame.from_records`` when reading a
+  specified number of rows from an iterable (:issue:`6700`)
 
 .. _release.bug_fixes-0.14.0:
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 8cf164ba7..d16b64d4d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -12,10 +12,11 @@ from __future__ import division
 # pylint: disable=E1101,E1103
 # pylint: disable=W0212,W0231,W0703,W0622
 
-import sys
 import collections
-import warnings
+import itertools
+import sys
 import types
+import warnings
 
 from numpy import nan as NA
 import numpy as np
@@ -756,17 +757,10 @@ class DataFrame(NDFrame):
 
             values = [first_row]
 
-            # if unknown length iterable (generator)
             if nrows is None:
-                # consume whole generator
-                values += list(data)
+                values += data
             else:
-                i = 1
-                for row in data:
-                    values.append(row)
-                    i += 1
-                    if i >= nrows:
-                        break
+                values.extend(itertools.islice(data, nrows - 1))
 
             if dtype is not None:
                 data = np.array(values, dtype=dtype)
diff --git a/vb_suite/frame_methods.py b/vb_suite/frame_methods.py
index 7f9063003..db53f00c5 100644
--- a/vb_suite/frame_methods.py
+++ b/vb_suite/frame_methods.py
@@ -386,7 +386,7 @@ def test_equal(name):
 def test_unequal(name):
     df, df2 = pairs[name]
     return df.equals(df2)
-    
+
 float_df = DataFrame(np.random.randn(1000, 1000))
 object_df = DataFrame([['foo']*1000]*1000)
 nonunique_cols = object_df.copy()
@@ -441,4 +441,23 @@ frame_shift_axis0 = Benchmark('df.shift(1,axis=0)', setup,
                     start_date=datetime(2014,1,1))
 frame_shift_axis1 = Benchmark('df.shift(1,axis=1)', setup,
                     name = 'frame_shift_axis_1',
-                    start_date=datetime(2014,1,1))
\ No newline at end of file
+                    start_date=datetime(2014,1,1))
+
+
+#-----------------------------------------------------------------------------
+# from_records issue-6700
+
+setup = common_setup + """
+def get_data(n=100000):
+    return ((x, x*20, x*100) for x in xrange(n))
+"""
+
+frame_from_records_generator = Benchmark('df = DataFrame.from_records(get_data())',
+                                setup,
+                                name='frame_from_records_generator',
+                                start_date=datetime(2013,10,04))  # issue-4911
+
+frame_from_records_generator_nrows = Benchmark('df = DataFrame.from_records(get_data(), nrows=1000)',
+                                setup,
+                                name='frame_from_records_generator_nrows',
+                                start_date=datetime(2013,10,04))  # issue-4911
