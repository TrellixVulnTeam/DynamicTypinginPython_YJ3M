commit 1517e1b173dc9757923edb3048dcf2cbba01dca5
Author: Skipper Seabold <jsseabold@gmail.com>
Date:   Mon Feb 20 19:13:00 2012 -0500

    ENH: Add BMonthBegin and BQuarterBegin

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index ec884e73f..6762ff075 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -102,6 +102,19 @@ def normalize_date(dt):
         dt = _dt_box(dt)
     return datetime(dt.year, dt.month, dt.day)
 
+def _get_firstbday(wkday):
+    """
+    wkday is the result of calendar.monthrange(year, month)
+
+    If it's a saturday or sunday, increment first business day to reflect this
+    """
+    firstBDay = 1
+    if wkday == 5: # on Saturday
+        firstBDay = 3
+    elif wkday == 6: # on Sunday
+        firstBDay = 2
+    return firstBDay
+
 #-------------------------------------------------------------------------------
 # DateOffset
 
@@ -372,7 +385,7 @@ class MonthEnd(DateOffset, CacheableOffset):
         return someDate.day == days_in_month
 
 class MonthBegin(DateOffset, CacheableOffset):
-    """DateOFfset of one month begin"""
+    """DateOffset of one month at beginning"""
 
     _normalizeFirst = True
 
@@ -415,6 +428,28 @@ class BMonthEnd(DateOffset, CacheableOffset):
             other = other - BDay()
         return other
 
+class BMonthBegin(DateOffset, CacheableOffset):
+    """DateOffset of one business month at beginning"""
+
+    _normalizeFirst = True
+
+    def apply(self, other):
+        n = self.n
+
+        wkday, _ = calendar.monthrange(other.year, other.month)
+        firstBDay = _get_firstbday(wkday)
+
+        if other.day > firstBDay:
+            if n <= 0:
+                # as if rolled forward already
+                n = n + 1
+
+        other = other + lib.Delta(months=n)
+        wkday, _ = calendar.monthrange(other.year, other.month)
+        firstBDay = _get_firstbday(wkday)
+        result = datetime(other.year, other.month, firstBDay)
+        return result
+
 
 class Week(DateOffset, CacheableOffset):
     """
@@ -581,6 +616,49 @@ class BQuarterEnd(DateOffset, CacheableOffset):
         modMonth = (someDate.month - self.startingMonth) % 3
         return BMonthEnd().onOffset(someDate) and modMonth == 0
 
+class BQuarterBegin(DateOffset, CacheableOffset):
+    _outputName = "BusinessQuarterBegin"
+    _normalizeFirst = True
+
+    def __init__(self, n=1, **kwds):
+        self.n = n
+        self.startingMonth = kwds.get('startingMonth', 3)
+
+        self.offset = BMonthBegin(3)
+        self.kwds = kwds
+
+    def isAnchored(self):
+        return (self.n == 1 and self.startingMonth is not None)
+
+    def apply(self, other):
+        n = self.n
+
+        if self._normalizeFirst:
+            other = normalize_date(other)
+
+        wkday, _ = calendar.monthrange(other.year, other.month)
+
+        firstBDay = _get_firstbday(wkday)
+
+        monthsSince = (other.month - self.startingMonth) % 3
+        if monthsSince == 3: # on offset
+            monthsSince = 0
+
+        if n <= 0 and monthsSince != 0: # make sure to roll forward so negate
+            monthsSince = monthsSince - 3
+        if n <= 0 and (monthsSince == 0 and other.day > firstBDay):
+            n = n + 1
+        elif n > 0 and (monthsSince == 0 and other.day < firstBDay):
+            n = n - 1
+
+
+        other = other + lib.Delta(months=3*n - monthsSince)
+        wkday, _ = calendar.monthrange(other.year, other.month)
+        firstBDay = _get_firstbday(wkday)
+        result = datetime(other.year, other.month, firstBDay)
+        return result
+
+
 class QuarterEnd(DateOffset, CacheableOffset):
     """DateOffset increments between business Quarter dates
     startingMonth = 1 corresponds to dates like 1/31/2007, 4/30/2007, ...
@@ -718,11 +796,7 @@ class BYearBegin(DateOffset, CacheableOffset):
 
         wkday, days_in_month = calendar.monthrange(other.year, self.month)
 
-        firstBDay = 1
-        if wkday == 5: # on Saturday
-            firstBDay = 3
-        elif wkday == 6: # on Sunday
-            firstBDay = 2
+        firstBDay = _get_firstbday(wkday)
 
         years = n
         if n > 0:
@@ -738,12 +812,7 @@ class BYearBegin(DateOffset, CacheableOffset):
 
         wkday, days_in_month = calendar.monthrange(other.year, self.month)
 
-
-        firstBDay = 1
-        if wkday == 5: # on Saturday
-            firstBDay = 3
-        elif wkday == 6: # on Sunday
-            firstBDay = 2
+        firstBDay = _get_firstbday(wkday)
 
         result = datetime(other.year, self.month, firstBDay)
         return result
@@ -948,19 +1017,19 @@ _newoffsetMap = {
        "Q@NOV" : QuarterEnd(startingMonth=11),
        "Q@DEC" : QuarterEnd(startingMonth=12),
        # Quarterly - Calendar (Start)
-       #"QS@JAN" : QuarterBegin(startingMonth=1),
-       #"QS"     : QuarterBegin(startingMonth=1),
-       #"QS@FEB" : QuarterBegin(startingMonth=2),
-       #"QS@MAR" : QuarterBegin(startingMonth=3),
-       #"QS@APR" : QuarterBegin(startingMonth=4),
-       #"QS@MAY" : QuarterBegin(startingMonth=5),
-       #"QS@JUN" : QuarterBegin(startingMonth=6),
-       #"QS@JUL" : QuarterBegin(startingMonth=7),
-       #"QS@AUG" : QuarterBegin(startingMonth=8),
-       #"QS@SEP" : QuarterBegin(startingMonth=9),
-       #"QS@OCT" : QuarterBegin(startingMonth=10),
-       #"QS@NOV" : QuarterBegin(startingMonth=11),
-       #"QS@DEC" : QuarterBegin(startingMonth=12),
+       "QS@JAN" : QuarterBegin(startingMonth=1),
+       "QS"     : QuarterBegin(startingMonth=1),
+       "QS@FEB" : QuarterBegin(startingMonth=2),
+       "QS@MAR" : QuarterBegin(startingMonth=3),
+       "QS@APR" : QuarterBegin(startingMonth=4),
+       "QS@MAY" : QuarterBegin(startingMonth=5),
+       "QS@JUN" : QuarterBegin(startingMonth=6),
+       "QS@JUL" : QuarterBegin(startingMonth=7),
+       "QS@AUG" : QuarterBegin(startingMonth=8),
+       "QS@SEP" : QuarterBegin(startingMonth=9),
+       "QS@OCT" : QuarterBegin(startingMonth=10),
+       "QS@NOV" : QuarterBegin(startingMonth=11),
+       "QS@DEC" : QuarterBegin(startingMonth=12),
        # Quarterly - Business
        "BQ@JAN" : BQuarterEnd(startingMonth=1),
        "BQ@FEB" : BQuarterEnd(startingMonth=2),
@@ -976,29 +1045,29 @@ _newoffsetMap = {
        "BQ@NOV" : BQuarterEnd(startingMonth=11),
        "BQ@DEC" : BQuarterEnd(startingMonth=12),
        # Quarterly - Business (Start)
-       #"BQS@JAN" : BQuarterBegin(startingMonth=1),
-       #"BQS"     : BQuarterBegin(startingMonth=1),
-       #"BQS@FEB" : BQuarterBegin(startingMonth=2),
-       #"BQS@MAR" : BQuarterBegin(startingMonth=3),
-       #"BQS@APR" : BQuarterBegin(startingMonth=4),
-       #"BQS@MAY" : BQuarterBegin(startingMonth=5),
-       #"BQS@JUN" : BQuarterBegin(startingMonth=6),
-       #"BQS@JUL" : BQuarterBegin(startingMonth=7),
-       #"BQS@AUG" : BQuarterBegin(startingMonth=8),
-       #"BQS@SEP" : BQuarterBegin(startingMonth=9),
-       #"BQS@OCT" : BQuarterBegin(startingMonth=10),
-       #"BQS@NOV" : BQuarterBegin(startingMonth=11),
-       #"BQS@DEC" : BQuarterBegin(startingMonth=12),
+       "BQS@JAN" : BQuarterBegin(startingMonth=1),
+       "BQS"     : BQuarterBegin(startingMonth=1),
+       "BQS@FEB" : BQuarterBegin(startingMonth=2),
+       "BQS@MAR" : BQuarterBegin(startingMonth=3),
+       "BQS@APR" : BQuarterBegin(startingMonth=4),
+       "BQS@MAY" : BQuarterBegin(startingMonth=5),
+       "BQS@JUN" : BQuarterBegin(startingMonth=6),
+       "BQS@JUL" : BQuarterBegin(startingMonth=7),
+       "BQS@AUG" : BQuarterBegin(startingMonth=8),
+       "BQS@SEP" : BQuarterBegin(startingMonth=9),
+       "BQS@OCT" : BQuarterBegin(startingMonth=10),
+       "BQS@NOV" : BQuarterBegin(startingMonth=11),
+       "BQS@DEC" : BQuarterBegin(startingMonth=12),
        # Monthly - Calendar
        "M"      : MonthEnd(),
        "EOM"    : MonthEnd(),
-       #"MS"     : MonthBegin(),
-       #"SOM"    : MonthBegin(),
+       "MS"     : MonthBegin(),
+       "SOM"    : MonthBegin(),
        # Monthly - Business
        "BM"     : BMonthEnd(),
        "BEOM"   : BMonthEnd(),
-       #"BMS"    : BMonthBegin(),
-       #"BSOM"   : BMonthBegin(),
+       "BMS"    : BMonthBegin(),
+       "BSOM"   : BMonthBegin(),
        # Weekly
        "W@MON" : Week(weekday=0),
        "WS"    : Week(weekday=0),
