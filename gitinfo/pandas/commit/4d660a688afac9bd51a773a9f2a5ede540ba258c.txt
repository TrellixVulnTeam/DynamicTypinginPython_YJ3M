commit 4d660a688afac9bd51a773a9f2a5ede540ba258c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Mar 24 22:12:08 2010 +0000

    working a bit on docs
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@147 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/doc/make.bat b/doc/make.bat
deleted file mode 100644
index 4ddf9a8bc..000000000
--- a/doc/make.bat
+++ /dev/null
@@ -1,113 +0,0 @@
-@ECHO OFF
-
-REM Command file for Sphinx documentation
-
-set SPHINXBUILD=sphinx-build
-set BUILDDIR=_build
-set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
-if NOT "%PAPER%" == "" (
-	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
-)
-
-if "%1" == "" goto help
-
-if "%1" == "help" (
-	:help
-	echo.Please use `make ^<target^>` where ^<target^> is one of
-	echo.  html      to make standalone HTML files
-	echo.  dirhtml   to make HTML files named index.html in directories
-	echo.  pickle    to make pickle files
-	echo.  json      to make JSON files
-	echo.  htmlhelp  to make HTML files and a HTML help project
-	echo.  qthelp    to make HTML files and a qthelp project
-	echo.  latex     to make LaTeX files, you can set PAPER=a4 or PAPER=letter
-	echo.  changes   to make an overview over all changed/added/deprecated items
-	echo.  linkcheck to check all external links for integrity
-	echo.  doctest   to run all doctests embedded in the documentation if enabled
-	goto end
-)
-
-if "%1" == "clean" (
-	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
-	del /q /s %BUILDDIR%\*
-	goto end
-)
-
-if "%1" == "html" (
-	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
-	echo.
-	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
-	goto end
-)
-
-if "%1" == "dirhtml" (
-	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
-	echo.
-	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
-	goto end
-)
-
-if "%1" == "pickle" (
-	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
-	echo.
-	echo.Build finished; now you can process the pickle files.
-	goto end
-)
-
-if "%1" == "json" (
-	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
-	echo.
-	echo.Build finished; now you can process the JSON files.
-	goto end
-)
-
-if "%1" == "htmlhelp" (
-	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
-	echo.
-	echo.Build finished; now you can run HTML Help Workshop with the ^
-.hhp project file in %BUILDDIR%/htmlhelp.
-	goto end
-)
-
-if "%1" == "qthelp" (
-	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
-	echo.
-	echo.Build finished; now you can run "qcollectiongenerator" with the ^
-.qhcp project file in %BUILDDIR%/qthelp, like this:
-	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\pandas.qhcp
-	echo.To view the help file:
-	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\pandas.ghc
-	goto end
-)
-
-if "%1" == "latex" (
-	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
-	echo.
-	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
-	goto end
-)
-
-if "%1" == "changes" (
-	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
-	echo.
-	echo.The overview file is in %BUILDDIR%/changes.
-	goto end
-)
-
-if "%1" == "linkcheck" (
-	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
-	echo.
-	echo.Link check complete; look for any errors in the above output ^
-or in %BUILDDIR%/linkcheck/output.txt.
-	goto end
-)
-
-if "%1" == "doctest" (
-	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
-	echo.
-	echo.Testing of doctests in the sources finished, look at the ^
-results in %BUILDDIR%/doctest/output.txt.
-	goto end
-)
-
-:end
diff --git a/doc/source/dataframe.rst b/doc/source/dataframe.rst
index cbe7b6fe6..6f7f3650e 100644
--- a/doc/source/dataframe.rst
+++ b/doc/source/dataframe.rst
@@ -6,39 +6,46 @@
 DataFrame and DataMatrix
 ************************
 
+**DataFrame** is a both 2D-matrix- and dict-like object implementing a
+named collection of identically-indexed Series objects. There is
+another important class called **DataMatrix** which has almost
+identical behavior to DataFrame, differing only in the internal
+implementation. Rather than create confusion, we will focus on
+DataFrame for this guide and explain later why to use one over the
+other depending on your application.
+
+For many users, DataFrame will be the most commonly used object in
+pandas, as it can serve as the primary container for a full data set
+of interest. As we will see below, it enables operations involving
+multiple time series or cross sections with ease.
+
 .. class:: DataFrame
 
    :Parameters:
-       **data** : dict
-           * a sequence of objects (numbers, characters, objects)
-           * an :class:`~numpy.ndarray` or one of its subclass.
+       **data** : dict or 2-D ndarray
+           * If the dict contains Series, an index need not be specified.
+             The resulting frame will be the union of all the contained
+             Series indices.
 
        **index** : {array_like}
+           Explicit index to conform to, required for ndarray data argument
+
+       **columns** : {array_like}
+           Explicit set of columns to include, required for ndarray data argument
 
-   .. seealso::
-       :func:`DataFrame.fromDict`
+       **dtype** : Python type alias or :class:`~numpy.dtype`
+           Type to attempt to cast data to
+
+:class:`~pandas.DataMatrix` has a similar constructor and can be used interchangeably.
 
 Basics
 ------
 
-**DataFrame** is a both 2D-matrix- and dict-like object implementing a
-named collection of identically-indexed Series objects. There is
-another important class called **DataMatrix** which has almost
-identical behavior to DataFrame, differing only in the internal
-implementation. Rather than create confusion, we will focus on
-DataFrame for this guide and explain later why to use one over the
-other depending on your application.
-
 .. note::
 
     Unlike Series, neither DataFrame nor DataMatrix is a subclass of
     numpy.ndarray.
 
-For many users, DataFrame / DataMatrix is the most commonly used
-object in pandas, as it can serve as the primary container for a full
-data set of interest. As we will see below, it enables operations
-involving multiple time series or cross sections with ease.
-
 The canonical DataFrame containing time series data takes this form,
 which will be used for many examples to follow:
 
@@ -107,10 +114,10 @@ attribute and **cols** method, respectively:
 Construction
 ------------
 
-There are several ways to create a DataFrame:
+There are many ways to create a DataFrame:
 
    * From a dict of ndarrays or Series
-   * From a 2D ndarray and arrays of index and column names
+   * From a 2D ndarray plus corresponding row and column labels
    * From a NumPy structured (record) array
    * From a nested dictionary
 
@@ -118,8 +125,6 @@ There are several ways to create a DataFrame:
    :toctree: generated/
 
    DataFrame.__init__
-   DataFrame.fromDict
-   DataFrame.fromMatrix
    DataFrame.fromRecords
 
 Indexing
diff --git a/doc/source/series.rst b/doc/source/series.rst
index 7ab9b66c5..2f6b8c798 100644
--- a/doc/source/series.rst
+++ b/doc/source/series.rst
@@ -22,18 +22,21 @@ NumPy-based functions expecting one-dimensional ndarrays.
    1-dimensional data.
 
    :Parameters:
-       **data** : {array_like}
-           Data portion of the array. Any data that is valid for
-           constructing a :class:`~numpy.ndarray` can be used here:
+       **data** : {array_like, dict}
+           Data to store in the array. Any data that is valid for
+           constructing a :class:`~numpy.ndarray` can be used here.
 
            * a sequence of objects (numbers, characters, objects)
            * an :class:`~numpy.ndarray` or one of its subclass.
 
+	   Additionally, :class:`dict` is a valid input, allowing the
+	   user to optionally forgo specifying an index.
+
        **index** : {array_like}
-           A :class:`DateArray` instance storing the date information.
+           Sequence of labels for input data.
 
    .. seealso::
-       :func:`Series.fromDict`
+       :func:`Series.fromValue`
 
 .. note::
 
