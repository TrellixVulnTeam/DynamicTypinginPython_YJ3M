commit 24e8fc03fd37847ade096220f834ea9b95e324d5
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon Sep 17 14:39:50 2012 -0400

    BUG: asof failure with PeriodIndex #1883

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 5447d0e9c..5bcf0c407 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -21,7 +21,7 @@ from pandas.core.index import (Index, MultiIndex, InvalidIndexError,
                                _ensure_index, _handle_legacy_indexes)
 from pandas.core.indexing import _SeriesIndexer
 from pandas.tseries.index import DatetimeIndex
-from pandas.tseries.period import PeriodIndex
+from pandas.tseries.period import PeriodIndex, Period
 from pandas.util import py3compat
 from pandas.util.terminal import get_terminal_size
 import pandas.core.common as com
@@ -2537,11 +2537,18 @@ copy : boolean, default False
             where = datetools.to_datetime(where)
 
         values = self.values
+        time_index = self.index
+        is_periodindex = isinstance(self.index, PeriodIndex)
+        if is_periodindex:
+            time_index = Index(self.index.values)
 
         if not hasattr(where, '__iter__'):
-            if where < self.index[0]:
+            if is_periodindex:
+                where = Period(where, freq=self.index.freq).ordinal
+
+            if where < time_index[0]:
                 return np.nan
-            loc = self.index.searchsorted(where, side='right')
+            loc = time_index.searchsorted(where, side='right')
             if loc > 0:
                 loc -= 1
             while isnull(values[loc]) and loc > 0:
@@ -2551,7 +2558,16 @@ copy : boolean, default False
         if not isinstance(where, Index):
             where = Index(where)
 
-        locs = self.index.asof_locs(where, notnull(values))
+        where_index = where
+        if is_periodindex:
+            if isinstance(where_index, DatetimeIndex):
+                where_index = PeriodIndex(where_index.values,
+                                          freq=self.index.freq)
+
+            if isinstance(where_index, PeriodIndex):
+                where_index = Index(where_index.values)
+
+        locs = time_index.asof_locs(where_index, notnull(values))
         new_values = com.take_1d(values, locs)
         return Series(new_values, index=where, name=self.name)
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index ee498205d..88ab1eb81 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -2276,6 +2276,50 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         d = self.ts.index[0] - datetools.bday
         self.assert_(np.isnan(self.ts.asof(d)))
 
+    def test_asof_periodindex(self):
+        from pandas import period_range, PeriodIndex
+        # array or list or dates
+        N = 50
+        rng = period_range('1/1/1990', periods=N, freq='H')
+        ts = Series(np.random.randn(N), index=rng)
+        ts[15:30] = np.nan
+        dates = date_range('1/1/1990', periods=N * 3, freq='37min')
+
+        result = ts.asof(dates)
+        self.assert_(notnull(result).all())
+        lb = ts.index[14]
+        ub = ts.index[30]
+
+        result = ts.asof(list(dates))
+        self.assert_(notnull(result).all())
+        lb = ts.index[14]
+        ub = ts.index[30]
+
+        pix = PeriodIndex(result.index.values, freq='H')
+        mask = (pix >= lb) & (pix < ub)
+        rs = result[mask]
+        self.assert_((rs == ts[lb]).all())
+
+        ts[5:10] = np.NaN
+        ts[15:20] = np.NaN
+
+        val1 = ts.asof(ts.index[7])
+        val2 = ts.asof(ts.index[19])
+
+        self.assertEqual(val1, ts[4])
+        self.assertEqual(val2, ts[14])
+
+        # accepts strings
+        val1 = ts.asof(str(ts.index[7]))
+        self.assertEqual(val1, ts[4])
+
+        # in there
+        self.assertEqual(ts.asof(ts.index[3]), ts[3])
+
+        # no as of value
+        d = ts.index[0].to_timestamp() - datetools.bday
+        self.assert_(np.isnan(ts.asof(d)))
+
     def test_asof_more(self):
         from pandas import date_range
         s = Series([nan, nan, 1, 2, nan, nan, 3, 4, 5],
diff --git a/pandas/tseries/period.py b/pandas/tseries/period.py
index 8d195a6d9..c81cd595b 100644
--- a/pandas/tseries/period.py
+++ b/pandas/tseries/period.py
@@ -1,4 +1,6 @@
 # pylint: disable=E1101,E1103,W0232
+import operator
+
 from datetime import datetime, date
 import numpy as np
 
@@ -33,6 +35,7 @@ def _field_accessor(name, alias):
     f.__name__ = name
     return property(f)
 
+
 class Period(object):
 
     __slots__ = ['freq', 'ordinal']
@@ -423,8 +426,6 @@ def dt64arr_to_periodarr(data, freq):
     return plib.dt64arr_to_periodarr(data.view('i8'), base)
 
 # --- Period index sketch
-
-
 def _period_index_cmp(opname):
     """
     Wrap comparison operations to convert datetime-like to datetime64
@@ -445,7 +446,6 @@ def _period_index_cmp(opname):
         return result
     return wrapper
 
-
 _INT64_DTYPE = np.dtype(np.int64)
 _NS_DTYPE = np.dtype('M8[ns]')
 
