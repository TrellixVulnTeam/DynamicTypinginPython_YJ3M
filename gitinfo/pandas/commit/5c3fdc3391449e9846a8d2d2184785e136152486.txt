commit 5c3fdc3391449e9846a8d2d2184785e136152486
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Mon May 20 22:33:26 2013 -0400

    CLN: pandas stata reader should clean up after itself
    
    CLN: ensure_clean in stata temp data files, thanks @cpcloud

diff --git a/pandas/io/tests/test_stata.py b/pandas/io/tests/test_stata.py
index 79cec2870..51062b2ab 100644
--- a/pandas/io/tests/test_stata.py
+++ b/pandas/io/tests/test_stata.py
@@ -13,12 +13,7 @@ from pandas.core.frame import DataFrame
 from pandas.io.parsers import read_csv
 from pandas.io.stata import read_stata, StataReader, StataWriter
 import pandas.util.testing as tm
-
-
-def curpath():
-    pth, _ = os.path.split(os.path.abspath(__file__))
-    return pth
-
+from pandas.util.testing import ensure_clean
 
 class StataTests(unittest.TestCase):
 
@@ -136,20 +131,22 @@ class StataTests(unittest.TestCase):
         original = DataFrame([(np.nan, np.nan, np.nan, np.nan, np.nan)],
                              columns=['float_miss', 'double_miss', 'byte_miss', 'int_miss', 'long_miss'])
 
-        writer = StataWriter(self.dta5, original, None, False)
-        writer.write_file()
+        with ensure_clean(self.dta5) as path:
+            writer = StataWriter(path, original, None, False)
+            writer.write_file()
 
-        written_and_read_again = self.read_dta(self.dta5)
-        tm.assert_frame_equal(written_and_read_again, original)
+            written_and_read_again = self.read_dta(path)
+            tm.assert_frame_equal(written_and_read_again, original)
 
     def test_write_dta6(self):
         original = self.read_csv(self.csv3)
 
-        writer = StataWriter(self.dta6, original, None, False)
-        writer.write_file()
+        with ensure_clean(self.dta6) as path:
+            writer = StataWriter(path, original, None, False)
+            writer.write_file()
 
-        written_and_read_again = self.read_dta(self.dta6)
-        tm.assert_frame_equal(written_and_read_again, original)
+            written_and_read_again = self.read_dta(path)
+            tm.assert_frame_equal(written_and_read_again, original)
 
     @nose.tools.nottest
     def test_read_dta7(self):
