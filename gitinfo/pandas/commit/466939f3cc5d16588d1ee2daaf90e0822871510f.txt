commit 466939f3cc5d16588d1ee2daaf90e0822871510f
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Wed Jun 19 11:49:18 2013 -0400

    CLN/DOC: convert GH* issue mentions to the extlinks version

diff --git a/doc/source/conf.py b/doc/source/conf.py
index 60218a1d2..d9db40875 100644
--- a/doc/source/conf.py
+++ b/doc/source/conf.py
@@ -243,7 +243,7 @@ autosummary_generate = glob.glob("*.rst")
 
 # extlinks alias
 extlinks = {'issue': ('https://github.com/pydata/pandas/issues/%s',
-                      'issue '),
+                      'GH'),
             'pull request': ('https://github.com/pydata/pandas/pulls/%s',
                              'pull request '),
             'wiki': ('https://github.com/pydata/pandas/pulls/%s',
diff --git a/doc/source/v0.10.0.txt b/doc/source/v0.10.0.txt
index 51075a61b..f90cca2fb 100644
--- a/doc/source/v0.10.0.txt
+++ b/doc/source/v0.10.0.txt
@@ -159,7 +159,7 @@ Convenience methods ``ffill`` and  ``bfill`` have been added:
       s
       s.apply(f)
 
-- New API functions for working with pandas options (GH2097_):
+- New API functions for working with pandas options (:issue:`2097`):
 
   - ``get_option`` / ``set_option`` - get/set the value of an option. Partial
     names are accepted.  - ``reset_option`` - reset one or more options to
@@ -174,7 +174,7 @@ Convenience methods ``ffill`` and  ``bfill`` have been added:
 
      get_option("display.max_rows")
 
-- to_string() methods now always return unicode strings  (GH2224_).
+- to_string() methods now always return unicode strings  (:issue:`2224`).
 
 New features
 ~~~~~~~~~~~~
@@ -297,22 +297,22 @@ Updated PyTables Support
 
 - performance improvments on table writing
 - support for arbitrarily indexed dimensions
-- ``SparseSeries`` now has a ``density`` property (GH2384_)
+- ``SparseSeries`` now has a ``density`` property (:issue:`2384`)
 - enable ``Series.str.strip/lstrip/rstrip`` methods to take an input argument
-  to strip arbitrary characters (GH2411_)
+  to strip arbitrary characters (:issue:`2411`)
 - implement ``value_vars`` in ``melt`` to limit values to certain columns
-  and add ``melt`` to pandas namespace (GH2412_)
+  and add ``melt`` to pandas namespace (:issue:`2412`)
 
 **Bug Fixes**
 
-- added ``Term`` method of specifying where conditions (GH1996_).
+- added ``Term`` method of specifying where conditions (:issue:`1996`).
 - ``del store['df']`` now call ``store.remove('df')`` for store deletion
 - deleting of consecutive rows is much faster than before
 - ``min_itemsize`` parameter can be specified in table creation to force a
   minimum size for indexing columns (the previous implementation would set the
   column size based on the first append)
 - indexing support via ``create_table_index`` (requires PyTables >= 2.3)
-  (GH698_).
+  (:issue:`698`).
 - appending on a store would fail if the table was not first created via ``put``
 - fixed issue with missing attributes after loading a pickled dataframe (GH2431)
 - minor change to select and remove: require a table ONLY if where is also
@@ -354,12 +354,3 @@ See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
 on GitHub for a complete list.
 
-.. _GH698: https://github.com/pydata/pandas/issues/698
-.. _GH1996: https://github.com/pydata/pandas/issues/1996
-.. _GH2316: https://github.com/pydata/pandas/issues/2316
-.. _GH2097: https://github.com/pydata/pandas/issues/2097
-.. _GH2224: https://github.com/pydata/pandas/issues/2224
-.. _GH2431: https://github.com/pydata/pandas/issues/2431
-.. _GH2412: https://github.com/pydata/pandas/issues/2412
-.. _GH2411: https://github.com/pydata/pandas/issues/2411
-.. _GH2384: https://github.com/pydata/pandas/issues/2384
diff --git a/doc/source/v0.10.1.txt b/doc/source/v0.10.1.txt
index dafa4300a..ffb44150e 100644
--- a/doc/source/v0.10.1.txt
+++ b/doc/source/v0.10.1.txt
@@ -15,14 +15,14 @@ API changes
 
 - Functions taking an ``inplace`` option return the calling object as before. A
   deprecation message has been added
-- Groupby aggregations Max/Min no longer exclude non-numeric data (GH2700_)
+- Groupby aggregations Max/Min no longer exclude non-numeric data (:issue:`2700`)
 - Resampling an empty DataFrame now returns an empty DataFrame instead of
-  raising an exception (GH2640_)
+  raising an exception (:issue:`2640`)
 - The file reader will now raise an exception when NA values are found in an
   explicitly specified integer column instead of converting the column to float
-  (GH2631_)
+  (:issue:`2631`)
 - DatetimeIndex.unique now returns a DatetimeIndex with the same name and
-- timezone instead of an array (GH2563_)
+- timezone instead of an array (:issue:`2563`)
 
 New features
 ~~~~~~~~~~~~
@@ -164,76 +164,49 @@ combined result, by using ``where`` on a selector table.
 - ``Select`` now supports passing ``start`` and ``stop`` to provide selection
   space limiting in selection.
 
-- Greatly improved ISO8601 (e.g., yyyy-mm-dd) date parsing for file parsers (GH2698_)
+- Greatly improved ISO8601 (e.g., yyyy-mm-dd) date parsing for file parsers (:issue:`2698`)
 - Allow ``DataFrame.merge`` to handle combinatorial sizes too large for 64-bit
-  integer (GH2690_)
-- Series now has unary negation (-series) and inversion (~series) operators (GH2686_)
-- DataFrame.plot now includes a ``logx`` parameter to change the x-axis to log scale (GH2327_)
-- Series arithmetic operators can now handle constant and ndarray input (GH2574_)
-- ExcelFile now takes a ``kind`` argument to specify the file type (GH2613_)
-- A faster implementation for Series.str methods (GH2602_)
+  integer (:issue:`2690`)
+- Series now has unary negation (-series) and inversion (~series) operators (:issue:`2686`)
+- DataFrame.plot now includes a ``logx`` parameter to change the x-axis to log scale (:issue:`2327`)
+- Series arithmetic operators can now handle constant and ndarray input (:issue:`2574`)
+- ExcelFile now takes a ``kind`` argument to specify the file type (:issue:`2613`)
+- A faster implementation for Series.str methods (:issue:`2602`)
 
 **Bug Fixes**
 
 - ``HDFStore`` tables can now store ``float32`` types correctly (cannot be
   mixed with ``float64`` however)
-- Fixed Google Analytics prefix when specifying request segment (GH2713_).
+- Fixed Google Analytics prefix when specifying request segment (:issue:`2713`).
 - Function to reset Google Analytics token store so users can recover from
-  improperly setup client secrets (GH2687_).
-- Fixed groupby bug resulting in segfault when passing in MultiIndex (GH2706_)
+  improperly setup client secrets (:issue:`2687`).
+- Fixed groupby bug resulting in segfault when passing in MultiIndex (:issue:`2706`)
 - Fixed bug where passing a Series with datetime64 values into `to_datetime`
-  results in bogus output values (GH2699_)
+  results in bogus output values (:issue:`2699`)
 - Fixed bug in ``pattern in HDFStore`` expressions when pattern is not a valid
-  regex (GH2694_)
-- Fixed performance issues while aggregating boolean data (GH2692_)
+  regex (:issue:`2694`)
+- Fixed performance issues while aggregating boolean data (:issue:`2692`)
 - When given a boolean mask key and a Series of new values, Series __setitem__
-  will now align the incoming values with the original Series (GH2686_)
+  will now align the incoming values with the original Series (:issue:`2686`)
 - Fixed MemoryError caused by performing counting sort on sorting MultiIndex
-  levels with a very large number of combinatorial values (GH2684_)
+  levels with a very large number of combinatorial values (:issue:`2684`)
 - Fixed bug that causes plotting to fail when the index is a DatetimeIndex with
-  a fixed-offset timezone (GH2683_)
+  a fixed-offset timezone (:issue:`2683`)
 - Corrected businessday subtraction logic when the offset is more than 5 bdays
-  and the starting date is on a weekend (GH2680_)
+  and the starting date is on a weekend (:issue:`2680`)
 - Fixed C file parser behavior when the file has more columns than data
-  (GH2668_)
+  (:issue:`2668`)
 - Fixed file reader bug that misaligned columns with data in the presence of an
   implicit column and a specified `usecols` value
 - DataFrames with numerical or datetime indices are now sorted prior to
-  plotting (GH2609_)
+  plotting (:issue:`2609`)
 - Fixed DataFrame.from_records error when passed columns, index, but empty
-  records (GH2633_)
-- Several bug fixed for Series operations when dtype is datetime64 (GH2689_,
-  GH2629_, GH2626_)
+  records (:issue:`2633`)
+- Several bug fixed for Series operations when dtype is datetime64 (:issue:`2689`,
+  :issue:`2629`, :issue:`2626`)
 
 
 See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
 on GitHub for a complete list.
 
-.. _GH2706: https://github.com/pydata/pandas/issues/2706
-.. _GH2700: https://github.com/pydata/pandas/issues/2700
-.. _GH2699: https://github.com/pydata/pandas/issues/2699
-.. _GH2698: https://github.com/pydata/pandas/issues/2698
-.. _GH2694: https://github.com/pydata/pandas/issues/2694
-.. _GH2692: https://github.com/pydata/pandas/issues/2692
-.. _GH2690: https://github.com/pydata/pandas/issues/2690
-.. _GH2713: https://github.com/pydata/pandas/issues/2713
-.. _GH2689: https://github.com/pydata/pandas/issues/2689
-.. _GH2686: https://github.com/pydata/pandas/issues/2686
-.. _GH2684: https://github.com/pydata/pandas/issues/2684
-.. _GH2683: https://github.com/pydata/pandas/issues/2683
-.. _GH2680: https://github.com/pydata/pandas/issues/2680
-.. _GH2668: https://github.com/pydata/pandas/issues/2668
-.. _GH2640: https://github.com/pydata/pandas/issues/2640
-.. _GH2609: https://github.com/pydata/pandas/issues/2609
-.. _GH2327: https://github.com/pydata/pandas/issues/2327
-.. _GH2574: https://github.com/pydata/pandas/issues/2574
-.. _GH2609: https://github.com/pydata/pandas/issues/2609
-.. _GH2631: https://github.com/pydata/pandas/issues/2631
-.. _GH2633: https://github.com/pydata/pandas/issues/2633
-.. _GH2629: https://github.com/pydata/pandas/issues/2629
-.. _GH2626: https://github.com/pydata/pandas/issues/2626
-.. _GH2613: https://github.com/pydata/pandas/issues/2613
-.. _GH2602: https://github.com/pydata/pandas/issues/2602
-.. _GH2687: https://github.com/pydata/pandas/issues/2687
-.. _GH2563: https://github.com/pydata/pandas/issues/2563
diff --git a/doc/source/v0.11.0.txt b/doc/source/v0.11.0.txt
index b6b35fdda..74357a972 100644
--- a/doc/source/v0.11.0.txt
+++ b/doc/source/v0.11.0.txt
@@ -129,7 +129,7 @@ Dtype Gotchas
 
 Starting in 0.11.0, construction of DataFrame/Series will use default dtypes of ``int64`` and ``float64``,
 *regardless of platform*. This is not an apparent change from earlier versions of pandas. If you specify
-dtypes, they *WILL* be respected, however (GH2837_)
+dtypes, they *WILL* be respected, however (:issue:`2837`)
 
 The following will all result in ``int64`` dtypes
 
@@ -176,7 +176,7 @@ Datetimes Conversion
 Datetime64[ns] columns in a DataFrame (or a Series) allow the use of ``np.nan`` to indicate a nan value,
 in addition to the traditional ``NaT``, or not-a-time. This allows convenient nan setting in a generic way.
 Furthermore ``datetime64[ns]`` columns are created by default, when passed datetimelike objects (*this change was introduced in 0.10.1*)
-(GH2809_, GH2810_)
+(:issue:`2809`, :issue:`2810`)
 
 .. ipython:: python
 
@@ -210,7 +210,7 @@ API changes
 ~~~~~~~~~~~
 
   - Added to_series() method to indicies, to facilitate the creation of indexers
-    (GH3275_)
+    (:issue:`3275`)
 
   - ``HDFStore``
 
@@ -221,7 +221,7 @@ API changes
 Enhancements
 ~~~~~~~~~~~~
 
-  - Improved performance of df.to_csv() by up to 10x in some cases. (GH3059_)
+  - Improved performance of df.to_csv() by up to 10x in some cases. (:issue:`3059`)
 
   - Numexpr is now a :ref:`Recommended Dependencies <install.recommended_dependencies>`, to accelerate certain
     types of numerical and boolean operations
@@ -248,11 +248,11 @@ Enhancements
     - provide dotted attribute access to ``get`` from stores, e.g. ``store.df == store['df']``
 
     - new keywords ``iterator=boolean``, and ``chunksize=number_in_a_chunk`` are
-      provided to support iteration on ``select`` and ``select_as_multiple`` (GH3076_)
+      provided to support iteration on ``select`` and ``select_as_multiple`` (:issue:`3076`)
 
-  - You can now select timestamps from an *unordered* timeseries similarly to an *ordered* timeseries (GH2437_)
+  - You can now select timestamps from an *unordered* timeseries similarly to an *ordered* timeseries (:issue:`2437`)
 
-  - You can now select with a string from a DataFrame with a datelike index, in a similar way to a Series (GH3070_)
+  - You can now select with a string from a DataFrame with a datelike index, in a similar way to a Series (:issue:`3070`)
 
     .. ipython:: python
 
@@ -291,59 +291,36 @@ Enhancements
       ``above_below``. This allows the user to specify if they would like to
       only return forward looking data for options near the current stock
       price. This just obtains the data from Options.get_near_stock_price
-      instead of Options.get_xxx_data() (GH2758_).
+      instead of Options.get_xxx_data() (:issue:`2758`).
 
   - Cursor coordinate information is now displayed in time-series plots.
 
   - added option `display.max_seq_items` to control the number of
-    elements printed per sequence pprinting it.  (GH2979_)
+    elements printed per sequence pprinting it.  (:issue:`2979`)
 
   - added option `display.chop_threshold` to control display of small numerical
-    values. (GH2739_)
+    values. (:issue:`2739`)
 
   - added option `display.max_info_rows` to prevent verbose_info from being
-    calculated for frames above 1M rows (configurable). (GH2807_, GH2918_)
+    calculated for frames above 1M rows (configurable). (:issue:`2807`, :issue:`2918`)
 
   - value_counts() now accepts a "normalize" argument, for normalized
-    histograms. (GH2710_).
+    histograms. (:issue:`2710`).
 
   - DataFrame.from_records now accepts not only dicts but any instance of
     the collections.Mapping ABC.
 
   - added option `display.mpl_style` providing a sleeker visual style
-    for plots. Based on https://gist.github.com/huyng/816622 (GH3075_).
+    for plots. Based on https://gist.github.com/huyng/816622 (:issue:`3075`).
 
   - Treat boolean values as integers (values 1 and 0) for numeric
-    operations. (GH2641_)
+    operations. (:issue:`2641`)
 
   - to_html() now accepts an optional "escape" argument to control reserved
     HTML character escaping (enabled by default) and escapes ``&``, in addition
-    to ``<`` and ``>``.  (GH2919_)
+    to ``<`` and ``>``.  (:issue:`2919`)
 
 See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
 on GitHub for a complete list.
 
-.. _GH2437: https://github.com/pydata/pandas/issues/2437
-.. _GH2809: https://github.com/pydata/pandas/issues/2809
-.. _GH2810: https://github.com/pydata/pandas/issues/2810
-.. _GH2837: https://github.com/pydata/pandas/issues/2837
-.. _GH2898: https://github.com/pydata/pandas/issues/2898
-.. _GH3035: https://github.com/pydata/pandas/issues/3035
-.. _GH2978: https://github.com/pydata/pandas/issues/2978
-.. _GH2877: https://github.com/pydata/pandas/issues/2877
-.. _GH2739: https://github.com/pydata/pandas/issues/2739
-.. _GH2710: https://github.com/pydata/pandas/issues/2710
-.. _GH2806: https://github.com/pydata/pandas/issues/2806
-.. _GH2807: https://github.com/pydata/pandas/issues/2807
-.. _GH2918: https://github.com/pydata/pandas/issues/2918
-.. _GH2758: https://github.com/pydata/pandas/issues/2758
-.. _GH3275: https://github.com/pydata/pandas/issues/3275
-.. _GH2979: https://github.com/pydata/pandas/issues/2979
-.. _GH3011: https://github.com/pydata/pandas/issues/3011
-.. _GH3076: https://github.com/pydata/pandas/issues/3076
-.. _GH3059: https://github.com/pydata/pandas/issues/3059
-.. _GH3070: https://github.com/pydata/pandas/issues/3070
-.. _GH3075: https://github.com/pydata/pandas/issues/3075
-.. _GH2641: https://github.com/pydata/pandas/issues/2641
-.. _GH2919: https://github.com/pydata/pandas/issues/2919
diff --git a/doc/source/v0.11.1.txt b/doc/source/v0.11.1.txt
index 97f236166..8b7b7ce82 100644
--- a/doc/source/v0.11.1.txt
+++ b/doc/source/v0.11.1.txt
@@ -39,7 +39,7 @@ API changes
 
 
   - Fix modulo and integer division on Series,DataFrames to act similary to ``float`` dtypes to return 
-    ``np.nan`` or ``np.inf`` as appropriate (GH3590_). This correct a numpy bug that treats ``integer``
+    ``np.nan`` or ``np.inf`` as appropriate (:issue:`3590`). This correct a numpy bug that treats ``integer``
     and ``float`` dtypes differently.
 
     .. ipython:: python
@@ -53,8 +53,8 @@ API changes
   - Add ``squeeze`` keyword to ``groupby`` to allow reduction from 
     DataFrame -> Series if groups are unique. This is a Regression from 0.10.1.
     We are reverting back to the prior behavior. This means groupby will return the 
-    same shaped objects whether the groups are unique or not. Revert this issue (GH2893_) 
-    with (GH3596_).
+    same shaped objects whether the groups are unique or not. Revert this issue (:issue:`2893`) 
+    with (:issue:`3596`).
 
     .. ipython:: python
 
@@ -71,7 +71,7 @@ API changes
 
   - Raise on ``iloc`` when boolean indexing with a label based indexer mask
     e.g. a boolean Series, even with integer labels, will raise. Since ``iloc``
-    is purely positional based, the labels on the Series are not alignable (GH3631_)
+    is purely positional based, the labels on the Series are not alignable (:issue:`3631`)
 
     This case is rarely used, and there are plently of alternatives. This preserves the
     ``iloc`` API to be *purely* positional based.
@@ -97,18 +97,18 @@ API changes
     plot something.
 
   - ``DataFrame.interpolate()`` is now deprecated. Please use
-    ``DataFrame.fillna()`` and ``DataFrame.replace()`` instead. (GH3582_,
-    GH3675_, GH3676_)
+    ``DataFrame.fillna()`` and ``DataFrame.replace()`` instead. (:issue:`3582`,
+    :issue:`3675`, :issue:`3676`)
 
   - the ``method`` and ``axis`` arguments of ``DataFrame.replace()`` are
     deprecated
 
   - ``DataFrame.replace`` 's ``infer_types`` parameter is removed and now
-    performs conversion by default. (GH3907_)
+    performs conversion by default. (:issue:`3907`)
 
   - Add the keyword ``allow_duplicates`` to ``DataFrame.insert`` to allow a duplicate column
-    to be inserted if ``True``, default is ``False`` (same as prior to 0.11.1) (GH3679_)
-  - Implement ``__nonzero__`` for ``NDFrame`` objects (GH3691_, GH3696_)
+    to be inserted if ``True``, default is ``False`` (same as prior to 0.11.1) (:issue:`3679`)
+  - Implement ``__nonzero__`` for ``NDFrame`` objects (:issue:`3691`, :issue:`3696`)
 
   - IO api
 
@@ -136,13 +136,13 @@ API changes
          read_frame(....)
 
   - ``DataFrame.to_html`` and ``DataFrame.to_latex`` now accept a path for
-    their first argument (GH3702_)
+    their first argument (:issue:`3702`)
 
   - Do not allow astypes on ``datetime64[ns]`` except to ``object``, and
-    ``timedelta64[ns]`` to ``object/int`` (GH3425_)
+    ``timedelta64[ns]`` to ``object/int`` (:issue:`3425`)
 
   - The behavior of ``datetime64`` dtypes has changed with respect to certain
-    so-called reduction operations (GH3726_). The following operations now
+    so-called reduction operations (:issue:`3726`). The following operations now
     raise a ``TypeError`` when perfomed on a ``Series`` and return an *empty*
     ``Series`` when performed on a ``DataFrame`` similar to performing these
     operations on, for example, a ``DataFrame`` of ``slice`` objects:
@@ -157,7 +157,7 @@ I/O Enhancements
 ~~~~~~~~~~~~~~~~
 
   - ``pd.read_html()`` can now parse HTML strings, files or urls and return
-    DataFrames, courtesy of @cpcloud. (GH3477_, GH3605_, GH3606_, GH3616_).
+    DataFrames, courtesy of @cpcloud. (:issue:`3477`, :issue:`3605`, :issue:`3606`, :issue:`3616`).
     It works with a *single* parser backend: BeautifulSoup4 + html5lib :ref:`See the docs<io.html>`
 
     You can use ``pd.read_html()`` to read the output from ``DataFrame.to_html()`` like so
@@ -174,14 +174,14 @@ I/O Enhancements
     ``DataFrame.to_html()`` are not inverses.
 
     - ``pd.read_html()`` no longer performs hard conversion of date strings
-      (GH3656_).
+      (:issue:`3656`).
 
     .. warning::
 
       You may have to install an older version of BeautifulSoup4, 
       :ref:`See the installation docs<install.optional_dependencies>`
 
-  - Added module for reading and writing Stata files: ``pandas.io.stata`` (GH1512_)
+  - Added module for reading and writing Stata files: ``pandas.io.stata`` (:issue:`1512`)
     accessable via ``read_stata`` top-level function for reading,
     and ``to_stata`` DataFrame method for writing, :ref:`See the docs<io.stata>`
 
@@ -202,7 +202,7 @@ I/O Enhancements
 
       Note: The default behavior in 0.11.1 remains unchanged, but starting with 0.12,
       the default *to* write and read multi-index columns will be in the new 
-      format. (GH3571_, GH1651_, GH3141_)
+      format. (:issue:`3571`, :issue:`1651`, :issue:`3141`)
 
     - If an ``index_col`` is not specified (e.g. you don't have an index, or wrote it
       with ``df.to_csv(..., index=False``), then any ``names`` on the columns index will 
@@ -268,7 +268,7 @@ Other Enhancements
   - ``pd.melt()`` now accepts the optional parameters ``var_name`` and ``value_name``
     to specify custom column names of the returned DataFrame.
 
-  - ``pd.set_option()`` now allows N option, value pairs (GH3667_).
+  - ``pd.set_option()`` now allows N option, value pairs (:issue:`3667`).
 
       Let's say that we had an option ``'a.b'`` and another option ``'b.c'``.
       We can set them at the same time:
@@ -315,16 +315,16 @@ Other Enhancements
 
        dff.groupby('B').filter(lambda x: len(x) > 2, dropna=False)
 
-  - Series and DataFrame hist methods now take a ``figsize`` argument (GH3834_)
+  - Series and DataFrame hist methods now take a ``figsize`` argument (:issue:`3834`)
   - DatetimeIndexes no longer try to convert mixed-integer indexes during join
-    operations (GH3877_)
+    operations (:issue:`3877`)
 
 Bug Fixes
 ~~~~~~~~~
 
   - Plotting functions now raise a ``TypeError`` before trying to plot anything
-    if the associated objects have have a dtype of ``object`` (GH1818_,
-    GH3572_, GH3911_, GH3912_), but they will try to convert object arrays to
+    if the associated objects have have a dtype of ``object`` (:issue:`1818`,
+    :issue:`3572`, :issue:`3911`, :issue:`3912`), but they will try to convert object arrays to
     numeric arrays if possible so that you can still plot, for example, an
     object array with floats. This happens before any drawing takes place which
     elimnates any spurious plots from showing up.
@@ -332,7 +332,7 @@ Bug Fixes
   - ``fillna`` methods now raise a ``TypeError`` if the ``value`` parameter is
     a list or tuple.
 
-  - ``Series.str`` now supports iteration (GH3638_). You can iterate over the
+  - ``Series.str`` now supports iteration (:issue:`3638`). You can iterate over the
     individual elements of each string in the ``Series``. Each iteration yields
     yields a ``Series`` with either a single character at each index of the
     original ``Series`` or ``NaN``. For example,
@@ -356,90 +356,37 @@ Bug Fixes
 
   - ``HDFStore``
 
-    - will retain index attributes (freq,tz,name) on recreation (GH3499_)
+    - will retain index attributes (freq,tz,name) on recreation (:issue:`3499`)
     - will warn with a ``AttributeConflictWarning`` if you are attempting to append
       an index with a different frequency than the existing, or attempting
       to append an index with a different name than the existing
-    - support datelike columns with a timezone as data_columns (GH2852_)
+    - support datelike columns with a timezone as data_columns (:issue:`2852`)
 
-  - Non-unique index support clarified (GH3468_).
+  - Non-unique index support clarified (:issue:`3468`).
 
-    - Fix assigning a new index to a duplicate index in a DataFrame would fail (GH3468_)
+    - Fix assigning a new index to a duplicate index in a DataFrame would fail (:issue:`3468`)
     - Fix construction of a DataFrame with a duplicate index
     - ref_locs support to allow duplicative indices across dtypes,
-      allows iget support to always find the index (even across dtypes) (GH2194_)
+      allows iget support to always find the index (even across dtypes) (:issue:`2194`)
     - applymap on a DataFrame with a non-unique index now works
-      (removed warning) (GH2786_), and fix (GH3230_)
-    - Fix to_csv to handle non-unique columns (GH3495_)
-    - Duplicate indexes with getitem will return items in the correct order (GH3455_, GH3457_)
-      and handle missing elements like unique indices (GH3561_)
-    - Duplicate indexes with and empty DataFrame.from_records will return a correct frame (GH3562_)
-    - Concat to produce a non-unique columns when duplicates are across dtypes is fixed (GH3602_)
-    - Allow insert/delete to non-unique columns (GH3679_)
-    - Non-unique indexing with a slice via ``loc`` and friends fixed (GH3659_)
-    - Allow insert/delete to non-unique columns (GH3679_)
-    - Extend ``reindex`` to correctly deal with non-unique indices (GH3679_)
+      (removed warning) (:issue:`2786`), and fix (:issue:`3230`)
+    - Fix to_csv to handle non-unique columns (:issue:`3495`)
+    - Duplicate indexes with getitem will return items in the correct order (:issue:`3455`, :issue:`3457`)
+      and handle missing elements like unique indices (:issue:`3561`)
+    - Duplicate indexes with and empty DataFrame.from_records will return a correct frame (:issue:`3562`)
+    - Concat to produce a non-unique columns when duplicates are across dtypes is fixed (:issue:`3602`)
+    - Allow insert/delete to non-unique columns (:issue:`3679`)
+    - Non-unique indexing with a slice via ``loc`` and friends fixed (:issue:`3659`)
+    - Allow insert/delete to non-unique columns (:issue:`3679`)
+    - Extend ``reindex`` to correctly deal with non-unique indices (:issue:`3679`)
     - ``DataFrame.itertuples()`` now works with frames with duplicate column
-      names (GH3873_)
+      names (:issue:`3873`)
 
-  - ``DataFrame.from_records`` did not accept empty recarrays (GH3682_)
-  - ``read_html`` now correctly skips tests (GH3741_)
+  - ``DataFrame.from_records`` did not accept empty recarrays (:issue:`3682`)
+  - ``read_html`` now correctly skips tests (:issue:`3741`)
   - Fixed a bug where ``DataFrame.replace`` with a compiled regular expression
-    in the ``to_replace`` argument wasn't working (GH3907_)
+    in the ``to_replace`` argument wasn't working (:issue:`3907`)
 
 See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
 on GitHub for a complete list.
-
-.. _GH3468: https://github.com/pydata/pandas/issues/3468
-.. _GH2194: https://github.com/pydata/pandas/issues/2194
-.. _GH2786: https://github.com/pydata/pandas/issues/2786
-.. _GH3230: https://github.com/pydata/pandas/issues/3230
-.. _GH3495: https://github.com/pydata/pandas/issues/3495
-.. _GH3455: https://github.com/pydata/pandas/issues/3455
-.. _GH3457: https://github.com/pydata/pandas/issues/3457
-.. _GH3561: https://github.com/pydata/pandas/issues/3561
-.. _GH3562: https://github.com/pydata/pandas/issues/3562
-.. _GH3602: https://github.com/pydata/pandas/issues/3602
-.. _GH2437: https://github.com/pydata/pandas/issues/2437
-.. _GH2852: https://github.com/pydata/pandas/issues/2852
-.. _GH3477: https://github.com/pydata/pandas/issues/3477
-.. _GH3492: https://github.com/pydata/pandas/issues/3492
-.. _GH3499: https://github.com/pydata/pandas/issues/3499
-.. _GH2893: https://github.com/pydata/pandas/issues/2893
-.. _GH3596: https://github.com/pydata/pandas/issues/3596
-.. _GH3590: https://github.com/pydata/pandas/issues/3590
-.. _GH3435: https://github.com/pydata/pandas/issues/3435
-.. _GH1512: https://github.com/pydata/pandas/issues/1512
-.. _GH2285: https://github.com/pydata/pandas/issues/2285
-.. _GH3631: https://github.com/pydata/pandas/issues/3631
-.. _GH3571: https://github.com/pydata/pandas/issues/3571
-.. _GH1651: https://github.com/pydata/pandas/issues/1651
-.. _GH3141: https://github.com/pydata/pandas/issues/3141
-.. _GH3638: https://github.com/pydata/pandas/issues/3638
-.. _GH3616: https://github.com/pydata/pandas/issues/3616
-.. _GH3605: https://github.com/pydata/pandas/issues/3605
-.. _GH3606: https://github.com/pydata/pandas/issues/3606
-.. _GH3656: https://github.com/pydata/pandas/issues/3656
-.. _GH1818: https://github.com/pydata/pandas/issues/1818
-.. _GH3572: https://github.com/pydata/pandas/issues/3572
-.. _GH3582: https://github.com/pydata/pandas/issues/3582
-.. _GH3676: https://github.com/pydata/pandas/issues/3676
-.. _GH3675: https://github.com/pydata/pandas/issues/3675
-.. _GH3682: https://github.com/pydata/pandas/issues/3682
-.. _GH3679: https://github.com/pydata/pandas/issues/3679
-.. _GH3702: https://github.com/pydata/pandas/issues/3702
-.. _GH3691: https://github.com/pydata/pandas/issues/3691
-.. _GH3696: https://github.com/pydata/pandas/issues/3696
-.. _GH3667: https://github.com/pydata/pandas/issues/3667
-.. _GH3741: https://github.com/pydata/pandas/issues/3741
-.. _GH3726: https://github.com/pydata/pandas/issues/3726
-.. _GH3425: https://github.com/pydata/pandas/issues/3425
-.. _GH3834: https://github.com/pydata/pandas/issues/3834
-.. _GH3873: https://github.com/pydata/pandas/issues/3873
-.. _GH3877: https://github.com/pydata/pandas/issues/3877
-.. _GH3659: https://github.com/pydata/pandas/issues/3659
-.. _GH3679: https://github.com/pydata/pandas/issues/3679
-.. _GH3907: https://github.com/pydata/pandas/issues/3907
-.. _GH3911: https://github.com/pydata/pandas/issues/3911
-.. _GH3912: https://github.com/pydata/pandas/issues/3912
diff --git a/doc/source/v0.4.x.txt b/doc/source/v0.4.x.txt
index 192938870..2e21eb35c 100644
--- a/doc/source/v0.4.x.txt
+++ b/doc/source/v0.4.x.txt
@@ -10,13 +10,13 @@ New Features
 - :ref:`Added <dsintro.name_attribute>` ``name`` attribute to ``Series``, now
   prints as part of ``Series.__repr__``
 - :ref:`Added <missing.isnull>` instance methods ``isnull`` and ``notnull`` to
-  Series (PR209_, GH203_)
+  Series (PR209_, :issue:`203`)
 - :ref:`Added <basics.align>` ``Series.align`` method for aligning two series
   with choice of join method (ENH56_)
 - :ref:`Added <indexing.get_level_values>` method ``get_level_values`` to
   ``MultiIndex`` (IS188_)
 - :ref:`Set <indexing.mixed_type_setting>` values in mixed-type
-  ``DataFrame`` objects via ``.ix`` indexing attribute (GH135_)
+  ``DataFrame`` objects via ``.ix`` indexing attribute (:issue:`135`)
 - Added new ``DataFrame`` :ref:`methods <basics.dtypes>`
   ``get_dtype_counts`` and property ``dtypes`` (ENHdc_)
 - Added :ref:`ignore_index <merging.ignore_index>` option to
@@ -36,18 +36,18 @@ Performance Enhancements
 
 - Altered binary operations on differently-indexed SparseSeries objects
   to use the integer-based (dense) alignment logic which is faster with a
-  larger number of blocks (GH205_)
+  larger number of blocks (:issue:`205`)
 - Wrote faster Cython data alignment / merging routines resulting in
   substantial speed increases
 - Improved performance of ``isnull`` and ``notnull``, a regression from v0.3.0
-  (GH187_)
+  (:issue:`187`)
 - Refactored code related to ``DataFrame.join`` so that intermediate aligned
   copies of the data in each ``DataFrame`` argument do not need to be created.
-  Substantial performance increases result (GH176_)
+  Substantial performance increases result (:issue:`176`)
 - Substantially improved performance of generic ``Index.intersection`` and
   ``Index.union``
 - Implemented ``BlockManager.take`` resulting in significantly faster ``take``
-  performance on mixed-type ``DataFrame`` objects (GH104_)
+  performance on mixed-type ``DataFrame`` objects (:issue:`104`)
 - Improved performance of ``Series.sort_index``
 - Significant groupby performance enhancement: removed unnecessary integrity
   checks in DataFrame internals that were slowing down slicing operations to
@@ -60,18 +60,12 @@ Performance Enhancements
 .. _PR146: https://github.com/pydata/pandas/pull/146
 .. _ENH1b: https://github.com/pydata/pandas/commit/1ba56251f0013ff7cd8834e9486cef2b10098371
 .. _ENHdc: https://github.com/pydata/pandas/commit/dca3c5c5a6a3769ee01465baca04cfdfa66a4f76
-.. _GH135: https://github.com/pydata/pandas/issues/135
 .. _PR151: https://github.com/pydata/pandas/pull/151
 .. _ENHed: https://github.com/pydata/pandas/commit/edd9f1945fc010a57fa0ae3b3444d1fffe592591
 .. _PR142: https://github.com/pydata/pandas/pull/142
 .. _PR141: https://github.com/pydata/pandas/pull/141
 .. _IS188: https://github.com/pydata/pandas/issues/188
 .. _ENH56: https://github.com/pydata/pandas/commit/56e0c9ffafac79ce262b55a6a13e1b10a88fbe93
-.. _GH187: https://github.com/pydata/pandas/issues/187
-.. _GH176: https://github.com/pydata/pandas/issues/176
-.. _GH104: https://github.com/pydata/pandas/issues/104
-.. _GH205: https://github.com/pydata/pandas/issues/205
 .. _PR209: https://github.com/pydata/pandas/pull/209
-.. _GH203: https://github.com/pydata/pandas/issues/203
 .. _PR200: https://github.com/pydata/pandas/pull/200
 
diff --git a/doc/source/v0.5.0.txt b/doc/source/v0.5.0.txt
index 017d10d4c..8870e8e76 100644
--- a/doc/source/v0.5.0.txt
+++ b/doc/source/v0.5.0.txt
@@ -9,22 +9,22 @@ New Features
 
 - :ref:`Added <basics.df_join>` ``DataFrame.align`` method with standard join options
 - :ref:`Added <io.parse_dates>` ``parse_dates`` option to ``read_csv`` and ``read_table`` methods to optionally try to parse dates in the index columns
-- :ref:`Added <io.parse_dates>` ``nrows``, ``chunksize``, and ``iterator`` arguments to ``read_csv`` and ``read_table``. The last two return a new ``TextParser`` class capable of lazily iterating through chunks of a flat file (GH242_)
-- :ref:`Added <merging.multikey_join>` ability to join on multiple columns in ``DataFrame.join`` (GH214_)
+- :ref:`Added <io.parse_dates>` ``nrows``, ``chunksize``, and ``iterator`` arguments to ``read_csv`` and ``read_table``. The last two return a new ``TextParser`` class capable of lazily iterating through chunks of a flat file (:issue:`242`)
+- :ref:`Added <merging.multikey_join>` ability to join on multiple columns in ``DataFrame.join`` (:issue:`214`)
 - Added private ``_get_duplicates`` function to ``Index`` for identifying duplicate values more easily (ENH5c_)
 - :ref:`Added <indexing.df_cols>` column attribute access to DataFrame.
-- :ref:`Added <indexing.df_cols>` Python tab completion hook for DataFrame columns. (PR233_, GH230_)
+- :ref:`Added <indexing.df_cols>` Python tab completion hook for DataFrame columns. (PR233_, :issue:`230`)
 - :ref:`Implemented <basics.describe>` ``Series.describe`` for Series containing objects (PR241_)
-- :ref:`Added <merging.df_inner_join>` inner join option to ``DataFrame.join`` when joining on key(s) (GH248_)
-- :ref:`Implemented <indexing.df_cols>` selecting DataFrame columns by passing a list to ``__getitem__`` (GH253_)
-- :ref:`Implemented <indexing.set_ops>` & and | to intersect / union Index objects, respectively (GH261_)
-- :ref:`Added<reshaping.pivot>` ``pivot_table`` convenience function to pandas namespace (GH234_)
-- :ref:`Implemented <basics.rename_axis>` ``Panel.rename_axis`` function (GH243_)
+- :ref:`Added <merging.df_inner_join>` inner join option to ``DataFrame.join`` when joining on key(s) (:issue:`248`)
+- :ref:`Implemented <indexing.df_cols>` selecting DataFrame columns by passing a list to ``__getitem__`` (:issue:`253`)
+- :ref:`Implemented <indexing.set_ops>` & and | to intersect / union Index objects, respectively (:issue:`261`)
+- :ref:`Added<reshaping.pivot>` ``pivot_table`` convenience function to pandas namespace (:issue:`234`)
+- :ref:`Implemented <basics.rename_axis>` ``Panel.rename_axis`` function (:issue:`243`)
 - DataFrame will show index level names in console output (PR334_)
 - :ref:`Implemented <indexing.take>` ``Panel.take``
 - :ref:`Added<basics.console_output>` ``set_eng_float_format`` for alternate DataFrame floating point string formatting (ENH61_)
 - :ref:`Added <indexing.set_index>` convenience ``set_index`` function for creating a DataFrame index from its existing columns
-- :ref:`Implemented <groupby.multiindex>` ``groupby`` hierarchical index level name  (GH223_)
+- :ref:`Implemented <groupby.multiindex>` ``groupby`` hierarchical index level name  (:issue:`223`)
 - :ref:`Added <io.store_in_csv>` support for different delimiters in ``DataFrame.to_csv`` (PR244_)
 - TODO: DOCS ABOUT TAKE METHODS
 
@@ -33,28 +33,15 @@ Performance Enhancements
 
 - VBENCH Major performance improvements in file parsing functions ``read_csv`` and ``read_table``
 - VBENCH Added Cython function for converting tuples to ndarray very fast. Speeds up many MultiIndex-related operations
-- VBENCH Refactored merging / joining code into a tidy class and disabled unnecessary computations in the float/object case, thus getting about 10% better performance (GH211_)
-- VBENCH Improved speed of ``DataFrame.xs`` on mixed-type DataFrame objects by about 5x, regression from 0.3.0 (GH215_)
+- VBENCH Refactored merging / joining code into a tidy class and disabled unnecessary computations in the float/object case, thus getting about 10% better performance (:issue:`211`)
+- VBENCH Improved speed of ``DataFrame.xs`` on mixed-type DataFrame objects by about 5x, regression from 0.3.0 (:issue:`215`)
 - VBENCH With new ``DataFrame.align`` method, speeding up binary operations between differently-indexed DataFrame objects by 10-25%.
-- VBENCH Significantly sped up conversion of nested dict into DataFrame (GH212_)
+- VBENCH Significantly sped up conversion of nested dict into DataFrame (:issue:`212`)
 - VBENCH Significantly speed up DataFrame ``__repr__`` and ``count`` on large mixed-type DataFrame objects
 
-.. _GH214: https://github.com/pydata/pandas/issues/214
-.. _GH248: https://github.com/pydata/pandas/issues/248
-.. _GH253: https://github.com/pydata/pandas/issues/253
-.. _GH261: https://github.com/pydata/pandas/issues/261
-.. _GH234: https://github.com/pydata/pandas/issues/234
-.. _GH243: https://github.com/pydata/pandas/issues/243
-.. _GH223: https://github.com/pydata/pandas/issues/223
 .. _PR244: https://github.com/pydata/pandas/pull/244
 .. _PR233: https://github.com/pydata/pandas/pull/233
-.. _GH230: https://github.com/pydata/pandas/issues/230
 .. _PR241: https://github.com/pydata/pandas/pull/241
-.. _GH242: https://github.com/pydata/pandas/issues/242
-.. _GH212: https://github.com/pydata/pandas/issues/212
-.. _GH211: https://github.com/pydata/pandas/issues/211
-.. _GH215: https://github.com/pydata/pandas/issues/215
-.. _GH213: https://github.com/pydata/pandas/issues/213
 .. _ENH61: https://github.com/pydata/pandas/commit/6141961
 .. _PR334: https://github.com/pydata/pandas/pull/334
 .. _ENH5c: https://github.com/pydata/pandas/commit/5ca6ff5d822ee4ddef1ec0d87b6d83d8b4bbd3eb
diff --git a/doc/source/v0.6.0.txt b/doc/source/v0.6.0.txt
index e72aec601..442e5bc12 100644
--- a/doc/source/v0.6.0.txt
+++ b/doc/source/v0.6.0.txt
@@ -8,86 +8,52 @@ New Features
 - :ref:`Added <reshaping.melt>` ``melt`` function to ``pandas.core.reshape``
 - :ref:`Added <groupby.multiindex>` ``level`` parameter to group by level in Series and DataFrame descriptive statistics (PR313_)
 - :ref:`Added <basics.head_tail>` ``head`` and ``tail`` methods to Series, analogous to to DataFrame (PR296_)
-- :ref:`Added <indexing.boolean>` ``Series.isin`` function which checks if each value is contained in a passed sequence (GH289_)
+- :ref:`Added <indexing.boolean>` ``Series.isin`` function which checks if each value is contained in a passed sequence (:issue:`289`)
 - :ref:`Added <io.formatting>` ``float_format`` option to ``Series.to_string``
-- :ref:`Added <io.parse_dates>` ``skip_footer`` (GH291_) and ``converters`` (GH343_) options to ``read_csv`` and ``read_table``
-- :ref:`Added <indexing.duplicate>` ``drop_duplicates`` and ``duplicated`` functions for removing duplicate DataFrame rows and checking for duplicate rows, respectively (GH319_)
-- :ref:`Implemented <dsintro.boolean>` operators '&', '|', '^', '-' on DataFrame (GH347_)
+- :ref:`Added <io.parse_dates>` ``skip_footer`` (:issue:`291`) and ``converters`` (:issue:`343`) options to ``read_csv`` and ``read_table``
+- :ref:`Added <indexing.duplicate>` ``drop_duplicates`` and ``duplicated`` functions for removing duplicate DataFrame rows and checking for duplicate rows, respectively (:issue:`319`)
+- :ref:`Implemented <dsintro.boolean>` operators '&', '|', '^', '-' on DataFrame (:issue:`347`)
 - :ref:`Added <basics.stats>` ``Series.mad``, mean absolute deviation
 - :ref:`Added <timeseries.offsets>` ``QuarterEnd`` DateOffset (PR321_)
-- :ref:`Added <dsintro.numpy_interop>` ``dot`` to DataFrame (GH65_)
-- :ref:`Added <basics.panel>` ``orient`` option to ``Panel.from_dict`` (GH359_, GH301_)
+- :ref:`Added <dsintro.numpy_interop>` ``dot`` to DataFrame (:issue:`65`)
+- :ref:`Added <basics.panel>` ``orient`` option to ``Panel.from_dict`` (:issue:`359`, :issue:`301`)
 - :ref:`Added <basics.dataframe.from_dict>` ``orient`` option to ``DataFrame.from_dict``
-- :ref:`Added <basics.dataframe.from_records>` passing list of tuples or list of lists to ``DataFrame.from_records`` (GH357_)
-- :ref:`Added <groupby.multiindex>` multiple levels to groupby (GH103_)
-- :ref:`Allow <basics.sorting>` multiple columns in ``by`` argument of ``DataFrame.sort_index`` (GH92_, PR362_)
-- :ref:`Added <indexing.basics.get_value>` fast ``get_value`` and ``put_value`` methods to DataFrame (GH360_)
-- :ref:`Added <computation.covariance>` ``cov`` instance methods to Series and DataFrame (GH194_, PR362_)
+- :ref:`Added <basics.dataframe.from_records>` passing list of tuples or list of lists to ``DataFrame.from_records`` (:issue:`357`)
+- :ref:`Added <groupby.multiindex>` multiple levels to groupby (:issue:`103`)
+- :ref:`Allow <basics.sorting>` multiple columns in ``by`` argument of ``DataFrame.sort_index`` (:issue:`92`, PR362_)
+- :ref:`Added <indexing.basics.get_value>` fast ``get_value`` and ``put_value`` methods to DataFrame (:issue:`360`)
+- :ref:`Added <computation.covariance>` ``cov`` instance methods to Series and DataFrame (:issue:`194`, PR362_)
 - :ref:`Added <visualization.barplot>` ``kind='bar'`` option to ``DataFrame.plot`` (PR348_)
 - :ref:`Added <basics.idxmin>` ``idxmin`` and ``idxmax`` to Series and DataFrame (PR286_)
-- :ref:`Added <io.clipboard>` ``read_clipboard`` function to parse DataFrame from clipboard (GH300_)
-- :ref:`Added <basics.stats>` ``nunique`` function to Series for counting unique elements (GH297_)
-- :ref:`Made <basics.dataframe>` DataFrame constructor use Series name if no columns passed (GH373_)
-- :ref:`Support <io.parse_dates>` regular expressions in read_table/read_csv (GH364_)
+- :ref:`Added <io.clipboard>` ``read_clipboard`` function to parse DataFrame from clipboard (:issue:`300`)
+- :ref:`Added <basics.stats>` ``nunique`` function to Series for counting unique elements (:issue:`297`)
+- :ref:`Made <basics.dataframe>` DataFrame constructor use Series name if no columns passed (:issue:`373`)
+- :ref:`Support <io.parse_dates>` regular expressions in read_table/read_csv (:issue:`364`)
 - :ref:`Added <io.html>` ``DataFrame.to_html`` for writing DataFrame to HTML (PR387_)
 - :ref:`Added <basics.dataframe>` support for MaskedArray data in DataFrame, masked values converted to NaN (PR396_)
-- :ref:`Added <visualization.box>` ``DataFrame.boxplot`` function (GH368_)
-- :ref:`Can <basics.apply>` pass extra args, kwds to DataFrame.apply (GH376_)
-- :ref:`Implement <merging.multikey_join>` ``DataFrame.join`` with vector ``on`` argument (GH312_)
-- :ref:`Added <visualization.basic>` ``legend`` boolean flag to ``DataFrame.plot`` (GH324_)
-- :ref:`Can <reshaping.stacking>` pass multiple levels to ``stack`` and ``unstack`` (GH370_)
-- :ref:`Can <reshaping.pivot>` pass multiple values columns to ``pivot_table`` (GH381_)
-- :ref:`Use <groupby.multiindex>` Series name in GroupBy for result index (GH363_)
-- :ref:`Added <basics.apply>` ``raw`` option to ``DataFrame.apply`` for performance if only need ndarray (GH309_)
-- Added proper, tested weighted least squares to standard and panel OLS (GH303_)
+- :ref:`Added <visualization.box>` ``DataFrame.boxplot`` function (:issue:`368`)
+- :ref:`Can <basics.apply>` pass extra args, kwds to DataFrame.apply (:issue:`376`)
+- :ref:`Implement <merging.multikey_join>` ``DataFrame.join`` with vector ``on`` argument (:issue:`312`)
+- :ref:`Added <visualization.basic>` ``legend`` boolean flag to ``DataFrame.plot`` (:issue:`324`)
+- :ref:`Can <reshaping.stacking>` pass multiple levels to ``stack`` and ``unstack`` (:issue:`370`)
+- :ref:`Can <reshaping.pivot>` pass multiple values columns to ``pivot_table`` (:issue:`381`)
+- :ref:`Use <groupby.multiindex>` Series name in GroupBy for result index (:issue:`363`)
+- :ref:`Added <basics.apply>` ``raw`` option to ``DataFrame.apply`` for performance if only need ndarray (:issue:`309`)
+- Added proper, tested weighted least squares to standard and panel OLS (:issue:`303`)
 
 Performance Enhancements
 ~~~~~~~~~~~~~~~~~~~~~~~~
-- VBENCH Cythonized ``cache_readonly``, resulting in substantial micro-performance enhancements throughout the codebase (GH361_)
-- VBENCH Special Cython matrix iterator for applying arbitrary reduction operations with 3-5x better performance than `np.apply_along_axis` (GH309_)
+- VBENCH Cythonized ``cache_readonly``, resulting in substantial micro-performance enhancements throughout the codebase (:issue:`361`)
+- VBENCH Special Cython matrix iterator for applying arbitrary reduction operations with 3-5x better performance than `np.apply_along_axis` (:issue:`309`)
 - VBENCH Improved performance of ``MultiIndex.from_tuples``
 - VBENCH Special Cython matrix iterator for applying arbitrary reduction operations
 - VBENCH + DOCUMENT Add ``raw`` option to ``DataFrame.apply`` for getting better performance when
-- VBENCH Faster cythonized count by level in Series and DataFrame (GH341_)
+- VBENCH Faster cythonized count by level in Series and DataFrame (:issue:`341`)
 - VBENCH? Significant GroupBy performance enhancement with multiple keys with many "empty" combinations
 - VBENCH New Cython vectorized function ``map_infer`` speeds up ``Series.apply`` and ``Series.map`` significantly when passed elementwise Python function, motivated by (PR355_)
-- VBENCH Significantly improved performance of ``Series.order``, which also makes np.unique called on a Series faster (GH327_)
-- VBENCH Vastly improved performance of GroupBy on axes with a MultiIndex (GH299_)
+- VBENCH Significantly improved performance of ``Series.order``, which also makes np.unique called on a Series faster (:issue:`327`)
+- VBENCH Vastly improved performance of GroupBy on axes with a MultiIndex (:issue:`299`)
 
-.. _GH65: https://github.com/pydata/pandas/issues/65
-.. _GH92: https://github.com/pydata/pandas/issues/92
-.. _GH103: https://github.com/pydata/pandas/issues/103
-.. _GH194: https://github.com/pydata/pandas/issues/194
-.. _GH289: https://github.com/pydata/pandas/issues/289
-.. _GH291: https://github.com/pydata/pandas/issues/291
-.. _GH297: https://github.com/pydata/pandas/issues/297
-.. _GH299: https://github.com/pydata/pandas/issues/299
-.. _GH300: https://github.com/pydata/pandas/issues/300
-.. _GH301: https://github.com/pydata/pandas/issues/301
-.. _GH303: https://github.com/pydata/pandas/issues/303
-.. _GH305: https://github.com/pydata/pandas/issues/305
-.. _GH308: https://github.com/pydata/pandas/issues/308
-.. _GH309: https://github.com/pydata/pandas/issues/309
-.. _GH312: https://github.com/pydata/pandas/issues/312
-.. _GH319: https://github.com/pydata/pandas/issues/319
-.. _GH324: https://github.com/pydata/pandas/issues/324
-.. _GH327: https://github.com/pydata/pandas/issues/327
-.. _GH341: https://github.com/pydata/pandas/issues/341
-.. _GH343: https://github.com/pydata/pandas/issues/343
-.. _GH347: https://github.com/pydata/pandas/issues/347
-.. _GH357: https://github.com/pydata/pandas/issues/357
-.. _GH359: https://github.com/pydata/pandas/issues/359
-.. _GH360: https://github.com/pydata/pandas/issues/360
-.. _GH361: https://github.com/pydata/pandas/issues/361
-.. _GH363: https://github.com/pydata/pandas/issues/363
-.. _GH364: https://github.com/pydata/pandas/issues/364
-.. _GH368: https://github.com/pydata/pandas/issues/368
-.. _GH370: https://github.com/pydata/pandas/issues/370
-.. _GH373: https://github.com/pydata/pandas/issues/373
-.. _GH376: https://github.com/pydata/pandas/issues/376
-.. _GH381: https://github.com/pydata/pandas/issues/381
-.. _GH382: https://github.com/pydata/pandas/issues/382
-.. _GH393: https://github.com/pydata/pandas/issues/393
 .. _PR286: https://github.com/pydata/pandas/pull/286
 .. _PR296: https://github.com/pydata/pandas/pull/296
 .. _PR313: https://github.com/pydata/pandas/pull/313
diff --git a/doc/source/v0.6.1.txt b/doc/source/v0.6.1.txt
index 7b0588884..7ed07d7f5 100644
--- a/doc/source/v0.6.1.txt
+++ b/doc/source/v0.6.1.txt
@@ -8,27 +8,27 @@ New features
 ~~~~~~~~~~~~
 - Can :ref:`append single rows <merging.append.row>` (as Series) to a DataFrame
 - Add Spearman and Kendall rank :ref:`correlation <computation.correlation>`
-  options to Series.corr and DataFrame.corr (GH428_)
+  options to Series.corr and DataFrame.corr (:issue:`428`)
 - :ref:`Added <indexing.basics.get_value>` ``get_value`` and ``set_value`` methods to
   Series, DataFrame, and Panel for very low-overhead access (>2x faster in many
-  cases) to scalar elements (GH437_, GH438_). ``set_value`` is capable of
+  cases) to scalar elements (:issue:`437`, :issue:`438`). ``set_value`` is capable of
   producing an enlarged object.
 - Add PyQt table widget to sandbox (PR435_)
 - DataFrame.align can :ref:`accept Series arguments <basics.align.frame.series>`
-  and an :ref:`axis option <basics.df_join>` (GH461_)
+  and an :ref:`axis option <basics.df_join>` (:issue:`461`)
 - Implement new :ref:`SparseArray <sparse.array>` and :ref:`SparseList <sparse.list>`
-  data structures. SparseSeries now derives from SparseArray (GH463_)
+  data structures. SparseSeries now derives from SparseArray (:issue:`463`)
 - :ref:`Better console printing options <basics.console_output>` (PR453_)
 - Implement fast :ref:`data ranking <computation.ranking>` for Series and
-  DataFrame, fast versions of scipy.stats.rankdata (GH428_)
+  DataFrame, fast versions of scipy.stats.rankdata (:issue:`428`)
 - Implement :ref:`DataFrame.from_items <basics.dataframe.from_items>` alternate
-  constructor (GH444_)
+  constructor (:issue:`444`)
 - DataFrame.convert_objects method for :ref:`inferring better dtypes <basics.cast>`
-  for object columns (GH302_)
+  for object columns (:issue:`302`)
 - Add :ref:`rolling_corr_pairwise <stats.moments.corr_pairwise>` function for
-  computing Panel of correlation matrices (GH189_)
+  computing Panel of correlation matrices (:issue:`189`)
 - Add :ref:`margins <reshaping.pivot.margins>` option to :ref:`pivot_table
-  <reshaping.pivot>` for computing subgroup aggregates (GH114_)
+  <reshaping.pivot>` for computing subgroup aggregates (:issue:`114`)
 - Add ``Series.from_csv`` function (PR482_)
 - :ref:`Can pass <stats.moments.binary>` DataFrame/DataFrame and
   DataFrame/Series to rolling_corr/rolling_cov (GH #462)
@@ -48,15 +48,6 @@ Performance improvements
 - Column deletion in DataFrame copies no data (computes views on blocks) (GH
   #158)
 
-.. _GH114: https://github.com/pydata/pandas/issues/114
-.. _GH189: https://github.com/pydata/pandas/issues/302
-.. _GH302: https://github.com/pydata/pandas/issues/302
-.. _GH428: https://github.com/pydata/pandas/issues/428
-.. _GH437: https://github.com/pydata/pandas/issues/437
-.. _GH438: https://github.com/pydata/pandas/issues/438
-.. _GH444: https://github.com/pydata/pandas/issues/444
-.. _GH461: https://github.com/pydata/pandas/issues/461
-.. _GH463: https://github.com/pydata/pandas/issues/463
 .. _PR435: https://github.com/pydata/pandas/pull/435
 .. _PR453: https://github.com/pydata/pandas/pull/453
 .. _PR482: https://github.com/pydata/pandas/pull/482
diff --git a/doc/source/v0.7.0.txt b/doc/source/v0.7.0.txt
index 6ff748f14..469e8f371 100644
--- a/doc/source/v0.7.0.txt
+++ b/doc/source/v0.7.0.txt
@@ -9,24 +9,24 @@ New features
 - New unified :ref:`merge function <merging.join>` for efficiently performing
   full gamut of database / relational-algebra operations. Refactored existing
   join methods to use the new infrastructure, resulting in substantial
-  performance gains (GH220_, GH249_, GH267_)
+  performance gains (:issue:`220`, :issue:`249`, :issue:`267`)
 
 - New :ref:`unified concatenation function <merging.concat>` for concatenating
   Series, DataFrame or Panel objects along an axis. Can form union or
   intersection of the other axes. Improves performance of ``Series.append`` and
-  ``DataFrame.append`` (GH468_, GH479_, GH273_)
+  ``DataFrame.append`` (:issue:`468`, :issue:`479`, :issue:`273`)
 
 - :ref:`Can <merging.concatenation>` pass multiple DataFrames to
   `DataFrame.append` to concatenate (stack) and multiple Series to
   ``Series.append`` too
 
 - :ref:`Can<basics.dataframe.from_list_of_dicts>` pass list of dicts (e.g., a
-  list of JSON objects) to DataFrame constructor (GH526_)
+  list of JSON objects) to DataFrame constructor (:issue:`526`)
 
 - You can now :ref:`set multiple columns <indexing.columns.multiple>` in a
-  DataFrame via ``__getitem__``, useful for transformation (GH342_)
+  DataFrame via ``__getitem__``, useful for transformation (:issue:`342`)
 
-- Handle differently-indexed output values in ``DataFrame.apply`` (GH498_)
+- Handle differently-indexed output values in ``DataFrame.apply`` (:issue:`498`)
 
 .. ipython:: python
 
@@ -52,7 +52,7 @@ New features
 
 - :ref:`Add <indexing.advanced_reindex>` ``level`` option to the ``reindex``
   and ``align`` methods on Series and DataFrame for broadcasting values across
-  a level (GH542_, PR552_, others)
+  a level (:issue:`542`, PR552_, others)
 
 - :ref:`Add <dsintro.panel_item_selection>` attribute-based item access to
   ``Panel`` and add IPython completion (PR563_)
@@ -64,38 +64,38 @@ New features
   ``DataFrame.to_string``
 
 - :ref:`Can <merging.multiple_join>` pass multiple DataFrames to
-  ``DataFrame.join`` to join on index (GH115_)
+  ``DataFrame.join`` to join on index (:issue:`115`)
 
 - :ref:`Can <merging.multiple_join>` pass multiple Panels to ``Panel.join``
-  (GH115_)
+  (:issue:`115`)
 
 - :ref:`Added <io.formatting>` ``justify`` argument to ``DataFrame.to_string``
   to allow different alignment of column headers
 
 - :ref:`Add <groupby.attributes>` ``sort`` option to GroupBy to allow disabling
-  sorting of the group keys for potential speedups (GH595_)
+  sorting of the group keys for potential speedups (:issue:`595`)
 
 - :ref:`Can <basics.dataframe.from_series>` pass MaskedArray to Series
   constructor (PR563_)
 
 - :ref:`Add <dsintro.panel_item_selection>` Panel item access via attributes
-  and IPython completion (GH554_)
+  and IPython completion (:issue:`554`)
 
 - Implement ``DataFrame.lookup``, fancy-indexing analogue for retrieving values
-  given a sequence of row and column labels (GH338_)
+  given a sequence of row and column labels (:issue:`338`)
 
 - Can pass a :ref:`list of functions <groupby.aggregate.multifunc>` to
   aggregate with groupby on a DataFrame, yielding an aggregated result with
-  hierarchical columns (GH166_)
+  hierarchical columns (:issue:`166`)
 
 - Can call ``cummin`` and ``cummax`` on Series and DataFrame to get cumulative
-  minimum and maximum, respectively (GH647_)
+  minimum and maximum, respectively (:issue:`647`)
 
 - ``value_range`` added as utility function to get min and max of a dataframe
-  (GH288_)
+  (:issue:`288`)
 
 - Added ``encoding`` argument to ``read_csv``, ``read_table``, ``to_csv`` and
-  ``from_csv`` for non-ascii text (GH717_)
+  ``from_csv`` for non-ascii text (:issue:`717`)
 
 - :ref:`Added <basics.stats>` ``abs`` method to pandas objects
 
@@ -231,28 +231,28 @@ Other API Changes
 - If ``Series.sort`` is called on a column of a DataFrame, an exception will
   now be raised. Before it was possible to accidentally mutate a DataFrame's
   column by doing ``df[col].sort()`` instead of the side-effect free method
-  ``df[col].order()`` (GH316_)
+  ``df[col].order()`` (:issue:`316`)
 
 - Miscellaneous renames and deprecations which will (harmlessly) raise
   ``FutureWarning``
 
-- ``drop`` added as an optional parameter to ``DataFrame.reset_index`` (GH699_)
+- ``drop`` added as an optional parameter to ``DataFrame.reset_index`` (:issue:`699`)
 
 Performance improvements
 ~~~~~~~~~~~~~~~~~~~~~~~~
 
 - :ref:`Cythonized GroupBy aggregations <groupby.aggregate.cython>` no longer
-  presort the data, thus achieving a significant speedup (GH93_).  GroupBy
+  presort the data, thus achieving a significant speedup (:issue:`93`).  GroupBy
   aggregations with Python functions significantly sped up by clever
-  manipulation of the ndarray data type in Cython (GH496_).
+  manipulation of the ndarray data type in Cython (:issue:`496`).
 - Better error message in DataFrame constructor when passed column labels
-  don't match data (GH497_)
+  don't match data (:issue:`497`)
 - Substantially improve performance of multi-GroupBy aggregation when a
-  Python function is passed, reuse ndarray object in Cython (GH496_)
-- Can store objects indexed by tuples and floats in HDFStore (GH492_)
-- Don't print length by default in Series.to_string, add `length` option (GH489_)
+  Python function is passed, reuse ndarray object in Cython (:issue:`496`)
+- Can store objects indexed by tuples and floats in HDFStore (:issue:`492`)
+- Don't print length by default in Series.to_string, add `length` option (:issue:`489`)
 - Improve Cython code for multi-groupby to aggregate without having to sort
-  the data (GH93_)
+  the data (:issue:`93`)
 - Improve MultiIndex reindexing speed by storing tuples in the MultiIndex,
   test for backwards unpickling compatibility
 - Improve column reindexing performance by using specialized Cython take
@@ -262,45 +262,14 @@ Performance improvements
   regression from prior versions
 - Friendlier error message in setup.py if NumPy not installed
 - Use common set of NA-handling operations (sum, mean, etc.) in Panel class
-  also (GH536_)
+  also (:issue:`536`)
 - Default name assignment when calling ``reset_index`` on DataFrame with a
-  regular (non-hierarchical) index (GH476_)
+  regular (non-hierarchical) index (:issue:`476`)
 - Use Cythonized groupers when possible in Series/DataFrame stat ops with
-  ``level`` parameter passed (GH545_)
+  ``level`` parameter passed (:issue:`545`)
 - Ported skiplist data structure to C to speed up ``rolling_median`` by about
-  5-10x in most typical use cases (GH374_)
-
-.. _GH115: https://github.com/pydata/pandas/issues/115
-.. _GH166: https://github.com/pydata/pandas/issues/166
-.. _GH220: https://github.com/pydata/pandas/issues/220
-.. _GH288: https://github.com/pydata/pandas/issues/288
-.. _GH249: https://github.com/pydata/pandas/issues/249
-.. _GH267: https://github.com/pydata/pandas/issues/267
-.. _GH273: https://github.com/pydata/pandas/issues/273
-.. _GH316: https://github.com/pydata/pandas/issues/316
-.. _GH338: https://github.com/pydata/pandas/issues/338
-.. _GH342: https://github.com/pydata/pandas/issues/342
-.. _GH374: https://github.com/pydata/pandas/issues/374
-.. _GH439: https://github.com/pydata/pandas/issues/439
-.. _GH468: https://github.com/pydata/pandas/issues/468
-.. _GH476: https://github.com/pydata/pandas/issues/476
-.. _GH479: https://github.com/pydata/pandas/issues/479
-.. _GH489: https://github.com/pydata/pandas/issues/489
-.. _GH492: https://github.com/pydata/pandas/issues/492
-.. _GH496: https://github.com/pydata/pandas/issues/496
-.. _GH497: https://github.com/pydata/pandas/issues/497
-.. _GH498: https://github.com/pydata/pandas/issues/498
-.. _GH526: https://github.com/pydata/pandas/issues/526
-.. _GH536: https://github.com/pydata/pandas/issues/536
-.. _GH542: https://github.com/pydata/pandas/issues/542
-.. _GH545: https://github.com/pydata/pandas/issues/545
-.. _GH554: https://github.com/pydata/pandas/issues/554
-.. _GH595: https://github.com/pydata/pandas/issues/595
-.. _GH647: https://github.com/pydata/pandas/issues/647
-.. _GH699: https://github.com/pydata/pandas/issues/699
-.. _GH717: https://github.com/pydata/pandas/issues/717
-.. _GH93: https://github.com/pydata/pandas/issues/93
-.. _GH93: https://github.com/pydata/pandas/issues/93
+  5-10x in most typical use cases (:issue:`374`)
+
 .. _PR521: https://github.com/pydata/pandas/pull/521
 .. _PR534: https://github.com/pydata/pandas/pull/534
 .. _PR552: https://github.com/pydata/pandas/pull/552
diff --git a/doc/source/v0.7.1.txt b/doc/source/v0.7.1.txt
index 181751eb1..bc12cb8d2 100644
--- a/doc/source/v0.7.1.txt
+++ b/doc/source/v0.7.1.txt
@@ -10,30 +10,21 @@ New features
 ~~~~~~~~~~~~
 
   - Add ``to_clipboard`` function to pandas namespace for writing objects to
-    the system clipboard (GH774_)
+    the system clipboard (:issue:`774`)
   - Add ``itertuples`` method to DataFrame for iterating through the rows of a
-    dataframe as tuples (GH818_)
+    dataframe as tuples (:issue:`818`)
   - Add ability to pass fill_value and method to DataFrame and Series align
-    method (GH806_, GH807_)
-  - Add fill_value option to reindex, align methods (GH784_)
-  - Enable concat to produce DataFrame from Series (GH787_)
-  - Add ``between`` method to Series (GH802_)
+    method (:issue:`806`, :issue:`807`)
+  - Add fill_value option to reindex, align methods (:issue:`784`)
+  - Enable concat to produce DataFrame from Series (:issue:`787`)
+  - Add ``between`` method to Series (:issue:`802`)
   - Add HTML representation hook to DataFrame for the IPython HTML notebook
-    (GH773_)
+    (:issue:`773`)
   - Support for reading Excel 2007 XML documents using openpyxl
 
 Performance improvements
 ~~~~~~~~~~~~~~~~~~~~~~~~
 
   - Improve performance and memory usage of fillna on DataFrame
-  - Can concatenate a list of Series along axis=1 to obtain a DataFrame (GH787_)
+  - Can concatenate a list of Series along axis=1 to obtain a DataFrame (:issue:`787`)
 
-.. _GH774: https://github.com/pydata/pandas/issues/774
-.. _GH818: https://github.com/pydata/pandas/issues/818
-.. _GH806: https://github.com/pydata/pandas/issues/806
-.. _GH807: https://github.com/pydata/pandas/issues/807
-.. _GH784: https://github.com/pydata/pandas/issues/784
-.. _GH787: https://github.com/pydata/pandas/issues/787
-.. _GH802: https://github.com/pydata/pandas/issues/802
-.. _GH773: https://github.com/pydata/pandas/issues/773
-.. _GH787: https://github.com/pydata/pandas/issues/787
\ No newline at end of file
diff --git a/doc/source/v0.7.2.txt b/doc/source/v0.7.2.txt
index 04f7686ed..c71163935 100644
--- a/doc/source/v0.7.2.txt
+++ b/doc/source/v0.7.2.txt
@@ -8,31 +8,20 @@ This release targets bugs in 0.7.1, and adds a few minor features.
 New features
 ~~~~~~~~~~~~
 
-  - Add additional tie-breaking methods in DataFrame.rank (GH874_)
-  - Add ascending parameter to rank in Series, DataFrame (GH875_)
-  - Add coerce_float option to DataFrame.from_records (GH893_)
-  - Add sort_columns parameter to allow unsorted plots (GH918_)
-  - Enable column access via attributes on GroupBy (GH882_)
-  - Can pass dict of values to DataFrame.fillna (GH661_)
+  - Add additional tie-breaking methods in DataFrame.rank (:issue:`874`)
+  - Add ascending parameter to rank in Series, DataFrame (:issue:`875`)
+  - Add coerce_float option to DataFrame.from_records (:issue:`893`)
+  - Add sort_columns parameter to allow unsorted plots (:issue:`918`)
+  - Enable column access via attributes on GroupBy (:issue:`882`)
+  - Can pass dict of values to DataFrame.fillna (:issue:`661`)
   - Can select multiple hierarchical groups by passing list of values in .ix
-    (GH134_)
-  - Add ``axis`` option to DataFrame.fillna (GH174_)
-  - Add level keyword to ``drop`` for dropping values from a level (GH159_)
+    (:issue:`134`)
+  - Add ``axis`` option to DataFrame.fillna (:issue:`174`)
+  - Add level keyword to ``drop`` for dropping values from a level (:issue:`159`)
 
 Performance improvements
 ~~~~~~~~~~~~~~~~~~~~~~~~
 
-  - Use khash for Series.value_counts, add raw function to algorithms.py (GH861_)
-  - Intercept __builtin__.sum in groupby (GH885_)
+  - Use khash for Series.value_counts, add raw function to algorithms.py (:issue:`861`)
+  - Intercept __builtin__.sum in groupby (:issue:`885`)
 
-.. _GH134: https://github.com/pydata/pandas/issues/134
-.. _GH159: https://github.com/pydata/pandas/issues/159
-.. _GH174: https://github.com/pydata/pandas/issues/174
-.. _GH661: https://github.com/pydata/pandas/issues/661
-.. _GH874: https://github.com/pydata/pandas/issues/874
-.. _GH875: https://github.com/pydata/pandas/issues/875
-.. _GH893: https://github.com/pydata/pandas/issues/893
-.. _GH918: https://github.com/pydata/pandas/issues/918
-.. _GH882: https://github.com/pydata/pandas/issues/882
-.. _GH861: https://github.com/pydata/pandas/issues/861
-.. _GH885: https://github.com/pydata/pandas/issues/885
diff --git a/doc/source/v0.8.1.txt b/doc/source/v0.8.1.txt
index 0bfa1d20e..cecf6f16c 100644
--- a/doc/source/v0.8.1.txt
+++ b/doc/source/v0.8.1.txt
@@ -11,36 +11,26 @@ New features
 ~~~~~~~~~~~~
 
   - Add :ref:`vectorized string processing methods <basics.string_methods>`
-    accessible via Series.str (GH620_)
-  - Add option to disable adjustment in EWMA (GH1584_)
-  - :ref:`Radviz plot <visualization.radviz>` (GH1566_)
+    accessible via Series.str (:issue:`620`)
+  - Add option to disable adjustment in EWMA (:issue:`1584`)
+  - :ref:`Radviz plot <visualization.radviz>` (:issue:`1566`)
   - :ref:`Parallel coordinates plot <visualization.parallel_coordinates>`
   - :ref:`Bootstrap plot <visualization.bootstrap>`
-  - Per column styles and secondary y-axis plotting (GH1559_)
-  - New datetime converters millisecond plotting  (GH1599_)
-  - Add option to disable "sparse" display of hierarchical indexes (GH1538_)
+  - Per column styles and secondary y-axis plotting (:issue:`1559`)
+  - New datetime converters millisecond plotting  (:issue:`1599`)
+  - Add option to disable "sparse" display of hierarchical indexes (:issue:`1538`)
   - Series/DataFrame's ``set_index`` method can :ref:`append levels
-    <indexing.set_index>` to an existing Index/MultiIndex (GH1569_, GH1577_)
+    <indexing.set_index>` to an existing Index/MultiIndex (:issue:`1569`, :issue:`1577`)
 
 Performance improvements
 ~~~~~~~~~~~~~~~~~~~~~~~~
 
   - Improved implementation of rolling min and max (thanks to `Bottleneck
     <http://berkeleyanalytics.com/bottleneck/>`__ !)
-  - Add accelerated ``'median'`` GroupBy option (GH1358_)
+  - Add accelerated ``'median'`` GroupBy option (:issue:`1358`)
   - Significantly improve the performance of parsing ISO8601-format date
-    strings with ``DatetimeIndex`` or ``to_datetime`` (GH1571_)
+    strings with ``DatetimeIndex`` or ``to_datetime`` (:issue:`1571`)
   - Improve the performance of GroupBy on single-key aggregations and use with
     Categorical types
   - Significant datetime parsing performance improvments
 
-.. _GH620: https://github.com/pydata/pandas/issues/620
-.. _GH1358: https://github.com/pydata/pandas/issues/1358
-.. _GH1538: https://github.com/pydata/pandas/issues/1538
-.. _GH1559: https://github.com/pydata/pandas/issues/1559
-.. _GH1584: https://github.com/pydata/pandas/issues/1584
-.. _GH1566: https://github.com/pydata/pandas/issues/1566
-.. _GH1569: https://github.com/pydata/pandas/issues/1569
-.. _GH1571: https://github.com/pydata/pandas/issues/1571
-.. _GH1577: https://github.com/pydata/pandas/issues/1577
-.. _GH1599: https://github.com/pydata/pandas/issues/1599
diff --git a/doc/source/v0.9.0.txt b/doc/source/v0.9.0.txt
index 3b91e6425..58cd9bbb4 100644
--- a/doc/source/v0.9.0.txt
+++ b/doc/source/v0.9.0.txt
@@ -13,19 +13,19 @@ New features
 ~~~~~~~~~~~~
 
   - Add ``encode`` and ``decode`` for unicode handling to :ref:`vectorized
-    string processing methods <basics.string_methods>` in Series.str  (GH1706_)
-  - Add ``DataFrame.to_latex`` method (GH1735_)
-  - Add convenient expanding window equivalents of all rolling_* ops (GH1785_)
+    string processing methods <basics.string_methods>` in Series.str  (:issue:`1706`)
+  - Add ``DataFrame.to_latex`` method (:issue:`1735`)
+  - Add convenient expanding window equivalents of all rolling_* ops (:issue:`1785`)
   - Add Options class to pandas.io.data for fetching options data from Yahoo!
-    Finance (GH1748_, GH1739_)
+    Finance (:issue:`1748`, :issue:`1739`)
   - More flexible parsing of boolean values (Yes, No, TRUE, FALSE, etc)
-    (GH1691_, GH1295_)
+    (:issue:`1691`, :issue:`1295`)
   - Add ``level`` parameter to ``Series.reset_index``
-  - ``TimeSeries.between_time`` can now select times across midnight (GH1871_)
-  - Series constructor can now handle generator as input (GH1679_)
+  - ``TimeSeries.between_time`` can now select times across midnight (:issue:`1871`)
+  - Series constructor can now handle generator as input (:issue:`1679`)
   - ``DataFrame.dropna`` can now take multiple axes (tuple/list) as input
-    (GH924_)
-  - Enable ``skip_footer`` parameter in ``ExcelFile.parse`` (GH1843_)
+    (:issue:`924`)
+  - Enable ``skip_footer`` parameter in ``ExcelFile.parse`` (:issue:`1843`)
 
 API changes
 ~~~~~~~~~~~
@@ -58,57 +58,37 @@ API changes
    s2
 
 - Deprecated ``day_of_year`` API removed from PeriodIndex, use ``dayofyear``
-  (GH1723_)
+  (:issue:`1723`)
 
 - Don't modify NumPy suppress printoption to True at import time
 
 - The internal HDF5 data arrangement for DataFrames has been transposed.  Legacy
-  files will still be readable by HDFStore (GH1834_, GH1824_)
+  files will still be readable by HDFStore (:issue:`1834`, :issue:`1824`)
 
 - Legacy cruft removed: pandas.stats.misc.quantileTS
 
-- Use ISO8601 format for Period repr: monthly, daily, and on down (GH1776_)
+- Use ISO8601 format for Period repr: monthly, daily, and on down (:issue:`1776`)
 
 - Empty DataFrame columns are now created as object dtype. This will prevent a
   class of TypeErrors that was occurring in code where the dtype of a column
   would depend on the presence of data or not (e.g. a SQL query having results)
-  (GH1783_)
+  (:issue:`1783`)
 
 - Setting parts of DataFrame/Panel using ix now aligns input Series/DataFrame
-  (GH1630_)
+  (:issue:`1630`)
 
 - ``first`` and ``last`` methods in ``GroupBy`` no longer drop non-numeric
-  columns (GH1809_)
+  columns (:issue:`1809`)
 
 - Resolved inconsistencies in specifying custom NA values in text parser.
   ``na_values`` of type dict no longer override default NAs unless
-  ``keep_default_na`` is set to false explicitly (GH1657_)
+  ``keep_default_na`` is set to false explicitly (:issue:`1657`)
 
 - ``DataFrame.dot`` will not do data alignment, and also work with Series
-  (GH1915_)
+  (:issue:`1915`)
 
 
 See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
 on GitHub for a complete list.
 
-.. _GH1706: https://github.com/pydata/pandas/issues/1706
-.. _GH1735: https://github.com/pydata/pandas/issues/1735
-.. _GH1785: https://github.com/pydata/pandas/issues/1785
-.. _GH1748: https://github.com/pydata/pandas/issues/1748
-.. _GH1739: https://github.com/pydata/pandas/issues/1739
-.. _GH1691: https://github.com/pydata/pandas/issues/1691
-.. _GH1295: https://github.com/pydata/pandas/issues/1295
-.. _GH1723: https://github.com/pydata/pandas/issues/1723
-.. _GH1834: https://github.com/pydata/pandas/issues/1834
-.. _GH1824: https://github.com/pydata/pandas/issues/1824
-.. _GH1776: https://github.com/pydata/pandas/issues/1776
-.. _GH1783: https://github.com/pydata/pandas/issues/1783
-.. _GH1630: https://github.com/pydata/pandas/issues/1630
-.. _GH1809: https://github.com/pydata/pandas/issues/1809
-.. _GH1657: https://github.com/pydata/pandas/issues/1657
-.. _GH1871: https://github.com/pydata/pandas/issues/1871
-.. _GH1679: https://github.com/pydata/pandas/issues/1679
-.. _GH1915: https://github.com/pydata/pandas/issues/1915
-.. _GH924: https://github.com/pydata/pandas/issues/924
-.. _GH1843: https://github.com/pydata/pandas/issues/1843
diff --git a/doc/source/v0.9.1.txt b/doc/source/v0.9.1.txt
index 6733ab8a9..593d2e60c 100644
--- a/doc/source/v0.9.1.txt
+++ b/doc/source/v0.9.1.txt
@@ -13,7 +13,7 @@ New features
 ~~~~~~~~~~~~
 
   - `Series.sort`, `DataFrame.sort`, and `DataFrame.sort_index` can now be
-    specified in a per-column manner to support multiple sort orders (GH928_)
+    specified in a per-column manner to support multiple sort orders (:issue:`928`)
 
     .. ipython:: python
 
@@ -24,7 +24,7 @@ New features
 
   - `DataFrame.rank` now supports additional argument values for the
     `na_option` parameter so missing values can be assigned either the largest
-    or the smallest rank (GH1508_, GH2159_)
+    or the smallest rank (:issue:`1508`, :issue:`2159`)
 
     .. ipython:: python
 
@@ -40,7 +40,7 @@ New features
 
 
   - DataFrame has new `where` and `mask` methods to select values according to a
-    given boolean mask (GH2109_, GH2151_)
+    given boolean mask (:issue:`2109`, :issue:`2151`)
 
 	DataFrame currently supports slicing via a boolean vector the same length as the DataFrame (inside the `[]`).
 	The returned DataFrame has the same number of columns as the original, but is sliced on its index.
@@ -81,7 +81,7 @@ New features
 
 	   df.mask(df<=0)
 
-  - Enable referencing of Excel columns by their column names (GH1936_)
+  - Enable referencing of Excel columns by their column names (:issue:`1936`)
 
     .. ipython:: python
 
@@ -92,13 +92,13 @@ New features
 
   - Added option to disable pandas-style tick locators and formatters
     using `series.plot(x_compat=True)` or `pandas.plot_params['x_compat'] =
-    True` (GH2205_)
+    True` (:issue:`2205`)
   - Existing TimeSeries methods `at_time` and `between_time` were added to
-    DataFrame (GH2149_)
-  - DataFrame.dot can now accept ndarrays (GH2042_)
-  - DataFrame.drop now supports non-unique indexes (GH2101_)
-  - Panel.shift now supports negative periods (GH2164_)
-  - DataFrame now support unary ~ operator (GH2110_)
+    DataFrame (:issue:`2149`)
+  - DataFrame.dot can now accept ndarrays (:issue:`2042`)
+  - DataFrame.drop now supports non-unique indexes (:issue:`2101`)
+  - Panel.shift now supports negative periods (:issue:`2164`)
+  - DataFrame now support unary ~ operator (:issue:`2110`)
 
 API changes
 ~~~~~~~~~~~
@@ -116,7 +116,7 @@ API changes
 
 
   - Period.end_time now returns the last nanosecond in the time interval
-    (GH2124_, GH2125_, GH1764_)
+    (:issue:`2124`, :issue:`2125`, :issue:`1764`)
 
     .. ipython:: python
 
@@ -126,7 +126,7 @@ API changes
 
 
   - File parsers no longer coerce to float or bool for columns that have custom
-    converters specified (GH2184_)
+    converters specified (:issue:`2184`)
 
     .. ipython:: python
 
@@ -139,95 +139,3 @@ API changes
 See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
 on GitHub for a complete list.
-
-
-.. _GH1508: https://github.com/pydata/pandas/issues/1508
-.. _GH928: https://github.com/pydata/pandas/issues/928
-.. _GH2159: https://github.com/pydata/pandas/issues/2159
-.. _GH2109: https://github.com/pydata/pandas/issues/2109
-.. _GH2151: https://github.com/pydata/pandas/issues/2151
-.. _GH2149: https://github.com/pydata/pandas/issues/2149
-.. _GH2101: https://github.com/pydata/pandas/issues/2101
-.. _GH2042: https://github.com/pydata/pandas/issues/2042
-.. _GH1936: https://github.com/pydata/pandas/issues/1936
-.. _GH1764: https://github.com/pydata/pandas/issues/1764
-.. _GH2125: https://github.com/pydata/pandas/issues/2125
-.. _GH2124: https://github.com/pydata/pandas/issues/2124
-.. _GH2110: https://github.com/pydata/pandas/issues/2110
-.. _GH2184: https://github.com/pydata/pandas/issues/2184
-.. _GH2205: https://github.com/pydata/pandas/issues/2205
-
-.. _GH2181: https://github.com/pydata/pandas/issues/2181
-.. _GH2180: https://github.com/pydata/pandas/issues/2180
-.. _GH2176: https://github.com/pydata/pandas/issues/2176
-.. _GH2174: https://github.com/pydata/pandas/issues/2174
-.. _GH2173: https://github.com/pydata/pandas/issues/2173
-.. _GH2170: https://github.com/pydata/pandas/issues/2170
-.. _GH2169: https://github.com/pydata/pandas/issues/2169
-.. _GH2167: https://github.com/pydata/pandas/issues/2167
-.. _GH2166: https://github.com/pydata/pandas/issues/2166
-.. _GH2165: https://github.com/pydata/pandas/issues/2165
-.. _GH2164: https://github.com/pydata/pandas/issues/2164
-.. _GH2163: https://github.com/pydata/pandas/issues/2163
-.. _GH2161: https://github.com/pydata/pandas/issues/2161
-.. _GH2157: https://github.com/pydata/pandas/issues/2157
-.. _GH2155: https://github.com/pydata/pandas/issues/2155
-.. _GH2152: https://github.com/pydata/pandas/issues/2152
-.. _GH2150: https://github.com/pydata/pandas/issues/2150
-.. _GH2148: https://github.com/pydata/pandas/issues/2148
-.. _GH2147: https://github.com/pydata/pandas/issues/2147
-.. _GH2146: https://github.com/pydata/pandas/issues/2146
-.. _GH2144: https://github.com/pydata/pandas/issues/2144
-.. _GH2140: https://github.com/pydata/pandas/issues/2140
-.. _GH2135: https://github.com/pydata/pandas/issues/2135
-.. _GH2133: https://github.com/pydata/pandas/issues/2133
-.. _GH2131: https://github.com/pydata/pandas/issues/2131
-.. _GH2129: https://github.com/pydata/pandas/issues/2129
-.. _GH2128: https://github.com/pydata/pandas/issues/2128
-.. _GH2127: https://github.com/pydata/pandas/issues/2127
-.. _GH2122: https://github.com/pydata/pandas/issues/2122
-.. _GH2120: https://github.com/pydata/pandas/issues/2120
-.. _GH2119: https://github.com/pydata/pandas/issues/2119
-.. _GH2117: https://github.com/pydata/pandas/issues/2117
-.. _GH2116: https://github.com/pydata/pandas/issues/2116
-.. _GH2114: https://github.com/pydata/pandas/issues/2114
-.. _GH2113: https://github.com/pydata/pandas/issues/2113
-.. _GH2111: https://github.com/pydata/pandas/issues/2111
-.. _GH2108: https://github.com/pydata/pandas/issues/2108
-.. _GH2107: https://github.com/pydata/pandas/issues/2107
-.. _GH2103: https://github.com/pydata/pandas/issues/2103
-.. _GH2100: https://github.com/pydata/pandas/issues/2100
-.. _GH2096: https://github.com/pydata/pandas/issues/2096
-.. _GH2095: https://github.com/pydata/pandas/issues/2095
-.. _GH2093: https://github.com/pydata/pandas/issues/2093
-.. _GH2087: https://github.com/pydata/pandas/issues/2087
-.. _GH2086: https://github.com/pydata/pandas/issues/2086
-.. _GH2083: https://github.com/pydata/pandas/issues/2083
-.. _GH2082: https://github.com/pydata/pandas/issues/2082
-.. _GH2080: https://github.com/pydata/pandas/issues/2080
-.. _GH2079: https://github.com/pydata/pandas/issues/2079
-.. _GH2078: https://github.com/pydata/pandas/issues/2078
-.. _GH2077: https://github.com/pydata/pandas/issues/2077
-.. _GH2075: https://github.com/pydata/pandas/issues/2075
-.. _GH2068: https://github.com/pydata/pandas/issues/2068
-.. _GH2066: https://github.com/pydata/pandas/issues/2066
-.. _GH2065: https://github.com/pydata/pandas/issues/2065
-.. _GH2063: https://github.com/pydata/pandas/issues/2063
-.. _GH2061: https://github.com/pydata/pandas/issues/2061
-.. _GH2060: https://github.com/pydata/pandas/issues/2060
-.. _GH2059: https://github.com/pydata/pandas/issues/2059
-.. _GH2056: https://github.com/pydata/pandas/issues/2056
-.. _GH2051: https://github.com/pydata/pandas/issues/2051
-.. _GH2049: https://github.com/pydata/pandas/issues/2049
-.. _GH2043: https://github.com/pydata/pandas/issues/2043
-.. _GH2041: https://github.com/pydata/pandas/issues/2041
-.. _GH2032: https://github.com/pydata/pandas/issues/2032
-.. _GH2029: https://github.com/pydata/pandas/issues/2029
-.. _GH2018: https://github.com/pydata/pandas/issues/2018
-.. _GH2008: https://github.com/pydata/pandas/issues/2008
-.. _GH2005: https://github.com/pydata/pandas/issues/2005
-.. _GH1979: https://github.com/pydata/pandas/issues/1979
-.. _GH1976: https://github.com/pydata/pandas/issues/1976
-.. _GH1959: https://github.com/pydata/pandas/issues/1959
-.. _GH1890: https://github.com/pydata/pandas/issues/1890
-.. _GH1555: https://github.com/pydata/pandas/issues/1555
