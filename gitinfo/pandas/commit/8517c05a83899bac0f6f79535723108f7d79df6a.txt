commit 8517c05a83899bac0f6f79535723108f7d79df6a
Author: John David Reaver <jdreaver@adlerhorst.com>
Date:   Tue Feb 18 12:05:13 2014 -0800

    BUG: Fix for GH6399, mergesort is unstable when ascending=False
    
    BUG: Fix for GH6399, mergesort is unstable when ascending=False. Update changes

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 566ad98d8..2a7506ac4 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -107,6 +107,7 @@ Improvements to existing features
 Bug Fixes
 ~~~~~~~~~
 
+- Bug in ``pd.DataFrame.sort_index`` where mergesort wasn't stable when ``ascending=False`` (:issue:`6399`)
 - Bug in ``pd.tseries.frequencies.to_offset`` when argument has leading zeroes (:issue:`6391`)
 - Bug in version string gen. for dev versions with shallow clones / install from tarball (:issue:`6127`)
 - Inconsistent tz parsing Timestamp/to_datetime for current year (:issue:`5958`)
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index e5945128f..4a914827f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2612,11 +2612,14 @@ class DataFrame(NDFrame):
                 if k.ndim == 2:
                     raise ValueError('Cannot sort by duplicate column %s'
                                      % str(by))
-                indexer = k.argsort(kind=kind)
                 if isinstance(ascending, (tuple, list)):
                     ascending = ascending[0]
+
+                if not ascending:
+                    k = k[::-1]
+                indexer = k.argsort(kind=kind)
                 if not ascending:
-                    indexer = indexer[::-1]
+                    indexer = indexer.max() - indexer[::-1]
         elif isinstance(labels, MultiIndex):
             indexer = _lexsort_indexer(labels.labels, orders=ascending)
             indexer = com._ensure_platform_int(indexer)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index dd8ba58a7..7d3280b78 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -9770,6 +9770,13 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         cp = s.copy()
         cp.sort() # it works!
 
+    def test_stable_descending_sort(self):
+        df = DataFrame([[2, 'first'], [2, 'second'], [1, 'a'], [1, 'b']],
+                       columns=['sort_col', 'order'])
+        sorted = df.sort_index(by='sort_col', kind='mergesort',
+                               ascending=False)
+        assert_frame_equal(df, sorted)
+
     def test_combine_first(self):
         # disjoint
         head, tail = self.frame[:5], self.frame[5:]
