commit 52241a7d8a8be2cc1ae40cbde054b0983ac1f429
Author: Jeff Reback <jeff@reback.net>
Date:   Mon Nov 14 15:49:01 2016 -0500

    BLD: fix linting check for .pyx
    
    closes #14659

diff --git a/ci/lint.sh b/ci/lint.sh
index 115a2cdaf..d6390a16b 100755
--- a/ci/lint.sh
+++ b/ci/lint.sh
@@ -10,18 +10,24 @@ if [ "$LINT" ]; then
     # pandas/rpy is deprecated and will be removed.
     # pandas/src is C code, so no need to search there.
     echo "Linting  *.py"
-    flake8 pandas --filename '*.py' --exclude pandas/rpy,pandas/src
+    flake8 pandas --filename=*.py --exclude pandas/rpy,pandas/src
+    if [ $? -ne "0" ]; then
+        RET=1
+    fi
     echo "Linting *.py DONE"
 
     echo "Linting *.pyx"
-    flake8 pandas --filename '*.pyx' --select=E501,E302,E203,E111,E114,E221,E303,E128,E231,E126
+    flake8 pandas --filename=*.pyx --select=E501,E302,E203,E111,E114,E221,E303,E128,E231,E126
+    if [ $? -ne "0" ]; then
+        RET=1
+    fi
     echo "Linting *.pyx DONE"
 
     echo "Linting *.pxi.in"
     for path in 'src'
     do
         echo "linting -> pandas/$path"
-        flake8 pandas/$path --filename '*.pxi.in' --select=E501,E302,E203,E111,E114,E221,E303,E231,E126
+        flake8 pandas/$path --filename=*.pxi.in --select=E501,E302,E203,E111,E114,E221,E303,E231,E126
         if [ $? -ne "0" ]; then
             RET=1
         fi
diff --git a/pandas/tslib.pyx b/pandas/tslib.pyx
index 685de214c..91d3f0ef7 100644
--- a/pandas/tslib.pyx
+++ b/pandas/tslib.pyx
@@ -688,7 +688,8 @@ class Timestamp(_Timestamp):
         def validate(k, v):
             """ validate integers """
             if not isinstance(v, int):
-                raise ValueError("value must be an integer, received {v} for {k}".format(v=type(v), k=k))
+                raise ValueError("value must be an integer, received "
+                                 "{v} for {k}".format(v=type(v), k=k))
             return v
 
         for k, v in kwds.items():
@@ -5105,7 +5106,8 @@ cpdef normalize_date(object dt):
     normalized : datetime.datetime or Timestamp
     """
     if is_timestamp(dt):
-        return dt.replace(hour=0, minute=0, second=0, microsecond=0, nanosecond=0)
+        return dt.replace(hour=0, minute=0, second=0, microsecond=0,
+                          nanosecond=0)
     elif PyDateTime_Check(dt):
         return dt.replace(hour=0, minute=0, second=0, microsecond=0)
     elif PyDate_Check(dt):
