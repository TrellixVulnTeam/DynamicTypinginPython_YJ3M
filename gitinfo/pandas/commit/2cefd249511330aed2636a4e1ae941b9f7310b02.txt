commit 2cefd249511330aed2636a4e1ae941b9f7310b02
Author: Chang She <changshe@gmail.com>
Date:   Wed Dec 5 20:16:07 2012 -0500

    TST: test cases for wide DataFrame repr

diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index fc74c2a18..e85eaefc7 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -415,6 +415,94 @@ class TestDataFrameFormatting(unittest.TestCase):
 
         set_option('print.expand_frame_repr', False)
         set_option('test.interactive', False)
+        set_option('print.line_width', 80)
+
+    def test_wide_repr_named(self):
+        set_option('test.interactive', True)
+        col = lambda l, k: [tm.rands(k) for _ in xrange(l)]
+        df = DataFrame([col(20, 25) for _ in range(10)])
+        df.index.name = 'DataFrame Index'
+        rep_str = repr(df)
+        set_option('print.expand_frame_repr', True)
+        wide_repr = repr(df)
+        self.assert_(rep_str != wide_repr)
+
+        set_option('print.line_width', 120)
+        wider_repr = repr(df)
+        self.assert_(len(wider_repr) < len(wide_repr))
+
+        for line in wide_repr.splitlines()[1::13]:
+            self.assert_('DataFrame Index' in line)
+
+        set_option('print.expand_frame_repr', False)
+        set_option('test.interactive', False)
+        set_option('print.line_width', 80)
+
+    def test_wide_repr_multiindex(self):
+        set_option('test.interactive', True)
+        col = lambda l, k: [tm.rands(k) for _ in xrange(l)]
+        midx = pandas.MultiIndex.from_arrays([np.array(col(10, 5)),
+                                              np.array(col(10, 5))])
+        df = DataFrame([col(20, 25) for _ in range(10)],
+                       index=midx)
+        df.index.names = ['Level 0', 'Level 1']
+        rep_str = repr(df)
+        set_option('print.expand_frame_repr', True)
+        wide_repr = repr(df)
+        self.assert_(rep_str != wide_repr)
+
+        set_option('print.line_width', 120)
+        wider_repr = repr(df)
+        self.assert_(len(wider_repr) < len(wide_repr))
+
+        for line in wide_repr.splitlines()[1::13]:
+            self.assert_('Level 0 Level 1' in line)
+
+        set_option('print.expand_frame_repr', False)
+        set_option('test.interactive', False)
+        set_option('print.line_width', 80)
+
+    def test_wide_repr_multiindex_cols(self):
+        set_option('test.interactive', True)
+        col = lambda l, k: [tm.rands(k) for _ in xrange(l)]
+        midx = pandas.MultiIndex.from_arrays([np.array(col(10, 5)),
+                                              np.array(col(10, 5))])
+        mcols = pandas.MultiIndex.from_arrays([np.array(col(20, 3)),
+                                               np.array(col(20, 3))])
+        df = DataFrame([col(20, 25) for _ in range(10)],
+                       index=midx, columns=mcols)
+        df.index.names = ['Level 0', 'Level 1']
+        rep_str = repr(df)
+        set_option('print.expand_frame_repr', True)
+        wide_repr = repr(df)
+        self.assert_(rep_str != wide_repr)
+
+        set_option('print.line_width', 120)
+        wider_repr = repr(df)
+        self.assert_(len(wider_repr) < len(wide_repr))
+
+        self.assert_(len(wide_repr.splitlines()) == 14 * 10 - 1)
+
+        set_option('print.expand_frame_repr', False)
+        set_option('test.interactive', False)
+        set_option('print.line_width', 80)
+
+    def test_wide_repr_unicode(self):
+        set_option('test.interactive', True)
+        col = lambda l, k: [tm.randu(k) for _ in xrange(l)]
+        df = DataFrame([col(20, 25) for _ in range(10)])
+        rep_str = repr(df)
+        set_option('print.expand_frame_repr', True)
+        wide_repr = repr(df)
+        self.assert_(rep_str != wide_repr)
+
+        set_option('print.line_width', 120)
+        wider_repr = repr(df)
+        self.assert_(len(wider_repr) < len(wide_repr))
+
+        set_option('print.expand_frame_repr', False)
+        set_option('test.interactive', False)
+        set_option('print.line_width', 80)
 
     def test_to_string(self):
         from pandas import read_table
