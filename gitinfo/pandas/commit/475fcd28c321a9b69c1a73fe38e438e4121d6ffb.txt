commit 475fcd28c321a9b69c1a73fe38e438e4121d6ffb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Feb 5 17:52:42 2012 -0500

    BUG: ignore encoding option when writing csv in python 3, GH #738

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 5e59592d2..8bd91cc0a 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -850,25 +850,27 @@ class UTF8Recoder:
     def next(self):
         return self.reader.next().encode("utf-8")
 
-class UnicodeReader:
-    """
-    A CSV reader which will iterate over lines in the CSV file "f",
-    which is encoded in the given encoding.
-
-    On Python 3, this is replaced (below) by csv.reader, which handles unicode.
-    """
-
-    def __init__(self, f, dialect=csv.excel, encoding="utf-8", **kwds):
-        f = UTF8Recoder(f, encoding)
-        self.reader = csv.reader(f, dialect=dialect, **kwds)
+if py3compat.PY3:  # pragma: no cover
+    def UnicodeReader(f, dialect=csv.excel, encoding="utf-8", **kwds):
+        # ignore encoding
+        return csv.reader(f, dialect=csv.excel, **kwds)
+else:
+    class UnicodeReader:
+        """
+        A CSV reader which will iterate over lines in the CSV file "f",
+        which is encoded in the given encoding.
 
-    def next(self):
-        row = self.reader.next()
-        return [unicode(s, "utf-8") for s in row]
+        On Python 3, this is replaced (below) by csv.reader, which handles
+        unicode.
+        """
 
-    def __iter__(self):  # pragma: no cover
-        return self
+        def __init__(self, f, dialect=csv.excel, encoding="utf-8", **kwds):
+            f = UTF8Recoder(f, encoding)
+            self.reader = csv.reader(f, dialect=dialect, **kwds)
 
-if py3compat.PY3:  # pragma: no cover
-    UnicodeReader = csv.reader
+        def next(self):
+            row = self.reader.next()
+            return [unicode(s, "utf-8") for s in row]
 
+        def __iter__(self):  # pragma: no cover
+            return self
