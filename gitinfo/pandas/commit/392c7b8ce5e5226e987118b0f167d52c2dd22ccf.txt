commit 392c7b8ce5e5226e987118b0f167d52c2dd22ccf
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Tue Dec 31 12:27:25 2019 +0000

    TYP: check_untyped_defs various (#30572)

diff --git a/pandas/compat/pickle_compat.py b/pandas/compat/pickle_compat.py
index e8fd39045..0a1a1376b 100644
--- a/pandas/compat/pickle_compat.py
+++ b/pandas/compat/pickle_compat.py
@@ -169,9 +169,9 @@ _class_locations_map = {
 
 
 # our Unpickler sub-class to override methods and some dispatcher
-# functions for compat
-
+# functions for compat and uses a non-public class of the pickle module.
 
+# error: Name 'pkl._Unpickler' is not defined
 class Unpickler(pkl._Unpickler):  # type: ignore
     def find_class(self, module, name):
         # override superclass
diff --git a/pandas/core/arrays/sparse/dtype.py b/pandas/core/arrays/sparse/dtype.py
index e3e0064c8..55de41794 100644
--- a/pandas/core/arrays/sparse/dtype.py
+++ b/pandas/core/arrays/sparse/dtype.py
@@ -64,7 +64,7 @@ class SparseDtype(ExtensionDtype):
     # hash(nan) is (sometimes?) 0.
     _metadata = ("_dtype", "_fill_value", "_is_na_fill_value")
 
-    def __init__(self, dtype: Dtype = np.float64, fill_value: Any = None) -> None:
+    def __init__(self, dtype: Dtype = np.float64, fill_value: Any = None):
 
         if isinstance(dtype, type(self)):
             if fill_value is None:
diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index ba0a4d81a..afdd8a01e 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -300,14 +300,15 @@ def table_schema_cb(key):
     _enable_data_resource_formatter(cf.get_option(key))
 
 
-def is_terminal():
+def is_terminal() -> bool:
     """
     Detect if Python is running in a terminal.
 
     Returns True if Python is running in a terminal or False if not.
     """
     try:
-        ip = get_ipython()
+        # error: Name 'get_ipython' is not defined
+        ip = get_ipython()  # type: ignore
     except NameError:  # assume standard Python interpreter in a terminal
         return True
     else:
diff --git a/pandas/core/dtypes/generic.py b/pandas/core/dtypes/generic.py
index aa0f7d2ab..4c3f8b737 100644
--- a/pandas/core/dtypes/generic.py
+++ b/pandas/core/dtypes/generic.py
@@ -4,7 +4,10 @@
 # define abstract base classes to enable isinstance type checking on our
 # objects
 def create_pandas_abc_type(name, attr, comp):
-    @classmethod
+
+    # https://github.com/python/mypy/issues/1006
+    # error: 'classmethod' used with a non-method
+    @classmethod  # type: ignore
     def _check(cls, inst) -> bool:
         return getattr(inst, attr, "_typ") in comp
 
diff --git a/pandas/core/groupby/groupby.py b/pandas/core/groupby/groupby.py
index 8ff055ff4..0edf1c957 100644
--- a/pandas/core/groupby/groupby.py
+++ b/pandas/core/groupby/groupby.py
@@ -2540,9 +2540,9 @@ def get_groupby(
     squeeze: bool = False,
     observed: bool = False,
     mutated: bool = False,
-):
+) -> GroupBy:
 
-    klass: Union[Type["SeriesGroupBy"], Type["DataFrameGroupBy"]]
+    klass: Type[GroupBy]
     if isinstance(obj, Series):
         from pandas.core.groupby.generic import SeriesGroupBy
 
diff --git a/pandas/core/indexes/category.py b/pandas/core/indexes/category.py
index ba476f9e2..531014e4a 100644
--- a/pandas/core/indexes/category.py
+++ b/pandas/core/indexes/category.py
@@ -1,5 +1,5 @@
 import operator
-from typing import Any
+from typing import Any, List
 
 import numpy as np
 
@@ -583,6 +583,7 @@ class CategoricalIndex(Index, accessor.PandasDelegate):
 
         target = ibase.ensure_index(target)
 
+        missing: List[int]
         if self.equals(target):
             indexer = None
             missing = []
diff --git a/setup.cfg b/setup.cfg
index 1a946fa03..c1dcc4528 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -181,15 +181,9 @@ check_untyped_defs=False
 [mypy-pandas.core.computation.scope]
 check_untyped_defs=False
 
-[mypy-pandas.core.config_init]
-check_untyped_defs=False
-
 [mypy-pandas.core.dtypes.cast]
 check_untyped_defs=False
 
-[mypy-pandas.core.dtypes.generic]
-check_untyped_defs=False
-
 [mypy-pandas.core.frame]
 check_untyped_defs=False
 
@@ -208,9 +202,6 @@ check_untyped_defs=False
 [mypy-pandas.core.indexes.base]
 check_untyped_defs=False
 
-[mypy-pandas.core.indexes.category]
-check_untyped_defs=False
-
 [mypy-pandas.core.indexes.datetimelike]
 check_untyped_defs=False
 
@@ -256,9 +247,6 @@ check_untyped_defs=False
 [mypy-pandas.core.reshape.reshape]
 check_untyped_defs=False
 
-[mypy-pandas.core.series]
-check_untyped_defs=False
-
 [mypy-pandas.core.strings]
 check_untyped_defs=False
 
