commit d553ab3e5650d105de8e02ae6fd57d03af57b214
Author: Anjali2019 <Anjali2019@users.noreply.github.com>
Date:   Thu Oct 4 13:24:06 2018 +0200

    TST: Fixturize series/test_combine_concat.py (#22964)

diff --git a/pandas/tests/series/test_combine_concat.py b/pandas/tests/series/test_combine_concat.py
index 35ba4fbf0..8b021ab81 100644
--- a/pandas/tests/series/test_combine_concat.py
+++ b/pandas/tests/series/test_combine_concat.py
@@ -15,29 +15,28 @@ from pandas import compat
 from pandas.util.testing import assert_series_equal
 import pandas.util.testing as tm
 
-from .common import TestData
 
+class TestSeriesCombine():
 
-class TestSeriesCombine(TestData):
-
-    def test_append(self):
-        appendedSeries = self.series.append(self.objSeries)
+    def test_append(self, datetime_series, string_series, object_series):
+        appendedSeries = string_series.append(object_series)
         for idx, value in compat.iteritems(appendedSeries):
-            if idx in self.series.index:
-                assert value == self.series[idx]
-            elif idx in self.objSeries.index:
-                assert value == self.objSeries[idx]
+            if idx in string_series.index:
+                assert value == string_series[idx]
+            elif idx in object_series.index:
+                assert value == object_series[idx]
             else:
                 raise AssertionError("orphaned index!")
 
-        pytest.raises(ValueError, self.ts.append, self.ts,
+        pytest.raises(ValueError, datetime_series.append, datetime_series,
                       verify_integrity=True)
 
-    def test_append_many(self):
-        pieces = [self.ts[:5], self.ts[5:10], self.ts[10:]]
+    def test_append_many(self, datetime_series):
+        pieces = [datetime_series[:5], datetime_series[5:10],
+                  datetime_series[10:]]
 
         result = pieces[0].append(pieces[1:])
-        assert_series_equal(result, self.ts)
+        assert_series_equal(result, datetime_series)
 
     def test_append_duplicates(self):
         # GH 13677
