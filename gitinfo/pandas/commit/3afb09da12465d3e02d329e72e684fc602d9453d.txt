commit 3afb09da12465d3e02d329e72e684fc602d9453d
Author: jreback <jeff@reback.net>
Date:   Fri May 23 07:23:21 2014 -0400

    DOC: cookbook.rst entry

diff --git a/doc/source/cookbook.rst b/doc/source/cookbook.rst
index 3e2cd6541..6ab49a8c4 100644
--- a/doc/source/cookbook.rst
+++ b/doc/source/cookbook.rst
@@ -413,6 +413,41 @@ using that handle to read.
 `Write a multi-row index CSV without writing duplicates
 <http://stackoverflow.com/questions/17349574/pandas-write-multiindex-rows-with-to-csv>`__
 
+Parsing date components in multi-columns is faster with a format
+
+.. code-block:: python
+
+    In [30]: i = pd.date_range('20000101',periods=10000)
+
+    In [31]: df = pd.DataFrame(dict(year = i.year, month = i.month, day = i.day))
+
+    In [32]: df.head()
+    Out[32]:
+       day  month  year
+    0    1      1  2000
+    1    2      1  2000
+    2    3      1  2000
+    3    4      1  2000
+    4    5      1  2000
+
+    In [33]: %timeit pd.to_datetime(df.year*10000+df.month*100+df.day,format='%Y%m%d')
+    100 loops, best of 3: 7.08 ms per loop
+
+    # simulate combinging into a string, then parsing
+    In [34]: ds = df.apply(lambda x: "%04d%02d%02d" % (x['year'],x['month'],x['day']),axis=1)
+
+    In [35]: ds.head()
+    Out[35]:
+    0    20000101
+    1    20000102
+    2    20000103
+    3    20000104
+    4    20000105
+    dtype: object
+
+    In [36]: %timeit pd.to_datetime(ds)
+    1 loops, best of 3: 488 ms per loop
+
 .. _cookbook.sql:
 
 SQL
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 8b4e450ef..f10dac9d3 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -3171,7 +3171,7 @@ The key functions are:
 
 .. autosummary::
     :toctree: generated/
-    
+
     read_sql_table
     read_sql_query
     read_sql
@@ -3183,7 +3183,7 @@ The key functions are:
     :func:`~pandas.read_sql_table` and :func:`~pandas.read_sql_query` (and for
     backward compatibility) and will delegate to specific function depending on
     the provided input (database table name or sql query).
-    
+
 In the following example, we use the `SQlite <http://www.sqlite.org/>`__ SQL database
 engine. You can use a temporary SQLite database where data are stored in
 "memory".
