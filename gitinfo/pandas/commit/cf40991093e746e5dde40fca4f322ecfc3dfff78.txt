commit cf40991093e746e5dde40fca4f322ecfc3dfff78
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Sat Sep 26 12:29:56 2015 +0200

    DOC: hack to numpydoc to avoid warnings for Categorical (not including members)
    
    The Categorical docstring in api.rst uses a seperate template to not
    include an autosummary table with toctrees of all members. But
    numpydoc still includes a list by default (which will gives thousands of
    warnings). This hack ensures that for Categorical class docstring this
    list is not included.

diff --git a/doc/sphinxext/numpydoc/docscrape_sphinx.py b/doc/sphinxext/numpydoc/docscrape_sphinx.py
index ba93b2eab..b103da80a 100755
--- a/doc/sphinxext/numpydoc/docscrape_sphinx.py
+++ b/doc/sphinxext/numpydoc/docscrape_sphinx.py
@@ -19,6 +19,7 @@ class SphinxDocString(NumpyDocString):
     def load_config(self, config):
         self.use_plots = config.get('use_plots', False)
         self.class_members_toctree = config.get('class_members_toctree', True)
+        self.class_members_list = config.get('class_members_list', True)
 
     # string conversion routines
     def _str_header(self, name, symbol='`'):
@@ -95,7 +96,7 @@ class SphinxDocString(NumpyDocString):
 
         """
         out = []
-        if self[name]:
+        if self[name] and self.class_members_list:
             out += ['.. rubric:: %s' % name, '']
             prefix = getattr(self, '_name', '')
 
diff --git a/doc/sphinxext/numpydoc/numpydoc.py b/doc/sphinxext/numpydoc/numpydoc.py
index 2bc2d1e91..0cccf72de 100755
--- a/doc/sphinxext/numpydoc/numpydoc.py
+++ b/doc/sphinxext/numpydoc/numpydoc.py
@@ -42,6 +42,10 @@ def mangle_docstrings(app, what, name, obj, options, lines,
                class_members_toctree=app.config.numpydoc_class_members_toctree,
               )
 
+    # PANDAS HACK (to remove the list of methods/attributes for Categorical)
+    if what == "class" and name.endswith(".Categorical"):
+        cfg['class_members_list'] = False
+
     if what == 'module':
         # Strip top title
         title_re = re.compile(sixu('^\\s*[#*=]{4,}\\n[a-z0-9 -]+\\n[#*=]{4,}\\s*'),
