commit fdcc10672aea5553857d34722396b2be6b7aa4c0
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Aug 11 23:48:48 2012 -0400

    BUG: method='time' interpolation incorrect for intraday data close #1698

diff --git a/RELEASE.rst b/RELEASE.rst
index f6b3dc53a..1dcfc0d3e 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -72,6 +72,7 @@ pandas 0.8.2
   - Don't lose tzinfo in DatetimeIndex when shifting by different offset (#1683)
   - Hack to support storing data with a zero-length axis in HDFStore (#1707)
   - Fix DatetimeIndex tz-aware range generation issue (#1674)
+  - Fix method='time' interpolation with intraday data (#1698)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/series.py b/pandas/core/series.py
index a2275fe40..ed37405fd 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2537,8 +2537,10 @@ copy : boolean, default False
             if not isinstance(self, TimeSeries):
                 raise Exception('time-weighted interpolation only works'
                                 'on TimeSeries')
-            inds = np.array([d.toordinal() for d in self.index])
-        elif method == 'values':
+            method = 'values'
+            # inds = np.array([d.toordinal() for d in self.index])
+
+        if method == 'values':
             inds = self.index.values
             # hack for DatetimeIndex, #1646
             if issubclass(inds.dtype.type, np.datetime64):
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 22cfa70e3..ed880d0f4 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1043,6 +1043,22 @@ class TestTimeSeries(unittest.TestCase):
         result = df.groupby('a').first()
         self.assertEqual(result['date'][3].year, 2012)
 
+    def test_series_interpolate_intraday(self):
+        # #1698
+        import pandas as pd
+        index = pd.date_range('1/1/2012', periods=4, freq='12D')
+        ts = pd.Series([0, 12, 24, 36], index)
+        new_index = index.append(index + pd.DateOffset(days=1)).order()
+
+        exp = ts.reindex(new_index).interpolate(method='time')
+
+        index = pd.date_range('1/1/2012', periods=4, freq='12H')
+        ts = pd.Series([0, 12, 24, 36], index)
+        new_index = index.append(index + pd.DateOffset(hours=1)).order()
+        result = ts.reindex(new_index).interpolate(method='time')
+
+        self.assert_(np.array_equal(result.values, exp.values))
+
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
     return Series(np.random.randn(len(rng)), index=rng)
