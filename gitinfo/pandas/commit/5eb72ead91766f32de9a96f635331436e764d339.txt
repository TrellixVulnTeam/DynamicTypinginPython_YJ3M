commit 5eb72ead91766f32de9a96f635331436e764d339
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Feb 4 17:18:07 2012 -0500

    BUG: don't hash dtype because of endianness confusion re: #748 and #747

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 6b961f552..158704a9d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1082,11 +1082,12 @@ class DataFrame(NDFrame):
     def get_dtype_counts(self):
         counts = {}
         for _, series in self.iterkv():
-            if series.dtype in counts:
-                counts[series.dtype] += 1
+            # endianness can cause dtypes to look different
+            dtype_str = str(series.dtype)
+            if dtype_str in counts:
+                counts[dtype_str] += 1
             else:
-                counts[series.dtype] = 1
-
+                counts[dtype_str] = 1
         return Series(counts)
 
     #----------------------------------------------------------------------
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index be00e8abb..12aa51996 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -382,7 +382,7 @@ class BlockManager(object):
         """
         Return True if more than one block with the same dtype
         """
-        dtypes = [blk.dtype for blk in self.blocks]
+        dtypes = [blk.dtype.type for blk in self.blocks]
         return len(dtypes) == len(set(dtypes))
 
     def get_slice(self, slobj, axis=0):
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index 01a12e320..7f13acd02 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -345,7 +345,7 @@ class TestMerge(unittest.TestCase):
         a = DataFrame(randn(30,2), columns=['a','b'])
         c = Series(randn(30))
         a['c'] = c
-        d = DataFrame(randn(30,1), columns=['d'])
+        d = DataFrame(randn(30,1), columns=['q'])
 
         # it works!
         a.join(d)
@@ -505,6 +505,7 @@ class TestMerge(unittest.TestCase):
         merged['d'] = 'peekaboo'
         self.assert_((right['d'] == 'peekaboo').all())
 
+
 class TestMergeMulti(unittest.TestCase):
 
     def setUp(self):
