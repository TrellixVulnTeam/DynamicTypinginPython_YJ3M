commit b2138d4e236b4f6afa3e8cf4dbf616847848a55b
Author: Wouter Overmeire <lodagro@gmail.com>
Date:   Tue Dec 6 16:38:17 2011 +0100

    Series/DataFrame, make decision between full and short __repr__ configurable.

diff --git a/pandas/core/common.py b/pandas/core/common.py
index e50d8cf88..080a3a894 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -346,7 +346,8 @@ def _try_sort(iterable):
     except Exception:
         return listed
 
-def set_printoptions(precision=None, column_space=None):
+def set_printoptions(precision=None, column_space=None, max_rows=None,
+        max_columns=None):
     """
     Alter default behavior of DataFrame.toString
 
@@ -354,13 +355,21 @@ def set_printoptions(precision=None, column_space=None):
         Floating point output precision
     column_space : int
         Default space for DataFrame columns, defaults to 12
+    max_rows : int
+    max_columns : int
+        max_rows and max_columns are used in __repr__() methods to decide if
+        to_string() or info() is used to render an object to a string.
     """
-    global _float_format, _column_space
+    global _float_format, _column_space, _max_rows, _max_columns
     if precision is not None:
         float_format = '%.' + '%d' % precision + 'g'
         _float_format = lambda x: float_format % x
     if column_space is not None:
         _column_space = column_space
+    if max_rows is not None:
+        _max_rows = max_rows
+    if max_columns is not None:
+        _max_columns = max_columns
 
 class EngFormatter(object):
     """
@@ -467,6 +476,8 @@ def set_eng_float_format(precision=3, use_eng_prefix=False):
 
 _float_format = lambda x: '%.4g' % x
 _column_space = 12
+_max_rows = 500
+_max_columns = 10
 
 def _pfixed(s, space, na_rep=None, float_format=None):
     if isinstance(s, float):
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index fe0ef354f..a1e45141c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -23,7 +23,8 @@ import numpy as np
 import numpy.ma as ma
 
 from pandas.core.common import (isnull, notnull, PandasError, _try_sort,
-                                _default_index, _stringify, _maybe_upcast)
+                                _default_index, _stringify, _maybe_upcast,
+                                _max_rows, _max_columns)
 from pandas.core.daterange import DateRange
 from pandas.core.generic import NDFrame, AxisProperty
 from pandas.core.index import Index, MultiIndex, NULL_INDEX, _ensure_index
@@ -317,7 +318,8 @@ class DataFrame(NDFrame):
         Return a string representation for a particular DataFrame
         """
         buf = StringIO()
-        if len(self.index) < 500 and len(self.columns) <= 10:
+        if len(self.index) < com._max_rows and \
+                len(self.columns) <= com._max_columns:
             self.to_string(buf=buf)
         else:
             self.info(buf=buf, verbose=self._verbose_info)
diff --git a/pandas/core/series.py b/pandas/core/series.py
index a51fcb447..9133e24a1 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -419,8 +419,8 @@ copy : boolean, default False
 
     def __repr__(self):
         """Clean string representation of a Series"""
-        if len(self.index) > 500:
-            result = self._tidy_repr(30)
+        if len(self.index) > common._max_rows:
+            result = self._tidy_repr(min(30, common._max_rows))
         elif len(self.index) > 0:
             result = self._get_repr(print_header=True,
                                     length=len(self) > 50,
