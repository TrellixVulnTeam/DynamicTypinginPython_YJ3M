commit 230aaa5ab0aa365a7b190da40342b7a7e5cf1ef5
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Feb 8 18:14:26 2012 -0500

    ENH: can pass file handle or StringIO to Series.to_csv and DataFrame.to_csv, GH #765

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 0dbb9abda..44d08c502 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -909,15 +909,15 @@ class DataFrame(NDFrame):
 
             writer.writerow(encoded_rows)
 
-    def to_csv(self, path, sep=",", na_rep='', cols=None, header=True,
-              index=True, index_label=None, mode='w', nanRep=None,
-              encoding=None):
+    def to_csv(self, path_or_buf, sep=",", na_rep='', cols=None,
+               header=True, index=True, index_label=None, mode='w',
+               nanRep=None, encoding=None):
         """
         Write DataFrame to a comma-separated values (csv) file
 
         Parameters
         ----------
-        path : string
+        path_or_buf : string or file handle / StringIO
             File path
         na_rep : string, default ''
             Missing data representation
@@ -944,11 +944,21 @@ class DataFrame(NDFrame):
                           FutureWarning)
             na_rep = nanRep
 
-        with open(path, mode) as f:
+        if hasattr(path_or_buf, 'read'):
+            f = path_or_buf
+            close = False
+        else:
+            f = open(path_or_buf, mode)
+            close = True
+
+        try:
             csvout = csv.writer(f, lineterminator='\n', delimiter=sep)
             self._helper_csvexcel(csvout, na_rep=na_rep, cols=cols,
                                   header=header, index=index,
                                   index_label=index_label, encoding=encoding)
+        finally:
+            if close:
+                f.close()
 
     def to_excel(self, excel_writer, sheet_name = 'sheet1', na_rep='', cols=None, header=True,
                  index=True, index_label=None):
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 770d43864..3105248d6 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2056,7 +2056,7 @@ copy : boolean, default False
         from pandas.core.frame import DataFrame
         df = DataFrame(self)
         df.to_csv(path, index=index, sep=sep, na_rep=na_rep, header=header,
-                  index_label=index_label,mode=mode, nanRep=nanRep,
+                  index_label=index_label, mode=mode, nanRep=nanRep,
                   encoding=encoding)
 
     def dropna(self):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index cac76fe09..dd7710365 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2254,32 +2254,37 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         os.remove(path)
 
     def test_to_csv_bug(self):
-        from pandas import read_csv
         path = '__tmp__.csv'
         f1 = StringIO('a,1.0\nb,2.0')
         df = DataFrame.from_csv(f1,header=None)
         newdf = DataFrame({'t': df[df.columns[0]]})
         newdf.to_csv(path)
 
-        recons = read_csv(path, index_col=0)
+        recons = pan.read_csv(path, index_col=0)
         assert_frame_equal(recons, newdf)
 
         os.remove(path)
 
     def test_to_csv_unicode(self):
-        from pandas import read_csv
         path = '__tmp__.csv'
         df = DataFrame({u'c/\u03c3':[1,2,3]})
         df.to_csv(path, encoding='UTF-8')
-        df2 = read_csv(path, index_col=0, encoding='UTF-8')
+        df2 = pan.read_csv(path, index_col=0, encoding='UTF-8')
         assert_frame_equal(df, df2)
 
         df.to_csv(path, encoding='UTF-8', index=False)
-        df2 = read_csv(path, index_col=None, encoding='UTF-8')
+        df2 = pan.read_csv(path, index_col=None, encoding='UTF-8')
         assert_frame_equal(df, df2)
 
         os.remove(path)
 
+    def test_to_csv_stringio(self):
+        buf = StringIO()
+        self.frame.to_csv(buf)
+        buf.seek(0)
+        recons = pan.read_csv(buf, index_col=0)
+        assert_frame_equal(recons, self.frame)
+
     def test_to_excel_from_excel(self):
         try:
             import xlwt
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 1af011fd9..8ba2ab50c 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1,5 +1,6 @@
 # pylint: disable-msg=E1101,W0612
 
+from cStringIO import StringIO
 from datetime import datetime, timedelta
 import os
 import operator
@@ -1515,6 +1516,13 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
 
         os.remove('_foo')
 
+    def test_to_csv_stringio(self):
+        buf = StringIO()
+        self.ts.to_csv(buf, index=False)
+        buf.seek(0)
+        arr = np.loadtxt(buf)
+        assert_almost_equal(arr, self.ts.values)
+
     def test_to_dict(self):
         self.assert_(np.array_equal(Series(self.ts.to_dict()), self.ts))
 
