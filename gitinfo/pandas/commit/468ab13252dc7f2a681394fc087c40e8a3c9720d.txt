commit 468ab13252dc7f2a681394fc087c40e8a3c9720d
Author: Jeremy Schendel <jschendel@users.noreply.github.com>
Date:   Tue Dec 24 08:04:02 2019 -0700

    Modify hash(pd.NA) to avoid integer hash collisions (#30150)

diff --git a/pandas/_libs/missing.pyx b/pandas/_libs/missing.pyx
index 63aa5501c..f1cfa0978 100644
--- a/pandas/_libs/missing.pyx
+++ b/pandas/_libs/missing.pyx
@@ -15,6 +15,8 @@ from pandas._libs.tslibs.np_datetime cimport (
 from pandas._libs.tslibs.nattype cimport (
     checknull_with_nat, c_NaT as NaT, is_null_datetimelike)
 
+from pandas.compat import is_platform_32bit
+
 
 cdef:
     float64_t INF = <float64_t>np.inf
@@ -22,6 +24,8 @@ cdef:
 
     int64_t NPY_NAT = util.get_nat()
 
+    bint is_32bit = is_platform_32bit()
+
 
 cpdef bint checknull(object val):
     """
@@ -345,7 +349,9 @@ class NAType(C_NAType):
         raise TypeError("boolean value of NA is ambiguous")
 
     def __hash__(self):
-        return id(self)
+        # GH 30013: Ensure hash is large enough to avoid hash collisions with integers
+        exponent = 31 if is_32bit else 61
+        return 2 ** exponent - 1
 
     # Binary arithmetic and comparison ops -> propagate
 
diff --git a/pandas/tests/scalar/test_na_scalar.py b/pandas/tests/scalar/test_na_scalar.py
index 40db617c6..82d5b0977 100644
--- a/pandas/tests/scalar/test_na_scalar.py
+++ b/pandas/tests/scalar/test_na_scalar.py
@@ -175,3 +175,20 @@ def test_series_isna():
     s = pd.Series([1, NA], dtype=object)
     expected = pd.Series([False, True])
     tm.assert_series_equal(s.isna(), expected)
+
+
+def test_integer_hash_collision_dict():
+    # GH 30013
+    result = {NA: "foo", hash(NA): "bar"}
+
+    assert result[NA] == "foo"
+    assert result[hash(NA)] == "bar"
+
+
+def test_integer_hash_collision_set():
+    # GH 30013
+    result = {NA, hash(NA)}
+
+    assert len(result) == 2
+    assert NA in result
+    assert hash(NA) in result
