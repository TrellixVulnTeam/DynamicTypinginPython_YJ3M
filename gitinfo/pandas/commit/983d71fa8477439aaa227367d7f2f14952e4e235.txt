commit 983d71fa8477439aaa227367d7f2f14952e4e235
Author: Jason Bandlow <jbandlow@gmail.com>
Date:   Tue Feb 6 18:48:55 2018 -0500

    BUG: Fix ts precision issue with groupby and NaT (#19526)
    
    closes #19526
    
    Author: Jason Bandlow <jbandlow@gmail.com>
    
    Closes #19530 from jbandlow/timestamp_float_conversion and squashes the following commits:
    
    2fb23d673 [Jason Bandlow] merge
    af37225d4 [Jason Bandlow] BUG: Fix ts precision issue with groupby and NaT (#19526)

diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index b5bf7ccbd..7322bd9fe 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -644,6 +644,7 @@ Groupby/Resample/Rolling
 - Fixed regression in :func:`DataFrame.groupby` which would not emit an error when called with a tuple key not in the index (:issue:`18798`)
 - Bug in :func:`DataFrame.resample` which silently ignored unsupported (or mistyped) options for ``label``, ``closed`` and ``convention`` (:issue:`19303`)
 - Bug in :func:`DataFrame.groupby` where tuples were interpreted as lists of keys rather than as keys (:issue:`17979`, :issue:`18249`)
+- Bug in :func:`DataFrame.groupby` where aggregation by ``first``/``last``/``min``/``max`` was causing timestamps to lose precision (:issue:`19526`)
 - Bug in :func:`DataFrame.transform` where particular aggregation functions were being incorrectly cast to match the dtype(s) of the grouped data (:issue:`19200`)
 - Bug in :func:`DataFrame.groupby` passing the `on=` kwarg, and subsequently using ``.apply()`` (:issue:`17813`)
 
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index ab0070777..f352b80ba 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -2336,7 +2336,7 @@ class BaseGrouper(object):
             result = self._transform(
                 result, values, labels, func, is_numeric, is_datetimelike)
 
-        if is_integer_dtype(result):
+        if is_integer_dtype(result) and not is_datetimelike:
             mask = result == iNaT
             if mask.any():
                 result = result.astype('float64')
diff --git a/pandas/tests/groupby/aggregate/test_cython.py b/pandas/tests/groupby/aggregate/test_cython.py
index c8ee05ddb..cef3a699e 100644
--- a/pandas/tests/groupby/aggregate/test_cython.py
+++ b/pandas/tests/groupby/aggregate/test_cython.py
@@ -12,7 +12,8 @@ import numpy as np
 from numpy import nan
 import pandas as pd
 
-from pandas import bdate_range, DataFrame, Index, Series
+from pandas import (bdate_range, DataFrame, Index, Series, Timestamp,
+                    Timedelta, NaT)
 from pandas.core.groupby import DataError
 import pandas.util.testing as tm
 
@@ -187,3 +188,19 @@ def test_cython_agg_empty_buckets_nanops():
         {"a": [1, 1, 1716, 1]},
         index=pd.CategoricalIndex(intervals, name='a', ordered=True))
     tm.assert_frame_equal(result, expected)
+
+
+@pytest.mark.parametrize('op', ['first', 'last', 'max', 'min'])
+@pytest.mark.parametrize('data', [
+    Timestamp('2016-10-14 21:00:44.557'),
+    Timedelta('17088 days 21:00:44.557'), ])
+def test_cython_with_timestamp_and_nat(op, data):
+    # https://github.com/pandas-dev/pandas/issues/19526
+    df = DataFrame({'a': [0, 1], 'b': [data, NaT]})
+    index = Index([0, 1], name='a')
+
+    # We will group by a and test the cython aggregations
+    expected = DataFrame({'b': [data, NaT]}, index=index)
+
+    result = df.groupby('a').aggregate(op)
+    tm.assert_frame_equal(expected, result)
