commit 68fdacd12e7963706f0ac1b859058bddb6b814bd
Author: tom-alcorn <tom@adharmonics.com>
Date:   Tue Sep 23 14:59:00 2014 -0400

    BUG: Bug in interesection of non-monotonic non-unique indexes (GH8362)

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index 8c0e193ec..988acc24b 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -985,3 +985,4 @@ Bug Fixes
 - Bug in OLS where running with "cluster" and "nw_lags" parameters did not work correctly, but also did not throw an error
   (:issue:`5884').
 - Bug in ``DataFrame.dropna`` that interpreted non-existent columns in the subset argument as the 'last column' (:issue:`8303`)
+- Bug in Index.intersection on non-monotonic non-unique indexes (:issue:`8362`).
diff --git a/pandas/core/index.py b/pandas/core/index.py
index b58546da0..b528a6282 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1279,6 +1279,7 @@ class Index(IndexOpsMixin, PandasObject):
         except:
             # duplicates
             indexer = self.get_indexer_non_unique(other.values)[0].unique()
+            indexer = indexer[indexer != -1]
 
         taken = self.take(indexer)
         if self.name != other.name:
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index baa8f6411..3001c4f09 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -532,6 +532,13 @@ class TestIndex(Base, tm.TestCase):
         result3 = idx1.intersection(idx3)
         self.assertTrue(tm.equalContents(result3, expected3))
         self.assertEqual(result3.name, expected3.name)
+        
+        # non-monotonic non-unique
+        idx1 = Index(['A','B','A','C'])
+        idx2 = Index(['B','D'])
+        expected = Index(['B'], dtype='object')
+        result = idx1.intersection(idx2)
+        self.assertTrue(result.equals(expected))
 
     def test_union(self):
         first = self.strIndex[5:20]
