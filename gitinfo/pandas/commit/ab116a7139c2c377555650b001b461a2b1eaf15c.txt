commit ab116a7139c2c377555650b001b461a2b1eaf15c
Author: Neil Parley <mail@neilparley.co.uk>
Date:   Thu Jun 23 20:00:13 2016 -0400

    BUG: Travis building on container-based infrastructure
    
    closes #10598
    
    Author: Neil Parley <mail@neilparley.co.uk>
    
    Closes #12946 from nparley/travis and squashes the following commits:

diff --git a/.travis.yml b/.travis.yml
index 5a16c1a6c..b909a1f98 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,14 +1,24 @@
-
+sudo: false
 language: python
 
-env:
+# To turn off cached miniconda, cython files and compiler cache comment out the
+# USE_CACHE=true line for the build in the matrix below. To delete caches go to
+# https://travis-ci.org/OWNER/REPOSITORY/caches or run
+# travis cache --delete inside the project directory from the travis command line client
+# The cash directories will be deleted if anything in ci/ changes in a commit
+cache:
+ directories:
+  - $HOME/miniconda # miniconda cache
+  - $HOME/.cache # cython cache
+  - $HOME/.ccache # compiler cache
 
+env:
   global:
   # scatterci API key
   #- secure: "Bx5umgo6WjuGY+5XFa004xjCiX/vq0CyMZ/ETzcs7EIBI1BE/0fIDXOoWhoxbY9HPfdPGlDnDgB9nGqr5wArO2s+BavyKBWg6osZ3dmkfuJPMOWeyCa92EeP+sfKw8e5HSU5MizW9e319wHWOF/xkzdHR7T67Qd5erhv91x4DnQ="
   # ironcache API key
-  - secure: "e4eEFn9nDQc3Xa5BWYkzfX37jaWVq89XidVX+rcCNEr5OlOImvveeXnF1IzbRXznH4Sv0YsLwUd8RGUWOmyCvkONq/VJeqCHWtTMyfaCIdqSyhIP9Odz8r9ahch+Y0XFepBey92AJHmlnTh+2GjCDgIiqq4fzglojnp56Vg1ojA="
-  - secure: "CjmYmY5qEu3KrvMtel6zWFEtMq8ORBeS1S1odJHnjQpbwT1KY2YFZRVlLphfyDQXSz6svKUdeRrCNp65baBzs3DQNA8lIuXGIBYFeJxqVGtYAZZs6+TzBPfJJK798sGOj5RshrOJkFG2rdlWNuTq/XphI0JOrN3nPUkRrdQRpAw="
+  #- secure: "e4eEFn9nDQc3Xa5BWYkzfX37jaWVq89XidVX+rcCNEr5OlOImvveeXnF1IzbRXznH4Sv0YsLwUd8RGUWOmyCvkONq/VJeqCHWtTMyfaCIdqSyhIP9Odz8r9ahch+Y0XFepBey92AJHmlnTh+2GjCDgIiqq4fzglojnp56Vg1ojA="
+  #- secure: "CjmYmY5qEu3KrvMtel6zWFEtMq8ORBeS1S1odJHnjQpbwT1KY2YFZRVlLphfyDQXSz6svKUdeRrCNp65baBzs3DQNA8lIuXGIBYFeJxqVGtYAZZs6+TzBPfJJK798sGOj5RshrOJkFG2rdlWNuTq/XphI0JOrN3nPUkRrdQRpAw="
   # pandas-docs-bot GH
   - secure: "PCzUFR8CHmw9lH84p4ygnojdF7Z8U5h7YfY0RyT+5K/aiQ1ZTU3ZkDTPI0/rR5FVMxsEEKEQKMcc5fvqW0PeD7Q2wRmluloKgT9w4EVEJ1ppKf7lITPcvZR2QgVOvjv4AfDtibLHFNiaSjzoqyJVjM4igjOu8WTlF3JfZcmOQjQ="
 
@@ -29,72 +39,129 @@ matrix:
         - BUILD_TYPE=conda
         - JOB_TAG=_OSX
         - TRAVIS_PYTHON_VERSION=3.5
+        - CACHE_NAME="35_osx"
+        - USE_CACHE=true
     - python: 2.7
       env:
-      - JOB_NAME: "27_slow_nnet_LOCALE"
-      - NOSE_ARGS="slow and not network and not disabled"
-      - LOCALE_OVERRIDE="zh_CN.GB18030"
-      - FULL_DEPS=true
-      - JOB_TAG=_LOCALE
+        - JOB_NAME: "27_slow_nnet_LOCALE"
+        - NOSE_ARGS="slow and not network and not disabled"
+        - LOCALE_OVERRIDE="zh_CN.UTF-8"
+        - FULL_DEPS=true
+        - JOB_TAG=_LOCALE
+        - CACHE_NAME="27_slow_nnet_LOCALE"
+        - USE_CACHE=true
+      addons:
+        apt:
+          packages:
+          - language-pack-zh-hans
     - python: 2.7
       env:
-      - JOB_NAME: "27_nslow"
-      - NOSE_ARGS="not slow and not disabled"
-      - FULL_DEPS=true
-      - CLIPBOARD_GUI=gtk2
-      - LINT=true
+        - JOB_NAME: "27_nslow"
+        - NOSE_ARGS="not slow and not disabled"
+        - FULL_DEPS=true
+        - CLIPBOARD_GUI=gtk2
+        - LINT=true
+        - CACHE_NAME="27_nslow"
+        - USE_CACHE=true
+      addons:
+        apt:
+          packages:
+          - python-gtk2
     - python: 3.4
       env:
-      - JOB_NAME: "34_nslow"
-      - NOSE_ARGS="not slow and not disabled"
-      - FULL_DEPS=true
-      - CLIPBOARD=xsel
+        - JOB_NAME: "34_nslow"
+        - NOSE_ARGS="not slow and not disabled"
+        - FULL_DEPS=true
+        - CLIPBOARD=xsel
+        - CACHE_NAME="34_nslow"
+        - USE_CACHE=true
+      addons:
+        apt:
+          packages:
+          - xsel
     - python: 3.5
       env:
-      - JOB_NAME: "35_nslow"
-      - NOSE_ARGS="not slow and not network and not disabled"
-      - FULL_DEPS=true
-      - CLIPBOARD=xsel
-      - COVERAGE=true
+        - JOB_NAME: "35_nslow"
+        - NOSE_ARGS="not slow and not network and not disabled"
+        - FULL_DEPS=true
+        - CLIPBOARD=xsel
+        - COVERAGE=true
+        - CACHE_NAME="35_nslow"
+#        - USE_CACHE=true # Don't use cache for 35_nslow
+      addons:
+        apt:
+          packages:
+          - xsel
+#    In allow_failures
     - python: 2.7
       env:
-      - JOB_NAME: "27_slow"
-      - JOB_TAG=_SLOW
-      - NOSE_ARGS="slow and not network and not disabled"
-      - FULL_DEPS=true
+        - JOB_NAME: "27_slow"
+        - JOB_TAG=_SLOW
+        - NOSE_ARGS="slow and not network and not disabled"
+        - FULL_DEPS=true
+        - CACHE_NAME="27_slow"
+        - USE_CACHE=true
+#    In allow_failures
     - python: 3.4
       env:
-      - JOB_NAME: "34_slow"
-      - JOB_TAG=_SLOW
-      - NOSE_ARGS="slow and not network and not disabled"
-      - FULL_DEPS=true
-      - CLIPBOARD=xsel
+        - JOB_NAME: "34_slow"
+        - JOB_TAG=_SLOW
+        - NOSE_ARGS="slow and not network and not disabled"
+        - FULL_DEPS=true
+        - CLIPBOARD=xsel
+        - CACHE_NAME="34_slow"
+        - USE_CACHE=true
+      addons:
+        apt:
+          packages:
+          - xsel
+#    In allow_failures
     - python: 2.7
       env:
-      - JOB_NAME: "27_build_test_conda"
-      - JOB_TAG=_BUILD_TEST
-      - NOSE_ARGS="not slow and not disabled"
-      - FULL_DEPS=true
-      - BUILD_TEST=true
+        - JOB_NAME: "27_build_test_conda"
+        - JOB_TAG=_BUILD_TEST
+        - NOSE_ARGS="not slow and not disabled"
+        - FULL_DEPS=true
+        - BUILD_TEST=true
+        - CACHE_NAME="27_build_test_conda"
+        - USE_CACHE=true
+#    In allow_failures
     - python: 3.5
       env:
-      - JOB_NAME: "35_numpy_dev"
-      - JOB_TAG=_NUMPY_DEV
-      - NOSE_ARGS="not slow and not network and not disabled"
-      - PANDAS_TESTING_MODE="deprecate"
+        - JOB_NAME: "35_numpy_dev"
+        - JOB_TAG=_NUMPY_DEV
+        - NOSE_ARGS="not slow and not network and not disabled"
+        - PANDAS_TESTING_MODE="deprecate"
+        - CACHE_NAME="35_numpy_dev"
+        - USE_CACHE=true
+      addons:
+        apt:
+          packages:
+          - libatlas-base-dev
+          - gfortran
+#    In allow_failures
     - python: 2.7
       env:
-      - JOB_NAME: "27_nslow_nnet_COMPAT"
-      - NOSE_ARGS="not slow and not network and not disabled"
-      - LOCALE_OVERRIDE="it_IT.UTF-8"
-      - INSTALL_TEST=true
-      - JOB_TAG=_COMPAT
+        - JOB_NAME: "27_nslow_nnet_COMPAT"
+        - NOSE_ARGS="not slow and not network and not disabled"
+        - LOCALE_OVERRIDE="it_IT.UTF-8"
+        - INSTALL_TEST=true
+        - JOB_TAG=_COMPAT
+        - CACHE_NAME="27_nslow_nnet_COMPAT"
+        - USE_CACHE=true
+      addons:
+        apt:
+          packages:
+          - language-pack-it
+#    In allow_failures
     - python: 2.7
       env:
-      - JOB_NAME: "doc_build"
-      - FULL_DEPS=true
-      - DOC_BUILD=true # if rst files were changed, build docs in parallel with tests
-      - JOB_TAG=_DOC_BUILD
+        - JOB_NAME: "doc_build"
+        - FULL_DEPS=true
+        - DOC_BUILD=true
+        - JOB_TAG=_DOC_BUILD
+        - CACHE_NAME="doc_build"
+        - USE_CACHE=true
     allow_failures:
       - python: 2.7
         env:
@@ -102,6 +169,8 @@ matrix:
         - JOB_TAG=_SLOW
         - NOSE_ARGS="slow and not network and not disabled"
         - FULL_DEPS=true
+        - CACHE_NAME="27_slow"
+        - USE_CACHE=true
       - python: 3.4
         env:
         - JOB_NAME: "34_slow"
@@ -109,6 +178,12 @@ matrix:
         - NOSE_ARGS="slow and not network and not disabled"
         - FULL_DEPS=true
         - CLIPBOARD=xsel
+        - CACHE_NAME="34_slow"
+        - USE_CACHE=true
+        addons:
+          apt:
+            packages:
+            - xsel
       - python: 2.7
         env:
         - JOB_NAME: "27_build_test_conda"
@@ -116,12 +191,21 @@ matrix:
         - NOSE_ARGS="not slow and not disabled"
         - FULL_DEPS=true
         - BUILD_TEST=true
+        - CACHE_NAME="27_build_test_conda"
+        - USE_CACHE=true
       - python: 3.5
         env:
         - JOB_NAME: "35_numpy_dev"
         - JOB_TAG=_NUMPY_DEV
         - NOSE_ARGS="not slow and not network and not disabled"
         - PANDAS_TESTING_MODE="deprecate"
+        - CACHE_NAME="35_numpy_dev"
+        - USE_CACHE=true
+        addons:
+          apt:
+            packages:
+            - libatlas-base-dev
+            - gfortran
       - python: 2.7
         env:
         - JOB_NAME: "27_nslow_nnet_COMPAT"
@@ -129,12 +213,20 @@ matrix:
         - LOCALE_OVERRIDE="it_IT.UTF-8"
         - INSTALL_TEST=true
         - JOB_TAG=_COMPAT
+        - CACHE_NAME="27_nslow_nnet_COMPAT"
+        - USE_CACHE=true
+        addons:
+          apt:
+            packages:
+            - language-pack-it
       - python: 2.7
         env:
         - JOB_NAME: "doc_build"
         - FULL_DEPS=true
         - DOC_BUILD=true
         - JOB_TAG=_DOC_BUILD
+        - CACHE_NAME="doc_build"
+        - USE_CACHE=true
 
 before_install:
   - echo "before_install"
@@ -153,9 +245,10 @@ before_install:
 
 install:
   - echo "install start"
-  - ci/prep_ccache.sh
+  - ci/check_cache.sh
+  - ci/prep_cython_cache.sh
   - ci/install_travis.sh
-  - ci/submit_ccache.sh
+  - ci/submit_cython_cache.sh
   - echo "install done"
 
 before_script:
@@ -175,6 +268,6 @@ after_success:
 after_script:
   - echo "after_script start"
   - ci/install_test.sh
-  - source activate pandas && ci/print_versions.py
+  - source activate pandas && python -c "import pandas; pandas.show_versions();"
   - ci/print_skipped.py /tmp/nosetests.xml
   - echo "after_script done"
diff --git a/ci/before_install_travis.sh b/ci/before_install_travis.sh
index 76775ecbc..f90427f97 100755
--- a/ci/before_install_travis.sh
+++ b/ci/before_install_travis.sh
@@ -9,8 +9,6 @@ echo "inside $0"
 
 # overview
 if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
-   sudo apt-get update $APT_ARGS # run apt-get update for all versions
-
    sh -e /etc/init.d/xvfb start
 fi
 
diff --git a/ci/check_cache.sh b/ci/check_cache.sh
new file mode 100755
index 000000000..cd7a6e8f6
--- /dev/null
+++ b/ci/check_cache.sh
@@ -0,0 +1,25 @@
+#!/bin/bash
+
+if [ "$TRAVIS_PULL_REQUEST" == "false" ]
+then
+    echo "Not a PR: checking for changes in ci/ from last 2 commits"
+    git diff HEAD~2 --numstat | grep -E "ci/"
+    ci_changes=$(git diff HEAD~2 --numstat | grep -E "ci/"| wc -l)
+else
+    echo "PR: checking for changes in ci/ from last 2 commits"
+    git fetch origin pull/${TRAVIS_PULL_REQUEST}/head:PR_HEAD
+    git diff PR_HEAD~2 --numstat | grep -E "ci/"
+    ci_changes=$(git diff PR_HEAD~2 --numstat | grep -E "ci/"| wc -l)
+fi
+
+MINICONDA_DIR="$HOME/miniconda/"
+CACHE_DIR="$HOME/.cache/"
+CCACHE_DIR="$HOME/.ccache/"
+
+if [ $ci_changes -ne 0 ]
+then
+    echo "Files have changed in ci/ deleting all caches"
+    rm -rf "$MINICONDA_DIR"
+    rm -rf "$CACHE_DIR"
+    rm -rf "$CCACHE_DIR"
+fi
\ No newline at end of file
diff --git a/ci/install-2.7_NUMPY_DEV.sh b/ci/install-2.7_NUMPY_DEV.sh
index 00b6255da..22ac8f654 100644
--- a/ci/install-2.7_NUMPY_DEV.sh
+++ b/ci/install-2.7_NUMPY_DEV.sh
@@ -12,8 +12,6 @@ pip uninstall numpy -y
 # these wheels don't play nice with the conda libgfortran / openblas
 # time conda install -n pandas libgfortran openblas || exit 1
 
-time sudo apt-get $APT_ARGS install libatlas-base-dev gfortran
-
 # install numpy wheel from master
 pip install --pre --upgrade --no-index --timeout=60 --trusted-host travis-dev-wheels.scipy.org -f http://travis-dev-wheels.scipy.org/ numpy
 
diff --git a/ci/install-3.5_NUMPY_DEV.sh b/ci/install-3.5_NUMPY_DEV.sh
index ecb07ca23..946ec43ad 100644
--- a/ci/install-3.5_NUMPY_DEV.sh
+++ b/ci/install-3.5_NUMPY_DEV.sh
@@ -12,8 +12,6 @@ pip uninstall numpy -y
 # these wheels don't play nice with the conda libgfortran / openblas
 # time conda install -n pandas libgfortran openblas || exit 1
 
-time sudo apt-get $APT_ARGS install libatlas-base-dev gfortran
-
 # install numpy wheel from master
 pip install --pre --upgrade --no-index --timeout=60 --trusted-host travis-dev-wheels.scipy.org -f http://travis-dev-wheels.scipy.org/ numpy scipy
 
diff --git a/ci/install_travis.sh b/ci/install_travis.sh
index b49069946..3d9651d4f 100755
--- a/ci/install_travis.sh
+++ b/ci/install_travis.sh
@@ -28,73 +28,68 @@ function edit_init()
 
 edit_init
 
-python_major_version="${TRAVIS_PYTHON_VERSION:0:1}"
-[ "$python_major_version" == "2" ] && python_major_version=""
-
 home_dir=$(pwd)
 echo "home_dir: [$home_dir]"
 
-if [ -n "$LOCALE_OVERRIDE" ]; then
-    # make sure the locale is available
-    # probably useless, since you would need to relogin
-    time sudo locale-gen "$LOCALE_OVERRIDE"
-
-    # Need to enable for locale testing. The location of the locale file(s) is
-    # distro specific. For example, on Arch Linux all of the locales are in a
-    # commented file--/etc/locale.gen--that must be commented in to be used
-    # whereas Ubuntu looks in /var/lib/locales/supported.d/* and generates locales
-    # based on what's in the files in that folder
-    time echo 'it_CH.UTF-8 UTF-8' | sudo tee -a /var/lib/locales/supported.d/it
-    time sudo locale-gen
+python_major_version="${TRAVIS_PYTHON_VERSION:0:1}"
+[ "$python_major_version" == "2" ] && python_major_version=""
 
-fi
+MINICONDA_DIR="$HOME/miniconda"
 
-# install gui for clipboard testing
-if [ -n "$CLIPBOARD_GUI" ]; then
-    echo "Using CLIPBOARD_GUI: $CLIPBOARD_GUI"
-    [ -n "$python_major_version" ] && py="py"
-    python_cb_gui_pkg=python${python_major_version}-${py}${CLIPBOARD_GUI}
-    time sudo apt-get $APT_ARGS install $python_cb_gui_pkg
-fi
+if [ -d "$MINICONDA_DIR" ] && [ -e "$MINICONDA_DIR/bin/conda" ] && [ "$USE_CACHE" ]; then
+    echo "Miniconda install already present from cache: $MINICONDA_DIR"
 
+    conda config --set always_yes yes --set changeps1 no || exit 1
+    echo "update conda"
+    conda update -q conda || exit 1
 
-# install a clipboard if $CLIPBOARD is not empty
-if [ -n "$CLIPBOARD" ]; then
-    echo "Using clipboard: $CLIPBOARD"
-    time sudo apt-get $APT_ARGS install $CLIPBOARD
-fi
+    # Useful for debugging any issues with conda
+    conda info -a || exit 1
 
-python_major_version="${TRAVIS_PYTHON_VERSION:0:1}"
-[ "$python_major_version" == "2" ] && python_major_version=""
+    # set the compiler cache to work
+    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
+        echo "Using ccache"
+        export PATH=/usr/lib/ccache:/usr/lib64/ccache:$PATH
+        gcc=$(which gcc)
+        echo "gcc: $gcc"
+        ccache=$(which ccache)
+        echo "ccache: $ccache"
+        export CC='ccache gcc'
+    fi
 
-# install miniconda
-echo "install miniconda"
-if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
-    wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh || exit 1
 else
-    wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh || exit 1
-fi
-bash miniconda.sh -b -p $HOME/miniconda || exit 1
+    echo "Using clean Miniconda install"
+    echo "Not using ccache"
+    rm -rf "$MINICONDA_DIR"
+    # install miniconda
+    if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
+        wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh || exit 1
+    else
+        wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh || exit 1
+    fi
+    bash miniconda.sh -b -p "$MINICONDA_DIR" || exit 1
 
-echo "update conda"
-conda config --set ssl_verify false || exit 1
-conda config --set always_yes true --set changeps1 false || exit 1
-conda update -q conda
+    echo "update conda"
+    conda config --set ssl_verify false || exit 1
+    conda config --set always_yes true --set changeps1 false || exit 1
+    conda update -q conda
 
-# add the pandas channel *before* defaults to have defaults take priority
-echo "add channels"
-conda config --add channels pandas || exit 1
-conda config --remove channels defaults || exit 1
-conda config --add channels defaults || exit 1
+    # add the pandas channel *before* defaults to have defaults take priority
+    echo "add channels"
+    conda config --add channels pandas || exit 1
+    conda config --remove channels defaults || exit 1
+    conda config --add channels defaults || exit 1
 
-conda install anaconda-client
+    conda install anaconda-client
 
-# Useful for debugging any issues with conda
-conda info -a || exit 1
+    # Useful for debugging any issues with conda
+    conda info -a || exit 1
 
+    time conda create -n pandas python=$TRAVIS_PYTHON_VERSION nose coverage flake8 || exit 1
+
+fi
 # build deps
 REQ="ci/requirements-${TRAVIS_PYTHON_VERSION}${JOB_TAG}.build"
-time conda create -n pandas python=$TRAVIS_PYTHON_VERSION nose coverage flake8 || exit 1
 
 # may have additional installation instructions for this build
 INSTALL="ci/install-${TRAVIS_PYTHON_VERSION}${JOB_TAG}.sh"
@@ -107,16 +102,6 @@ time conda install -n pandas --file=${REQ} || exit 1
 
 source activate pandas
 
-# set the compiler cache to work
-if [[ "$IRON_TOKEN" && "${TRAVIS_OS_NAME}" == "linux" ]]; then
-    export PATH=/usr/lib/ccache:/usr/lib64/ccache:$PATH
-    gcc=$(which gcc)
-    echo "gcc: $gcc"
-    ccache=$(which ccache)
-    echo "ccache: $ccache"
-    export CC='ccache gcc'
-fi
-
 if [ "$BUILD_TEST" ]; then
 
     # build testing
diff --git a/ci/prep_ccache.sh b/ci/prep_ccache.sh
deleted file mode 100755
index 7e586cc4d..000000000
--- a/ci/prep_ccache.sh
+++ /dev/null
@@ -1,52 +0,0 @@
-#!/bin/bash
-
-if [ "${TRAVIS_OS_NAME}" != "linux" ]; then
-   echo "not using ccache on non-linux"
-   exit 0
-fi
-
-if [ "$IRON_TOKEN" ]; then
-
-    home_dir=$(pwd)
-
-    # install the compiler cache
-    sudo apt-get $APT_ARGS install ccache p7zip-full
-    # iron_cache, pending py3 fixes upstream
-    pip install -I --allow-external --allow-insecure git+https://github.com/iron-io/iron_cache_python.git@8a451c7d7e4d16e0c3bedffd0f280d5d9bd4fe59#egg=iron_cache
-
-    python ci/ironcache/get.py
-    ccache -C
-
-    clear_cache=0
-    if [ -f ~/ccache.7z ]; then
-        echo "Cache retrieved"
-        clear_cache=1
-        cd $HOME
-        7za e $HOME/ccache.7z
-        # ls -l $HOME
-        cd /
-        tar xvf $HOME/ccache
-        rm -rf $HOME/ccache.7z
-        rm -rf $HOME/ccache
-
-    fi
-
-    # did the last commit change cython files?
-    cd $home_dir
-
-    retval=$(git diff HEAD~3 --numstat | grep -P "pyx|pxd"|wc -l)
-    echo "number of cython files changed: $retval"
-
-    if [ $clear_cache -eq 1 ] && [ $retval -eq 0 ]
-    then
-        # nope, reuse cython files
-        echo "Will reuse cached cython file"
-        touch "$TRAVIS_BUILD_DIR"/pandas/*.c
-        touch "$TRAVIS_BUILD_DIR"/pandas/src/*.c
-        touch "$TRAVIS_BUILD_DIR"/pandas/*.cpp
-    else
-        echo "Rebuilding cythonized files"
-    fi
-fi
-
-exit 0
diff --git a/ci/prep_cython_cache.sh b/ci/prep_cython_cache.sh
new file mode 100755
index 000000000..162f7a103
--- /dev/null
+++ b/ci/prep_cython_cache.sh
@@ -0,0 +1,42 @@
+#!/bin/bash
+
+ls "$HOME/.cache/"
+CACHE_File="$HOME/.cache/cython_files.tar"
+
+clear_cache=0
+home_dir=$(pwd)
+
+if [ -f "$CACHE_File" ] && [ "$USE_CACHE" ]; then
+
+    echo "Cache available"
+    clear_cache=1
+    # did the last commit change cython files?
+    # go back 2 commits
+    if [ "$TRAVIS_PULL_REQUEST" == "false" ]
+    then
+        echo "Not a PR: checking for cython files changes from last 2 commits"
+        git diff HEAD~2 --numstat | grep -E "pyx|pxd"
+        retval=$(git diff HEAD~2 --numstat | grep -E "pyx|pxd"| wc -l)
+    else
+        echo "PR: checking for any cython file changes from last 5 commits"
+        git diff PR_HEAD~5 --numstat | grep -E "pyx|pxd"
+        retval=$(git diff PR_HEAD~5 --numstat | grep -E "pyx|pxd"| wc -l)
+    fi
+    echo "number of cython files changed: $retval"
+fi
+
+if [ $clear_cache -eq 1 ] && [ $retval -eq 0 ] && [ "$USE_CACHE" ]
+then
+    # nope, reuse cython files
+    echo "Will reuse cached cython file"
+    cd /
+    tar xvmf $CACHE_File
+    cd $home_dir
+else
+    echo "Rebuilding cythonized files"
+    echo "Use cache = $USE_CACHE"
+    echo "Clear cache = $clear_cache"
+fi
+
+
+exit 0
diff --git a/ci/submit_ccache.sh b/ci/submit_ccache.sh
deleted file mode 100755
index 7630bb7cc..000000000
--- a/ci/submit_ccache.sh
+++ /dev/null
@@ -1,39 +0,0 @@
-#!/bin/bash
-
-if [ "${TRAVIS_OS_NAME}" != "linux" ]; then
-   echo "not using ccache on non-linux"
-   exit 0
-fi
-
-if [ "$IRON_TOKEN" ]; then
-
-    home_dir=$(pwd)
-    ccache -s
-
-    MISSES=$(ccache -s | grep "cache miss" | grep -Po "\d+")
-    echo "MISSES: $MISSES"
-
-    if [ x"$MISSES" == x"0" ]; then
-       echo "No cache misses detected, skipping upload"
-       exit 0
-    fi
-
-    # install the compiler cache
-    sudo apt-get $APT_ARGS install ccache p7zip-full
-    # iron_cache, pending py3 fixes upstream
-    pip install -I --allow-external --allow-insecure git+https://github.com/iron-io/iron_cache_python.git@8a451c7d7e4d16e0c3bedffd0f280d5d9bd4fe59#egg=iron_cache
-
-    rm -rf $HOME/ccache.7z
-
-    tar cf - $HOME/.ccache \
-    "$TRAVIS_BUILD_DIR"/pandas/{index,algos,lib,tslib,parser,hashtable}.c \
-    "$TRAVIS_BUILD_DIR"/pandas/src/{sparse,testing}.c \
-    "$TRAVIS_BUILD_DIR"/pandas/msgpack.cpp  \
-    |  7za a -si $HOME/ccache.7z
-
-    split -b 500000 -d $HOME/ccache.7z $HOME/ccache.
-
-    python ci/ironcache/put.py
-fi
-
-exit 0
diff --git a/ci/submit_cython_cache.sh b/ci/submit_cython_cache.sh
new file mode 100755
index 000000000..3d41d6529
--- /dev/null
+++ b/ci/submit_cython_cache.sh
@@ -0,0 +1,23 @@
+#!/bin/bash
+
+CACHE_File="$HOME/.cache/cython_files.tar"
+rm -rf $CACHE_File
+
+home_dir=$(pwd)
+
+pyx_files=`find ${TRAVIS_BUILD_DIR} -name "*.pyx"`
+echo "pyx files:"
+echo $pyx_files
+
+tar cf ${CACHE_File} --files-from /dev/null
+
+for i in ${pyx_files}
+do
+        f=${i%.pyx}
+        ls $f.{c,cpp} | tar rf  ${CACHE_File} -T -
+done
+
+echo "Cython files in cache tar:"
+tar tvf ${CACHE_File}
+
+exit 0
diff --git a/pandas/util/print_versions.py b/pandas/util/print_versions.py
index e74568f39..70df1df33 100644
--- a/pandas/util/print_versions.py
+++ b/pandas/util/print_versions.py
@@ -4,6 +4,7 @@ import sys
 import struct
 import subprocess
 import codecs
+import locale
 import importlib
 
 
@@ -47,6 +48,7 @@ def get_sys_info():
             ("byteorder", "%s" % sys.byteorder),
             ("LC_ALL", "%s" % os.environ.get('LC_ALL', "None")),
             ("LANG", "%s" % os.environ.get('LANG', "None")),
+            ("LOCALE", "%s.%s" % locale.getlocale()),
 
         ])
     except:
