commit 58274e9953d3ba20617e7da26a56ae37befece5d
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Jul 24 13:42:36 2011 -0400

    TST: type inference bugfix and test coverage

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 50b562fa8..aca5786e6 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -75,13 +75,10 @@ def _unpickle_array(bytes):
     return arr
 
 def null_out_axis(arr, mask, axis):
-    if axis == 0:
-        arr[mask] = np.NaN
-    else:
-        indexer = [slice(None)] * arr.ndim
-        indexer[axis] = mask
+    indexer = [slice(None)] * arr.ndim
+    indexer[axis] = mask
 
-        arr[tuple(indexer)] = np.NaN
+    arr[tuple(indexer)] = np.NaN
 
 #-------------------------------------------------------------------------------
 # Lots of little utilities
@@ -89,10 +86,10 @@ def null_out_axis(arr, mask, axis):
 def _infer_dtype(value):
     if isinstance(value, (float, np.floating)):
         return float
-    elif isinstance(value, (int, np.integer)):
-        return int
     elif isinstance(value, (bool, np.bool_)):
         return bool
+    elif isinstance(value, (int, np.integer)):
+        return int
     else:
         return object
 
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index bb14a1ecf..730a266be 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -829,38 +829,3 @@ def _union_block_items(blocks):
             raise Exception('item names overlap')
 
     return seen
-
-def _nan_array(index, items, dtype=np.float64):
-    if index is None:
-        index = NULL_INDEX
-    if items is None:
-        items = NULL_INDEX
-
-    values = np.empty((len(index), len(items)), dtype=dtype)
-    values.fill(nan)
-    return values
-
-if __name__ == '__main__':
-    n = 10
-    floats = np.repeat(np.atleast_2d(np.arange(3.)), n, axis=0)
-    objects = np.empty((n, 2), dtype=object)
-    objects[:, 0] = 'foo'
-    objects[:, 1] = 'bar'
-
-    float_items = Index(['a', 'c', 'e'])
-    object_items = Index(['b', 'd'])
-    items = Index(sorted(float_items + object_items))
-    index = np.arange(n)
-    new_items = Index(['a', 'c', 'e', 'b', 'd'])
-
-    float_locs = new_items.get_indexer(float_items)[0]
-    obj_locs = new_items.get_indexer(object_items)[0]
-
-    fblock = make_block(floats, float_items, float_items)
-    oblock = make_block(objects, object_items, object_items)
-
-    # blocks = [fblock, oblock]
-
-    # interleaved = _interleave(blocks, items)
-
-    # mgr = BlockManager(blocks, index, items)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 3165e6da7..f8567804c 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -784,6 +784,16 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         df = DataFrame(index=[])
         self.assertEqual(df.values.shape, (0, 0))
 
+    def test_constructor_scalar_inference(self):
+        data = {'int' : 1, 'bool' : True,
+                'float' : 3., 'object' : 'foo'}
+        df = DataFrame(data, index=np.arange(10))
+
+        self.assert_(df['int'].dtype == np.int_)
+        self.assert_(df['bool'].dtype == np.bool_)
+        self.assert_(df['float'].dtype == np.float_)
+        self.assert_(df['object'].dtype == np.object_)
+
     def test_constructor_DataFrame(self):
         df = DataFrame(self.frame)
         assert_frame_equal(df, self.frame)
diff --git a/pandas/tests/test_internals.py b/pandas/tests/test_internals.py
index c6479b420..207d4f8e9 100644
--- a/pandas/tests/test_internals.py
+++ b/pandas/tests/test_internals.py
@@ -149,19 +149,6 @@ class TestBlock(unittest.TestCase):
         pass
 
 
-def test_nan_array():
-    arr = internals._nan_array(None, None)
-    assert(arr.shape == (0, 0))
-
-    arr = internals._nan_array(np.arange(10), None)
-    assert(arr.shape == (10, 0))
-
-    arr = internals._nan_array(None, np.arange(10))
-    assert(arr.shape == (0, 10))
-
-    arr = internals._nan_array(np.arange(5), np.arange(10))
-    assert(arr.shape == (5, 10))
-
 class TestBlockManager(unittest.TestCase):
 
     def setUp(self):
