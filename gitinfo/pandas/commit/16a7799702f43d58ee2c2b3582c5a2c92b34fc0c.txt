commit 16a7799702f43d58ee2c2b3582c5a2c92b34fc0c
Author: boombard <emerton222@gmail.com>
Date:   Mon Jan 18 16:40:30 2016 +0200

    BUG: .reset_index() should create a RangeIndex, #12071

diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 160a2936c..d772fd2c8 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -110,7 +110,7 @@ Range Index
 
 A ``RangeIndex`` has been added to the ``Int64Index`` sub-classes to support a memory saving alternative for common use cases. This has a similar implementation to the python ``range`` object (``xrange`` in python 2), in that it only stores the start, stop, and step values for the index. It will transparently interact with the user API, converting to ``Int64Index`` if needed.
 
-This will now be the default constructed index for ``NDFrame`` objects, rather than previous an ``Int64Index``. (:issue:`939`, :issue:`12070`)
+This will now be the default constructed index for ``NDFrame`` objects, rather than previous an ``Int64Index``. (:issue:`939`, :issue:`12070`, :issue:`12071`)
 
 Previous Behavior:
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 7f53e08b7..573e1a412 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2891,7 +2891,7 @@ class DataFrame(NDFrame):
                                                                 np.nan)
             return values
 
-        new_index = np.arange(len(new_obj), dtype='int64')
+        new_index = _default_index(len(new_obj))
         if isinstance(self.index, MultiIndex):
             if level is not None:
                 if not isinstance(level, (tuple, list)):
diff --git a/pandas/tests/frame/test_alter_axes.py b/pandas/tests/frame/test_alter_axes.py
index bea8eab93..884a147d7 100644
--- a/pandas/tests/frame/test_alter_axes.py
+++ b/pandas/tests/frame/test_alter_axes.py
@@ -7,7 +7,7 @@ from datetime import datetime, timedelta
 import numpy as np
 
 from pandas.compat import lrange
-from pandas import DataFrame, Series, Index, MultiIndex
+from pandas import DataFrame, Series, Index, MultiIndex, RangeIndex
 import pandas as pd
 
 from pandas.util.testing import (assert_almost_equal,
@@ -578,6 +578,17 @@ class TestDataFrameAlterAxes(tm.TestCase, TestData):
                                          datetime(2013, 1, 2)])
         assert_frame_equal(result, expected)
 
+    def test_reset_index_range(self):
+        # GH 12071
+        df = pd.DataFrame([[0, 0], [1, 1]], columns=['A', 'B'],
+                          index=RangeIndex(stop=2))
+        result = df.reset_index()
+        tm.assertIsInstance(result.index, RangeIndex)
+        expected = pd.DataFrame([[0, 0, 0], [1, 1, 1]],
+                                columns=['index', 'A', 'B'],
+                                index=RangeIndex(stop=2))
+        assert_frame_equal(result, expected)
+
     def test_set_index_names(self):
         df = pd.util.testing.makeDataFrame()
         df.index.name = 'name'
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 404582557..d25734d11 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -20,7 +20,7 @@ import pandas as pd
 from pandas import (Index, Series, DataFrame, isnull, notnull, bdate_range,
                     NaT, date_range, period_range, timedelta_range,
                     _np_version_under1p8, _np_version_under1p9)
-from pandas.core.index import MultiIndex
+from pandas.core.index import MultiIndex, RangeIndex
 from pandas.core.indexing import IndexingError
 from pandas.tseries.period import PeriodIndex
 from pandas.tseries.index import Timestamp, DatetimeIndex
@@ -8553,6 +8553,16 @@ class TestSeriesNonUnique(tm.TestCase):
         self.assertTrue(rs.index.equals(Index(index.get_level_values(1))))
         tm.assertIsInstance(rs, Series)
 
+    def test_reset_index_range(self):
+        # GH 12071
+        s = pd.Series(range(2), name='A', index=RangeIndex(stop=2))
+        series_result = s.reset_index()
+        tm.assertIsInstance(series_result.index, RangeIndex)
+        series_expected = pd.DataFrame([[0, 0], [1, 1]],
+                                       columns=['index', 'A'],
+                                       index=RangeIndex(stop=2))
+        assert_frame_equal(series_result, series_expected)
+
     def test_set_index_makes_timeseries(self):
         idx = tm.makeDateIndex(10)
 
