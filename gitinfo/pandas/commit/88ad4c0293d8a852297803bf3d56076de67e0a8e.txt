commit 88ad4c0293d8a852297803bf3d56076de67e0a8e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Sep 12 10:39:02 2011 -0400

    DOC: release notes, setup.py updating

diff --git a/RELEASE.rst b/RELEASE.rst
index 343dd9e8e..c7c4e5d30 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -116,7 +116,7 @@ Release notes
     possible their optimal performance characteristics. This should reduce
     confusion from users about which class to use.
 
-    * Note that under ther hood there is a new essentially "lazy evaluation"
+    * Note that under the hood there is a new essentially "lazy evaluation"
       scheme within respect to adding columns to DataFrame. During some
       operations, like-typed blocks will be "consolidated" but not before.
 
diff --git a/scripts/git_code_churn.py b/scripts/git_code_churn.py
index 2e0768adf..1ab929f2a 100644
--- a/scripts/git_code_churn.py
+++ b/scripts/git_code_churn.py
@@ -8,7 +8,7 @@ import numpy as np
 
 from pandas import *
 
-repo_path = '/home/wesm/code/pandas'
+repo_path = '/Users/wesm/code/pandas'
 githist = ('git log --pretty=format:\"%h %ad | %s%d [%an]\" --date=short ' +
            repo_path + ' > githist.txt')
 
diff --git a/setup.py b/setup.py
index 670f7d2d6..b251f308e 100755
--- a/setup.py
+++ b/setup.py
@@ -30,28 +30,72 @@ from distutils.command.sdist import sdist
 
 from os.path import splitext, basename, join as pjoin
 
-DESCRIPTION = "Cross-section and time series data analysis toolkit"
+DESCRIPTION = "Powerful data structures for data analysis and statistics"
 LONG_DESCRIPTION = """
-pandas provides NumPy-based data structures and statistical tools for
-common time series and cross-sectional data sets. It is intended to
-accomplish the following:
-
-* Simplify working with possibly labeled 1, 2, and 3 dimensional
-  heterogeneous data sets commonly found in statistics, finance, and
-  econometrics.
-
-* Provide tools for working with dates, fixed-frequency custom date
-  ranges, and other necessary time series functionality
-
-* Provide IO utilities for getting data in and out of pandas
-
-* Implement common statistical and time series functionality with a
-  convenient interface, handling missing data and other common
-  problems associated with messy statistical data sets
+**pandas** is a Python package providing fast, flexible, and expressive data
+structures designed to make working with "relational" or "labeled" data both
+easy and intuitive. It aims to be the fundamental high-level building block for
+doing practical, **real world** data analysis in Python. Additionally, it has
+the broader goal of becoming **the most powerful and flexible open source data
+analysis / manipulation tool available in any language**. It is already well on
+its way toward this goal.
+
+pandas is well suited for many different kinds of data:
+
+  - Tabular data with heterogeneously-typed columns, as in an SQL table or
+    Excel spreadsheet
+  - Ordered and unordered (not necessarily fixed-frequency) time series data.
+  - Arbitrary matrix data (homogeneously typed or heterogeneous) with row and
+    column labels
+  - Any other form of observational / statistical data sets. The data actually
+    need not be labeled at all to be placed into a pandas data structure
+
+The two primary data structures of pandas, Series (1-dimensional) and DataFrame
+(2-dimensional), handle the vast majority of typical use cases in finance,
+statistics, social science, and many areas of engineering. For R users,
+:class:`DataFrame` provides everything that R's ``data.frame`` provides and much
+more. pandas is built on top of `NumPy <http://www.numpy.org>`__ and is intended
+to integrate well within a scientific computing environment with many other 3rd
+party libraries.
+
+Here are just a few of the things that pandas does well:
+
+  - Easy handling of **missing data** (represented as NaN) in floating point as
+    well as non-floating point data
+  - Size mutability: columns can be **inserted and deleted** from DataFrame and
+    higher dimensional objects
+  - Automatic and explicit **data alignment**: objects can be explicitly
+    aligned to a set of labels, or the user can simply ignore the labels and
+    let `Series`, `DataFrame`, etc. automatically align the data for you in
+    computations
+  - Powerful, flexible **group by** functionality to perform
+    split-apply-combine operations on data sets, for both aggregating and
+    transforming data
+  - Make it **easy to convert** ragged, differently-indexed data in other
+    Python and NumPy data structures into DataFrame objects
+  - Intelligent label-based **slicing**, **fancy indexing**, and **subsetting**
+    of large data sets
+  - Intuitive **merging** and **joining** data sets
+  - Flexible **reshaping** and pivoting of data sets
+  - **Hierarchical** labeling of axes (possible to have multiple labels per
+    tick)
+  - Robust IO tools for loading data from **flat files** (CSV and delimited),
+    Excel files, databases, and saving / loading data from the ultrafast **HDF5
+    format**
+  - **Time series**-specific functionality: date range generation and frequency
+    conversion, moving window statistics, moving window linear regressions,
+    date shifting and lagging, etc.
+
+Many of these principles are here to address the shortcomings frequently
+experienced using other languages / scientific research environments. For data
+scientists, working with data is typically divided into multiple stages:
+munging and cleaning data, analyzing / modeling it, then organizing the results
+of the analysis into a form suitable for plotting or tabular display. pandas
+is the ideal tool for all of these tasks.
 
 Note
 ----
-Windows binaries built against NumPy 1.5.1
+Windows binaries built against NumPy 1.6.1
 """
 
 DISTNAME = 'pandas'
