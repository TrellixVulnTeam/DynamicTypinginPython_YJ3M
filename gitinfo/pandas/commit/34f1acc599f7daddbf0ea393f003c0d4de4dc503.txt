commit 34f1acc599f7daddbf0ea393f003c0d4de4dc503
Author: bwignall <brianwignall@gmail.com>
Date:   Sun Jun 1 21:22:44 2014 -0400

    CLN/DOC: Change instances of "Pandas" to "pandas" in documentation

diff --git a/doc/make.py b/doc/make.py
index 88e5a939e..8a92654d1 100755
--- a/doc/make.py
+++ b/doc/make.py
@@ -300,7 +300,7 @@ small_docs = False
 
 import argparse
 argparser = argparse.ArgumentParser(description="""
-Pandas documentation builder
+pandas documentation builder
 """.strip())
 
 # argparser.add_argument('-arg_name', '--arg_name',
@@ -325,7 +325,7 @@ def generate_index(api=True, single=False, **kwds):
         f.write(t.render(api=api,single=single,**kwds))
 
 import argparse
-argparser = argparse.ArgumentParser(description="Pandas documentation builder",
+argparser = argparse.ArgumentParser(description="pandas documentation builder",
                                     epilog="Targets : %s" % funcd.keys())
 
 argparser.add_argument('--no-api',
diff --git a/doc/source/10min.rst b/doc/source/10min.rst
index c56826c5c..a9a97ee56 100644
--- a/doc/source/10min.rst
+++ b/doc/source/10min.rst
@@ -22,7 +22,7 @@
 
 
 ********************
-10 Minutes to Pandas
+10 Minutes to pandas
 ********************
 
 This is a short introduction to pandas, geared mainly for new users.
@@ -344,7 +344,7 @@ A ``where`` operation with setting.
 Missing Data
 ------------
 
-Pandas primarily uses the value ``np.nan`` to represent missing data. It is by
+pandas primarily uses the value ``np.nan`` to represent missing data. It is by
 default not included in computations. See the :ref:`Missing Data section
 <missing_data>`
 
@@ -445,7 +445,7 @@ Merge
 Concat
 ~~~~~~
 
-Pandas provides various facilities for easily combining together Series,
+pandas provides various facilities for easily combining together Series,
 DataFrame, and Panel objects with various kinds of set logic for the indexes
 and relational algebra functionality in the case of join / merge-type
 operations.
@@ -585,7 +585,7 @@ We can produce pivot tables from this data very easily:
 Time Series
 -----------
 
-Pandas has simple, powerful, and efficient functionality for performing
+pandas has simple, powerful, and efficient functionality for performing
 resampling operations during frequency conversion (e.g., converting secondly
 data into 5-minutely data). This is extremely common in, but not limited to,
 financial applications. See the :ref:`Time Series section <timeseries>`
diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index 336f93265..02df98313 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -93,7 +93,7 @@ unlike the axis labels, cannot be assigned to.
 Accelerated operations
 ----------------------
 
-Pandas has support for accelerating certain types of binary numerical and boolean operations using
+pandas has support for accelerating certain types of binary numerical and boolean operations using
 the ``numexpr`` library (starting in 0.11.0) and the ``bottleneck`` libraries.
 
 These libraries are especially useful when dealing with large data sets, and provide large
@@ -1556,7 +1556,7 @@ Working with package options
 .. _basics.working_with_options:
 .. versionadded:: 0.10.1
 
-Pandas has an options system that let's you customize some aspects of it's behaviour,
+pandas has an options system that let's you customize some aspects of it's behaviour,
 display-related options being those the user is must likely to adjust.
 
 Options have a full "dotted-style", case-insensitive name (e.g. ``display.max_rows``),
diff --git a/doc/source/comparison_with_sql.rst b/doc/source/comparison_with_sql.rst
index 4d0a2b80c..371875d99 100644
--- a/doc/source/comparison_with_sql.rst
+++ b/doc/source/comparison_with_sql.rst
@@ -7,7 +7,7 @@ Since many potential pandas users have some familiarity with
 `SQL <http://en.wikipedia.org/wiki/SQL>`_, this page is meant to provide some examples of how
 various SQL operations would be performed using pandas.
 
-If you're new to pandas, you might want to first read through :ref:`10 Minutes to Pandas<10min>`
+If you're new to pandas, you might want to first read through :ref:`10 Minutes to pandas<10min>`
 to familiarize yourself with the library.
 
 As is customary, we import pandas and numpy as follows:
diff --git a/doc/source/cookbook.rst b/doc/source/cookbook.rst
index 7099f9dbc..2548f2d88 100644
--- a/doc/source/cookbook.rst
+++ b/doc/source/cookbook.rst
@@ -551,7 +551,7 @@ Storing Attributes to a group node
 Binary Files
 ~~~~~~~~~~~~
 
-Pandas readily accepts numpy record arrays, if you need to read in a binary
+pandas readily accepts numpy record arrays, if you need to read in a binary
 file consisting of an array of C structs. For example, given this C program
 in a file called ``main.c`` compiled with ``gcc main.c -std=gnu99`` on a
 64-bit machine,
diff --git a/doc/source/ecosystem.rst b/doc/source/ecosystem.rst
index 3b409ec91..e5009aeb1 100644
--- a/doc/source/ecosystem.rst
+++ b/doc/source/ecosystem.rst
@@ -1,7 +1,7 @@
 .. _ecosystem:
 
 ****************
-Pandas Ecosystem
+pandas Ecosystem
 ****************
 
 Increasingly, packages are being built on top of pandas to address specific needs
@@ -89,4 +89,3 @@ Domain Specific
 Geopandas extends pandas data objects to include geographic information which support
 geometric operations. If your work entails maps and geographical coordinates, and
 you love pandas, you should take a close look at Geopandas.
-
diff --git a/doc/source/faq.rst b/doc/source/faq.rst
index 646066255..6154d21e1 100644
--- a/doc/source/faq.rst
+++ b/doc/source/faq.rst
@@ -30,7 +30,7 @@ Frequently Asked Questions (FAQ)
 How do I control the way my DataFrame is displayed?
 ---------------------------------------------------
 
-Pandas users rely on a variety of environments for using pandas: scripts, terminal,
+pandas users rely on a variety of environments for using pandas: scripts, terminal,
 IPython qtconsole/ notebook, (IDLE, spyder, etc').
 Each environment has it's own capabilities and limitations: HTML support,
 horizontal scrolling, auto-detection of width/height.
@@ -64,10 +64,10 @@ options automatically when starting up.
 
 .. _ref-monkey-patching:
 
-Adding Features to your Pandas Installation
+Adding Features to your pandas Installation
 -------------------------------------------
 
-Pandas is a powerful tool and already has a plethora of data manipulation
+pandas is a powerful tool and already has a plethora of data manipulation
 operations implemented, most of them are very fast as well.
 It's very possible however that certain functionality that would make your
 life easier is missing. In that case you have several options:
diff --git a/doc/source/gotchas.rst b/doc/source/gotchas.rst
index a927bcec6..0078ffb50 100644
--- a/doc/source/gotchas.rst
+++ b/doc/source/gotchas.rst
@@ -18,10 +18,10 @@ Caveats and Gotchas
 
 .. _gotchas.truth:
 
-Using If/Truth Statements with Pandas
+Using If/Truth Statements with pandas
 -------------------------------------
 
-Pandas follows the numpy convention of raising an error when you try to convert something to a ``bool``.
+pandas follows the numpy convention of raising an error when you try to convert something to a ``bool``.
 This happens in a ``if`` or when using the boolean operations, ``and``, ``or``, or ``not``.  It is not clear
 what the result of
 
diff --git a/doc/source/index.rst.template b/doc/source/index.rst.template
index 01f654192..905e76aee 100644
--- a/doc/source/index.rst.template
+++ b/doc/source/index.rst.template
@@ -1,4 +1,4 @@
-.. Pandas documentation master file, created by
+.. pandas documentation master file, created by
 
 *********************************************
 pandas: powerful Python data analysis toolkit
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index b90ae05c6..84736d498 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -60,7 +60,7 @@ Different Choices for Indexing (``loc``, ``iloc``, and ``ix``)
 .. versionadded:: 0.11.0
 
 Object selection has had a number of user-requested additions in order to
-support more explicit location based indexing. Pandas now supports three types
+support more explicit location based indexing. pandas now supports three types
 of multi-axis indexing.
 
 - ``.loc`` is strictly label based, will raise ``KeyError`` when the items are
@@ -275,7 +275,7 @@ Selection By Label
    This is sometimes called ``chained assignment`` and should be avoided.
    See :ref:`Returning a View versus Copy <indexing.view_versus_copy>`
 
-Pandas provides a suite of methods in order to have **purely label based indexing**. This is a strict inclusion based protocol.
+pandas provides a suite of methods in order to have **purely label based indexing**. This is a strict inclusion based protocol.
 **ALL** of the labels for which you ask, must be in the index or a ``KeyError`` will be raised! When slicing, the start bound is *included*, **AND** the stop bound is *included*. Integers are valid labels, but they refer to the label **and not the position**.
 
 The ``.loc`` attribute is the primary access method. The following are valid inputs:
@@ -346,7 +346,7 @@ Selection By Position
    This is sometimes called ``chained assignment`` and should be avoided.
    See :ref:`Returning a View versus Copy <indexing.view_versus_copy>`
 
-Pandas provides a suite of methods in order to get **purely integer based indexing**. The semantics follow closely python and numpy slicing. These are ``0-based`` indexing. When slicing, the start bounds is *included*, while the upper bound is *excluded*. Trying to use a non-integer, even a **valid** label will raise a ``IndexError``.
+pandas provides a suite of methods in order to get **purely integer based indexing**. The semantics follow closely python and numpy slicing. These are ``0-based`` indexing. When slicing, the start bounds is *included*, while the upper bound is *excluded*. Trying to use a non-integer, even a **valid** label will raise a ``IndexError``.
 
 The ``.iloc`` attribute is the primary access method. The following are valid inputs:
 
@@ -1158,7 +1158,7 @@ Advanced Indexing with ``.ix``
 
    The recent addition of ``.loc`` and ``.iloc`` have enabled users to be quite
    explicit about indexing choices. ``.ix`` allows a great flexibility to
-   specify indexing locations by *label* and/or *integer position*. Pandas will
+   specify indexing locations by *label* and/or *integer position*. pandas will
    attempt to use any passed *integer* as *label* locations first (like what
    ``.loc`` would do, then to fall back on *positional* indexing, like what
    ``.iloc``  would do). See :ref:`Fallback Indexing <indexing.fallback>` for
@@ -1509,10 +1509,10 @@ Fallback indexing
 .. _indexing.fallback:
 
 Float indexes should be used only with caution. If you have a float indexed
-``DataFrame`` and try to select using an integer, the row that Pandas returns
-might not be what you expect. Pandas first attempts to use the *integer*
+``DataFrame`` and try to select using an integer, the row that pandas returns
+might not be what you expect. pandas first attempts to use the *integer*
 as a *label* location, but fails to find a match (because the types
-are not equal). Pandas then falls back to back to positional indexing.
+are not equal). pandas then falls back to back to positional indexing.
 
 .. ipython:: python
 
diff --git a/doc/source/install.rst b/doc/source/install.rst
index 7cce76144..56ab7b704 100644
--- a/doc/source/install.rst
+++ b/doc/source/install.rst
@@ -29,7 +29,7 @@ _____________
 
 Stable installers available on `PyPI <http://pypi.python.org/pypi/pandas>`__
 
-Preliminary builds and installers on the `Pandas download page <http://pandas.pydata.org/getpandas.html>`__ .
+Preliminary builds and installers on the `pandas download page <http://pandas.pydata.org/getpandas.html>`__ .
 
 Overview
 ___________
diff --git a/doc/source/io.rst b/doc/source/io.rst
index f10dac9d3..bc58b04de 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -29,7 +29,7 @@
 IO Tools (Text, CSV, HDF5, ...)
 *******************************
 
-The Pandas I/O api is a set of top level ``reader`` functions accessed like ``pd.read_csv()`` that generally return a ``pandas``
+The pandas I/O api is a set of top level ``reader`` functions accessed like ``pd.read_csv()`` that generally return a ``pandas``
 object.
 
     * :ref:`read_csv<io.read_csv_table>`
@@ -515,7 +515,7 @@ If you have ``parse_dates`` enabled for some or all of your columns, and your
 datetime strings are all formatted the same way, you may get a large speed
 up by setting ``infer_datetime_format=True``.  If set, pandas will attempt
 to guess the format of your datetime strings, and then use a faster means
-of parsing the strings.  5-10x parsing speeds have been observed.  Pandas
+of parsing the strings.  5-10x parsing speeds have been observed.  pandas
 will fallback to the usual parsing if either the format cannot be guessed
 or the format that was guessed cannot properly parse the entire column
 of strings.  So in general, ``infer_datetime_format`` should not have any
@@ -1438,7 +1438,7 @@ Dates written in nanoseconds need to be read back in nanoseconds:
    dfju = pd.read_json(json, date_unit='ms')
    dfju
 
-   # Let Pandas detect the correct precision
+   # Let pandas detect the correct precision
    dfju = pd.read_json(json)
    dfju
 
@@ -1518,7 +1518,7 @@ Normalization
 
 .. versionadded:: 0.13.0
 
-Pandas provides a utility function to take a dict or list of dicts and *normalize* this semi-structured data
+pandas provides a utility function to take a dict or list of dicts and *normalize* this semi-structured data
 into a flat table.
 
 .. ipython:: python
@@ -2174,7 +2174,7 @@ for some advanced strategies
 .. note::
 
    ``PyTables`` 3.0.0 was recently released to enable support for Python 3.
-   Pandas should be fully compatible (and previously written stores should be
+   pandas should be fully compatible (and previously written stores should be
    backwards compatible) with all ``PyTables`` >= 2.3. For ``python >= 3.2``,
    ``pandas >= 0.12.0`` is required for compatibility.
 
@@ -3627,4 +3627,3 @@ And here's the code
 
    def test_csv_read():
        pd.read_csv('test.csv',index_col=0)
-
diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index 6dac071a5..9263eb2ce 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -94,7 +94,7 @@ Datetimes
 
 For datetime64[ns] types, ``NaT`` represents missing values. This is a pseudo-native
 sentinel value that can be represented by numpy in a singular dtype (datetime64[ns]).
-Pandas objects provide intercompatibility between ``NaT`` and ``NaN``.
+pandas objects provide intercompatibility between ``NaT`` and ``NaN``.
 
 .. ipython:: python
 
diff --git a/doc/source/remote_data.rst b/doc/source/remote_data.rst
index 16edf6480..b0cd96cac 100644
--- a/doc/source/remote_data.rst
+++ b/doc/source/remote_data.rst
@@ -102,7 +102,7 @@ Dataset names are listed at `Fama/French Data Library
 World Bank
 ----------
 
-``Pandas`` users can easily access thousands of panel data series from the
+``pandas`` users can easily access thousands of panel data series from the
 `World Bank's World Development Indicators <http://data.worldbank.org>`__
 by using the ``wb`` I/O functions.
 
@@ -170,7 +170,7 @@ contracts around the world.
     4027      IT.MOB.COV.ZS  Population coverage of mobile cellular telepho...
 
 Notice that this second search was much faster than the first one because
-``Pandas`` now has a cached list of available data series.
+``pandas`` now has a cached list of available data series.
 
 .. code-block:: python
 
diff --git a/doc/source/timeseries.rst b/doc/source/timeseries.rst
index 8f3d2fe8e..5897b1a43 100644
--- a/doc/source/timeseries.rst
+++ b/doc/source/timeseries.rst
@@ -736,7 +736,7 @@ in pandas.
 
 Legacy Aliases
 ~~~~~~~~~~~~~~
-Note that prior to v0.8.0, time rules had a slightly different look. Pandas
+Note that prior to v0.8.0, time rules had a slightly different look. pandas
 will continue to support the legacy time rules for the time being but it is
 strongly recommended that you switch to using the new offset aliases.
 
@@ -1509,7 +1509,7 @@ Numpy < 1.7 Compatibility
 ~~~~~~~~~~~~~~~~~~~~~~~~~
 
 Numpy < 1.7 has a broken ``timedelta64`` type that does not correctly work
-for arithmetic. Pandas bypasses this, but for frequency conversion as above,
+for arithmetic. pandas bypasses this, but for frequency conversion as above,
 you need to create the divisor yourself. The ``np.timetimedelta64`` type only
 has 1 argument, the number of **micro** seconds.
 
@@ -1524,4 +1524,3 @@ The following are equivalent statements in the two versions of numpy.
    else:
        y / np.timedelta64(1,'D')
        y / np.timedelta64(1,'s')
-
diff --git a/doc/source/tutorials.rst b/doc/source/tutorials.rst
index dafb9200c..421304bb8 100644
--- a/doc/source/tutorials.rst
+++ b/doc/source/tutorials.rst
@@ -9,11 +9,11 @@ This is a guide to many pandas tutorials, geared mainly for new users.
 Internal Guides
 ---------------
 
-Pandas own :ref:`10 Minutes to Pandas<10min>`
+pandas own :ref:`10 Minutes to pandas<10min>`
 
 More complex recipes are in the :ref:`Cookbook<cookbook>`
 
-Pandas Cookbook
+pandas Cookbook
 ---------------
 
 The goal of this cookbook (by `Julia Evans <http://jvns.ca>`_) is to
@@ -54,7 +54,7 @@ See `How to use this cookbook <https://github.com/jvns/pandas-cookbook#how-to-us
    to be really easy.
 
 
-Lessons for New Pandas Users
+Lessons for New pandas Users
 ----------------------------
 
 For more resources, please visit the main `repository <https://bitbucket.org/hrojas/learn-pandas>`_.
@@ -117,7 +117,7 @@ Excel charts with pandas, vincent and xlsxwriter
 Various Tutorials
 -----------------
 
-- `Wes McKinney's (Pandas BDFL) blog <http://blog.wesmckinney.com/>`_
+- `Wes McKinney's (pandas BDFL) blog <http://blog.wesmckinney.com/>`_
 - `Statistical analysis made easy in Python with SciPy and pandas DataFrames, by Randal Olson <http://www.randalolson.com/2012/08/06/statistical-analysis-made-easy-in-python/>`_
 - `Statistical Data Analysis in Python, tutorial videos, by Christopher Fonnesbeck from SciPy 2013 <http://conference.scipy.org/scipy2013/tutorial_detail.php?id=109>`_
 - `Financial analysis in python, by Thomas Wiecki <http://nbviewer.ipython.org/github/twiecki/financial-analysis-python-tutorial/blob/master/1.%20Pandas%20Basics.ipynb>`_
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index 6064d02ca..630e40c4e 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -854,7 +854,7 @@ with "(right)" in the legend. To turn off the automatic marking, use the
 Suppressing Tick Resolution Adjustment
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-Pandas includes automatically tick resolution adjustment for regular frequency
+pandas includes automatically tick resolution adjustment for regular frequency
 time-series data. For limited cases where pandas cannot infer the frequency
 information (e.g., in an externally created ``twinx``), you can choose to
 suppress this behavior for alignment purposes.
@@ -1144,4 +1144,3 @@ when plotting a large number of points.
    :suppress:
 
     plt.close('all')
-
