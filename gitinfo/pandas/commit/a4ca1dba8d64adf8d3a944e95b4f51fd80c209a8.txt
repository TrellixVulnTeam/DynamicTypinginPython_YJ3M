commit a4ca1dba8d64adf8d3a944e95b4f51fd80c209a8
Author: y-p <yoval@gmx.com>
Date:   Sun Mar 10 21:16:27 2013 +0200

    ENH: df.from_records should accept values deriving from ABC collection.Mapping, GH3000

diff --git a/doc/source/v0.11.0.txt b/doc/source/v0.11.0.txt
index 60ec7de5c..25ccbf94f 100644
--- a/doc/source/v0.11.0.txt
+++ b/doc/source/v0.11.0.txt
@@ -280,6 +280,10 @@ Enhancements
   - value_counts() now accepts a "normalize" argument, for normalized
     histograms. (GH2710_).
 
+  - DataFrame.from_records now accepts not only dicts but any instance of
+    the collections.Mapping ABC.
+
+
 
 Bug Fixes
 ~~~~~~~~~
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index ee586a210..5fffadfda 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -17,6 +17,7 @@ from StringIO import StringIO
 import csv
 import operator
 import sys
+import collections
 
 from numpy import nan as NA
 import numpy as np
@@ -413,7 +414,7 @@ class DataFrame(NDFrame):
                 if index is None and isinstance(data[0], Series):
                     index = _get_names_from_index(data)
 
-                if isinstance(data[0], (list, tuple, dict, Series)):
+                if isinstance(data[0], (list, tuple, collections.Mapping, Series)):
                     arrays, columns = _to_arrays(data, columns, dtype=dtype)
                     columns = _ensure_index(columns)
 
@@ -5527,7 +5528,7 @@ def _to_arrays(data, columns, coerce_float=False, dtype=None):
     if isinstance(data[0], (list, tuple)):
         return _list_to_arrays(data, columns, coerce_float=coerce_float,
                                dtype=dtype)
-    elif isinstance(data[0], dict):
+    elif isinstance(data[0], collections.Mapping):
         return _list_of_dict_to_arrays(data, columns,
                                        coerce_float=coerce_float,
                                        dtype=dtype)
