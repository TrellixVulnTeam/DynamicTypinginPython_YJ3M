commit 54492791116108199c24734a0220560974eb3372
Author: Simon Hawkins <simonjayhawkins@gmail.com>
Date:   Wed Feb 20 16:47:35 2019 +0000

    API: more consistent error message for MultiIndex.from_arrays (#25189)

diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index c19b6f61f..492d28476 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -324,11 +324,17 @@ class MultiIndex(Index):
                    codes=[[0, 0, 1, 1], [1, 0, 1, 0]],
                    names=['number', 'color'])
         """
+        error_msg = "Input must be a list / sequence of array-likes."
         if not is_list_like(arrays):
-            raise TypeError("Input must be a list / sequence of array-likes.")
+            raise TypeError(error_msg)
         elif is_iterator(arrays):
             arrays = list(arrays)
 
+        # Check if elements of array are list-like
+        for array in arrays:
+            if not is_list_like(array):
+                raise TypeError(error_msg)
+
         # Check if lengths of all arrays are equal or not,
         # raise ValueError, if not
         for i in range(1, len(arrays)):
diff --git a/pandas/tests/indexes/multi/test_constructor.py b/pandas/tests/indexes/multi/test_constructor.py
index 055d54c61..fe90e85cf 100644
--- a/pandas/tests/indexes/multi/test_constructor.py
+++ b/pandas/tests/indexes/multi/test_constructor.py
@@ -142,6 +142,15 @@ def test_from_arrays_iterator(idx):
         MultiIndex.from_arrays(0)
 
 
+def test_from_arrays_tuples(idx):
+    arrays = tuple(tuple(np.asarray(lev).take(level_codes))
+                   for lev, level_codes in zip(idx.levels, idx.codes))
+
+    # tuple of tuples as input
+    result = MultiIndex.from_arrays(arrays, names=idx.names)
+    tm.assert_index_equal(result, idx)
+
+
 def test_from_arrays_index_series_datetimetz():
     idx1 = pd.date_range('2015-01-01 10:00', freq='D', periods=3,
                          tz='US/Eastern')
@@ -254,11 +263,13 @@ def test_from_arrays_empty():
 
 
 @pytest.mark.parametrize('invalid_sequence_of_arrays', [
-    1, [1], [1, 2], [[1], 2], 'a', ['a'], ['a', 'b'], [['a'], 'b']])
+    1, [1], [1, 2], [[1], 2], [1, [2]], 'a', ['a'], ['a', 'b'], [['a'], 'b'],
+    (1,), (1, 2), ([1], 2), (1, [2]), 'a', ('a',), ('a', 'b'), (['a'], 'b'),
+    [(1,), 2], [1, (2,)], [('a',), 'b'],
+    ((1,), 2), (1, (2,)), (('a',), 'b')
+])
 def test_from_arrays_invalid_input(invalid_sequence_of_arrays):
-    msg = (r"Input must be a list / sequence of array-likes|"
-           r"Input must be list-like|"
-           r"object of type 'int' has no len\(\)")
+    msg = "Input must be a list / sequence of array-likes"
     with pytest.raises(TypeError, match=msg):
         MultiIndex.from_arrays(arrays=invalid_sequence_of_arrays)
 
