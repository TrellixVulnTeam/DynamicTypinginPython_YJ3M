commit c0e13d1bccd4a783486eba8cc769db48a7875de8
Author: Matt Roeschke <emailformattr@gmail.com>
Date:   Wed Nov 16 22:44:11 2016 -0800

    BUG: Bug upon Series.Groupby.nunique with empty Series
    
    closes #12553
    closes #14770

diff --git a/doc/source/whatsnew/v0.19.2.txt b/doc/source/whatsnew/v0.19.2.txt
index d365a3f30..fe900d048 100644
--- a/doc/source/whatsnew/v0.19.2.txt
+++ b/doc/source/whatsnew/v0.19.2.txt
@@ -59,6 +59,8 @@ Bug Fixes
 
 
 - Bug ``HDFStore`` writing a ``MultiIndex`` when using ``data_columns=True`` (:issue:`14435`)
+- Bug in ``Series.groupby.nunique()`` raising an ``IndexError`` for an empty ``Series`` (:issue:`12553`)
+
 
 
 - Bug in clipboard functions on linux with python2 with unicode and separators (:issue:`13747`)
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index f449e1668..66c9e3876 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -2908,6 +2908,7 @@ class SeriesGroupBy(GroupBy):
     def nunique(self, dropna=True):
         """ Returns number of unique elements in the group """
         ids, _, _ = self.grouper.group_info
+
         val = self.obj.get_values()
 
         try:
@@ -2938,7 +2939,10 @@ class SeriesGroupBy(GroupBy):
             inc[idx] = 1
 
         out = np.add.reduceat(inc, idx).astype('int64', copy=False)
-        res = out if ids[0] != -1 else out[1:]
+        if len(ids):
+            res = out if ids[0] != -1 else out[1:]
+        else:
+            res = out[1:]
         ri = self.grouper.result_index
 
         # we might have duplications among the bins
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 37499e09d..a2e1c5e9f 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -6773,6 +6773,13 @@ class TestGroupBy(tm.TestCase):
         expected = pd.Series([1] * 5, name='name', index=index)
         tm.assert_series_equal(result, expected)
 
+    def test_nunique_with_empty_series(self):
+        # GH 12553
+        data = pd.Series(name='name')
+        result = data.groupby(level=0).nunique()
+        expected = pd.Series(name='name', dtype='int64')
+        tm.assert_series_equal(result, expected)
+
     def test_transform_with_non_scalar_group(self):
         # GH 10165
         cols = pd.MultiIndex.from_tuples([
