commit 2cda89df0871531531cf50529c53a58ac63e05ad
Author: hugo <hugo>
Date:   Sun Feb 9 18:31:50 2014 -0500

    FIX: hdfstore queries of the form where=[('date', '>=', datetime(2013,1,1)), ('date', '<=', datetime(2014,1,1))] were broken
    - modified Expr.parse_back_compat to check for tuples, in w, and unpack into w, op, value
    - modified Expr.__init__ to modify the where list/tuple with the parsed result

diff --git a/pandas/computation/pytables.py b/pandas/computation/pytables.py
index bf477cd71..c5b0785fe 100644
--- a/pandas/computation/pytables.py
+++ b/pandas/computation/pytables.py
@@ -488,7 +488,6 @@ class Expr(expr.Expr):
         self.filter = None
         self.terms = None
         self._visitor = None
-
         # capture the environement if needed
         lcls = dict()
         if isinstance(where, Expr):
@@ -497,13 +496,12 @@ class Expr(expr.Expr):
             where = where.expr
 
         elif isinstance(where, (list, tuple)):
-
-            for w in where:
+            for idx, w in enumerate(where):
                 if isinstance(w, Expr):
                     lcls.update(w.env.locals)
                 else:
                     w = self.parse_back_compat(w)
-
+                    where[idx] = w
             where = ' & ' .join(["(%s)" % w for w in where])
 
         self.expr = where
@@ -528,7 +526,16 @@ class Expr(expr.Expr):
             warnings.warn("passing a dict to Expr is deprecated, "
                           "pass the where as a single string",
                           DeprecationWarning)
-
+        if isinstance(w, tuple):
+            if len(w) == 2:
+                w, value = w
+                op = '=='
+            elif len(w) == 3:
+                w, op, value = w
+            warnings.warn("passing a tuple into Expr is deprecated, "
+                          "pass the where as a single string",
+                          DeprecationWarning)
+                
         if op is not None:
             if not isinstance(w, string_types):
                 raise TypeError(
