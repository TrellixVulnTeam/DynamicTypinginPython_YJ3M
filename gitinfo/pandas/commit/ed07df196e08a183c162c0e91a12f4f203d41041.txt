commit ed07df196e08a183c162c0e91a12f4f203d41041
Author: gfyoung <gfyoung17@gmail.com>
Date:   Mon Apr 3 12:31:55 2017 -0400

    CLN: Remove "flake8: noqa" from even more files
    
    Another round of house-cleaning that builds off #15867.  Likely to be
    the last one for now.
    
    Author: gfyoung <gfyoung17@gmail.com>
    
    Closes #15872 from gfyoung/flake8-noqa-clean and squashes the following commits:
    
    3e610f5 [gfyoung] CLN: Make pickle_compat.py flake8-able
    05e067a [gfyoung] CLN: Make windows.py flake8-able
    dc22c0a [gfyoung] CLN: Make clipboards.py flake8-able
    90b00f0 [gfyoung] CLN: Make clipboard/__init__.py flake8-able
    ccb44cc [gfyoung] CLN: Make engines.py flake8-able

diff --git a/pandas/compat/pickle_compat.py b/pandas/compat/pickle_compat.py
index 279a82fea..5b4fcad25 100644
--- a/pandas/compat/pickle_compat.py
+++ b/pandas/compat/pickle_compat.py
@@ -1,13 +1,13 @@
-""" support pre 0.12 series pickle compatibility """
-
-# flake8: noqa
+"""
+Support pre-0.12 series pickle compatibility.
+"""
 
 import sys
-import pandas
+import pandas  # noqa
 import copy
 import pickle as pkl
 from pandas import compat, Index
-from pandas.compat import u, string_types
+from pandas.compat import u, string_types  # noqa
 
 
 def load_reduce(self):
@@ -16,17 +16,19 @@ def load_reduce(self):
     func = stack[-1]
 
     if type(args[0]) is type:
-        n = args[0].__name__
+        n = args[0].__name__  # noqa
 
     try:
         stack[-1] = func(*args)
         return
     except Exception as e:
 
-        # if we have a deprecated function
-        # try to replace and try again
+        # If we have a deprecated function,
+        # try to replace and try again.
+
+        msg = '_reconstruct: First argument must be a sub-type of ndarray'
 
-        if '_reconstruct: First argument must be a sub-type of ndarray' in str(e):
+        if msg in str(e):
             try:
                 cls = args[0]
                 stack[-1] = object.__new__(cls)
@@ -34,7 +36,7 @@ def load_reduce(self):
             except:
                 pass
 
-        # try to reencode the arguments
+        # try to re-encode the arguments
         if getattr(self, 'encoding', None) is not None:
             args = tuple([arg.encode(self.encoding)
                           if isinstance(arg, string_types)
@@ -45,31 +47,37 @@ def load_reduce(self):
             except:
                 pass
 
+        # unknown exception, re-raise
         if getattr(self, 'is_verbose', None):
             print(sys.exc_info())
             print(func, args)
         raise
 
-    stack[-1] = value
 
-
-# if classes are moved, provide compat here
+# If classes are moved, provide compat here.
 _class_locations_map = {
 
     # 15477
-    ('pandas.core.base', 'FrozenNDArray'): ('pandas.indexes.frozen', 'FrozenNDArray'),
-    ('pandas.core.base', 'FrozenList'): ('pandas.indexes.frozen', 'FrozenList'),
+    ('pandas.core.base', 'FrozenNDArray'):
+        ('pandas.indexes.frozen', 'FrozenNDArray'),
+    ('pandas.core.base', 'FrozenList'):
+        ('pandas.indexes.frozen', 'FrozenList'),
 
     # 10890
-    ('pandas.core.series', 'TimeSeries'): ('pandas.core.series', 'Series'),
-    ('pandas.sparse.series', 'SparseTimeSeries'): ('pandas.sparse.series', 'SparseSeries'),
+    ('pandas.core.series', 'TimeSeries'):
+        ('pandas.core.series', 'Series'),
+    ('pandas.sparse.series', 'SparseTimeSeries'):
+        ('pandas.sparse.series', 'SparseSeries'),
 
     # 12588, extensions moving
-    ('pandas._sparse', 'BlockIndex'): ('pandas.sparse.libsparse', 'BlockIndex'),
-    ('pandas.tslib', 'Timestamp'): ('pandas._libs.tslib', 'Timestamp'),
-    ('pandas.tslib', '__nat_unpickle'): ('pandas._libs.tslib', '__nat_unpickle'),
+    ('pandas._sparse', 'BlockIndex'):
+        ('pandas.sparse.libsparse', 'BlockIndex'),
+    ('pandas.tslib', 'Timestamp'):
+        ('pandas._libs.tslib', 'Timestamp'),
+    ('pandas.tslib', '__nat_unpickle'):
+        ('pandas._libs.tslib', '__nat_unpickle'),
     ('pandas._period', 'Period'): ('pandas._libs.period', 'Period')
-    }
+}
 
 
 # our Unpickler sub-class to override methods and some dispatcher
@@ -112,6 +120,8 @@ def load_newobj(self):
         obj = cls.__new__(cls, *args)
 
     self.stack[-1] = obj
+
+
 Unpickler.dispatch[pkl.NEWOBJ[0]] = load_newobj
 
 
@@ -126,6 +136,8 @@ def load_newobj_ex(self):
     else:
         obj = cls.__new__(cls, *args, **kwargs)
     self.append(obj)
+
+
 try:
     Unpickler.dispatch[pkl.NEWOBJ_EX[0]] = load_newobj_ex
 except:
diff --git a/pandas/computation/engines.py b/pandas/computation/engines.py
index a3de78c2f..aebc5bb02 100644
--- a/pandas/computation/engines.py
+++ b/pandas/computation/engines.py
@@ -1,13 +1,11 @@
-"""Engine classes for :func:`~pandas.eval`
 """
-
-# flake8: noqa
+Engine classes for :func:`~pandas.eval`
+"""
 
 import abc
 
 from pandas import compat
-from pandas.compat import DeepChainMap, map
-import pandas.core.common as com
+from pandas.compat import map
 import pandas.formats.printing as printing
 from pandas.computation.align import _align, _reconstruct_object
 from pandas.computation.ops import (UndefinedVariableError,
diff --git a/pandas/util/clipboard/__init__.py b/pandas/util/clipboard/__init__.py
index 9e2b2faf8..4066a3be5 100644
--- a/pandas/util/clipboard/__init__.py
+++ b/pandas/util/clipboard/__init__.py
@@ -25,8 +25,6 @@ and this module does not work with PyGObject yet.
 """
 __version__ = '1.5.27'
 
-# flake8: noqa
-
 import platform
 import os
 import subprocess
@@ -62,14 +60,16 @@ def determine_clipboard():
     if HAS_DISPLAY:
         # Determine which command/module is installed, if any.
         try:
-            import gtk  # check if gtk is installed
+            # Check if gtk is installed
+            import gtk  # noqa
         except ImportError:
             pass
         else:
             return init_gtk_clipboard()
 
         try:
-            import PyQt4  # check if PyQt4 is installed
+            # Check if PyQt4 is installed
+            import PyQt4  # noqa
         except ImportError:
             pass
         else:
diff --git a/pandas/util/clipboard/clipboards.py b/pandas/util/clipboard/clipboards.py
index bd5528334..e32380a38 100644
--- a/pandas/util/clipboard/clipboards.py
+++ b/pandas/util/clipboard/clipboards.py
@@ -1,5 +1,3 @@
-# flake8: noqa
-
 import sys
 import subprocess
 from .exceptions import PyperclipException
@@ -8,7 +6,7 @@ EXCEPT_MSG = """
     Pyperclip could not find a copy/paste mechanism for your system.
     For more information, please visit https://pyperclip.readthedocs.org """
 PY2 = sys.version_info[0] == 2
-text_type = unicode if PY2 else str
+text_type = unicode if PY2 else str  # noqa
 
 
 def init_osx_clipboard():
diff --git a/pandas/util/clipboard/windows.py b/pandas/util/clipboard/windows.py
index 5c9be9dda..5fc23f710 100644
--- a/pandas/util/clipboard/windows.py
+++ b/pandas/util/clipboard/windows.py
@@ -1,4 +1,3 @@
-# flake8: noqa
 """
 This module implements clipboard handling on Windows using ctypes.
 """
