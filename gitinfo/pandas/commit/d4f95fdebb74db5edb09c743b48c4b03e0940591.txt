commit d4f95fdebb74db5edb09c743b48c4b03e0940591
Author: gfyoung <gfyoung17@gmail.com>
Date:   Mon Aug 1 17:17:11 2016 -0400

    MAINT: Nicer error msg for NULL byte in read_csv (#13859)
    
    Provides a nicer error message for the Python engine
    in read_csv when the data contains a NULL byte.
    
    Closes gh-2741.

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index abbe7bdf1..8c6157416 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -2190,7 +2190,17 @@ class PythonParser(ParserBase):
                 next(self.data)
 
             while True:
-                orig_line = next(self.data)
+                try:
+                    orig_line = next(self.data)
+                except csv.Error as e:
+                    if 'NULL byte' in str(e):
+                        raise csv.Error(
+                            'NULL byte detected. This byte '
+                            'cannot be processed in Python\'s '
+                            'native csv library at the moment, '
+                            'so please pass in engine=\'c\' instead.')
+                    else:
+                        raise
                 line = self._check_comments([orig_line])[0]
                 self.pos += 1
                 if (not self.skip_blank_lines and
diff --git a/pandas/io/tests/parser/common.py b/pandas/io/tests/parser/common.py
index f8fc6c2bf..129e925e3 100644
--- a/pandas/io/tests/parser/common.py
+++ b/pandas/io/tests/parser/common.py
@@ -1501,3 +1501,19 @@ j,-inF"""
 
         out = self.read_csv(mmap_file, memory_map=True)
         tm.assert_frame_equal(out, expected)
+
+    def test_null_byte_char(self):
+        # see gh-2741
+        data = '\x00,foo'
+        cols = ['a', 'b']
+
+        expected = DataFrame([[np.nan, 'foo']],
+                             columns=cols)
+
+        if self.engine == 'c':
+            out = self.read_csv(StringIO(data), names=cols)
+            tm.assert_frame_equal(out, expected)
+        else:
+            msg = "NULL byte detected"
+            with tm.assertRaisesRegexp(csv.Error, msg):
+                self.read_csv(StringIO(data), names=cols)
