commit 54f5368e31c92e2a71ec250efe3cecdfb6071441
Author: Gaurav Chauhan <2796gaurav@gmail.com>
Date:   Tue Jun 23 23:05:07 2020 +0530

    #34569 Added proper description for pandas.Series.pop (#34606)

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index d12ebeafe..1872f34df 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -4263,6 +4263,49 @@ class DataFrame(NDFrame):
             downcast=downcast,
         )
 
+    def pop(self, item: Label) -> Series:
+        """
+        Return item and drop from frame. Raise KeyError if not found.
+
+        Parameters
+        ----------
+        item : label
+            Label of column to be popped.
+
+        Returns
+        -------
+        Series
+
+        Examples
+        --------
+        >>> df = pd.DataFrame([('falcon', 'bird', 389.0),
+        ...                    ('parrot', 'bird', 24.0),
+        ...                    ('lion', 'mammal', 80.5),
+        ...                    ('monkey', 'mammal', np.nan)],
+        ...                   columns=('name', 'class', 'max_speed'))
+        >>> df
+             name   class  max_speed
+        0  falcon    bird      389.0
+        1  parrot    bird       24.0
+        2    lion  mammal       80.5
+        3  monkey  mammal        NaN
+
+        >>> df.pop('class')
+        0      bird
+        1      bird
+        2    mammal
+        3    mammal
+        Name: class, dtype: object
+
+        >>> df
+             name  max_speed
+        0  falcon      389.0
+        1  parrot       24.0
+        2    lion       80.5
+        3  monkey        NaN
+        """
+        return super().pop(item=item)
+
     @doc(NDFrame.replace, **_shared_doc_kwargs)
     def replace(
         self,
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index bb2810ba7..fa92f702f 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -105,6 +105,7 @@ from pandas.tseries.offsets import Tick
 
 if TYPE_CHECKING:
     from pandas.core.resample import Resampler
+    from pandas.core.series import Series  # noqa: F401
 
 # goal is to be able to define the docs close to function, while still being
 # able to share
@@ -657,47 +658,7 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         result = self.set_axis(new_labels, axis=axis, inplace=False)
         return result
 
-    def pop(self: FrameOrSeries, item) -> FrameOrSeries:
-        """
-        Return item and drop from frame. Raise KeyError if not found.
-
-        Parameters
-        ----------
-        item : str
-            Label of column to be popped.
-
-        Returns
-        -------
-        Series
-
-        Examples
-        --------
-        >>> df = pd.DataFrame([('falcon', 'bird', 389.0),
-        ...                    ('parrot', 'bird', 24.0),
-        ...                    ('lion', 'mammal', 80.5),
-        ...                    ('monkey', 'mammal', np.nan)],
-        ...                   columns=('name', 'class', 'max_speed'))
-        >>> df
-             name   class  max_speed
-        0  falcon    bird      389.0
-        1  parrot    bird       24.0
-        2    lion  mammal       80.5
-        3  monkey  mammal        NaN
-
-        >>> df.pop('class')
-        0      bird
-        1      bird
-        2    mammal
-        3    mammal
-        Name: class, dtype: object
-
-        >>> df
-             name  max_speed
-        0  falcon      389.0
-        1  parrot       24.0
-        2    lion       80.5
-        3  monkey        NaN
-        """
+    def pop(self, item: Label) -> Union["Series", Any]:
         result = self[item]
         del self[item]
         if self.ndim == 2:
@@ -5396,7 +5357,7 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
         string              object
         dtype: object
         """
-        from pandas import Series
+        from pandas import Series  # noqa: F811
 
         return Series(self._mgr.get_dtypes(), index=self._info_axis, dtype=np.object_)
 
diff --git a/pandas/core/reshape/melt.py b/pandas/core/reshape/melt.py
index 7d22b86c5..845f6b676 100644
--- a/pandas/core/reshape/melt.py
+++ b/pandas/core/reshape/melt.py
@@ -1,5 +1,5 @@
 import re
-from typing import List
+from typing import TYPE_CHECKING, List, cast
 
 import numpy as np
 
@@ -16,6 +16,9 @@ from pandas.core.indexes.api import Index, MultiIndex
 from pandas.core.reshape.concat import concat
 from pandas.core.tools.numeric import to_numeric
 
+if TYPE_CHECKING:
+    from pandas import Series  # noqa: F401
+
 
 @Appender(
     _shared_docs["melt"]
@@ -106,7 +109,7 @@ def melt(
     for col in id_vars:
         id_data = frame.pop(col)
         if is_extension_array_dtype(id_data):
-            id_data = concat([id_data] * K, ignore_index=True)
+            id_data = cast("Series", concat([id_data] * K, ignore_index=True))
         else:
             id_data = np.tile(id_data._values, K)
         mdata[col] = id_data
diff --git a/pandas/core/series.py b/pandas/core/series.py
index cab8dd133..e8c72125e 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -4492,6 +4492,33 @@ Keep all original rows and also all original values
             downcast=downcast,
         )
 
+    def pop(self, item: Label) -> Any:
+        """
+        Return item and drops from series. Raise KeyError if not found.
+
+        Parameters
+        ----------
+        item : label
+            Index of the element that needs to be removed.
+
+        Returns
+        -------
+        Value that is popped from series.
+
+        Examples
+        --------
+        >>> ser = pd.Series([1,2,3])
+
+        >>> ser.pop(0)
+        1
+
+        >>> ser
+        1    2
+        2    3
+        dtype: int64
+        """
+        return super().pop(item=item)
+
     @doc(NDFrame.replace, klass=_shared_doc_kwargs["klass"])
     def replace(
         self,
