commit a9f4db4016072b2aa14c6e71cdba01155cfd2980
Author: jreback <jeff@reback.net>
Date:   Sat Mar 23 10:00:07 2013 -0400

    ENH: allow Int64Index to have a platform int dtype

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 467fe46e8..0d6557754 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -107,7 +107,7 @@ class Index(np.ndarray):
                 return PeriodIndex(data, copy=copy, name=name)
 
             if issubclass(data.dtype.type, np.integer):
-                return Int64Index(data, copy=copy, name=name)
+                return Int64Index(data, copy=copy, dtype=dtype, name=name)
 
             subarr = com._ensure_object(data)
         elif np.isscalar(data):
@@ -1296,7 +1296,12 @@ class Int64Index(Index):
             raise TypeError('String dtype not supported, you may need '
                             'to explicitly cast to int')
         elif issubclass(data.dtype.type, np.integer):
-            subarr = np.array(data, dtype=np.int64, copy=copy)
+            # don't force the upcast as we may be dealing
+            # with a platform int
+            if dtype is None or not issubclass(np.dtype(dtype).type, np.integer):
+                dtype = np.int64
+
+            subarr = np.array(data, dtype=dtype, copy=copy)
         else:
             subarr = np.array(data, dtype=np.int64, copy=copy)
             if len(data) > 0:
@@ -1316,10 +1321,6 @@ class Int64Index(Index):
     def _constructor(self):
         return Int64Index
 
-    @cache_readonly
-    def dtype(self):
-        return np.dtype('int64')
-
     @property
     def is_all_dates(self):
         """
diff --git a/pandas/tests/test_common.py b/pandas/tests/test_common.py
index 7869d2627..89f6859a3 100644
--- a/pandas/tests/test_common.py
+++ b/pandas/tests/test_common.py
@@ -253,6 +253,26 @@ def test_ensure_int32():
     result = com._ensure_int32(values)
     assert(result.dtype == np.int32)
 
+def test_ensure_platform_int():
+
+    # verify that when we create certain types of indices
+    # they remain the correct type under platform conversions
+    from pandas.core.index import Int64Index
+
+    # int64
+    x = Int64Index([1, 2, 3], dtype='int64')
+    assert(x.dtype == np.int64)
+
+    pi = com._ensure_platform_int(x)
+    assert(pi.dtype == np.int_)
+
+    # int32
+    x = Int64Index([1, 2, 3], dtype='int32')
+    assert(x.dtype == np.int32)
+
+    pi = com._ensure_platform_int(x)
+    assert(pi.dtype == np.int_)
+
 # TODO: fix this broken test
 
 # def test_console_encode():
