commit 6f02df9d29128034ac90007e7b60f7fead5cee4e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Nov 1 10:00:05 2012 -0400

    BUG: cast datetime64 values to nanoseconds in DataFrame ctor. close #2095

diff --git a/RELEASE.rst b/RELEASE.rst
index 7d62c780e..928f16b5c 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -44,6 +44,7 @@ pandas 0.9.1
   - Fix unstacking edge case with unrepresented groups (#2100)
   - Fix Series.str failures when using pipe pattern '|' (#2119)
   - Fix pretty-printing of dict entries in Series, DataFrame (#2144)
+  - Cast other datetime64 values to nanoseconds in DataFrame ctor (#2095)
 
 pandas 0.9.0
 ============
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index a2a74d50d..bec893a79 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -1254,6 +1254,8 @@ def form_blocks(data, axes):
         elif issubclass(v.dtype.type, np.complexfloating):
             complex_dict[k] = v
         elif issubclass(v.dtype.type, np.datetime64):
+            if v.dtype != _NS_DTYPE:
+                v = lib.cast_to_nanoseconds(v)
             datetime_dict[k] = v
         elif issubclass(v.dtype.type, np.integer):
             int_dict[k] = v
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 570905f2f..7507f3e4d 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1797,6 +1797,23 @@ class TestLegacySupport(unittest.TestCase):
         self.assertTrue(isinstance(result, Timestamp))
         self.assertEqual(result, exp)
 
+    def test_from_M8_structured(self):
+        dates = [ (datetime(2012, 9, 9, 0, 0),
+                   datetime(2012, 9, 8, 15, 10))]
+        arr = np.array(dates,
+                       dtype=[('Date', '<M8[us]'), ('Forecasting', '<M8[us]')])
+        df = DataFrame(arr)
+
+        self.assertEqual(df['Date'][0], dates[0][0])
+        self.assertEqual(df['Forecasting'][0], dates[0][1])
+
+        s = Series(arr['Date'])
+        self.assertTrue(s[0], Timestamp)
+        self.assertEqual(s[0], dates[0][0])
+
+        s = Series.from_array(arr['Date'], Index([0]))
+        self.assertEqual(s[0], dates[0][0])
+
 class TestLegacyCompat(unittest.TestCase):
 
     def setUp(self):
