commit d4ad3a5eec643b982c9ce62c4ef1c2fe9074fea3
Author: jreback <jeff@reback.net>
Date:   Wed Nov 20 10:24:16 2013 -0500

    BUG: Bug in selecting from a non-unique index with loc (GH5553)

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 164232417..ccc34a405 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -813,6 +813,7 @@ Bug Fixes
   - Bug in getitem with a multi-index and ``iloc`` (:issue:`5528`)
   - Bug in delitem on a Series (:issue:`5542`)
   - Bug fix in apply when using custom function and objects are not mutated (:issue:`5545`)
+  - Bug in selecting from a non-unique index with ``loc`` (:issue:`5553`)
 
 pandas 0.12.0
 -------------
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 6d0f57c6d..fcb9a82b9 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -826,8 +826,10 @@ class _NDFrameIndexer(object):
 
                     # a unique indexer
                     if keyarr_is_unique:
-                        new_indexer = (Index(cur_indexer) +
-                                       Index(missing_indexer)).values
+
+                        # see GH5553, make sure we use the right indexer
+                        new_indexer = np.arange(len(indexer))
+                        new_indexer[cur_indexer] = np.arange(len(result._get_axis(axis)))
                         new_indexer[missing_indexer] = -1
 
                     # we have a non_unique selector, need to use the original
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index 86c380878..581513408 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -869,9 +869,9 @@ class TestIndexing(unittest.TestCase):
         assert_frame_equal(df,result)
 
         # GH 3561, dups not in selected order
-        df = DataFrame({'test': [5,7,9,11]}, index=['A', 'A', 'B', 'C'])
+        df = DataFrame({'test': [5,7,9,11], 'test1': [4.,5,6,7], 'other': list('abcd') }, index=['A', 'A', 'B', 'C'])
         rows = ['C', 'B']
-        expected = DataFrame({'test' : [11,9]},index=rows)
+        expected = DataFrame({'test' : [11,9], 'test1': [ 7., 6], 'other': ['d','c']},index=rows)
         result = df.ix[rows]
         assert_frame_equal(result, expected)
 
@@ -879,7 +879,15 @@ class TestIndexing(unittest.TestCase):
         assert_frame_equal(result, expected)
 
         rows = ['C','B','E']
-        expected = DataFrame({'test' : [11,9,np.nan]},index=rows)
+        expected = DataFrame({'test' : [11,9,np.nan], 'test1': [7.,6,np.nan], 'other': ['d','c',np.nan]},index=rows)
+        result = df.ix[rows]
+        assert_frame_equal(result, expected)
+
+        # see GH5553, make sure we use the right indexer
+        rows = ['F','G','H','C','B','E']
+        expected = DataFrame({'test' : [np.nan,np.nan,np.nan,11,9,np.nan],
+                              'test1': [np.nan,np.nan,np.nan,7.,6,np.nan],
+                              'other': [np.nan,np.nan,np.nan,'d','c',np.nan]},index=rows)
         result = df.ix[rows]
         assert_frame_equal(result, expected)
 
