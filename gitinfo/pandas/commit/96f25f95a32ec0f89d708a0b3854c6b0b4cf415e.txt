commit 96f25f95a32ec0f89d708a0b3854c6b0b4cf415e
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Dec 25 21:41:19 2011 -0500

    TST: testing + docstring for DataFrame/Panel.get function, per #521

diff --git a/RELEASE.rst b/RELEASE.rst
index 35cc7db39..57f9b7e24 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -40,7 +40,8 @@ pandas 0.6.2
   - Handle differently-indexed output values in ``DataFrame.apply`` (GH #498)
   - Can pass list of dicts (e.g., a list of shallow JSON objects) to DataFrame
     constructor (GH #526)
-  - Add `reorder_levels` method to Series and DataFrame (PR #534)
+  - Add ``reorder_levels`` method to Series and DataFrame (PR #534)
+  - Add dict-like ``get`` function to DataFrame and Panel (PR #521)
 
 **Improvements to existing features**
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 26e2eefbd..7b27ae5ae 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1215,13 +1215,6 @@ class DataFrame(NDFrame):
         """
         return NDFrame.pop(self, item)
 
-    def get(self, column, default=None):
-        try:
-            return self[column]
-        except KeyError:
-            return default
-        
-
     # to support old APIs
     @property
     def _series(self):
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index bbf9fde76..cb06553c6 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -61,6 +61,24 @@ class PandasObject(Picklable):
         name = self._get_axis_name(axis)
         return getattr(self, name)
 
+    def get(self, key, default=None):
+        """
+        Get item from object for given key (DataFrame column, Panel slice,
+        etc.). Returns default value if not found
+
+        Parameters
+        ----------
+        key : object
+
+        Returns
+        -------
+        value : type of items contained in object
+        """
+        try:
+            return self[key]
+        except KeyError:
+            return default
+
     def groupby(self, by=None, axis=0, level=None, as_index=True):
         """
         Group series using mapper (dict or key function, apply given function
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 78d932ad8..c87428264 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -51,6 +51,14 @@ class CheckIndexing(object):
         self.assert_('random' not in self.frame)
         self.assertRaises(Exception, self.frame.__getitem__, 'random')
 
+    def test_get(self):
+        b = self.frame.get('B')
+        assert_series_equal(b, self.frame['B'])
+
+        self.assert_(self.frame.get('foo') is None)
+        assert_series_equal(self.frame.get('foo', self.frame['B']),
+                            self.frame['B'])
+
     def test_getitem_iterator(self):
         idx = iter(['A', 'B', 'C'])
         result = self.frame.ix[:, idx]
