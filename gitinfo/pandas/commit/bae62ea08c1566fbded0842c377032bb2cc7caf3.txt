commit bae62ea08c1566fbded0842c377032bb2cc7caf3
Author: jreback <jeff@reback.net>
Date:   Fri May 17 15:23:14 2013 -0400

    DOC: minor edits in missing_data.rst and io/stata edits

diff --git a/doc/source/io.rst b/doc/source/io.rst
index c988b4315..f15f758c4 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -1833,8 +1833,27 @@ There are a few other available functions:
    **SQLite**. Moreover, the **index** will currently be **dropped**.
 
 
+STATA Format
+------------
+
+Writing to STATA format
+~~~~~~~~~~~~~~~~~~~~~~~
+
+.. _io.StataWriter:
+
+The function :func:'~pandas.io.StataWriter.write_file' will write a DataFrame 
+into a .dta file. The format version of this file is always the latest one, 
+115.
+
+.. ipython:: python
+
+   from pandas.io.stata import StataWriter
+   df = DataFrame(randn(10,2),columns=list('AB'))
+   writer = StataWriter('stata.dta',df)
+   writer.write_file()
+
 Reading from STATA format
-~~~~~~~~~~~~~~~~~~~~~~
+~~~~~~~~~~~~~~~~~~~~~~~~~
 
 .. _io.StataReader:
 
@@ -1845,30 +1864,22 @@ initialization. Its function :func:'~pandas.io.StataReader.data' will
 read the observations, converting them to a DataFrame which is returned:
 
 .. ipython:: python
-   reader = StataReader(dta_filepath)
-   dataframe = reader.data()
+
+   from pandas.io.stata import StataReader
+   reader = StataReader('stata.dta')
+   reader.data()
 
 The parameter convert_categoricals indicates wheter value labels should be 
 read and used to create a Categorical variable from them. Value labels can 
 also be retrieved by the function variable_labels, which requires data to be 
 called before.
+
 The StataReader supports .dta Formats 104, 105, 108, 113-115.
 
-Alternatively, the function :func:'~pandas.io.read_stata' can be used:
+Alternatively, the function :func:'~pandas.io.read_stata' can be used
 
 .. ipython:: python
-   dataframe = read_stata(dta_filepath)
-
-
-Writing to STATA format
-~~~~~~~~~~~~~~~~~~~~~~
-
-.. _io.StataWriter:
-
-The function :func:'~pandas.io.StataWriter.write_file' will write a DataFrame 
-into a .dta file. The format version of this file is always the latest one, 
-115.
+   :suppress:
 
-.. ipython:: python
-   writer = StataWriter(filename, dataframe)
-   writer.write_file()
+   import os
+   os.remove('stata.dta')
diff --git a/doc/source/missing_data.rst b/doc/source/missing_data.rst
index 70db8abf3..ce1924103 100644
--- a/doc/source/missing_data.rst
+++ b/doc/source/missing_data.rst
@@ -334,8 +334,10 @@ missing and interpolate over them:
 
    ser.replace([1, 2, 3], method='pad')
 
+.. _missing_data.replace_expression:
+
 String/Regular Expression Replacement
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
 .. note::
 
@@ -350,10 +352,14 @@ String/Regular Expression Replacement
 Replace the '.' with ``nan`` (str -> str)
 
 .. ipython:: python
+   :suppress:
 
    from numpy.random import rand, randn
-   from numpy import nan
+   nan = np.nan
    from pandas import DataFrame
+
+.. ipython:: python
+
    d = {'a': range(4), 'b': list('ab..'), 'c': ['a', 'b', nan, 'd']}
    df = DataFrame(d)
    df.replace('.', nan)
@@ -434,16 +440,20 @@ want to use a regular expression.
    a compiled regular expression is valid as well.
 
 Numeric Replacement
-^^^^^^^^^^^^^^^^^^^
+~~~~~~~~~~~~~~~~~~~
 
 Similiar to ``DataFrame.fillna``
 
 .. ipython:: python
+   :suppress:
 
    from numpy.random import rand, randn
    from numpy import nan
    from pandas import DataFrame
    from pandas.util.testing import assert_frame_equal
+
+.. ipython:: python
+
    df = DataFrame(randn(10, 2))
    df[rand(df.shape[0]) > 0.5] = 1.5
    df.replace(1.5, nan)
diff --git a/doc/source/v0.11.1.txt b/doc/source/v0.11.1.txt
index c16eb6463..d5256bcf2 100644
--- a/doc/source/v0.11.1.txt
+++ b/doc/source/v0.11.1.txt
@@ -57,7 +57,7 @@ Enhancements
   - Added module for reading and writing Stata files: pandas.io.stata (GH1512_)
   - ``DataFrame.replace()`` now allows regular expressions on contained
     ``Series`` with object dtype. See the examples section in the regular docs
-    and the generated documentation for the method for more details.
+    :ref:`Replacing via String Expression <missing_data.replace_expression>`
 
 See the `full release notes
 <https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
