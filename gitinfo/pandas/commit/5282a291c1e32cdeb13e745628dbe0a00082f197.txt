commit 5282a291c1e32cdeb13e745628dbe0a00082f197
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu Jun 14 18:11:05 2012 -0400

    TST: test case for tseries plots with data gaps

diff --git a/pandas/tseries/plotting.py b/pandas/tseries/plotting.py
index 51b3d3d77..ea2596e0c 100644
--- a/pandas/tseries/plotting.py
+++ b/pandas/tseries/plotting.py
@@ -99,7 +99,7 @@ def tsplot(series, plotf, *args, **kwargs):
     if freq != series.index.freq:
         series = series.asfreq(freq)
 
-    mask = isnull(series)
+
 
     style = kwargs.pop('style', None)
 
@@ -118,9 +118,15 @@ def tsplot(series, plotf, *args, **kwargs):
     ax.date_axis_info = None
 
     # format args and lot
-    masked_array = np.ma.array(series.values)
-    masked_array = np.ma.masked_where(mask, masked_array)
-    args = _check_plot_params(masked_array, series.index, freq, style, *args)
+    mask = isnull(series)
+    if mask.any():
+        masked_array = np.ma.array(series.values)
+        masked_array = np.ma.masked_where(mask, masked_array)
+        args = _check_plot_params(masked_array, series.index, freq, style,
+                                  *args)
+    else:
+        args = _check_plot_params(series, series.index, freq, style, *args)
+
     plotted = plotf(ax, *args,  **kwargs)
 
     format_dateaxis(ax, ax.freq)
diff --git a/pandas/tseries/tests/test_plotting.py b/pandas/tseries/tests/test_plotting.py
index a97c419e9..f001685e0 100644
--- a/pandas/tseries/tests/test_plotting.py
+++ b/pandas/tseries/tests/test_plotting.py
@@ -192,6 +192,21 @@ class TestTSPlot(unittest.TestCase):
             rs = xaxis.get_majorticklocs()[0]
             self.assert_(rs == xp)
 
+    @slow
+    def test_gaps(self):
+        import matplotlib.pyplot as plt
+        plt.close('all')
+        ts = tm.makeTimeSeries()
+        ts[5:25] = np.nan
+        ax = ts.plot()
+        lines = ax.get_lines()
+        self.assert_(len(lines) == 1)
+        l = lines[0]
+        data = l.get_xydata()
+        self.assert_(isinstance(data, np.ma.core.MaskedArray))
+        mask = data.mask
+        self.assert_(mask[5:25, 1].all())
+
     @slow
     def test_secondary_y(self):
         import matplotlib.pyplot as plt
