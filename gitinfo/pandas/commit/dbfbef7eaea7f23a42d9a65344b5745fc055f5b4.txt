commit dbfbef7eaea7f23a42d9a65344b5745fc055f5b4
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Jun 26 16:53:23 2020 -0700

    BUG: item_cache not cleared on DataFrame.values (#34999)

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 39f93af16..4fc96993f 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1341,6 +1341,7 @@ class DataFrame(NDFrame):
         array([[1, 3.0, Timestamp('2000-01-01 00:00:00')],
                [2, 4.5, Timestamp('2000-01-02 00:00:00')]], dtype=object)
         """
+        self._consolidate_inplace()
         result = self._mgr.as_array(
             transpose=self._AXIS_REVERSED, dtype=dtype, copy=copy, na_value=na_value
         )
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 4e0247bfc..a66cade3b 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -5330,6 +5330,7 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
                ['lion', 80.5, 1],
                ['monkey', nan, None]], dtype=object)
         """
+        self._consolidate_inplace()
         return self._mgr.as_array(transpose=self._AXIS_REVERSED)
 
     @property
@@ -6530,7 +6531,7 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
                             f"Replacement lists must match in length. "
                             f"Expecting {len(to_replace)} got {len(value)} "
                         )
-
+                    self._consolidate_inplace()
                     new_data = self._mgr.replace_list(
                         src_list=to_replace,
                         dest_list=value,
diff --git a/pandas/core/internals/managers.py b/pandas/core/internals/managers.py
index 6055a6205..843e7ce40 100644
--- a/pandas/core/internals/managers.py
+++ b/pandas/core/internals/managers.py
@@ -812,7 +812,7 @@ class BlockManager(PandasObject):
                 .values.to_numpy(dtype=dtype, na_value=na_value)
                 .reshape(self.blocks[0].shape)
             )
-        elif self._is_single_block or not self.is_mixed_type:
+        elif self._is_single_block:
             arr = np.asarray(self.blocks[0].get_values())
             if dtype:
                 arr = arr.astype(dtype, copy=False)
diff --git a/pandas/tests/frame/test_block_internals.py b/pandas/tests/frame/test_block_internals.py
index e2910a2eb..d5554860c 100644
--- a/pandas/tests/frame/test_block_internals.py
+++ b/pandas/tests/frame/test_block_internals.py
@@ -86,9 +86,14 @@ class TestDataFrameBlockInternals:
 
         # unconsolidated
         float_frame["E"] = 7.0
+        col = float_frame["E"]
         float_frame.values[6] = 6
         assert (float_frame.values[6] == 6).all()
 
+        # check that item_cache was cleared
+        assert float_frame["E"] is not col
+        assert (col == 7).all()
+
     def test_boolean_set_uncons(self, float_frame):
         float_frame["E"] = 7.0
 
