commit ce87d06e116649d8849425d7acc810f436c55235
Author: gfyoung <gfyoung17@gmail.com>
Date:   Tue Jul 17 12:40:39 2018 -0700

    BUG: Properly handle lists for .mask (#21934)
    
    Closes gh-21891.

diff --git a/doc/source/whatsnew/v0.24.0.txt b/doc/source/whatsnew/v0.24.0.txt
index a0076118a..01a0c3511 100644
--- a/doc/source/whatsnew/v0.24.0.txt
+++ b/doc/source/whatsnew/v0.24.0.txt
@@ -160,7 +160,7 @@ For situations where you need an ``ndarray`` of ``Interval`` objects, use
 :meth:`numpy.asarray` or ``idx.astype(object)``.
 
 .. ipython:: python
-  
+
    np.asarray(idx)
    idx.values.astype(object)
 
@@ -487,6 +487,7 @@ Reshaping
 - Bug in :func:`pandas.concat` when joining resampled DataFrames with timezone aware index (:issue:`13783`)
 - Bug in :meth:`Series.combine_first` with ``datetime64[ns, tz]`` dtype which would return tz-naive result (:issue:`21469`)
 - Bug in :meth:`Series.where` and :meth:`DataFrame.where` with ``datetime64[ns, tz]`` dtype (:issue:`21546`)
+- Bug in :meth:`Series.mask` and :meth:`DataFrame.mask` with ``list`` conditionals (:issue:`21891`)
 -
 -
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 7305da4f5..b682f5e65 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -7941,6 +7941,10 @@ class NDFrame(PandasObject, SelectionMixin):
         inplace = validate_bool_kwarg(inplace, 'inplace')
         cond = com._apply_if_callable(cond, self)
 
+        # see gh-21891
+        if not hasattr(cond, "__invert__"):
+            cond = np.array(cond)
+
         return self.where(~cond, other=other, inplace=inplace, axis=axis,
                           level=level, try_cast=try_cast,
                           errors=errors)
diff --git a/pandas/tests/frame/test_indexing.py b/pandas/tests/frame/test_indexing.py
index 9ca2b7e3c..2eed6b47d 100644
--- a/pandas/tests/frame/test_indexing.py
+++ b/pandas/tests/frame/test_indexing.py
@@ -2966,6 +2966,13 @@ class TestDataFrameIndexing(TestData):
         assert_frame_equal(rs, df.mask(df <= 0, other))
         assert_frame_equal(rs, df.mask(~cond, other))
 
+        # see gh-21891
+        df = DataFrame([1, 2])
+        res = df.mask([[True], [False]])
+
+        exp = DataFrame([np.nan, 2])
+        tm.assert_frame_equal(res, exp)
+
     def test_mask_inplace(self):
         # GH8801
         df = DataFrame(np.random.randn(5, 3))
diff --git a/pandas/tests/series/indexing/test_boolean.py b/pandas/tests/series/indexing/test_boolean.py
index bd54d5f57..e2a9b3586 100644
--- a/pandas/tests/series/indexing/test_boolean.py
+++ b/pandas/tests/series/indexing/test_boolean.py
@@ -617,6 +617,13 @@ def test_mask():
     expected = Series([1, 2, np.nan, np.nan])
     assert_series_equal(result, expected)
 
+    # see gh-21891
+    s = Series([1, 2])
+    res = s.mask([True, False])
+
+    exp = Series([np.nan, 2])
+    tm.assert_series_equal(res, exp)
+
 
 def test_mask_inplace():
     s = Series(np.random.randn(5))
