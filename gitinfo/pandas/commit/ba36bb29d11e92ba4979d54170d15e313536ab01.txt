commit ba36bb29d11e92ba4979d54170d15e313536ab01
Author: Chang She <chang@lambdafoundry.com>
Date:   Tue Jul 10 12:39:08 2012 -0400

    BUG: DataFrame.corr bug #1595

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 9a3c47302..e977b5ab5 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3841,7 +3841,9 @@ class DataFrame(NDFrame):
             for i, ac in enumerate(mat):
                 for j, bc  in enumerate(mat):
                     valid = mask[i] & mask[j]
-                    if not valid.all():
+                    if not valid.any():
+                        c = np.nan
+                    elif not valid.all():
                         c = corrf(ac[valid], bc[valid])
                     else:
                         c = corrf(ac, bc)
diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index 545cf658f..5f09c546b 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -347,7 +347,10 @@ def get_corr_func(method):
     def _pearson(a, b):
         return np.corrcoef(a, b)[0, 1]
     def _kendall(a, b):
-        return kendalltau(a, b)[0]
+        rs = kendalltau(a, b)
+        if isinstance(rs, tuple):
+            return rs[0]
+        return rs
     def _spearman(a, b):
         return spearmanr(a, b)[0]
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 0ead679db..9aa17f756 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3591,6 +3591,14 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = self.mixed_frame.ix[:, ['A', 'B', 'C', 'D']].corr()
         assert_frame_equal(result, expected)
 
+        # nothing in common
+        for meth in ['pearson', 'kendall', 'spearman']:
+            df = DataFrame({'A': [1, 1, 1, np.nan, np.nan, np.nan],
+                            'B': [np.nan, np.nan, np.nan, 1, 1, 1]})
+            rs = df.corr(meth)
+            self.assert_(isnull(rs.ix['A', 'B']))
+            self.assert_(isnull(rs.ix['B', 'A']))
+
     def test_cov(self):
         self.frame['A'][:5] = nan
         self.frame['B'][:10] = nan
