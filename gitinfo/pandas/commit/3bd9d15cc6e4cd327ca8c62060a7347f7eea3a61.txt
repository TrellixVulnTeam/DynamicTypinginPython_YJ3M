commit 3bd9d15cc6e4cd327ca8c62060a7347f7eea3a61
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Aug 17 14:37:34 2012 -0400

    BUG: fix DatetimeIndex.isin close #1763

diff --git a/RELEASE.rst b/RELEASE.rst
index d0f6eae0b..b713656c5 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -93,6 +93,7 @@ pandas 0.8.2
   - Basic indexing now works on MultiIndex with > 1000000 elements, regression
     from earlier version of pandas (#1757)
   - Handle non-float64 dtypes in fast DataFrame.corr/cov code paths (#1761)
+  - Fix DatetimeIndex.isin to function properly (#1763)
 
 pandas 0.8.1
 ============
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 36bfcca6d..497f7c75c 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -499,6 +499,28 @@ class DatetimeIndex(Int64Index):
         except (KeyError, TypeError):
             return False
 
+    def isin(self, values):
+        """
+        Compute boolean array of whether each index value is found in the
+        passed set of values
+
+        Parameters
+        ----------
+        values : set or sequence of values
+
+        Returns
+        -------
+        is_contained : ndarray (boolean dtype)
+        """
+        if not isinstance(values, DatetimeIndex):
+            try:
+                values = DatetimeIndex(values)
+            except ValueError:
+                return self.asobject.isin(values)
+
+        value_set = set(values.asi8)
+        return lib.ismember(self.asi8, value_set)
+
     def to_datetime(self, dayfirst=False):
         return self.copy()
 
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 558c6e33e..c3c0be38c 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1304,6 +1304,17 @@ class TestDatetimeIndex(unittest.TestCase):
         result = a.append(c)
         self.assert_((result['B'] == dr).all())
 
+    def test_isin(self):
+        index = tm.makeDateIndex(4)
+        result = index.isin(index)
+        self.assert_(result.all())
+
+        result = index.isin(list(index))
+        self.assert_(result.all())
+
+        assert_almost_equal(index.isin([index[2], 5]),
+                            [False, False, True, False])
+
 class TestLegacySupport(unittest.TestCase):
 
     @classmethod
