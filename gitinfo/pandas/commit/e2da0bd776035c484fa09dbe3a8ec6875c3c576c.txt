commit e2da0bd776035c484fa09dbe3a8ec6875c3c576c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed May 9 13:36:28 2012 -0400

    BLD: more int32->int64 on 32-bit fixes

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index d7db4b288..9b9e0c62d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3651,8 +3651,8 @@ class DataFrame(NDFrame):
             level = self.index._get_level_number(level)
 
         level_index = frame.index.levels[level]
-        counts = lib.count_level_2d(mask, frame.index.labels[level],
-                                    len(level_index))
+        labels = com._ensure_int64(frame.index.labels[level])
+        counts = lib.count_level_2d(mask, labels, len(level_index))
 
         result = DataFrame(counts, index=level_index,
                            columns=frame.columns)
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index fc81102ea..4b4d7a858 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -709,7 +709,7 @@ class Grouper(object):
         dummy = obj[:0].copy()
         indexer = lib.groupsort_indexer(group_index, ngroups)[0]
         obj = obj.take(indexer)
-        group_index = group_index.take(indexer)
+        group_index = com.ndtake(group_index, indexer)
         grouper = lib.SeriesGrouper(obj, func, group_index, ngroups,
                                     dummy)
         result, counts = grouper.get_result()
@@ -986,7 +986,8 @@ class Grouping(object):
     def counts(self):
         if self._counts is None:
             if self._was_factor:
-                self._counts = lib.group_count(self.labels, self.ngroups)
+                self._counts = lib.group_count(com._ensure_int64(self.labels),
+                                               self.ngroups)
             else:
                 self._make_labels()
         return self._counts
@@ -1397,7 +1398,7 @@ class NDFrameGroupBy(GroupBy):
                 zipped = zip(result.index.levels, result.index.labels,
                              result.index.names)
                 for i, (lev, lab, name) in enumerate(zipped):
-                    result.insert(i, name, lev.values.take(lab))
+                    result.insert(i, name, com.ndtake(lev.values, lab))
                 result = result.consolidate()
             else:
                 values = result.index.values
@@ -1812,7 +1813,7 @@ def generate_groups(data, group_index, ngroups, axis=0, factory=lambda x: x):
     group_index = com._ensure_int64(group_index)
 
     indexer = lib.groupsort_indexer(group_index, ngroups)[0]
-    group_index = group_index.take(indexer)
+    group_index = com.ndtake(group_index, indexer)
 
     if isinstance(data, BlockManager):
         # this is sort of wasteful but...
@@ -1984,11 +1985,11 @@ def _reorder_by_uniques(uniques, labels):
     mask = labels < 0
 
     # move labels to right locations (ie, unsort ascending labels)
-    labels = reverse_indexer.take(labels)
+    labels = com.ndtake(reverse_indexer, labels)
     np.putmask(labels, mask, -1)
 
     # sort observed ids
-    uniques = uniques.take(sorter)
+    uniques = com.ndtake(uniques, sorter)
 
     return uniques, labels
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 81e95a46c..c0de6aa21 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2026,6 +2026,7 @@ copy : boolean, default False
         -------
         taken : Series
         """
+        indices = com._ensure_platform_int(indices)
         new_index = self.index.take(indices)
         new_values = self.values.take(indices)
         return Series(new_values, index=new_index, name=self.name)
diff --git a/pandas/sparse/frame.py b/pandas/sparse/frame.py
index 31726e093..9291d9076 100644
--- a/pandas/sparse/frame.py
+++ b/pandas/sparse/frame.py
@@ -582,6 +582,7 @@ class SparseDataFrame(DataFrame):
         -------
         taken : SparseDataFrame
         """
+        indices = com._ensure_platform_int(indices)
         new_values = self.values.take(indices, axis=axis)
         if axis == 0:
             new_columns = self.columns
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index cbfe41474..42bc2a8fd 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -1117,7 +1117,7 @@ cdef inline int m8_weekday(int64_t val):
     ts = convert_to_tsobject(val)
     return ts_dayofweek(ts)
 
-cdef int64_t DAY_US = 24 * 60 * 60 * 1000000
+cdef int64_t DAY_US = 86400000000LL
 
 def values_at_time(ndarray[int64_t] stamps, int64_t time):
     cdef:
diff --git a/pandas/src/hashtable.pyx b/pandas/src/hashtable.pyx
index 1f604eb4b..d6a5b3a44 100644
--- a/pandas/src/hashtable.pyx
+++ b/pandas/src/hashtable.pyx
@@ -792,8 +792,11 @@ cdef class Factorizer:
 
         # sort on
         if sort:
+            if labels.dtype != np.int_:
+                labels = labels.astype(np.int_)
+
             sorter = list_to_object_array(self.uniques).argsort()
-            reverse_indexer = np.empty(len(sorter), dtype=np.int64)
+            reverse_indexer = np.empty(len(sorter), dtype=np.int_)
             reverse_indexer.put(sorter, np.arange(len(sorter)))
 
             labels = reverse_indexer.take(labels)
@@ -826,8 +829,11 @@ cdef class Int64Factorizer:
 
         # sort on
         if sort:
+            if labels.dtype != np.int_:
+                labels = labels.astype(np.int_)
+
             sorter = list_to_object_array(self.uniques).argsort()
-            reverse_indexer = np.empty(len(sorter), dtype=np.int64)
+            reverse_indexer = np.empty(len(sorter), dtype=np.int_)
             reverse_indexer.put(sorter, np.arange(len(sorter)))
 
             labels = reverse_indexer.take(labels)
@@ -893,8 +899,11 @@ cdef class DictFactorizer:
 
         # sort on
         if sort:
+            if labels.dtype != np.int_:
+                labels = labels.astype(np.int_)
+
             sorter = list_to_object_array(self.uniques).argsort()
-            reverse_indexer = np.empty(len(sorter), dtype=np.int64)
+            reverse_indexer = np.empty(len(sorter), dtype=np.int_)
             reverse_indexer.put(sorter, np.arange(len(sorter)))
 
             labels = reverse_indexer.take(labels)
diff --git a/pandas/src/join.pyx b/pandas/src/join.pyx
index 4dbda905b..502635012 100644
--- a/pandas/src/join.pyx
+++ b/pandas/src/join.pyx
@@ -54,7 +54,8 @@ def left_outer_join(ndarray[int64_t] left, ndarray[int64_t] right,
                     Py_ssize_t max_groups, sort=True):
     cdef:
         Py_ssize_t i, j, k, count = 0
-        ndarray[int64_t] left_count, right_count, left_sorter, right_sorter
+        ndarray[int64_t] left_count, right_count
+        ndarray left_sorter, right_sorter, rev
         ndarray[int64_t] left_indexer, right_indexer
         int64_t lc, rc
 
@@ -105,7 +106,10 @@ def left_outer_join(ndarray[int64_t] left, ndarray[int64_t] right,
     right_indexer = _get_result_indexer(right_sorter, right_indexer)
 
     if not sort:
-        rev = np.empty(len(left), dtype=np.int64)
+        if left_sorter.dtype != np.int_:
+            left_sorter = left_sorter.astype(np.int_)
+
+        rev = np.empty(len(left), dtype=np.int_)
         rev.put(left_sorter, np.arange(len(left)))
 
         right_indexer = right_indexer.take(rev)
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 0ce69fd9e..96dc5f1c2 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -614,6 +614,7 @@ class DatetimeIndex(Int64Index):
         maybe_slice = lib.maybe_indices_to_slice(com._ensure_int64(indices))
         if isinstance(maybe_slice, slice):
             return self[maybe_slice]
+        indices = com._ensure_platform_int(indices)
         taken = self.values.take(indices, axis=axis)
         return DatetimeIndex(taken, tz=self.tz, name=self.name)
 
diff --git a/pandas/tseries/plotting.py b/pandas/tseries/plotting.py
index eefdde30f..55c4a38ba 100644
--- a/pandas/tseries/plotting.py
+++ b/pandas/tseries/plotting.py
@@ -329,8 +329,8 @@ def _daily_finder(vmin, vmax, freq):
     dates_ = PeriodIndex(start=vmin, end=vmax, freq=freq)
     # Initialize the output
     info = np.zeros(span,
-                    dtype=[('val', int), ('maj', bool), ('min', bool),
-                           ('fmt', '|S20')])
+                    dtype=[('val', np.int64), ('maj', bool),
+                           ('min', bool), ('fmt', '|S20')])
     info['val'][:] = dates_.values
     info['fmt'][:] = ''
     info['maj'][[0, -1]] = True
