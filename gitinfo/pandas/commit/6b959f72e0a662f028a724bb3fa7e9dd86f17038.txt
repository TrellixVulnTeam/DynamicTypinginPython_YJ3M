commit 6b959f72e0a662f028a724bb3fa7e9dd86f17038
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jul 6 18:44:13 2011 -0400

    BUG: in as_matrix with subset of columns with single-block

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 0f2dbd208..8a2c73dc7 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -822,6 +822,9 @@ class DataFrame(PandasGeneric):
         Series/TimeSeries will be conformed to the DataFrame's index to
         ensure homogeneity.
         """
+        # Need to make sure new columns (which go into the BlockManager as new
+        # blocks) are always copied
+
         if hasattr(value, '__iter__'):
             if isinstance(value, Series):
                 if value.index.equals(self.index):
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 542f61c57..22ce816a8 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -421,6 +421,8 @@ class BlockManager(object):
             if columns is None or blk.columns.equals(columns):
                 # if not, then just call interleave per below
                 mat = blk.values
+            else:
+                mat = self.reindex_columns(columns).as_matrix()
         else:
             if columns is None:
                 mat = _interleave(self.blocks, self.columns)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 85e519da9..aa006eb9b 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1284,6 +1284,11 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         mat = self.mixed_frame.as_matrix(['foo', 'A'])
         self.assertEqual(mat[0, 0], 'bar')
 
+        # single block corner case
+        mat = self.frame.as_matrix(['A', 'B'])
+        expected = self.frame.reindex(columns=['A', 'B']).values
+        assert_almost_equal(mat, expected)
+
     def test_values(self):
         pass
 
