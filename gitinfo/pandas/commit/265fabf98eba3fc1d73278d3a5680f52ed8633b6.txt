commit 265fabf98eba3fc1d73278d3a5680f52ed8633b6
Author: jreback <jeff@reback.net>
Date:   Fri Jun 14 08:41:18 2013 -0400

    TST: convered skips on knownfailures to knownfailures (test_pickle/test_stata)

diff --git a/pandas/io/tests/test_pickle.py b/pandas/io/tests/test_pickle.py
index f58ef3c69..a7f0e3d3e 100644
--- a/pandas/io/tests/test_pickle.py
+++ b/pandas/io/tests/test_pickle.py
@@ -8,7 +8,6 @@ import pickle
 import unittest
 import nose
 import os
-import sys
 
 import numpy as np
 import pandas.util.testing as tm
@@ -16,9 +15,8 @@ import pandas as pd
 from pandas import Index
 from pandas.sparse.tests import test_sparse
 from pandas.util import py3compat
-
-if sys.byteorder != 'little':
-    raise nose.SkipTest('system byteorder is not little!')
+from pandas.util.decorators import knownfailureif
+from pandas.util.misc import is_little_endian
 
 class TestPickle(unittest.TestCase):
     _multiprocess_can_split_ = True
@@ -60,6 +58,7 @@ class TestPickle(unittest.TestCase):
                     comparator = getattr(tm,"assert_%s_equal" % typ)
                     comparator(result,expected)
 
+    @knownfailureif(not is_little_endian(), "known failure of test_read_pickles_0_10_1 on non-little endian")
     def test_read_pickles_0_10_1(self):
 
         pth = tm.get_data_path('legacy_pickle/0.10.1')
@@ -67,6 +66,7 @@ class TestPickle(unittest.TestCase):
             vf = os.path.join(pth,f)
             self.compare(vf)
 
+    @knownfailureif(not is_little_endian(), "known failure of test_read_pickles_0_11_0 on non-little endian")
     def test_read_pickles_0_11_0(self):
 
         pth = tm.get_data_path('legacy_pickle/0.11.0')
diff --git a/pandas/io/tests/test_stata.py b/pandas/io/tests/test_stata.py
index 54875e62d..794d303a6 100644
--- a/pandas/io/tests/test_stata.py
+++ b/pandas/io/tests/test_stata.py
@@ -14,10 +14,8 @@ from pandas.io.parsers import read_csv
 from pandas.io.stata import read_stata, StataReader, StataWriter
 import pandas.util.testing as tm
 from pandas.util.testing import ensure_clean
-
-def _skip_if_not_little(name):
-    if sys.byteorder != 'little':
-        raise nose.SkipTest('system byteorder is not little, skipping %s' % name)
+from pandas.util.decorators import knownfailureif
+from pandas.util.misc import is_little_endian
 
 class StataTests(unittest.TestCase):
 
@@ -131,8 +129,8 @@ class StataTests(unittest.TestCase):
 
         tm.assert_frame_equal(parsed, expected)
 
+    @knownfailureif(not is_little_endian(), "known failure of test_write_dta5 on non-little endian")
     def test_write_dta5(self):
-        _skip_if_not_little('write_dta5')
         original = DataFrame([(np.nan, np.nan, np.nan, np.nan, np.nan)],
                              columns=['float_miss', 'double_miss', 'byte_miss', 'int_miss', 'long_miss'])
         original.index.name = 'index'
@@ -142,8 +140,8 @@ class StataTests(unittest.TestCase):
             written_and_read_again = self.read_dta(path)
             tm.assert_frame_equal(written_and_read_again.set_index('index'), original)
 
+    @knownfailureif(not is_little_endian(), "known failure of test_write_dta6 on non-little endian")
     def test_write_dta6(self):
-        _skip_if_not_little('write_dta6')
         original = self.read_csv(self.csv3)
         original.index.name = 'index'
 
diff --git a/pandas/util/misc.py b/pandas/util/misc.py
index 8372ba56d..15492cde5 100644
--- a/pandas/util/misc.py
+++ b/pandas/util/misc.py
@@ -1,3 +1,10 @@
+""" various miscellaneous utilities """
+
+def is_little_endian():
+    """ am I little endian """
+    import sys
+    return sys.byteorder == 'little'
+
 def exclusive(*args):
     count = sum([arg is not None for arg in args])
     return count == 1
