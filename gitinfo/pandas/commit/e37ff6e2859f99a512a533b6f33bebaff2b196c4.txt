commit e37ff6e2859f99a512a533b6f33bebaff2b196c4
Author: Valentin Iovene <valentin@too.gy>
Date:   Fri Jun 26 01:12:59 2020 +0200

    BUG: conversion of empty DataFrame to SparseDtype (#33113) (#33118)

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index d836db480..3cd2beaa9 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -1101,6 +1101,7 @@ Sparse
 - Bug in :meth:`Series.sum` with ``SparseArray`` raises ``TypeError`` (:issue:`25777`)
 - Bug where :class:`DataFrame` containing :class:`SparseArray` filled with ``NaN`` when indexed by a list-like (:issue:`27781`, :issue:`29563`)
 - The repr of :class:`SparseDtype` now includes the repr of its ``fill_value`` attribute. Previously it used ``fill_value``'s  string representation (:issue:`34352`)
+- Bug where empty :class:`DataFrame` could not be cast to :class:`SparseDtype` (:issue:`33113`)
 
 ExtensionArray
 ^^^^^^^^^^^^^^
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 307bf8406..4e0247bfc 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -5537,6 +5537,10 @@ class NDFrame(PandasObject, SelectionMixin, indexing.IndexingMixin):
             new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors,)
             return self._constructor(new_data).__finalize__(self, method="astype")
 
+        # GH 33113: handle empty frame or series
+        if not results:
+            return self.copy()
+
         # GH 19920: retain column metadata after concat
         result = pd.concat(results, axis=1, copy=False)
         result.columns = self.columns
diff --git a/pandas/tests/extension/base/casting.py b/pandas/tests/extension/base/casting.py
index 567a62a8b..3aaf040a4 100644
--- a/pandas/tests/extension/base/casting.py
+++ b/pandas/tests/extension/base/casting.py
@@ -50,3 +50,9 @@ class BaseCastingTests(BaseExtensionTests):
 
         result = pd.Series(data).to_numpy()
         self.assert_equal(result, expected)
+
+    def test_astype_empty_dataframe(self, dtype):
+        # https://github.com/pandas-dev/pandas/issues/33113
+        df = pd.DataFrame()
+        result = df.astype(dtype)
+        self.assert_frame_equal(result, df)
diff --git a/pandas/tests/frame/methods/test_astype.py b/pandas/tests/frame/methods/test_astype.py
index b06c3d72a..b0fd0496e 100644
--- a/pandas/tests/frame/methods/test_astype.py
+++ b/pandas/tests/frame/methods/test_astype.py
@@ -557,3 +557,11 @@ class TestAstype:
             assert (
                 "2 2013-01-03 2013-01-03 00:00:00-05:00 2013-01-03 00:00:00+01:00"
             ) in result
+
+    def test_astype_empty_dtype_dict(self):
+        # issue mentioned further down in the following issue's thread
+        # https://github.com/pandas-dev/pandas/issues/33113
+        df = DataFrame()
+        result = df.astype(dict())
+        tm.assert_frame_equal(result, df)
+        assert result is not df
