commit 0d763a75c3ce8e1e00978875c9df5dff2a2c4e8f
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Oct 9 15:29:57 2011 -0400

    TST: skip test on sparse. release notes

diff --git a/RELEASE.rst b/RELEASE.rst
index a058ee299..204701fd6 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -11,15 +11,17 @@ pandas 0.4.3
 **Release date:** not yet released
 
 This is largely a bugfix release from 0.4.2 but also includes a handful of new
-and enhanced features. Also, pandas can now be installed and used on Python 3!
+and enhanced features. Also, pandas can now be installed and used on Python 3
+(thanks Thomas Kluyver!).
 
 **New features / modules**
 
   - Python 3 support using 2to3 (PR #200, Thomas Kluyver)
+  - Add `name` attribute to `Series` and added relevant logic and tests. Name
+    now prints as part of `Series.__repr__`
   - Add `name` attribute to standard Index so that stacking / unstacking does
     not discard names and so that indexed DataFrame objects can be reliably
     round-tripped to flat files, pickle, HDF5, etc.
-  - Add `name` attribute to `Series` and added relevant logic and tests
   - Add `isnull` and `notnull` as instance methods on Series (PR #209, GH #203)
 
 **Improvements to existing features**
@@ -30,6 +32,7 @@ and enhanced features. Also, pandas can now be installed and used on Python 3!
   - Altered binary operations on differently-indexed SparseSeries objects to use
     the integer-based (dense) alignment logic which is faster with a larger
     number of blocks (GH #205)
+  - Refactored `Series.__repr__` to be a bit more clean and consistent
 
 **API Changes**
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index de4a98656..f6819421a 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -824,13 +824,13 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         self.assertEqual(len(result), ts.count())
 
         common.assert_dict_equal(result, ts, compare_keys=False)
-    
+
     def test_isnull(self):
         ser = Series([0,5.4,3,nan,-0.001])
         assert_series_equal(ser.isnull(), Series([False,False,False,True,False]))
         ser = Series(["hi","",nan])
         assert_series_equal(ser.isnull(), Series([False,False,True]))
-    
+
     def test_notnull(self):
         ser = Series([0,5.4,3,nan,-0.001])
         assert_series_equal(ser.notnull(), Series([True,True,True,False,True]))
@@ -1292,6 +1292,14 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         expected = self.ts[self.ts.weekday == 2]
         assert_series_equal(result, expected)
 
+#----------------------------------------------------------------------
+# Misc not safe for sparse
+
+    def test_dropna_preserve_name(self):
+        self.ts[:5] = np.nan
+        result = self.ts.dropna()
+        self.assertEquals(result.name, self.ts.name)
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
