commit ca3272d50d860ec7062e8fb73f0b4a5ad3372229
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Jun 30 14:05:51 2020 -0700

    CLN: type get_resolution tz as tzinfo (#35065)

diff --git a/pandas/_libs/tslibs/resolution.pyx b/pandas/_libs/tslibs/resolution.pyx
index 4dbecc76a..d5f10374d 100644
--- a/pandas/_libs/tslibs/resolution.pyx
+++ b/pandas/_libs/tslibs/resolution.pyx
@@ -1,3 +1,4 @@
+from cpython.datetime cimport tzinfo
 
 import numpy as np
 from numpy cimport ndarray, int64_t, int32_t
@@ -8,7 +9,7 @@ from pandas._libs.tslibs.dtypes import Resolution
 from pandas._libs.tslibs.np_datetime cimport (
     npy_datetimestruct, dt64_to_dtstruct)
 from pandas._libs.tslibs.timezones cimport (
-    is_utc, is_tzlocal, maybe_get_tz, get_dst_info)
+    is_utc, is_tzlocal, get_dst_info)
 from pandas._libs.tslibs.ccalendar cimport get_days_in_month
 from pandas._libs.tslibs.tzconversion cimport tz_convert_utc_to_tzlocal
 
@@ -33,7 +34,7 @@ cdef:
 # ----------------------------------------------------------------------
 
 
-def get_resolution(const int64_t[:] stamps, tz=None):
+def get_resolution(const int64_t[:] stamps, tzinfo tz=None):
     cdef:
         Py_ssize_t i, n = len(stamps)
         npy_datetimestruct dts
@@ -43,9 +44,6 @@ def get_resolution(const int64_t[:] stamps, tz=None):
         Py_ssize_t[:] pos
         int64_t local_val, delta
 
-    if tz is not None:
-        tz = maybe_get_tz(tz)
-
     if is_utc(tz) or tz is None:
         for i in range(n):
             if stamps[i] == NPY_NAT:
diff --git a/pandas/_libs/tslibs/tzconversion.pyx b/pandas/_libs/tslibs/tzconversion.pyx
index 6e6b106b8..925b3c561 100644
--- a/pandas/_libs/tslibs/tzconversion.pyx
+++ b/pandas/_libs/tslibs/tzconversion.pyx
@@ -21,7 +21,7 @@ from pandas._libs.tslibs.nattype cimport NPY_NAT
 from pandas._libs.tslibs.np_datetime cimport (
     npy_datetimestruct, dt64_to_dtstruct)
 from pandas._libs.tslibs.timezones cimport (
-    get_dst_info, is_tzlocal, is_utc, get_timezone, get_utcoffset)
+    get_dst_info, is_tzlocal, is_utc, get_timezone)
 
 
 # TODO: cdef scalar version to call from convert_str_to_tsobject
