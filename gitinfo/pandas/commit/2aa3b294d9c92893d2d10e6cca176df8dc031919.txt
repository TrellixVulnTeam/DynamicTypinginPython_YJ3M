commit 2aa3b294d9c92893d2d10e6cca176df8dc031919
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jan 9 17:40:07 2012 -0500

    DOC: add docstring re: #477

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 43e08a32e..80515a474 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2419,7 +2419,9 @@ class DataFrame(NDFrame):
 
     def unstack(self, level=-1):
         """
-        "Unstack" level from MultiLevel index to produce reshaped DataFrame
+        "Unstack" level from MultiLevel index to produce reshaped DataFrame. If
+        the index is not a MultiIndex, the output will be a Series (the
+        analogue of stack when the columns are not a MultiIndex)
 
         Parameters
         ----------
@@ -2439,14 +2441,21 @@ class DataFrame(NDFrame):
         one  1.  2.
         two  3.  4.
 
-        >>> s.unstack(level=0)
+        >>> df = s.unstack(level=0)
+        >>> df
            one  two
         a  1.   2.
         b  3.   4.
 
+        >>> df.unstack()
+        one  a  1.
+             b  3.
+        two  a  2.
+             b  4.
+
         Returns
         -------
-        unstacked : DataFrame
+        unstacked : DataFrame or Series
         """
         from pandas.core.reshape import unstack
         if isinstance(level, (tuple, list)):
diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 6fef3a5ee..1500f810d 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -286,7 +286,7 @@ def unstack(obj, level):
         if isinstance(obj.index, MultiIndex):
             return _unstack_frame(obj, level)
         else:
-            return obj.transpose().stack(dropna=False)
+            return obj.T.stack(dropna=False)
     else:
         unstacker = _Unstacker(obj.values, obj.index, level=level)
         return unstacker.get_result()
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 2bfe2ec5b..e62699ade 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3904,8 +3904,9 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
     def test_unstack_to_series(self):
         # check reversibility
         data = self.frame.unstack()
+
         self.assertTrue(isinstance(data, Series))
-        undo = data.unstack().transpose()
+        undo = data.unstack().T
         assert_frame_equal(undo, self.frame)
 
         # check NA handling
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 01155a0e1..a79ced908 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -502,6 +502,7 @@ class TestMultiLevel(unittest.TestCase):
                         'extra': np.arange(6.)})
 
         result = df.groupby(['state','exp','barcode','v']).apply(len)
+
         unstacked = result.unstack()
         restacked = unstacked.stack()
         assert_series_equal(restacked,
