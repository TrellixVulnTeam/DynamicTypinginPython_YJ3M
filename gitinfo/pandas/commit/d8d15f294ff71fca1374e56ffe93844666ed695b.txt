commit d8d15f294ff71fca1374e56ffe93844666ed695b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Feb 2 17:26:59 2011 -0500

    fixed statsmodels api in ols/unit tests. misc test coverage

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 07380c457..a8b88e16e 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -8,7 +8,7 @@ import pandas.lib.tseries as tseries
 # XXX: HACK for NumPy 1.5.1 to suppress warnings
 try:
     np.seterr(all='ignore')
-except Exception:
+except Exception: # pragma: no cover
     pass
 
 def isnull(input):
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 870aefec9..23dee3d26 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1905,10 +1905,11 @@ class DataFrame(Picklable, Groupable):
         return Series(the_sum, index=axis_labels)
 
     def _get_numeric_columns(self):
-        return [col for col in self.columns if self[col].dtype == np.number]
+        return [col for col in self.cols()
+                if issubclass(self[col].dtype.type, np.number)]
 
     def _get_object_columns(self):
-        return [col for col in self.columns if self[col].dtype == np.object_]
+        return [col for col in self.cols() if self[col].dtype == np.object_]
 
     def cumsum(self, axis=0):
         """
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index 5a2db5346..d82f9089a 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -355,6 +355,11 @@ class TestDataFrame(unittest.TestCase):
         self.frame.head(buffer=buf)
         self.frame.tail(buffer=buf)
 
+    def test_repr_corner(self):
+        # representing infs poses no problems
+        df = DataFrame({'foo' : np.inf * np.empty(10)})
+        foo = repr(df)
+
     def test_toString(self):
         # big mixed
         biggie = self.klass({'A' : randn(1000),
@@ -1451,7 +1456,21 @@ class TestDataFrame(unittest.TestCase):
         double = self.frame.clip(upper=median, lower=median)
         self.assert_(not (double.values != median).any())
 
+    def test_get_X_columns(self):
+        # numeric and object columns
+
+        # Booleans get casted to float in DataMatrix, so skip for now
+        df = self.klass({'a' : [1, 2, 3],
+                         # 'b' : [True, False, True],
+                         'c' : ['foo', 'bar', 'baz'],
+                         'd' : [None, None, None],
+                         'e' : [3.14, 0.577, 2.773]})
+
+        self.assertEquals(df._get_numeric_columns(), ['a', 'e'])
+        self.assertEquals(df._get_object_columns(), ['c', 'd'])
+
     def test_statistics(self):
+        # unnecessary?
         sumFrame = self.frame.apply(np.sum)
         for col, series in self.frame.iteritems():
             self.assertEqual(sumFrame[col], series.sum())
@@ -1479,6 +1498,7 @@ class TestDataFrame(unittest.TestCase):
             return x[notnull(x)].sum()
 
         self._check_statistic(self.frame, 'sum', f)
+        self._check_statistic(self.empty, 'sum', f)
 
     def test_sum_object(self):
         values = self.frame.values.astype(int)
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 6ce72f154..400b491a1 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -63,7 +63,10 @@ class TestOLS(BaseTest):
 
     def checkOLS(self, exog, endog, x, y):
 
-        import scikits.statsmodels as sm
+        try:
+            import scikits.statsmodels.api as sm
+        except ImportError:
+            import scikits.statsmodels as sm
 
         reference = sm.OLS(endog, sm.add_constant(exog)).fit()
 
@@ -85,9 +88,12 @@ class TestOLS(BaseTest):
         _check_non_raw_results(result)
 
     def checkMovingOLS(self, window_type, x, y, **kwds):
-        from scikits.statsmodels import tools
+        try:
+            from scikits.statsmodels.tools.tools import rank
+        except ImportError:
+            from scikits.statsmodels.tools import rank
 
-        window = tools.rank(x.values) * 2
+        window = rank(x.values) * 2
 
         moving = ols(y=y, x=x, window_type=window_type,
                      window=window, **kwds)
