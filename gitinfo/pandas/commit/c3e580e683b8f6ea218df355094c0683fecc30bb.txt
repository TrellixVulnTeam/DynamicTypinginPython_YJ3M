commit c3e580e683b8f6ea218df355094c0683fecc30bb
Author: jreback <jeff@reback.net>
Date:   Thu Dec 20 10:10:50 2012 -0500

    DOC: added whatsnew 0.10.1

diff --git a/RELEASE.rst b/RELEASE.rst
index 63accf42c..299fa0b2e 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -22,6 +22,31 @@ Where to get it
 * Binary installers on PyPI: http://pypi.python.org/pypi/pandas
 * Documentation: http://pandas.pydata.org
 
+pandas 0.10.1
+=============
+
+**Release date:** 2013-??-??
+
+**New features**
+
+**Improvements to existing features**
+
+  - ``HDFStore``
+    - enables storing of multi-index dataframes
+    - support data column indexing and selection
+    - support write chunking to reduce memory footprint, via ``chunksize`` keywork to append
+    - support automagic indexing via ``index`` keyworkd to append
+    - support ``expectedrows`` keyword in append to inform ``PyTables`` about the expected tablesize
+    - support ``start`` and ``stop`` keywords in select to limit the row selection space
+
+**Bug fixes**
+
+  - ``HDFStore``
+    - correctly handle ``nan`` elements in string columns; serialize via the ``nan_rep`` keyword to append
+    - raise correctly on non-implemented column types (unicode/datetime64/date)
+    - handle correctly ``Term`` passed types (e.g. ``index<1000``, when index is ``Int64``)
+
+
 pandas 0.10.0
 =============
 
diff --git a/doc/source/v0.10.1.txt b/doc/source/v0.10.1.txt
new file mode 100644
index 000000000..6e6b2f236
--- /dev/null
+++ b/doc/source/v0.10.1.txt
@@ -0,0 +1,88 @@
+.. _whatsnew_0101:
+
+v0.10.1 (January ??, 2013)
+---------------------------
+
+This is a minor release from 0.10.0 and includes many new features and
+enhancements along with a large number of bug fixes. There are also a number of
+important API changes that long-time pandas users should pay close attention
+to.
+
+API changes
+~~~~~~~~~~~
+
+New features
+~~~~~~~~~~~~
+
+HDFStore
+~~~~~~~~
+
+.. ipython:: python
+   :suppress:
+   :okexcept:
+
+   os.remove('store.h5')
+
+You can designate (and index) certain columns that you want to be able to perform queries on a table.
+
+.. ipython:: python
+
+   store = HDFStore('store.h5')
+   df = DataFrame(randn(8, 3), index=date_range('1/1/2000', periods=8),
+              columns=['A', 'B', 'C'])
+   df['string'] = 'foo'
+   df.ix[4:6,'string'] = np.nan
+   df.ix[7:9,'string'] = 'bar'
+   df['string2'] = 'cool'
+   df
+
+   # on-disk operations
+   store.append('df', df, columns = ['B','C','string','string2'])
+   store.select('df',[ Term('B>0') ])
+
+   # getting creative
+   store.select('df',[ Term('B>0'), Term('C>0'), Term('string=foo') ])
+
+   # this is in-memory version of this type of selection
+   df[(df.B > 0) & (df.C > 0) & (df.string == 'foo')]
+
+
+``HDFStore`` now serializes multi-index dataframes.
+
+.. ipython:: python
+
+        index = MultiIndex(levels=[['foo', 'bar', 'baz', 'qux'],
+                                   ['one', 'two', 'three']],
+                           labels=[[0, 0, 0, 1, 1, 2, 2, 3, 3, 3],
+                                   [0, 1, 2, 0, 1, 1, 2, 0, 1, 2]],
+                           names=['foo', 'bar'])
+        df = DataFrame(np.random.randn(10, 3), index=index,
+                       columns=['A', 'B', 'C'])
+        df
+
+        store.append('mi',df)
+        store.select('mi')
+
+	# the levels are automatically included as data columns
+        store.select('mi', Term('foo=bar'))
+
+.. ipython:: python
+   :suppress:
+
+   store.close()
+   import os
+   os.remove('store.h5')
+
+**Enhancements**
+
+- You can pass ``nan_rep = 'my_nan_rep'`` to append, to change the default nan representation on disk (which converts to/from `np.nan`), this defaults to `nan`.
+- You can pass ``index`` to ``append``. This defaults to ``True``. This will automagically create indicies on the *indexables* and *data columns* of the table
+- You can pass ``chunksize=an integer`` to ``append``, to change the writing chunksize (default is 50000). This will signficantly lower your memory usage on writing.
+- You can pass ``expectedrows=an integer`` to the first ``append``, to set the TOTAL number of expectedrows that ``PyTables`` will expected. This will optimize read/write performance.
+- ``Select`` now supports passing ``start`` and ``stop`` to provide selection space liminting in selection.
+
+
+See the `full release notes
+<https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
+on GitHub for a complete list.
+
diff --git a/doc/source/whatsnew.rst b/doc/source/whatsnew.rst
index 82ed64680..6c125c45a 100644
--- a/doc/source/whatsnew.rst
+++ b/doc/source/whatsnew.rst
@@ -16,6 +16,8 @@ What's New
 
 These are new features and improvements of note in each release.
 
+.. include:: v0.10.1.txt
+
 .. include:: v0.10.0.txt
 
 .. include:: v0.9.1.txt
