commit 022f29be9e0e46f0119c69ba2c140f6753b07548
Author: Chang She <changshe@gmail.com>
Date:   Tue Sep 25 22:39:19 2012 -0400

    ENH: level parameter for Series.reset_index

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 561be9cd9..14c025303 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -794,6 +794,9 @@ copy : boolean, default False
 
         Parameters
         ----------
+        level : int, str, tuple, or list, default None
+            Only remove the given levels from the index. Removes all levels by
+            default
         drop : boolean, default False
             Do not try to insert index into dataframe columns
         name : object, default None
@@ -806,13 +809,21 @@ copy : boolean, default False
         resetted : DataFrame, or Series if drop == True
         """
         if drop:
+            new_index = np.arange(len(self))
+            if level is not None and isinstance(self.index, MultiIndex):
+                if not isinstance(level, (tuple, list)):
+                    level = [level]
+                level = [self.index._get_level_number(lev) for lev in level]
+                if len(level) < len(self.index.levels):
+                    new_index = self.index.droplevel(level)
+
             if inplace:
-                self.index = np.arange(len(self))
+                self.index = new_index
                 # set name if it was passed, otherwise, keep the previous name
                 self.name = name or self.name
                 return self
             else:
-                return Series(self.values.copy(), index=np.arange(len(self)),
+                return Series(self.values.copy(), index=new_index,
                               name=self.name)
         else:
             from pandas.core.frame import DataFrame
@@ -821,7 +832,7 @@ copy : boolean, default False
             else:
                 df = DataFrame({name : self})
 
-            return df.reset_index(drop=drop)
+            return df.reset_index(level=level, drop=drop)
 
     def __repr__(self):
         """Clean string representation of a Series"""
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 88ab1eb81..9474f6061 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -3114,6 +3114,19 @@ class TestSeriesNonUnique(unittest.TestCase):
         s2.reset_index(drop=True, inplace=True)
         assert_series_equal(s, s2)
 
+        #level
+        index = MultiIndex(levels=[['bar'], ['one', 'two', 'three'], [0, 1]],
+                           labels=[[0, 0, 0, 0, 0, 0],
+                                   [0, 1, 2, 0, 1, 2],
+                                   [0, 1, 0, 1, 0, 1]])
+        s = Series(np.random.randn(6), index=index)
+        rs = s.reset_index(level=1)
+        self.assert_(len(rs.columns) == 2)
+
+        rs = s.reset_index(level=[0, 2], drop=True)
+        self.assert_(rs.index.equals(Index(index.get_level_values(1))))
+        self.assert_(isinstance(rs, Series))
+
     def test_timeseries_coercion(self):
         idx = tm.makeDateIndex(10000)
         ser = Series(np.random.randn(len(idx)), idx.astype(object))
