commit 47552ae71708dfce14ff8175c01da8bd52c1f8df
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Dec 22 16:52:46 2011 -0500

    DOC: revert docs lost in rebasing, fix warnings, rst->txt

diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index 694700303..25d489d11 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -146,11 +146,11 @@ the length of the ``groups`` dict, so it is largely just a convenience:
    grouped.groups
    len(grouped)
 
+.. _groupby.multiindex:
+
 GroupBy with MultiIndex
 ~~~~~~~~~~~~~~~~~~~~~~~
 
-.. _groupby.multiindex:
-
 With :ref:`hierarchically-indexed data <indexing.hierarchical>`, it's quite
 natural to group by one of the levels of the hierarchy.
 
@@ -268,12 +268,12 @@ changed by using the ``as_index`` option:
 
    df.groupby('A', as_index=False).sum()
 
-Note that you could use the ``delevel`` DataFrame function to achieve the same
-result as the column names are stored in the resulting ``MultiIndex``:
+Note that you could use the ``reset_index`` DataFrame function to achieve the
+same result as the column names are stored in the resulting ``MultiIndex``:
 
 .. ipython:: python
 
-   df.groupby(['A', 'B']).sum().delevel()
+   df.groupby(['A', 'B']).sum().reset_index()
 
 Applying multiple functions at once
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
diff --git a/doc/source/index.rst b/doc/source/index.rst
index 51a80e2c5..91ec155a9 100755
--- a/doc/source/index.rst
+++ b/doc/source/index.rst
@@ -123,6 +123,5 @@ See the package overview for more detail about what's in the library.
     r_interface
     related
     comparison_with_r
-    benchmarks
     api
     vbench
diff --git a/doc/source/indexing.rst b/doc/source/indexing.rst
index fa19f836d..79eed7081 100644
--- a/doc/source/indexing.rst
+++ b/doc/source/indexing.rst
@@ -69,6 +69,31 @@ Thus, as per above, we have the most basic indexing using ``[]``:
    s[dates[5]]
    panel['two']
 
+
+.. _indexing.basics.get_value:
+
+Fast scalar value getting and setting
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+Since indexing with ``[]`` must handle a lot of cases (single-label access,
+slicing, boolean indexing, etc.), it has a bit of overhead in order to figure
+out what you're asking for. If you only want to access a scalar value, the
+fastest way is to use the ``get_value`` method, which is implemented on all of
+the data structures:
+
+.. ipython:: python
+
+   s.get_value(dates[5])
+   df.get_value(dates[5], 'A')
+
+There is an analogous ``set_value`` method which has the additional capability
+of enlarging an object. This method *always* returns a reference to the object
+it modified, which in the fast of enlargement, will be a **new object**:
+
+.. ipython:: python
+
+   df.set_value(dates[5], 'E', 7)
+
 Additional Column Access
 ~~~~~~~~~~~~~~~~~~~~~~~~
 
@@ -657,23 +682,6 @@ The ``swaplevel`` function can switch the order of two levels:
    df[:5]
    df[:5].swaplevel(0, 1, axis=0)
 
-The ``delevel`` DataFrame function
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-As a convenience, there is a new function on DataFrame called ``delevel`` which
-takes a ``MultiIndex`` on the rows and turns the levels into columns of the
-DataFrame:
-
-.. ipython:: python
-
-   df
-   df.delevel()
-
-The output is more similar to a SQL table or a record array. The names for the
-columns derived from the ``MultiIndex`` are the ones stored in the ``names``
-attribute. These will get automatically assigned in various places where
-``MultiIndex`` is created, for example :ref:`GroupBy <groupby>`.
-
 Some gory internal details
 ~~~~~~~~~~~~~~~~~~~~~~~~~~
 
@@ -745,6 +753,22 @@ the index in-place (without creating a new object):
    df = data.set_index(['a', 'b'], inplace=True)
    data
 
+Remove / reset the index,  ``reset_index``
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+As a convenience, there is a new function on DataFrame called ``reset_index``
+which transfers the index values into the DataFrame's columns and sets a simple
+integer index. This is the inverse operation to ``set_index``
+
+.. ipython:: python
+
+   df
+   df.reset_index()
+
+The output is more similar to a SQL table or a record array. The names for the
+columns derived from the index are the ones stored in the ``names``
+attribute.
+
 Adding an ad hoc index
 ~~~~~~~~~~~~~~~~~~~~~~
 
diff --git a/doc/source/io.rst b/doc/source/io.rst
index 6382b1001..046c7a404 100644
--- a/doc/source/io.rst
+++ b/doc/source/io.rst
@@ -170,10 +170,10 @@ module.
     print open('tmp2.sv').read()
     read_csv('tmp2.sv')
 
-.. _io.chunking:
-
 .. _Sniffer: http://docs.python.org/library/csv.html#csv.Sniffer
 
+.. _io.chunking:
+
 Iterating through files chunk by chunk
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
diff --git a/doc/source/whatsnew.rst b/doc/source/whatsnew.rst
index 7292ae945..129c6caec 100644
--- a/doc/source/whatsnew.rst
+++ b/doc/source/whatsnew.rst
@@ -16,13 +16,13 @@ What's New
 
 These are new features and improvements of note in each release.
 
-.. include:: whatsnew/v0.6.2.rst
+.. include:: whatsnew/v0.6.2.txt
 
-.. include:: whatsnew/v0.6.1.rst
+.. include:: whatsnew/v0.6.1.txt
 
-.. include:: whatsnew/v0.6.0.rst
+.. include:: whatsnew/v0.6.0.txt
 
-.. include:: whatsnew/v0.5.0.rst
+.. include:: whatsnew/v0.5.0.txt
 
-.. include:: whatsnew/v0.4.x.rst
+.. include:: whatsnew/v0.4.x.txt
 
diff --git a/doc/source/whatsnew/v0.4.x.rst b/doc/source/whatsnew/v0.4.x.txt
similarity index 100%
rename from doc/source/whatsnew/v0.4.x.rst
rename to doc/source/whatsnew/v0.4.x.txt
diff --git a/doc/source/whatsnew/v0.5.0.rst b/doc/source/whatsnew/v0.5.0.txt
similarity index 100%
rename from doc/source/whatsnew/v0.5.0.rst
rename to doc/source/whatsnew/v0.5.0.txt
diff --git a/doc/source/whatsnew/v0.6.0.rst b/doc/source/whatsnew/v0.6.0.txt
similarity index 99%
rename from doc/source/whatsnew/v0.6.0.rst
rename to doc/source/whatsnew/v0.6.0.txt
index 15706414a..dbea1464b 100644
--- a/doc/source/whatsnew/v0.6.0.rst
+++ b/doc/source/whatsnew/v0.6.0.txt
@@ -96,6 +96,7 @@ Performance Enhancements
 .. _GH381: https://github.com/wesm/pandas/issues/381
 .. _GH382: https://github.com/wesm/pandas/issues/382
 .. _GH393: https://github.com/wesm/pandas/issues/393
+.. _PR286: https://github.com/wesm/pandas/pull/286
 .. _PR296: https://github.com/wesm/pandas/pull/296
 .. _PR313: https://github.com/wesm/pandas/pull/313
 .. _PR321: https://github.com/wesm/pandas/pull/321
diff --git a/doc/source/whatsnew/v0.6.1.rst b/doc/source/whatsnew/v0.6.1.txt
similarity index 100%
rename from doc/source/whatsnew/v0.6.1.rst
rename to doc/source/whatsnew/v0.6.1.txt
diff --git a/doc/source/whatsnew/v0.6.2.rst b/doc/source/whatsnew/v0.6.2.txt
similarity index 100%
rename from doc/source/whatsnew/v0.6.2.rst
rename to doc/source/whatsnew/v0.6.2.txt
