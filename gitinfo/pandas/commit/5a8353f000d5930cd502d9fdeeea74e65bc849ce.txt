commit 5a8353f000d5930cd502d9fdeeea74e65bc849ce
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 30 14:39:20 2012 -0500

    BUG: fix some usecols use cases. better error handling

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index 7194ca290..dc74532fb 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -923,13 +923,13 @@ class CParserWrapper(ParserBase):
 
             index = MultiIndex.from_arrays(arrays)
 
+            if self.usecols is not None:
+                names = self._filter_usecols(names)
+
             # rename dict keys
             data = sorted(data.items())
             data = dict((k, v) for k, (i, v) in zip(names, data))
 
-            if self._reader.names is None:
-                names = self._filter_usecols(names)
-
             names, data = self._do_date_conversions(names, data)
 
         else:
@@ -939,7 +939,7 @@ class CParserWrapper(ParserBase):
             # ugh, mutation
             names = list(self.orig_names)
 
-            if self._reader.names is None:
+            if self.usecols is not None:
                 names = self._filter_usecols(names)
 
             # columns as list
@@ -953,7 +953,8 @@ class CParserWrapper(ParserBase):
         return index, names, data
 
     def _filter_usecols(self, names):
-        if self.usecols is not None:
+        # hackish
+        if self.usecols is not None and len(names) != len(self.usecols):
             names = [name for i, name in enumerate(names)
                      if i in self.usecols or name in self.usecols]
         return names
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 2ae655ed7..040bd150e 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -1850,6 +1850,24 @@ a,b,c
         expected.columns = ['foo', 'bar']
         tm.assert_frame_equal(result, expected)
 
+        data = """\
+1,2,3
+4,5,6
+7,8,9
+10,11,12"""
+        result = self.read_csv(StringIO(data), names=['a', 'b', 'c'],
+                               header=None, usecols=[1, 2])
+
+        expected = self.read_csv(StringIO(data), names=['a', 'b', 'c'],
+                                 header=None)
+        expected = expected[['b', 'c']]
+        tm.assert_frame_equal(result, expected)
+
+        # length conflict, passed names and usecols disagree
+        self.assertRaises(ValueError, self.read_csv, StringIO(data),
+                          names=['a', 'b'], usecols=[1], header=None)
+
+
     def test_pure_python_failover(self):
         data = "a,b,c\n1,2,3#ignore this!\n4,5,6#ignorethistoo"
 
diff --git a/pandas/src/parser.pyx b/pandas/src/parser.pyx
index 803a74bcc..81f874e70 100644
--- a/pandas/src/parser.pyx
+++ b/pandas/src/parser.pyx
@@ -556,13 +556,6 @@ cdef class TextReader:
             data_line = self.parser.header + 1
 
             if self.names is not None:
-                if self.has_usecols and len(self.names) != len(self.usecols):
-                    raise CParserError('Number of passed names do not match'
-                                       ' usecols length.')
-                # elif not self.has_usecols:
-                #     lead = len(self.names) < self.table_width
-                #     self.leading_cols = lead
-
                 header = self.names
 
         elif self.names is not None:
@@ -572,6 +565,11 @@ cdef class TextReader:
 
             header = self.names
             data_line = 0
+
+            if self.parser.lines < 1:
+                field_count = len(header)
+            else:
+                field_count = self.parser.line_fields[data_line]
         else:
             # No header passed nor to be found in the file
             if self.parser.lines < 1:
@@ -595,7 +593,10 @@ cdef class TextReader:
             self.leading_cols = field_count - passed_count
         else:
             # TODO: some better check here
-            pass
+            # field_count = len(header)
+            n = len(header)
+            if n != field_count and n != len(self.usecols):
+                raise ValueError('Passed header names mismatches usecols')
 
         return header, field_count
 
