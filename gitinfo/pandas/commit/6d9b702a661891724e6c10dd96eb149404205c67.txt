commit 6d9b702a661891724e6c10dd96eb149404205c67
Author: Gregory Rome <gwrome@gmail.com>
Date:   Wed Apr 10 08:00:41 2019 -0500

    #25942 Added ArrayLike and Dtype to pandas._typing (#25943)

diff --git a/pandas/_typing.py b/pandas/_typing.py
index 5225be33d..dc15a44b6 100644
--- a/pandas/_typing.py
+++ b/pandas/_typing.py
@@ -1,4 +1,11 @@
 from pathlib import Path
 from typing import IO, AnyStr, Union
 
+import numpy as np
+
+from pandas.core.dtypes.dtypes import ExtensionDtype
+from pandas.core.dtypes.generic import ABCExtensionArray
+
+ArrayLike = Union[ABCExtensionArray, np.ndarray]
+Dtype = Union[str, np.dtype, ExtensionDtype]
 FilePathOrBuffer = Union[str, Path, IO[AnyStr]]
diff --git a/pandas/core/arrays/base.py b/pandas/core/arrays/base.py
index 44662ce83..846eb442e 100644
--- a/pandas/core/arrays/base.py
+++ b/pandas/core/arrays/base.py
@@ -21,6 +21,7 @@ from pandas.core.dtypes.generic import (
     ABCExtensionArray, ABCIndexClass, ABCSeries)
 from pandas.core.dtypes.missing import isna
 
+from pandas._typing import ArrayLike
 from pandas.core import ops
 
 _not_implemented_message = "{} does not implement {}."
@@ -338,7 +339,7 @@ class ExtensionArray(object):
         """
         return np.array(self, dtype=dtype, copy=copy)
 
-    def isna(self) -> Union[ABCExtensionArray, np.ndarray]:
+    def isna(self) -> ArrayLike:
         """
         A 1-D array indicating if each value is missing.
 
diff --git a/pandas/core/arrays/sparse.py b/pandas/core/arrays/sparse.py
index 288035d82..1184cf1ee 100644
--- a/pandas/core/arrays/sparse.py
+++ b/pandas/core/arrays/sparse.py
@@ -5,7 +5,7 @@ from collections import abc
 import numbers
 import operator
 import re
-from typing import Any, Callable, Type, Union
+from typing import Any, Callable
 import warnings
 
 import numpy as np
@@ -31,6 +31,7 @@ from pandas.core.dtypes.generic import (
     ABCIndexClass, ABCSeries, ABCSparseArray, ABCSparseSeries)
 from pandas.core.dtypes.missing import isna, na_value_for_dtype, notna
 
+from pandas._typing import Dtype
 from pandas.core.accessor import PandasDelegate, delegate_names
 import pandas.core.algorithms as algos
 from pandas.core.arrays import ExtensionArray, ExtensionOpsMixin
@@ -80,7 +81,7 @@ class SparseDtype(ExtensionDtype):
 
     def __init__(
             self,
-            dtype: Union[str, np.dtype, ExtensionDtype, Type] = np.float64,
+            dtype: Dtype = np.float64,
             fill_value: Any = None
     ) -> None:
         from pandas.core.dtypes.missing import na_value_for_dtype
