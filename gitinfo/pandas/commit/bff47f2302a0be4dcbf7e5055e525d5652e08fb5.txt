commit bff47f2302a0be4dcbf7e5055e525d5652e08fb5
Author: gfyoung <gfyoung17@gmail.com>
Date:   Mon Mar 20 15:47:48 2017 -0400

    MAINT: Remove Long and WidePanel (#15748)
    
    Deprecated since 0.17.0.
    
    xref gh-10892

diff --git a/asv_bench/benchmarks/pandas_vb_common.py b/asv_bench/benchmarks/pandas_vb_common.py
index 56ccc94c4..a7e530e7f 100644
--- a/asv_bench/benchmarks/pandas_vb_common.py
+++ b/asv_bench/benchmarks/pandas_vb_common.py
@@ -25,11 +25,6 @@ for imp in ['pandas_tseries', 'pandas.lib', 'pandas._libs.lib']:
     except:
         pass
 
-try:
-    Panel = Panel
-except Exception:
-    Panel = WidePanel
-
 # didn't add to namespace until later
 try:
     from pandas.core.index import MultiIndex
diff --git a/bench/bench_join_panel.py b/bench/bench_join_panel.py
index f3c3f8ba1..113b317dd 100644
--- a/bench/bench_join_panel.py
+++ b/bench/bench_join_panel.py
@@ -45,8 +45,8 @@ def create_panels_append(cls, panels):
         return p
 
 
-# does the job but inefficient (better to handle like you read a table in
-# pytables...e.g create a LongPanel then convert to Wide)
+# Does the job but inefficient. It is better to handle
+# this like you read a table in pytables.
 def create_panels_join(cls, panels):
         """ given an array of panels's, create a single panel """
         panels = [a for a in panels if a is not None]
diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 98407aacb..ebdd4060f 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -772,6 +772,7 @@ Removal of prior version deprecations/changes
 - The ``Categorical`` constructor has dropped the ``name`` parameter (:issue:`10632`)
 - The ``take_last`` parameter has been dropped from ``duplicated()``, ``drop_duplicates()``, ``nlargest()``, and ``nsmallest()`` methods (:issue:`10236`, :issue:`10792`, :issue:`10920`)
 - ``Series``, ``Index``, and ``DataFrame`` have dropped the ``sort`` and ``order`` methods (:issue:`10726`)
+- The ``LongPanel`` and ``WidePanel`` classes have been removed (:issue:`10892`)
 
 .. _whatsnew_0200.performance:
 
diff --git a/pandas/core/api.py b/pandas/core/api.py
index 65253dedb..5018de39c 100644
--- a/pandas/core/api.py
+++ b/pandas/core/api.py
@@ -15,7 +15,7 @@ from pandas.core.index import (Index, CategoricalIndex, Int64Index,
 
 from pandas.core.series import Series
 from pandas.core.frame import DataFrame
-from pandas.core.panel import Panel, WidePanel
+from pandas.core.panel import Panel
 from pandas.core.panel4d import Panel4D
 from pandas.core.reshape import (pivot_simple as pivot, get_dummies,
                                  lreshape, wide_to_long)
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 4a6c6cf29..5c7b66a2d 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -4,8 +4,6 @@ Contains data structures designed for manipulating panel (3-dimensional) data
 # pylint: disable=E1103,W0231,W0212,W0621
 from __future__ import division
 
-import warnings
-
 import numpy as np
 
 from pandas.types.cast import (_infer_dtype_from_scalar,
@@ -1556,24 +1554,3 @@ Panel._setup_axes(axes=['items', 'major_axis', 'minor_axis'], info_axis=0,
 ops.add_special_arithmetic_methods(Panel, **ops.panel_special_funcs)
 Panel._add_aggregate_operations()
 Panel._add_numeric_operations()
-
-
-# legacy
-class WidePanel(Panel):
-
-    def __init__(self, *args, **kwargs):
-        # deprecation, #10892
-        warnings.warn("WidePanel is deprecated. Please use Panel",
-                      FutureWarning, stacklevel=2)
-
-        super(WidePanel, self).__init__(*args, **kwargs)
-
-
-class LongPanel(DataFrame):
-
-    def __init__(self, *args, **kwargs):
-        # deprecation, #10892
-        warnings.warn("LongPanel is deprecated. Please use DataFrame",
-                      FutureWarning, stacklevel=2)
-
-        super(LongPanel, self).__init__(*args, **kwargs)
diff --git a/pandas/tests/api/test_api.py b/pandas/tests/api/test_api.py
index 73222c246..2c7dcf250 100644
--- a/pandas/tests/api/test_api.py
+++ b/pandas/tests/api/test_api.py
@@ -54,8 +54,7 @@ class TestPDApi(Base, tm.TestCase):
                'TimedeltaIndex', 'Timestamp']
 
     # these are already deprecated; awaiting removal
-    deprecated_classes = ['WidePanel', 'Panel4D',
-                          'SparseList', 'Expr', 'Term']
+    deprecated_classes = ['Panel4D', 'SparseList', 'Expr', 'Term']
 
     # these should be deprecated in the future
     deprecated_classes_in_future = ['Panel']
diff --git a/pandas/tests/io/test_pytables.py b/pandas/tests/io/test_pytables.py
index 40866b870..324160d5b 100644
--- a/pandas/tests/io/test_pytables.py
+++ b/pandas/tests/io/test_pytables.py
@@ -3017,9 +3017,6 @@ class TestHDFStore(Base, tm.TestCase):
         # empty
         # self._check_roundtrip(wp.to_frame()[:0], _check)
 
-    def test_longpanel(self):
-        pass
-
     def test_overwrite_node(self):
 
         with ensure_clean_store(self.path) as store:
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index ab0322abb..13e16f3b9 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -178,10 +178,6 @@ class SafeForLongAndSparse(object):
 
 class SafeForSparse(object):
 
-    @classmethod
-    def assert_panel_equal(cls, x, y):
-        assert_panel_equal(x, y)
-
     def test_get_axis(self):
         assert (self.panel._get_axis(0) is self.panel.items)
         assert (self.panel._get_axis(1) is self.panel.major_axis)
@@ -346,10 +342,10 @@ class SafeForSparse(object):
 
     def test_combinePanel(self):
         result = self.panel.add(self.panel)
-        self.assert_panel_equal(result, self.panel * 2)
+        assert_panel_equal(result, self.panel * 2)
 
     def test_neg(self):
-        self.assert_panel_equal(-self.panel, self.panel * -1)
+        assert_panel_equal(-self.panel, self.panel * -1)
 
     # issue 7692
     def test_raise_when_not_implemented(self):
@@ -369,22 +365,22 @@ class SafeForSparse(object):
         # select items
         result = p.select(lambda x: x in ('ItemA', 'ItemC'), axis='items')
         expected = p.reindex(items=['ItemA', 'ItemC'])
-        self.assert_panel_equal(result, expected)
+        assert_panel_equal(result, expected)
 
         # select major_axis
         result = p.select(lambda x: x >= datetime(2000, 1, 15), axis='major')
         new_major = p.major_axis[p.major_axis >= datetime(2000, 1, 15)]
         expected = p.reindex(major=new_major)
-        self.assert_panel_equal(result, expected)
+        assert_panel_equal(result, expected)
 
         # select minor_axis
         result = p.select(lambda x: x in ('D', 'A'), axis=2)
         expected = p.reindex(minor=['A', 'D'])
-        self.assert_panel_equal(result, expected)
+        assert_panel_equal(result, expected)
 
         # corner case, empty thing
         result = p.select(lambda x: x in ('foo', ), axis='items')
-        self.assert_panel_equal(result, p.reindex(items=[]))
+        assert_panel_equal(result, p.reindex(items=[]))
 
     def test_get_value(self):
         for item in self.panel.items:
@@ -399,8 +395,8 @@ class SafeForSparse(object):
         result = self.panel.abs()
         result2 = abs(self.panel)
         expected = np.abs(self.panel)
-        self.assert_panel_equal(result, expected)
-        self.assert_panel_equal(result2, expected)
+        assert_panel_equal(result, expected)
+        assert_panel_equal(result2, expected)
 
         df = self.panel['ItemA']
         result = df.abs()
@@ -867,10 +863,6 @@ tm.add_nans(_panel)
 class TestPanel(tm.TestCase, PanelTests, CheckIndexing, SafeForLongAndSparse,
                 SafeForSparse):
 
-    @classmethod
-    def assert_panel_equal(cls, x, y):
-        assert_panel_equal(x, y)
-
     def setUp(self):
         self.panel = _panel.copy()
         self.panel.major_axis.name = None
@@ -1967,7 +1959,7 @@ class TestPanel(tm.TestCase, PanelTests, CheckIndexing, SafeForLongAndSparse,
                          major_axis=pd.date_range('1/1/2000', periods=5),
                          minor_axis=['A', 'B'])
         result = p.round()
-        self.assert_panel_equal(expected, result)
+        assert_panel_equal(expected, result)
 
     def test_numpy_round(self):
         values = [[[-3.2, 2.2], [0, -4.8213], [3.123, 123.12],
@@ -1983,7 +1975,7 @@ class TestPanel(tm.TestCase, PanelTests, CheckIndexing, SafeForLongAndSparse,
                          major_axis=pd.date_range('1/1/2000', periods=5),
                          minor_axis=['A', 'B'])
         result = np.round(p)
-        self.assert_panel_equal(expected, result)
+        assert_panel_equal(expected, result)
 
         msg = "the 'out' parameter is not supported"
         tm.assertRaisesRegexp(ValueError, msg, np.round, p, out=p)
@@ -2270,15 +2262,12 @@ class TestPanel(tm.TestCase, PanelTests, CheckIndexing, SafeForLongAndSparse,
         self.assertRaises(NotImplementedError, self.panel.any, bool_only=True)
 
 
-class TestLongPanel(tm.TestCase):
+class TestPanelFrame(tm.TestCase):
     """
-    LongPanel no longer exists, but...
+    Check that conversions to and from Panel to DataFrame work.
     """
 
     def setUp(self):
-        import warnings
-        warnings.filterwarnings(action='ignore', category=FutureWarning)
-
         panel = tm.makePanel()
         tm.add_nans(panel)
 
diff --git a/vb_suite/pandas_vb_common.py b/vb_suite/pandas_vb_common.py
index bd2e8a1c1..41e43d6ab 100644
--- a/vb_suite/pandas_vb_common.py
+++ b/vb_suite/pandas_vb_common.py
@@ -18,11 +18,6 @@ try:
 except:
     import pandas._libs.lib as lib
 
-try:
-    Panel = WidePanel
-except Exception:
-    pass
-
 # didn't add to namespace until later
 try:
     from pandas.core.index import MultiIndex
