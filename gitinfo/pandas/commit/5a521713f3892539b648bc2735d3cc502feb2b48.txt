commit 5a521713f3892539b648bc2735d3cc502feb2b48
Author: wcwagner <wcw13@my.fsu.edu>
Date:   Mon Jul 18 21:06:40 2016 -0400

    BUG: Add  type check for width parameter in str.pad method GH13598
    
    closes #13598
    
    Author: wcwagner <wcw13@my.fsu.edu>
    
    Closes #13690 from wcwagner/bug/13598 and squashes the following commits:
    
    9669f3f [wcwagner] BUG: "Replaced isinstance with is_integer, and changed test_pad_width to use getattr"
    40a3188 [wcwagner] BUG: "Switched to single test method asserting functions that use pad raise correctly."
    06795db [wcwagner] BUG: "Added tests for width parameter on center, ljust, rjust, zfill."
    468df3a [wcwagner] BUG: Add  type check for width parameter in str.pad method GH13598

diff --git a/doc/source/whatsnew/v0.19.0.txt b/doc/source/whatsnew/v0.19.0.txt
index a69617bfb..99396f6cf 100644
--- a/doc/source/whatsnew/v0.19.0.txt
+++ b/doc/source/whatsnew/v0.19.0.txt
@@ -583,7 +583,7 @@ Bug Fixes
 - Bug in ``pd.read_csv()`` with ``engine=='c'`` in which null ``quotechar`` was not accepted even though ``quoting`` was specified as ``None`` (:issue:`13411`)
 - Bug in ``pd.read_csv()`` with ``engine=='c'`` in which fields were not properly cast to float when quoting was specified as non-numeric (:issue:`13411`)
 - Bug in ``pd.pivot_table()`` where ``margins_name`` is ignored when ``aggfunc`` is a list (:issue:`13354`)
-
+- Bug in ``pd.Series.str.zfill``, ``center``, ``ljust``, ``rjust``, and ``pad`` when passing non-integers, did not raise ``TypeError`` (:issue:`13598`)
 
 
 - Bug in ``Series`` arithmetic raises ``TypeError`` if it contains datetime-like as ``object`` dtype (:issue:`13043`)
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index 6ec28f973..3150fc5d0 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -8,7 +8,8 @@ from pandas.types.common import (is_bool_dtype,
                                  is_object_dtype,
                                  is_string_like,
                                  is_list_like,
-                                 is_scalar)
+                                 is_scalar,
+                                 is_integer)
 from pandas.core.common import _values_from_object
 
 from pandas.core.algorithms import take_1d
@@ -914,6 +915,10 @@ def str_pad(arr, width, side='left', fillchar=' '):
     if len(fillchar) != 1:
         raise TypeError('fillchar must be a character, not str')
 
+    if not is_integer(width):
+        msg = 'width must be of integer type, not {0}'
+        raise TypeError(msg.format(type(width).__name__))
+
     if side == 'left':
         f = lambda x: x.rjust(width, fillchar)
     elif side == 'right':
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index 4d23bed62..fcdbec8fb 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -1603,6 +1603,15 @@ class TestStringMethods(tm.TestCase):
                                    "fillchar must be a character, not int"):
             result = values.str.pad(5, fillchar=5)
 
+    def test_pad_width(self):
+        # GH 13598
+        s = Series(['1', '22', 'a', 'bb'])
+
+        for f in ['center', 'ljust', 'rjust', 'zfill', 'pad']:
+            with tm.assertRaisesRegexp(TypeError,
+                                       "width must be of integer type, not*"):
+                getattr(s.str, f)('f')
+
     def test_translate(self):
 
         def _check(result, expected):
