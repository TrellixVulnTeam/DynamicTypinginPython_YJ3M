commit 87d8a3728b72e9654dfe628db748f21fb0ee6533
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 21 20:30:59 2010 +0000

    fixed plm brokenness. changed boolean reindexing to cast to float
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@197 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 20035ff44..af6392cd1 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -951,8 +951,8 @@ class DataFrame(Picklable, Groupable):
         typeHierarchy = [
             (float, float),
             (int, float),
-            (bool, np.bool_),
-            (np.bool_, np.bool_),
+            (bool, float),
+            (np.bool_, float),
             (basestring, object),
             (object, object)
         ]
diff --git a/pandas/core/matrix.py b/pandas/core/matrix.py
index 6eeb287c6..f09e77b6b 100644
--- a/pandas/core/matrix.py
+++ b/pandas/core/matrix.py
@@ -282,7 +282,7 @@ class DataMatrix(DataFrame):
                 if issubclass(mat.dtype.type, np.int_):
                     mat = mat.astype(float)
                 elif issubclass(mat.dtype.type, np.bool_):
-                    mat = mat.astype(object)
+                    mat = mat.astype(float)
 
                 common.null_out_axis(mat, notmask, 0)
 
@@ -322,7 +322,7 @@ class DataMatrix(DataFrame):
                 if issubclass(mat.dtype.type, np.int_):
                     mat = mat.astype(float)
                 elif issubclass(mat.dtype.type, np.bool_):
-                    mat = mat.astype(object)
+                    mat = mat.astype(float)
 
                 common.null_out_axis(mat, notmask, 1)
 
diff --git a/pandas/core/tests/test_matrix.py b/pandas/core/tests/test_matrix.py
index 513a301c5..9f5f8afa7 100644
--- a/pandas/core/tests/test_matrix.py
+++ b/pandas/core/tests/test_matrix.py
@@ -194,11 +194,11 @@ class TestDataMatrix(test_frame.TestDataFrame):
                            columns=[0, 2])
 
         reindexed = frame.reindex(np.arange(10))
-        self.assert_(reindexed.values.dtype == np.object_)
+        self.assert_(reindexed.values.dtype == np.float_)
         self.assert_(np.isnan(reindexed[0][1]))
 
         reindexed = frame.reindex(columns=range(3))
-        self.assert_(reindexed.values.dtype == np.object_)
+        self.assert_(reindexed.values.dtype == np.float_)
         self.assert_(isnull(reindexed[1]).all())
 
     def test_reindex_objects(self):
diff --git a/pandas/stats/plm.py b/pandas/stats/plm.py
index b5a6e5a1a..a8dab30d7 100644
--- a/pandas/stats/plm.py
+++ b/pandas/stats/plm.py
@@ -121,8 +121,8 @@ class PanelOLS(OLS):
             x_filtered = x_filtered.filter(x_filtered.items - self._x_effects)
 
         if self._time_effects:
-            x_regressor = x.subtract(x.mean(broadcast=True))
-            y_regressor = y.subtract(y.mean(broadcast=True))
+            x_regressor = x.subtract(x.mean('minor', broadcast=True))
+            y_regressor = y.subtract(y.mean('minor', broadcast=True))
 
         elif self._intercept:
             # only add intercept when no time effects
@@ -897,7 +897,7 @@ def _xx_time_effects(x, y):
     """
     # X'X
     xx = np.dot(x.values.T, x.values)
-    xt = x.sum().values
+    xt = x.sum('minor').values
 
     count = y.count()
     selector = count > 0
