commit 5c47d7225246fa843171cf4fb551ee7ce67cfc64
Author: Wouter Overmeire <lodagro@gmail.com>
Date:   Thu Sep 27 21:09:07 2012 +0200

    BUG: fix drop_duplicates for tuple column label

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 66524e571..56e764980 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2714,7 +2714,13 @@ class DataFrame(NDFrame):
             values = list(_m8_to_i8(self.values.T))
         else:
             if np.iterable(cols) and not isinstance(cols, basestring):
-                values = [_m8_to_i8(self[x].values) for x in cols]
+                if isinstance(cols, tuple):
+                    if cols in self.columns:
+                        values = [self[cols]]
+                    else:
+                        values = [_m8_to_i8(self[x].values) for x in cols]
+                else:
+                    values = [_m8_to_i8(self[x].values) for x in cols]
             else:
                 values = [self[cols]]
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 236549cf6..1cdf289eb 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -4169,6 +4169,28 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = df2.drop_duplicates(['AAA', 'B'], take_last=True)
         assert_frame_equal(result, expected)
 
+    def test_drop_duplicates_tuple(self):
+        df = DataFrame({('AA', 'AB') : ['foo', 'bar', 'foo', 'bar',
+                               'foo', 'bar', 'bar', 'foo'],
+                        'B' : ['one', 'one', 'two', 'two',
+                               'two', 'two', 'one', 'two'],
+                        'C' : [1, 1, 2, 2, 2, 2, 1, 2],
+                        'D' : range(8)})
+
+        # single column
+        result = df.drop_duplicates(('AA', 'AB'))
+        expected = df[:2]
+        assert_frame_equal(result, expected)
+
+        result = df.drop_duplicates(('AA', 'AB'), take_last=True)
+        expected = df.ix[[6, 7]]
+        assert_frame_equal(result, expected)
+
+        # multi column
+        expected = df.ix[[0, 1, 2, 3]]
+        result = df.drop_duplicates((('AA', 'AB'), 'B'))
+        assert_frame_equal(result, expected)
+
     def test_drop_duplicates_NA(self):
         # none
         df = DataFrame({'A' : [None, None, 'foo', 'bar',
