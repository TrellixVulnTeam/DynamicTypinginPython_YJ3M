commit 6b8e43688f3363ab19c8a3049e0ade70c13bd4b2
Author: Matthew Roeschke <emailformattr@gmail.com>
Date:   Sun Jul 30 02:43:25 2017 -0700

    BUG: Allow pd.unique to accept tuple of strings (#17108)

diff --git a/doc/source/whatsnew/v0.21.0.txt b/doc/source/whatsnew/v0.21.0.txt
index 0025f8d09..2d5514484 100644
--- a/doc/source/whatsnew/v0.21.0.txt
+++ b/doc/source/whatsnew/v0.21.0.txt
@@ -327,3 +327,4 @@ Other
 ^^^^^
 - Bug in :func:`eval` where the ``inplace`` parameter was being incorrectly handled (:issue:`16732`)
 - Bug in ``.isin()`` in which checking membership in empty ``Series`` objects raised an error (:issue:`16991`)
+- Bug in :func:`unique` where checking a tuple of strings raised a ``TypeError`` (:issue:`17108`)
diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 4ca658b35..f2359f3ff 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -170,6 +170,8 @@ def _ensure_arraylike(values):
                                ABCIndexClass, ABCSeries)):
         inferred = lib.infer_dtype(values)
         if inferred in ['mixed', 'string', 'unicode']:
+            if isinstance(values, tuple):
+                values = list(values)
             values = lib.list_to_object_array(values)
         else:
             values = np.asarray(values)
diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index 0e86ec123..b26089ea7 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -415,6 +415,15 @@ class TestUnique(object):
         expected = pd.Categorical(list('abc'))
         tm.assert_categorical_equal(result, expected)
 
+    @pytest.mark.parametrize("arg ,expected", [
+        (('1', '1', '2'), np.array(['1', '2'], dtype=object)),
+        (('foo',), np.array(['foo'], dtype=object))
+    ])
+    def test_tuple_with_strings(self, arg, expected):
+        # see GH 17108
+        result = pd.unique(arg)
+        tm.assert_numpy_array_equal(result, expected)
+
 
 class TestIsin(object):
 
