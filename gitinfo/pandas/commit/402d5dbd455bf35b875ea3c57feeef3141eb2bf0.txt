commit 402d5dbd455bf35b875ea3c57feeef3141eb2bf0
Author: gfyoung <gfyoung17+GitHub@gmail.com>
Date:   Sun Jan 20 18:46:32 2019 -0800

    DEPS: Bump pyarrow min version to 0.9.0 (#24854)
    
    Closes gh-24767

diff --git a/ci/deps/travis-27.yaml b/ci/deps/travis-27.yaml
index 0f2194e71..2624797b2 100644
--- a/ci/deps/travis-27.yaml
+++ b/ci/deps/travis-27.yaml
@@ -22,7 +22,7 @@ dependencies:
   - patsy
   - psycopg2
   - py
-  - pyarrow=0.7.0
+  - pyarrow=0.9.0
   - PyCrypto
   - pymysql=0.6.3
   - pytables
diff --git a/doc/source/install.rst b/doc/source/install.rst
index fa3ff2f20..92364fcc9 100644
--- a/doc/source/install.rst
+++ b/doc/source/install.rst
@@ -257,7 +257,7 @@ Optional Dependencies
 * `SciPy <http://www.scipy.org>`__: miscellaneous statistical functions, Version 0.18.1 or higher
 * `xarray <http://xarray.pydata.org>`__: pandas like handling for > 2 dims, needed for converting Panels to xarray objects. Version 0.7.0 or higher is recommended.
 * `PyTables <http://www.pytables.org>`__: necessary for HDF5-based storage, Version 3.4.2 or higher
-* `pyarrow <http://arrow.apache.org/docs/python/>`__ (>= 0.7.0): necessary for feather-based storage.
+* `pyarrow <http://arrow.apache.org/docs/python/>`__ (>= 0.9.0): necessary for feather-based storage.
 * `Apache Parquet <https://parquet.apache.org/>`__, either `pyarrow <http://arrow.apache.org/docs/python/>`__ (>= 0.7.0) or `fastparquet <https://fastparquet.readthedocs.io/en/latest>`__ (>= 0.2.1) for parquet-based storage. The `snappy <https://pypi.org/project/python-snappy>`__ and `brotli <https://pypi.org/project/brotlipy>`__ are available for compression support.
 * `SQLAlchemy <http://www.sqlalchemy.org>`__: for SQL database support. Version 0.8.1 or higher recommended. Besides SQLAlchemy, you also need a database specific driver. You can find an overview of supported drivers for each SQL dialect in the `SQLAlchemy docs <http://docs.sqlalchemy.org/en/latest/dialects/index.html>`__. Some common drivers are:
 
diff --git a/doc/source/whatsnew/v0.24.0.rst b/doc/source/whatsnew/v0.24.0.rst
index a4598b315..fbc3c4fe4 100644
--- a/doc/source/whatsnew/v0.24.0.rst
+++ b/doc/source/whatsnew/v0.24.0.rst
@@ -438,7 +438,7 @@ Pandas 0.24.0 includes a number of API breaking changes.
 Dependencies have increased minimum versions
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
-We have updated our minimum supported versions of dependencies (:issue:`21242`, :issue:`18742`, :issue:`23774`).
+We have updated our minimum supported versions of dependencies (:issue:`21242`, :issue:`18742`, :issue:`23774`, :issue:`24767`).
 If installed, we now require:
 
 +-----------------+-----------------+----------+
@@ -456,7 +456,7 @@ If installed, we now require:
 +-----------------+-----------------+----------+
 | pandas-gbq      | 0.8.0           |          |
 +-----------------+-----------------+----------+
-| pyarrow         | 0.7.0           |          |
+| pyarrow         | 0.9.0           |          |
 +-----------------+-----------------+----------+
 | pytables        | 3.4.2           |          |
 +-----------------+-----------------+----------+
diff --git a/environment.yml b/environment.yml
index 7a177cfee..47fe8e4c2 100644
--- a/environment.yml
+++ b/environment.yml
@@ -39,7 +39,7 @@ dependencies:
   - nbsphinx
   - numexpr>=2.6.8
   - openpyxl
-  - pyarrow>=0.7.0
+  - pyarrow>=0.9.0
   - pytables>=3.4.2
   - pytest-cov
   - pytest-xdist
diff --git a/pandas/io/feather_format.py b/pandas/io/feather_format.py
index 5c8ab37c7..d76e6b75d 100644
--- a/pandas/io/feather_format.py
+++ b/pandas/io/feather_format.py
@@ -24,8 +24,8 @@ def _try_import():
                           "or via pip\n"
                           "pip install -U pyarrow\n")
 
-    if LooseVersion(pyarrow.__version__) < LooseVersion('0.4.1'):
-        raise ImportError("pyarrow >= 0.4.1 required for feather support\n\n"
+    if LooseVersion(pyarrow.__version__) < LooseVersion('0.9.0'):
+        raise ImportError("pyarrow >= 0.9.0 required for feather support\n\n"
                           "you can install via conda\n"
                           "conda install pyarrow -c conda-forge"
                           "or via pip\n"
diff --git a/pandas/io/parquet.py b/pandas/io/parquet.py
index a40fe0c9a..dada9000d 100644
--- a/pandas/io/parquet.py
+++ b/pandas/io/parquet.py
@@ -89,9 +89,9 @@ class PyArrowImpl(BaseImpl):
                 "\nor via pip\n"
                 "pip install -U pyarrow\n"
             )
-        if LooseVersion(pyarrow.__version__) < '0.7.0':
+        if LooseVersion(pyarrow.__version__) < '0.9.0':
             raise ImportError(
-                "pyarrow >= 0.7.0 is required for parquet support\n\n"
+                "pyarrow >= 0.9.0 is required for parquet support\n\n"
                 "you can install via conda\n"
                 "conda install pyarrow -c conda-forge\n"
                 "\nor via pip\n"
diff --git a/pandas/tests/io/test_parquet.py b/pandas/tests/io/test_parquet.py
index 8833c6f78..01a47a67a 100644
--- a/pandas/tests/io/test_parquet.py
+++ b/pandas/tests/io/test_parquet.py
@@ -47,8 +47,6 @@ def engine(request):
 def pa():
     if not _HAVE_PYARROW:
         pytest.skip("pyarrow is not installed")
-    if LooseVersion(pyarrow.__version__) < LooseVersion('0.7.0'):
-        pytest.skip("pyarrow is < 0.7.0")
     return 'pyarrow'
 
 
@@ -289,11 +287,6 @@ class TestBasic(Base):
     def test_write_index(self, engine):
         check_names = engine != 'fastparquet'
 
-        if engine == 'pyarrow':
-            import pyarrow
-            if LooseVersion(pyarrow.__version__) < LooseVersion('0.7.0'):
-                pytest.skip("pyarrow is < 0.7.0")
-
         df = pd.DataFrame({'A': [1, 2, 3]})
         check_round_trip(df, engine)
 
@@ -386,10 +379,8 @@ class TestParquetPyArrow(Base):
         df = df_full
 
         # additional supported types for pyarrow
-        import pyarrow
-        if LooseVersion(pyarrow.__version__) >= LooseVersion('0.7.0'):
-            df['datetime_tz'] = pd.date_range('20130101', periods=3,
-                                              tz='Europe/Brussels')
+        df['datetime_tz'] = pd.date_range('20130101', periods=3,
+                                          tz='Europe/Brussels')
         df['bool_with_none'] = [True, None, True]
 
         check_round_trip(df, pa)
diff --git a/requirements-dev.txt b/requirements-dev.txt
index ba78430a4..76aaeefa6 100644
--- a/requirements-dev.txt
+++ b/requirements-dev.txt
@@ -28,7 +28,7 @@ matplotlib>=2.0.0
 nbsphinx
 numexpr>=2.6.8
 openpyxl
-pyarrow>=0.7.0
+pyarrow>=0.9.0
 tables>=3.4.2
 pytest-cov
 pytest-xdist
