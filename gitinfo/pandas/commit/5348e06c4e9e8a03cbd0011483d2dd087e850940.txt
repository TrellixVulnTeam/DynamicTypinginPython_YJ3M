commit 5348e06c4e9e8a03cbd0011483d2dd087e850940
Author: nprad <nprad@users.noreply.github.com>
Date:   Thu May 31 05:27:32 2018 -0500

    BUG: Fix inconsistency between the shape properties of SparseSeries and SparseArray (#21126) (#21198)

diff --git a/doc/source/whatsnew/v0.23.1.txt b/doc/source/whatsnew/v0.23.1.txt
index 654b27624..726ab73e8 100644
--- a/doc/source/whatsnew/v0.23.1.txt
+++ b/doc/source/whatsnew/v0.23.1.txt
@@ -67,6 +67,11 @@ Categorical
 - Bug in :func:`pandas.util.testing.assert_index_equal` which raised ``AssertionError`` incorrectly, when comparing two :class:`CategoricalIndex` objects with param ``check_categorical=False`` (:issue:`19776`)
 - Bug in :meth:`Categorical.fillna` incorrectly raising a ``TypeError`` when `value` the individual categories are iterable and `value` is an iterable (:issue:`21097`, :issue:`19788`)
 
+Sparse
+^^^^^^
+
+- Bug in :attr:`SparseArray.shape` which previously only returned the shape :attr:`SparseArray.sp_values` (:issue:`21126`)
+
 Conversion
 ^^^^^^^^^^
 
diff --git a/pandas/core/sparse/array.py b/pandas/core/sparse/array.py
index 5532d7522..ff58f7d10 100644
--- a/pandas/core/sparse/array.py
+++ b/pandas/core/sparse/array.py
@@ -290,6 +290,7 @@ class SparseArray(PandasObject, np.ndarray):
         """Necessary for making this object picklable"""
         object_state = list(np.ndarray.__reduce__(self))
         subclass_state = self.fill_value, self.sp_index
+        object_state[2] = self.sp_values.__reduce__()[2]
         object_state[2] = (object_state[2], subclass_state)
         return tuple(object_state)
 
@@ -339,6 +340,10 @@ class SparseArray(PandasObject, np.ndarray):
         output.put(int_index.indices, self)
         return output
 
+    @property
+    def shape(self):
+        return (len(self),)
+
     @property
     def sp_values(self):
         # caching not an option, leaks memory
diff --git a/pandas/tests/sparse/test_array.py b/pandas/tests/sparse/test_array.py
index 6c0c83cf6..b3330f866 100644
--- a/pandas/tests/sparse/test_array.py
+++ b/pandas/tests/sparse/test_array.py
@@ -454,6 +454,17 @@ class TestSparseArray(object):
         assert_almost_equal(self.arr.to_dense(), self.arr_data)
         assert_almost_equal(self.arr.sp_values, np.asarray(self.arr))
 
+    @pytest.mark.parametrize('data,shape,dtype', [
+        ([0, 0, 0, 0, 0], (5,), None),
+        ([], (0,), None),
+        ([0], (1,), None),
+        (['A', 'A', np.nan, 'B'], (4,), np.object)
+    ])
+    def test_shape(self, data, shape, dtype):
+        # GH 21126
+        out = SparseArray(data, dtype=dtype)
+        assert out.shape == shape
+
     def test_to_dense(self):
         vals = np.array([1, np.nan, np.nan, 3, np.nan])
         res = SparseArray(vals).to_dense()
