commit 0e02d5f275234b11d699ce13aa4da4f3624d0f7d
Author: broessli <thor@iphonedebenoit.home>
Date:   Fri Nov 14 20:26:29 2014 +0100

    Fix unrecognized 'Z' UTC designator

diff --git a/doc/source/whatsnew/v0.15.2.txt b/doc/source/whatsnew/v0.15.2.txt
index 7c6e17f5d..dc2963fbe 100644
--- a/doc/source/whatsnew/v0.15.2.txt
+++ b/doc/source/whatsnew/v0.15.2.txt
@@ -65,3 +65,4 @@ Bug Fixes
 - ``Timedelta`` kwargs may now be numpy ints and floats (:issue:`8757`).
 - Skip testing of histogram plots for matplotlib <= 1.2 (:issue:`8648`).
 - Bug where ``get_data_google``returned object dtypes (:issue:`3995`)
+- Regression in ``Timestamp`` does not parse 'Z' zone designator for UTC (:issue:`8771`)
diff --git a/pandas/src/datetime/np_datetime_strings.c b/pandas/src/datetime/np_datetime_strings.c
index 3f09de851..c94e759e0 100644
--- a/pandas/src/datetime/np_datetime_strings.c
+++ b/pandas/src/datetime/np_datetime_strings.c
@@ -363,7 +363,8 @@ convert_datetimestruct_local_to_utc(pandas_datetimestruct *out_dts_utc,
  *           to be cast to the 'unit' parameter.
  *
  * 'out' gets filled with the parsed date-time.
- * 'out_local' gets whether returned value contains timezone. 0 for UTC, 1 for local time.
+ * 'out_local' gets set to 1 if the parsed time contains timezone, 
+ *      to 0 otherwise.
  * 'out_tzoffset' gets set to timezone offset by minutes
  *      if the parsed time was in local time,
  *      to 0 otherwise. The values 'now' and 'today' don't get counted
@@ -785,9 +786,13 @@ parse_timezone:
 
     /* UTC specifier */
     if (*substr == 'Z') {
-        /* "Z" means not local */
+        /* "Z" should be equivalent to tz offset "+00:00" */
         if (out_local != NULL) {
-            *out_local = 0;
+            *out_local = 1;
+        }
+
+        if (out_tzoffset != NULL) {
+            *out_tzoffset = 0;
         }
 
         if (sublen == 1) {
diff --git a/pandas/tseries/tests/test_tslib.py b/pandas/tseries/tests/test_tslib.py
index 9adcbb4ea..89473b206 100644
--- a/pandas/tseries/tests/test_tslib.py
+++ b/pandas/tseries/tests/test_tslib.py
@@ -6,7 +6,7 @@ from pandas import tslib
 import datetime
 
 from pandas.core.api import Timestamp, Series
-from pandas.tslib import period_asfreq, period_ordinal
+from pandas.tslib import period_asfreq, period_ordinal, get_timezone
 from pandas.tseries.index import date_range
 from pandas.tseries.frequencies import get_freq
 import pandas.tseries.offsets as offsets
@@ -298,6 +298,11 @@ class TestTimestamp(tm.TestCase):
         # One us more than the maximum is an error
         self.assertRaises(ValueError, Timestamp, max_ts_us + one_us)
 
+    def test_utc_z_designator(self):
+        self.assertEqual(get_timezone(Timestamp('2014-11-02 01:00Z').tzinfo), 'UTC')
+        self.assertEqual(get_timezone(Timestamp('2014-11-02 01:00Z00').tzinfo), 'UTC')
+        self.assertRaises(ValueError, Timestamp, '2014-11-02 01:00Z0')
+
 
 class TestDatetimeParsingWrappers(tm.TestCase):
     def test_does_not_convert_mixed_integer(self):
