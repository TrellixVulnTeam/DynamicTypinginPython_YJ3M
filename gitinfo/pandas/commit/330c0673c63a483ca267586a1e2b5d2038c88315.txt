commit 330c0673c63a483ca267586a1e2b5d2038c88315
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat May 26 12:26:34 2012 -0400

    BUG: fix multitake special case with boolean arrays in .ix, close #1321

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index c2fb8d820..541004558 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -143,7 +143,7 @@ class _NDFrameIndexer(object):
 
         if com._is_bool_indexer(key):
             key = _check_bool_indexer(labels, key)
-            return np.asarray(key)
+            return labels[np.asarray(key)]
         else:
             if isinstance(key, Index):
                 # want Index objects to pass through untouched
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 341e5a67b..479b6715d 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -822,6 +822,22 @@ class CheckIndexing(object):
         expected.ix[mask] = 0
         assert_frame_equal(cp, expected)
 
+    def test_getitem_setitem_boolean_multi(self):
+        df = DataFrame(np.random.randn(3, 2))
+
+        # get
+        k1 = np.array([True, False, True])
+        k2 = np.array([False, True])
+        result = df.ix[k1, k2]
+        expected = df.ix[[0, 2], [1]]
+        assert_frame_equal(result, expected)
+
+        expected = df.copy()
+        df.ix[np.array([True, False, True]),
+              np.array([False, True])] = 5
+        expected.ix[[0, 2], [1]] = 5
+        assert_frame_equal(df, expected)
+
     def test_getitem_setitem_float_labels(self):
         index = Index([1.5, 2, 3, 4, 5])
         df = DataFrame(np.random.randn(5, 5), index=index)
