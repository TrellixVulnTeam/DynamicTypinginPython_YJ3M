commit 179d465ab19fac706ba86b8d642a9e909cb993b6
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Sep 6 00:10:02 2011 -0400

    TST: test coverage

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 815109d02..aa4a45421 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -284,10 +284,7 @@ class GroupBy(object):
 
         For multiple groupings, the result index will be a MultiIndex
         """
-        if self.axis == 0:
-            return self._cython_agg_general('mean')
-        else:
-            return self.aggregate(lambda x: x.mean(axis=self.axis))
+        return self._cython_agg_general('mean')
 
     def sum(self, axis=None):
         """
@@ -296,10 +293,7 @@ class GroupBy(object):
         For multiple groupings, the result index will be a MultiIndex
         """
         try:
-            if self.axis == 0:
-                return self._cython_agg_general('add')
-            else:
-                return self.aggregate(lambda x: x.sum(axis=self.axis))
+            return self._cython_agg_general('add')
         except Exception:
             return self.aggregate(lambda x: np.sum(x, axis=self.axis))
 
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 45e0be211..7aa40dbc8 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -720,6 +720,9 @@ class TestGroupBy(unittest.TestCase):
         result = df.groupby(level=0).mean()
         self.assert_(result.columns.equals(columns))
 
+        result = df.groupby(level=0, axis=1).mean()
+        self.assert_(result.index.equals(df.index))
+
         result = df.groupby(level=0).agg(np.mean)
         self.assert_(result.columns.equals(columns))
 
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index a923df51c..80a0e6c39 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -315,6 +315,13 @@ class TestMultiLevel(unittest.TestCase):
         assert_series_equal(stacked['foo'], df['foo'].stack())
         self.assert_(stacked['bar'].dtype == np.float_)
 
+    def test_swaplevel(self):
+        swapped = self.frame['A'].swaplevel(0, 1)
+        self.assert_(not swapped.index.equals(self.frame.index))
+
+        back = swapped.swaplevel(0, 1)
+        self.assert_(back.index.equals(self.frame.index))
+
     def test_insert_index(self):
         df = self.ymd[:5].T
         df[2000, 1, 10] = df[2000, 1, 7]
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 6245d1527..1db65f0cb 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -827,11 +827,11 @@ class TestLongPanel(unittest.TestCase):
         self.panel.toCSV('__tmp__')
         os.remove('__tmp__')
 
-    def test_toString(self):
+    def test_to_string(self):
         from cStringIO import StringIO
 
         buf = StringIO()
-        self.panel.toString(buf)
+        self.panel.to_string(buf)
 
     def test_swapaxes(self):
         swapped = self.panel.swapaxes()
