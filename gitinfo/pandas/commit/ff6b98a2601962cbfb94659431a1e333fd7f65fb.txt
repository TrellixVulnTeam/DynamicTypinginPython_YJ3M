commit ff6b98a2601962cbfb94659431a1e333fd7f65fb
Author: Jeff Reback <jeff@reback.net>
Date:   Tue Oct 28 08:31:49 2014 -0400

    DOC: v0.15.1.txt corrections

diff --git a/doc/source/whatsnew/v0.15.1.txt b/doc/source/whatsnew/v0.15.1.txt
index 1f50470e4..04aec92f4 100644
--- a/doc/source/whatsnew/v0.15.1.txt
+++ b/doc/source/whatsnew/v0.15.1.txt
@@ -23,14 +23,18 @@ API changes
 - ``groupby`` with ``as_index=False`` will not add erroneous extra columns to
   result (:issue:`8582`):
 
-  .. code-block:: python
+  .. ipython:: python
 
-     In [1]: np.random.seed(2718281)
+    np.random.seed(2718281)
+    df = pd.DataFrame(np.random.randint(0, 100, (10, 2)),
+                      columns=['jim', 'joe'])
+    df.head()
 
-     In [2]: df = pd.DataFrame(np.random.randint(0, 100, (10, 2)),
-        ...:                   columns=['jim', 'joe'])
+    ts = pd.Series(5 * np.random.randint(0, 3, 10))
+
+  previous behavior:
 
-     In [3]: ts = pd.Series(5 * np.random.randint(0, 3, 10))
+  .. code-block:: python
 
      In [4]: df.groupby(ts, as_index=False).max()
      Out[4]:
@@ -39,36 +43,38 @@ API changes
      1    5   77   84
      2   10   96   65
 
-with the new release:
+  current behavior:
 
   .. ipython:: python
 
-    np.random.seed(2718281)
-    df = pd.DataFrame(np.random.randint(0, 100, (10, 2)),
-                      columns=['jim', 'joe'])
-    df.head()
-
-    ts = pd.Series(5 * np.random.randint(0, 3, 10))
     df.groupby(ts, as_index=False).max()
 
 - ``groupby`` will not erroneously exclude columns if the column name conflics
   with the grouper name (:issue:`8112`):
 
-  .. code-block:: python
+  .. ipython:: python
 
-     In [1]: df = pd.DataFrame({'jim': range(5), 'joe': range(5, 10)})
+     df = pd.DataFrame({'jim': range(5), 'joe': range(5, 10)})
+     df
+     gr = df.groupby(df['jim'] < 2)
 
-     In [2]: gr = df.groupby(df['jim'] < 2)
+  previous behavior (excludes 1st column from output):
 
-     In [3]: _ = gr.nth(0) # invokes the code path which excludes the 1st column
+  .. code-block:: python
 
-     In [4]: gr.apply(sum) # excludes 1st column from output
+     In [4]: gr.apply(sum)
      Out[4]:
             joe
      jim
      False   24
      True    11
 
+  current behavior:
+
+  .. ipython:: python
+
+     gr.apply(sum)
+
 .. _whatsnew_0151.enhancements:
 
 Enhancements
@@ -80,7 +86,7 @@ Enhancements
 
 
 - Added support for 3-character ISO and non-standard country codes in :func:``io.wb.download()`` (:issue:`8482`)
-- :ref:`World Bank data requests <remote_data.wb>` now will warn/raise based on an ``errors`` argument, as well as a list of hard-coded country codes and the World Bank's JSON response.  In prior versions, the error messages didn't look at the World Bank's JSON response.  Problem-inducing input were simply dropped prior to the request.  The issue was that many good countries were cropped in the hard-coded approach.  All countries will work now, but some bad countries will raise exceptions because some edge cases break the entire response.
+- :ref:`World Bank data requests <remote_data.wb>` now will warn/raise based on an ``errors`` argument, as well as a list of hard-coded country codes and the World Bank's JSON response.  In prior versions, the error messages didn't look at the World Bank's JSON response.  Problem-inducing input were simply dropped prior to the request.  The issue was that many good countries were cropped in the hard-coded approach.  All countries will work now, but some bad countries will raise exceptions because some edge cases break the entire response. (:issue:`8482`)
 
 .. _whatsnew_0151.performance:
 
@@ -99,7 +105,7 @@ Bug Fixes
 ~~~~~~~~~
 
 
-- Bug in coercing ``Categorical` to a records array, e.g. ``df.to_records()`` (:issue:`8626)
+- Bug in coercing ``Categorical`` to a records array, e.g. ``df.to_records()`` (:issue:`8626`)
 - Bug in ``Categorical`` not created properly with ``Series.to_frame()`` (:issue:`8626`)
 - Bug in coercing in astype of a ``Categorical`` of a passed ``pd.Categorical`` (this now raises ``TypeError`` correctly), (:issue:`8626`)
 - Bug in ``cut``/``qcut`` when using ``Series`` and ``retbins=True`` (:issue:`8589`)
@@ -141,5 +147,4 @@ Bug Fixes
 
 
 
-- Fixed a bug where plotting a column ``y`` and specifying a label
-would mutate the index name of the DataFrame ``y`` came from (:issue:`8494`)
+- Fixed a bug where plotting a column ``y`` and specifying a label would mutate the index name of the original DataFrame (:issue:`8494`)
