commit 4083689b8058c8de3f59ec297e1b1580ec993eeb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Aug 13 17:50:42 2012 -0400

    BUG: corr/cov dtype issue close #1761

diff --git a/RELEASE.rst b/RELEASE.rst
index 56c1c1612..d0f6eae0b 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -30,6 +30,7 @@ pandas 0.8.2
 **New features**
 
   - Add ``str.encode`` and ``str.decode`` to Series (#1706)
+  - Add `to_latex` method to DataFrame (#1735)
 
 **Improvements to existing features**
 
@@ -91,6 +92,7 @@ pandas 0.8.2
   - Fix .ix setting logic error with non-unique MultiIndex (#1750)
   - Basic indexing now works on MultiIndex with > 1000000 elements, regression
     from earlier version of pandas (#1757)
+  - Handle non-float64 dtypes in fast DataFrame.corr/cov code paths (#1761)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 2189884d9..d36cccedb 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3895,7 +3895,7 @@ class DataFrame(NDFrame):
         mat = numeric_df.values
 
         if method == 'pearson':
-            correl = lib.nancorr(mat)
+            correl = lib.nancorr(com._ensure_float64(mat))
         else:
             mat = mat.T
             corrf = nanops.get_corr_func(method)
@@ -3931,7 +3931,7 @@ class DataFrame(NDFrame):
         if notnull(mat).all():
             baseCov = np.cov(mat.T)
         else:
-            baseCov = lib.nancorr(mat, cov=True)
+            baseCov = lib.nancorr(com._ensure_float64(mat), cov=True)
 
         return self._constructor(baseCov, index=cols, columns=cols)
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 9bfbc21d6..05173abe9 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3686,6 +3686,13 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
             rs = df.corr(meth)
             self.assert_(isnull(rs.values).all())
 
+        # dtypes other than float64 #1761
+        df3 = DataFrame({"a":[1,2,3,4], "b":[1,2,3,4]})
+
+        # it works!
+        df3.cov()
+        df3.corr()
+
     def test_cov(self):
         self.frame['A'][:5] = nan
         self.frame['B'][:10] = nan
