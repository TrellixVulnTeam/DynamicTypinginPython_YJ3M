commit be556dc5b6fe9c9990a4aa2dc090dad45cb61ec6
Author: y-p <yoval@gmx.com>
Date:   Sat Apr 6 00:41:59 2013 +0300

    BLD: test_perf, do a collect once per --repeats, after each b.run()

diff --git a/vb_suite/test_perf.py b/vb_suite/test_perf.py
index 3f771addd..74d5f4572 100755
--- a/vb_suite/test_perf.py
+++ b/vb_suite/test_perf.py
@@ -133,16 +133,6 @@ def prprint(s):
 
 def pre_hook():
     import gc
-    gc.collect()
-
-    try:
-        from ctypes import cdll, CDLL
-        cdll.LoadLibrary("libc.so.6")
-        libc = CDLL("libc.so.6")
-        libc.malloc_trim(0)
-    except:
-        pass
-
     gc.disable()
 
 def post_hook():
@@ -231,36 +221,49 @@ def profile_comparative(benchmarks):
 
 
 def profile_head_single(benchmark):
+    import gc
     results = []
 
+    # just in case
+    gc.collect()
+
+    try:
+        from ctypes import cdll, CDLL
+        cdll.LoadLibrary("libc.so.6")
+        libc = CDLL("libc.so.6")
+        libc.malloc_trim(0)
+    except:
+        pass
+
 
     N =  args.hrepeats + args.burnin
 
     results = []
-    for i in range(N):
-        pre_hook() # gc collect then disable
-
-        d=dict()
-        sys.stdout.write('.')
-        sys.stdout.flush()
-        try:
-            d = benchmark.run()
-
-        except KeyboardInterrupt:
-            raise
-        except Exception as e: # if a single vbench bursts into flames, don't die.
-            err=""
-            try:
-                err =  d.get("traceback")
-                if err is None:
-                    err = str(e)
-            except:
-                pass
-            print("%s died with:\n%s\nSkipping...\n" % (benchmark.name, err))
+    try:
+        for i in range(N):
+            gc.disable()
+            d=dict()
 
-        results.append(d.get('timing',np.nan))
+            try:
+                d = benchmark.run()
+
+            except KeyboardInterrupt:
+                raise
+            except Exception as e: # if a single vbench bursts into flames, don't die.
+                err=""
+                try:
+                    err =  d.get("traceback")
+                    if err is None:
+                        err = str(e)
+                except:
+                    pass
+                print("%s died with:\n%s\nSkipping...\n" % (benchmark.name, err))
+
+            results.append(d.get('timing',np.nan))
+            gc.enable()
 
-        post_hook() # gc enable
+    finally:
+        gc.enable()
 
     if results:
         # throw away the burn_in
