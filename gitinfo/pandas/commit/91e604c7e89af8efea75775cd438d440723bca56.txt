commit 91e604c7e89af8efea75775cd438d440723bca56
Author: Jeff Tratner <jeffrey.tratner@gmail.com>
Date:   Sat Nov 30 20:20:00 2013 -0500

    TST: Always try to close file descriptors of tempfiles
    
    TST: Close file descriptors in io/tests/pytables

diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index 78d9dcb1f..3ab818a7f 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -3731,7 +3731,7 @@ class TestHDFStore(tm.TestCase):
 
                 if new_f is None:
                     import tempfile
-                    new_f = tempfile.mkstemp()[1]
+                    fd, new_f = tempfile.mkstemp()
 
                 tstore = store.copy(new_f, keys = keys, propindexes = propindexes, **kwargs)
 
@@ -3757,6 +3757,10 @@ class TestHDFStore(tm.TestCase):
             finally:
                 safe_close(store)
                 safe_close(tstore)
+                try:
+                    os.close(fd)
+                except:
+                    pass
                 safe_remove(new_f)
 
         do_copy()
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 0c4e083b5..1904b5f0b 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -345,17 +345,20 @@ def ensure_clean(filename=None, return_filelike=False):
             yield f
         finally:
             f.close()
-
     else:
-
         # don't generate tempfile if using a path with directory specified
         if len(os.path.dirname(filename)):
             raise ValueError("Can't pass a qualified name to ensure_clean()")
 
         try:
-            filename = tempfile.mkstemp(suffix=filename)[1]
+            fd, filename = tempfile.mkstemp(suffix=filename)
             yield filename
         finally:
+            try:
+                os.close(fd)
+            except Exception as e:
+                print("Couldn't close file descriptor: %d (file: %s)" %
+                    (fd, filename))
             try:
                 if os.path.exists(filename):
                     os.remove(filename)
