commit 9e99a5e2bf9ba6bb54216700fdf3c15a5648f337
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Mar 16 23:11:24 2013 -0400

    BUG: fix scalar date_parser issue in read_csv. close #3071

diff --git a/RELEASE.rst b/RELEASE.rst
index b1c18daf2..d6037f9bc 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -152,6 +152,7 @@ pandas 0.11.0
   - Formatting of an index that has ``nan`` was inconsistent or wrong (would fill from 
     other values), (GH2850_)
   - Unstack of a frame with no nans would always cause dtype upcasting (GH2929_)
+  - Fix scalar datetime.datetime parsing bug in read_csv (GH3071_)
 
 .. _GH622: https://github.com/pydata/pandas/issues/622
 .. _GH797: https://github.com/pydata/pandas/issues/797
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index d3839e878..164422f75 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -1553,7 +1553,10 @@ def _make_date_converter(date_parser=None, dayfirst=False):
                 return lib.try_parse_dates(strs, dayfirst=dayfirst)
         else:
             try:
-                return date_parser(*date_cols)
+                result = date_parser(*date_cols)
+                if isinstance(result, datetime.datetime):
+                    raise Exception('scalar parser')
+                return result
             except Exception:
                 try:
                     return generic_parser(date_parser, *date_cols)
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 85e96411d..facc5325a 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -365,6 +365,21 @@ KORD6,19990127, 23:00:00, 22:56:00, -0.5900, 1.7100, 4.6000, 0.0000, 280.0000"""
         tm.assert_frame_equal(rs, xp)
         self.assert_(rs.index.name == xp.index.name)
 
+    def test_date_parser_int_bug(self):
+        # #3071
+        log_file = StringIO(
+            'posix_timestamp,elapsed,sys,user,queries,query_time,rows,'
+                'accountid,userid,contactid,level,silo,method\n'
+            '1343103150,0.062353,0,4,6,0.01690,3,'
+                '12345,1,-1,3,invoice_InvoiceResource,search\n'
+        )
+
+        def f(posix_string):
+            return datetime.utcfromtimestamp(int(posix_string))
+
+        # it works!
+        read_csv(log_file, index_col=0, parse_dates=0, date_parser=f)
+
     def test_multiple_skts_example(self):
         data = "year, month, a, b\n 2001, 01, 0.0, 10.\n 2001, 02, 1.1, 11."
         pass
