commit 0e42e46d92da245736ffcba32c15d91b7d7d786e
Author: jreback <jeff@reback.net>
Date:   Mon Mar 18 13:38:46 2013 -0400

    TST: fail early on duplicate columns

diff --git a/pandas/core/format.py b/pandas/core/format.py
index 2237160ef..59e34709c 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -770,7 +770,6 @@ class CSVFormatter(object):
                cols=None, header=True, index=True, index_label=None,
                mode='w', nanRep=None, encoding=None, quoting=None,
                line_terminator='\n', chunksize=None,legacy=False):
-
         self.legacy=legacy # remove for 0.12
         self.obj = obj
         self.path_or_buf = path_or_buf
@@ -798,6 +797,11 @@ class CSVFormatter(object):
         else:
             cols=list(cols)
         self.cols = cols
+
+        # fail early if we have duplicate columns
+        if len(set(self.cols)) != len(self.cols):
+            raise Exception("duplicate columns are not permitted in to_csv")
+
         self.colname_map = dict((k,i) for i,k in  enumerate(obj.columns))
 
         if chunksize is None:
@@ -909,7 +913,6 @@ class CSVFormatter(object):
                 self.writer = csv.writer(f, lineterminator=self.line_terminator,
                                          delimiter=self.sep, quoting=self.quoting)
 
-
             if self.legacy:
             # to be removed in 0.12
                 self._helper_csv(self.writer, na_rep=self.na_rep,
@@ -920,6 +923,7 @@ class CSVFormatter(object):
             else:
                 self._save()
 
+
         finally:
             if close:
                 f.close()
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 9452cc8b8..aeda07e55 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -4593,8 +4593,11 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         assert_frame_equal(rs, df)
         os.remove(filename)
 
-    def test_to_csv_mixed_dups_cols(self):
-        filename = '__tmp_to_csv_mixed_dup_cols__.csv'
+    def test_to_csv_dups_cols(self):
+        filename = '__tmp_to_csv_dup_cols__.csv'
+
+        df        = DataFrame(np.random.randn(1000, 30),columns=range(15)+range(15),dtype='float64')
+        self.assertRaises(Exception, df.to_csv, filename)
 
         df_float  = DataFrame(np.random.randn(1000, 30),dtype='float64')
         df_int    = DataFrame(np.random.randn(1000, 30),dtype='int64')
