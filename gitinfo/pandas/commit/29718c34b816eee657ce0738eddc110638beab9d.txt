commit 29718c34b816eee657ce0738eddc110638beab9d
Author: ganevgv <ganevgv@users.noreply.github.com>
Date:   Tue Nov 12 23:32:45 2019 +0000

    TST: add tests for Series/DF logical operations nan propagation (#29531)

diff --git a/pandas/tests/frame/test_operators.py b/pandas/tests/frame/test_operators.py
index ac60f0424..f3e61dffb 100644
--- a/pandas/tests/frame/test_operators.py
+++ b/pandas/tests/frame/test_operators.py
@@ -218,6 +218,42 @@ class TestDataFrameLogicalOperators:
         expected = Series([True, True])
         tm.assert_series_equal(result, expected)
 
+    @pytest.mark.parametrize(
+        "left, right, op, expected",
+        [
+            (
+                [True, False, np.nan],
+                [True, False, True],
+                operator.and_,
+                [True, False, False],
+            ),
+            (
+                [True, False, True],
+                [True, False, np.nan],
+                operator.and_,
+                [True, False, False],
+            ),
+            (
+                [True, False, np.nan],
+                [True, False, True],
+                operator.or_,
+                [True, False, False],
+            ),
+            (
+                [True, False, True],
+                [True, False, np.nan],
+                operator.or_,
+                [True, False, True],
+            ),
+        ],
+    )
+    def test_logical_operators_nans(self, left, right, op, expected):
+        # GH 13896
+        result = op(DataFrame(left), DataFrame(right))
+        expected = DataFrame(expected)
+
+        tm.assert_frame_equal(result, expected)
+
 
 class TestDataFrameOperators:
     @pytest.mark.parametrize(
diff --git a/pandas/tests/series/test_operators.py b/pandas/tests/series/test_operators.py
index 7d212ee7c..983560d68 100644
--- a/pandas/tests/series/test_operators.py
+++ b/pandas/tests/series/test_operators.py
@@ -43,6 +43,42 @@ class TestSeriesLogicalOps:
         expected = s_tft
         tm.assert_series_equal(res, expected)
 
+    @pytest.mark.parametrize(
+        "left, right, op, expected",
+        [
+            (
+                [True, False, np.nan],
+                [True, False, True],
+                operator.and_,
+                [True, False, False],
+            ),
+            (
+                [True, False, True],
+                [True, False, np.nan],
+                operator.and_,
+                [True, False, False],
+            ),
+            (
+                [True, False, np.nan],
+                [True, False, True],
+                operator.or_,
+                [True, False, False],
+            ),
+            (
+                [True, False, True],
+                [True, False, np.nan],
+                operator.or_,
+                [True, False, True],
+            ),
+        ],
+    )
+    def test_logical_operators_nans(self, left, right, op, expected):
+        # GH 13896
+        result = op(Series(left), Series(right))
+        expected = Series(expected)
+
+        tm.assert_series_equal(result, expected)
+
     def test_logical_operators_int_dtype_with_int_dtype(self):
         # GH#9016: support bitwise op for integer types
 
