commit cd1bea8cd2fad852f82797a5495df769cdeae274
Author: jreback <jeff@reback.net>
Date:   Mon Sep 30 09:47:02 2013 -0400

    DOC: release notes fixup related to GH4936

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 48a8c690d..801158a00 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -157,7 +157,7 @@ Improvements to existing features
   - Add ``halflife`` option to exponentially weighted moving functions (PR
     :issue:`4998`)
   - ``to_dict`` now takes ``records`` as a possible outtype.  Returns an array
-    of column-keyed dictionaries. (:pullrequest:`4936`)
+    of column-keyed dictionaries. (:issue:`4936`)
 
 API Changes
 ~~~~~~~~~~~
diff --git a/doc/source/v0.13.0.txt b/doc/source/v0.13.0.txt
index e5a651811..1f9dc8d7d 100644
--- a/doc/source/v0.13.0.txt
+++ b/doc/source/v0.13.0.txt
@@ -307,7 +307,7 @@ Enhancements
   - Added a more informative error message when plot arguments contain
     overlapping color and style arguments (:issue:`4402`)
   - ``to_dict`` now takes ``records`` as a possible outtype.  Returns an array
-    of column-keyed dictionaries. (:pullrequest:`4936`)
+    of column-keyed dictionaries. (:issue:`4936`)
 
   - NaN handing in get_dummies (:issue:`4446`) with `dummy_na`
 
@@ -425,7 +425,7 @@ Enhancements
   - ``read_stata` now accepts Stata 13 format (:issue:`4291`)
   - ``read_fwf`` now infers the column specifications from the first 100 rows of
     the file if the data has correctly separated and properly aligned columns
-    using the delimiter provided to the function (:issue:`4488`). 
+    using the delimiter provided to the function (:issue:`4488`).
 
 .. _whatsnew_0130.experimental:
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 57da293da..dbd67aa3c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -666,7 +666,7 @@ class DataFrame(NDFrame):
         elif outtype.lower().startswith('s'):
             return dict((k, v) for k, v in compat.iteritems(self))
         elif outtype.lower().startswith('r'):
-            return [dict((k, v) for k, v in zip(self.columns, row)) \
+            return [dict((k, v) for k, v in zip(self.columns, row))
                     for row in self.values]
         else:  # pragma: no cover
             raise ValueError("outtype %s not understood" % outtype)
