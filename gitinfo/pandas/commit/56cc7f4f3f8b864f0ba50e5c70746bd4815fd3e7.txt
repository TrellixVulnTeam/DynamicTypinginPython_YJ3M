commit 56cc7f4f3f8b864f0ba50e5c70746bd4815fd3e7
Author: Daniel Saxton <2658661+dsaxton@users.noreply.github.com>
Date:   Thu Feb 13 02:16:33 2020 -0600

    BUG: Handle NA in assert_numpy_array_equal (#31910)

diff --git a/pandas/_libs/lib.pyx b/pandas/_libs/lib.pyx
index d2f0b2ffb..1990ef66a 100644
--- a/pandas/_libs/lib.pyx
+++ b/pandas/_libs/lib.pyx
@@ -571,6 +571,8 @@ def array_equivalent_object(left: object[:], right: object[:]) -> bool:
             if PyArray_Check(x) and PyArray_Check(y):
                 if not array_equivalent_object(x, y):
                     return False
+            elif (x is C_NA) ^ (y is C_NA):
+                return False
             elif not (PyObject_RichCompareBool(x, y, Py_EQ) or
                       (x is None or is_nan(x)) and (y is None or is_nan(y))):
                 return False
diff --git a/pandas/tests/util/test_assert_numpy_array_equal.py b/pandas/tests/util/test_assert_numpy_array_equal.py
index c8ae9ebdd..d29ddedd2 100644
--- a/pandas/tests/util/test_assert_numpy_array_equal.py
+++ b/pandas/tests/util/test_assert_numpy_array_equal.py
@@ -1,6 +1,7 @@
 import numpy as np
 import pytest
 
+import pandas as pd
 from pandas import Timestamp
 import pandas._testing as tm
 
@@ -175,3 +176,38 @@ def test_numpy_array_equal_copy_flag(other_type, check_same):
             tm.assert_numpy_array_equal(a, other, check_same=check_same)
     else:
         tm.assert_numpy_array_equal(a, other, check_same=check_same)
+
+
+def test_numpy_array_equal_contains_na():
+    # https://github.com/pandas-dev/pandas/issues/31881
+    a = np.array([True, False])
+    b = np.array([True, pd.NA], dtype=object)
+
+    msg = """numpy array are different
+
+numpy array values are different \\(50.0 %\\)
+\\[left\\]:  \\[True, False\\]
+\\[right\\]: \\[True, <NA>\\]"""
+
+    with pytest.raises(AssertionError, match=msg):
+        tm.assert_numpy_array_equal(a, b)
+
+
+def test_numpy_array_equal_identical_na(nulls_fixture):
+    a = np.array([nulls_fixture], dtype=object)
+
+    tm.assert_numpy_array_equal(a, a)
+
+
+def test_numpy_array_equal_different_na():
+    a = np.array([np.nan], dtype=object)
+    b = np.array([pd.NA], dtype=object)
+
+    msg = """numpy array are different
+
+numpy array values are different \\(100.0 %\\)
+\\[left\\]:  \\[nan\\]
+\\[right\\]: \\[<NA>\\]"""
+
+    with pytest.raises(AssertionError, match=msg):
+        tm.assert_numpy_array_equal(a, b)
