commit 8ea00724dee487e9b9fc80eb2dde77c17871aa00
Author: Jeff Reback <jeff@reback.net>
Date:   Fri Sep 11 08:48:04 2015 -0400

    DOC: doc note to advanced.rst for multi-index slicing

diff --git a/doc/source/advanced.rst b/doc/source/advanced.rst
index 973674fe6..76f8f6aa5 100644
--- a/doc/source/advanced.rst
+++ b/doc/source/advanced.rst
@@ -157,7 +157,6 @@ location at a particular level:
    index.get_level_values(0)
    index.get_level_values('second')
 
-
 Basic indexing on axis with MultiIndex
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
@@ -176,6 +175,35 @@ completely analogous way to selecting a column in a regular DataFrame:
 See :ref:`Cross-section with hierarchical index <advanced.xs>` for how to select
 on a deeper level.
 
+.. note::
+
+   The repr of a ``MultiIndex`` shows ALL the defined levels of an index, even
+   if the they are not actually used. When slicing an index, you may notice this.
+   For example:
+
+   .. ipython:: python
+
+      # original multi-index
+      df.columns
+
+      # sliced
+      df[['foo','qux']].columns
+
+   This is done to avoid a recomputation of the levels in order to make slicing
+   highly performant. If you want to see the actual used levels.
+
+   .. ipython:: python
+
+      df[['foo','qux']].columns.values
+
+      # for a specific level
+      df[['foo','qux']].columns.get_level_values(0)
+
+   To reconstruct the multiindex with only the used levels
+
+   .. ipython:: python
+
+      pd.MultiIndex.from_tuples(df[['foo','qux']].columns.values)
 
 Data alignment and using ``reindex``
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
