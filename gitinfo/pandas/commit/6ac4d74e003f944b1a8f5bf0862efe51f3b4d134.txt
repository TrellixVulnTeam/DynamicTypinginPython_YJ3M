commit 6ac4d74e003f944b1a8f5bf0862efe51f3b4d134
Author: jreback <jeff@reback.net>
Date:   Thu Apr 10 07:48:33 2014 -0400

    BUG: to_timedelta not properly converting some units (GH6855)

diff --git a/pandas/tseries/tests/test_timedeltas.py b/pandas/tseries/tests/test_timedeltas.py
index 628c278af..57d8bf562 100644
--- a/pandas/tseries/tests/test_timedeltas.py
+++ b/pandas/tseries/tests/test_timedeltas.py
@@ -199,6 +199,17 @@ class TestTimedeltas(tm.TestCase):
         expected = Series([ np.timedelta64(1,'D') ]*5)
         tm.assert_series_equal(result, expected)
 
+        # validate all units
+        # GH 6855
+        for unit in ['Y','M','W','D','y','w','d']:
+            result = to_timedelta(np.arange(5),unit=unit)
+            expected = Series([ np.timedelta64(i,unit.upper()) for i in np.arange(5).tolist() ])
+            tm.assert_series_equal(result, expected)
+        for unit in ['h','m','s','ms','us','ns','H','S','MS','US','NS']:
+            result = to_timedelta(np.arange(5),unit=unit)
+            expected = Series([ np.timedelta64(i,unit.lower()) for i in np.arange(5).tolist() ])
+            tm.assert_series_equal(result, expected)
+
         # these will error
         self.assertRaises(ValueError, lambda : to_timedelta(['1h']))
         self.assertRaises(ValueError, lambda : to_timedelta(['1m']))
diff --git a/pandas/tseries/timedeltas.py b/pandas/tseries/timedeltas.py
index cc01c26f7..0a5693cc5 100644
--- a/pandas/tseries/timedeltas.py
+++ b/pandas/tseries/timedeltas.py
@@ -40,6 +40,8 @@ def to_timedelta(arg, box=True, unit='ns'):
         if is_timedelta64_dtype(arg):
             value = arg.astype('timedelta64[ns]')
         elif is_integer_dtype(arg):
+            unit = _validate_timedelta_unit(unit)
+
             # these are shortcutable
             value = arg.astype('timedelta64[{0}]'.format(unit)).astype('timedelta64[ns]')
         else:
@@ -65,6 +67,15 @@ def to_timedelta(arg, box=True, unit='ns'):
     # ...so it must be a scalar value. Return scalar.
     return _coerce_scalar_to_timedelta_type(arg, unit=unit)
 
+def _validate_timedelta_unit(arg):
+    """ provide validation / translation for timedelta short units """
+
+    if re.search("Y|W|D",arg,re.IGNORECASE) or arg == 'M':
+        return arg.upper()
+    elif re.search("h|m|s|ms|us|ns",arg,re.IGNORECASE):
+        return arg.lower()
+    raise ValueError("invalid timedelta unit {0} provided".format(arg))
+
 _short_search = re.compile(
     "^\s*(?P<neg>-?)\s*(?P<value>\d*\.?\d*)\s*(?P<unit>d|s|ms|us|ns)?\s*$",re.IGNORECASE)
 _full_search = re.compile(
