commit 195550c7bdd051e4c0fa647678ac2bd3dd391809
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jan 24 18:23:50 2012 -0500

    BUG: fix handling of integer level names, caused downstream pivot_table bug #678

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 53fb44c0e..b71fb9aff 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1070,15 +1070,20 @@ class MultiIndex(Index):
         return np.dtype('O')
 
     def _get_level_number(self, level):
-        if not isinstance(level, int):
+        try:
             count = self.names.count(level)
             if count > 1:
                 raise Exception('The name %s occurs multiple times, use a '
                                 'level number' % level)
-
             level = self.names.index(level)
-        elif level < 0:
-            level += self.nlevels
+        except ValueError:
+            if not isinstance(level, int):
+                raise Exception('Level %s not found' % str(level))
+            elif level < 0:
+                level += self.nlevels
+            elif level >= self.nlevels:
+                raise ValueError('Index has only %d levels, not %d'
+                                 % (self.nlevels, level))
         return level
 
     @property
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index 8636922f8..45793931a 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -694,6 +694,12 @@ class TestMultiIndex(unittest.TestCase):
         self.index.names = ['foo', 'foo']
         self.assertRaises(Exception, self.index._get_level_number, 'foo')
 
+    def test_get_level_number_integer(self):
+        self.index.names = [1, 0]
+        self.assertEqual(self.index._get_level_number(1), 0)
+        self.assertEqual(self.index._get_level_number(0), 1)
+        self.assertRaises(Exception, self.index._get_level_number, 2)
+
     def test_from_arrays(self):
         arrays = []
         for lev, lab in zip(self.index.levels, self.index.labels):
diff --git a/pandas/tools/tests/test_pivot.py b/pandas/tools/tests/test_pivot.py
index 2195f56be..585cd6b3d 100644
--- a/pandas/tools/tests/test_pivot.py
+++ b/pandas/tools/tests/test_pivot.py
@@ -128,6 +128,23 @@ class TestPivotTable(unittest.TestCase):
             gmarg = table[item]['All', '']
             self.assertEqual(gmarg, self.data[item].mean())
 
+    def test_pivot_integer_columns(self):
+        # caused by upstream bug in unstack
+        import itertools
+        import datetime
+        import pandas
+
+        d = datetime.date.min
+        data = list(itertools.product(
+                ['foo', 'bar'], ['A', 'B', 'C'], ['x1', 'x2'],
+                [d + datetime.timedelta(i) for i in xrange(20)], [1.0]))
+        df = pandas.DataFrame(data)
+        table = df.pivot_table(values=4, rows=[0,1,3],cols=[2])
+
+        df2 = df.rename(columns=str)
+        table2 = df2.pivot_table(values='4', rows=['0','1','3'], cols=['2'])
+
+        tm.assert_frame_equal(table, table2)
 
 class TestCrosstab(unittest.TestCase):
 
