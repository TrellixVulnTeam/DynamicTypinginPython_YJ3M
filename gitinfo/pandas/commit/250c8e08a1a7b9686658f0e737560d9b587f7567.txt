commit 250c8e08a1a7b9686658f0e737560d9b587f7567
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Mar 27 22:51:06 2013 -0400

    BUG: fix bug when concatenating series with axis=1 and they have the same name. close #2797

diff --git a/RELEASE.rst b/RELEASE.rst
index 983c6e144..0a6d9b7c4 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -244,6 +244,8 @@ pandas 0.11.0
   - Fix bug creating date range from Timestamp with time zone and passing same
     time zone (GH2926_)
   - Add comparison operators to Period object (GH2781_)
+  - Fix bug when concatenating two Series into a DataFrame when they have the
+    same name (GH2797_)
 
 .. _GH622: https://github.com/pydata/pandas/issues/622
 .. _GH797: https://github.com/pydata/pandas/issues/797
@@ -280,6 +282,7 @@ pandas 0.11.0
 .. _GH2437: https://github.com/pydata/pandas/issues/2437
 .. _GH2793: https://github.com/pydata/pandas/issues/2793
 .. _GH2795: https://github.com/pydata/pandas/issues/2795
+.. _GH2797: https://github.com/pydata/pandas/issues/2797
 .. _GH2819: https://github.com/pydata/pandas/issues/2819
 .. _GH2845: https://github.com/pydata/pandas/issues/2845
 .. _GH2867: https://github.com/pydata/pandas/issues/2867
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index 9ab83cf82..87e3ab7f2 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -948,8 +948,10 @@ class _Concatenator(object):
             return Series(new_data, index=self.new_axes[0], name=name)
         elif self._is_series:
             data = dict(itertools.izip(xrange(len(self.objs)), self.objs))
-            tmpdf = DataFrame(data, index=self.new_axes[0])
-            tmpdf.columns = self.new_axes[1]
+            index, columns = self.new_axes
+            tmpdf = DataFrame(data, index=index)
+            if columns is not None:
+                tmpdf.columns = columns
             return tmpdf
         else:
             new_data = self._get_concatenated_data()
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index b5c205eb5..bc9d6f114 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -869,12 +869,12 @@ class TestMergeMulti(unittest.TestCase):
             left = DataFrame({'k1': np.array([0, 1, 2] * 8, dtype=dtype1),
                               'k2': ['foo', 'bar'] * 12,
                               'v': np.array(np.arange(24),dtype=np.int64) })
-            
+
             index = MultiIndex.from_tuples([(2, 'bar'), (1, 'foo')])
             right = DataFrame({'v2': np.array([5, 7], dtype=dtype2)}, index=index)
-            
+
             result = left.join(right, on=['k1', 'k2'])
-            
+
             expected = left.copy()
 
             if dtype2.kind == 'i':
@@ -882,7 +882,7 @@ class TestMergeMulti(unittest.TestCase):
             expected['v2'] = np.array(np.nan,dtype=dtype2)
             expected['v2'][(expected.k1 == 2) & (expected.k2 == 'bar')] = 5
             expected['v2'][(expected.k1 == 1) & (expected.k2 == 'foo')] = 7
-            
+
             tm.assert_frame_equal(result, expected)
 
         for d1 in [np.int64,np.int32,np.int16,np.int8,np.uint8]:
@@ -1681,6 +1681,13 @@ class TestConcatenate(unittest.TestCase):
         expected.columns=['same name', 'same name']
         assert_frame_equal(result, expected)
 
+    def test_concat_series_axis1_same_names_ignore_index(self):
+        dates = date_range('01-Jan-2013', '01-Jan-2014', freq='MS')[0:-1]
+        s1 = Series(randn(len(dates)), index=dates, name='value')
+        s2 = Series(randn(len(dates)), index=dates, name='value')
+
+        result = concat([s1, s2], axis=1, ignore_index=True)
+        self.assertTrue(np.array_equal(result.columns, [0, 1]))
 
 class TestOrderedMerge(unittest.TestCase):
 
