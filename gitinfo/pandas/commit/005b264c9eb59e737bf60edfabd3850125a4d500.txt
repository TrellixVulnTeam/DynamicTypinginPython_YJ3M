commit 005b264c9eb59e737bf60edfabd3850125a4d500
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jul 11 19:22:20 2012 -0400

    BUG: work around NumPy 1.6.1 datetime64 bug, close #1561

diff --git a/RELEASE.rst b/RELEASE.rst
index fa30d89e9..a58faa008 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -61,6 +61,7 @@ pandas 0.8.1
   - Selection of multiple SparseDataFrame columns by list in __getitem__ (#1585)
   - Override Index.tolist for compatibility with MultiIndex (#1576)
   - Fix hierarchical summing bug with MultiIndex of length 1 (#1568)
+  - Work around numpy.concatenate use/bug in Series.set_value (#1561)
 
 pandas 0.8.0
 ============
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 677721f72..d17b29a0d 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -742,7 +742,11 @@ copy : boolean, default False
             self.index._engine.set_value(self, label, value)
             return self
         except KeyError:
-            new_index = np.concatenate([self.index.values, [label]])
+            if len(self.index) == 0:
+                new_index = Index([label])
+            else:
+                new_index = self.index.insert(len(self), label)
+
             new_values = np.concatenate([self.values, [value]])
             return Series(new_values, index=new_index, name=self.name)
 
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 5f6a00a27..307bae7ac 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1691,8 +1691,22 @@ class TestDatetime64(unittest.TestCase):
         result = dti.join(empty)
         self.assert_(isinstance(result, DatetimeIndex))
 
-    # TODO: test merge & concat with datetime64 block
+    def test_series_set_value(self):
+        # #1561
 
+        dates = [datetime(2001, 1, 1), datetime(2001, 1, 2)]
+        index = DatetimeIndex(dates)
+
+        s = Series().set_value(dates[0], 1.)
+        s2 = s.set_value(dates[1], np.nan)
+
+        exp = Series([1., np.nan], index=index)
+
+        assert_series_equal(s2, exp)
+
+        # s = Series(index[:1], index[:1])
+        # s2 = s.set_value(dates[1], index[1])
+        # self.assert_(s2.values.dtype == 'M8[ns]')
 
 class TestSeriesDatetime64(unittest.TestCase):
 
