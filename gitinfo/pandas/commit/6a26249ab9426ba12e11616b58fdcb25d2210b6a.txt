commit 6a26249ab9426ba12e11616b58fdcb25d2210b6a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jul 19 17:21:42 2012 -0400

    BUG: fix broken BusinessMonthBegin logic close #1645

diff --git a/RELEASE.rst b/RELEASE.rst
index b31e94173..681055310 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -88,6 +88,9 @@ pandas 0.8.1
   - Don't lose index name on resampling (#1631)
   - Support python-dateutil version 2.1 (#1637)
   - Fix broken scatter_matrix axis labeling, esp. with time series (#1625)
+  - Fix cases where extra keywords weren't being passed on to matplotlib from
+    Series.plot (#1636)
+  - Fix BusinessMonthBegin logic for dates before 1st bday of month (#1645)
 
 pandas 0.8.0
 ============
@@ -207,6 +210,7 @@ pandas 0.8.0
 
 **API Changes**
 
+  - Rename `pandas._tseries` to `pandas.lib`
   - Rename Factor to Categorical and add improvements. Numerous Categorical bug
     fixes
   - Frequency name overhaul, WEEKDAY/EOM and rules with @
@@ -1728,12 +1732,6 @@ Thanks
 pandas 0.3.0
 ============
 
-This major release of pandas represents approximately 1 year of continuous
-development work and brings with it many new features, bug fixes, speed
-enhancements, and general quality-of-life improvements. The most significant
-change from the 0.2 release has been the completion of a rigorous unit test
-suite covering all of the core functionality.
-
 Release notes
 -------------
 
@@ -1741,79 +1739,51 @@ Release notes
 
 **New features / modules**
 
-* DataFrame / DataMatrix classes
-
- * `corrwith` function to compute column- or row-wise correlations between two
-   objects
- * Can boolean-index DataFrame objects, e.g. df[df > 2] = 2, px[px > last_px] = 0
- * Added comparison magic methods (__lt__, __gt__, etc.)
- * Flexible explicit arithmetic methods (add, mul, sub, div, etc.)
- * Added `reindex_like` method
-
-* WidePanel
-
- * Added `reindex_like` method
-
-* `pandas.io`: IO utilities
-
-  * `pandas.io.sql` module
-
-    * Convenience functions for accessing SQL-like databases
-
-  * `pandas.io.pytables` module
-
-   * Added (still experimental) HDFStore class for storing pandas data
-     structures using HDF5 / PyTables
-
-* `pandas.core.datetools`
-
-  * Added WeekOfMonth date offset
-
-* `pandas.rpy` (experimental) module created, provide some interfacing /
-  conversion between rpy2 and pandas
+  - `corrwith` function to compute column- or row-wise correlations between two
+	DataFrame objects
+  - Can boolean-index DataFrame objects, e.g. df[df > 2] = 2, px[px > last_px] = 0
+  - Added comparison magic methods (__lt__, __gt__, etc.)
+  - Flexible explicit arithmetic methods (add, mul, sub, div, etc.)
+  - Added `reindex_like` method
+  - Added `reindex_like` method to WidePanel
+  - Convenience functions for accessing SQL-like databases in `pandas.io.sql`
+	module
+  - Added (still experimental) HDFStore class for storing pandas data
+	structures using HDF5 / PyTables in `pandas.io.pytables` module
+  - Added WeekOfMonth date offset
+  - `pandas.rpy` (experimental) module created, provide some interfacing /
+   conversion between rpy2 and pandas
 
 **Improvements**
 
-* Unit test coverage: 100% line coverage of core data structures
-
-* Speed enhancement to rolling_{median, max, min}
-
-* Column ordering between DataFrame and DataMatrix is now consistent: before
-  DataFrame would not respect column order
-
-* Improved {Series, DataFrame}.plot methods to be more flexible (can pass
-  matplotlib Axis arguments, plot DataFrame columns in multiple subplots, etc.)
+  - Unit test coverage: 100% line coverage of core data structures
+  - Speed enhancement to rolling_{median, max, min}
+  - Column ordering between DataFrame and DataMatrix is now consistent: before
+	DataFrame would not respect column order
+  - Improved {Series, DataFrame}.plot methods to be more flexible (can pass
+	matplotlib Axis arguments, plot DataFrame columns in multiple subplots,
+	etc.)
 
 **API Changes**
 
-* Exponentially-weighted moment functions in `pandas.stats.moments`
-  have a more consistent API and accept a min_periods argument like
-  their regular moving counterparts.
-
-* **fillMethod** argument in Series, DataFrame changed to **method**,
-  `FutureWarning` added.
-
-* **fill** method in Series, DataFrame/DataMatrix, WidePanel renamed to
-  **fillna**, `FutureWarning` added to **fill**
-
-* Renamed **DataFrame.getXS** to **xs**, `FutureWarning` added
-
-* Removed **cap** and **floor** functions from DataFrame, renamed to
-  **clip_upper** and **clip_lower** for consistency with NumPy
+  - Exponentially-weighted moment functions in `pandas.stats.moments` have a
+	more consistent API and accept a min_periods argument like their regular
+	moving counterparts.
+  - **fillMethod** argument in Series, DataFrame changed to **method**,
+	`FutureWarning` added.
+  - **fill** method in Series, DataFrame/DataMatrix, WidePanel renamed to
+	**fillna**, `FutureWarning` added to **fill**
+  - Renamed **DataFrame.getXS** to **xs**, `FutureWarning` added
+  - Removed **cap** and **floor** functions from DataFrame, renamed to
+	**clip_upper** and **clip_lower** for consistency with NumPy
 
 **Bug fixes**
 
-* Fixed bug in IndexableSkiplist Cython code that was breaking
-  rolling_max function
-
-* Numerous numpy.int64-related indexing fixes
-
-* Several NumPy 1.4.0 NaN-handling fixes
-
-* Bug fixes to pandas.io.parsers.parseCSV
-
-* Fixed `DateRange` caching issue with unusual date offsets
-
-* Fixed bug in `DateRange.union`
-
-* Fixed corner case in `IndexableSkiplist` implementation
+  - Fixed bug in IndexableSkiplist Cython code that was breaking
+	rolling_max function
+  - Numerous numpy.int64-related indexing fixes
+  - Several NumPy 1.4.0 NaN-handling fixes
+  - Bug fixes to pandas.io.parsers.parseCSV
+  - Fixed `DateRange` caching issue with unusual date offsets
+  - Fixed bug in `DateRange.union`
+  - Fixed corner case in `IndexableSkiplist` implementation
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index e0045027c..473c70f9a 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -144,12 +144,12 @@ class DatetimeIndex(Int64Index):
             freq = kwds['offset']
             warn = True
 
-        infer_freq = False
+        freq_infer = False
         if not isinstance(freq, DateOffset):
             if freq != 'infer':
                 freq = to_offset(freq)
             else:
-                infer_freq = True
+                freq_infer = True
                 freq = None
 
         if warn:
@@ -232,13 +232,13 @@ class DatetimeIndex(Int64Index):
         subarr.tz = tz
 
         if verify_integrity and len(subarr) > 0:
-            if offset is not None and not infer_freq:
+            if offset is not None and not freq_infer:
                 inferred = subarr.inferred_freq
                 if inferred != offset.freqstr:
                     raise ValueError('Dates do not conform to passed '
                                      'frequency')
 
-        if infer_freq:
+        if freq_infer:
             inferred = subarr.inferred_freq
             if inferred:
                 subarr.offset = to_offset(inferred)
diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index 0cd36a112..68adf2d53 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -1,15 +1,9 @@
 from datetime import datetime, timedelta
 
-import numpy as np
-
-from pandas.core.common import _count_not_none
 from pandas.tseries.tools import to_datetime
-from pandas.util.decorators import cache_readonly
 
 # import after tools, dateutil check
 from dateutil.relativedelta import relativedelta
-
-from pandas.lib import Timestamp
 import pandas.lib as lib
 
 __all__ = ['Day', 'BusinessDay', 'BDay',
@@ -431,9 +425,12 @@ class BusinessMonthBegin(DateOffset, CacheableOffset):
         wkday, _ = lib.monthrange(other.year, other.month)
         first = _get_firstbday(wkday)
 
-        if other.day > first and n<=0:
+        if other.day > first and n <= 0:
             # as if rolled forward already
             n += 1
+        elif other.day < first and n > 0:
+            other = other + timedelta(days=first-other.day)
+            n -= 1
 
         other = other + relativedelta(months=n)
         wkday, _ = lib.monthrange(other.year, other.month)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index a6bbeb1e7..1415a126c 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -1840,6 +1840,13 @@ class TestSeriesDatetime64(unittest.TestCase):
         result = rng.intersection(rng2)
         self.assert_(result.equals(rng))
 
+    def test_date_range_bms_bug(self):
+        # #1645
+        rng = date_range('1/1/2000', periods=10, freq='BMS')
+
+        ex_first = Timestamp('2000-01-03')
+        self.assertEquals(rng[0], ex_first)
+
 class TestTimestamp(unittest.TestCase):
 
     def test_basics_nanos(self):
