commit 8093941f6055d182949f0410dac521f326f4b523
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Jun 15 11:52:26 2012 -0400

    ENH: filter_func keyword to DataFrame.update, related to #1477

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index c903a9dd0..150b8856b 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3143,7 +3143,7 @@ class DataFrame(NDFrame):
         combiner = lambda x, y: np.where(isnull(x), y, x)
         return self.combine(other, combiner)
 
-    def update(self, other, join='left', overwrite=True):
+    def update(self, other, join='left', overwrite=True, filter_func=None):
         """
         Modify DataFrame in place using non-NA values from passed
         DataFrame. Aligns on indices
@@ -3153,8 +3153,10 @@ class DataFrame(NDFrame):
         other : DataFrame
         join : {'left', 'right', 'outer', 'inner'}, default 'left'
         overwrite : boolean, default True
-            If True then overwrite values for common keys in the calling
-            frame
+            If True then overwrite values for common keys in the calling frame
+        filter_func : callable(1d-array) -> 1d-array<boolean>, default None
+            Can choose to replace values other than NA. Return True for values
+            that should be updated
         """
         if join != 'left':
             raise NotImplementedError
@@ -3163,10 +3165,13 @@ class DataFrame(NDFrame):
         for col in self.columns:
             this = self[col].values
             that = other[col].values
-            if overwrite:
-                mask = isnull(that)
+            if filter_func is not None:
+                mask = -filter_func(this) | isnull(that)
             else:
-                mask = notnull(this)
+                if overwrite:
+                    mask = isnull(that)
+                else:
+                    mask = notnull(this)
             self[col] = np.where(mask, this, that)
 
     #----------------------------------------------------------------------
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index d61ce7df0..669ce4e91 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5252,6 +5252,24 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                               [1.5, nan, 3.]])
         assert_frame_equal(df, expected)
 
+    def test_update_filtered(self):
+        df = DataFrame([[1.5, nan, 3.],
+                        [1.5, nan, 3.],
+                        [1.5, nan, 3],
+                        [1.5, nan, 3]])
+
+        other = DataFrame([[3.6, 2., np.nan],
+                           [np.nan, np.nan, 7]], index=[1, 3])
+
+        df.update(other, filter_func=lambda x: x > 2)
+
+        expected = DataFrame([[1.5, nan, 3],
+                              [1.5, nan, 3],
+                              [1.5, nan, 3],
+                              [1.5, nan, 7.]])
+        assert_frame_equal(df, expected)
+
+
     def test_combineAdd(self):
         # trivial
         comb = self.frame.combineAdd(self.frame)
