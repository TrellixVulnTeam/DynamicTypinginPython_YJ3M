commit 752c9b12e66a9e1aa6ccb711b69d24d397c07114
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Aug 27 21:12:46 2011 -0400

    DOC: adding API file, filling things out

diff --git a/doc/source/api.rst b/doc/source/api.rst
new file mode 100644
index 000000000..522d67ec5
--- /dev/null
+++ b/doc/source/api.rst
@@ -0,0 +1,225 @@
+.. currentmodule:: pandas
+.. _api:
+
+***********
+API Listing
+***********
+
+Series
+------
+
+DataFrame
+---------
+
+Attributes
+~~~~~~~~~~
+
+Conversion / Constructors
+~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.__init__
+   DataFrame.astype
+   DataFrame.copy
+
+Indexing, iteration
+~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.ix
+   DataFrame.insert
+   DataFrame.__iter__
+   DataFrame.iteritems
+   DataFrame.pop
+   DataFrame.xs
+
+Binary operator functions
+~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.add
+   DataFrame.div
+   DataFrame.mul
+   DataFrame.sub
+   DataFrame.radd
+   DataFrame.rdiv
+   DataFrame.rmul
+   DataFrame.rsub
+   DataFrame.combine
+
+Function application, GroupBy
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.apply
+   DataFrame.applymap
+   DataFrame.groupby
+
+Data / attributes
+~~~~~~~~~~~~~~~~~
+.. .. autosummary::
+..    :toctree: generated/
+
+..    DataFrame.as_matrix
+..    DataFrame.values
+..    DataFrame.axes
+..    DataFrame.columns
+..    DataFrame.ndim
+..    DataFrame.index
+..    DataFrame.shape
+
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.as_matrix
+   DataFrame.values
+   DataFrame.axes
+   DataFrame.ndim
+   DataFrame.shape
+
+Alignment / Selection / Reindexing
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.drop
+   DataFrame.dropna
+   DataFrame.fillna
+   DataFrame.filter
+   DataFrame.rename
+   DataFrame.reindex
+   DataFrame.reindex_like
+   DataFrame.select
+   DataFrame.take
+   DataFrame.truncate
+   DataFrame.head
+   DataFrame.tail
+
+Reshaping, sorting, transposing
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.sort
+   DataFrame.delevel
+   DataFrame.pivot
+   DataFrame.sortlevel
+   DataFrame.stack
+   DataFrame.unstack
+   DataFrame.T
+   DataFrame.transpose
+
+Computations
+~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.clip
+   DataFrame.clip_lower
+   DataFrame.clip_upper
+   DataFrame.corr
+   DataFrame.corrwith
+   DataFrame.count
+   DataFrame.cumprod
+   DataFrame.cumsum
+   DataFrame.describe
+   DataFrame.diff
+   DataFrame.mad
+   DataFrame.max
+   DataFrame.mean
+   DataFrame.median
+   DataFrame.min
+   DataFrame.product
+   DataFrame.quantile
+   DataFrame.skew
+   DataFrame.sum
+   DataFrame.std
+   DataFrame.var
+
+Combining / joining / merging
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.join
+   DataFrame.append
+   DataFrame.combineAdd
+   DataFrame.combine_first
+   DataFrame.combineMult
+
+Time series-related
+~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.asfreq
+   DataFrame.shift
+   DataFrame.first_valid_index
+   DataFrame.last_valid_index
+
+Plotting
+~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.hist
+   DataFrame.plot
+
+Serialization / IO / Conversion
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.from_csv
+   DataFrame.from_records
+   DataFrame.to_csv
+   DataFrame.to_dict
+   DataFrame.to_records
+   DataFrame.to_sparse
+   DataFrame.save
+   DataFrame.load
+   DataFrame.toString
+   DataFrame.info
+
+Deprecated (death row)
+~~~~~~~~~~~~~~~~~~~~~~
+.. autosummary::
+   :toctree: generated/
+
+   DataFrame.asMatrix
+   DataFrame.cols
+   DataFrame.combineFirst
+   DataFrame.dropEmptyRows
+   DataFrame.dropIncompleteRows
+   DataFrame.getXS
+   DataFrame.merge
+   DataFrame.rows
+   DataFrame.fromRecords
+   DataFrame.fromcsv
+   DataFrame.tapply
+   DataFrame.tgroupby
+   DataFrame.toRecords
+   DataFrame.toCSV
+   DataFrame.toDataMatrix
+   DataFrame.toDict
+   DataFrame.fromRecords
+
+WidePanel
+---------
+
+Input / Output
+--------------
+
+File IO
+~~~~~~~
+
+HDFStore: PyTables (HDF5)
+~~~~~~~~~~~~~~~~~~~~~~~~~
+
+Moving window statistics
+------------------------
+
diff --git a/doc/source/basics.rst b/doc/source/basics.rst
index 545a30416..ecdb74775 100644
--- a/doc/source/basics.rst
+++ b/doc/source/basics.rst
@@ -16,7 +16,7 @@ objects. To get started, import numpy and load pandas into your namespace:
    from pandas import *
 
 Here is a basic tenet to keep in mind: **data alignment is intrinsic**. Link
-between label and datum will not be broken unless done so explicitly by you.
+between labels and data will not be broken unless done so explicitly by you.
 
 Series
 ------
diff --git a/doc/source/comparison_with_r.rst b/doc/source/comparison_with_r.rst
new file mode 100644
index 000000000..575976805
--- /dev/null
+++ b/doc/source/comparison_with_r.rst
@@ -0,0 +1,38 @@
+.. currentmodule:: pandas
+.. _compare_with_r:
+
+*******************************
+Comparison with R / R libraries
+*******************************
+
+Since pandas aims to provide a lot of the data manipulation and analysis
+functionality that people use R for, this page was started to provide a more
+detailed look at the R language and it's many 3rd party libraries as they
+relate to pandas. In offering comparisons with R and CRAN libraries, we care
+about the following things:
+
+  - **Functionality / flexibility**: what can / cannot be done with each tool
+  - **Performance**: how fast are operations. Hard numbers / benchmarks are
+    preferable
+  - **Ease-of-use**: is one tool easier or harder to use (you may have to be
+    the judge of this given side-by-side code comparisons)
+
+As I do not have an encyclopedic knowledge of R packages, feel free to suggest
+additional CRAN packages to add to this list. This is also here to offer a big
+of a translation guide for users of these R packages.
+
+data.frame
+----------
+
+zoo
+---
+
+xts
+---
+
+plyr
+----
+
+reshape / reshape2
+------------------
+
diff --git a/doc/source/index.rst b/doc/source/index.rst
index 7313880b7..9d66dfa0a 100755
--- a/doc/source/index.rst
+++ b/doc/source/index.rst
@@ -105,9 +105,10 @@ See the package overview for more detail about what's in the library.
 
 .. toctree::
     :hidden:
-    :maxdepth: 3
+    :maxdepth: 2
 
     install
+    faq
     overview
     basics
     indexing
@@ -117,10 +118,11 @@ See the package overview for more detail about what's in the library.
     reshaping
     timeseries
     datetools
-	visualization
+    visualization
     stats
     io
     sparse
     r_interface
     related
-    faq
+    comparison_with_r
+    api
diff --git a/doc/source/sparse.rst b/doc/source/sparse.rst
new file mode 100644
index 000000000..5161e293e
--- /dev/null
+++ b/doc/source/sparse.rst
@@ -0,0 +1,6 @@
+.. currentmodule:: pandas
+.. _spares:
+
+**********************
+Sparse data structures
+**********************
diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
new file mode 100644
index 000000000..d519a6599
--- /dev/null
+++ b/doc/source/visualization.rst
@@ -0,0 +1,7 @@
+.. currentmodule:: pandas
+.. _visualization:
+
+************************
+Plotting with matplotlib
+************************
+
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 180688fa2..5e02c3279 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -100,34 +100,6 @@ def comp_method(func, name):
 
 
 class DataFrame(NDFrame):
-    """
-    Two-dimensional size-mutable, potentially heterogeneous tabular data
-    structure with labeled axes (rows and columns). Arithmetic operations align
-    on both row and column labels. Can be thought of as a dict-like container
-    for Series objects. The primary pandas data structure
-
-    Parameters
-    ----------
-    data : numpy ndarray (structured or homogeneous), dict, or DataFrame
-        Dict can contain Series, arrays, constants, or list-like objects
-    index : Index or array-like
-        Index to use for resulting frame. Will default to np.arange(n) if no
-        indexing information part of input data and no index provided
-    columns : Index or array-like
-        Will default to np.arange(n) if not column labels provided
-    dtype : dtype, default None
-        Data type to force, otherwise infer
-    copy : boolean, default False
-        Copy data from inputs. Only affects DataFrame / 2d ndarray input
-
-    Examples
-    --------
-    >>> d = {'col1' : ts1, 'col2' : ts2}
-    >>> df = DataFrame(data=d, index=index)
-    >>> df2 = DataFrame(np.random.randn(10, 5))
-    >>> df3 = DataFrame(np.random.randn(10, 5),
-                        columns=['a', 'b', 'c', 'd', 'e'])
-    """
     _auto_consolidate = True
 
     _AXIS_NUMBERS = {
@@ -139,6 +111,33 @@ class DataFrame(NDFrame):
 
     def __init__(self, data=None, index=None, columns=None, dtype=None,
                  copy=False):
+        """Two-dimensional size-mutable, potentially heterogeneous tabular data
+        structure with labeled axes (rows and columns). Arithmetic operations
+        align on both row and column labels. Can be thought of as a dict-like
+        container for Series objects. The primary pandas data structure
+
+        Parameters
+        ----------
+        data : numpy ndarray (structured or homogeneous), dict, or DataFrame
+            Dict can contain Series, arrays, constants, or list-like objects
+        index : Index or array-like
+            Index to use for resulting frame. Will default to np.arange(n) if no
+            indexing information part of input data and no index provided
+        columns : Index or array-like
+            Will default to np.arange(n) if not column labels provided
+        dtype : dtype, default None
+            Data type to force, otherwise infer
+        copy : boolean, default False
+            Copy data from inputs. Only affects DataFrame / 2d ndarray input
+
+        Examples
+        --------
+        >>> d = {'col1' : ts1, 'col2' : ts2}
+        >>> df = DataFrame(data=d, index=index)
+        >>> df2 = DataFrame(np.random.randn(10, 5))
+        >>> df3 = DataFrame(np.random.randn(10, 5),
+                            columns=['a', 'b', 'c', 'd', 'e'])
+        """
 
         if data is None:
             data = {}
@@ -409,7 +408,7 @@ class DataFrame(NDFrame):
         return np.rec.fromarrays(arrays, names=names)
 
     @classmethod
-    def fromcsv(cls, path, header=0, delimiter=',', index_col=0):
+    def from_csv(cls, path, header=0, delimiter=',', index_col=0):
         """
         Read delimited file into DataFrame
 
@@ -440,7 +439,7 @@ class DataFrame(NDFrame):
         """
         Convert to SparseDataFrame
 
-        Parametpers
+        Parameters
         ----------
         fill_value : float, default NaN
         kind : {'block', 'integer'}
@@ -2710,6 +2709,12 @@ class DataFrame(NDFrame):
                       "instead", FutureWarning)
         return cls.from_records(*args, **kwargs)
 
+    @classmethod
+    def fromcsv(cls, *args, **kwargs):  # pragma: no cover
+        warnings.warn("fromcsv is deprecated. Use 'from_csv' "
+                      "instead", FutureWarning)
+        return cls.from_csv(*args, **kwargs)
+
     combineFirst = deprecate('combineFirst', combine_first)
     getXS = deprecate('getXS', xs)
     merge = deprecate('merge', join)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 6cdb5634d..2c95ceae3 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1948,9 +1948,9 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         for idx in broadcasted.index:
             self.assert_((broadcasted.xs(idx) == agged[idx]).all())
 
-    def test_tapply(self):
+    def test_apply_axis1(self):
         d = self.frame.index[0]
-        tapplied = self.frame.tapply(np.mean)
+        tapplied = self.frame.apply(np.mean, axis=1)
         self.assertEqual(tapplied[d], np.mean(self.frame.xs(d)))
 
     def test_applymap(self):
