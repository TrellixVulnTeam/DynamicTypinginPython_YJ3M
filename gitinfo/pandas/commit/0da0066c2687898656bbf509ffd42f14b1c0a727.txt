commit 0da0066c2687898656bbf509ffd42f14b1c0a727
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Jul 20 15:10:14 2012 -0400

    BUG: fix merge bug with left joins on length-0 DataFrame, close #1628

diff --git a/RELEASE.rst b/RELEASE.rst
index 75fc7d580..808950d60 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -97,6 +97,7 @@ pandas 0.8.1
   - Fix Series.max/min and Series.describe on len-0 series (#1650)
   - Handle None values in dict passed to concat (#1649)
   - Fix Series.interpolate with method='values' and DatetimeIndex (#1646)
+  - Fix IndexError in left merges on a DataFrame with 0-length (#1628)
 
 pandas 0.8.0
 ============
diff --git a/pandas/src/join.pyx b/pandas/src/join.pyx
index 06d00fe2e..94ecfbf84 100644
--- a/pandas/src/join.pyx
+++ b/pandas/src/join.pyx
@@ -186,8 +186,14 @@ def full_outer_join(ndarray[int64_t] left, ndarray[int64_t] right,
 def _get_result_indexer(sorter, indexer):
     if indexer.dtype != np.int_:
         indexer = indexer.astype(np.int_)
-    res = sorter.take(indexer)
-    np.putmask(res, indexer == -1, -1)
+    if len(sorter) > 0:
+        res = sorter.take(indexer)
+        np.putmask(res, indexer == -1, -1)
+    else:
+        # length-0 case
+        res = np.empty(len(indexer), dtype=np.int64)
+        res.fill(-1)
+
     return res
 
 
diff --git a/pandas/tools/merge.py b/pandas/tools/merge.py
index 12bd76a8e..2d3e459e0 100644
--- a/pandas/tools/merge.py
+++ b/pandas/tools/merge.py
@@ -294,6 +294,7 @@ class _MergeOperation(object):
         right_keys = []
         join_names = []
         right_drop = []
+        left_drop = []
         left, right = self.left, self.right
 
         is_lkey = lambda x: isinstance(x, np.ndarray) and len(x) == len(left)
@@ -314,7 +315,11 @@ class _MergeOperation(object):
                     if not is_rkey(rk):
                         right_keys.append(right[rk].values)
                         if lk == rk:
-                            right_drop.append(rk)
+                            # avoid key upcast in corner case (length-0)
+                            if len(left) > 0:
+                                right_drop.append(rk)
+                            else:
+                                left_drop.append(lk)
                     else:
                         right_keys.append(rk)
                     left_keys.append(left[lk].values)
@@ -348,6 +353,9 @@ class _MergeOperation(object):
             else:
                 left_keys = [self.left.index.values]
 
+        if left_drop:
+            self.left = self.left.drop(left_drop, axis=1)
+
         if right_drop:
             self.right = self.right.drop(right_drop, axis=1)
 
diff --git a/pandas/tools/tests/test_merge.py b/pandas/tools/tests/test_merge.py
index 72ed06018..53b9503f1 100644
--- a/pandas/tools/tests/test_merge.py
+++ b/pandas/tools/tests/test_merge.py
@@ -648,6 +648,17 @@ class TestMerge(unittest.TestCase):
                         index=[dt2, dt2, dt3, dt, dt])
         _check_merge(df1, df2)
 
+    def test_left_merge_empty_dataframe(self):
+        left = DataFrame({'key': [1], 'value': [2]})
+        right = DataFrame({'key': []})
+
+        result = merge(left, right, on='key', how='left')
+        assert_frame_equal(result, left)
+
+        result = merge(right, left, on='key', how='right')
+        assert_frame_equal(result, left)
+
+
 def _check_merge(x, y):
     for how in ['inner', 'left', 'outer']:
         result = x.join(y, how=how)
