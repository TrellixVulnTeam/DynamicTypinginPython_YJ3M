commit cd5670850f18e81317ce78f2c1e69aad10f56809
Author: Paul Siegel <pwsiegel@gmail.com>
Date:   Sun Nov 17 19:33:34 2019 -0500

    BUG: `RollingGroupBy.quantile` ignores `interpolation` keyword argument (#29567)

diff --git a/doc/source/whatsnew/v1.0.0.rst b/doc/source/whatsnew/v1.0.0.rst
index 39f33c3bb..cb68bd0e7 100644
--- a/doc/source/whatsnew/v1.0.0.rst
+++ b/doc/source/whatsnew/v1.0.0.rst
@@ -437,6 +437,7 @@ Groupby/resample/rolling
 - Bug in :meth:`DataFrame.groupby` not offering selection by column name when ``axis=1`` (:issue:`27614`)
 - Bug in :meth:`DataFrameGroupby.agg` not able to use lambda function with named aggregation (:issue:`27519`)
 - Bug in :meth:`DataFrame.groupby` losing column name information when grouping by a categorical column (:issue:`28787`)
+- Bug in :meth:`DataFrameGroupBy.rolling().quantile()` ignoring ``interpolation`` keyword argument (:issue:`28779`)
 
 Reshaping
 ^^^^^^^^^
diff --git a/pandas/core/window/rolling.py b/pandas/core/window/rolling.py
index fd221c53e..bec350f6b 100644
--- a/pandas/core/window/rolling.py
+++ b/pandas/core/window/rolling.py
@@ -1499,7 +1499,9 @@ class _Rolling_and_Expanding(_Rolling):
                     interpolation,
                 )
 
-        return self._apply(f, "quantile", quantile=quantile, **kwargs)
+        return self._apply(
+            f, "quantile", quantile=quantile, interpolation=interpolation, **kwargs
+        )
 
     _shared_docs[
         "cov"
diff --git a/pandas/tests/window/test_grouper.py b/pandas/tests/window/test_grouper.py
index c278897e1..189942bc0 100644
--- a/pandas/tests/window/test_grouper.py
+++ b/pandas/tests/window/test_grouper.py
@@ -60,7 +60,6 @@ class TestGrouperGrouping:
         r = g.rolling(window=4)
 
         for f in ["sum", "mean", "min", "max", "count", "kurt", "skew"]:
-
             result = getattr(r, f)()
             expected = g.apply(lambda x: getattr(x.rolling(4), f)())
             tm.assert_frame_equal(result, expected)
@@ -70,8 +69,16 @@ class TestGrouperGrouping:
             expected = g.apply(lambda x: getattr(x.rolling(4), f)(ddof=1))
             tm.assert_frame_equal(result, expected)
 
-        result = r.quantile(0.5)
-        expected = g.apply(lambda x: x.rolling(4).quantile(0.5))
+    @pytest.mark.parametrize(
+        "interpolation", ["linear", "lower", "higher", "midpoint", "nearest"]
+    )
+    def test_rolling_quantile(self, interpolation):
+        g = self.frame.groupby("A")
+        r = g.rolling(window=4)
+        result = r.quantile(0.4, interpolation=interpolation)
+        expected = g.apply(
+            lambda x: x.rolling(4).quantile(0.4, interpolation=interpolation)
+        )
         tm.assert_frame_equal(result, expected)
 
     def test_rolling_corr_cov(self):
@@ -142,8 +149,16 @@ class TestGrouperGrouping:
             expected = g.apply(lambda x: getattr(x.expanding(), f)(ddof=0))
             tm.assert_frame_equal(result, expected)
 
-        result = r.quantile(0.5)
-        expected = g.apply(lambda x: x.expanding().quantile(0.5))
+    @pytest.mark.parametrize(
+        "interpolation", ["linear", "lower", "higher", "midpoint", "nearest"]
+    )
+    def test_expanding_quantile(self, interpolation):
+        g = self.frame.groupby("A")
+        r = g.expanding()
+        result = r.quantile(0.4, interpolation=interpolation)
+        expected = g.apply(
+            lambda x: x.expanding().quantile(0.4, interpolation=interpolation)
+        )
         tm.assert_frame_equal(result, expected)
 
     def test_expanding_corr_cov(self):
