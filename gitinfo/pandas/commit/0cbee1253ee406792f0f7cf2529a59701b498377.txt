commit 0cbee1253ee406792f0f7cf2529a59701b498377
Author: Paddy Mullen <paddy@paddymullen.com>
Date:   Sun Jun 10 14:45:08 2012 -0400

     fixes #826,  adds a a test that asserts yahoo is minimally functional as a datasource

diff --git a/pandas/io/data.py b/pandas/io/data.py
index ed92d5e3d..dec2d3d86 100644
--- a/pandas/io/data.py
+++ b/pandas/io/data.py
@@ -67,9 +67,9 @@ def _sanitize_dates(start, end):
     return start, end
 
 def get_quote_yahoo(symbols):
-    """ 
+    """
     Get current yahoo quote
-    
+
     Returns a DataFrame
     """
     if not isinstance(symbols,list):
@@ -77,19 +77,19 @@ def get_quote_yahoo(symbols):
     # for codes see: http://www.gummy-stuff.org/Yahoo-data.htm
     codes = {'symbol':'s','last':'l1','change_pct':'p2','PE':'r','time':'t1','short_ratio':'s7'}
     request = str.join('',codes.values()) # code request string
-    header = codes.keys()   
-    
+    header = codes.keys()
+
     data = dict(zip(codes.keys(),[[] for i in range(len(codes))]))
-    
+
     urlStr = 'http://finance.yahoo.com/d/quotes.csv?s=%s&f=%s' % (str.join('+',symbols), request)
-    
+
     try:
         lines = urllib2.urlopen(urlStr).readlines()
     except Exception, e:
         s = "Failed to download:\n{0}".format(e);
         print s
         return None
-        
+
     for line in lines:
         fields = line.strip().split(',')
         #print fields
@@ -103,7 +103,7 @@ def get_quote_yahoo(symbols):
                     data[header[i]].append(np.nan)
 
     idx = data.pop('symbol')
-    
+
     return DataFrame(data,index=idx)
 
 def get_data_yahoo(name=None, start=None, end=None):
@@ -130,9 +130,15 @@ def get_data_yahoo(name=None, start=None, end=None):
       '&f=%s' % end.year + \
       '&g=d' + \
       '&ignore=.csv'
+    for i in range(0,3):
+        resp =  urllib.urlopen(url)
+        if resp.code == 200:
+            lines = resp.read()
+            return read_csv(
+                StringIO(lines), index_col=0, parse_dates=True)[::-1]
+    raise Exception("after 3 tries, Yahoo did not return a 200 for url %s" %url)
+
 
-    lines = urllib.urlopen(url).read()
-    return read_csv(StringIO(lines), index_col=0, parse_dates=True)[::-1]
 
 def get_data_fred(name=None, start=dt.datetime(2010, 1, 1),
                   end=dt.datetime.today()):
@@ -181,4 +187,3 @@ def get_data_famafrench(name, start=None, end=None):
             datasets[i] = DataFrame(dataset, index, columns=header)
 
     return datasets
-
diff --git a/pandas/io/tests/test_yahoo.py b/pandas/io/tests/test_yahoo.py
new file mode 100644
index 000000000..9f123e016
--- /dev/null
+++ b/pandas/io/tests/test_yahoo.py
@@ -0,0 +1,30 @@
+from pandas.util.py3compat import StringIO, BytesIO
+from datetime import datetime
+import csv
+import os
+import sys
+import re
+import unittest
+import pandas.io.data as pd
+import nose
+
+class TestYahoo(unittest.TestCase):
+
+    def test_yahoo(self):
+        """asserts that yahoo is minimally working and that it throws
+        an excecption when DataReader can't get a 200 response from
+        yahoo """
+        start = datetime(2010,1,1)
+        end = datetime(2012,1,24)
+        self.assertEquals(
+            pd.DataReader("F", 'yahoo', start, end)['Close'][-1],
+            12.82)
+
+        self.assertRaises(
+            Exception,
+            lambda: pd.DataReader("NON EXISTENT TICKER", 'yahoo', start, end))
+
+if __name__ == '__main__':
+    import nose
+    nose.runmodule(argv=[__file__,'-vvs','-x','--pdb', '--pdb-failure'],
+                   exit=False)
