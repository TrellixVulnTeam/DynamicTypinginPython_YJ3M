commit 560ad35b850ce680e24e561ea1b9e65bd6e06730
Author: topper-123 <contribute@tensortable.com>
Date:   Sun May 5 06:17:39 2019 +0200

    CLN: clean compat.re_type (#26279)
    
    xref gh-25725 and gh-26252

diff --git a/pandas/compat/__init__.py b/pandas/compat/__init__.py
index 32b3d318d..8ff319802 100644
--- a/pandas/compat/__init__.py
+++ b/pandas/compat/__init__.py
@@ -13,7 +13,6 @@ Other items:
 import platform
 import struct
 import sys
-from typing import Pattern
 
 PY36 = sys.version_info >= (3, 6)
 PY37 = sys.version_info >= (3, 7)
@@ -74,9 +73,6 @@ def raise_with_traceback(exc, traceback=Ellipsis):
     raise exc.with_traceback(traceback)
 
 
-re_type = Pattern
-
-
 # https://github.com/pandas-dev/pandas/pull/9123
 def is_platform_little_endian():
     """ am I little endian """
diff --git a/pandas/core/dtypes/inference.py b/pandas/core/dtypes/inference.py
index 0dc6ddbde..24d4981a7 100644
--- a/pandas/core/dtypes/inference.py
+++ b/pandas/core/dtypes/inference.py
@@ -3,11 +3,11 @@
 from collections import abc
 from numbers import Number
 import re
+from typing import Pattern
 
 import numpy as np
 
 from pandas._libs import lib
-from pandas.compat import re_type
 
 is_bool = lib.is_bool
 
@@ -209,8 +209,7 @@ def is_re(obj):
     >>> is_re("foo")
     False
     """
-
-    return isinstance(obj, re_type)
+    return isinstance(obj, Pattern)
 
 
 def is_re_compilable(obj):
diff --git a/pandas/tests/test_compat.py b/pandas/tests/test_compat.py
index 063cf0fb6..579aa38df 100644
--- a/pandas/tests/test_compat.py
+++ b/pandas/tests/test_compat.py
@@ -2,9 +2,8 @@
 Testing that functions from compat work as expected
 """
 import builtins
-import re
 
-from pandas.compat import lmap, lrange, lzip, re_type
+from pandas.compat import lmap, lrange, lzip
 
 
 class TestBuiltinIterators:
@@ -40,7 +39,3 @@ class TestBuiltinIterators:
         expecteds = list(builtins.zip(*lst)),
         lengths = 10,
         self.check_results(results, expecteds, lengths)
-
-
-def test_re_type():
-    assert isinstance(re.compile(''), re_type)
