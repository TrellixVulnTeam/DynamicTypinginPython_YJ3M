commit dca3c5c5a6a3769ee01465baca04cfdfa66a4f76
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Sep 22 11:35:07 2011 -0400

    ENH: get_dtype_counts publicized and added dtypes property

diff --git a/RELEASE.rst b/RELEASE.rst
index b7888da1b..e7ec0d770 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -13,6 +13,10 @@ pandas 0.4.1
 
 This is a bug fix release
 
+**New features / modules**
+
+  - Added new `DataFrame` methods `get_dtype_counts` and property `dtypes`
+
 **Bug fixes**
 
   - Fixed DataFrame constructor bug causing downstream problems (e.g. .copy()
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 4f195302f..e04dbcf1d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -648,11 +648,15 @@ class DataFrame(NDFrame):
                                       % (_stringify(cols[0]),
                                          _stringify(cols[-1])))
 
-        counts = self._get_dtype_counts()
+        counts = self.get_dtype_counts()
         dtypes = ['%s(%d)' % k for k in sorted(counts.iteritems())]
         buf.write(u'dtypes: %s' % ', '.join(dtypes))
 
-    def _get_dtype_counts(self):
+    @property
+    def dtypes(self):
+        return self.apply(lambda x: x.dtype)
+
+    def get_dtype_counts(self):
         counts = {}
         for _, series in self.iteritems():
             if series.dtype in counts:
@@ -660,7 +664,7 @@ class DataFrame(NDFrame):
             else:
                 counts[series.dtype] = 1
 
-        return counts
+        return Series(counts)
 
     #----------------------------------------------------------------------
     # properties for index and columns
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5f7468d6e..4ada58a28 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1543,6 +1543,12 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         self.frame.info(buf=io)
         self.tsframe.info(buf=io)
 
+    def test_dtypes(self):
+        self.mixed_frame['bool'] = self.mixed_frame['A'] > 0
+        result = self.mixed_frame.dtypes
+        expected = self.mixed_frame.dtypes
+        assert_series_equal(result, expected)
+
     def test_append(self):
         begin_index = self.frame.index[:5]
         end_index = self.frame.index[5:]
