commit 12df3ea39b28f752a0dcb43b87c4121387114cdf
Author: David John Gagne <djgagne@ou.edu>
Date:   Thu Aug 20 17:57:47 2015 -0500

    BUG: Fixed import error in index.py when using a mixed-integer indexing, #10610

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index 7c45bd6b3..121c9d54a 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -741,7 +741,7 @@ Bug Fixes
 - Bug in ``ExcelReader`` when worksheet is empty (:issue:`6403`)
 - Bug in ``BinGrouper.group_info`` where returned values are not compatible with base class (:issue:`10914`)
 - Bug in clearing the cache on ``DataFrame.pop`` and a subsequent inplace op (:issue:`10912`)
-
+- Bug in indexing with a mixed-integer ``Index`` causing an ``ImportError`` (:issue:`10610`)
 - Bug causing ``DataFrame.where`` to not respect the ``axis`` parameter when the frame has a symmetric shape. (:issue:`9736`)
 
 - Bug in ``Table.select_column`` where name is not preserved (:issue:`10392`)
diff --git a/pandas/core/index.py b/pandas/core/index.py
index fc4b5d2db..4d0b395a4 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -973,9 +973,12 @@ class Index(IndexOpsMixin, PandasObject):
                 indexer = self.get_indexer(keyarr)
                 if (indexer >= 0).all():
                     return indexer
-
-                from pandas.core.indexing import _maybe_convert_indices
-                return _maybe_convert_indices(indexer, len(self))
+                # missing values are flagged as -1 by get_indexer and negative indices are already
+                # converted to positive indices in the above if-statement, so the negative flags are changed to
+                # values outside the range of indices so as to trigger an IndexError in maybe_convert_indices
+                indexer[indexer < 0] = len(self)
+                from pandas.core.indexing import maybe_convert_indices
+                return maybe_convert_indices(indexer, len(self))
 
             elif not self.inferred_type == 'integer':
                 return keyarr
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index 99daafc5b..6a9d4096a 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -2535,6 +2535,12 @@ Region_1,Site_2,3977723089,A,5/20/2015 8:33,5/20/2015 9:09,Yes,No"""
 
         #if I look at df, then element [0,2] equals '_'. If instead I type df.ix[idx,'test'], I get '-----', finally by typing df.iloc[0,2] I get '_'.
 
+    def test_multitype_list_index_access(self):
+        #GH 10610
+        df = pd.DataFrame(np.random.random((10, 5)), columns=["a"] + [20, 21, 22, 23])
+        with self.assertRaises(IndexError):
+            vals = df[[22, 26, -8]]
+        self.assertEqual(df[21].shape[0], df.shape[0])
 
     def test_set_index_nan(self):
 
