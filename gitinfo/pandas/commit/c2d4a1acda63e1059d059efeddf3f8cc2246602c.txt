commit c2d4a1acda63e1059d059efeddf3f8cc2246602c
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Sat Jan 5 15:07:35 2019 -0600

    Repr for Integer and Pandas Dtypes (#24646)
    
    >>> pd.PandasDtype("int64")
    PandasDtype('int64')
    
    >>> pd.Int32Dtype()
    Int32Dtype()
    
    >>> pd.UInt8Dtype()
    UInt8Dtype()

diff --git a/pandas/core/arrays/integer.py b/pandas/core/arrays/integer.py
index f8f87ff1c..b3dde6bf2 100644
--- a/pandas/core/arrays/integer.py
+++ b/pandas/core/arrays/integer.py
@@ -36,6 +36,11 @@ class _IntegerDtype(ExtensionDtype):
     type = None
     na_value = np.nan
 
+    def __repr__(self):
+        sign = 'U' if self.is_unsigned_integer else ''
+        return "{sign}Int{size}Dtype()".format(sign=sign,
+                                               size=8 * self.itemsize)
+
     @cache_readonly
     def is_signed_integer(self):
         return self.kind == 'i'
diff --git a/pandas/core/arrays/numpy_.py b/pandas/core/arrays/numpy_.py
index b1dc77e65..47517782e 100644
--- a/pandas/core/arrays/numpy_.py
+++ b/pandas/core/arrays/numpy_.py
@@ -38,8 +38,12 @@ class PandasDtype(ExtensionDtype):
         self._name = dtype.name
         self._type = dtype.type
 
+    def __repr__(self):
+        return "PandasDtype({!r})".format(self.name)
+
     @property
     def numpy_dtype(self):
+        """The NumPy dtype this PandasDtype wraps."""
         return self._dtype
 
     @property
@@ -72,6 +76,7 @@ class PandasDtype(ExtensionDtype):
 
     @property
     def itemsize(self):
+        """The element size of this data-type object."""
         return self._dtype.itemsize
 
 
diff --git a/pandas/tests/arrays/test_integer.py b/pandas/tests/arrays/test_integer.py
index 173f9707e..09298bb5c 100644
--- a/pandas/tests/arrays/test_integer.py
+++ b/pandas/tests/arrays/test_integer.py
@@ -57,6 +57,20 @@ def test_dtypes(dtype):
     assert dtype.name is not None
 
 
+@pytest.mark.parametrize('dtype, expected', [
+    (Int8Dtype(), 'Int8Dtype()'),
+    (Int16Dtype(), 'Int16Dtype()'),
+    (Int32Dtype(), 'Int32Dtype()'),
+    (Int64Dtype(), 'Int64Dtype()'),
+    (UInt8Dtype(), 'UInt8Dtype()'),
+    (UInt16Dtype(), 'UInt16Dtype()'),
+    (UInt32Dtype(), 'UInt32Dtype()'),
+    (UInt64Dtype(), 'UInt64Dtype()'),
+])
+def test_repr_dtype(dtype, expected):
+    assert repr(dtype) == expected
+
+
 def test_repr_array():
     result = repr(integer_array([1, None, 3]))
     expected = (
diff --git a/pandas/tests/arrays/test_numpy.py b/pandas/tests/arrays/test_numpy.py
index b17e509c2..a77f1f8a7 100644
--- a/pandas/tests/arrays/test_numpy.py
+++ b/pandas/tests/arrays/test_numpy.py
@@ -71,6 +71,17 @@ def test_is_boolean(dtype, expected):
     assert dtype._is_boolean is expected
 
 
+def test_repr():
+    dtype = PandasDtype(np.dtype("int64"))
+    assert repr(dtype) == "PandasDtype('int64')"
+
+
+def test_constructor_from_string():
+    result = PandasDtype.construct_from_string("int64")
+    expected = PandasDtype(np.dtype("int64"))
+    assert result == expected
+
+
 # ----------------------------------------------------------------------------
 # Construction
 
