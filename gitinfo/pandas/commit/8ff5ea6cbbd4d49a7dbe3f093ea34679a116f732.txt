commit 8ff5ea6cbbd4d49a7dbe3f093ea34679a116f732
Author: Vyomkesh Tripathi <tvyomkesh@hotmail.com>
Date:   Sun Feb 1 10:24:39 2015 -0800

    Gh 9391: delete examples folder

diff --git a/examples/data/SOURCES b/examples/data/SOURCES
deleted file mode 100644
index e69de29bb..000000000
diff --git a/examples/finance.py b/examples/finance.py
deleted file mode 100644
index 91ac57f67..000000000
--- a/examples/finance.py
+++ /dev/null
@@ -1,86 +0,0 @@
-"""
-Some examples playing around with yahoo finance data
-"""
-
-from datetime import datetime
-from pandas.compat import zip
-
-import matplotlib.finance as fin
-import numpy as np
-from pylab import show
-
-
-from pandas import Index, DataFrame
-from pandas.core.datetools import BMonthEnd
-from pandas import ols
-
-startDate = datetime(2008, 1, 1)
-endDate = datetime(2009, 9, 1)
-
-
-def getQuotes(symbol, start, end):
-    quotes = fin.quotes_historical_yahoo(symbol, start, end)
-    dates, open, close, high, low, volume = zip(*quotes)
-
-    data = {
-        'open': open,
-        'close': close,
-        'high': high,
-        'low': low,
-        'volume': volume
-    }
-
-    dates = Index([datetime.fromordinal(int(d)) for d in dates])
-    return DataFrame(data, index=dates)
-
-msft = getQuotes('MSFT', startDate, endDate)
-aapl = getQuotes('AAPL', startDate, endDate)
-goog = getQuotes('GOOG', startDate, endDate)
-ibm = getQuotes('IBM', startDate, endDate)
-
-px = DataFrame({'MSFT': msft['close'],
-                'IBM': ibm['close'],
-                'GOOG': goog['close'],
-                'AAPL': aapl['close']})
-returns = px / px.shift(1) - 1
-
-# Select dates
-
-subIndex = ibm.index[(ibm['close'] > 95) & (ibm['close'] < 100)]
-msftOnSameDates = msft.reindex(subIndex)
-
-# Insert columns
-
-msft['hi-lo spread'] = msft['high'] - msft['low']
-ibm['hi-lo spread'] = ibm['high'] - ibm['low']
-
-# Aggregate monthly
-
-
-def toMonthly(frame, how):
-    offset = BMonthEnd()
-
-    return frame.groupby(offset.rollforward).aggregate(how)
-
-msftMonthly = toMonthly(msft, np.mean)
-ibmMonthly = toMonthly(ibm, np.mean)
-
-# Statistics
-
-stdev = DataFrame({
-    'MSFT': msft.std(),
-    'IBM': ibm.std()
-})
-
-# Arithmetic
-
-ratios = ibm / msft
-
-# Works with different indices
-
-ratio = ibm / ibmMonthly
-monthlyRatio = ratio.reindex(ibmMonthly.index)
-
-# Ratio relative to past month average
-
-filledRatio = ibm / ibmMonthly.reindex(ibm.index, method='pad')
diff --git a/examples/regressions.py b/examples/regressions.py
deleted file mode 100644
index bc58408a6..000000000
--- a/examples/regressions.py
+++ /dev/null
@@ -1,51 +0,0 @@
-from datetime import datetime
-import string
-
-import numpy as np
-
-from pandas.core.api import Series, DataFrame, DatetimeIndex
-from pandas.stats.api import ols
-
-N = 100
-
-start = datetime(2009, 9, 2)
-dateRange = DatetimeIndex(start, periods=N)
-
-
-def makeDataFrame():
-    data = DataFrame(np.random.randn(N, 7),
-                     columns=list(string.ascii_uppercase[:7]),
-                     index=dateRange)
-
-    return data
-
-
-def makeSeries():
-    return Series(np.random.randn(N), index=dateRange)
-
-#-------------------------------------------------------------------------------
-# Standard rolling linear regression
-
-X = makeDataFrame()
-Y = makeSeries()
-
-model = ols(y=Y, x=X)
-
-print(model)
-
-#-------------------------------------------------------------------------------
-# Panel regression
-
-data = {
-    'A': makeDataFrame(),
-    'B': makeDataFrame(),
-    'C': makeDataFrame()
-}
-
-Y = makeDataFrame()
-
-panelModel = ols(y=Y, x=data, window=50)
-
-model = ols(y=Y, x=data)
-
-print(panelModel)
