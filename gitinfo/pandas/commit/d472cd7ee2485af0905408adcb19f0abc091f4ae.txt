commit d472cd7ee2485af0905408adcb19f0abc091f4ae
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Dec 12 15:59:10 2011 -0500

    BUG: handle differently-indexed Series input to DataFrame constructor, fix #475

diff --git a/RELEASE.rst b/RELEASE.rst
index ce879b1f3..bbcadff08 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -117,6 +117,7 @@ Thanks
 - Christian Prinoth
 - Joon Ro
 - Chang She
+- Ted Square
 - Chris Uga
 
 pandas 0.6.0
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 87fb78139..d71ea7ec7 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -260,8 +260,8 @@ class DataFrame(NDFrame):
 
     def _init_ndarray(self, values, index, columns, dtype=None,
                       copy=False):
-        if isinstance(values, Series) and values.name is not None:
-            if columns is None:
+        if isinstance(values, Series):
+            if columns is None and values.name is not None:
                 columns = [values.name]
             if index is None:
                 index = values.index
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 520e852d7..7d680d4fd 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1262,6 +1262,26 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assert_(df.columns[0] == 'x')
         self.assert_(df.index.equals(a.index))
 
+    def test_constructor_Series_differently_indexed(self):
+        # name
+        s1 = Series([1, 2, 3], index=['a','b','c'], name='x')
+
+        # no name
+        s2 = Series([1, 2, 3], index=['a','b','c'])
+
+        other_index = Index(['a', 'b'])
+
+        df1 = DataFrame(s1, index=other_index)
+        exp1 = DataFrame(s1.reindex(other_index))
+        self.assert_(df1.columns[0] == 'x')
+        assert_frame_equal(df1, exp1)
+
+        df2 = DataFrame(s2, index=other_index)
+        exp2 = DataFrame(s2.reindex(other_index))
+        self.assert_(df2.columns[0] == 0)
+        self.assert_(df2.index.equals(other_index))
+        assert_frame_equal(df2, exp2)
+
     def test_constructor_manager_resize(self):
         index = list(self.frame.index[:5])
         columns = list(self.frame.columns[:3])
