commit 7202635c9332b2b510f3f32cb1e97e3268edc61f
Author: Jos√© F. R. Fonseca <jfrfonseca@users.noreply.github.com>
Date:   Tue Jan 23 23:35:19 2018 -0200

    Inclusion of new NAMED_COLORS for MS Excel (#18392)

diff --git a/pandas/io/formats/excel.py b/pandas/io/formats/excel.py
index 2fc648d29..81e8881f3 100644
--- a/pandas/io/formats/excel.py
+++ b/pandas/io/formats/excel.py
@@ -277,7 +277,9 @@ class CSSToExcelConverter(object):
 
     NAMED_COLORS = {
         'maroon': '800000',
+        'brown': 'A52A2A',
         'red': 'FF0000',
+        'pink': 'FFC0CB',
         'orange': 'FFA500',
         'yellow': 'FFFF00',
         'olive': '808000',
@@ -291,6 +293,7 @@ class CSSToExcelConverter(object):
         'navy': '000080',
         'black': '000000',
         'gray': '808080',
+        'grey': '808080',
         'silver': 'C0C0C0',
         'white': 'FFFFFF',
     }
diff --git a/pandas/tests/io/formats/test_to_excel.py b/pandas/tests/io/formats/test_to_excel.py
index 26a9bb018..2d691bf2c 100644
--- a/pandas/tests/io/formats/test_to_excel.py
+++ b/pandas/tests/io/formats/test_to_excel.py
@@ -4,7 +4,9 @@ ExcelFormatter is tested implicitly in pandas/tests/io/test_excel.py
 """
 
 import pytest
+import pandas.util.testing as tm
 
+from warnings import catch_warnings
 from pandas.io.formats.excel import CSSToExcelConverter
 
 
@@ -212,3 +214,61 @@ def test_css_to_excel_multiple():
 def test_css_to_excel_inherited(css, inherited, expected):
     convert = CSSToExcelConverter(inherited)
     assert expected == convert(css)
+
+
+@pytest.mark.parametrize("input_color,output_color", (
+    [(name, rgb) for name, rgb in CSSToExcelConverter.NAMED_COLORS.items()] +
+    [("#" + rgb, rgb) for rgb in CSSToExcelConverter.NAMED_COLORS.values()] +
+    [("#F0F", "FF00FF"), ("#ABC", "AABBCC")])
+)
+def test_css_to_excel_good_colors(input_color, output_color):
+    # see gh-18392
+    css = ("border-top-color: {color}; "
+           "border-right-color: {color}; "
+           "border-bottom-color: {color}; "
+           "border-left-color: {color}; "
+           "background-color: {color}; "
+           "color: {color}").format(color=input_color)
+
+    expected = dict()
+
+    expected["fill"] = {
+        "patternType": "solid",
+        "fgColor": output_color
+    }
+
+    expected["font"] = {
+        "color": output_color
+    }
+
+    expected["border"] = {
+        k: {
+            "color": output_color,
+        } for k in ("top", "right", "bottom", "left")
+    }
+
+    with tm.assert_produces_warning(None):
+        convert = CSSToExcelConverter()
+        assert expected == convert(css)
+
+
+@pytest.mark.parametrize("input_color", [None, "not-a-color"])
+def test_css_to_excel_bad_colors(input_color):
+    # see gh-18392
+    css = ("border-top-color: {color}; "
+           "border-right-color: {color}; "
+           "border-bottom-color: {color}; "
+           "border-left-color: {color}; "
+           "background-color: {color}; "
+           "color: {color}").format(color=input_color)
+
+    expected = dict()
+
+    if input_color is not None:
+        expected["fill"] = {
+            "patternType": "solid"
+        }
+
+    with catch_warnings(record=True):
+        convert = CSSToExcelConverter()
+        assert expected == convert(css)
