commit ab274c2479ac8d2bd3a24641a479930a7a61b2dd
Author: Graham Inggs <graham.inggs+github@gmail.com>
Date:   Mon Aug 13 03:14:35 2018 +0200

    Fix Python2 test failures in certain locales (#22213)
    
    * Fix Python2 test failures in certain locales
    
    Check that we can also get the locale, after setting it, without raising an Exception.
    Closes: #22129

diff --git a/pandas/tests/util/test_util.py b/pandas/tests/util/test_util.py
index dabafb1f4..c049dfc87 100644
--- a/pandas/tests/util/test_util.py
+++ b/pandas/tests/util/test_util.py
@@ -433,6 +433,26 @@ class TestLocaleUtils(object):
         del cls.locales
         del cls.current_locale
 
+    def test_can_set_locale_valid_set(self):
+        # Setting the default locale should return True
+        assert tm.can_set_locale('') is True
+
+    def test_can_set_locale_invalid_set(self):
+        # Setting an invalid locale should return False
+        assert tm.can_set_locale('non-existent_locale') is False
+
+    def test_can_set_locale_invalid_get(self, monkeypatch):
+        # In some cases, an invalid locale can be set,
+        # but a subsequent getlocale() raises a ValueError
+        # See GH 22129
+
+        def mockgetlocale():
+            raise ValueError()
+
+        with monkeypatch.context() as m:
+            m.setattr(locale, 'getlocale', mockgetlocale)
+            assert tm.can_set_locale('') is False
+
     def test_get_locales(self):
         # all systems should have at least a single locale
         assert len(tm.get_locales()) > 0
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index afc928ddf..39ab498d0 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -504,23 +504,19 @@ def set_locale(new_locale, lc_var=locale.LC_ALL):
 
     try:
         locale.setlocale(lc_var, new_locale)
-
-        try:
-            normalized_locale = locale.getlocale()
-        except ValueError:
-            yield new_locale
+        normalized_locale = locale.getlocale()
+        if com._all_not_none(*normalized_locale):
+            yield '.'.join(normalized_locale)
         else:
-            if com._all_not_none(*normalized_locale):
-                yield '.'.join(normalized_locale)
-            else:
-                yield new_locale
+            yield new_locale
     finally:
         locale.setlocale(lc_var, current_locale)
 
 
 def can_set_locale(lc, lc_var=locale.LC_ALL):
     """
-    Check to see if we can set a locale without raising an Exception.
+    Check to see if we can set a locale, and subsequently get the locale,
+    without raising an Exception.
 
     Parameters
     ----------
@@ -538,7 +534,8 @@ def can_set_locale(lc, lc_var=locale.LC_ALL):
     try:
         with set_locale(lc, lc_var=lc_var):
             pass
-    except locale.Error:  # horrible name for a Exception subclass
+    except (ValueError,
+            locale.Error):  # horrible name for a Exception subclass
         return False
     else:
         return True
