commit 34abef282cc7f27257ed873c60a91f69f67b36b5
Author: cgohlke <cjgohlke@gmail.com>
Date:   Sat Oct 28 11:49:36 2017 -0700

     BUG: Fix memory access violations in is_lexsorted  (#18005)

diff --git a/pandas/_libs/algos.pyx b/pandas/_libs/algos.pyx
index d159761c3..a44a7288b 100644
--- a/pandas/_libs/algos.pyx
+++ b/pandas/_libs/algos.pyx
@@ -87,7 +87,7 @@ class NegInfinity(object):
 @cython.boundscheck(False)
 def is_lexsorted(list list_of_arrays):
     cdef:
-        int i
+        Py_ssize_t i
         Py_ssize_t n, nlevels
         int64_t k, cur, pre
         ndarray arr
@@ -99,11 +99,12 @@ def is_lexsorted(list list_of_arrays):
     cdef int64_t **vecs = <int64_t**> malloc(nlevels * sizeof(int64_t*))
     for i in range(nlevels):
         arr = list_of_arrays[i]
+        assert arr.dtype.name == 'int64'
         vecs[i] = <int64_t*> arr.data
 
     # Assume uniqueness??
     with nogil:
-        for i in range(n):
+        for i in range(1, n):
             for k in range(nlevels):
                 cur = vecs[k][i]
                 pre = vecs[k][i -1]
diff --git a/pandas/tests/test_algos.py b/pandas/tests/test_algos.py
index 38625bfb2..df9297312 100644
--- a/pandas/tests/test_algos.py
+++ b/pandas/tests/test_algos.py
@@ -1219,7 +1219,7 @@ def test_is_lexsorted():
                   1, 1, 1, 1, 1, 1, 1,
                   1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                   0, 0, 0, 0, 0, 0, 0,
-                  0, 0, 0, 0, 0, 0, 0, 0, 0]),
+                  0, 0, 0, 0, 0, 0, 0, 0, 0], dtype='int64'),
         np.array([30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
                   15, 14,
                   13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 30, 29, 28,
@@ -1231,7 +1231,7 @@ def test_is_lexsorted():
                   7, 6, 5, 4, 3, 2, 1, 0, 30, 29, 28, 27, 26, 25, 24, 23, 22,
                   21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7,
                   6, 5,
-                  4, 3, 2, 1, 0])]
+                  4, 3, 2, 1, 0], dtype='int64')]
 
     assert (not libalgos.is_lexsorted(failure))
 
