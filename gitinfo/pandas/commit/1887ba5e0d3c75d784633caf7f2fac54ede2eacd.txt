commit 1887ba5e0d3c75d784633caf7f2fac54ede2eacd
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Nov 5 15:35:31 2014 -0500

    BUG: Bug in slicing a multi-index level with an empty-list (GH8737)

diff --git a/doc/source/whatsnew/v0.15.1.txt b/doc/source/whatsnew/v0.15.1.txt
index f2ea320ca..aca3e651c 100644
--- a/doc/source/whatsnew/v0.15.1.txt
+++ b/doc/source/whatsnew/v0.15.1.txt
@@ -257,7 +257,7 @@ Bug Fixes
 - Bug in Panel indexing with a list-like (:issue:`8710`)
 - Compat issue is ``DataFrame.dtypes`` when ``options.mode.use_inf_as_null`` is True (:issue:`8722`)
 - Bug in ``read_csv``, ``dialect`` parameter would not take a string (:issue: `8703`)
-
+- Bug in slicing a multi-index level with an empty-list (:issue:`8737`)
 
 
 
@@ -300,4 +300,3 @@ Bug Fixes
 - Bug in ``date_range`` where partially-specified dates would incorporate current date (:issue:`6961`)
 
 - Bug in Setting by indexer to a scalar value with a mixed-dtype `Panel4d` was failing (:issue:`8702`)
-
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 154410bbe..a6907c3f8 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -4147,8 +4147,10 @@ class MultiIndex(Index):
 
                         # ignore not founds
                         continue
-
-                ranges.append(reduce(np.logical_or,indexers))
+                if len(k):
+                    ranges.append(reduce(np.logical_or,indexers))
+                else:
+                    ranges.append(tuple([]))
 
             elif _is_null_slice(k):
                 # empty slice
diff --git a/pandas/tests/test_indexing.py b/pandas/tests/test_indexing.py
index 32b27e139..f41e1ac03 100644
--- a/pandas/tests/test_indexing.py
+++ b/pandas/tests/test_indexing.py
@@ -2133,6 +2133,16 @@ class TestIndexing(tm.TestCase):
         result = s.loc[idx[:,['foo','bah']]]
         assert_series_equal(result,expected)
 
+        # GH 8737
+        # empty indexer
+        multi_index = pd.MultiIndex.from_product((['foo', 'bar', 'baz'], ['alpha', 'beta']))
+        df = DataFrame(np.random.randn(5, 6), index=range(5), columns=multi_index)
+        df = df.sortlevel(0, axis=1)
+
+        result = df.loc[:, ([], slice(None))]
+        expected = DataFrame(index=range(5),columns=multi_index.reindex([])[0])
+        assert_frame_equal(result, expected)
+
         # regression from < 0.14.0
         # GH 7914
         df = DataFrame([[np.mean, np.median],['mean','median']],
