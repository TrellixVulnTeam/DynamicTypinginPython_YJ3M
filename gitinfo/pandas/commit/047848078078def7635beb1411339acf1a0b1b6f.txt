commit 047848078078def7635beb1411339acf1a0b1b6f
Author: y-p <yoval@gmx.com>
Date:   Wed Apr 3 01:20:51 2013 +0300

    VB: cut down worst runtime offenders in vb suite

diff --git a/vb_suite/binary_ops.py b/vb_suite/binary_ops.py
index 7a2b03643..fb9ea0495 100644
--- a/vb_suite/binary_ops.py
+++ b/vb_suite/binary_ops.py
@@ -13,8 +13,8 @@ SECTION = 'Binary ops'
 # add
 
 setup = common_setup + """
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 """
 frame_add = \
     Benchmark("df + df2", setup, name='frame_add',
@@ -22,8 +22,8 @@ frame_add = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 expr.set_numexpr_threads(1)
 """
 
@@ -33,8 +33,8 @@ frame_add_st = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 expr.set_use_numexpr(False)
 """
 frame_add_no_ne = \
@@ -45,8 +45,8 @@ frame_add_no_ne = \
 # mult
 
 setup = common_setup + """
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 """
 frame_mult = \
     Benchmark("df * df2", setup, name='frame_mult',
@@ -54,8 +54,8 @@ frame_mult = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 expr.set_numexpr_threads(1)
 """
 frame_mult_st = \
@@ -64,8 +64,8 @@ frame_mult_st = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 expr.set_use_numexpr(False)
 """
 frame_mult_no_ne = \
@@ -76,8 +76,8 @@ frame_mult_no_ne = \
 # multi and
 
 setup = common_setup + """
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 """
 frame_multi_and = \
     Benchmark("df[(df>0) & (df2>0)]", setup, name='frame_multi_and',
@@ -85,8 +85,8 @@ frame_multi_and = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 expr.set_numexpr_threads(1)
 """
 frame_multi_and_st = \
@@ -95,11 +95,10 @@ frame_multi_and_st = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(20000, 100))
+df2 = DataFrame(np.random.randn(20000, 100))
 expr.set_use_numexpr(False)
 """
 frame_multi_and_no_ne = \
     Benchmark("df[(df>0) & (df2>0)]", setup, name='frame_multi_and_no_ne',cleanup="expr.set_use_numexpr(True)",
               start_date=datetime(2012, 1, 1))
-
diff --git a/vb_suite/groupby.py b/vb_suite/groupby.py
index f9f221ae7..f38f42c89 100644
--- a/vb_suite/groupby.py
+++ b/vb_suite/groupby.py
@@ -278,8 +278,8 @@ groupby_sum_booleans = Benchmark("df.groupby('ii').sum()", setup)
 # Transform testing
 
 setup = common_setup + """
-n_dates = 1000
-n_securities = 500
+n_dates = 400
+n_securities = 250
 n_columns = 3
 share_na = 0.1
 
diff --git a/vb_suite/hdfstore_bench.py b/vb_suite/hdfstore_bench.py
index dd466e7fd..47f8e1063 100644
--- a/vb_suite/hdfstore_bench.py
+++ b/vb_suite/hdfstore_bench.py
@@ -92,12 +92,13 @@ write_store_mixed = Benchmark(
 # get from a table (mixed)
 
 setup5 = common_setup + """
-index = [rands(10) for _ in xrange(25000)]
-df = DataFrame({'float1' : randn(25000),
-                'float2' : randn(25000),
-                'string1' : ['foo'] * 25000,
-                'bool1' : [True] * 25000,
-                'int1' : np.random.randint(0, 250000, size=25000)},
+N=10000
+index = [rands(10) for _ in xrange(N)]
+df = DataFrame({'float1' : randn(N),
+                'float2' : randn(N),
+                'string1' : ['foo'] * N,
+                'bool1' : [True] * N,
+                'int1' : np.random.randint(0, N, size=N)},
                index=index)
 
 remove(f)
@@ -265,7 +266,7 @@ write_store_table_panel = Benchmark(
 # write to a table (data_columns)
 
 setup15 = common_setup + """
-df = DataFrame(np.random.randn(25000,10),columns = [ 'C%03d' % i for i in xrange(10) ])
+df = DataFrame(np.random.randn(10000,10),columns = [ 'C%03d' % i for i in xrange(10) ])
 
 remove(f)
 store = HDFStore(f)
diff --git a/vb_suite/indexing.py b/vb_suite/indexing.py
index ceda346fd..660a8f66c 100644
--- a/vb_suite/indexing.py
+++ b/vb_suite/indexing.py
@@ -95,8 +95,8 @@ indexing_dataframe_boolean_rows_object = \
               name='indexing_dataframe_boolean_rows_object')
 
 setup = common_setup + """
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(50000, 100))
+df2 = DataFrame(np.random.randn(50000, 100))
 """
 indexing_dataframe_boolean = \
     Benchmark("df > df2", setup, name='indexing_dataframe_boolean',
@@ -104,8 +104,8 @@ indexing_dataframe_boolean = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(50000, 100))
+df2 = DataFrame(np.random.randn(50000, 100))
 expr.set_numexpr_threads(1)
 """
 
@@ -115,8 +115,8 @@ indexing_dataframe_boolean_st = \
 
 setup = common_setup + """
 import pandas.core.expressions as expr
-df  = DataFrame(np.random.randn(100000, 100))
-df2 = DataFrame(np.random.randn(100000, 100))
+df  = DataFrame(np.random.randn(50000, 100))
+df2 = DataFrame(np.random.randn(50000, 100))
 expr.set_use_numexpr(False)
 """
 
diff --git a/vb_suite/io_bench.py b/vb_suite/io_bench.py
index dc335a4f9..892e98200 100644
--- a/vb_suite/io_bench.py
+++ b/vb_suite/io_bench.py
@@ -47,7 +47,7 @@ frame_to_csv = Benchmark("df.to_csv('__test__.csv')", setup,
 #----------------------------------
 
 setup = common_setup + """
-df=DataFrame({'A':range(100000)})
+df=DataFrame({'A':range(50000)})
 df['B'] = df.A + 1.0
 df['C'] = df.A + 2.0
 df['D'] = df.A + 3.0
@@ -61,8 +61,8 @@ from pandas import concat, Timestamp
 
 def create_cols(name):
     return [ "%s%03d" % (name,i) for i in xrange(5) ]
-df_float  = DataFrame(np.random.randn(10000, 5),dtype='float64',columns=create_cols('float'))
-df_int    = DataFrame(np.random.randn(10000, 5),dtype='int64',columns=create_cols('int'))
+df_float  = DataFrame(np.random.randn(5000, 5),dtype='float64',columns=create_cols('float'))
+df_int    = DataFrame(np.random.randn(5000, 5),dtype='int64',columns=create_cols('int'))
 df_bool   = DataFrame(True,index=df_float.index,columns=create_cols('bool'))
 df_object = DataFrame('foo',index=df_float.index,columns=create_cols('object'))
 df_dt     = DataFrame(Timestamp('20010101'),index=df_float.index,columns=create_cols('date'))
diff --git a/vb_suite/parser.py b/vb_suite/parser.py
index 19821ccd3..50d37f377 100644
--- a/vb_suite/parser.py
+++ b/vb_suite/parser.py
@@ -55,7 +55,7 @@ KORD,19990127, 21:00:00, 20:56:00, -0.5900, 2.2100, 5.7000, 0.0000, 280.0000
 KORD,19990127, 21:00:00, 21:18:00, -0.9900, 2.0100, 3.6000, 0.0000, 270.0000
 KORD,19990127, 22:00:00, 21:56:00, -0.5900, 1.7100, 5.1000, 0.0000, 290.0000
 '''
-data = data * 2000
+data = data * 200
 """
 cmd = ("read_table(StringIO(data), sep=',', header=None, "
        "parse_dates=[[1,2], [1,3]])")
@@ -74,7 +74,7 @@ KORD,19990127 21:00:00, 20:56:00, -0.5900, 2.2100, 5.7000, 0.0000, 280.0000
 KORD,19990127 21:00:00, 21:18:00, -0.9900, 2.0100, 3.6000, 0.0000, 270.0000
 KORD,19990127 22:00:00, 21:56:00, -0.5900, 1.7100, 5.1000, 0.0000, 290.0000
 '''
-data = data * 2000
+data = data * 200
 """
 cmd = "read_table(StringIO(data), sep=',', header=None, parse_dates=[1])"
 sdate = datetime(2012, 5, 7)
diff --git a/vb_suite/timeseries.py b/vb_suite/timeseries.py
index c6c562d0d..4dd1dd2e9 100644
--- a/vb_suite/timeseries.py
+++ b/vb_suite/timeseries.py
@@ -162,7 +162,7 @@ timeseries_infer_freq = \
 # setitem PeriodIndex
 
 setup = common_setup + """
-rng = period_range('1/1/1990', freq='S', periods=100000)
+rng = period_range('1/1/1990', freq='S', periods=20000)
 df = DataFrame(index=range(len(rng)))
 """
 
