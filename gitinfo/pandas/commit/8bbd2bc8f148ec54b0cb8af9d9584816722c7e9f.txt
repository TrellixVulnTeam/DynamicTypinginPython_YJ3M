commit 8bbd2bc8f148ec54b0cb8af9d9584816722c7e9f
Author: Jeff Reback <jeff@reback.net>
Date:   Tue May 31 17:46:59 2016 -0400

    ENH: Series has gained the properties .is_monotonic*
    
    Author: Jeff Reback <jeff@reback.net>
    
    Closes #13336 from jreback/is_monotonic and squashes the following commits:
    
    0a50ff9 [Jeff Reback] ENH: Series has gained the properties .is_monotonic, .is_monotonic_increasing, .is_monotonic_decreasing

diff --git a/doc/source/api.rst b/doc/source/api.rst
index 9e7ae2357..0e893308d 100644
--- a/doc/source/api.rst
+++ b/doc/source/api.rst
@@ -354,6 +354,9 @@ Computations / Descriptive Stats
    Series.unique
    Series.nunique
    Series.is_unique
+   Series.is_monotonic
+   Series.is_monotonic_increasing
+   Series.is_monotonic_decreasing
    Series.value_counts
 
 Reindexing / Selection / Label manipulation
diff --git a/doc/source/whatsnew/v0.18.2.txt b/doc/source/whatsnew/v0.18.2.txt
index 33a48671a..3fc1a69cb 100644
--- a/doc/source/whatsnew/v0.18.2.txt
+++ b/doc/source/whatsnew/v0.18.2.txt
@@ -92,7 +92,7 @@ Other enhancements
 - ``pd.read_html()`` has gained support for the ``decimal`` option (:issue:`12907`)
 
 - ``eval``'s upcasting rules for ``float32`` types have been updated to be more consistent with NumPy's rules.  New behavior will not upcast to ``float64`` if you multiply a pandas ``float32`` object by a scalar float64. (:issue:`12388`)
-
+- ``Series`` has gained the properties ``.is_monotonic``, ``.is_monotonic_increasing``, ``.is_monotonic_decreasing``, similar to ``Index`` (:issue:`13336`)
 
 .. _whatsnew_0182.api:
 
diff --git a/pandas/core/base.py b/pandas/core/base.py
index 36f1f24fe..96732a714 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -995,6 +995,37 @@ class IndexOpsMixin(object):
         """
         return self.nunique() == len(self)
 
+    @property
+    def is_monotonic(self):
+        """
+        Return boolean if values in the object are
+        monotonic_increasing
+
+        .. versionadded:: 0.18.2
+
+        Returns
+        -------
+        is_monotonic : boolean
+        """
+        from pandas import Index
+        return Index(self).is_monotonic
+    is_monotonic_increasing = is_monotonic
+
+    @property
+    def is_monotonic_decreasing(self):
+        """
+        Return boolean if values in the object are
+        monotonic_decreasing
+
+        .. versionadded:: 0.18.2
+
+        Returns
+        -------
+        is_monotonic_decreasing : boolean
+        """
+        from pandas import Index
+        return Index(self).is_monotonic_decreasing
+
     def memory_usage(self, deep=False):
         """
         Memory usage of my values
diff --git a/pandas/tests/series/test_analytics.py b/pandas/tests/series/test_analytics.py
index c190b0d9e..433f0f4bc 100644
--- a/pandas/tests/series/test_analytics.py
+++ b/pandas/tests/series/test_analytics.py
@@ -1397,6 +1397,23 @@ class TestSeriesAnalytics(TestData, tm.TestCase):
         s = Series(np.arange(1000))
         self.assertTrue(s.is_unique)
 
+    def test_is_monotonic(self):
+
+        s = Series(np.random.randint(0, 10, size=1000))
+        self.assertFalse(s.is_monotonic)
+        s = Series(np.arange(1000))
+        self.assertTrue(s.is_monotonic)
+        self.assertTrue(s.is_monotonic_increasing)
+        s = Series(np.arange(1000, 0, -1))
+        self.assertTrue(s.is_monotonic_decreasing)
+
+        s = Series(pd.date_range('20130101', periods=10))
+        self.assertTrue(s.is_monotonic)
+        self.assertTrue(s.is_monotonic_increasing)
+        s = Series(list(reversed(s.tolist())))
+        self.assertFalse(s.is_monotonic)
+        self.assertTrue(s.is_monotonic_decreasing)
+
     def test_sort_values(self):
 
         ts = self.ts.copy()
