commit 8edebb2c3678ac9504999077a08251b45268629d
Author: Wouter Overmeire <lodagro@gmail.com>
Date:   Tue Aug 7 20:57:05 2012 +0200

    ENH: Allow df plotting with style by some columns.
    
    DataFrame.plot(style=<[..] or {}>) no longer requires style to hold a
    value for each column of the DataFrame.

diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index 83b8e8091..e4ce92f13 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -199,12 +199,12 @@ class TestDataFramePlots(unittest.TestCase):
                                         (u'\u03b3', 5),
                                         (u'\u03b4', 6),
                                         (u'\u03b4', 7)], names=['i0', 'i1'])
-        columns = pandas.MultiIndex.from_tuples([('bar', u'\u0394'),
+        columns = MultiIndex.from_tuples([('bar', u'\u0394'),
             ('bar', u'\u0395')], names=['c0', 'c1'])
-        df = pandas.DataFrame(np.random.randint(0, 10, (8, 2)),
-                              columns=columns,
-                              index=index)
-        df.plot(title=u'\u03A3')
+        df = DataFrame(np.random.randint(0, 10, (8, 2)),
+                       columns=columns,
+                       index=index)
+        _check_plot_works(df.plot, title=u'\u03A3')
 
     @slow
     def test_plot_xy(self):
@@ -429,22 +429,17 @@ class TestDataFramePlots(unittest.TestCase):
     def test_style_by_column(self):
         import matplotlib.pyplot as plt
         fig = plt.gcf()
-        fig.clf()
-        fig.add_subplot(111)
 
         df = DataFrame(np.random.randn(100, 3))
-        markers = {0: '^', 1: '+', 2: 'o'}
-        ax = df.plot(style=markers)
-        for i, l in enumerate(ax.get_lines()):
-            self.assertEqual(l.get_marker(), markers[i])
-
-        fig.clf()
-        fig.add_subplot(111)
-        df = DataFrame(np.random.randn(100, 3))
-        markers = ['^', '+', 'o']
-        ax = df.plot(style=markers)
-        for i, l in enumerate(ax.get_lines()):
-            self.assertEqual(l.get_marker(), markers[i])
+        for markers in [{0: '^', 1: '+', 2: 'o'},
+                        {0: '^', 1: '+'},
+                        ['^', '+', 'o'],
+                        ['^', '+']]:
+            fig.clf()
+            fig.add_subplot(111)
+            ax = df.plot(style=markers)
+            for i, l in enumerate(ax.get_lines()[:len(markers)]):
+                self.assertEqual(l.get_marker(), markers[i])
 
 class TestDataFrameGroupByPlots(unittest.TestCase):
 
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 3f21414f5..eff484628 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -784,9 +784,12 @@ class MPLPlot(object):
 
         if self.style is not None:
             if isinstance(self.style, list):
-                style = self.style[i]
+                try:
+                    style = self.style[i]
+                except IndexError:
+                    pass
             elif isinstance(self.style, dict):
-                style = self.style[col_name]
+                style = self.style.get(col_name, style)
             else:
                 style = self.style
 
