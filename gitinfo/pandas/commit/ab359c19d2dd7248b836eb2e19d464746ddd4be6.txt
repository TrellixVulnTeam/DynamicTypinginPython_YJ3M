commit ab359c19d2dd7248b836eb2e19d464746ddd4be6
Author: Xbar <wishyx@gmail.com>
Date:   Thu Mar 17 09:51:26 2016 -0400

    BUG: #12624 where Panel.fillna() ignores inplace=True
    
    Added if condition for fillna when ndim==3 (for Panel) Issue:
    https://github.com/pydata/pandas/issues/12624
    
    Author: Xbar <wishyx@gmail.com>
    
    Closes #12633 from Xbar/master and squashes the following commits:
    
    cfb3882 [Xbar] BUGFIX: fillNA for panel (ndim==3) Issue: 12624

diff --git a/doc/source/whatsnew/v0.18.1.txt b/doc/source/whatsnew/v0.18.1.txt
index c2fd9c127..218204b39 100644
--- a/doc/source/whatsnew/v0.18.1.txt
+++ b/doc/source/whatsnew/v0.18.1.txt
@@ -103,6 +103,7 @@ Bug Fixes
 
 
 - Bug in ``value_counts`` when ``normalize=True`` and ``dropna=True`` where nulls still contributed to the normalized count (:issue:`12558`)
+- Bug in ``Panel.fillna()`` ignoring ``inplace=True`` (:issue:`12633`)
 
 
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 963c95315..59d1cf1ca 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -3124,13 +3124,17 @@ class NDFrame(PandasObject):
                 # fill in 2d chunks
                 result = dict([(col, s.fillna(method=method, value=value))
                                for col, s in self.iteritems()])
-                return self._constructor.from_dict(result).__finalize__(self)
+                new_obj = self._constructor.\
+                    from_dict(result).__finalize__(self)
+                new_data = new_obj._data
 
-            # 2d or less
-            method = mis._clean_fill_method(method)
-            new_data = self._data.interpolate(method=method, axis=axis,
-                                              limit=limit, inplace=inplace,
-                                              coerce=True, downcast=downcast)
+            else:
+                # 2d or less
+                method = mis._clean_fill_method(method)
+                new_data = self._data.interpolate(method=method, axis=axis,
+                                                  limit=limit, inplace=inplace,
+                                                  coerce=True,
+                                                  downcast=downcast)
         else:
             if method is not None:
                 raise ValueError('cannot specify both a fill method and value')
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 0a1e15921..dbab9a229 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -1528,6 +1528,24 @@ class TestPanel(tm.TestCase, PanelTests, CheckIndexing, SafeForLongAndSparse,
         p.iloc[0:2, 0:2, 0:2] = np.nan
         self.assertRaises(NotImplementedError, lambda: p.fillna(999, limit=1))
 
+        # Test in place fillNA
+        # Expected result
+        expected = Panel([[[0, 1], [2, 1]], [[10, 11], [12, 11]]],
+                         items=['a', 'b'], minor_axis=['x', 'y'],
+                         dtype=np.float64)
+        # method='ffill'
+        p1 = Panel([[[0, 1], [2, np.nan]], [[10, 11], [12, np.nan]]],
+                   items=['a', 'b'], minor_axis=['x', 'y'],
+                   dtype=np.float64)
+        p1.fillna(method='ffill', inplace=True)
+        assert_panel_equal(p1, expected)
+
+        # method='bfill'
+        p2 = Panel([[[0, np.nan], [2, 1]], [[10, np.nan], [12, 11]]],
+                   items=['a', 'b'], minor_axis=['x', 'y'], dtype=np.float64)
+        p2.fillna(method='bfill', inplace=True)
+        assert_panel_equal(p2, expected)
+
     def test_ffill_bfill(self):
         assert_panel_equal(self.panel.ffill(),
                            self.panel.fillna(method='ffill'))
