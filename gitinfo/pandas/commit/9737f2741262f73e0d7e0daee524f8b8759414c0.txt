commit 9737f2741262f73e0d7e0daee524f8b8759414c0
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Thu Oct 3 22:28:12 2013 -0400

    BUG: catch attribute error for raw ndarrays to avoid duplicate plots

diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index a8900bd83..8d1fd3086 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -188,6 +188,34 @@ however pass ``sort=False`` for potential speedups:
    df2.groupby(['X'], sort=True).sum()
    df2.groupby(['X'], sort=False).sum()
 
+.. _groupby.tabcompletion:
+
+``GroupBy`` will tab complete column names (and other attributes)
+
+.. ipython:: python
+   :suppress:
+
+   n = 10
+   weight = np.random.normal(166, 20, size=n)
+   height = np.random.normal(60, 10, size=n)
+   time = date_range('1/1/2000', periods=n)
+   gender = tm.choice(['male', 'female'], size=n)
+   df = DataFrame({'height': height, 'weight': weight,
+                           'gender': gender}, index=time)
+
+.. ipython::
+
+   In [7]: df
+
+   In [8]: gb = df.groupby('gender')
+
+   @verbatim
+   In [9]: gb.<TAB>
+   gb.agg        gb.boxplot    gb.cummin     gb.describe   gb.filter     gb.get_group  gb.height     gb.last       gb.median     gb.ngroups    gb.plot       gb.rank       gb.std        gb.transform
+   gb.aggregate  gb.count      gb.cumprod    gb.dtype      gb.first      gb.groups     gb.hist       gb.max        gb.min        gb.nth        gb.prod       gb.resample   gb.sum        gb.var
+   gb.apply      gb.cummax     gb.cumsum     gb.fillna     gb.gender     gb.head       gb.indices    gb.mean       gb.name       gb.ohlc       gb.quantile   gb.size       gb.tail       gb.weight
+
+
 .. _groupby.multiindex:
 
 GroupBy with MultiIndex
diff --git a/doc/source/release.rst b/doc/source/release.rst
index ebba7444e..bdaa3355f 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -380,6 +380,8 @@ See :ref:`Internal Refactoring<whatsnew_0130.refactoring>`
    function signature.
  - :func:`~pandas.read_html` now uses ``TextParser`` to parse HTML data from
    bs4/lxml (:issue:`4770`).
+ - Removed the ``keep_internal`` keyword parameter in
+   ``pandas/core/groupby.py`` because it wasn't being used (:issue:`5102`).
 
 .. _release.bug_fixes-0.13.0:
 
@@ -555,6 +557,9 @@ Bug Fixes
     type of headers (:issue:`5048`).
   - Fixed a bug where ``DatetimeIndex`` joins with ``PeriodIndex`` caused a
     stack overflow (:issue:`3899`).
+  - Fixed a bug where ``groupby`` objects didn't allow plots (:issue:`5102`).
+  - Fixed a bug where ``groupby`` objects weren't tab-completing column names
+    (:issue:`5102`).
 
 
 pandas 0.12.0
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 3fca0d2d9..8938e48eb 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -289,11 +289,13 @@ class GroupBy(PandasObject):
 
             def curried_with_axis(x):
                 return f(x, *args, **kwargs_with_axis)
-            curried_with_axis.__name__ = name
 
             def curried(x):
                 return f(x, *args, **kwargs)
-            curried.__name__ = name
+
+            # preserve the name so we can detect it when calling plot methods,
+            # to avoid duplicates
+            curried.__name__ = curried_with_axis.__name__ = name
 
             # special case otherwise extra plots are created when catching the
             # exception below
@@ -1957,14 +1959,14 @@ class NDFrameGroupBy(GroupBy):
                         index = key_index
                     else:
                         stacked_values = np.vstack([np.asarray(x)
-                                                for x in values]).T
+                                                    for x in values]).T
 
                         index = values[0].index
                         columns = key_index
 
-                except ValueError:
-                    #GH1738,, values is list of arrays of unequal lengths
-                    # fall through to the outer else caluse
+                except (ValueError, AttributeError):
+                    # GH1738: values is list of arrays of unequal lengths fall
+                    # through to the outer else caluse
                     return Series(values, index=key_index)
 
                 return DataFrame(stacked_values, index=index,
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 21cca9963..01cea90fa 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -2,6 +2,8 @@ from __future__ import print_function
 import nose
 import unittest
 
+from numpy.testing.decorators import slow
+
 from datetime import datetime
 from numpy import nan
 
@@ -9,8 +11,7 @@ from pandas import bdate_range
 from pandas.core.index import Index, MultiIndex
 from pandas.core.common import rands
 from pandas.core.api import Categorical, DataFrame
-from pandas.core.groupby import (GroupByError, SpecificationError, DataError,
-                                 _apply_whitelist)
+from pandas.core.groupby import SpecificationError, DataError
 from pandas.core.series import Series
 from pandas.util.testing import (assert_panel_equal, assert_frame_equal,
                                  assert_series_equal, assert_almost_equal,
@@ -18,14 +19,12 @@ from pandas.util.testing import (assert_panel_equal, assert_frame_equal,
 from pandas.compat import(
     range, long, lrange, StringIO, lmap, lzip, map, zip, builtins, OrderedDict
 )
-from pandas import compat,  _np_version_under1p7
+from pandas import compat
 from pandas.core.panel import Panel
 from pandas.tools.merge import concat
 from collections import defaultdict
 import pandas.core.common as com
-import pandas.core.datetools as dt
 import numpy as np
-from numpy.testing import assert_equal
 
 import pandas.core.nanops as nanops
 
@@ -2730,7 +2729,8 @@ class TestGroupBy(unittest.TestCase):
 
     def test_series_groupby_plotting_nominally_works(self):
         try:
-            import matplotlib.pyplot as plt
+            import matplotlib as mpl
+            mpl.use('Agg')
         except ImportError:
             raise nose.SkipTest("matplotlib not installed")
         n = 10
@@ -2743,9 +2743,12 @@ class TestGroupBy(unittest.TestCase):
         height.groupby(gender).hist()
         tm.close()
 
+    @slow
     def test_frame_groupby_plot_boxplot(self):
         try:
             import matplotlib.pyplot as plt
+            import matplotlib as mpl
+            mpl.use('Agg')
         except ImportError:
             raise nose.SkipTest("matplotlib not installed")
         tm.close()
@@ -2767,12 +2770,15 @@ class TestGroupBy(unittest.TestCase):
         self.assertEqual(len(res), 2)
         tm.close()
 
-        with tm.assertRaises(TypeError, '.*str.+float'):
+        with tm.assertRaisesRegexp(TypeError, '.*str.+float'):
             gb.hist()
 
+    @slow
     def test_frame_groupby_hist(self):
         try:
             import matplotlib.pyplot as plt
+            import matplotlib as mpl
+            mpl.use('Agg')
         except ImportError:
             raise nose.SkipTest("matplotlib not installed")
         tm.close()
@@ -2791,14 +2797,14 @@ class TestGroupBy(unittest.TestCase):
 
     def test_tab_completion(self):
         grp = self.mframe.groupby(level='second')
-        results = set([v for v in grp.__dir__() if not v.startswith('_')])
+        results = set([v for v in dir(grp) if not v.startswith('_')])
         expected = set(['A','B','C',
             'agg','aggregate','apply','boxplot','filter','first','get_group',
             'groups','hist','indices','last','max','mean','median',
             'min','name','ngroups','nth','ohlc','plot', 'prod',
             'size','std','sum','transform','var', 'count', 'head', 'describe',
-            'cummax', 'dtype', 'quantile', 'rank',
-            'cumprod', 'tail', 'resample', 'cummin', 'fillna', 'cumsum'])
+            'cummax', 'dtype', 'quantile', 'rank', 'cumprod', 'tail',
+            'resample', 'cummin', 'fillna', 'cumsum'])
         self.assertEqual(results, expected)
 
 def assert_fp_equal(a, b):
@@ -2836,7 +2842,5 @@ def test_decons():
 
 
 if __name__ == '__main__':
-    import nose
-    nose.runmodule(
-        argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure', '-s'],
-        exit=False)
+    nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure',
+                         '-s'], exit=False)
