commit 2061e9e5fbbd890c484b53232b0747e08d7d1739
Author: Gábor Lipták <gliptak@gmail.com>
Date:   Fri Jun 3 11:00:50 2016 -0400

    BUG: Fix series comparison operators when dealing with zero rank numpy arrays
    
    closes #13006
    
    Author: Gábor Lipták <gliptak@gmail.com>
    
    Closes #13307 from gliptak/seriescomp1 and squashes the following commits:
    
    4967db4 [Gábor Lipták] Fix series comparison operators when dealing with zero rank numpy arrays

diff --git a/doc/source/whatsnew/v0.18.2.txt b/doc/source/whatsnew/v0.18.2.txt
index b87cdd91a..2f6afa8ed 100644
--- a/doc/source/whatsnew/v0.18.2.txt
+++ b/doc/source/whatsnew/v0.18.2.txt
@@ -101,7 +101,7 @@ API changes
 
 
 - Non-convertible dates in an excel date column will be returned without conversion and the column will be ``object`` dtype, rather than raising an exception  (:issue:`10001`)
-- An ``UnsupportedFunctionCall`` error is now raised if numpy ufuncs like ``np.mean`` are called on groupby or resample objects (:issue:`12811`)
+- An ``UnsupportedFunctionCall`` error is now raised if NumPy ufuncs like ``np.mean`` are called on groupby or resample objects (:issue:`12811`)
 - Calls to ``.sample()`` will respect the random seed set via ``numpy.random.seed(n)`` (:issue:`13161`)
 
 .. _whatsnew_0182.api.tolist:
@@ -368,6 +368,7 @@ Bug Fixes
 - Bug in ``.unstack`` with ``Categorical`` dtype resets ``.ordered`` to ``True`` (:issue:`13249`)
 
 
+- Bug in ``Series`` comparison operators when dealing with zero dim NumPy arrays (:issue:`13006`)
 - Bug in ``groupby`` where ``apply`` returns different result depending on whether first result is ``None`` or not (:issue:`12824`)
 
 
diff --git a/pandas/core/ops.py b/pandas/core/ops.py
index d1bb67fa0..f27a83f50 100644
--- a/pandas/core/ops.py
+++ b/pandas/core/ops.py
@@ -754,7 +754,10 @@ def _comp_method_SERIES(op, name, str_rep, masker=False):
         elif isinstance(other, pd.DataFrame):  # pragma: no cover
             return NotImplemented
         elif isinstance(other, (np.ndarray, pd.Index)):
-            if len(self) != len(other):
+            # do not check length of zerodim array
+            # as it will broadcast
+            if (not lib.isscalar(lib.item_from_zerodim(other)) and
+                    len(self) != len(other)):
                 raise ValueError('Lengths must match to compare')
             return self._constructor(na_op(self.values, np.asarray(other)),
                                      index=self.index).__finalize__(self)
diff --git a/pandas/tests/series/test_operators.py b/pandas/tests/series/test_operators.py
index 3588faa8b..1e23c87fd 100644
--- a/pandas/tests/series/test_operators.py
+++ b/pandas/tests/series/test_operators.py
@@ -264,6 +264,18 @@ class TestSeriesOperators(TestData, tm.TestCase):
         rs[2] += np.timedelta64(timedelta(minutes=5, seconds=1))
         self.assertEqual(rs[2], value)
 
+    def test_operator_series_comparison_zerorank(self):
+        # GH 13006
+        result = np.float64(0) > pd.Series([1, 2, 3])
+        expected = 0.0 > pd.Series([1, 2, 3])
+        self.assert_series_equal(result, expected)
+        result = pd.Series([1, 2, 3]) < np.float64(0)
+        expected = pd.Series([1, 2, 3]) < 0.0
+        self.assert_series_equal(result, expected)
+        result = np.array([0, 1, 2])[0] > pd.Series([0, 1, 2])
+        expected = 0.0 > pd.Series([1, 2, 3])
+        self.assert_series_equal(result, expected)
+
     def test_timedeltas_with_DateOffset(self):
 
         # GH 4532
