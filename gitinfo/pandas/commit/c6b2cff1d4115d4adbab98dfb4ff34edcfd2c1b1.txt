commit c6b2cff1d4115d4adbab98dfb4ff34edcfd2c1b1
Author: jreback <jeff@reback.net>
Date:   Wed Jan 23 11:07:59 2013 -0500

    ENH: provide squeeze method for removing 1-len dimensions, close (GH #2544)

diff --git a/RELEASE.rst b/RELEASE.rst
index ad3e76588..81353aab4 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -33,6 +33,7 @@ pandas 0.11.0
     DataFrames and propogate in operations
   - Add function to pandas.io.data for retrieving stock index components from
     Yahoo! finance (#2795)
+  - Add ``squeeze`` function to reduce dimensionality of 1-len objects
 
 **Improvements to existing features**
 
diff --git a/doc/source/dsintro.rst b/doc/source/dsintro.rst
index 6919f67db..ddf8c678b 100644
--- a/doc/source/dsintro.rst
+++ b/doc/source/dsintro.rst
@@ -885,6 +885,17 @@ For example, using the earlier example data, we could do:
     wp.minor_axis
     wp.minor_xs('C')
 
+Squeezing
+~~~~~~~~~
+
+Another way to change the dimensionality of an object is to ``squeeze`` a 1-len object, similar to ``wp['Item1']``
+
+.. ipython:: python
+
+   wp.reindex(items=['Item1']).squeeze()
+   wp.reindex(items=['Item1'],minor=['B']).squeeze()
+
+
 Conversion to DataFrame
 ~~~~~~~~~~~~~~~~~~~~~~~
 
@@ -900,6 +911,7 @@ method:
                  minor_axis=['a', 'b', 'c', 'd'])
    panel.to_frame()
 
+
 Panel4D (Experimental)
 ----------------------
 
diff --git a/doc/source/v0.10.2.txt b/doc/source/v0.10.2.txt
new file mode 100644
index 000000000..6e044ef24
--- /dev/null
+++ b/doc/source/v0.10.2.txt
@@ -0,0 +1,29 @@
+.. _whatsnew_0102:
+
+v0.10.2 (February ??, 2013)
+---------------------------
+
+This is a minor release from 0.10.1 and includes many new features and
+enhancements along with a large number of bug fixes. There are also a number of
+important API changes that long-time pandas users should pay close attention
+to.
+
+New features
+~~~~~~~~~~~~
+
+``Squeeze`` to possibly remove length 1 dimensions from an object.
+
+.. ipython:: python
+
+   p = Panel(randn(3,4,4),items=['ItemA','ItemB','ItemC'],
+                          major_axis=date_range('20010102',periods=4),
+                          minor_axis=['A','B','C','D'])
+   p
+   p.reindex(items=['ItemA']).squeeze()
+   p.reindex(items=['ItemA'],minor=['B']).squeeze()
+
+
+See the `full release notes
+<https://github.com/pydata/pandas/blob/master/RELEASE.rst>`__ or issue tracker
+on GitHub for a complete list.
+
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 558b8aa61..c76a8376a 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -591,6 +591,13 @@ class NDFrame(PandasObject):
         del self[item]
         return result
 
+    def squeeze(self):
+        """ squeeze length 1 dimensions """
+        try:
+            return self.ix[tuple([ slice(None) if len(a) > 1 else a[0] for a in self.axes ])]
+        except:
+            return self
+
     def _expand_axes(self, key):
         new_axes = []
         for k, ax in zip(key, self.axes):
diff --git a/pandas/tests/test_ndframe.py b/pandas/tests/test_ndframe.py
index 0c004884c..d5d50359b 100644
--- a/pandas/tests/test_ndframe.py
+++ b/pandas/tests/test_ndframe.py
@@ -29,6 +29,33 @@ class TestNDFrame(unittest.TestCase):
         casted = self.ndf.astype(np.int32)
         self.assert_(casted.values.dtype == np.int32)
 
+    def test_squeeze(self):
+        # noop
+        for s in [ t.makeFloatSeries(), t.makeStringSeries(), t.makeObjectSeries() ]:
+            t.assert_series_equal(s.squeeze(),s)
+        for df in [ t.makeTimeDataFrame() ]:
+            t.assert_frame_equal(df.squeeze(),df)
+        for p in [ t.makePanel() ]:
+            t.assert_panel_equal(p.squeeze(),p)
+        for p4d in [ t.makePanel4D() ]:
+            t.assert_panel4d_equal(p4d.squeeze(),p4d)
+
+        # squeezing
+        df = t.makeTimeDataFrame().reindex(columns=['A'])
+        t.assert_series_equal(df.squeeze(),df['A'])
+
+        p = t.makePanel().reindex(items=['ItemA'])
+        t.assert_frame_equal(p.squeeze(),p['ItemA'])
+
+        p = t.makePanel().reindex(items=['ItemA'],minor_axis=['A'])
+        t.assert_series_equal(p.squeeze(),p.ix['ItemA',:,'A'])
+
+        p4d = t.makePanel4D().reindex(labels=['label1'])
+        t.assert_panel_equal(p4d.squeeze(),p4d['label1'])
+
+        p4d = t.makePanel4D().reindex(labels=['label1'],items=['ItemA'])
+        t.assert_frame_equal(p4d.squeeze(),p4d.ix['label1','ItemA'])
+
 if __name__ == '__main__':
     import nose
     nose.runmodule(argv=[__file__, '-vvs', '-x', '--pdb', '--pdb-failure'],
