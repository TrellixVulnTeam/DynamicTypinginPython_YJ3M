commit 0df22b6de60e4e8786f608b732c2e34b35a66866
Author: Martin Winkel <martin.winkel.pps@gmail.com>
Date:   Wed Oct 23 16:23:09 2019 +0200

    Remove TestData from series-tests test_repr.py (#29148)

diff --git a/pandas/tests/series/test_repr.py b/pandas/tests/series/test_repr.py
index 3c6da304d..9f881f5a5 100644
--- a/pandas/tests/series/test_repr.py
+++ b/pandas/tests/series/test_repr.py
@@ -17,10 +17,8 @@ from pandas import (
 from pandas.core.index import MultiIndex
 import pandas.util.testing as tm
 
-from .common import TestData
 
-
-class TestSeriesRepr(TestData):
+class TestSeriesRepr:
     def test_multilevel_name_print(self):
         index = MultiIndex(
             levels=[["foo", "bar", "baz", "qux"], ["one", "two", "three"]],
@@ -67,24 +65,24 @@ class TestSeriesRepr(TestData):
         s = Series(index=date_range("20010101", "20020101"), name="test")
         assert "Name: test" in repr(s)
 
-    def test_repr(self):
-        str(self.ts)
-        str(self.series)
-        str(self.series.astype(int))
-        str(self.objSeries)
+    def test_repr(self, datetime_series, string_series, object_series):
+        str(datetime_series)
+        str(string_series)
+        str(string_series.astype(int))
+        str(object_series)
 
         str(Series(tm.randn(1000), index=np.arange(1000)))
         str(Series(tm.randn(1000), index=np.arange(1000, 0, step=-1)))
 
         # empty
-        str(self.empty)
+        str(Series())
 
         # with NaNs
-        self.series[5:7] = np.NaN
-        str(self.series)
+        string_series[5:7] = np.NaN
+        str(string_series)
 
         # with Nones
-        ots = self.ts.astype("O")
+        ots = datetime_series.astype("O")
         ots[::2] = None
         repr(ots)
 
@@ -102,8 +100,8 @@ class TestSeriesRepr(TestData):
             ("\u03B1", "\u03B2", "\u03B3"),
             ("\u03B1", "bar"),
         ]:
-            self.series.name = name
-            repr(self.series)
+            string_series.name = name
+            repr(string_series)
 
         biggie = Series(
             tm.randn(1000), index=np.arange(1000), name=("foo", "bar", "baz")
