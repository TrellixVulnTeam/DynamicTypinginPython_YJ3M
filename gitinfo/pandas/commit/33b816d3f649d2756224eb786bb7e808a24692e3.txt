commit 33b816d3f649d2756224eb786bb7e808a24692e3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jan 16 15:13:30 2012 -0500

    BUG: fix TextParser with list buglet, enable parsing of DataFrame output with index names

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index b5fd315bf..fccfacd79 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -345,13 +345,24 @@ class TextParser(object):
         except StopIteration:
             line = None
 
+        try:
+            next_line = self._next_line()
+        except StopIteration:
+            next_line = None
+
+        index_name = None
+
         # implicitly index_col=0 b/c 1 fewer column names
+        implicit_first_cols = 0
         if line is not None:
             implicit_first_cols = len(line) - len(columns)
-        else:
-            implicit_first_cols = 0
+            if next_line is not None:
+                if len(next_line) == len(line) + len(columns):
+                    implicit_first_cols = 0
+                    self.index_col = range(len(line))
+                    self.buf = self.buf[1:]
+                    return line
 
-        index_name = None
         if implicit_first_cols > 0:
             if self.index_col is None:
                 if implicit_first_cols == 1:
@@ -463,7 +474,7 @@ class TextParser(object):
             rows -= len(self.buf)
 
         if isinstance(source, list):
-            if self.pos >= len(source):
+            if self.pos > len(source):
                 raise StopIteration
             if rows is None:
                 lines.extend(source[self.pos:])
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index ca6a90c0d..7698bcf39 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -555,6 +555,17 @@ eight,1,2,3"""
         finally:
             sys.stdout = sys.__stdout__
 
+    def test_read_table_buglet_4x_multiindex(self):
+        text = """                      A       B       C       D        E
+one two three   four
+a   b   10.0032 5    -0.5109 -2.3358 -0.4645  0.05076  0.3640
+a   q   20      4     0.4473  1.4152  0.2834  1.00661  0.1744
+x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
+
+        # it works!
+        df = read_table(StringIO(text), sep='\s+')
+        self.assertEquals(df.index.names, ['one', 'two', 'three', 'four'])
+
 class TestParseSQL(unittest.TestCase):
 
     def test_convert_sql_column_floats(self):
