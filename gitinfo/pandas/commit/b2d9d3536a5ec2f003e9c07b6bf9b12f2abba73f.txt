commit b2d9d3536a5ec2f003e9c07b6bf9b12f2abba73f
Author: Chang She <changshe@gmail.com>
Date:   Thu Dec 13 22:55:35 2012 -0500

    BUG: allow users to set the max number of columns before per column info is hidden away #2524

diff --git a/pandas/core/config_init.py b/pandas/core/config_init.py
index b2443e5b0..3342f4e60 100644
--- a/pandas/core/config_init.py
+++ b/pandas/core/config_init.py
@@ -45,6 +45,12 @@ pc_max_cols_doc="""
     columns that can fit on it.
 """
 
+pc_max_info_cols_doc="""
+: int
+    max_info_columns is used in DataFrame.info method to decide if
+    per column information will be printed.
+"""
+
 pc_nb_repr_h_doc="""
 : boolean
     When True (default), IPython notebook will use html representation for
@@ -122,6 +128,8 @@ with cf.config_prefix('print'):
     cf.register_option('max_rows', 100, pc_max_rows_doc, validator=is_int)
     cf.register_option('max_colwidth', 50, max_colwidth_doc, validator=is_int)
     cf.register_option('max_columns', 20, pc_max_cols_doc, validator=is_int)
+    cf.register_option('max_info_columns', 100, pc_max_info_cols_doc,
+                       validator=is_int)
     cf.register_option('colheader_justify', 'right', colheader_justify_doc,
                        validator=is_text)
     cf.register_option('notebook_repr_html', True, pc_nb_repr_h_doc,
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 6c1fe5839..d376cabdc 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1594,7 +1594,7 @@ class DataFrame(NDFrame):
         cols = self.columns
 
         # hack
-        if verbose and len(self.columns) < 100:
+        if verbose and len(self.columns) < get_option('print.max_info_columns'):
             lines.append('Data columns:')
             space = max([len(com.pprint_thing(k)) for k in self.columns]) + 4
             counts = self.count()
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index a52fb9944..17d629b03 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3975,6 +3975,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         frame.info(verbose=False)
         sys.stdout = sys.__stdout__
 
+    def test_info_wide(self):
+        from pandas import set_option, reset_option
+        io = StringIO()
+        df = DataFrame(np.random.randn(5, 100))
+        df.info(buf=io)
+        self.assert_(len(io.getvalue().splitlines()) == 4)
+
+        set_option('print.max_info_columns', 101)
+        io = StringIO()
+        df.info(buf=io)
+        self.assert_(len(io.getvalue().splitlines()) > 100)
+        reset_option('print.max_info_columns')
+
     def test_info_duplicate_columns(self):
         io = StringIO()
 
