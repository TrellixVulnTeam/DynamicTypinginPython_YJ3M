commit 9234b5fe24623241001bfb3b312fcd8c96a071bb
Author: Adam Klein <adamklein@gmail.com>
Date:   Mon Jan 9 16:08:51 2012 -0500

    FIX: common.py cleanup, test coverage

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 03bd77b53..4b6f41c24 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -30,17 +30,6 @@ class PandasError(Exception):
 class AmbiguousIndexError(PandasError, KeyError):
     pass
 
-class _GlobalPrintConfig(object):
-    def __init__(self):
-        self.float_format = None
-        self.column_space = 12
-        self.precision = 4
-        self.max_rows = 500
-        self.max_columns = 0
-        self.column_justify = 'right'
-
-GlobalPrintConfig = _GlobalPrintConfig()
-
 def isnull(obj):
     '''
     Replacement for numpy.isnan / -numpy.isfinite which is suitable
@@ -374,8 +363,11 @@ def _try_sort(iterable):
     except Exception:
         return listed
 
+#-------------------------------------------------------------------------------
+# Global formatting options
+
 def set_printoptions(precision=None, column_space=None, max_rows=None,
-                     max_columns=None, column_justify='right'):
+                     max_columns=None, colheader_justify='right'):
     """
     Alter default behavior of DataFrame.toString
 
@@ -400,12 +392,12 @@ def set_printoptions(precision=None, column_space=None, max_rows=None,
         GlobalPrintConfig.max_rows = max_rows
     if max_columns is not None:
         GlobalPrintConfig.max_columns = max_columns
-    if column_justify is not None:
-        GlobalPrintConfig.column_justify = column_justify
+    if colheader_justify is not None:
+        GlobalPrintConfig.colheader_justify = colheader_justify
 
 def reset_printoptions():
     global GlobalPrintConfig
-    GlobalPrintConfig = _GlobalPrintConfig()
+    GlobalPrintConfig.reset()
 
 class EngFormatter(object):
     """
@@ -606,6 +598,20 @@ def _format(s, dtype, space=None, na_rep=None, float_format=None,
             # object dtype
             return _just_help('%s' % _stringify(s))
 
+class _GlobalPrintConfig(object):
+    def __init__(self):
+        self.precision = 4
+        self.float_format = None
+        self.column_space = 12
+        self.max_rows = 500
+        self.max_columns = 0
+        self.colheader_justify = 'right'
+
+    def reset(self):
+        self.__init__()
+
+GlobalPrintConfig = _GlobalPrintConfig()
+
 #------------------------------------------------------------------------------
 # miscellaneous python tools
 
diff --git a/pandas/core/format.py b/pandas/core/format.py
index 025478492..408b2b7e3 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -2,6 +2,7 @@ from StringIO import StringIO
 from pandas.core.common import adjoin
 from pandas.core.index import MultiIndex, _ensure_index
 
+import pandas.core.common as com
 import numpy as np
 
 docstring_to_string = """
@@ -48,7 +49,7 @@ class DataFrameFormatter(object):
 
     def __init__(self, frame, buf=None, columns=None, col_space=None,
                  header=True, index=True, na_rep='NaN', formatters=None,
-                 justify='left', float_format=None, sparsify=True,
+                 justify=None, float_format=None, sparsify=True,
                  index_names=True, **kwds):
         self.frame = frame
         self.buf = buf if buf is not None else StringIO()
@@ -60,7 +61,11 @@ class DataFrameFormatter(object):
         self.col_space = col_space
         self.header = header
         self.index = index
-        self.justify = justify
+
+        if justify is None:
+            self.justify = com.GlobalPrintConfig.colheader_justify
+        else:
+            self.justify = justify
 
         self.kwds = kwds
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 4cea242ce..74549f13a 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -513,7 +513,9 @@ copy : boolean, default False
         padSpace = min(maxlen, 60)
 
         if float_format is None:
-            float_format = com._float_format_default
+            float_format = com.GlobalPrintConfig.float_format
+            if float_format is None:
+                float_format = com._float_format_default
 
         def _format(k, v):
             # GH #490
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 6bf13e0ac..4f755de40 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1766,6 +1766,13 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         expected = '   x     \n0  1.e+09\n1  0.2512'
         assert(df_s == expected)
 
+    def test_to_string_right_justify_cols(self):
+        com.reset_printoptions()
+        df = DataFrame({'x' : [3234, 0.253]})
+        df_s = df.to_string(justify='right')
+        expected = '       x\n0  3234.\n1  0.253'
+        assert(df_s == expected)
+
     def test_to_string_format_na(self):
         df = DataFrame({'A' : [np.nan, -1, -2.1234, 3, 4],
                         'B' : [np.nan, 'foo', 'foooo', 'fooooo', 'bar']})
@@ -1807,6 +1814,11 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         frame = DataFrame(index=np.arange(200))
         frame.to_html()
 
+    def test_to_html_with_no_bold(self):
+        x = DataFrame({'x': randn(5)})
+        ashtml = x.to_html(bold_rows=False)
+        assert('<strong>' not in ashtml)
+
     def test_insert(self):
         df = DataFrame(np.random.randn(5, 3), index=np.arange(5),
                        columns=['c', 'b', 'a'])
