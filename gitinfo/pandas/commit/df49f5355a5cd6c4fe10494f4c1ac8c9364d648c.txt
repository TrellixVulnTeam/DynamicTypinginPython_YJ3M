commit df49f5355a5cd6c4fe10494f4c1ac8c9364d648c
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sun Feb 23 08:18:49 2020 -0800

    REF: pass str_rep through arithmetic ops more consistently (#31297)

diff --git a/pandas/core/ops/__init__.py b/pandas/core/ops/__init__.py
index 1ef388970..1ee4c8e85 100644
--- a/pandas/core/ops/__init__.py
+++ b/pandas/core/ops/__init__.py
@@ -828,7 +828,7 @@ def _flex_comp_method_FRAME(cls, op, special):
             return _combine_series_frame(self, other, op, axis=axis)
         else:
             # in this case we always have `np.ndim(other) == 0`
-            new_data = dispatch_to_series(self, other, op)
+            new_data = dispatch_to_series(self, other, op, str_rep)
             return self._construct_result(new_data)
 
     f.__name__ = op_name
@@ -852,13 +852,15 @@ def _comp_method_FRAME(cls, op, special):
             new_data = dispatch_to_series(self, other, op, str_rep)
 
         elif isinstance(other, ABCSeries):
-            new_data = dispatch_to_series(self, other, op, axis="columns")
+            new_data = dispatch_to_series(
+                self, other, op, str_rep=str_rep, axis="columns"
+            )
 
         else:
 
             # straight boolean comparisons we want to allow all columns
             # (regardless of dtype to pass thru) See #4537 for discussion.
-            new_data = dispatch_to_series(self, other, op)
+            new_data = dispatch_to_series(self, other, op, str_rep)
 
         return self._construct_result(new_data)
 
