commit 53c318165ee3ec4c23354355ab44bff75271fc77
Author: jreback <jeff@reback.net>
Date:   Wed Nov 27 21:16:53 2013 -0500

    BUG: repr formating to use iloc rather than getitem for element access (GH5605)

diff --git a/pandas/core/format.py b/pandas/core/format.py
index cc6f5bd51..8bc74f2ff 100644
--- a/pandas/core/format.py
+++ b/pandas/core/format.py
@@ -284,6 +284,7 @@ class DataFrameFormatter(TableFormatter):
         self.line_width = line_width
         self.max_rows = max_rows
         self.max_cols = max_cols
+        self.max_rows_displayed = min(max_rows or len(self.frame),len(self.frame))
         self.show_dimensions = show_dimensions
 
         if justify is None:
@@ -483,7 +484,7 @@ class DataFrameFormatter(TableFormatter):
 
     def _format_col(self, i):
         formatter = self._get_formatter(i)
-        return format_array(self.frame.icol(i)[:self.max_rows].get_values(),
+        return format_array((self.frame.iloc[:self.max_rows_displayed,i]).get_values(),
                             formatter, float_format=self.float_format,
                             na_rep=self.na_rep,
                             space=self.col_space)
diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 8e23176e9..fce2bdceb 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -1455,6 +1455,22 @@ c  10  11  12  13  14\
         assert u('%d rows ') % h in long_repr
         assert u('2 columns') in long_repr
 
+    def test_repr_html_float(self):
+        max_rows = get_option('display.max_rows')
+        h = max_rows - 1
+        df = pandas.DataFrame({'idx':np.linspace(-10,10,h), 'A':np.arange(1,1+h), 'B': np.arange(41, 41+h) }).set_index('idx')
+        reg_repr = df._repr_html_()
+        assert '...' not in reg_repr
+        assert str(40 + h) in reg_repr
+
+        h = max_rows + 1
+        df = pandas.DataFrame({'idx':np.linspace(-10,10,h), 'A':np.arange(1,1+h), 'B': np.arange(41, 41+h) }).set_index('idx')
+        long_repr = df._repr_html_()
+        assert '...' in long_repr
+        assert str(40 + h) not in long_repr
+        assert u('%d rows ') % h in long_repr
+        assert u('2 columns') in long_repr
+
     def test_repr_html_long_multiindex(self):
         max_rows = get_option('display.max_rows')
         max_L1 = max_rows//2
