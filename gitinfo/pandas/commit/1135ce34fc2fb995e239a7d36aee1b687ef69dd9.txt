commit 1135ce34fc2fb995e239a7d36aee1b687ef69dd9
Author: Christian Perez <christian.f.perez@gmail.com>
Date:   Mon Oct 26 16:50:46 2015 -0700

    BUG: implement Series.sort_index(..inplace=True) for #11402

diff --git a/doc/source/whatsnew/v0.17.1.txt b/doc/source/whatsnew/v0.17.1.txt
index cd3c38485..206006148 100755
--- a/doc/source/whatsnew/v0.17.1.txt
+++ b/doc/source/whatsnew/v0.17.1.txt
@@ -37,6 +37,7 @@ API changes
 - Prettyprinting sets (e.g. in DataFrame cells) now uses set literal syntax (``{x, y}``) instead of
   Legacy Python syntax (``set([x, y])``) (:issue:`11215`)
 - Indexing with a null key will raise a ``TypeError``, instead of a ``ValueError`` (:issue:`11356`)
+- ``Series.sort_index()`` now correctly handles the ``inplace`` option (:issue:`11402`)
 
 .. _whatsnew_0171.deprecations:
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 2fc90ef85..b12a31d64 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1676,8 +1676,12 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
                                                    ascending=ascending)
 
         new_values = self._values.take(indexer)
-        return self._constructor(new_values,
-                                 index=new_index).__finalize__(self)
+        result =  self._constructor(new_values, index=new_index)
+
+        if inplace:
+            self._update_inplace(result)
+        else:
+            return result.__finalize__(self)
 
     def sort(self, axis=0, ascending=True, kind='quicksort', na_position='last', inplace=True):
         """
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 5ce25f5d9..8aed49a7e 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -5328,6 +5328,27 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         assert_series_equal(sorted_series,
                             self.ts.reindex(self.ts.index[::-1]))
 
+    def test_sort_index_inplace(self):
+
+        # For #11402
+        rindex = list(self.ts.index)
+        random.shuffle(rindex)
+
+        # descending
+        random_order = self.ts.reindex(rindex)
+        result = random_order.sort_index(ascending=False, inplace=True)
+        self.assertIs(result, None,
+                      msg='sort_index() inplace should return None')
+        assert_series_equal(random_order,
+                            self.ts.reindex(self.ts.index[::-1]))
+
+        # ascending
+        random_order = self.ts.reindex(rindex)
+        result = random_order.sort_index(ascending=True, inplace=True)
+        self.assertIs(result, None,
+                      msg='sort_index() inplace should return None')
+        assert_series_equal(random_order, self.ts)
+
     def test_sort_API(self):
 
         # API for 9816
