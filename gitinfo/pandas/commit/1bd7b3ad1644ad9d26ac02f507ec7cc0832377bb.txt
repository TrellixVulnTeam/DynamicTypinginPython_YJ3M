commit 1bd7b3ad1644ad9d26ac02f507ec7cc0832377bb
Author: Ming Li <14131823+minggli@users.noreply.github.com>
Date:   Wed Jan 31 11:34:12 2018 +0000

    [#7292] BUG: asfreq / pct_change strange behavior  (#19410)

diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index 1890636bc..4a5f0bda8 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -420,6 +420,7 @@ Datetimelike
 - Bug in ``.astype()`` to non-ns timedelta units would hold the incorrect dtype (:issue:`19176`, :issue:`19223`, :issue:`12425`)
 - Bug in subtracting :class:`Series` from ``NaT`` incorrectly returning ``NaT`` (:issue:`19158`)
 - Bug in :func:`Series.truncate` which raises ``TypeError`` with a monotonic ``PeriodIndex`` (:issue:`17717`)
+- Bug in :func:`~DataFrame.pct_change` using ``periods`` and ``freq`` returned different length outputs (:issue:`7292`)
 
 Timezones
 ^^^^^^^^^
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 6e777281b..bee954aa9 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -7315,6 +7315,7 @@ class NDFrame(PandasObject, SelectionMixin):
 
         rs = (data.div(data.shift(periods=periods, freq=freq, axis=axis,
                                   **kwargs)) - 1)
+        rs = rs.reindex_like(data)
         if freq is None:
             mask = isna(com._values_from_object(self))
             np.putmask(rs.values, mask, np.nan)
diff --git a/pandas/tests/frame/test_timeseries.py b/pandas/tests/frame/test_timeseries.py
index 3af798acd..e6b47fd69 100644
--- a/pandas/tests/frame/test_timeseries.py
+++ b/pandas/tests/frame/test_timeseries.py
@@ -108,7 +108,9 @@ class TestDataFrameTimeSeriesMethods(TestData):
 
         rs = self.tsframe.pct_change(freq='5D')
         filled = self.tsframe.fillna(method='pad')
-        assert_frame_equal(rs, filled / filled.shift(freq='5D') - 1)
+        assert_frame_equal(rs,
+                           (filled / filled.shift(freq='5D') - 1)
+                           .reindex_like(filled))
 
     def test_pct_change_shift_over_nas(self):
         s = Series([1., 1.5, np.nan, 2.5, 3.])
@@ -120,6 +122,38 @@ class TestDataFrameTimeSeriesMethods(TestData):
         edf = DataFrame({'a': expected, 'b': expected})
         assert_frame_equal(chg, edf)
 
+    def test_pct_change_periods_freq(self):
+        # GH 7292
+        rs_freq = self.tsframe.pct_change(freq='5B')
+        rs_periods = self.tsframe.pct_change(5)
+        assert_frame_equal(rs_freq, rs_periods)
+
+        rs_freq = self.tsframe.pct_change(freq='3B', fill_method=None)
+        rs_periods = self.tsframe.pct_change(3, fill_method=None)
+        assert_frame_equal(rs_freq, rs_periods)
+
+        rs_freq = self.tsframe.pct_change(freq='3B', fill_method='bfill')
+        rs_periods = self.tsframe.pct_change(3, fill_method='bfill')
+        assert_frame_equal(rs_freq, rs_periods)
+
+        rs_freq = self.tsframe.pct_change(freq='7B',
+                                          fill_method='pad',
+                                          limit=1)
+        rs_periods = self.tsframe.pct_change(7, fill_method='pad', limit=1)
+        assert_frame_equal(rs_freq, rs_periods)
+
+        rs_freq = self.tsframe.pct_change(freq='7B',
+                                          fill_method='bfill',
+                                          limit=3)
+        rs_periods = self.tsframe.pct_change(7, fill_method='bfill', limit=3)
+        assert_frame_equal(rs_freq, rs_periods)
+
+        empty_ts = DataFrame(index=self.tsframe.index,
+                             columns=self.tsframe.columns)
+        rs_freq = empty_ts.pct_change(freq='14B')
+        rs_periods = empty_ts.pct_change(14)
+        assert_frame_equal(rs_freq, rs_periods)
+
     def test_frame_ctor_datetime64_column(self):
         rng = date_range('1/1/2000 00:00:00', '1/1/2000 1:59:50', freq='10s')
         dates = np.asarray(rng)
diff --git a/pandas/tests/series/test_timeseries.py b/pandas/tests/series/test_timeseries.py
index 7be801629..7a1aff1cc 100644
--- a/pandas/tests/series/test_timeseries.py
+++ b/pandas/tests/series/test_timeseries.py
@@ -344,7 +344,9 @@ class TestTimeSeries(TestData):
 
         rs = self.ts.pct_change(freq='5D')
         filled = self.ts.fillna(method='pad')
-        assert_series_equal(rs, filled / filled.shift(freq='5D') - 1)
+        assert_series_equal(rs,
+                            (filled / filled.shift(freq='5D') - 1)
+                            .reindex_like(filled))
 
     def test_pct_change_shift_over_nas(self):
         s = Series([1., 1.5, np.nan, 2.5, 3.])
@@ -353,6 +355,33 @@ class TestTimeSeries(TestData):
         expected = Series([np.nan, 0.5, np.nan, 2.5 / 1.5 - 1, .2])
         assert_series_equal(chg, expected)
 
+    def test_pct_change_periods_freq(self):
+        # GH 7292
+        rs_freq = self.ts.pct_change(freq='5B')
+        rs_periods = self.ts.pct_change(5)
+        assert_series_equal(rs_freq, rs_periods)
+
+        rs_freq = self.ts.pct_change(freq='3B', fill_method=None)
+        rs_periods = self.ts.pct_change(3, fill_method=None)
+        assert_series_equal(rs_freq, rs_periods)
+
+        rs_freq = self.ts.pct_change(freq='3B', fill_method='bfill')
+        rs_periods = self.ts.pct_change(3, fill_method='bfill')
+        assert_series_equal(rs_freq, rs_periods)
+
+        rs_freq = self.ts.pct_change(freq='7B', fill_method='pad', limit=1)
+        rs_periods = self.ts.pct_change(7, fill_method='pad', limit=1)
+        assert_series_equal(rs_freq, rs_periods)
+
+        rs_freq = self.ts.pct_change(freq='7B', fill_method='bfill', limit=3)
+        rs_periods = self.ts.pct_change(7, fill_method='bfill', limit=3)
+        assert_series_equal(rs_freq, rs_periods)
+
+        empty_ts = Series(index=self.ts.index)
+        rs_freq = empty_ts.pct_change(freq='14B')
+        rs_periods = empty_ts.pct_change(14)
+        assert_series_equal(rs_freq, rs_periods)
+
     def test_autocorr(self):
         # Just run the function
         corr1 = self.ts.autocorr()
