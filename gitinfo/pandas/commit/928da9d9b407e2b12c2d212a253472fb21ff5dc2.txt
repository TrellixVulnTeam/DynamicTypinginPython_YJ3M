commit 928da9d9b407e2b12c2d212a253472fb21ff5dc2
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Apr 11 20:46:51 2012 -0400

    ENH: use filtered exog index for the y_predict result, per #1027 close #1008

diff --git a/pandas/stats/ols.py b/pandas/stats/ols.py
index 55c2d074d..8a7db26ab 100644
--- a/pandas/stats/ols.py
+++ b/pandas/stats/ols.py
@@ -361,13 +361,27 @@ class OLS(object):
     @cache_readonly
     def _y_fitted_raw(self):
         """Returns the raw fitted y values."""
-        return self.sm_ols.fittedvalues
+        if self._weights is None:
+            X = self._x_filtered.values
+        else:
+            # XXX
+            return self.sm_ols.fittedvalues
+
+        b = self._beta_raw
+        return np.dot(X, b)
 
     @cache_readonly
     def y_fitted(self):
         """Returns the fitted y values.  This equals BX."""
-        result = Series(self._y_fitted_raw, index=self._y.index)
-        return result.reindex(self._y_orig.index)
+        if self._weights is None:
+            index = self._x_filtered.index
+            orig_index = index
+        else:
+            index = self._y.index
+            orig_index = self._y_orig.index
+
+        result = Series(self._y_fitted_raw, index=index)
+        return result.reindex(orig_index)
 
     @cache_readonly
     def _y_predict_raw(self):
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index cda7da2ef..03145fd3e 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -314,6 +314,26 @@ class TestOLSMisc(unittest.TestCase):
         pred4 = model1.predict(beta=beta)
         assert_series_equal(Series(0., pred4.index), pred4)
 
+    def test_predict_longer_exog(self):
+        exogenous = {"1998": "4760","1999": "5904","2000": "4504",
+                     "2001": "9808","2002": "4241","2003": "4086",
+                     "2004": "4687","2005": "7686","2006": "3740",
+                     "2007": "3075","2008": "3753","2009": "4679",
+                     "2010": "5468","2011": "7154","2012": "4292",
+                     "2013": "4283","2014": "4595","2015": "9194",
+                     "2016": "4221","2017": "4520"}
+        endogenous = {"1998": "691", "1999": "1580", "2000": "80",
+                      "2001": "1450", "2002": "555", "2003": "956",
+                      "2004": "877", "2005": "614", "2006": "468",
+                      "2007": "191"}
+
+        endog = Series(endogenous)
+        exog = Series(exogenous)
+        model = ols(y=endog, x=exog)
+
+        pred = model.y_predict
+        self.assert_(pred.index.equals(exog.index))
+
     def test_longpanel_series_combo(self):
         wp = tm.makePanel()
         lp = wp.to_frame()
