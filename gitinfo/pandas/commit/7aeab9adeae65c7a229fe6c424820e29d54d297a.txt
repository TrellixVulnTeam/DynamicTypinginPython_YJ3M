commit 7aeab9adeae65c7a229fe6c424820e29d54d297a
Author: akittredge <andrewlkittredge@gmail.com>
Date:   Thu Feb 13 20:39:37 2014 -0500

    str_extract should work for timeseries, bug 6348

diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index bd8e1b196..c8493317e 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -451,11 +451,15 @@ def str_extract(arr, pat, flags=0):
         else:
             return empty_row
     if regex.groups == 1:
-        result = Series([f(val)[0] for val in arr], name=regex.groupindex.get(1))
+        result = Series([f(val)[0] for val in arr], 
+                        name=regex.groupindex.get(1),
+                        index=arr.index)
     else:
         names = dict(zip(regex.groupindex.values(), regex.groupindex.keys()))
         columns = [names.get(1 + i, i) for i in range(regex.groups)]
-        result = DataFrame([f(val) for val in arr], columns=columns)
+        result = DataFrame([f(val) for val in arr], 
+                           columns=columns, 
+                           index=arr.index)
     return result
 
 
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index 319d3e24a..d959a83f0 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -547,6 +547,22 @@ class TestStringMethods(tm.TestCase):
         result = Series(['A1', 'B2', 'C']).str.extract('(?P<letter>[ABC])(?P<number>[123])?')
         exp = DataFrame([['A', '1'], ['B', '2'], ['C', NA]], columns=['letter', 'number'])
         tm.assert_frame_equal(result, exp)
+        
+        def check_index(index):
+            data = ['A1', 'B2', 'C']
+            index = index[:len(data)]
+            result = Series(data, index=index).str.extract('(\d)') 
+            exp = Series(['1', '2', NA], index=index)
+            tm.assert_series_equal(result, exp) 
+         
+            result = Series(data, index=index).str.extract('(?P<letter>\D)(?P<number>\d)?') 
+            exp = DataFrame([['A', '1'], ['B', '2'], ['C', NA]], columns=['letter', 'number'], index=index)
+            tm.assert_frame_equal(result, exp) 
+
+        for index in [ tm.makeStringIndex, tm.makeUnicodeIndex, tm.makeIntIndex,
+                       tm.makeDateIndex, tm.makePeriodIndex ]:
+            check_index(index())
+
 
     def test_get_dummies(self):
         s = Series(['a|b', 'a|c', np.nan])
