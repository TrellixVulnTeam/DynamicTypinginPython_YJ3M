commit aa0f1382fbe190c04f3c51678e64ef2695868f30
Author: pv8493013j <40920480+pv8473h12@users.noreply.github.com>
Date:   Mon Nov 4 16:54:54 2019 +0000

    GH 16051: DataFrame.replace() overwrites when values are non-numeric (#29359)

diff --git a/pandas/tests/frame/test_replace.py b/pandas/tests/frame/test_replace.py
index 5eb2416d0..c30efa121 100644
--- a/pandas/tests/frame/test_replace.py
+++ b/pandas/tests/frame/test_replace.py
@@ -1295,3 +1295,30 @@ class TestDataFrameReplace:
         result = df.replace(to_replace=to_replace, value=None, method=method)
         expected = DataFrame(expected)
         tm.assert_frame_equal(result, expected)
+
+    @pytest.mark.parametrize(
+        "df, to_replace, exp",
+        [
+            (
+                {"col1": [1, 2, 3], "col2": [4, 5, 6]},
+                {4: 5, 5: 6, 6: 7},
+                {"col1": [1, 2, 3], "col2": [5, 6, 7]},
+            ),
+            (
+                {"col1": [1, 2, 3], "col2": ["4", "5", "6"]},
+                {"4": "5", "5": "6", "6": "7"},
+                {"col1": [1, 2, 3], "col2": ["5", "6", "7"]},
+            ),
+        ],
+    )
+    def test_replace_commutative(self, df, to_replace, exp):
+        # GH 16051
+        # DataFrame.replace() overwrites when values are non-numeric
+        # also added to data frame whilst issue was for series
+
+        df = pd.DataFrame(df)
+
+        expected = pd.DataFrame(exp)
+        result = df.replace(to_replace)
+
+        tm.assert_frame_equal(result, expected)
diff --git a/pandas/tests/series/test_replace.py b/pandas/tests/series/test_replace.py
index 86a54922f..ebfd468e0 100644
--- a/pandas/tests/series/test_replace.py
+++ b/pandas/tests/series/test_replace.py
@@ -306,6 +306,24 @@ class TestSeriesReplace:
         expected = pd.Series([0, 1, "100000000000000000001"])
         tm.assert_series_equal(result, expected)
 
+    @pytest.mark.parametrize(
+        "ser, to_replace, exp",
+        [
+            ([1, 2, 3], {1: 2, 2: 3, 3: 4}, [2, 3, 4]),
+            (["1", "2", "3"], {"1": "2", "2": "3", "3": "4"}, ["2", "3", "4"]),
+        ],
+    )
+    def test_replace_commutative(self, ser, to_replace, exp):
+        # GH 16051
+        # DataFrame.replace() overwrites when values are non-numeric
+
+        series = pd.Series(ser)
+
+        expected = pd.Series(exp)
+        result = series.replace(to_replace)
+
+        tm.assert_series_equal(result, expected)
+
     @pytest.mark.parametrize(
         "ser, exp", [([1, 2, 3], [1, True, 3]), (["x", 2, 3], ["x", True, 3])]
     )
@@ -316,4 +334,5 @@ class TestSeriesReplace:
         series = pd.Series(ser)
         result = series.replace(2, True)
         expected = pd.Series(exp)
+
         tm.assert_series_equal(result, expected)
