commit e9639888d36ea14e70b226ddae7e816d517208f6
Author: Chang She <changshe@gmail.com>
Date:   Wed Dec 26 14:33:17 2012 -0500

    BUG: Series arithmetic operator cannot handle constant and ndarray #2574

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 6cf511d32..7dd9a8419 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -245,7 +245,16 @@ def _flex_method(op, name):
 
     @Appender(doc)
     def f(self, other, level=None, fill_value=None):
-        return self._binop(other, op, level=level, fill_value=fill_value)
+        if isinstance(other, Series):
+            return self._binop(other, op, level=level, fill_value=fill_value)
+        elif isinstance(other, (np.ndarray, list, tuple)):
+            if len(other) != len(self):
+                raise ValueError('Lengths must be equal')
+            return self._binop(Series(other, self.index), op,
+                               level=level, fill_value=fill_value)
+        else:
+            return Series(op(self.values, other), self.index,
+                          name=self.name)
 
     f.__name__ = name
     return f
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 1b0065c18..f0112e1ee 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1478,6 +1478,23 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         self.assert_(not bool_series.all())
         self.assert_(bool_series.any())
 
+    def test_op_method(self):
+        def _check_op(series, other, op, alt):
+            result = op(series, other)
+            expected = alt(series, other)
+            tm.assert_almost_equal(result, expected)
+
+        def check(series, other):
+            simple_ops = ['add', 'sub', 'mul']
+
+            for opname in simple_ops:
+                _check_op(series, other, getattr(Series, opname),
+                          getattr(operator, opname))
+
+        check(self.ts, self.ts * 2)
+        check(self.ts, self.ts[::2])
+        check(self.ts, 5)
+
     def test_operators(self):
 
         def _check_op(series, other, op, pos_only=False):
