commit 9211e6e421f42f98e08449b13047eaba59277eab
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Aug 25 19:18:41 2011 -0400

    ENH: convert multi-line pure python to continuation lines using the ast

diff --git a/doc/source/dataframe.rst b/doc/source/dataframe.rst
index df167d588..0e8edd74a 100644
--- a/doc/source/dataframe.rst
+++ b/doc/source/dataframe.rst
@@ -48,7 +48,9 @@ which will be used for many examples to follow:
     from pandas import *; from numpy.random import randn
     index = Index(DateRange('1/1/2009', '12/1/2009', timeRule='EOM'))
     N = len(index)
-    data = {'A' : randn(N), 'B' : randn(N), 'C' : randn(N)}
+    data = {'A' : randn(N),
+            'B' : randn(N),
+            'C' : randn(N)}
     df = DataFrame(data, index=index)
     df
 
diff --git a/doc/sphinxext/ipython_directive.py b/doc/sphinxext/ipython_directive.py
index 3c22ffd56..fb64e4c93 100644
--- a/doc/sphinxext/ipython_directive.py
+++ b/doc/sphinxext/ipython_directive.py
@@ -57,6 +57,7 @@ Authors
 #-----------------------------------------------------------------------------
 
 # Stdlib
+import ast
 import cStringIO
 import os
 import re
@@ -146,7 +147,7 @@ def block_parser(part, rgxin, rgxout, fmtin, fmtout):
             lineno, inputline = int(matchin.group(1)), matchin.group(2)
 
             # the ....: continuation string
-            continuation = '   %s:'%''.join(['.']*(len(str(lineno))+2))
+            continuation = '   %s:'% ''.join(['.']*(len(str(lineno))+2))
             Nc = len(continuation)
             # input lines can continue on for more than one line, if
             # we have a '\' line continuation char or a function call
@@ -333,7 +334,7 @@ class EmbeddedSphinxShell(object):
                 if not is_verbatim:
                     self.process_input_line(line, store_history=store_history)
 
-                formatted_line = '%s %s'%(continuation, line)
+                formatted_line = '%s%s'%(continuation, line)
 
             if not is_suppress:
                 ret.append(formatted_line)
@@ -463,10 +464,17 @@ class EmbeddedSphinxShell(object):
 
             line_stripped = line.strip()
 
+            try:
+                leading_whitespace = re.search('\s+', line).group(0)
+            except AttributeError:
+                leading_whitespace = ''
+
             if not len(line):
                 output.append(line) # preserve empty lines in output
                 continue
 
+
+
             # handle decorators
             if line_stripped.startswith('@'):
                 output.extend([line])
@@ -536,10 +544,13 @@ class EmbeddedSphinxShell(object):
         output = []
         savefig = False # keep up with this to clear figure
         multiline = False # to handle line continuation
+        multiline_start = None
         fmtin = self.promptin
 
         modified_content = []
 
+        ct = 0
+
         for lineno, line in enumerate(content):
 
             line_stripped = line.strip()
@@ -547,9 +558,27 @@ class EmbeddedSphinxShell(object):
                 modified_content.append(line)
                 continue
 
-            modified = u"%s %s" % (fmtin%lineno,line_stripped)
-            modified_content.append(modified)
-            modified_content.append(u'')
+            continuation  = u'   %s:'% ''.join(['.']*(len(str(ct))+2))
+            if not multiline:
+                modified = u"%s %s" % (fmtin % ct, line_stripped)
+                modified_content.append(modified)
+                ct += 1
+                try:
+                    ast.parse(line_stripped)
+                    modified_content.append(u'')
+                except Exception:
+                    multiline = True
+                    multiline_start = lineno
+            else:
+                modified = u'%s %s' % (continuation, line)
+                modified_content.append(modified)
+                try:
+                    ast.parse('\n'.join(content[multiline_start:lineno+1]))
+                    modified_content.append(u'')
+                    multiline = False
+                except Exception:
+                    pass
+
             continue
 
             if not len(line):
@@ -829,7 +858,8 @@ In [106]: print x
 jdh
 
 In [109]: for i in range(10):
-   .....:     print i
+   n
+.....:     print i
    .....:
    .....:
 0
