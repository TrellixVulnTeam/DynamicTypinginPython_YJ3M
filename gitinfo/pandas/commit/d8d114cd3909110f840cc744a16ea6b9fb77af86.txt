commit d8d114cd3909110f840cc744a16ea6b9fb77af86
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Wed Dec 5 06:15:23 2018 -0600

    CI: Check import is warning free (#24102)

diff --git a/ci/code_checks.sh b/ci/code_checks.sh
index a8a86eedb..953547f72 100755
--- a/ci/code_checks.sh
+++ b/ci/code_checks.sh
@@ -153,8 +153,8 @@ fi
 ### CODE ###
 if [[ -z "$CHECK" || "$CHECK" == "code" ]]; then
 
-    MSG='Check for modules that pandas should not import' ; echo $MSG
-    python -c "
+    MSG='Check import. No warnings, and blacklist some optional dependencies' ; echo $MSG
+    python -W error -c "
 import sys
 import pandas
 
diff --git a/pandas/compat/__init__.py b/pandas/compat/__init__.py
index 5108e23c5..f9c659106 100644
--- a/pandas/compat/__init__.py
+++ b/pandas/compat/__init__.py
@@ -139,6 +139,7 @@ if PY3:
     Hashable = collections.abc.Hashable
     Iterable = collections.abc.Iterable
     Mapping = collections.abc.Mapping
+    MutableMapping = collections.abc.MutableMapping
     Sequence = collections.abc.Sequence
     Sized = collections.abc.Sized
     Set = collections.abc.Set
@@ -200,6 +201,7 @@ else:
     Hashable = collections.Hashable
     Iterable = collections.Iterable
     Mapping = collections.Mapping
+    MutableMapping = collections.MutableMapping
     Sequence = collections.Sequence
     Sized = collections.Sized
     Set = collections.Set
diff --git a/pandas/core/tools/datetimes.py b/pandas/core/tools/datetimes.py
index 658361401..86bb4e4b9 100644
--- a/pandas/core/tools/datetimes.py
+++ b/pandas/core/tools/datetimes.py
@@ -1,4 +1,3 @@
-from collections import MutableMapping
 from datetime import datetime, time
 from functools import partial
 
@@ -18,6 +17,7 @@ from pandas.core.dtypes.common import (
 from pandas.core.dtypes.generic import ABCDataFrame, ABCIndexClass, ABCSeries
 from pandas.core.dtypes.missing import notna
 
+from pandas import compat
 from pandas.core import algorithms
 
 
@@ -570,7 +570,7 @@ def to_datetime(arg, errors='raise', dayfirst=False, yearfirst=False,
             from pandas import Series
             values = convert_listlike(arg._values, True, format)
             result = Series(values, index=arg.index, name=arg.name)
-    elif isinstance(arg, (ABCDataFrame, MutableMapping)):
+    elif isinstance(arg, (ABCDataFrame, compat.MutableMapping)):
         result = _assemble_from_unit_mappings(arg, errors=errors)
     elif isinstance(arg, ABCIndexClass):
         cache_array = _maybe_cache(arg, format, cache, convert_listlike)
