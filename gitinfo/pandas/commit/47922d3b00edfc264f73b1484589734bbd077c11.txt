commit 47922d3b00edfc264f73b1484589734bbd077c11
Author: Kaushal Rohit <rohit.kg98@gmail.com>
Date:   Fri Jan 24 09:55:16 2020 +0530

    BUG: Integer Overflow in read_json with big number in string (#30329)

diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 9fd161c6c..d0cf92b60 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -191,7 +191,7 @@ MultiIndex
 
 I/O
 ^^^
-
+- Bug in :meth:`read_json` where integer overflow was occuring when json contains big number strings. (:issue:`30320`)
 -
 -
 
diff --git a/pandas/io/json/_json.py b/pandas/io/json/_json.py
index ae6ae70cb..204807b55 100644
--- a/pandas/io/json/_json.py
+++ b/pandas/io/json/_json.py
@@ -942,7 +942,7 @@ class Parser:
                 if (new_data == data).all():
                     data = new_data
                     result = True
-            except (TypeError, ValueError):
+            except (TypeError, ValueError, OverflowError):
                 pass
 
         # coerce ints to 64
diff --git a/pandas/tests/io/json/test_pandas.py b/pandas/tests/io/json/test_pandas.py
index bb873c71e..638bcaa21 100644
--- a/pandas/tests/io/json/test_pandas.py
+++ b/pandas/tests/io/json/test_pandas.py
@@ -1640,3 +1640,10 @@ DataFrame\\.index values are different \\(100\\.0 %\\)
         with tm.assert_produces_warning(FutureWarning):
             result = read_json(expected.to_json(), numpy=True)
             tm.assert_frame_equal(result, expected)
+
+    def test_frame_int_overflow(self):
+        # GH 30320
+        encoded_json = json.dumps([{"col": "31900441201190696999"}, {"col": "Text"}])
+        expected = DataFrame({"col": ["31900441201190696999", "Text"]})
+        result = read_json(encoded_json)
+        tm.assert_frame_equal(result, expected)
