commit 01e15c236958690eae76bc4a533c671bf6d5bf6f
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Dec 4 22:16:33 2009 +0000

    unit tests
    
    git-svn-id: http://pandas.googlecode.com/svn/trunk@74 d5231056-7de3-11de-ac95-d976489f1ece

diff --git a/pandas/core/tests/common.py b/pandas/core/tests/common.py
index 411e08e79..c47aa4a8a 100644
--- a/pandas/core/tests/common.py
+++ b/pandas/core/tests/common.py
@@ -99,6 +99,18 @@ def getSeriesData():
 def getTimeSeriesData():
     return dict((c, makeTimeSeries()) for c in getCols(K))
 
+def getMixedTypeDict():
+    index = Index(['a', 'b', 'c', 'd', 'e'])
+
+    data = {
+        'A' : [0., 1., 2., 3., 4.],
+        'B' : [0., 1., 0., 1., 0.],
+        'C' : ['foo1', 'foo2', 'foo3', 'foo4', 'foo5'],
+        'D' : DateRange('1/1/2009', periods=5)
+    }
+
+    return index, data
+
 def makeDataFrame():
     data = getSeriesData()
     return DataFrame(data)
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index 6c651b8b3..8b11804cb 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -7,6 +7,8 @@ import numpy as np
 
 from pandas.core.api import DateRange, DataFrame, Index, Series
 from pandas.core.datetools import bday
+
+from pandas.core.tests.common import assert_almost_equal
 import pandas.core.tests.common as common
 
 #-------------------------------------------------------------------------------
@@ -33,6 +35,12 @@ class TestDataFrame(unittest.TestCase):
     def test_constructor(self):
         pass
 
+    def test_constructor_mixed(self):
+        index, data = common.getMixedTypeDict()
+
+        indexed_frame = self.klass(data, index=index)
+        unindexed_frame = self.klass(data)
+
     def test_fromDict(self):
         newFrame = self.klass.fromDict(col1=self.ts1, col2 = self.ts2)
         for idx in newFrame.index:
@@ -323,7 +331,18 @@ class TestDataFrame(unittest.TestCase):
         pass
 
     def test_merge(self):
-        pass
+        index, data = common.getMixedTypeDict()
+        target = DataFrame(data, index=index)
+
+        # Merge on string value
+        source = DataFrame({'MergedA' : data['A'], 'MergedD' : data['D']},
+                           index=data['C'])
+        merged = target.merge(source, on='C')
+
+        self.assert_(np.array_equal(merged['MergedA'], target['A']))
+        self.assert_(np.array_equal(merged['MergedD'], target['D']))
+
+        # Test when some are missing
 
     def test_statistics(self):
         sumFrame = self.frame.apply(np.sum)
