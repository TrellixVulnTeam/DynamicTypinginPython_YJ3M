commit 7e99bb433c69b7bc009dc00360954e46ce467757
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Fri Apr 17 11:06:19 2020 -0700

    CLN: use _values_for_argsort in fewer places (#33501)

diff --git a/pandas/core/algorithms.py b/pandas/core/algorithms.py
index 62a3808d3..9db9805e0 100644
--- a/pandas/core/algorithms.py
+++ b/pandas/core/algorithms.py
@@ -616,7 +616,7 @@ def factorize(
     values = _ensure_arraylike(values)
     original = values
 
-    if is_extension_array_dtype(values):
+    if is_extension_array_dtype(values.dtype):
         values = extract_array(values)
         codes, uniques = values.factorize(na_sentinel=na_sentinel)
         dtype = original.dtype
diff --git a/pandas/core/arrays/categorical.py b/pandas/core/arrays/categorical.py
index b3fb34598..af07dee3b 100644
--- a/pandas/core/arrays/categorical.py
+++ b/pandas/core/arrays/categorical.py
@@ -370,7 +370,7 @@ class Categorical(ExtensionArray, PandasObject):
             # we're inferring from values
             dtype = CategoricalDtype(categories, dtype.ordered)
 
-        elif is_categorical_dtype(values):
+        elif is_categorical_dtype(values.dtype):
             old_codes = (
                 values._values.codes if isinstance(values, ABCSeries) else values.codes
             )
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index a91757fc4..08ae74361 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -3596,12 +3596,8 @@ class Index(IndexOpsMixin, PandasObject):
         # We only get here if dtypes match
         assert self.dtype == other.dtype
 
-        if is_extension_array_dtype(self.dtype):
-            lvalues = self._data._values_for_argsort()
-            rvalues = other._data._values_for_argsort()
-        else:
-            lvalues = self._values
-            rvalues = other._values
+        lvalues = self._get_engine_target()
+        rvalues = other._get_engine_target()
 
         left_idx, right_idx = _get_join_indexers(
             [lvalues], [rvalues], how=how, sort=True
@@ -3773,12 +3769,8 @@ class Index(IndexOpsMixin, PandasObject):
             else:
                 return ret_index
 
-        if is_extension_array_dtype(self.dtype):
-            sv = self._data._values_for_argsort()
-            ov = other._data._values_for_argsort()
-        else:
-            sv = self._values
-            ov = other._values
+        sv = self._get_engine_target()
+        ov = other._get_engine_target()
 
         if self.is_unique and other.is_unique:
             # We can perform much better than the general case
diff --git a/pandas/core/indexes/extension.py b/pandas/core/indexes/extension.py
index c75299053..6e965ecea 100644
--- a/pandas/core/indexes/extension.py
+++ b/pandas/core/indexes/extension.py
@@ -232,6 +232,9 @@ class ExtensionIndex(Index):
         return np.asarray(self._data, dtype=dtype)
 
     def _get_engine_target(self) -> np.ndarray:
+        # NB: _values_for_argsort happens to match the desired engine targets
+        #  for all of our existing EA-backed indexes, but in general
+        #  cannot be relied upon to exist.
         return self._data._values_for_argsort()
 
     @doc(Index.dropna)
