commit ad33f4e251b16cdabec415a2a8e67d892750e651
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Sep 7 22:01:56 2012 -0400

    BUG: Let Series.str.split accept no arguments (like str.split) close #1859

diff --git a/RELEASE.rst b/RELEASE.rst
index 428802f95..457f1ba45 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -100,6 +100,7 @@ pandas 0.8.2
   - Fix issue calling sort on result of Series.unique (#1807)
   - Fix numerical issue leading to square root of negative number in
     rolling_std (#1840)
+  - Let Series.str.split accept no arguments (like str.split) (#1859)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/strings.py b/pandas/core/strings.py
index ca8feab65..91d210869 100644
--- a/pandas/core/strings.py
+++ b/pandas/core/strings.py
@@ -474,23 +474,27 @@ def str_center(arr, width):
     return str_pad(arr, width, side='both')
 
 
-def str_split(arr, pat, n=0):
+def str_split(arr, pat=None, n=0):
     """
     Split each string (a la re.split) in array by given pattern, propagating NA
     values
 
     Parameters
     ----------
-    pat : string
-        String or regular expression to split on
+    pat : string, default None
+        String or regular expression to split on. If None, splits on whitespace
     n : int, default 0 (all)
 
     Returns
     -------
     split : array
     """
-    regex = re.compile(pat)
-    f = lambda x: regex.split(x, maxsplit=n)
+    if pat is None:
+        f = lambda x: x.split()
+    else:
+        regex = re.compile(pat)
+        f = lambda x: regex.split(x, maxsplit=n)
+
     return _na_map(f, arr)
 
 
@@ -690,7 +694,7 @@ class StringMethods(object):
         return self._wrap_result(result)
 
     @copy(str_split)
-    def split(self, pat, n=0):
+    def split(self, pat=None, n=0):
         result = str_split(self.series, pat, n=n)
         return self._wrap_result(result)
 
diff --git a/pandas/tests/test_strings.py b/pandas/tests/test_strings.py
index 175348604..daa35ed2b 100644
--- a/pandas/tests/test_strings.py
+++ b/pandas/tests/test_strings.py
@@ -463,6 +463,13 @@ class TestStringMethods(unittest.TestCase):
                       [u'f', u'g', u'h']])
         tm.assert_series_equal(result, exp)
 
+    def test_split_noargs(self):
+        # #1859
+        s = Series(['Wes McKinney', 'Travis  Oliphant'])
+
+        result = s.str.split()
+        self.assertEquals(result[1], ['Travis', 'Oliphant'])
+
     def test_slice(self):
         values = Series(['aafootwo','aabartwo', NA, 'aabazqux'])
 
