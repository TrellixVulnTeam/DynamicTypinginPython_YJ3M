commit 01ea9cb140e824e8b3bf45cf03a882d92d4968fb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Sep 7 23:49:04 2011 -0400

    ENH: added add_prefix / add_suffix methods to DataFrame

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 133ad9314..965b5bc36 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1398,6 +1398,36 @@ class DataFrame(NDFrame):
         self._data = self._data.rename_items(mapper)
         self._series_cache.clear()
 
+    def add_prefix(self, prefix):
+        """
+        Concatenate prefix string with panel items names.
+
+        Parameters
+        ----------
+        prefix : string
+
+        Returns
+        -------
+        LongPanel
+        """
+        f = (('%s' % prefix) + '%s').__mod__
+        return self.rename(columns=f)
+
+    def add_suffix(self, suffix):
+        """
+        Concatenate suffix string with panel items names
+
+        Parameters
+        ----------
+        suffix : string
+
+        Returns
+        -------
+        with_suffix : DataFrame
+        """
+        f = ('%s' + ('%s' % suffix)).__mod__
+        return self.rename(columns=f)
+
     #----------------------------------------------------------------------
     # Arithmetic / combination related
 
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index c855caa24..c7d185715 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -1259,7 +1259,7 @@ class LongPanel(DataFrame):
         if prefix is None:
             prefix = ''
 
-        result = result.addPrefix(prefix)
+        result = result.add_prefix(prefix)
 
         return result
 
@@ -1321,28 +1321,6 @@ class LongPanel(DataFrame):
             return LongPanel(new_values, columns=self.items,
                              index=self.index)
 
-    def addPrefix(self, prefix=None):
-        """
-        Concatenate prefix string with panel items names.
-
-        Parameters
-        ----------
-        prefix : string
-
-        Returns
-        -------
-        LongPanel
-
-        Note
-        ----
-        does *not* copy values matrix
-        """
-        new_items = [_prefix_item(item, prefix) for item in self.items]
-
-        return LongPanel(self.values, columns=new_items,
-                         index=self.index)
-
-
 def _prep_ndarray(values, copy=True):
     if not isinstance(values, np.ndarray):
         values = np.asarray(values)
@@ -1355,14 +1333,6 @@ def _prep_ndarray(values, copy=True):
     assert(values.ndim == 3)
     return values
 
-
-def _prefix_item(item, prefix=None):
-    if prefix is None:
-        return item
-
-    template = '%s%s'
-    return template % (prefix, item)
-
 def _homogenize_dict(frames, intersect=True, dtype=None):
     """
     Conform set of DataFrame-like objects to either an intersection
diff --git a/pandas/stats/plm.py b/pandas/stats/plm.py
index d39d5c211..853f1e20c 100644
--- a/pandas/stats/plm.py
+++ b/pandas/stats/plm.py
@@ -271,7 +271,7 @@ class PanelOLS(OLS):
 
             dummies = dummies.filter(dummies.items - [to_exclude])
 
-        dummies = dummies.addPrefix('FE_')
+        dummies = dummies.add_prefix('FE_')
         panel = panel.join(dummies)
 
         return panel
@@ -317,7 +317,7 @@ class PanelOLS(OLS):
                 dropped_dummy = True
 
             dummies = _convertDummies(dummies, cat_mappings.get(effect))
-            dummies = dummies.addPrefix('%s_' % effect)
+            dummies = dummies.add_prefix('%s_' % effect)
             panel = panel.join(dummies)
 
         return panel
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5e8075985..c18097e28 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -1889,6 +1889,15 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         renamed = self.frame.T.rename(index={'C' : 'foo', 'D' : 'bar'})
         self.assert_(np.array_equal(renamed.index, ['A', 'B', 'foo', 'bar']))
 
+    def test_add_prefix_suffix(self):
+        with_prefix = self.frame.add_prefix('foo#')
+        expected = ['foo#%s' % c for c in self.frame.columns]
+        self.assert_(np.array_equal(with_prefix.columns, expected))
+
+        with_suffix = self.frame.add_suffix('#foo')
+        expected = ['%s#foo' % c for c in self.frame.columns]
+        self.assert_(np.array_equal(with_suffix.columns, expected))
+
     #----------------------------------------------------------------------
     # Time series related
 
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 3b6156f0f..d0689f463 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -964,13 +964,10 @@ class TestLongPanel(unittest.TestCase):
     def test_merge(self):
         pass
 
-    def test_addPrefix(self):
-        lp = self.panel.addPrefix('foo#')
+    def test_add_prefix(self):
+        lp = self.panel.add_prefix('foo#')
         self.assertEqual(lp.items[0], 'foo#ItemA')
 
-        lp = self.panel.addPrefix()
-        assert_panel_equal(lp.to_wide(), self.panel.to_wide())
-
     def test_pivot(self):
         from pandas.core.reshape import _slow_pivot
 
