commit 5f5acc3f361f93b9c337286a32e304ac04a51288
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Thu Sep 1 09:28:06 2016 +0200

    TST: confirming tests for some fixed issues (#14117)
    
    * TST: assert indexing with list of Periods works (GH7710)
    
    * TST: assert median for timedelta with NaT works (GH8617)
    
    * TST: assert no conversion to float when resampling datetime64 values (13119)

diff --git a/pandas/tseries/tests/test_period.py b/pandas/tseries/tests/test_period.py
index 1ddcc11c1..468c3d5bf 100644
--- a/pandas/tseries/tests/test_period.py
+++ b/pandas/tseries/tests/test_period.py
@@ -2180,6 +2180,13 @@ class TestPeriodIndex(tm.TestCase):
                          pd.Period('2011-01', freq='M'))
         self.assertIs(s[pd.NaT], tslib.NaT)
 
+    def test_getitem_list_periods(self):
+        # GH 7710
+        rng = period_range(start='2012-01-01', periods=10, freq='D')
+        ts = Series(lrange(len(rng)), index=rng)
+        exp = ts.iloc[[1]]
+        tm.assert_series_equal(ts[[Period('2012-01-02', freq='D')]], exp)
+
     def test_slice_with_negative_step(self):
         ts = Series(np.arange(20),
                     period_range('2014-01', periods=20, freq='M'))
diff --git a/pandas/tseries/tests/test_resample.py b/pandas/tseries/tests/test_resample.py
index 2ebcdc999..204808dd5 100644
--- a/pandas/tseries/tests/test_resample.py
+++ b/pandas/tseries/tests/test_resample.py
@@ -2022,6 +2022,23 @@ class TestDatetimeIndex(Base, tm.TestCase):
         res = df['time'].resample('2D').first()
         tm.assert_series_equal(res, exp)
 
+    def test_resample_datetime_values(self):
+        # GH 13119
+        # check that datetime dtype is preserved when NaT values are
+        # introduced by the resampling
+
+        dates = [datetime(2016, 1, 15), datetime(2016, 1, 19)]
+        df = DataFrame({'timestamp': dates}, index=dates)
+
+        exp = Series([datetime(2016, 1, 15), pd.NaT, datetime(2016, 1, 19)],
+                     index=date_range('2016-01-15', periods=3, freq='2D'),
+                     name='timestamp')
+
+        res = df.resample('2D').first()['timestamp']
+        tm.assert_series_equal(res, exp)
+        res = df['timestamp'].resample('2D').first()
+        tm.assert_series_equal(res, exp)
+
 
 class TestPeriodIndex(Base, tm.TestCase):
     _multiprocess_can_split_ = True
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 5eb46684d..2355d663e 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -4400,6 +4400,14 @@ class TestSeriesDatetime64(tm.TestCase):
         result = df.values.squeeze()
         self.assertTrue((result[:, 0] == expected.values).all())
 
+    def test_nat_operations(self):
+        # GH 8617
+        s = Series([0, pd.NaT], dtype='m8[ns]')
+        exp = s[0]
+        self.assertEqual(s.median(), exp)
+        self.assertEqual(s.min(), exp)
+        self.assertEqual(s.max(), exp)
+
 
 class TestTimestamp(tm.TestCase):
     def test_class_ops_pytz(self):
