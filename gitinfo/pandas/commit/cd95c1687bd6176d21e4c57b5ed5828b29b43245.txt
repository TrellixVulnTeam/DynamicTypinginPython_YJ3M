commit cd95c1687bd6176d21e4c57b5ed5828b29b43245
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 4 16:33:32 2011 -0400

    ENH: use take instead of reindex for MultiIndex with single-key groupby, too, address GH #299

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 0ee29f42f..d2669f26e 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -174,7 +174,8 @@ class GroupBy(object):
     @cache_readonly
     def use_take(self):
         group_axis = self.obj._get_axis(self.axis)
-        return isinstance(group_axis, Int64Index) and len(self.groupings) == 1
+        take_types = Int64Index, MultiIndex
+        return isinstance(group_axis, take_types) and len(self.groupings) == 1
 
     def get_group(self, name, obj=None):
         if obj is None:
diff --git a/scripts/groupby_test.py b/scripts/groupby_test.py
index effe0671e..065ff825a 100644
--- a/scripts/groupby_test.py
+++ b/scripts/groupby_test.py
@@ -114,17 +114,23 @@ grouped = df.groupby(['key1', 'key2'])
 # dr = DateRange('1/1/2000', '1/1/2002')
 # ts = Series(np.random.randn(len(dr)), index=dr)
 
-import string
+# import string
 
-k = 20
-n = 1000
+# k = 20
+# n = 1000
 
-keys = list(string.letters[:k])
+# keys = list(string.letters[:k])
 
-df = DataFrame({'A' : np.tile(keys, n),
-                'B' : np.repeat(keys[:k/2], n * 2),
-                'C' : np.random.randn(k * n)})
+# df = DataFrame({'A' : np.tile(keys, n),
+#                 'B' : np.repeat(keys[:k/2], n * 2),
+#                 'C' : np.random.randn(k * n)})
+
+# def f():
+#     for x in df.groupby(['A', 'B']):
+#         pass
+
+a = np.arange(100).repeat(100)
+b = np.tile(np.arange(100), 100)
+index = MultiIndex.from_arrays([a, b])
+s = Series(np.random.randn(len(index)), index)
 
-def f():
-    for x in df.groupby(['A', 'B']):
-        pass
