commit ca5a702a7bc224d76573b9856c3f168690735b6a
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Oct 18 14:31:40 2011 -0400

    BUG: single-key DataFrame.join with list failed, GH #246

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 212bd6331..7b4ffcb5b 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2223,11 +2223,14 @@ class DataFrame(NDFrame):
             return self
 
         if isinstance(on, (list, tuple)):
-            join_key = zip(*[self[k] for k in on])
-            join_key = common._asarray_tuplesafe(join_key,
-                                                 dtype=np.object_)
+            if len(on) == 1:
+                join_key = self[on[0]].values
+            else:
+                join_key = zip(*[self[k] for k in on])
+                join_key = common._asarray_tuplesafe(join_key,
+                                                     dtype=np.object_)
         else:
-            join_key = np.asarray(self[on])
+            join_key = self[on].values
 
         new_data = self._data.join_on(other._data, join_key, axis=1,
                                       lsuffix=lsuffix, rsuffix=rsuffix)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 92ba3c343..d61b1f571 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2554,8 +2554,6 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         # merge column not p resent
         self.assertRaises(Exception, target.join, source, on='E')
 
-        # corner cases
-
         # nothing to merge
         merged = target.join(source.reindex([]), on='C')
 
@@ -2568,6 +2566,16 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(Exception, target.join, source, on='C',
                           how='left')
 
+    def test_join_on_singlekey_list(self):
+        df = DataFrame({'key' : ['a', 'a', 'b', 'b', 'c']})
+        df2 = DataFrame({'value' : [0, 1, 2]}, index=['a', 'b', 'c'])
+
+        # corner cases
+        joined = df.join(df2, on=['key'])
+        expected = df.join(df2, on='key')
+
+        assert_frame_equal(joined, expected)
+
     def test_join_on_multikey(self):
         index = MultiIndex(levels=[['foo', 'bar', 'baz', 'qux'],
                                    ['one', 'two', 'three']],
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index c398eebc8..92982e100 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -70,7 +70,7 @@ def isiterable(obj):
 def assert_almost_equal(a, b):
     if isinstance(a, dict) or isinstance(b, dict):
         return assert_dict_equal(a, b)
-    
+
     if isinstance(a, basestring):
         assert a == b, (a, b)
         return True
@@ -116,9 +116,9 @@ def assert_dict_equal(a, b, compare_keys=True):
         assert_almost_equal(a[k], b[k])
 
 def assert_series_equal(left, right):
+    assert_almost_equal(left, right)
     assert(left.dtype == right.dtype)
     assert(left.index.equals(right.index))
-    assert_almost_equal(left, right)
 
 def assert_frame_equal(left, right):
     assert(isinstance(left, DataFrame))
