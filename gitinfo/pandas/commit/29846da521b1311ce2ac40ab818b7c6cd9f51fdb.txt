commit 29846da521b1311ce2ac40ab818b7c6cd9f51fdb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Aug 12 17:34:48 2012 -0400

    BUG: allow MultiIndex setops with all length-0 indexes close #1727

diff --git a/RELEASE.rst b/RELEASE.rst
index bd3378595..94926034c 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -83,6 +83,7 @@ pandas 0.8.2
   - Fix re: unicode MultiIndex level names in Series/DataFrame repr (#1736)
   - Handle PeriodIndex in to_datetime instance method (#1703)
   - Support StaticTzInfo in DatetimeIndex infrastructure (#1692)
+  - Allow MultiIndex setops with length-0 other type indexes (#1727)
 
 pandas 0.8.1
 ============
diff --git a/pandas/core/index.py b/pandas/core/index.py
index b28e0ef35..20119d799 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -2285,6 +2285,8 @@ class MultiIndex(Index):
 
     def _assert_can_do_setop(self, other):
         if not isinstance(other, MultiIndex):
+            if len(other) == 0:
+                return True
             raise TypeError('can only call with other hierarchical '
                             'index objects')
 
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 6abd8594f..c0546b67e 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -1432,6 +1432,18 @@ x   q   30      3    -0.6662 -0.5243 -0.3580  0.89145  2.5838"""
         col[subset] = 97
         self.assert_((self.frame.ix[subset, 'B'] == 97).all())
 
+    def test_frame_dict_constructor_empty_series(self):
+        s1 = Series([1,2,3, 4], index=MultiIndex.from_tuples([(1,2),(1,3),
+                                                              (2,2),(2,4)]))
+        s2 = Series([1,2,3,4],
+                    index=MultiIndex.from_tuples([(1,2),(1,3),(3,2),(3,4)]))
+        s3 = Series()
+
+        # it works!
+        df = DataFrame({'foo':s1, 'bar':s2, 'baz':s3})
+        df = DataFrame.from_dict({'foo':s1, 'baz':s3, 'bar':s2})
+
+
 if __name__ == '__main__':
 
     # unittest.main()
