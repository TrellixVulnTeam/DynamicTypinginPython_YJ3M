commit c34182041b346de814a8476d94aec0292c0a78e6
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Tue Feb 26 14:51:43 2013 -0500

    add a test for setting display.max_info_rows to None

diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 3df8f4ddf..3473e5fff 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -480,28 +480,42 @@ class TestDataFrameFormatting(unittest.TestCase):
         fmt.set_printoptions(max_rows=200)
 
     def test_large_frame_repr(self):
-        old_max_rows = pd.get_option('display.max_rows')
-        old_max_info_rows = pd.get_option('display.max_info_rows')
-
-        nrows, ncols = 3, 2
+        def wrap_rows_options(f):
+            def _f(*args, **kwargs):
+                old_max_rows = pd.get_option('display.max_rows')
+                old_max_info_rows = pd.get_option('display.max_info_rows')
+                o = f(*args, **kwargs)
+                pd.set_option('display.max_rows', old_max_rows)
+                pd.set_option('display.max_info_rows', old_max_info_rows)
+                return o
+            return _f
+
+        @wrap_rows_options
+        def test_setting(value, nrows=3, ncols=2):
+            if value is None:
+                expected_difference = 0
+            elif isinstance(value, int):
+                expected_difference = ncols
+            else:
+                raise ValueError("'value' must be int or None")
 
-        # need to set max rows so that we get an info-style repr
-        pd.set_option('display.max_rows', nrows - 1)
-        pd.set_option('display.max_info_rows', nrows)
+            pd.set_option('display.max_rows', nrows - 1)
+            pd.set_option('display.max_info_rows', value)
 
-        smallx = DataFrame(np.random.rand(nrows, ncols))
-        repr_small = repr(smallx)
+            smallx = DataFrame(np.random.rand(nrows, ncols))
+            repr_small = repr(smallx)
 
-        bigx = DataFrame(np.random.rand(nrows + 1, ncols))
-        repr_big = repr(bigx)
+            bigx = DataFrame(np.random.rand(nrows + 1, ncols))
+            repr_big = repr(bigx)
 
-        diff = len(repr_small.splitlines()) - len(repr_big.splitlines())
+            diff = len(repr_small.splitlines()) - len(repr_big.splitlines())
 
-        # the difference in line count is the number of columns
-        self.assertEqual(diff, ncols)
+            # the difference in line count is the number of columns
+            self.assertEqual(diff, expected_difference)
 
-        pd.set_option('display.max_rows', old_max_rows)
-        pd.set_option('display.max_info_rows', old_max_info_rows)
+        test_setting(None)
+        test_setting(3)
+        self.assertRaises(ValueError, test_setting, 'string')
 
     def test_wide_repr(self):
         with option_context('mode.sim_interactive', True):
