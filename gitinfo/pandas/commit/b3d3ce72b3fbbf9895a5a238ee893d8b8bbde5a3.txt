commit b3d3ce72b3fbbf9895a5a238ee893d8b8bbde5a3
Author: topper-123 <contribute@tensortable.com>
Date:   Thu Jul 4 02:38:36 2019 +0100

    CLN: simplify MultiIndex._shallow_copy (#27187)
    
    * CLN: simplify MultiIndex._shallow_copy
    
    * Don't collect names in ._shallow_copy, is done in .copy already

diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index fd64f18c5..0823a3ed9 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -929,7 +929,7 @@ class MultiIndex(Index):
             # discards freq
             kwargs.pop('freq', None)
             return MultiIndex.from_tuples(values, names=names, **kwargs)
-        return self.view()
+        return self.copy(**kwargs)
 
     @cache_readonly
     def dtype(self):
@@ -1810,7 +1810,7 @@ class MultiIndex(Index):
             new_levels.append(lev)
             new_codes.append(level_codes)
 
-        result = self._shallow_copy()
+        result = self.view()
 
         if changed:
             result._reset_identity()
diff --git a/pandas/tests/indexes/multi/test_equivalence.py b/pandas/tests/indexes/multi/test_equivalence.py
index bbb821dff..3bdccbb8a 100644
--- a/pandas/tests/indexes/multi/test_equivalence.py
+++ b/pandas/tests/indexes/multi/test_equivalence.py
@@ -175,7 +175,7 @@ def test_is_():
     assert mi2.is_(mi)
     assert mi.is_(mi2)
 
-    assert mi.is_(mi.set_names(["C", "D"]))
+    assert not mi.is_(mi.set_names(["C", "D"]))
     mi2 = mi.view()
     mi2.set_names(["E", "F"], inplace=True)
     assert mi.is_(mi2)
