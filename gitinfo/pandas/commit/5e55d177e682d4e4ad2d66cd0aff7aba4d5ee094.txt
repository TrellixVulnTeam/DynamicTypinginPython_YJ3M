commit 5e55d177e682d4e4ad2d66cd0aff7aba4d5ee094
Author: Adam Klein <adamklein@gmail.com>
Date:   Fri Feb 24 13:56:19 2012 -0500

    BUG: close #812, fix index name dropping in _ensure_index

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index bd6955f22..b5d34a193 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1820,11 +1820,9 @@ class DataFrame(NDFrame):
 
         if index is not None:
             frame = frame._reindex_index(index, method, copy, level)
-            frame.index.name = self.index.name
 
         if columns is not None:
             frame = frame._reindex_columns(columns, copy, level)
-            frame.columns.name = self.columns.name
 
         return frame
 
@@ -1867,11 +1865,9 @@ class DataFrame(NDFrame):
         self._consolidate_inplace()
         if axis == 0:
             df = self._reindex_index(labels, method, copy, level)
-            df.index.name = self.index.name
             return df
         elif axis == 1:
             df = self._reindex_columns(labels, copy, level)
-            df.columns.name = self.columns.name
             return df
         else:  # pragma: no cover
             raise ValueError('Must specify axis=0 or 1')
diff --git a/pandas/core/index.py b/pandas/core/index.py
index cb059de50..8b8b3f598 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -2137,14 +2137,14 @@ def _sparsify(label_list):
 def _ensure_index(index_like):
     if isinstance(index_like, Index):
         return index_like
+    if hasattr(index_like, 'name'):
+        return Index(index_like, name=index_like.name)
     return Index(index_like)
 
-
 def _validate_join_method(method):
     if method not in ['left', 'right', 'inner', 'outer']:
         raise Exception('do not recognize join method %s' % method)
 
-
 # TODO: handle index names!
 def _get_combined_index(indexes, intersect=False):
     indexes = _get_distinct_indexes(indexes)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b4ea9c984..33d220739 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3103,14 +3103,17 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
     def test_reindex_name_remains(self):
         s = Series(random.rand(10))
         df = DataFrame(s, index=np.arange(len(s)))
-        df.index.name = 'iname'
-        df = df.reindex(s.index)
+        i = Series(np.arange(10), name='iname')
+        df = df.reindex(i)
         self.assert_(df.index.name == 'iname')
 
+        df = df.reindex(Index(np.arange(10), name='tmpname'))
+        self.assert_(df.index.name == 'tmpname')
+
         s = Series(random.rand(10))
         df = DataFrame(s.T, index=np.arange(len(s)))
-        df.columns.name = 'iname'
-        df = df.reindex(columns=s.index)
+        i = Series(np.arange(10), name='iname')
+        df = df.reindex(columns=i)
         self.assert_(df.columns.name == 'iname')
 
     def test_reindex_int(self):
