commit e1cec52695f29976538cd0f3d0b28f32b03b53c5
Author: MasonGallo <MasonGallo@users.noreply.github.com>
Date:   Thu Feb 25 21:13:01 2016 -0500

    DOC: Add examples and notes to empty documentation
    
    closes #12393
    
    Author: MasonGallo <MasonGallo@users.noreply.github.com>
    
    Closes #12442 from MasonGallo/empty-clarity and squashes the following commits:
    
    30f09ea [MasonGallo] Add see also section and replace i.e. with meaning
    59da0f9 [MasonGallo] Address feedback to include examples of empty and non-empty with NaNs
    f9ef74a [MasonGallo] Change any to all
    7abd759 [MasonGallo] Add examples and notes to empty documentation

diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 14d788fdd..f850bfba4 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -842,7 +842,43 @@ class NDFrame(PandasObject):
 
     @property
     def empty(self):
-        """True if NDFrame is entirely empty [no items]"""
+        """True if NDFrame is entirely empty [no items], meaning any of the
+        axes are of length 0.
+
+        Notes
+        -----
+        If NDFrame contains only NaNs, it is still not considered empty. See
+        the example below.
+
+        Examples
+        --------
+        An example of an actual empty DataFrame. Notice the index is empty:
+
+        >>> df_empty = pd.DataFrame({'A' : []})
+        >>> df_empty
+        Empty DataFrame
+        Columns: [A]
+        Index: []
+        >>> df_empty.empty
+        True
+
+        If we only have NaNs in our DataFrame, it is not considered empty! We
+        will need to drop the NaNs to make the DataFrame empty:
+
+        >>> df = pd.DataFrame({'A' : [np.nan]})
+        >>> df
+            A
+        0 NaN
+        >>> df.empty
+        False
+        >>> df.dropna().empty
+        True
+
+        See also
+        --------
+        pandas.Series.dropna
+        pandas.DataFrame.dropna
+        """
         return not all(len(self._get_axis(a)) > 0 for a in self._AXIS_ORDERS)
 
     def __nonzero__(self):
