commit 66cb166c96173ac53516f2e4292edd4a4c40ece7
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Nov 7 12:48:24 2019 -0800

    CLN: unnecessary exception catching (#29298)

diff --git a/pandas/_libs/reduction.pyx b/pandas/_libs/reduction.pyx
index 45991293b..60c65a226 100644
--- a/pandas/_libs/reduction.pyx
+++ b/pandas/_libs/reduction.pyx
@@ -170,10 +170,6 @@ cdef class Reducer:
                 PyArray_SETITEM(result, PyArray_ITER_DATA(it), res)
                 chunk.data = chunk.data + self.increment
                 PyArray_ITER_NEXT(it)
-        except Exception as err:
-            if hasattr(err, 'args'):
-                err.args = err.args + (i,)
-            raise
         finally:
             # so we don't free the wrong memory
             chunk.data = dummy_buf
diff --git a/pandas/core/apply.py b/pandas/core/apply.py
index f402154dc..d0093e5b6 100644
--- a/pandas/core/apply.py
+++ b/pandas/core/apply.py
@@ -13,8 +13,6 @@ from pandas.core.dtypes.common import (
 )
 from pandas.core.dtypes.generic import ABCSeries
 
-from pandas.io.formats.printing import pprint_thing
-
 
 def frame_apply(
     obj,
@@ -293,20 +291,9 @@ class FrameApply:
                 res_index = res_index.take(successes)
 
         else:
-            try:
-                for i, v in enumerate(series_gen):
-                    results[i] = self.f(v)
-                    keys.append(v.name)
-            except Exception as err:
-                if hasattr(err, "args"):
-
-                    # make sure i is defined
-                    if i is not None:
-                        k = res_index[i]
-                        err.args = err.args + (
-                            "occurred at index %s" % pprint_thing(k),
-                        )
-                raise
+            for i, v in enumerate(series_gen):
+                results[i] = self.f(v)
+                keys.append(v.name)
 
         self.results = results
         self.res_index = res_index
diff --git a/pandas/tests/frame/test_apply.py b/pandas/tests/frame/test_apply.py
index a1172610b..fea50b3b7 100644
--- a/pandas/tests/frame/test_apply.py
+++ b/pandas/tests/frame/test_apply.py
@@ -423,12 +423,9 @@ class TestDataFrameApply:
                 row["D"] = 7
             return row
 
-        try:
+        msg = "'float' object has no attribute 'startswith'"
+        with pytest.raises(AttributeError, match=msg):
             data.apply(transform, axis=1)
-        except AttributeError as e:
-            assert len(e.args) == 2
-            assert e.args[1] == "occurred at index 4"
-            assert e.args[0] == "'float' object has no attribute 'startswith'"
 
     def test_apply_bug(self):
 
