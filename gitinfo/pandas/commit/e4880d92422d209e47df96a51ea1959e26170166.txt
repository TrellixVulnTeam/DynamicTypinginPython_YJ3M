commit e4880d92422d209e47df96a51ea1959e26170166
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat Apr 21 22:02:47 2012 -0400

    ENH: better KeyError when timestamp not found in time series, close #1062

diff --git a/RELEASE.rst b/RELEASE.rst
index 28bc68c6b..47ffbee2e 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -32,6 +32,8 @@ pandas 0.8.0
 
 **Improvements to existing features**
 
+  - Switch to klib/khash-based hash tables in Index classes for better
+    performance in many cases and lower memory footprint
   - Shipping some functions from scipy.stats to reduce dependency,
     e.g. Series.describe and DataFrame.describe (GH #1092)
 
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 5a82c91f4..64dc8a1a3 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -676,7 +676,11 @@ class DatetimeIndex(Int64Index):
             except (TypeError, ValueError, KeyError):
                 pass
 
-            return self._engine.get_value(series, Timestamp(key))
+            stamp = Timestamp(key)
+            try:
+                return self._engine.get_value(series, stamp)
+            except KeyError:
+                raise KeyError(stamp)
 
     def get_loc(self, key):
         """
@@ -694,7 +698,11 @@ class DatetimeIndex(Int64Index):
             except (TypeError, KeyError):
                 pass
 
-            return self._engine.get_loc(Timestamp(key))
+            stamp = Timestamp(key)
+            try:
+                return self._engine.get_loc(stamp)
+            except KeyError:
+                raise KeyError(stamp)
 
     def _get_string_slice(self, key):
         asdt, parsed, reso = datetools.parse_time_string(key)
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index aa54efcc5..a06508517 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -392,6 +392,14 @@ class TestTimeSeries(unittest.TestCase):
         self.assertRaises(ValueError, date_range, end='1/1/2000', freq='H')
         self.assertRaises(ValueError, date_range, periods=10, freq='H')
 
+    def test_reasonable_keyerror(self):
+        # GH #1062
+        index = DatetimeIndex(['1/3/2000'])
+        try:
+            index.get_loc('1/1/2000')
+        except KeyError, e:
+            self.assert_('2000' in str(e))
+
 def _skip_if_no_pytz():
     try:
         import pytz
