commit 9b10ee2ef8db0e36a0d66a81142b2ea5da46413b
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jan 3 14:26:04 2011 -0500

    Fixed median issue GH #26

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 9adbc4d6e..d8969f5e2 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1866,6 +1866,8 @@ class DataFrame(Picklable, Groupable):
         Series or TimeSeries
         """
         def f(arr):
+            if arr.dtype != np.float_:
+                arr = arr.astype(float)
             return tseries.median(arr[notnull(arr)])
 
         if axis == 0:
diff --git a/pandas/core/series.py b/pandas/core/series.py
index d26554049..40c4ab140 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -482,6 +482,10 @@ class Series(np.ndarray, Picklable, Groupable):
         Compute median value of non-null values
         """
         arr = self.values
+
+        if arr.dtype != np.float_:
+            arr = arr.astype(float)
+
         arr = arr[notnull(arr)]
         return tseries.median(arr)
 
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index cc26f49fb..6933a060c 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -1367,6 +1367,7 @@ class TestDataFrame(unittest.TestCase):
             x = np.asarray(x)
             return np.median(x[notnull(x)])
 
+        self._check_statistic(self.intframe, 'median', f)
         self._check_statistic(self.frame, 'median', f)
 
     def test_min(self):
diff --git a/pandas/core/tests/test_series.py b/pandas/core/tests/test_series.py
index de66c7624..9e08bc183 100644
--- a/pandas/core/tests/test_series.py
+++ b/pandas/core/tests/test_series.py
@@ -386,7 +386,7 @@ class TestSeries(unittest.TestCase):
             self.assert_(np.array_equal(result, expected))
 
         argsorted = self.ts.argsort()
-        self.assert_(argsorted.dtype == np.int_)
+        self.assert_(issubclass(argsorted.dtype.type, np.integer))
 
     def test_median(self):
         self.assertAlmostEqual(np.median(self.ts), self.ts.median())
@@ -396,6 +396,10 @@ class TestSeries(unittest.TestCase):
 
         self.assertAlmostEqual(np.median(ts.valid()), ts.median())
 
+        # test with integers, test failure
+        int_ts = TimeSeries(np.ones(10, dtype=int), index=range(10))
+        self.assertAlmostEqual(np.median(int_ts), int_ts.median())
+
     def test_corr(self):
         # full overlap
         self.assertAlmostEqual(self.ts.corr(self.ts), 1)
