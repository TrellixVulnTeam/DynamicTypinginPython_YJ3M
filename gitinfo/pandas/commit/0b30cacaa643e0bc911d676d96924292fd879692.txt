commit 0b30cacaa643e0bc911d676d96924292fd879692
Author: Skipper Seabold <jsseabold@gmail.com>
Date:   Mon Jun 25 09:59:52 2012 -0400

    ENH: Add raise on conflict keyword to update

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index a517df708..9a3c47302 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -166,6 +166,9 @@ Returns
 merged : DataFrame
 """
 
+# Custom error class for update
+
+class DataConflictError(Exception): pass
 
 #----------------------------------------------------------------------
 # Factory helper methods
@@ -3168,7 +3171,8 @@ class DataFrame(NDFrame):
         combiner = lambda x, y: np.where(isnull(x), y, x)
         return self.combine(other, combiner)
 
-    def update(self, other, join='left', overwrite=True, filter_func=None):
+    def update(self, other, join='left', overwrite=True, filter_func=None,
+                     raise_conflict=False):
         """
         Modify DataFrame in place using non-NA values from passed
         DataFrame. Aligns on indices
@@ -3182,6 +3186,9 @@ class DataFrame(NDFrame):
         filter_func : callable(1d-array) -> 1d-array<boolean>, default None
             Can choose to replace values other than NA. Return True for values
             that should be updated
+        raise_conflict : bool
+            If True, will raise an error if the DataFrame and other both
+            contain data in the same place.
         """
         if join != 'left':
             raise NotImplementedError
@@ -3193,6 +3200,12 @@ class DataFrame(NDFrame):
             if filter_func is not None:
                 mask = -filter_func(this) | isnull(that)
             else:
+                if raise_conflict:
+                    mask_this = notnull(that)
+                    mask_that = notnull(this)
+                    if any(mask_this & mask_that):
+                        raise DataConflictError("Data overlaps.")
+
                 if overwrite:
                     mask = isnull(that)
                 else:
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 8c1c2169e..6ccd13911 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -5347,6 +5347,17 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                               [1.5, nan, 7.]])
         assert_frame_equal(df, expected)
 
+    def test_update_raise(self):
+        df = DataFrame([[1.5, 1, 3.],
+                        [1.5, nan, 3.],
+                        [1.5, nan, 3],
+                        [1.5, nan, 3]])
+
+        other = DataFrame([[2., nan],
+                           [nan, 7]], index=[1, 3], columns=[1,2])
+
+        np.testing.assert_raises(Exception, df.update, *(other,),
+                **{'raise_conflict' : True})
 
     def test_combineAdd(self):
         # trivial
