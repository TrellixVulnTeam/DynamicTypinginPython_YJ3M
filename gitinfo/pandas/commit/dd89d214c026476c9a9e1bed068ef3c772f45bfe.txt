commit dd89d214c026476c9a9e1bed068ef3c772f45bfe
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon May 7 10:17:04 2012 -0400

    BUG: Series boolean cast bug and fix binary ops between boolean Series with NAs, close #1074

diff --git a/RELEASE.rst b/RELEASE.rst
index b50b72e52..070dcede6 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -51,6 +51,9 @@ pandas 0.8.0
   - Fix OverflowError from storing pre-1970 dates in HDFStore by switching to
     datetime64 (GH #179)
   - Fix logical error with February leap year end in YearEnd offset
+  - Series([False, nan]) was getting casted to float64 (GH #1074)
+  - Fix binary operations between boolean Series and object Series with
+    booleans and NAs (GH #1074)
 
 pandas 0.7.3
 ============
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 6413ad9f9..1f1712a8b 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -133,7 +133,12 @@ def _bool_method(op, name):
                 y = lib.list_to_object_array(y)
 
             if isinstance(y, np.ndarray):
-                result = lib.vec_binop(x, y, op)
+                if x.dtype == np.bool_ and y.dtype == np.bool_:
+                    result = op(x, y)
+                else:
+                    x = com._ensure_object(x)
+                    y = com._ensure_object(y)
+                    result = lib.vec_binop(x, y, op)
             else:
                 result = lib.scalar_binop(x, y, op)
 
@@ -2438,6 +2443,17 @@ def _sanitize_array(data, index, dtype=None, copy=False,
             subarr = data.copy()
         else:
             subarr = data
+    elif isinstance(data, list) and len(data) > 0:
+        if dtype is not None:
+            try:
+                subarr = _try_cast(data)
+            except Exception:
+                if raise_cast_failure:
+                    raise
+                subarr = lib.maybe_convert_objects(subarr)
+        else:
+            subarr = lib.list_to_object_array(data)
+            subarr = lib.maybe_convert_objects(subarr)
     else:
         subarr = _try_cast(data)
 
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 3bf45a9e2..03c36971c 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2216,6 +2216,23 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
         self.assertRaises(TypeError, self.frame.__gt__, 'foo')
         self.assertRaises(TypeError, self.frame.__ne__, 'foo')
 
+    def test_constructor_lists_to_object_dtype(self):
+        # from #1074
+        d = DataFrame({'a': [np.nan, False]})
+        self.assert_(d['a'].dtype == np.object_)
+        self.assert_(d['a'][1] is False)
+
+    def test_logical_with_nas(self):
+        d = DataFrame({'a': [np.nan, False], 'b': [True, True]})
+
+        result = d['a'] | d['b']
+        expected = Series([np.nan, True])
+        assert_series_equal(result, expected)
+
+        result = d['a'].fillna(False) | d['b']
+        expected = Series([True, True], dtype=object)
+        assert_series_equal(result, expected)
+
     def test_neg(self):
         # what to do?
         assert_frame_equal(-self.frame, -1 * self.frame)
