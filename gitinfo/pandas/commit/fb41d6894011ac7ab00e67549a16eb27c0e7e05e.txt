commit fb41d6894011ac7ab00e67549a16eb27c0e7e05e
Author: jreback <jeff@reback.net>
Date:   Fri Jun 7 19:42:51 2013 -0400

    DOC: fix groupby.rst building

diff --git a/doc/source/cookbook.rst b/doc/source/cookbook.rst
index 0846c92bc..46c7d5cd5 100644
--- a/doc/source/cookbook.rst
+++ b/doc/source/cookbook.rst
@@ -345,7 +345,7 @@ Storing Attributes to a group node
     os.remove('test.h5')
 
 Computation
----------
+-----------
 
 `Numerical integration (sample-based) of a time series
 <http://nbviewer.ipython.org/5720498>`__
diff --git a/doc/source/groupby.rst b/doc/source/groupby.rst
index c5e38a72e..431ee9271 100644
--- a/doc/source/groupby.rst
+++ b/doc/source/groupby.rst
@@ -500,14 +500,16 @@ and that the transformed data contains no NAs.
 Filtration
 ----------
 
+.. versionadded:: 0.11.1
+
 The ``filter`` method returns a subset of the original object. Suppose we
 want to take only elements that belong to groups with a group sum greater
 than 2.
 
 .. ipython:: python
 
-   s = Series([1, 1, 2, 3, 3, 3])
-   s.groupby(s).filter(lambda x: x.sum() > 2)
+   sf = Series([1, 1, 2, 3, 3, 3])
+   sf.groupby(sf).filter(lambda x: x.sum() > 2)
 
 The argument of ``filter`` must a function that, applied to the group as a 
 whole, returns ``True`` or ``False``.
@@ -517,8 +519,8 @@ with only a couple members.
 
 .. ipython:: python
 
-   df = DataFrame({'A': arange(8), 'B': list('aabbbbcc')})
-   df.groupby('B').filter(lambda x: len(x) > 2)
+   dff = DataFrame({'A': np.arange(8), 'B': list('aabbbbcc')})
+   dff.groupby('B').filter(lambda x: len(x) > 2)
 
 Alternatively, instead of dropping the offending groups, we can return a
 like-indexed objects where the groups that do not pass the filter are filled
@@ -526,7 +528,7 @@ with NaNs.
 
 .. ipython:: python
 
-   df.groupby('B').filter(lambda x: len(x) > 2, dropna=False)
+   dff.groupby('B').filter(lambda x: len(x) > 2, dropna=False)
 
 .. _groupby.dispatch:
 
diff --git a/doc/source/v0.11.1.txt b/doc/source/v0.11.1.txt
index 15be68c74..70d840f8c 100644
--- a/doc/source/v0.11.1.txt
+++ b/doc/source/v0.11.1.txt
@@ -260,8 +260,8 @@ Enhancements
 
     .. ipython:: python
 
-       s = Series([1, 1, 2, 3, 3, 3])
-       s.groupby(s).filter(lambda x: x.sum() > 2)
+       sf = Series([1, 1, 2, 3, 3, 3])
+       sf.groupby(sf).filter(lambda x: x.sum() > 2)
 
     The argument of ``filter`` must a function that, applied to the group as a
     whole, returns ``True`` or ``False``.
@@ -271,8 +271,8 @@ Enhancements
 
     .. ipython:: python
 
-       df = DataFrame({'A': arange(8), 'B': list('aabbbbcc')})
-       df.groupby('B').filter(lambda x: len(x) > 2)
+       dff = DataFrame({'A': np.arange(8), 'B': list('aabbbbcc')})
+       dff.groupby('B').filter(lambda x: len(x) > 2)
 
     Alternatively, instead of dropping the offending groups, we can return a
     like-indexed objects where the groups that do not pass the filter are 
@@ -280,7 +280,7 @@ Enhancements
 
     .. ipython:: python
 
-       df.groupby('B').filter(lambda x: len(x) > 2, dropna=False)
+       dff.groupby('B').filter(lambda x: len(x) > 2, dropna=False)
 
 
 Bug Fixes
