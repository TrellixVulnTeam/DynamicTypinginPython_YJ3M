commit e7cb6b32f43969596cced754a8c54da78b6dd770
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Sep 26 05:27:46 2019 -0700

    REF/TST: Corner cases for op(DataFrame, Series) (#28600)

diff --git a/pandas/core/ops/__init__.py b/pandas/core/ops/__init__.py
index eb901630b..a433e5f1a 100644
--- a/pandas/core/ops/__init__.py
+++ b/pandas/core/ops/__init__.py
@@ -753,18 +753,9 @@ def _combine_series_frame(self, other, func, fill_value=None, axis=None, level=N
             return self._combine_match_index(other, func, level=level)
         else:
             return self._combine_match_columns(other, func, level=level)
-    else:
-        if not len(other):
-            return self * np.nan
-
-        if not len(self):
-            # Ambiguous case, use _series so works with DataFrame
-            return self._constructor(
-                data=self._series, index=self.index, columns=self.columns
-            )
 
-        # default axis is columns
-        return self._combine_match_columns(other, func, level=level)
+    # default axis is columns
+    return self._combine_match_columns(other, func, level=level)
 
 
 def _align_method_FRAME(left, right, axis):
diff --git a/pandas/tests/frame/test_arithmetic.py b/pandas/tests/frame/test_arithmetic.py
index 3b46e8349..88bd5a4fe 100644
--- a/pandas/tests/frame/test_arithmetic.py
+++ b/pandas/tests/frame/test_arithmetic.py
@@ -688,3 +688,34 @@ class TestFrameArithmetic:
         result = getattr(df, op)(num)
         expected = pd.DataFrame([[getattr(n, op)(num) for n in data]], columns=ind)
         tm.assert_frame_equal(result, expected)
+
+
+def test_frame_with_zero_len_series_corner_cases():
+    # GH#28600
+    # easy all-float case
+    df = pd.DataFrame(np.random.randn(6).reshape(3, 2), columns=["A", "B"])
+    ser = pd.Series(dtype=np.float64)
+
+    result = df + ser
+    expected = pd.DataFrame(df.values * np.nan, columns=df.columns)
+    tm.assert_frame_equal(result, expected)
+
+    result = df == ser
+    expected = pd.DataFrame(False, index=df.index, columns=df.columns)
+    tm.assert_frame_equal(result, expected)
+
+    # non-float case should not raise on comparison
+    df2 = pd.DataFrame(df.values.view("M8[ns]"), columns=df.columns)
+    result = df2 == ser
+    expected = pd.DataFrame(False, index=df.index, columns=df.columns)
+    tm.assert_frame_equal(result, expected)
+
+
+def test_zero_len_frame_with_series_corner_cases():
+    # GH#28600
+    df = pd.DataFrame(columns=["A", "B"], dtype=np.float64)
+    ser = pd.Series([1, 2], index=["A", "B"])
+
+    result = df + ser
+    expected = df
+    tm.assert_frame_equal(result, expected)
