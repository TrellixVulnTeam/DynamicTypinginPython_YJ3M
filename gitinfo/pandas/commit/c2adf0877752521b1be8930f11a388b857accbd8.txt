commit c2adf0877752521b1be8930f11a388b857accbd8
Author: onesandzeroes <onesandzeroes@github.com>
Date:   Tue Sep 9 18:54:45 2014 +1000

    API: Series.to_csv() should return string when path is None
    
    Test cases for when path is None
    
    Return string when path is None
    
    Add note to release notes under API
    
    Add comments to test cases

diff --git a/doc/source/v0.15.0.txt b/doc/source/v0.15.0.txt
index acf7fdfd6..7b4a43c8c 100644
--- a/doc/source/v0.15.0.txt
+++ b/doc/source/v0.15.0.txt
@@ -309,6 +309,9 @@ API changes
      df
      df.dtypes
 
+- ``Series.to_csv()`` now returns a string when ``path=None``, matching the behaviour of
+    ``DataFrame.to_csv()`` (:issue:`8215`).
+
 .. _whatsnew_0150.dt:
 
 .dt accessor
diff --git a/pandas/core/series.py b/pandas/core/series.py
index a0bbb2c71..b6aa54617 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2200,7 +2200,8 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
         Parameters
         ----------
-        path : string file path or file handle / StringIO
+        path : string file path or file handle / StringIO. If None is provided
+            the result is returned as a string.
         na_rep : string, default ''
             Missing data representation
         float_format : string, default None
@@ -2224,10 +2225,13 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         """
         from pandas.core.frame import DataFrame
         df = DataFrame(self)
-        df.to_csv(path, index=index, sep=sep, na_rep=na_rep,
+        # result is only a string if no path provided, otherwise None
+        result = df.to_csv(path, index=index, sep=sep, na_rep=na_rep,
                   float_format=float_format, header=header,
                   index_label=index_label, mode=mode, nanRep=nanRep,
                   encoding=encoding, date_format=date_format)
+        if path is None:
+            return result
 
     def dropna(self, axis=0, inplace=False, **kwargs):
         """
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index f9e7cf354..92d7da511 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -6428,6 +6428,14 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         df2.to_csv(exp)
         self.assertEqual(res.getvalue(), exp.getvalue())
 
+    def test_to_csv_path_is_none(self):
+        # GH 8215
+        # Make sure we return string for consistency with
+        # Series.to_csv()
+        csv_str = self.frame.to_csv(path=None)
+        self.assertIsInstance(csv_str, str)
+        recons = pd.read_csv(StringIO(csv_str), index_col=0)
+        assert_frame_equal(self.frame, recons)
 
     def test_info(self):
         io = StringIO()
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 022a8b543..da4dc904c 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -4371,6 +4371,14 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         buf = StringIO()
         split.to_csv(buf)
 
+    def test_to_csv_path_is_none(self):
+        # GH 8215
+        # Series.to_csv() was returning None, inconsistent with
+        # DataFrame.to_csv() which returned string
+        s = Series([1, 2, 3])
+        csv_str = s.to_csv(path=None)
+        self.assertIsInstance(csv_str, str)
+
     def test_clip(self):
         val = self.ts.median()
 
