commit f51f2d80facaf3182e3bfe238cff885fc88beff0
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon May 28 15:34:45 2012 -0400

    BUG: tsplot fix with business freq #1332

diff --git a/pandas/tseries/plotting.py b/pandas/tseries/plotting.py
index b33bcc2f5..dde81b553 100644
--- a/pandas/tseries/plotting.py
+++ b/pandas/tseries/plotting.py
@@ -82,7 +82,7 @@ def tsplot(series, plotf, *args, **kwargs):
         series = Series(series.values, idx, name=series.name)
 
     if not isinstance(series.index, PeriodIndex):
-        # try to get it to DatetimeIndex then to period
+        #try to get it to DatetimeIndex then to period
         if series.index.inferred_type == 'datetime':
             idx = DatetimeIndex(series.index).to_period(freq=freq)
             series = Series(series.values, idx, name=series.name)
@@ -90,6 +90,11 @@ def tsplot(series, plotf, *args, **kwargs):
             raise TypeError('series argument to tsplot must have '
                             'DatetimeIndex or PeriodIndex')
 
+    if freq != series.index.freq:
+        series = series.asfreq(freq)
+
+    series = series.dropna()
+
     if 'ax' in kwargs:
         ax = kwargs.pop('ax')
     else:
diff --git a/pandas/tseries/tests/test_plotting.py b/pandas/tseries/tests/test_plotting.py
index 5f86328bf..837914a81 100644
--- a/pandas/tseries/tests/test_plotting.py
+++ b/pandas/tseries/tests/test_plotting.py
@@ -115,6 +115,24 @@ class TestTSPlot(unittest.TestCase):
         for rs, xp in zip(ax.get_lines()[0].get_xdata(), ser.index):
             assert(rs == xp)
 
+    @slow
+    def test_business_freq(self):
+        bts = tm.makePeriodSeries()
+        ts = bts.asfreq('D')
+        ax = bts.plot()
+        self.assert_(ax.get_lines()[0].get_xydata()[0, 0], ts.index[0].ordinal)
+        idx = ax.get_lines()[0].get_xdata()
+        self.assert_(idx.freqstr == 'D')
+
+    @slow
+    def test_dataframe(self):
+        bts = DataFrame({'a': tm.makePeriodSeries()})
+        ts = bts.asfreq('D')
+        ax = bts.plot()
+        self.assert_(ax.get_lines()[0].get_xydata()[0, 0], ts.index[0].ordinal)
+        idx = ax.get_lines()[0].get_xdata()
+        self.assert_(idx.freqstr == 'D')
+
 PNG_PATH = 'tmp.png'
 def _check_plot_works(f, freq=None, series=None, *args, **kwargs):
     import matplotlib.pyplot as plt
