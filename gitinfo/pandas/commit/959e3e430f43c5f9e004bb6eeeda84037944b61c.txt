commit 959e3e430f43c5f9e004bb6eeeda84037944b61c
Author: jreback <jeff@reback.net>
Date:   Mon Jul 7 12:25:54 2014 -0400

    DOC: add pointer to options.rst in v0.14.1

diff --git a/doc/source/options.rst b/doc/source/options.rst
index bae6eac8c..961797acb 100644
--- a/doc/source/options.rst
+++ b/doc/source/options.rst
@@ -12,6 +12,7 @@
 ********************
 Options and Settings
 ********************
+
 Overview
 --------
 pandas has an options system that lets you customize some aspects of it's behaviour,
@@ -33,7 +34,7 @@ namespace, and they are:
 - :func:`~pandas.get_option` / :func:`~pandas.set_option` - get/set the value of a single option.
 - :func:`~pandas.reset_option` - reset one or more options to their default value.
 - :func:`~pandas.describe_option` - print the descriptions of one or more options.
-- :func:`~pandas.option_context` - execute a codeblock with a set of options 
+- :func:`~pandas.option_context` - execute a codeblock with a set of options
   that revert to prior settings after execution.
 
 **Note:** developers can check out pandas/core/config.py for more info.
@@ -50,7 +51,7 @@ and so passing in a substring will work - as long as it is unambiguous :
    pd.get_option("display.max_rows")
 
 
-The following will **not work** because it matches multiple option names, e.g. 
+The following will **not work** because it matches multiple option names, e.g.
 ``display.max_colwidth``, ``display.max_rows``, ``display.max_columns``:
 
 .. ipython:: python
@@ -76,7 +77,7 @@ with no argument ``describe_option`` will print out the descriptions for all ava
 Getting and Setting Options
 ---------------------------
 
-As described above, ``get_option()`` and ``set_option()`` are available from the 
+As described above, ``get_option()`` and ``set_option()`` are available from the
 pandas namespace.  To change an option, call ``set_option('option regex', new_value)``
 
 .. ipython:: python
@@ -84,7 +85,7 @@ pandas namespace.  To change an option, call ``set_option('option regex', new_va
    pd.get_option('mode.sim_interactive')
    pd.set_option('mode.sim_interactive', True)
    pd.get_option('mode.sim_interactive')
-   
+
 All options also have a default value, and you can use ``reset_option`` to do just that:
 
 .. ipython:: python
@@ -138,7 +139,7 @@ lines are replaced by an ellipsis.
    df
    pd.reset_option('max_rows')
 
-``display.expand_frame_repr`` allows for the the representation of 
+``display.expand_frame_repr`` allows for the the representation of
 dataframes to stretch across pages, wrapped over the full column vs row-wise.
 
 .. ipython:: python
@@ -149,7 +150,7 @@ dataframes to stretch across pages, wrapped over the full column vs row-wise.
    pd.set_option('expand_frame_repr', False)
    df
    pd.reset_option('expand_frame_repr')
-   
+
 ``display.large_repr`` lets you select whether to display dataframes that exceed
 ``max_columns`` or ``max_rows`` as a truncated frame, or as a summary.
 
@@ -163,8 +164,8 @@ dataframes to stretch across pages, wrapped over the full column vs row-wise.
    df
    pd.reset_option('large_repr')
    pd.reset_option('max_rows')
-   
-``display.max_columnwidth`` sets the maximum width of columns.  Cells 
+
+``display.max_columnwidth`` sets the maximum width of columns.  Cells
 of this length or longer will be truncated with an elipsis.
 
 .. ipython:: python
@@ -176,19 +177,19 @@ of this length or longer will be truncated with an elipsis.
    pd.set_option('max_colwidth', 6)
    df
    pd.reset_option('max_colwidth')
-   
-``display.max_info_columns`` sets a threshold for when by-column info 
+
+``display.max_info_columns`` sets a threshold for when by-column info
 will be given.
 
 .. ipython:: python
-  
+
    df=pd.DataFrame(np.random.randn(10,10))
    pd.set_option('max_info_columns', 11)
    df.info()
    pd.set_option('max_info_columns', 5)
    df.info()
    pd.reset_option('max_info_columns')
-   
+
 ``display.max_info_rows``: ``df.info()`` will usually show null-counts for each column.
 For large frames this can be quite slow. ``max_info_rows`` and ``max_info_cols``
 limit this null check only to frames with smaller dimensions then specified.
@@ -202,8 +203,8 @@ limit this null check only to frames with smaller dimensions then specified.
    pd.set_option('max_info_rows', 5)
    df.info()
    pd.reset_option('max_info_rows')
-   
-``display.precision`` sets the output display precision. This is only a 
+
+``display.precision`` sets the output display precision. This is only a
 suggestion.
 
 .. ipython:: python
@@ -213,7 +214,7 @@ suggestion.
    df
    pd.set_option('precision',4)
    df
-   
+
 ``display.chop_threshold`` sets at what level pandas rounds to zero when
 it displays a Series of DataFrame.  Note, this does not effect the
 precision at which the number is stored.
@@ -227,156 +228,156 @@ precision at which the number is stored.
    df
    pd.reset_option('chop_threshold')
 
-``display.colheader_justify`` controls the justification of the headers. 
+``display.colheader_justify`` controls the justification of the headers.
 Options are 'right', and 'left'.
 
 .. ipython:: python
-   
+
    df=pd.DataFrame(np.array([np.random.randn(6), np.random.randint(1,9,6)*.1, np.zeros(6)]).T, columns=['A', 'B', 'C'], dtype='float')
    pd.set_option('colheader_justify', 'right')
    df
    pd.set_option('colheader_justify', 'left')
    df
    pd.reset_option('colheader_justify')
-   
-   
-   
+
+
+
 List of Options
 ---------------
 
 ========================== ============ ==================================
 Option                     Default      Function
 ========================== ============ ==================================
-display.chop_threshold     None         If set to a float value, all float 
-                                        values smaller then the given 
-                                        threshold will be displayed as 
+display.chop_threshold     None         If set to a float value, all float
+                                        values smaller then the given
+                                        threshold will be displayed as
                                         exactly 0 by repr and friends.
-display.colheader_justify  right        Controls the justification of 
+display.colheader_justify  right        Controls the justification of
                                         column headers. used by DataFrameFormatter.
 display.column_space       12           No description available.
-display.date_dayfirst      False        When True, prints and parses dates 
+display.date_dayfirst      False        When True, prints and parses dates
                                         with the day first, eg 20/01/2005
-display.date_yearfirst     False        When True, prints and parses dates 
+display.date_yearfirst     False        When True, prints and parses dates
                                         with the year first, eg 2005/01/20
-display.encoding           UTF-8        Defaults to the detected encoding 
-                                        of the console. Specifies the encoding 
-                                        to be used for strings returned by 
-                                        to_string, these are generally strings 
+display.encoding           UTF-8        Defaults to the detected encoding
+                                        of the console. Specifies the encoding
+                                        to be used for strings returned by
+                                        to_string, these are generally strings
                                         meant to be displayed on the console.
-display.expand_frame_repr  True         Whether to print out the full DataFrame 
+display.expand_frame_repr  True         Whether to print out the full DataFrame
                                         repr for wide DataFrames across
-                                        multiple lines, `max_columns` is 
+                                        multiple lines, `max_columns` is
                                         still respected, but the output will
-                                        wrap-around across multiple "pages" 
+                                        wrap-around across multiple "pages"
                                         if it's width exceeds `display.width`.
-display.float_format       None         The callable should accept a floating 
-                                        point number and return a string with 
-                                        the desired format of the number. 
-                                        This is used in some places like 
+display.float_format       None         The callable should accept a floating
+                                        point number and return a string with
+                                        the desired format of the number.
+                                        This is used in some places like
                                         SeriesFormatter.
                                         See core.format.EngFormatter for an example.
 display.height             60           Deprecated. Use `display.max_rows` instead.
-display.large_repr         truncate     For DataFrames exceeding max_rows/max_cols, 
-                                        the repr (and HTML repr) can show 
-                                        a truncated table (the default from 0.13), 
-                                        or switch to the view from df.info() 
+display.large_repr         truncate     For DataFrames exceeding max_rows/max_cols,
+                                        the repr (and HTML repr) can show
+                                        a truncated table (the default from 0.13),
+                                        or switch to the view from df.info()
                                         (the behaviour in earlier versions of pandas).
-                                        allowable settings, ['truncate', 'info'] 
+                                        allowable settings, ['truncate', 'info']
 display.line_width         80           Deprecated. Use `display.width` instead.
-display.max_columns        20           max_rows and max_columns are used 
+display.max_columns        20           max_rows and max_columns are used
                                         in __repr__() methods to decide if
-                                        to_string() or info() is used to 
-                                        render an object to a string.  In 
-                                        case python/IPython is running in 
-                                        a terminal this can be set to 0 and 
-                                        pandas will correctly auto-detect 
-                                        the width the terminal and swap to 
-                                        a smaller format in case all columns 
-                                        would not fit vertically. The IPython 
-                                        notebook, IPython qtconsole, or IDLE 
-                                        do not run in a terminal and hence 
-                                        it is not possible to do correct 
-                                        auto-detection. 'None' value means 
+                                        to_string() or info() is used to
+                                        render an object to a string.  In
+                                        case python/IPython is running in
+                                        a terminal this can be set to 0 and
+                                        pandas will correctly auto-detect
+                                        the width the terminal and swap to
+                                        a smaller format in case all columns
+                                        would not fit vertically. The IPython
+                                        notebook, IPython qtconsole, or IDLE
+                                        do not run in a terminal and hence
+                                        it is not possible to do correct
+                                        auto-detection. 'None' value means
                                         unlimited.
-display.max_colwidth       50           The maximum width in characters of 
-                                        a column in the repr of a pandas 
-                                        data structure. When the column overflows, 
-                                        a "..." placeholder is embedded in 
+display.max_colwidth       50           The maximum width in characters of
+                                        a column in the repr of a pandas
+                                        data structure. When the column overflows,
+                                        a "..." placeholder is embedded in
                                         the output.
-display.max_info_columns   100          max_info_columns is used in DataFrame.info 
-                                        method to decide if per column information 
+display.max_info_columns   100          max_info_columns is used in DataFrame.info
+                                        method to decide if per column information
                                         will be printed.
-display.max_info_rows      1690785      df.info() will usually show null-counts 
-                                        for each column. For large frames 
-                                        this can be quite slow. max_info_rows 
-                                        and max_info_cols limit this null 
-                                        check only to frames with smaller 
+display.max_info_rows      1690785      df.info() will usually show null-counts
+                                        for each column. For large frames
+                                        this can be quite slow. max_info_rows
+                                        and max_info_cols limit this null
+                                        check only to frames with smaller
                                         dimensions then specified.
-display.max_rows           60           This sets the maximum number of rows 
+display.max_rows           60           This sets the maximum number of rows
                                         pandas should output when printing
-                                        out various output. For example, 
-                                        this value determines whether the 
+                                        out various output. For example,
+                                        this value determines whether the
                                         repr() for a dataframe prints out
-                                        fully or just a summary repr. 
+                                        fully or just a summary repr.
                                         'None' value means unlimited.
-display.max_seq_items      100          when pretty-printing a long sequence, 
-                                        no more then `max_seq_items` will 
-                                        be printed. If items are omitted, 
-                                        they will be denoted by the addition 
+display.max_seq_items      100          when pretty-printing a long sequence,
+                                        no more then `max_seq_items` will
+                                        be printed. If items are omitted,
+                                        they will be denoted by the addition
                                         of "..." to the resulting string.
-                                        If set to None, the number of items 
+                                        If set to None, the number of items
                                         to be printed is unlimited.
-display.mpl_style          None         Setting this to 'default' will modify 
+display.mpl_style          None         Setting this to 'default' will modify
                                         the rcParams used by matplotlib
-                                        to give plots a more pleasing visual 
-                                        style by default. Setting this to 
-                                        None/False restores the values to 
+                                        to give plots a more pleasing visual
+                                        style by default. Setting this to
+                                        None/False restores the values to
                                         their initial value.
-display.multi_sparse       True         "Sparsify" MultiIndex display (don't 
-                                        display repeated elements in outer 
+display.multi_sparse       True         "Sparsify" MultiIndex display (don't
+                                        display repeated elements in outer
                                         levels within groups)
-display.notebook_repr_html True         When True, IPython notebook will 
+display.notebook_repr_html True         When True, IPython notebook will
                                         use html representation for
-                                        pandas objects (if it is available).  
-display.pprint_nest_depth  3            Controls the number of nested levels 
+                                        pandas objects (if it is available).
+display.pprint_nest_depth  3            Controls the number of nested levels
                                         to process when pretty-printing
-display.precision          7            Floating point output precision 
+display.precision          7            Floating point output precision
                                         (number of significant digits). This is
                                         only a suggestion
-display.show_dimensions    truncate     Whether to print out dimensions 
+display.show_dimensions    truncate     Whether to print out dimensions
                                         at the end of DataFrame repr.
-                                        If 'truncate' is specified, only 
+                                        If 'truncate' is specified, only
                                         print out the dimensions if the
-                                        frame is truncated (e.g. not display 
+                                        frame is truncated (e.g. not display
                                         all rows and/or columns)
-display.width              80           Width of the display in characters. 
-                                        In case python/IPython is running in 
-                                        a terminal this can be set to None 
+display.width              80           Width of the display in characters.
+                                        In case python/IPython is running in
+                                        a terminal this can be set to None
                                         and pandas will correctly auto-detect
-                                        the width. Note that the IPython notebook, 
+                                        the width. Note that the IPython notebook,
                                         IPython qtconsole, or IDLE do not run in a
-                                        terminal and hence it is not possible 
+                                        terminal and hence it is not possible
                                         to correctly detect the width.
-io.excel.xls.writer        xlwt         The default Excel writer engine for 
+io.excel.xls.writer        xlwt         The default Excel writer engine for
                                         'xls' files.
-io.excel.xlsm.writer       openpyxl     The default Excel writer engine for 
+io.excel.xlsm.writer       openpyxl     The default Excel writer engine for
                                         'xlsm' files. Available options:
                                         'openpyxl' (the default).
-io.excel.xlsx.writer       openpyxl     The default Excel writer engine for 
-                                        'xlsx' files. 
-io.hdf.default_format      None         default format writing format, if 
-                                        None, then put will default to 
-                                        'fixed' and append will default to 
+io.excel.xlsx.writer       openpyxl     The default Excel writer engine for
+                                        'xlsx' files.
+io.hdf.default_format      None         default format writing format, if
+                                        None, then put will default to
+                                        'fixed' and append will default to
                                         'table'
-io.hdf.dropna_table        True         drop ALL nan rows when appending 
+io.hdf.dropna_table        True         drop ALL nan rows when appending
                                         to a table
-mode.chained_assignment    warn         Raise an exception, warn, or no 
-                                        action if trying to use chained 
+mode.chained_assignment    warn         Raise an exception, warn, or no
+                                        action if trying to use chained
                                         assignment, The default is warn
 mode.sim_interactive       False        Whether to simulate interactive mode
                                         for purposes of testing
-mode.use_inf_as_null       False        True means treat None, NaN, -INF, 
-                                        INF as null (old way), False means 
+mode.use_inf_as_null       False        True means treat None, NaN, -INF,
+                                        INF as null (old way), False means
                                         None and NaN are null, but INF, -INF
                                         are not null (new way).
 ========================== ============ ==================================
@@ -386,10 +387,10 @@ mode.use_inf_as_null       False        True means treat None, NaN, -INF,
 Number Formatting
 ------------------
 
-pandas also allow you to set how numbers are displayed in the console. 
+pandas also allow you to set how numbers are displayed in the console.
 This option is not set through the ``set_options`` API.
 
-Use the ``set_eng_float_format`` function 
+Use the ``set_eng_float_format`` function
 to alter the floating-point formatting of pandas objects to produce a particular
 format.
 
diff --git a/doc/source/v0.14.1.txt b/doc/source/v0.14.1.txt
index 79f6a918a..7c6fd09ae 100644
--- a/doc/source/v0.14.1.txt
+++ b/doc/source/v0.14.1.txt
@@ -7,6 +7,8 @@ This is a minor release from 0.14.0 and includes a small number of API changes,
 enhancements, and performance improvements along with a large number of bug fixes. We recommend that all
 users upgrade to this version.
 
+- New Documentation section on :ref:`Options and Settings <options>`
+
 - :ref:`Enhancements <whatsnew_0141.enhancements>`
 
 - :ref:`API Changes <whatsnew_0141.api>`
