commit 7c5fc003aec404139a9e1b401649c2145be85197
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Feb 22 23:57:19 2012 -0500

    BUG: malformed BlockManager in groupby, regression from 0.7.0, GH #814

diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index d1e443e27..855c4b23d 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1055,17 +1055,10 @@ class DataFrameGroupBy(GroupBy):
         if sum(len(x.items) for x in new_blocks) == len(agg_labels):
             output_keys = agg_labels
         else:
-            output_keys = []
+            all_items = []
             for b in new_blocks:
-                output_keys.extend(b.items)
-            try:
-                output_keys.sort()
-            except TypeError:  # pragma: no cover
-                pass
-
-            if isinstance(agg_labels, MultiIndex):
-                output_keys = MultiIndex.from_tuples(output_keys,
-                                                     names=agg_labels.names)
+                all_items.extend(b.items)
+            output_keys = agg_labels[agg_labels.isin(all_items)]
 
         if not self.as_index:
             index = np.arange(new_blocks[0].values.shape[1])
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 731c23ece..4a34b7dbc 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1120,7 +1120,7 @@ class TestGroupBy(unittest.TestCase):
         sorted_columns, _ = columns.sortlevel(0)
         df['A', 'foo'] = 'bar'
         result = df.groupby(level=0).mean()
-        self.assert_(result.columns.equals(sorted_columns))
+        self.assert_(result.columns.equals(df.columns[:-1]))
 
     def test_pass_args_kwargs(self):
         from scipy.stats import scoreatpercentile
@@ -1399,6 +1399,18 @@ class TestGroupBy(unittest.TestCase):
         expected = numpy_groupby(data, labels, axis=1)
         assert_almost_equal(result, expected)
 
+    def test_groupby_2d_malformed(self):
+        d = DataFrame(index=range(2))
+        d['group'] = ['g1', 'g2']
+        d['zeros'] = [0, 0]
+        d['ones'] = [1, 1]
+        d['label'] = ['l1', 'l2']
+        tmp = d.groupby(['group']).mean()
+        res_values = np.array([[0., 1.], [0., 1.]])
+        self.assert_(np.array_equal(tmp.columns, ['zeros', 'ones']))
+        self.assert_(np.array_equal(tmp.values, res_values))
+
+
 def test_decons():
     from pandas.core.groupby import decons_group_index, get_group_index
 
