commit 99873665c4fba16fe4738de37742a71d6ab282cb
Author: Ka Wo Chen <kawoc@tepper.cmu.edu>
Date:   Fri Dec 11 01:54:29 2015 -0500

    BUG: GH11808 subclasses of DataFrame did not propagate AttributeError

diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 0710f65dc..b2894f669 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -206,7 +206,8 @@ Bug Fixes
 
 
 
-- Bug groupby on tz-aware data where selection not returning ``Timestamp`` (:issue:`11616`
+- Bug in subclasses of `DataFrame` where `AttributeError` did not propagate (:issue:`11808`)
+- Bug groupby on tz-aware data where selection not returning ``Timestamp`` (:issue:`11616`)
 - Bug in ``pd.read_clipboard`` and ``pd.to_clipboard`` functions not supporting Unicode; upgrade included ``pyperclip`` to v1.5.15 (:issue:`9263`)
 
 
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 6aeb4d836..202b9a093 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -2356,8 +2356,7 @@ class NDFrame(PandasObject):
         else:
             if name in self._info_axis:
                 return self[name]
-            raise AttributeError("'%s' object has no attribute '%s'" %
-                                 (type(self).__name__, name))
+            return object.__getattribute__(self, name)
 
     def __setattr__(self, name, value):
         """After regular attribute access, try setting the name
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 6ab4c8fb7..09de3bf4a 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -15878,6 +15878,17 @@ starting,ending,measure
                                    dtype='int64')
         tm.assert_panel_equal(result, expected)
 
+    def test_subclass_attr_err_propagation(self):
+        # GH 11808
+        class A(DataFrame):
+
+            @property
+            def bar(self):
+                return self.i_dont_exist
+        with tm.assertRaisesRegexp(AttributeError, '.*i_dont_exist.*'):
+            A().bar
+
+
 def skip_if_no_ne(engine='numexpr'):
     if engine == 'numexpr':
         try:
