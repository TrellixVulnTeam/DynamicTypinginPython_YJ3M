commit 4a200b8105c0b786b1d0432a485cf8b301800a33
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Nov 23 00:39:48 2012 -0500

    ENH: micro perf tweaks to speed up DataFrame constructor, unit testing

diff --git a/pandas/core/common.py b/pandas/core/common.py
index 71d767a57..aa7ed9cd6 100644
--- a/pandas/core/common.py
+++ b/pandas/core/common.py
@@ -585,10 +585,12 @@ def _is_bool_indexer(key):
 
     return False
 
-
 def _default_index(n):
-    from pandas.core.index import Index
-    return Index(np.arange(n))
+    from pandas.core.index import Int64Index
+    values = np.arange(n)
+    result = values.view(Int64Index)
+    result.name = None
+    return result
 
 
 def ensure_float(arr):
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index c82a6c7a9..d6aa2949c 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -27,8 +27,7 @@ from pandas.core.common import (isnull, notnull, PandasError, _try_sort,
 from pandas.core.generic import NDFrame
 from pandas.core.index import Index, MultiIndex, _ensure_index
 from pandas.core.indexing import _NDFrameIndexer, _maybe_droplevels
-from pandas.core.internals import (BlockManager, make_block, form_blocks,
-                                   IntBlock)
+from pandas.core.internals import BlockManager, make_block, form_blocks
 from pandas.core.series import Series, _radd_compat, _dtype_from_scalar
 from pandas.compat.scipy import scoreatpercentile as _quantile
 from pandas.util import py3compat
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index ef238b40d..edde14cd5 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -482,8 +482,8 @@ class NDFrame(PandasObject):
             for i, ax in enumerate(axes):
                 data = data.reindex_axis(ax, axis=i)
 
-        self._data = data
-        self._item_cache = {}
+        object.__setattr__(self, '_data', data)
+        object.__setattr__(self, '_item_cache', {})
 
     def astype(self, dtype):
         """
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index 3ee53a8c1..a1dc71ef2 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -23,7 +23,6 @@ import pandas.core.panel as panel
 from pandas import bdate_range
 from pandas.tseries.index import DatetimeIndex
 from pandas.tseries.period import PeriodIndex
-from pandas.tseries.interval import IntervalIndex
 
 Index = index.Index
 Series = series.Series
@@ -96,7 +95,7 @@ def assert_almost_equal(a, b):
 
     if isiterable(a):
         np.testing.assert_(isiterable(b))
-        np.testing.assert_equal(len(a), len(b))
+        assert(len(a) == len(b))
         if np.array_equal(a, b):
             return True
         else:
diff --git a/vb_suite/ctors.py b/vb_suite/ctors.py
index 365af021d..dbc5ae2ce 100644
--- a/vb_suite/ctors.py
+++ b/vb_suite/ctors.py
@@ -15,3 +15,11 @@ index = Index(np.arange(100))
 series_constructor_ndarray = \
     Benchmark("Series(data, index=index)", setup=setup,
               name='series_constructor_ndarray')
+
+setup = common_setup + """
+arr = np.random.randn(100, 100)
+"""
+
+frame_constructor_ndarray = \
+    Benchmark("DataFrame(arr)", setup=setup,
+              name='frame_constructor_ndarray')
