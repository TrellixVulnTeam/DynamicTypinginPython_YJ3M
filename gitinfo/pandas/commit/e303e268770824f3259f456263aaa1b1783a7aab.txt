commit e303e268770824f3259f456263aaa1b1783a7aab
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Feb 9 18:34:18 2017 -0500

    TST: more tseries reorg

diff --git a/pandas/tests/tseries/test_bin_groupby.py b/pandas/tests/groupby/test_bin_groupby.py
similarity index 100%
rename from pandas/tests/tseries/test_bin_groupby.py
rename to pandas/tests/groupby/test_bin_groupby.py
diff --git a/pandas/tests/indexes/datetimes/test_ops.py b/pandas/tests/indexes/datetimes/test_ops.py
index 7a5ce3a44..63bf07ec0 100644
--- a/pandas/tests/indexes/datetimes/test_ops.py
+++ b/pandas/tests/indexes/datetimes/test_ops.py
@@ -7,12 +7,10 @@ import pandas.tslib as tslib
 import pandas.util.testing as tm
 from pandas.core.common import PerformanceWarning
 from pandas.tseries.index import cdate_range
-from pandas.tseries.frequencies import get_offset, to_offset
 from pandas import (DatetimeIndex, PeriodIndex, Series, Timestamp, Timedelta,
                     date_range, TimedeltaIndex, _np_version_under1p10, Index,
                     datetime, Float64Index, offsets, bdate_range)
-from pandas.tseries.offsets import (BMonthEnd, CDay, BDay, Milli, MonthBegin,
-                                    Micro)
+from pandas.tseries.offsets import BMonthEnd, CDay, BDay
 from pandas.tests.test_base import Ops
 
 
@@ -913,16 +911,6 @@ Freq: D"""
             self.assertFalse(idx.equals(list(idx3)))
             self.assertFalse(idx.equals(pd.Series(idx3)))
 
-    def test_ms_vs_MS(self):
-        left = get_offset('ms')
-        right = get_offset('MS')
-        self.assertEqual(left, Milli())
-        self.assertEqual(right, MonthBegin())
-
-    def test_rule_aliases(self):
-        rule = to_offset('10us')
-        self.assertEqual(rule, Micro(10))
-
 
 class TestDateTimeIndexToJulianDate(tm.TestCase):
 
diff --git a/pandas/tests/tseries/test_frequencies.py b/pandas/tests/tseries/test_frequencies.py
index 9983bf527..5fbef465c 100644
--- a/pandas/tests/tseries/test_frequencies.py
+++ b/pandas/tests/tseries/test_frequencies.py
@@ -247,6 +247,18 @@ class TestToOffset(tm.TestCase):
                 frequencies.to_offset(invalid_anchor)
 
 
+def test_ms_vs_MS():
+    left = frequencies.get_offset('ms')
+    right = frequencies.get_offset('MS')
+    assert left == offsets.Milli()
+    assert right == offsets.MonthBegin()
+
+
+def test_rule_aliases():
+    rule = frequencies.to_offset('10us')
+    assert rule == offsets.Micro(10)
+
+
 def test_get_rule_month():
     result = frequencies._get_rule_month('W')
     assert (result == 'DEC')
