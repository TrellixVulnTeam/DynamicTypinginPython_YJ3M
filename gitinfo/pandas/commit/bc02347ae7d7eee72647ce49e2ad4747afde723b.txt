commit bc02347ae7d7eee72647ce49e2ad4747afde723b
Author: Chang She <chang@lambdafoundry.com>
Date:   Mon May 7 16:37:49 2012 -0400

    BUG: unhandled case in Series with index=list of arrays #831

diff --git a/pandas/core/series.py b/pandas/core/series.py
index d2cfb3f0f..86bbba197 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -272,14 +272,15 @@ class Series(np.ndarray, generic.PandasObject):
         if data is None:
             data = {}
 
+        if index is not None:
+            index = _ensure_index(index)
+
         if isinstance(data, Series):
             if index is None:
                 index = data.index
         elif isinstance(data, dict):
             if index is None:
                 index = Index(sorted(data))
-            else:
-                index = _ensure_index(index)
             try:
                 if isinstance(index, DatetimeIndex):
                     # coerce back to datetime objects for lookup
@@ -293,9 +294,6 @@ class Series(np.ndarray, generic.PandasObject):
         if dtype is not None:
             dtype = np.dtype(dtype)
 
-        if index is not None:
-            index = _ensure_index(index)
-
         subarr = _sanitize_array(data, index, dtype, copy,
                                  raise_cast_failure=True)
 
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index fc464b209..aee8733ea 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -80,6 +80,10 @@ class TestMultiLevel(unittest.TestCase):
                                   ['x', 'y', 'x', 'y']])
         self.assert_(isinstance(multi.index, MultiIndex))
 
+        multi = Series(range(4), index=[['a', 'a', 'b', 'b'],
+                                        ['x', 'y', 'x', 'y']])
+        self.assert_(isinstance(multi.index, MultiIndex))
+
     def test_reindex_level(self):
         # axis=0
         month_sums = self.ymd.sum(level='month')
