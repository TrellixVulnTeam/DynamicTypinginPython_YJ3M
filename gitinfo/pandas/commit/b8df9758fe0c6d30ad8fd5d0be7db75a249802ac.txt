commit b8df9758fe0c6d30ad8fd5d0be7db75a249802ac
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu Jun 28 10:06:13 2012 -0400

    BUG: parser bug when parse_dates is string #1544

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index fe07c37a4..0cc121437 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -864,14 +864,15 @@ class TextParser(object):
         if isinstance(self.parse_dates, bool):
             return self.parse_dates
         else:
-            to_parse = self.parse_dates # int/string or list of int or string
-
             if np.isscalar(self.index_col):
                 name = self.index_name
             else:
                 name = self.index_name[i]
 
-            return i in to_parse or name in to_parse
+            if np.isscalar(self.parse_dates):
+                return (i == self.parse_dates) or (name == self.parse_dates)
+            else:
+                return (i in self.parse_dates) or (name in self.parse_dates)
 
     def _conv_date(self, *date_cols):
         if self.date_parser is None:
diff --git a/pandas/io/tests/test_parsers.py b/pandas/io/tests/test_parsers.py
index 84a3b165a..daacb6e3a 100644
--- a/pandas/io/tests/test_parsers.py
+++ b/pandas/io/tests/test_parsers.py
@@ -20,6 +20,7 @@ from pandas.util.testing import (assert_almost_equal, assert_frame_equal,
 import pandas.lib as lib
 from pandas.util import py3compat
 from pandas.lib import Timestamp
+from pandas.tseries.index import date_range
 
 from numpy.testing.decorators import slow
 from pandas.io.date_converters import (
@@ -586,6 +587,21 @@ c,4,5
         self.assert_(isinstance(df.index[0], (datetime, np.datetime64, Timestamp)))
         assert_frame_equal(df, expected)
 
+    def test_parse_dates_string(self):
+        data = """date,A,B,C
+20090101,a,1,2
+20090102,b,3,4
+20090103,c,4,5
+"""
+        rs = read_csv(StringIO(data), index_col='date', parse_dates='date')
+        idx = date_range('1/1/2009', periods=3).asobject
+        idx.name = 'date'
+        xp = DataFrame({'A': ['a', 'b', 'c'],
+                        'B': [1, 3, 4],
+                        'C': [2, 4, 5]}, idx)
+        assert_frame_equal(rs, xp)
+
+
     def test_parse_dates_column_list(self):
         from pandas.core.datetools import to_datetime
 
