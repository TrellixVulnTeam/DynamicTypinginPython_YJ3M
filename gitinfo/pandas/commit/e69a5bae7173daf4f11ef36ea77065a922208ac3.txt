commit e69a5bae7173daf4f11ef36ea77065a922208ac3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Jul 11 12:01:48 2012 -0400

    TST: more correlation tests, release notes

diff --git a/RELEASE.rst b/RELEASE.rst
index aa48423e5..06e45cc5d 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -27,11 +27,22 @@ pandas 0.8.1
 
 **Release date:** NOT YET RELEASED
 
+**New features**
+
+  - Can pass dict of per-column line styles to DataFrame.plot (#1559)
+
+**Improvements to existing features**
+
+  - Add ability to append hierarchical index levels with ``set_index`` and to
+    drop single levels with ``reset_index`` (#1569, #1577)
+
 **Bug fixes**
 
   - Handle TypeError issues inside PyObject_RichCompareBool calls in khash
     (#1318)
   - Fix resampling bug to lower case daily frequency (#1588)
+  - Fix kendall/spearman DataFrame.corr bug with no overlap (#1595)
+
 
 pandas 0.8.0
 ============
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 9aa17f756..2234dea69 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3593,11 +3593,21 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
 
         # nothing in common
         for meth in ['pearson', 'kendall', 'spearman']:
-            df = DataFrame({'A': [1, 1, 1, np.nan, np.nan, np.nan],
-                            'B': [np.nan, np.nan, np.nan, 1, 1, 1]})
+            df = DataFrame({'A': [1, 1.5, 1, np.nan, np.nan, np.nan],
+                            'B': [np.nan, np.nan, np.nan, 1, 1.5, 1]})
             rs = df.corr(meth)
             self.assert_(isnull(rs.ix['A', 'B']))
             self.assert_(isnull(rs.ix['B', 'A']))
+            self.assert_(rs.ix['A', 'A'] == 1)
+            self.assert_(rs.ix['B', 'B'] == 1)
+
+        # constant --> all NA
+
+        for meth in ['pearson', 'spearman']:
+            df = DataFrame({'A': [1, 1, 1, np.nan, np.nan, np.nan],
+                            'B': [np.nan, np.nan, np.nan, 1, 1, 1]})
+            rs = df.corr(meth)
+            self.assert_(isnull(rs.values).all())
 
     def test_cov(self):
         self.frame['A'][:5] = nan
