commit defdb34bafa3900069d399ce597c0abbd4a2b0cc
Author: gfyoung <gfyoung17@gmail.com>
Date:   Mon Jun 11 17:16:36 2018 -0700

    MAINT: More friendly error msg on Index overflow (#21377)
    
    * MAINT: More useful error msg on Index overflow
    
    Display a more friendly error message when there
    is an OverflowError during Index construction.
    
    Partially addresses gh-15832.
    
    * DOC: Clarify how Index.__new__ handles dtype
    
    Partially addresses gh-15823.

diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index dff6b5421..bf1051332 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -181,6 +181,9 @@ class Index(IndexOpsMixin, PandasObject):
     ----------
     data : array-like (1-dimensional)
     dtype : NumPy dtype (default: object)
+        If dtype is None, we find the dtype that best fits the data.
+        If an actual dtype is provided, we coerce to that dtype if it's safe.
+        Otherwise, an error will be raised.
     copy : bool
         Make a copy of input ndarray
     name : object
@@ -306,7 +309,14 @@ class Index(IndexOpsMixin, PandasObject):
                     if is_integer_dtype(dtype):
                         inferred = lib.infer_dtype(data)
                         if inferred == 'integer':
-                            data = np.array(data, copy=copy, dtype=dtype)
+                            try:
+                                data = np.array(data, copy=copy, dtype=dtype)
+                            except OverflowError:
+                                # gh-15823: a more user-friendly error message
+                                raise OverflowError(
+                                    "the elements provided in the data cannot "
+                                    "all be casted to the dtype {dtype}"
+                                    .format(dtype=dtype))
                         elif inferred in ['floating', 'mixed-integer-float']:
                             if isna(data).any():
                                 raise ValueError('cannot convert float '
diff --git a/pandas/tests/indexes/test_base.py b/pandas/tests/indexes/test_base.py
index f9f16dc0c..c264f5f79 100644
--- a/pandas/tests/indexes/test_base.py
+++ b/pandas/tests/indexes/test_base.py
@@ -474,6 +474,13 @@ class TestIndex(Base):
         tm.assert_raises_regex(TypeError, message,
                                indices.set_names, names=renamed)
 
+    def test_constructor_overflow_int64(self):
+        # see gh-15832
+        msg = ("the elements provided in the data cannot "
+               "all be casted to the dtype int64")
+        with tm.assert_raises_regex(OverflowError, msg):
+            Index([np.iinfo(np.uint64).max - 1], dtype="int64")
+
     def test_view_with_args(self):
 
         restricted = ['unicodeIndex', 'strIndex', 'catIndex', 'boolIndex',
