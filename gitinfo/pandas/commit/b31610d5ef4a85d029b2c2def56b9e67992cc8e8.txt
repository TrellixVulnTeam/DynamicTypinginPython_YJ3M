commit b31610d5ef4a85d029b2c2def56b9e67992cc8e8
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jun 14 12:47:55 2012 -0400

    BUG: hack in normalize in MonthEnd, BMonthEnd, close #1451

diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index d584c81bf..92076ca0c 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -306,6 +306,8 @@ class MonthEnd(DateOffset, CacheableOffset):
     """DateOffset of one month end"""
 
     def apply(self, other):
+        other = datetime(other.year, other.month, other.day)
+
         n = self.n
         _, days_in_month = lib.monthrange(other.year, other.month)
         if other.day != days_in_month:
@@ -317,7 +319,7 @@ class MonthEnd(DateOffset, CacheableOffset):
 
     @classmethod
     def onOffset(cls, dt):
-        __junk, days_in_month = lib.monthrange(dt.year, dt.month)
+        days_in_month = lib.monthrange(dt.year, dt.month)[1]
         return dt.day == days_in_month
 
     @property
@@ -354,6 +356,8 @@ class BusinessMonthEnd(DateOffset, CacheableOffset):
         return (self.n == 1)
 
     def apply(self, other):
+        other = datetime(other.year, other.month, other.day)
+
         n = self.n
 
         wkday, days_in_month = lib.monthrange(other.year, other.month)
diff --git a/pandas/tseries/tests/test_offsets.py b/pandas/tseries/tests/test_offsets.py
index 5f7a44ba1..2460a7643 100644
--- a/pandas/tseries/tests/test_offsets.py
+++ b/pandas/tseries/tests/test_offsets.py
@@ -474,6 +474,13 @@ class TestBMonthEnd(unittest.TestCase):
             for base, expected in cases.iteritems():
                 assertEq(offset, base, expected)
 
+    def test_normalize(self):
+        dt = datetime(2007, 1, 1, 3)
+
+        result = dt + BMonthEnd()
+        expected = dt.replace(hour=0) + BMonthEnd()
+        self.assertEqual(result, expected)
+
     def test_onOffset(self):
 
         tests = [(BMonthEnd(), datetime(2007, 12, 31), True),
@@ -567,6 +574,13 @@ class TestMonthEnd(unittest.TestCase):
             for base, expected in cases.iteritems():
                 assertEq(offset, base, expected)
 
+    def test_normalize(self):
+        dt = datetime(2007, 1, 1, 3)
+
+        result = dt + MonthEnd()
+        expected = dt.replace(hour=0) + MonthEnd()
+        self.assertEqual(result, expected)
+
     def test_onOffset(self):
 
         tests = [(MonthEnd(), datetime(2007, 12, 31), True),
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index c707e402a..ab779e0cd 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -914,8 +914,6 @@ class TestTimeSeries(unittest.TestCase):
         self.assert_(x[0].dtype == np.dtype('M8[ns]'))
 
     def test_groupby_count_dateparseerror(self):
-        from pandas import *
-
         dr = date_range(start='1/1/2012', freq='5min', periods=10)
 
         # BAD Example, datetimes first
@@ -929,6 +927,13 @@ class TestTimeSeries(unittest.TestCase):
 
         assert_series_equal(result, expected)
 
+    def test_monthly_resample_error(self):
+        # #1451
+        dates = date_range('4/16/2012 20:00', periods=5000, freq='h')
+        ts = Series(randn(len(dates)), index=dates)
+        # it works!
+        result = ts.resample('M')
+
 def _simple_ts(start, end, freq='D'):
     rng = date_range(start, end, freq=freq)
     return Series(np.random.randn(len(rng)), index=rng)
