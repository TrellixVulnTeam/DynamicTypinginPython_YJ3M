commit 8305a856c150126ef899544091395104ac6141e2
Author: Farhan Reynaldo <xynxnx@gmail.com>
Date:   Wed Apr 1 00:33:52 2020 +0700

    DOC: Fix PR06 (type names) in docstrings (#33093)
    
    Co-authored-by: Farhan Reynaldo <farhanreynaldo@gmail.com>

diff --git a/pandas/core/arrays/sparse/array.py b/pandas/core/arrays/sparse/array.py
index 8021e0bab..8c09aa917 100644
--- a/pandas/core/arrays/sparse/array.py
+++ b/pandas/core/arrays/sparse/array.py
@@ -232,7 +232,7 @@ class SparseArray(PandasObject, ExtensionArray, ExtensionOpsMixin):
         3. ``data.dtype.fill_value`` if `fill_value` is None and `dtype`
            is not a ``SparseDtype`` and `data` is a ``SparseArray``.
 
-    kind : {'integer', 'block'}, default 'integer'
+    kind : {'int', 'block'}, default 'int'
         The type of storage for sparse locations.
 
         * 'block': Stores a `block` and `block_length` for each
diff --git a/pandas/core/groupby/groupby.py b/pandas/core/groupby/groupby.py
index ebdb00624..dff712ee1 100644
--- a/pandas/core/groupby/groupby.py
+++ b/pandas/core/groupby/groupby.py
@@ -211,7 +211,7 @@ which is much more readable.
 
 Parameters
 ----------
-func : callable or tuple of (callable, string)
+func : callable or tuple of (callable, str)
     Function to apply to this %(klass)s object or, alternatively,
     a `(callable, data_keyword)` tuple where `data_keyword` is a
     string indicating the keyword of `callable` that expects the
diff --git a/pandas/core/tools/numeric.py b/pandas/core/tools/numeric.py
index a6198f8b7..f4eb16602 100644
--- a/pandas/core/tools/numeric.py
+++ b/pandas/core/tools/numeric.py
@@ -40,13 +40,13 @@ def to_numeric(arg, errors="raise", downcast=None):
         - If 'raise', then invalid parsing will raise an exception.
         - If 'coerce', then invalid parsing will be set as NaN.
         - If 'ignore', then invalid parsing will return the input.
-    downcast : {'integer', 'signed', 'unsigned', 'float'}, default None
+    downcast : {'int', 'signed', 'unsigned', 'float'}, default None
         If not None, and if the data has been successfully cast to a
         numerical dtype (or if the data was numeric to begin with),
         downcast that resulting data to the smallest numerical dtype
         possible according to the following rules:
 
-        - 'integer' or 'signed': smallest signed int dtype (min.: np.int8)
+        - 'int' or 'signed': smallest signed int dtype (min.: np.int8)
         - 'unsigned': smallest unsigned int dtype (min.: np.uint8)
         - 'float': smallest float dtype (min.: np.float32)
 
