commit 5df497e6d87de256127ce40bd8ec05a4b76e4f33
Author: Artemy Kolchinsky <akolchin@indiana.edu>
Date:   Tue May 26 19:07:35 2015 -0400

    BUG: plot doesnt default to matplotlib axes.grid setting (#9792)
    
    Cleanup

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index d7955d721..a7917e81f 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -76,5 +76,6 @@ Bug Fixes
 - Bug in ``DatetimeIndex`` and ``TimedeltaIndex`` names are lost after timedelta arithmetics ( :issue:`9926`)
 
 - Bug in `Series.plot(label="LABEL")` not correctly setting the label (:issue:`10119`)
+- Bug in `plot` not defaulting to matplotlib `axes.grid` setting (:issue:`9792`)
 
 
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index 4c9d5a920..82f4b8c05 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -439,6 +439,38 @@ class TestPlotBase(tm.TestCase):
                 else:
                     raise AssertionError
 
+    def _check_grid_settings(self, obj, kinds, kws={}):
+        # Make sure plot defaults to rcParams['axes.grid'] setting, GH 9792
+
+        import matplotlib as mpl
+
+        def is_grid_on():
+            xoff = all(not g.gridOn for g in self.plt.gca().xaxis.get_major_ticks())
+            yoff = all(not g.gridOn for g in self.plt.gca().yaxis.get_major_ticks())
+            return not(xoff and yoff)
+
+        spndx=1
+        for kind in kinds:
+            self.plt.subplot(1,4*len(kinds),spndx); spndx+=1
+            mpl.rc('axes',grid=False)
+            obj.plot(kind=kind, **kws)
+            self.assertFalse(is_grid_on())    
+
+            self.plt.subplot(1,4*len(kinds),spndx); spndx+=1
+            mpl.rc('axes',grid=True)
+            obj.plot(kind=kind, grid=False, **kws)
+            self.assertFalse(is_grid_on())    
+
+            if kind != 'pie':
+                self.plt.subplot(1,4*len(kinds),spndx); spndx+=1
+                mpl.rc('axes',grid=True)
+                obj.plot(kind=kind, **kws)
+                self.assertTrue(is_grid_on())
+
+                self.plt.subplot(1,4*len(kinds),spndx); spndx+=1
+                mpl.rc('axes',grid=False)
+                obj.plot(kind=kind, grid=True, **kws)
+                self.assertTrue(is_grid_on())
 
 @tm.mplskip
 class TestSeriesPlots(TestPlotBase):
@@ -1108,6 +1140,12 @@ class TestSeriesPlots(TestPlotBase):
         _check_plot_works(self.series.plot, table=True)
         _check_plot_works(self.series.plot, table=self.series)
 
+    @slow
+    def test_series_grid_settings(self):
+        # Make sure plot defaults to rcParams['axes.grid'] setting, GH 9792
+        self._check_grid_settings(Series([1,2,3]), 
+            plotting._series_kinds + plotting._common_kinds)
+
 
 @tm.mplskip
 class TestDataFramePlots(TestPlotBase):
@@ -3426,6 +3464,12 @@ class TestDataFramePlots(TestPlotBase):
                              "y label is invisible but shouldn't")
 
 
+    @slow
+    def test_df_grid_settings(self):
+        # Make sure plot defaults to rcParams['axes.grid'] setting, GH 9792
+        self._check_grid_settings(DataFrame({'a':[1,2,3],'b':[2,3,4]}), 
+            plotting._dataframe_kinds, kws={'x':'a','y':'b'})
+        
 
 @tm.mplskip
 class TestDataFrameGroupByPlots(TestPlotBase):
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 04dd4d339..76685e258 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -810,7 +810,7 @@ class MPLPlot(object):
                 self.rot = self._default_rot
 
         if grid is None:
-            grid = False if secondary_y else True
+            grid = False if secondary_y else self.plt.rcParams['axes.grid']
 
         self.grid = grid
         self.legend = legend
