commit 3f6b47edbadb3163d10134cbe0b635df5eefbda4
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Oct 18 18:06:03 2011 -0400

    ENH: select columns with DataFrame.__getitem__, GH #253

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 69e9d6861..850b927c2 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -806,22 +806,34 @@ class DataFrame(NDFrame):
             new_data = self._data.get_slice(key, axis=1)
             return self._constructor(new_data)
         # either boolean or fancy integer index
-        elif isinstance(key, np.ndarray):
-            if len(key) != len(self.index):
-                raise ValueError('Item wrong length %d instead of %d!' %
-                                 (len(key), len(self.index)))
+        elif isinstance(key, (np.ndarray, list)):
+            if isinstance(key, list):
+                key = np.array(key, dtype=object)
 
             # also raises Exception if object array with NA values
             if _is_bool_indexer(key):
                 key = np.asarray(key, dtype=bool)
-
-            new_index = self.index[key]
-            return self.reindex(new_index)
+            return self._getitem_array(key)
         elif isinstance(self.columns, MultiIndex):
             return self._getitem_multilevel(key)
         else:
             return self._getitem_single(key)
 
+    def _getitem_array(self, key):
+        if key.dtype == np.bool_:
+            if len(key) != len(self.index):
+                raise ValueError('Item wrong length %d instead of %d!' %
+                                 (len(key), len(self.index)))
+
+            new_index = self.index[key]
+            return self.reindex(new_index)
+        else:
+            indexer = self.columns.get_indexer(key)
+            mask = indexer == -1
+            if mask.any():
+                raise Exception("No column(s) named: %s" % str(key[mask]))
+            return self.reindex(columns=key)
+
     def _slice(self, slobj, axis=0):
         if axis == 0:
             mgr_axis = 1
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index b7ac9a7d1..84576c173 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -53,6 +53,19 @@ class CheckIndexing(object):
         expected = self.frame.ix[:, ['A', 'B', 'C']]
         assert_frame_equal(result, expected)
 
+    def test_getitem_list(self):
+        result = self.frame[['B', 'A']]
+        result2 = self.frame[Index(['B', 'A'])]
+
+        expected = self.frame.ix[:, ['B', 'A']]
+        assert_frame_equal(result, expected)
+        assert_frame_equal(result2, expected)
+
+        self.assertRaises(Exception, self.frame.__getitem__,
+                          ['B', 'A', 'foo'])
+        self.assertRaises(Exception, self.frame.__getitem__,
+                          Index(['B', 'A', 'foo']))
+
     def test_getitem_boolean(self):
         # boolean indexing
         d = self.tsframe.index[10]
