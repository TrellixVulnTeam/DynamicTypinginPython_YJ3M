commit 233d51dd099f590379bd9144c40a61f6785b2b57
Author: Sinhrks <sinhrks@gmail.com>
Date:   Sat Oct 22 18:54:33 2016 +0900

    BUG: String indexing against object dtype may raise AttributeError (#14424)

diff --git a/doc/source/whatsnew/v0.19.1.txt b/doc/source/whatsnew/v0.19.1.txt
index 4b2aae227..147ff8795 100644
--- a/doc/source/whatsnew/v0.19.1.txt
+++ b/doc/source/whatsnew/v0.19.1.txt
@@ -40,6 +40,7 @@ Bug Fixes
 
 
 
+- Bug in string indexing against data with ``object`` ``Index`` may raise ``AttributeError`` (:issue:`14424`)
 
 
 
diff --git a/pandas/indexes/base.py b/pandas/indexes/base.py
index 1c24a0db3..10c4d823b 100644
--- a/pandas/indexes/base.py
+++ b/pandas/indexes/base.py
@@ -2966,6 +2966,11 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):
         name = self.name if self.name == other.name else None
         return Index(joined, name=name)
 
+    def _get_string_slice(self, key, use_lhs=True, use_rhs=True):
+        # this is for partial string indexing,
+        # overridden in DatetimeIndex, TimedeltaIndex and PeriodIndex
+        raise NotImplementedError
+
     def slice_indexer(self, start=None, end=None, step=None, kind=None):
         """
         For an ordered Index, compute the slice indexer for input labels and
diff --git a/pandas/tests/indexing/test_indexing.py b/pandas/tests/indexing/test_indexing.py
index fa406a27b..a50d3d28e 100644
--- a/pandas/tests/indexing/test_indexing.py
+++ b/pandas/tests/indexing/test_indexing.py
@@ -3613,6 +3613,27 @@ Region_1,Site_2,3977723089,A,5/20/2015 8:33,5/20/2015 9:09,Yes,No"""
         result = df2.loc[idx]
         tm.assert_frame_equal(result, expected, check_index_type=False)
 
+    def test_string_slice(self):
+        # GH 14424
+        # string indexing against datetimelike with object
+        # dtype should properly raises KeyError
+        df = pd.DataFrame([1], pd.Index([pd.Timestamp('2011-01-01')],
+                                        dtype=object))
+        self.assertTrue(df.index.is_all_dates)
+        with tm.assertRaises(KeyError):
+            df['2011']
+
+        with tm.assertRaises(KeyError):
+            df.loc['2011', 0]
+
+        df = pd.DataFrame()
+        self.assertFalse(df.index.is_all_dates)
+        with tm.assertRaises(KeyError):
+            df['2011']
+
+        with tm.assertRaises(KeyError):
+            df.loc['2011', 0]
+
     def test_mi_access(self):
 
         # GH 4145
