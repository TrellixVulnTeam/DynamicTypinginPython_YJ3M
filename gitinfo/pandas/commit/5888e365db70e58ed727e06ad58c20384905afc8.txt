commit 5888e365db70e58ed727e06ad58c20384905afc8
Author: Maria del Mar Bibiloni <mariadelmarbibiloni@hotmail.com>
Date:   Mon Mar 12 15:32:08 2018 +0100

    DOC: update the pandas.Index.is_categorical docstring (#20167)
    
    * pandas.Index.is_categorical from base.py documented
    
    * pandas.Index.is_categorical from base.py documented and some errors solved
    
    * pandas.Index.is_categorical from base.py with new examples and extended summary
    
    * Added See Also.
    
    Removed Extended summary
    
    * Added back whitepace
    
    * to_frame formatting

diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index e82b641db..45b6b08dc 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -1195,7 +1195,7 @@ class Index(IndexOpsMixin, PandasObject):
         --------
         >>> idx = pd.Index(['Ant', 'Bear', 'Cow'], name='animal')
         >>> idx.to_frame()
-            animal
+               animal
         animal
         Ant       Ant
         Bear     Bear
@@ -1511,6 +1511,39 @@ class Index(IndexOpsMixin, PandasObject):
         return is_object_dtype(self.dtype)
 
     def is_categorical(self):
+        """
+        Check if the Index holds categorical data.
+
+        Returns
+        -------
+        boolean
+            True if the Index is categorical.
+
+        See Also
+        --------
+        CategoricalIndex : Index for categorical data.
+
+        Examples
+        --------
+        >>> idx = pd.Index(["Watermelon", "Orange", "Apple",
+        ...                 "Watermelon"]).astype("category")
+        >>> idx.is_categorical()
+        True
+
+        >>> idx = pd.Index([1, 3, 5, 7])
+        >>> idx.is_categorical()
+        False
+
+        >>> s = pd.Series(["Peter", "Víctor", "Elisabeth", "Mar"])
+        >>> s
+        0        Peter
+        1       Víctor
+        2    Elisabeth
+        3          Mar
+        dtype: object
+        >>> s.index.is_categorical()
+        False
+        """
         return self.inferred_type in ['categorical']
 
     def is_interval(self):
