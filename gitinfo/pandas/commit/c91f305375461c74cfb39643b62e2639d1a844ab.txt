commit c91f305375461c74cfb39643b62e2639d1a844ab
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Mon May 11 12:14:11 2015 +0200

    DOC: update section on CategoricalIndex in categorical docs

diff --git a/doc/source/categorical.rst b/doc/source/categorical.rst
index 11e7fb0fd..c05d4045e 100644
--- a/doc/source/categorical.rst
+++ b/doc/source/categorical.rst
@@ -813,12 +813,16 @@ basic type) and applying along columns will also convert to object.
     df.apply(lambda row: type(row["cats"]), axis=1)
     df.apply(lambda col: col.dtype, axis=0)
 
-No Categorical Index
-~~~~~~~~~~~~~~~~~~~~
+Categorical Index
+~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 0.16.1
+
+A new ``CategoricalIndex`` index type is introduced in version 0.16.1. See the
+:ref:`advanced indexing docs <indexing.categoricalindex>` for a more detailed
+explanation.
 
-There is currently no index of type ``category``, so setting the index to categorical column will
-convert the categorical data to a "normal" dtype first and therefore remove any custom
-ordering of the categories:
+Setting the index, will create create a ``CategoricalIndex``
 
 .. ipython:: python
 
@@ -827,13 +831,12 @@ ordering of the categories:
     values = [4,2,3,1]
     df = DataFrame({"strings":strings, "values":values}, index=cats)
     df.index
-    # This should sort by categories but does not as there is no CategoricalIndex!
+    # This now sorts by the categories order
     df.sort_index()
 
-.. note::
-    This could change if a `CategoricalIndex` is implemented (see
-    https://github.com/pydata/pandas/issues/7629)
-
+In previous versions (<0.16.1) there is no index of type ``category``, so
+setting the index to categorical column will convert the categorical data to a
+"normal" dtype first and therefore remove any custom ordering of the categories.
 
 Side Effects
 ~~~~~~~~~~~~
