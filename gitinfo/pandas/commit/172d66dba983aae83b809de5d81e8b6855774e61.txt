commit 172d66dba983aae83b809de5d81e8b6855774e61
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Oct 24 16:41:45 2011 -0400

    TST: tuples and strings aren't comparable in python 3

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 0ce3f33bf..bcf37e2d0 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1498,9 +1498,6 @@ class MultiIndex(Index):
         -------
         Index
         """
-        if not isinstance(other, MultiIndex):
-            return other.union(self)
-
         self._assert_can_do_setop(other)
 
         if len(other) == 0 or self.equals(other):
@@ -1508,7 +1505,6 @@ class MultiIndex(Index):
 
         result_names = self.names if self.names == other.names else None
 
-        # TODO: optimize / make less wasteful
         self_tuples = self.get_tuple_index()
         other_tuples = other.get_tuple_index()
 
@@ -1528,9 +1524,6 @@ class MultiIndex(Index):
         -------
         Index
         """
-        if not isinstance(other, MultiIndex):
-            return other.intersection(self)
-
         self._assert_can_do_setop(other)
 
         if self.equals(other):
@@ -1538,7 +1531,6 @@ class MultiIndex(Index):
 
         result_names = self.names if self.names == other.names else None
 
-        # TODO: optimize / make less wasteful
         self_tuples = self.get_tuple_index()
         other_tuples = other.get_tuple_index()
         uniq_tuples = sorted(set(self_tuples) & set(other_tuples))
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index f4c8764b8..38365ddfa 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -916,19 +916,21 @@ class TestMultiIndex(unittest.TestCase):
         the_union = self.index.union(self.index[:0])
         self.assert_(the_union is self.index)
 
-        tuples = self.index.get_tuple_index()
-        result = self.index[:4] | tuples[4:]
-        self.assert_(result.equals(tuples))
+        # won't work in python 3
+        # tuples = self.index.get_tuple_index()
+        # result = self.index[:4] | tuples[4:]
+        # self.assert_(result.equals(tuples))
 
-    def test_union_with_regular_index(self):
-        other = Index(['A', 'B', 'C'])
+    # not valid for python 3
+    # def test_union_with_regular_index(self):
+    #     other = Index(['A', 'B', 'C'])
 
-        result = other.union(self.index)
-        self.assert_(('foo', 'one') in result)
-        self.assert_('B' in result)
+    #     result = other.union(self.index)
+    #     self.assert_(('foo', 'one') in result)
+    #     self.assert_('B' in result)
 
-        result2 = self.index.union(other)
-        self.assert_(result.equals(result2))
+    #     result2 = self.index.union(other)
+    #     self.assert_(result.equals(result2))
 
     def test_intersection(self):
         piece1 = self.index[:5][::-1]
@@ -948,9 +950,10 @@ class TestMultiIndex(unittest.TestCase):
         expected = self.index[:0]
         self.assert_(empty.equals(expected))
 
-        tuples = self.index.get_tuple_index()
-        result = self.index & tuples
-        self.assert_(result.equals(tuples))
+        # can't do in python 3
+        # tuples = self.index.get_tuple_index()
+        # result = self.index & tuples
+        # self.assert_(result.equals(tuples))
 
     def test_diff(self):
         first = self.index
