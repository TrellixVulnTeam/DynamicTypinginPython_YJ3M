commit f970dff93edd1da0e76cdd9e90d99f0b8d32f2c3
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Sep 5 16:48:02 2011 -0400

    DOC: release notes. and rewrote _make_long_index

diff --git a/RELEASE.rst b/RELEASE.rst
index 42a3fd0d9..cc63f4e82 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -137,7 +137,7 @@ Release notes
     `DataFrame.count` to enable this behavior in those methods if so desired
     (disabled by default)
   * `DataFrame.pivot` generalized to enable pivoting multiple columns into a
-    `WidePanel`
+    `DataFrame` with hierarhical columns
   * `DataFrame` constructor can accept structured / record arrays
   * `WidePanel` constructor can accept a dict of DataFrame-like objects. Do not
     need to use `from_dict` anymore (`from_dict` is there to stay, though).
@@ -206,6 +206,10 @@ Release notes
   * More Series deprecations / renaming: `toCSV` to `to_csv`, `asOf` to `asof`,
     `merge` to `map`, `applymap` to `apply`, `toDict` to `to_dict`,
     `combineFirst` to `combine_first`. Will print `FutureWarning`.
+  * `DataFrame.to_csv` does not write an "index" column label by default
+    anymore since the output file can be read back without it. However, there
+    is a new ``index_label`` argument. So you can do ``index_label='index'`` to
+    emulate the old behavior
 
 **Bug fixes**
 
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 3b865c210..9c1b6b9bf 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -1514,15 +1514,7 @@ def make_mask(index):
     return mask
 
 def _make_long_index(major_values, minor_values):
-    from pandas.core.index import unique_with_labels
-    major_values = np.asarray(major_values, dtype=object)
-    minor_values = np.asarray(minor_values, dtype=object)
-    major_axis, major_labels = unique_with_labels(major_values)
-    minor_axis, minor_labels = unique_with_labels(minor_values)
-
-    long_index = MultiIndex(levels=[major_axis, minor_axis],
-                                 labels=[major_labels, minor_labels])
-    return long_index
+    return MultiIndex.from_arrays([major_values, minor_values])
 
 def _slow_pivot(index, columns, values):
     """
