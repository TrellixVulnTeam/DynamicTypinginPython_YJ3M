commit 78ba063f438924378f887d77fcc692186e6381a6
Author: Matt Kirk <matt@matthewkirk.com>
Date:   Fri Feb 2 02:26:15 2018 +0700

    BUG: Fix problem with SparseDataFrame not persisting to csv (#19441)
    
    * BUG: Fix problem with SparseDataFrame not persisting to csv
    
    * FIX: Remove comment and move test with more coverage
    
    * FIX: Flake8 issues cleanup
    
    * Fix failing test due to blank lines
    
    * FIX: linting errors on whitespace
    
    * Use parametrize on test
    
    * Move bug description to sparse header
    
    * Add GH issue to test
    
    * Fix linting error

diff --git a/doc/source/whatsnew/v0.23.0.txt b/doc/source/whatsnew/v0.23.0.txt
index 66e88e181..91362c764 100644
--- a/doc/source/whatsnew/v0.23.0.txt
+++ b/doc/source/whatsnew/v0.23.0.txt
@@ -529,7 +529,6 @@ I/O
 - Bug in :func:`DataFrame.to_parquet` where an exception was raised if the write destination is S3 (:issue:`19134`)
 - :class:`Interval` now supported in :func:`DataFrame.to_excel` for all Excel file types (:issue:`19242`)
 - :class:`Timedelta` now supported in :func:`DataFrame.to_excel` for xls file type (:issue:`19242`, :issue:`9155`)
--
 
 Plotting
 ^^^^^^^^
@@ -553,7 +552,7 @@ Sparse
 ^^^^^^
 
 - Bug in which creating a ``SparseDataFrame`` from a dense ``Series`` or an unsupported type raised an uncontrolled exception (:issue:`19374`)
--
+- Bug in :class:`SparseDataFrame.to_csv` causing exception (:issue:`19384`)
 -
 
 Reshaping
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 4b12d931a..52e8317f5 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -709,7 +709,8 @@ class Block(PandasObject):
                         **kwargs):
         """ convert to our native types format, slicing if desired """
 
-        values = self.values
+        values = self.get_values()
+
         if slicer is not None:
             values = values[:, slicer]
         mask = isna(values)
diff --git a/pandas/tests/sparse/frame/test_to_csv.py b/pandas/tests/sparse/frame/test_to_csv.py
new file mode 100644
index 000000000..b0243dfde
--- /dev/null
+++ b/pandas/tests/sparse/frame/test_to_csv.py
@@ -0,0 +1,20 @@
+import numpy as np
+import pytest
+from pandas import SparseDataFrame, read_csv
+from pandas.util import testing as tm
+
+
+class TestSparseDataFrameToCsv(object):
+    fill_values = [np.nan, 0, None, 1]
+
+    @pytest.mark.parametrize('fill_value', fill_values)
+    def test_to_csv_sparse_dataframe(self, fill_value):
+        # GH19384
+        sdf = SparseDataFrame({'a': type(self).fill_values},
+                              default_fill_value=fill_value)
+
+        with tm.ensure_clean('sparse_df.csv') as path:
+            sdf.to_csv(path, index=False)
+            df = read_csv(path, skip_blank_lines=False)
+
+            tm.assert_sp_frame_equal(df.to_sparse(fill_value=fill_value), sdf)
