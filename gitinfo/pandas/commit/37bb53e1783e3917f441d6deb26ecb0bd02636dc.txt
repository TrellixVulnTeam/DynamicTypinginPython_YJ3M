commit 37bb53e1783e3917f441d6deb26ecb0bd02636dc
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Jun 11 14:10:33 2012 -0400

    ENH: commit autocorrelation_plot stuff by hand #1425

diff --git a/doc/source/visualization.rst b/doc/source/visualization.rst
index 3c2d0c453..3717e2e47 100644
--- a/doc/source/visualization.rst
+++ b/doc/source/visualization.rst
@@ -297,8 +297,31 @@ implies that the underlying data are not random.
 
    plt.figure()
 
-   data = Series(0.1 * np.random.random(1000) + 
+   data = Series(0.1 * np.random.random(1000) +
       0.9 * np.sin(np.linspace(-99 * np.pi, 99 * np.pi, num=1000)))
 
    @savefig lag_plot.png width=6in
-   lag_plot(data)
\ No newline at end of file
+   lag_plot(data)
+
+Autocorrelation Plot
+~~~~~~~~~~~~~~~~~~~~
+
+Autocorrelation plots are often used for checking randomness in time series.
+This is done by computing autocorrelations for data values at varying time lags.
+If time series is random, such autocorrelations should be near zero for any and
+all time-lag separations. If time series is non-random then one or more of the
+autocorrelations will be significantly non-zero. The horizontal lines displayed
+in the plot correspond to 95% and 99% confidence bands. The dashed line is 99%
+confidence band.
+
+.. ipython:: python
+
+   from pandas.tools.plotting import autocorrelation_plot
+
+   plt.figure()
+
+   data = Series(0.7 * np.random.random(1000) +
+      0.3 * np.sin(np.linspace(-9 * np.pi, 9 * np.pi, num=1000)))
+
+   @savefig autocorrelation_plot.png width=6in
+   autocorrelation_plot(data)
diff --git a/pandas/tests/test_graphics.py b/pandas/tests/test_graphics.py
index f8bbae341..8326445f2 100644
--- a/pandas/tests/test_graphics.py
+++ b/pandas/tests/test_graphics.py
@@ -75,6 +75,12 @@ class TestSeriesPlots(unittest.TestCase):
         ax = self.ts.plot(kind='kde', logy=True)
         self.assert_(ax.get_yscale() == 'log')
 
+    @slow
+    def test_autocorrelation_plot(self):
+        from pandas.tools.plotting import autocorrelation_plot
+        _check_plot_works(autocorrelation_plot, self.ts)
+        _check_plot_works(autocorrelation_plot, self.ts.values)
+
     @slow
     def test_lag_plot(self):
         from pandas.tools.plotting import lag_plot
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index df2cecd8f..515434edd 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -216,7 +216,7 @@ def autocorrelation_plot(series, ax=None):
     """
     import matplotlib.pyplot as plt
     n = len(series)
-    data = series.values
+    data = np.asarray(series)
     if ax == None:
         ax = plt.gca(xlim=(1, n), ylim=(-1.0, 1.0))
     mean = np.mean(data)
