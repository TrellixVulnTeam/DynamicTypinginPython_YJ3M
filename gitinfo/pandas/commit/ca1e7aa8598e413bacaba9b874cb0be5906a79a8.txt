commit ca1e7aa8598e413bacaba9b874cb0be5906a79a8
Author: jreback <jeff@reback.net>
Date:   Thu Feb 20 08:49:35 2014 -0500

    BUG: inconcistency in contained values of a Series created from a DatetimeIndex with a tz, related (GH6032)

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index af7dc780e..81964a573 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2097,17 +2097,23 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         i = pd.DatetimeIndex(pd.tseries.tools.to_datetime(['2013-1-1 13:00','2013-1-2 14:00'], errors="raise")).tz_localize('US/Pacific')
         df = DataFrame(np.random.randn(2,1),columns=['A'])
 
-        expected = Series(i)
-        self.assertTrue(expected.dtype == object)
-        self.assertTrue(i.equals(expected.values.values))
+        expected = Series(np.array([pd.Timestamp('2013-01-01 13:00:00-0800', tz='US/Pacific'),
+                                    pd.Timestamp('2013-01-02 14:00:00-0800', tz='US/Pacific')], dtype="object"))
 
+        # convert index to series
+        result = Series(i)
+        assert_series_equal(result, expected)
+
+        # assignt to frame
         df['B'] = i
         result = df['B']
         assert_series_equal(result, expected)
 
+        # keep the timezone
         result = i.to_series(keep_tz=True)
         assert_series_equal(result.reset_index(drop=True), expected)
 
+        # convert to utc
         df['C'] = i.to_series().reset_index(drop=True)
         result = df['C']
         comp = DatetimeIndex(expected.values).copy()
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index e99c7c270..b0fe3efde 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -750,7 +750,7 @@ class DatetimeIndex(Int64Index):
     def _to_embed(self, keep_tz=False):
         """ return an array repr of this object, potentially casting to object """
         if keep_tz and self.tz is not None and str(self.tz) != 'UTC':
-            return self.asobject
+            return self.asobject.values
         return self.values
 
     @property
