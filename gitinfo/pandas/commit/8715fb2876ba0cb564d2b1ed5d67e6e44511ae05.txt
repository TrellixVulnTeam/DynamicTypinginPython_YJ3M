commit 8715fb2876ba0cb564d2b1ed5d67e6e44511ae05
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jun 21 12:20:05 2011 -0400

    test coverage

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 3a8f1e5c6..4c2d7cf61 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2103,10 +2103,6 @@ class DataFrame(PandasGeneric):
         """
         summed = self.sum(axis, numeric_only=True)
         count = self.count(axis, numeric_only=True).astype(float)
-
-        if not count.index.equals(summed.index):
-            count = count.reindex(summed.index)
-
         return summed / count
 
     def quantile(self, q=0.5, axis=0):
@@ -2252,7 +2248,8 @@ class DataFrame(PandasGeneric):
         -------
         Series or TimeSeries
         """
-        y = np.asarray(self.values)
+        y, axis_labels = self._get_agg_data(axis, numeric_only=True)
+
         mask = np.isnan(y)
         count = (y.shape[axis] - mask.sum(axis)).astype(float)
         y[mask] = 0
@@ -2263,7 +2260,7 @@ class DataFrame(PandasGeneric):
 
         theSkew = (np.sqrt((count**2-count))*C) / ((count-2)*np.sqrt(B)**3)
 
-        return Series(theSkew, index=self._get_agg_axis(axis))
+        return Series(theSkew, index=axis_labels)
 
     def _get_agg_data(self, axis, numeric_only=True):
         num_cols = self._get_numeric_columns()
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 6fbcc0e79..6c2977b4b 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -640,6 +640,7 @@ def _blocks_to_series_dict(blocks, index=None):
 def _interleave(blocks, columns):
     """
     Return ndarray from blocks with specified column order
+    Columns must be contained in the blocks
     """
     dtype = _interleaved_dtype(blocks)
     columns = _ensure_index(columns)
@@ -649,12 +650,15 @@ def _interleave(blocks, columns):
 
     for block in blocks:
         indexer, mask = columns.get_indexer(block.columns)
-
-        if mask.all():
-            result[:, indexer] = block.values
-        else:
-            indexer = indexer[mask]
-            result[:, indexer] = block.values[:, mask]
+        assert(mask.all())
+        result[:, indexer] = block.values
+
+        # may not need this
+        # if mask.all():
+        #     result[:, indexer] = block.values
+        # else:
+        #     indexer = indexer[mask]
+        #     result[:, indexer] = block.values[:, mask]
 
         colmask[indexer] = 1
 
diff --git a/pandas/core/tests/test_frame.py b/pandas/core/tests/test_frame.py
index 6b5d575ed..9844e298a 100644
--- a/pandas/core/tests/test_frame.py
+++ b/pandas/core/tests/test_frame.py
@@ -1870,6 +1870,13 @@ class TestDataFrame(unittest.TestCase, CheckIndexing):
         means = self.frame.mean(0)
         self.assertEqual(means['bool'], self.frame['bool'].values.mean())
 
+    def test_stats_mixed_type(self):
+        # don't blow up
+        self.mixed_frame.std(1)
+        self.mixed_frame.var(1)
+        self.mixed_frame.mean(1)
+        self.mixed_frame.skew(1)
+
     def test_median(self):
         def f(x):
             x = np.asarray(x)
