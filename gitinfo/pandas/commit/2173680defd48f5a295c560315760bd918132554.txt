commit 2173680defd48f5a295c560315760bd918132554
Author: Jeff Tratner <jeffrey.tratner@gmail.com>
Date:   Wed Jan 1 23:11:46 2014 -0800

    BUG: Fix DatetimeIndex.insert() with non-datetimes.
    
    Coerces to object Index instead.

diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index a1ef94d84..548f49e23 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -10897,6 +10897,19 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
                                 ['a', 'mean', 'median', 'mean']])
         assert_frame_equal(rs, xp)
 
+    def test_reset_index_with_datetimeindex_cols(self):
+        # GH5818
+        #
+        df = pd.DataFrame([[1, 2], [3, 4]],
+                          columns=pd.date_range('1/1/2013', '1/2/2013'),
+                          index=['A', 'B'])
+
+        result = df.reset_index()
+        expected = pd.DataFrame([['A', 1, 2], ['B', 3, 4]],
+                          columns=['index', datetime(2013, 1, 1),
+                                   datetime(2013, 1, 2)])
+        assert_frame_equal(result, expected)
+
     #----------------------------------------------------------------------
     # Tests to cope with refactored internals
     def test_as_matrix_numeric_cols(self):
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 6779e1a61..39aeeda0b 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -1533,6 +1533,8 @@ class DatetimeIndex(Int64Index):
         ----------
         loc : int
         item : object
+            if not either a Python datetime or a numpy integer-like, returned
+            Index dtype will be object rather than datetime.
 
         Returns
         -------
@@ -1540,11 +1542,15 @@ class DatetimeIndex(Int64Index):
         """
         if isinstance(item, datetime):
             item = _to_m8(item, tz=self.tz)
-
-        new_index = np.concatenate((self[:loc].asi8,
+        try:
+            new_index = np.concatenate((self[:loc].asi8,
                                     [item.view(np.int64)],
                                     self[loc:].asi8))
-        return DatetimeIndex(new_index, freq='infer')
+            return DatetimeIndex(new_index, freq='infer')
+        except (AttributeError, TypeError):
+            # fall back to object index
+            return self.asobject.insert(loc, item)
+
 
     def delete(self, loc):
         """
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index f4dcdb7a4..4dfe05e38 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -2099,6 +2099,13 @@ class TestDatetimeIndex(tm.TestCase):
                              '2000-01-02'])
         self.assert_(result.equals(exp))
 
+        # insertion of non-datetime should coerce to object index
+        result = idx.insert(1, 'inserted')
+        expected = Index([datetime(2000, 1, 4), 'inserted', datetime(2000, 1, 1),
+                          datetime(2000, 1, 2)])
+        self.assert_(not isinstance(result, DatetimeIndex))
+        tm.assert_index_equal(result, expected)
+
         idx = date_range('1/1/2000', periods=3, freq='M')
         result = idx.insert(3, datetime(2000, 4, 30))
         self.assert_(result.freqstr == 'M')
