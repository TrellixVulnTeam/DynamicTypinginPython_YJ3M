commit f8c776a98d2740244179315d6e8062dcb32586e5
Author: Chang She <changshe@gmail.com>
Date:   Wed Dec 26 15:39:51 2012 -0500

    BUG: hierarchical indexing bug if more than 2 levels and top is empty #2596

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index b3fef8943..4c352509d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -1999,9 +1999,12 @@ class DataFrame(NDFrame):
                                    columns=result_columns)
             if len(result.columns) == 1:
                 top = result.columns[0]
-                if (type(top) == str and top == '' or
-                        type(top) == tuple and top[0] == ''):
-                    result = Series(result[''], index=self.index, name=key)
+                if ((type(top) == str and top == '') or
+                    (type(top) == tuple and top[0] == '')):
+                    result = result['']
+                    if isinstance(result, Series):
+                        result = Series(result, index=self.index, name=key)
+
             return result
         else:
             return self._get_item_cache(key)
diff --git a/pandas/tests/test_multilevel.py b/pandas/tests/test_multilevel.py
index 10ff3cf2d..3793645c7 100644
--- a/pandas/tests/test_multilevel.py
+++ b/pandas/tests/test_multilevel.py
@@ -278,6 +278,18 @@ class TestMultiLevel(unittest.TestCase):
         df.ix[:,:] = 10
         assert_frame_equal(df, result)
 
+    def test_frame_getitem_multicolumn_empty_level(self):
+        f = DataFrame({'a': ['1','2','3'],
+                       'b': ['2','3','4']})
+        f.columns = [['level1 item1', 'level1 item2'],
+                     ['', 'level2 item2'],
+                     ['level3 item1', 'level3 item2']]
+
+        result = f['level1 item1']
+        expected = DataFrame([['1'],['2'],['3']], index=f.index,
+                             columns=['level3 item1'])
+        assert_frame_equal(result, expected)
+
     def test_frame_setitem_multi_column(self):
         df = DataFrame(randn(10, 4), columns=[['a', 'a', 'b', 'b'],
                                               [0, 1, 0, 1]])
