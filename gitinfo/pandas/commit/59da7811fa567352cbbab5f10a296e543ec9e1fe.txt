commit 59da7811fa567352cbbab5f10a296e543ec9e1fe
Author: Dan Ringwalt <dringw@gmail.com>
Date:   Mon Aug 3 15:58:39 2015 -0400

    ENH: Fixed DF.apply for functions returning a dict (closes #8735)

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index d3d7fe163..e8b4a6d28 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -218,6 +218,8 @@ Other enhancements
 
 - Support pickling of ``Period`` objects (:issue:`10439`)
 
+- ``DataFrame.apply`` will return a Series of dicts if the passed function returns a dict and ``reduce=True`` (:issue:`8735`).
+
 .. _whatsnew_0170.api:
 
 .. _whatsnew_0170.api_breaking:
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 3e908bf9d..4c83ee949 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3921,13 +3921,15 @@ class DataFrame(NDFrame):
         # e.g. if we want to apply to a SparseFrame, then can't directly reduce
         if reduce:
 
-            try:
+            values = self.values
 
-                # the is the fast-path
-                values = self.values
-                dummy = Series(NA, index=self._get_axis(axis),
-                               dtype=values.dtype)
+            # Create a dummy Series from an empty array
+            index = self._get_axis(axis)
+            empty_arr = np.empty(len(index), dtype=values.dtype)
+            dummy = Series(empty_arr, index=self._get_axis(axis),
+                           dtype=values.dtype)
 
+            try:
                 labels = self._get_agg_axis(axis)
                 result = lib.reduce(values, func, axis=axis, dummy=dummy,
                                     labels=labels)
diff --git a/pandas/src/reduce.pyx b/pandas/src/reduce.pyx
index 09f8e0ab4..eb736e456 100644
--- a/pandas/src/reduce.pyx
+++ b/pandas/src/reduce.pyx
@@ -133,7 +133,7 @@ cdef class Reducer:
                 else:
                     res = self.f(chunk)
 
-                if hasattr(res,'values'):
+                if hasattr(res,'values') and isinstance(res.values, np.ndarray):
                     res = res.values
                 if i == 0:
                     result = _get_result_array(res,
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 16143fa61..6d65ab470 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -11255,6 +11255,25 @@ class TestDataFrame(tm.TestCase, CheckIndexing,
         res = s.apply(lambda x: Series({'min': min(x), 'max': max(x)}), 1)
         tm.assertIsInstance(res.index, MultiIndex)
 
+    def test_apply_dict(self):
+
+        # GH 8735
+        A = DataFrame([['foo', 'bar'], ['spam', 'eggs']])
+        A_dicts = pd.Series([dict([(0, 'foo'), (1, 'spam')]),
+                             dict([(0, 'bar'), (1, 'eggs')])])
+        B = DataFrame([[0, 1], [2, 3]])
+        B_dicts = pd.Series([dict([(0, 0), (1, 2)]), dict([(0, 1), (1, 3)])])
+        fn = lambda x: x.to_dict()
+
+        for df, dicts in [(A, A_dicts), (B, B_dicts)]:
+            reduce_true = df.apply(fn, reduce=True)
+            reduce_false = df.apply(fn, reduce=False)
+            reduce_none = df.apply(fn, reduce=None)
+
+            assert_series_equal(reduce_true, dicts)
+            assert_frame_equal(reduce_false, df)
+            assert_series_equal(reduce_none, dicts)
+
     def test_applymap(self):
         applied = self.frame.applymap(lambda x: x * 2)
         assert_frame_equal(applied, self.frame * 2)
