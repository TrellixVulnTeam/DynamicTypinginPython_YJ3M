commit 25de0281e599d5452ec9b43d5fb0baa56e6cbef1
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Dec 28 08:47:59 2012 -0500

    BUG: fix groupby regression introduced in 0.10 breaking book example. close #2605

diff --git a/pandas/src/reduce.pyx b/pandas/src/reduce.pyx
index 43495914e..d173ed8d8 100644
--- a/pandas/src/reduce.pyx
+++ b/pandas/src/reduce.pyx
@@ -418,7 +418,7 @@ def apply_frame_axis0(object frame, object f, object names,
             item_cache.clear() # ugh
             gin.clear_mapping()
 
-            setattr(slider.dummy, 'name', names[i])
+            object.__setattr__(slider.dummy, 'name', names[i])
             piece = f(slider.dummy)
 
             # I'm paying the price for index-sharing, ugh
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index fa1f9934b..eec7a39fb 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1284,6 +1284,15 @@ class TestGroupBy(unittest.TestCase):
         expected = df.take([0, 1, 3, 4, 6, 7])
         assert_frame_equal(result, expected)
 
+    def test_apply_no_name_column_conflict(self):
+        df = DataFrame({'name': [1, 1, 1, 1, 1, 1, 2, 2, 2, 2],
+                        'name2': [0, 0, 0, 1, 1, 1, 0, 0, 1, 1],
+                        'value': range(10)[::-1]})
+
+        # it works! #2605
+        grouped = df.groupby(['name', 'name2'])
+        grouped.apply(lambda x: x.sort('value'))
+
     def test_groupby_series_indexed_differently(self):
         s1 = Series([5.0,-9.0,4.0,100.,-5.,55.,6.7],
                     index=Index(['a','b','c','d','e','f','g']))
