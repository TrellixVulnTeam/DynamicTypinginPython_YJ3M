commit e1d54074ce8448bfcc69dc08d8a800ef9ef918ff
Author: Jeff Reback <jeff@reback.net>
Date:   Mon Feb 20 21:39:10 2017 -0500

    CI: add circle ci support
    
    this adds support for using CircleCI; configured to put 4 of our
    builds (3.4, 3.4-slow, 2.7 compat, and 3.5 ascii), they are still on
    Travis ATM. They are built/tested simultaneously on CircleCI (as we
    get 4 containers for open-source).
    
    Author: Jeff Reback <jeff@reback.net>
    
    Closes #15464 from jreback/circle and squashes the following commits:
    
    3756674 [Jeff Reback] CI: add circle ci support

diff --git a/.travis.yml b/.travis.yml
index 6245213ce..bb96ab210 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -315,7 +315,7 @@ install:
 
 before_script:
   - source activate pandas && pip install codecov
-  - ci/install_db.sh
+  - ci/install_db_travis.sh
 
 script:
   - echo "script start"
diff --git a/ci/install_circle.sh b/ci/install_circle.sh
new file mode 100755
index 000000000..485586e9d
--- /dev/null
+++ b/ci/install_circle.sh
@@ -0,0 +1,88 @@
+#!/usr/bin/env bash
+
+home_dir=$(pwd)
+echo "[home_dir: $home_dir]"
+
+echo "[ls -ltr]"
+ls -ltr
+
+echo "[Using clean Miniconda install]"
+rm -rf "$MINICONDA_DIR"
+
+# install miniconda
+wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -q -O miniconda.sh || exit 1
+bash miniconda.sh -b -p "$MINICONDA_DIR" || exit 1
+
+export PATH="$MINICONDA_DIR/bin:$PATH"
+
+echo "[update conda]"
+conda config --set ssl_verify false || exit 1
+conda config --set always_yes true --set changeps1 false || exit 1
+conda update -q conda
+
+# add the pandas channel to take priority
+# to add extra packages
+echo "[add channels]"
+conda config --add channels pandas || exit 1
+conda config --remove channels defaults || exit 1
+conda config --add channels defaults || exit 1
+
+# Useful for debugging any issues with conda
+conda info -a || exit 1
+
+# support env variables passed
+export ENVS_FILE=".envs"
+
+# make sure that the .envs file exists. it is ok if it is empty
+touch $ENVS_FILE
+
+# assume all command line arguments are environmental variables
+for var in "$@"
+do
+    echo "export $var" >> $ENVS_FILE
+done
+
+echo "[environmental variable file]"
+cat $ENVS_FILE
+source $ENVS_FILE
+
+export REQ_BUILD=ci/requirements-${PYTHON_VERSION}${JOB_TAG}.build
+export REQ_RUN=ci/requirements-${PYTHON_VERSION}${JOB_TAG}.run
+export REQ_PIP=ci/requirements-${PYTHON_VERSION}${JOB_TAG}.pip
+
+# edit the locale override if needed
+if [ -n "$LOCALE_OVERRIDE" ]; then
+    echo "[Adding locale to the first line of pandas/__init__.py]"
+    rm -f pandas/__init__.pyc
+    sedc="3iimport locale\nlocale.setlocale(locale.LC_ALL, '$LOCALE_OVERRIDE')\n"
+    sed -i "$sedc" pandas/__init__.py
+    echo "[head -4 pandas/__init__.py]"
+    head -4 pandas/__init__.py
+    echo
+fi
+
+# create new env
+echo "[create env]"
+time conda create -q -n pandas python=${PYTHON_VERSION} pytest || exit 1
+
+source activate pandas
+
+# build deps
+echo "[build installs: ${REQ_BUILD}]"
+time conda install -q --file=${REQ_BUILD} || exit 1
+
+# build but don't install
+echo "[build em]"
+time python setup.py build_ext --inplace || exit 1
+
+# we may have run installations
+echo "[conda installs: ${REQ_RUN}]"
+if [ -e ${REQ_RUN} ]; then
+    time conda install -q --file=${REQ_RUN} || exit 1
+fi
+
+# we may have additional pip installs
+echo "[pip installs: ${REQ_PIP}]"
+if [ -e ${REQ_PIP} ]; then
+   pip install -q -r $REQ_PIP
+fi
diff --git a/ci/install_db_circle.sh b/ci/install_db_circle.sh
new file mode 100755
index 000000000..a00f74f00
--- /dev/null
+++ b/ci/install_db_circle.sh
@@ -0,0 +1,8 @@
+#!/bin/bash
+
+echo "installing dbs"
+mysql -e 'create database pandas_nosetest;'
+psql -c 'create database pandas_nosetest;' -U postgres
+
+echo "done"
+exit 0
diff --git a/ci/install_db.sh b/ci/install_db_travis.sh
similarity index 100%
rename from ci/install_db.sh
rename to ci/install_db_travis.sh
diff --git a/ci/run_circle.sh b/ci/run_circle.sh
new file mode 100755
index 000000000..0e46d28ab
--- /dev/null
+++ b/ci/run_circle.sh
@@ -0,0 +1,9 @@
+#!/usr/bin/env bash
+
+echo "[running tests]"
+export PATH="$MINICONDA_DIR/bin:$PATH"
+
+source activate pandas
+
+echo "pytest --junitxml=$CIRCLE_TEST_REPORTS/reports/junit.xml $@ pandas"
+pytest --junitxml=$CIRCLE_TEST_REPORTS/reports/junit.xml $@ pandas
diff --git a/ci/show_circle.sh b/ci/show_circle.sh
new file mode 100755
index 000000000..bfaa65c1d
--- /dev/null
+++ b/ci/show_circle.sh
@@ -0,0 +1,8 @@
+#!/usr/bin/env bash
+
+echo "[installed versions]"
+
+export PATH="$MINICONDA_DIR/bin:$PATH"
+source activate pandas
+
+python -c "import pandas; pandas.show_versions();"
diff --git a/circle.yml b/circle.yml
new file mode 100644
index 000000000..97136d368
--- /dev/null
+++ b/circle.yml
@@ -0,0 +1,35 @@
+machine:
+  environment:
+    # these are globally set
+    MINICONDA_DIR: /home/ubuntu/miniconda3
+
+database:
+  override:
+    - ./ci/install_db_circle.sh
+
+checkout:
+  post:
+    # since circleci does a shallow fetch
+    # we need to populate our tags
+    - git fetch --depth=1000
+    - git fetch --tags
+
+dependencies:
+  override:
+    - >
+      case $CIRCLE_NODE_INDEX in
+       0)
+         sudo apt-get install language-pack-it && ./ci/install_circle.sh PYTHON_VERSION=2.7 JOB_TAG="_COMPAT" LOCALE_OVERRIDE="it_IT.UTF-8" ;;
+       1)
+         sudo apt-get install language-pack-zh-hans && ./ci/install_circle.sh PYTHON_VERSION=3.4 JOB_TAG="_SLOW" LOCALE_OVERRIDE="zh_CN.UTF-8" ;;
+       2)
+         sudo apt-get install language-pack-zh-hans && ./ci/install_circle.sh PYTHON_VERSION=3.4 JOB_TAG="" LOCALE_OVERRIDE="zh_CN.UTF-8" ;;
+       3)
+         ./ci/install_circle.sh PYTHON_VERSION=3.5 JOB_TAG="_ASCII" LOCALE_OVERRIDE="C" ;;
+      esac
+    - ./ci/show_circle.sh
+
+test:
+  override:
+      - case $CIRCLE_NODE_INDEX in 0) ./ci/run_circle.sh --skip-slow --skip-network ;; 1) ./ci/run_circle.sh --only-slow --skip-network ;; 2) ./ci/run_circle.sh --skip-slow --skip-network ;; 3) ./ci/run_circle.sh --skip-slow --skip-network ;; esac:
+          parallel: true
