commit f8ca3b731ca47b2eaccb9f0044f7b60c0c592560
Author: ksanghai <kaushal.sanghai@gmail.com>
Date:   Mon Apr 13 13:32:04 2015 -0400

    added the fix for index name lost #9862 and also added the corresponding test in
    test_index

diff --git a/doc/source/whatsnew/v0.16.1.txt b/doc/source/whatsnew/v0.16.1.txt
index f2dfa472a..6c6adec68 100644
--- a/doc/source/whatsnew/v0.16.1.txt
+++ b/doc/source/whatsnew/v0.16.1.txt
@@ -95,6 +95,7 @@ Bug Fixes
 - Fixed bug (:issue:`9542`) where labels did not appear properly in legend of ``DataFrame.plot()``. Passing ``label=`` args also now works, and series indices are no longer mutated.
 - Bug in json serialization when frame has length zero.(:issue:`9805`)
 - Bug in `read_csv` where missing trailing delimiters would cause segfault. (:issue:`5664`)
+- Bug in retaining index name on appending (:issue:`9862`)
 
 
 - Bug in ``scatter_matrix`` draws unexpected axis ticklabels (:issue:`5662`)
diff --git a/pandas/core/index.py b/pandas/core/index.py
index cd861cf26..3d11979cc 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -976,7 +976,9 @@ class Index(IndexOpsMixin, PandasObject):
             to_concat.append(other)
 
         for obj in to_concat:
-            if isinstance(obj, Index) and obj.name != name:
+            if (isinstance(obj, Index) and
+                obj.name != name and
+                obj.name is not None):
                 name = None
                 break
 
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index bb75b1275..e378e2ed4 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -4075,6 +4075,19 @@ class TestMultiIndex(Base, tm.TestCase):
         exp = dict((key, [key]) for key in self.index)
         tm.assert_dict_equal(groups, exp)
 
+    def test_index_name_retained(self):
+        # GH9857
+        result = pd.DataFrame({'x': [1, 2, 6],
+                               'y': [2, 2, 8],
+                               'z': [-5, 0, 5]})
+        result = result.set_index('z')
+        result.loc[10] = [9, 10]
+        df_expected = pd.DataFrame({'x': [1, 2, 6, 9],
+                                    'y': [2, 2, 8, 10],
+                                    'z': [-5, 0, 5, 10]})
+        df_expected = df_expected.set_index('z')
+        tm.assert_frame_equal(result, df_expected)
+
 
 def test_get_combined_index():
     from pandas.core.index import _get_combined_index
