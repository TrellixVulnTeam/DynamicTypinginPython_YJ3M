commit e18da0efe3401b51b51cbce6fb6df365ca9f15cd
Author: jreback <jeff@reback.net>
Date:   Fri Dec 27 12:54:44 2013 -0500

    TST: closes (GH5778), failing tests on non-little endian for stata (sparc)

diff --git a/pandas/io/tests/test_stata.py b/pandas/io/tests/test_stata.py
index f75cf7ebb..5a842adb5 100644
--- a/pandas/io/tests/test_stata.py
+++ b/pandas/io/tests/test_stata.py
@@ -14,6 +14,10 @@ import pandas.util.testing as tm
 from pandas.util.misc import is_little_endian
 from pandas import compat
 
+def skip_if_not_little_endian():
+    if not is_little_endian():
+        raise nose.SkipTest("known failure of test on non-little endian")
+
 class TestStata(tm.TestCase):
 
     def setUp(self):
@@ -145,9 +149,7 @@ class TestStata(tm.TestCase):
         tm.assert_frame_equal(parsed_13, expected)
 
     def test_read_write_dta5(self):
-        if not is_little_endian():
-            raise nose.SkipTest("known failure of test_write_dta5 on "
-                                "non-little endian")
+        skip_if_not_little_endian()
 
         original = DataFrame([(np.nan, np.nan, np.nan, np.nan, np.nan)],
                              columns=['float_miss', 'double_miss', 'byte_miss',
@@ -161,9 +163,7 @@ class TestStata(tm.TestCase):
                                   original)
 
     def test_write_dta6(self):
-        if not is_little_endian():
-            raise nose.SkipTest("known failure of test_write_dta6 on "
-                                "non-little endian")
+        skip_if_not_little_endian()
 
         original = self.read_csv(self.csv3)
         original.index.name = 'index'
@@ -193,9 +193,7 @@ class TestStata(tm.TestCase):
         tm.assert_frame_equal(parsed, expected)
 
     def test_read_write_dta10(self):
-        if not is_little_endian():
-            raise nose.SkipTest("known failure of test_write_dta10 on "
-                                "non-little endian")
+        skip_if_not_little_endian()
 
         original = DataFrame(data=[["string", "object", 1, 1.1,
                                     np.datetime64('2003-12-25')]],
@@ -232,6 +230,8 @@ class TestStata(tm.TestCase):
             self.assert_(isinstance(result, unicode))
 
     def test_read_write_dta11(self):
+        skip_if_not_little_endian()
+
         original = DataFrame([(1, 2, 3, 4)],
                              columns=['good', compat.u('b\u00E4d'), '8number', 'astringwithmorethan32characters______'])
         formatted = DataFrame([(1, 2, 3, 4)],
@@ -248,6 +248,8 @@ class TestStata(tm.TestCase):
             tm.assert_frame_equal(written_and_read_again.set_index('index'), formatted)
 
     def test_read_write_dta12(self):
+        skip_if_not_little_endian()
+
         original = DataFrame([(1, 2, 3, 4)],
                              columns=['astringwithmorethan32characters_1', 'astringwithmorethan32characters_2', '+', '-'])
         formatted = DataFrame([(1, 2, 3, 4)],
