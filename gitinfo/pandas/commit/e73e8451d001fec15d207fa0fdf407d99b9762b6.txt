commit e73e8451d001fec15d207fa0fdf407d99b9762b6
Author: Matthew Roeschke <emailformattr@gmail.com>
Date:   Sat Dec 24 12:53:51 2016 -0800

    BUG: applymap on empty DataFrame returns Series (#8222) (#14977)
    
    fix whatsnew file
    
    Adjust whatsnew to API change and add test with data

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 4799d2711..40bd8bc41 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -237,6 +237,7 @@ Other API Changes
 
 - ``CParserError`` has been renamed to ``ParserError`` in ``pd.read_csv`` and will be removed in the future (:issue:`12665`)
 - ``SparseArray.cumsum()`` and ``SparseSeries.cumsum()`` will now always return ``SparseArray`` and ``SparseSeries`` respectively (:issue:`12855`)
+- ``DataFrame.applymap()`` with an empty ``DataFrame`` will return a copy of the empty ``DataFrame`` instead of a ``Series`` (:issue:`8222`)
 
 .. _whatsnew_0200.deprecations:
 
@@ -286,7 +287,6 @@ Bug Fixes
 - Bug in ``DataFrame.sort_values()`` when sorting by multiple columns where one column is of type ``int64`` and contains ``NaT`` (:issue:`14922`)
 
 
-
 - Bug in ``pd.read_msgpack()`` in which ``Series`` categoricals were being improperly processed (:issue:`14901`)
 - Bug in ``Series.ffill()`` with mixed dtypes containing tz-aware datetimes. (:issue:`14956`)
 
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 7305df0f5..ba1e08ecc 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -4288,6 +4288,8 @@ class DataFrame(NDFrame):
 
         # if we have a dtype == 'M8[ns]', provide boxed values
         def infer(x):
+            if x.empty:
+                return lib.map_infer(x, func)
             return lib.map_infer(x.asobject, func)
 
         return self.apply(infer)
diff --git a/pandas/tests/frame/test_apply.py b/pandas/tests/frame/test_apply.py
index 5cadb4dba..9e68b7e76 100644
--- a/pandas/tests/frame/test_apply.py
+++ b/pandas/tests/frame/test_apply.py
@@ -405,6 +405,16 @@ class TestDataFrameApply(tm.TestCase, TestData):
         for f in ['datetime', 'timedelta']:
             self.assertEqual(result.loc[0, f], str(df.loc[0, f]))
 
+        # GH 8222
+        empty_frames = [pd.DataFrame(),
+                        pd.DataFrame(columns=list('ABC')),
+                        pd.DataFrame(index=list('ABC')),
+                        pd.DataFrame({'A': [], 'B': [], 'C': []})]
+        for frame in empty_frames:
+            for func in [round, lambda x: x]:
+                result = frame.applymap(func)
+                tm.assert_frame_equal(result, frame)
+
     def test_applymap_box(self):
         # ufunc will not be boxed. Same test cases as the test_map_box
         df = pd.DataFrame({'a': [pd.Timestamp('2011-01-01'),
