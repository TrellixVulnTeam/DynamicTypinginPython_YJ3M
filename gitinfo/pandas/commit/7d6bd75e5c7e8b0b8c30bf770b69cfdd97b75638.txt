commit 7d6bd75e5c7e8b0b8c30bf770b69cfdd97b75638
Author: alimcmaster1 <alimcmaster1@gmail.com>
Date:   Wed Nov 7 01:17:36 2018 +0000

    CLN: Isort io and compat dirs (#23534)

diff --git a/pandas/compat/numpy/function.py b/pandas/compat/numpy/function.py
index a4232ca2e..30fdeca35 100644
--- a/pandas/compat/numpy/function.py
+++ b/pandas/compat/numpy/function.py
@@ -19,11 +19,13 @@ easier to adjust to future upstream changes in the analogous numpy signatures.
 """
 
 from numpy import ndarray
-from pandas.util._validators import (validate_args, validate_kwargs,
-                                     validate_args_and_kwargs)
-from pandas.errors import UnsupportedFunctionCall
-from pandas.core.dtypes.common import is_integer, is_bool
+
 from pandas.compat import OrderedDict
+from pandas.errors import UnsupportedFunctionCall
+from pandas.util._validators import (
+    validate_args, validate_args_and_kwargs, validate_kwargs)
+
+from pandas.core.dtypes.common import is_bool, is_integer
 
 
 class CompatValidator(object):
diff --git a/pandas/compat/pickle_compat.py b/pandas/compat/pickle_compat.py
index a8fd54e39..5ac8753c3 100644
--- a/pandas/compat/pickle_compat.py
+++ b/pandas/compat/pickle_compat.py
@@ -2,12 +2,14 @@
 Support pre-0.12 series pickle compatibility.
 """
 
-import sys
-import pandas  # noqa
 import copy
 import pickle as pkl
-from pandas import compat, Index
-from pandas.compat import u, string_types  # noqa
+import sys
+
+from pandas.compat import string_types, u  # noqa
+
+import pandas  # noqa
+from pandas import Index, compat
 
 
 def load_reduce(self):
diff --git a/pandas/io/clipboard/clipboards.py b/pandas/io/clipboard/clipboards.py
index 0793ca687..d6d0ba0a5 100644
--- a/pandas/io/clipboard/clipboards.py
+++ b/pandas/io/clipboard/clipboards.py
@@ -1,7 +1,9 @@
 import subprocess
-from .exceptions import PyperclipException
+
 from pandas.compat import PY2, text_type
 
+from .exceptions import PyperclipException
+
 EXCEPT_MSG = """
     Pyperclip could not find a copy/paste mechanism for your system.
     For more information, please visit https://pyperclip.readthedocs.org """
diff --git a/pandas/io/clipboard/windows.py b/pandas/io/clipboard/windows.py
index 5fc23f710..3d979a61b 100644
--- a/pandas/io/clipboard/windows.py
+++ b/pandas/io/clipboard/windows.py
@@ -1,10 +1,11 @@
 """
 This module implements clipboard handling on Windows using ctypes.
 """
-import time
 import contextlib
 import ctypes
-from ctypes import c_size_t, sizeof, c_wchar_p, get_errno, c_wchar
+from ctypes import c_size_t, c_wchar, c_wchar_p, get_errno, sizeof
+import time
+
 from .exceptions import PyperclipWindowsException
 
 
diff --git a/pandas/io/formats/console.py b/pandas/io/formats/console.py
index e347f6bce..64168dd7d 100644
--- a/pandas/io/formats/console.py
+++ b/pandas/io/formats/console.py
@@ -2,8 +2,9 @@
 Internal module for console introspection
 """
 
-import sys
 import locale
+import sys
+
 from pandas.io.formats.terminal import get_terminal_size
 
 # -----------------------------------------------------------------------------
diff --git a/pandas/io/formats/csvs.py b/pandas/io/formats/csvs.py
index 115e885a2..46c843af0 100644
--- a/pandas/io/formats/csvs.py
+++ b/pandas/io/formats/csvs.py
@@ -5,29 +5,24 @@ Module for formatting output data into CSV files.
 
 from __future__ import print_function
 
-import warnings
-
 import csv as csvlib
+import os
+import warnings
 from zipfile import ZipFile
 
 import numpy as np
-import os
 
 from pandas._libs import writers as libwriters
-
-from pandas import compat
 from pandas.compat import StringIO, range, zip
 
-from pandas.core.dtypes.missing import notna
 from pandas.core.dtypes.generic import (
-    ABCMultiIndex, ABCPeriodIndex, ABCDatetimeIndex, ABCIndexClass)
+    ABCDatetimeIndex, ABCIndexClass, ABCMultiIndex, ABCPeriodIndex)
+from pandas.core.dtypes.missing import notna
+
+from pandas import compat
 
 from pandas.io.common import (
-    _get_handle,
-    _infer_compression,
-    get_filepath_or_buffer,
-    UnicodeWriter,
-)
+    UnicodeWriter, _get_handle, _infer_compression, get_filepath_or_buffer)
 
 
 class CSVFormatter(object):
diff --git a/pandas/io/formats/excel.py b/pandas/io/formats/excel.py
index d6fcfb220..c2ea3715b 100644
--- a/pandas/io/formats/excel.py
+++ b/pandas/io/formats/excel.py
@@ -1,23 +1,24 @@
 """Utilities for conversion to writer-agnostic Excel representation
 """
 
+import itertools
 import re
 import warnings
-import itertools
 
 import numpy as np
 
 from pandas.compat import reduce
-import pandas.core.common as com
 
-from pandas.core.dtypes.common import is_float, is_scalar
 from pandas.core.dtypes import missing
+from pandas.core.dtypes.common import is_float, is_scalar
 from pandas.core.dtypes.generic import ABCMultiIndex, ABCPeriodIndex
+
 from pandas import Index
+import pandas.core.common as com
 
 from pandas.io.formats.css import CSSResolver, CSSWarning
-from pandas.io.formats.printing import pprint_thing
 from pandas.io.formats.format import get_level_lengths
+from pandas.io.formats.printing import pprint_thing
 
 
 class ExcelCell(object):
diff --git a/pandas/io/formats/format.py b/pandas/io/formats/format.py
index db86409ad..6f64605bc 100644
--- a/pandas/io/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -5,45 +5,37 @@ and latex files. This module also applies to display formatting.
 """
 
 from __future__ import print_function
-# pylint: disable=W0141
 
 from functools import partial
 
 import numpy as np
 
 from pandas._libs import lib
-from pandas._libs.tslibs import NaT, iNaT, Timestamp, Timedelta
 from pandas._libs.tslib import format_array_from_datetime
+from pandas._libs.tslibs import NaT, Timedelta, Timestamp, iNaT
+from pandas.compat import StringIO, lzip, map, u, zip
 
-from pandas import compat
-from pandas.compat import StringIO, lzip, map, zip, u
-
-from pandas.core.dtypes.missing import isna, notna
 from pandas.core.dtypes.common import (
-    is_categorical_dtype,
-    is_float_dtype,
-    is_period_arraylike,
-    is_integer_dtype,
-    is_interval_dtype,
-    is_datetimetz,
-    is_integer,
-    is_float,
-    is_scalar,
-    is_numeric_dtype,
-    is_datetime64_dtype,
-    is_timedelta64_dtype,
-    is_list_like)
-from pandas.core.dtypes.generic import ABCSparseArray, ABCMultiIndex
+    is_categorical_dtype, is_datetime64_dtype, is_datetimetz, is_float,
+    is_float_dtype, is_integer, is_integer_dtype, is_interval_dtype,
+    is_list_like, is_numeric_dtype, is_period_arraylike, is_scalar,
+    is_timedelta64_dtype)
+from pandas.core.dtypes.generic import ABCMultiIndex, ABCSparseArray
+from pandas.core.dtypes.missing import isna, notna
+
+from pandas import compat
 from pandas.core.base import PandasObject
 import pandas.core.common as com
-from pandas.core.index import Index, ensure_index
 from pandas.core.config import get_option, set_option
+from pandas.core.index import Index, ensure_index
 from pandas.core.indexes.datetimes import DatetimeIndex
 from pandas.core.indexes.period import PeriodIndex
 
-from pandas.io.formats.terminal import get_terminal_size
 from pandas.io.common import _expand_user, _stringify_path
 from pandas.io.formats.printing import adjoin, justify, pprint_thing
+from pandas.io.formats.terminal import get_terminal_size
+
+# pylint: disable=W0141
 
 
 common_docstring = """
diff --git a/pandas/io/formats/html.py b/pandas/io/formats/html.py
index a6b03c9c6..2a2a3e577 100644
--- a/pandas/io/formats/html.py
+++ b/pandas/io/formats/html.py
@@ -4,22 +4,21 @@ Module for formatting output data in HTML.
 """
 
 from __future__ import print_function
-from distutils.version import LooseVersion
 
+from distutils.version import LooseVersion
 from textwrap import dedent
 
-from pandas import compat
-from pandas.compat import (lzip, range, map, zip, u,
-                           OrderedDict, unichr)
+from pandas.compat import OrderedDict, lzip, map, range, u, unichr, zip
 
-import pandas.core.common as com
 from pandas.core.dtypes.generic import ABCMultiIndex
+
+from pandas import compat
+import pandas.core.common as com
 from pandas.core.config import get_option
 
+from pandas.io.formats.format import (
+    TableFormatter, buffer_put_lines, get_level_lengths)
 from pandas.io.formats.printing import pprint_thing
-from pandas.io.formats.format import (get_level_lengths,
-                                      buffer_put_lines)
-from pandas.io.formats.format import TableFormatter
 
 
 class HTMLFormatter(TableFormatter):
diff --git a/pandas/io/formats/latex.py b/pandas/io/formats/latex.py
index fbbad763d..90be33649 100644
--- a/pandas/io/formats/latex.py
+++ b/pandas/io/formats/latex.py
@@ -6,11 +6,12 @@ from __future__ import print_function
 
 import numpy as np
 
-from pandas import compat
-from pandas.compat import range, map, zip, u
+from pandas.compat import map, range, u, zip
 
 from pandas.core.dtypes.generic import ABCMultiIndex
 
+from pandas import compat
+
 from pandas.io.formats.format import TableFormatter
 
 
diff --git a/pandas/io/formats/printing.py b/pandas/io/formats/printing.py
index e22d7bce4..f814bf965 100644
--- a/pandas/io/formats/printing.py
+++ b/pandas/io/formats/printing.py
@@ -3,9 +3,12 @@ printing tools
 """
 
 import sys
+
+from pandas.compat import u
+
 from pandas.core.dtypes.inference import is_sequence
+
 from pandas import compat
-from pandas.compat import u
 from pandas.core.config import get_option
 
 
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index 3b3238586..8291e0ac9 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -2,12 +2,27 @@
 Module for applying conditional formatting to
 DataFrames and Series.
 """
+from collections import MutableMapping, defaultdict
+from contextlib import contextmanager
+import copy
 from functools import partial
 from itertools import product
-from contextlib import contextmanager
 from uuid import uuid1
-import copy
-from collections import defaultdict, MutableMapping
+
+import numpy as np
+
+from pandas.compat import range
+from pandas.util._decorators import Appender
+
+from pandas.core.dtypes.common import is_float, is_string_like
+from pandas.core.dtypes.generic import ABCSeries
+
+import pandas as pd
+from pandas.api.types import is_list_like
+import pandas.core.common as com
+from pandas.core.config import get_option
+from pandas.core.generic import _shared_docs
+from pandas.core.indexing import _maybe_numeric_slice, _non_reducing_slice
 
 try:
     from jinja2 import (
@@ -18,18 +33,6 @@ except ImportError:
                       "Please install with `conda install Jinja2`\n"
                       "or `pip install Jinja2`")
 
-from pandas.core.dtypes.common import is_float, is_string_like
-
-import numpy as np
-import pandas as pd
-from pandas.api.types import is_list_like
-from pandas.compat import range
-from pandas.core.config import get_option
-from pandas.core.generic import _shared_docs
-import pandas.core.common as com
-from pandas.core.indexing import _maybe_numeric_slice, _non_reducing_slice
-from pandas.util._decorators import Appender
-from pandas.core.dtypes.generic import ABCSeries
 
 try:
     import matplotlib.pyplot as plt
diff --git a/pandas/io/formats/terminal.py b/pandas/io/formats/terminal.py
index ac73363b9..bb34259d7 100644
--- a/pandas/io/formats/terminal.py
+++ b/pandas/io/formats/terminal.py
@@ -15,8 +15,8 @@ from __future__ import print_function
 
 import os
 import shutil
-from pandas.compat import PY3
 
+from pandas.compat import PY3
 
 __all__ = ['get_terminal_size', 'is_terminal']
 
diff --git a/pandas/io/json/json.py b/pandas/io/json/json.py
index c5f8872f9..af7b390de 100644
--- a/pandas/io/json/json.py
+++ b/pandas/io/json/json.py
@@ -1,23 +1,27 @@
 # pylint: disable-msg=E1101,W0613,W0603
 from itertools import islice
 import os
+
 import numpy as np
 
 import pandas._libs.json as json
 from pandas._libs.tslibs import iNaT
-from pandas.compat import StringIO, long, u, to_str
-from pandas import compat, isna
-from pandas import Series, DataFrame, to_datetime, MultiIndex
-from pandas.io.common import (get_filepath_or_buffer, _get_handle,
-                              _infer_compression, _stringify_path,
-                              BaseIterator)
-from pandas.io.parsers import _validate_integer
+from pandas.compat import StringIO, long, to_str, u
+
+from pandas.core.dtypes.common import is_period_dtype
+
+from pandas import DataFrame, MultiIndex, Series, compat, isna, to_datetime
 import pandas.core.common as com
 from pandas.core.reshape.concat import concat
+
+from pandas.io.common import (
+    BaseIterator, _get_handle, _infer_compression, _stringify_path,
+    get_filepath_or_buffer)
 from pandas.io.formats.printing import pprint_thing
+from pandas.io.parsers import _validate_integer
+
 from .normalize import _convert_to_line_delimits
 from .table_schema import build_table_schema, parse_table_schema
-from pandas.core.dtypes.common import is_period_dtype
 
 loads = json.loads
 dumps = json.dumps
diff --git a/pandas/io/json/normalize.py b/pandas/io/json/normalize.py
index 5c7b964cf..ce07a7950 100644
--- a/pandas/io/json/normalize.py
+++ b/pandas/io/json/normalize.py
@@ -1,12 +1,14 @@
 # ---------------------------------------------------------------------
 # JSON normalization routines
 
-import copy
 from collections import defaultdict
+import copy
+
 import numpy as np
 
 from pandas._libs.writers import convert_json_to_lines
-from pandas import compat, DataFrame
+
+from pandas import DataFrame, compat
 
 
 def _convert_to_line_delimits(s):
diff --git a/pandas/io/json/table_schema.py b/pandas/io/json/table_schema.py
index 2dc176648..3b4ebb638 100644
--- a/pandas/io/json/table_schema.py
+++ b/pandas/io/json/table_schema.py
@@ -6,14 +6,15 @@ http://specs.frictionlessdata.io/json-table-schema/
 import warnings
 
 import pandas._libs.json as json
+
+from pandas.core.dtypes.common import (
+    is_bool_dtype, is_categorical_dtype, is_datetime64_dtype,
+    is_datetime64tz_dtype, is_integer_dtype, is_numeric_dtype, is_period_dtype,
+    is_string_dtype, is_timedelta64_dtype)
+
 from pandas import DataFrame
 from pandas.api.types import CategoricalDtype
 import pandas.core.common as com
-from pandas.core.dtypes.common import (
-    is_integer_dtype, is_timedelta64_dtype, is_numeric_dtype,
-    is_bool_dtype, is_datetime64_dtype, is_datetime64tz_dtype,
-    is_categorical_dtype, is_period_dtype, is_string_dtype
-)
 
 loads = json.loads
 
diff --git a/pandas/io/sas/sas7bdat.py b/pandas/io/sas/sas7bdat.py
index 3582f538c..d634b5ec4 100644
--- a/pandas/io/sas/sas7bdat.py
+++ b/pandas/io/sas/sas7bdat.py
@@ -18,14 +18,14 @@ import struct
 
 import numpy as np
 
-from pandas import compat
 from pandas.errors import EmptyDataError
 
-from pandas.io.common import get_filepath_or_buffer, BaseIterator
-import pandas.io.sas.sas_constants as const
-from pandas.io.sas._sas import Parser
-
 import pandas as pd
+from pandas import compat
+
+from pandas.io.common import BaseIterator, get_filepath_or_buffer
+from pandas.io.sas._sas import Parser
+import pandas.io.sas.sas_constants as const
 
 
 class _subheader_pointer(object):
diff --git a/setup.cfg b/setup.cfg
index 4068935d9..17b88d084 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -90,23 +90,6 @@ force_grid_wrap=0
 combine_as_imports=True
 force_sort_within_sections=True
 skip=
-    pandas/io/sas/sas7bdat.py,
-    pandas/io/formats/console.py,
-    pandas/io/formats/excel.py,
-    pandas/io/formats/style.py,
-    pandas/io/formats/printing.py,
-    pandas/io/formats/latex.py,
-    pandas/io/formats/csvs.py,
-    pandas/io/formats/html.py,
-    pandas/io/formats/terminal.py,
-    pandas/io/formats/format.py,
-    pandas/io/json/normalize.py,
-    pandas/io/json/json.py,
-    pandas/io/json/table_schema.py,
-    pandas/io/clipboard/windows.py,
-    pandas/io/clipboard/clipboards.py,
-    pandas/compat/pickle_compat.py,
-    pandas/compat/numpy/function.py,
     pandas/core/ops.py,
     pandas/core/categorical.py,
     pandas/core/api.py,
