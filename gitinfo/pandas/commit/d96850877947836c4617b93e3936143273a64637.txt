commit d96850877947836c4617b93e3936143273a64637
Author: y-p <yoval@gmx.com>
Date:   Sun Oct 7 23:23:19 2012 +0200

    TST: repr() should return type str() on py2 and py3

diff --git a/pandas/tests/test_format.py b/pandas/tests/test_format.py
index 468f36790..4ea62d695 100644
--- a/pandas/tests/test_format.py
+++ b/pandas/tests/test_format.py
@@ -82,6 +82,21 @@ class TestDataFrameFormatting(unittest.TestCase):
         fmt.print_config.max_colwidth = max_len + 2
         self.assert_('...' not in repr(df))
 
+    def test_repr_should_return_str (self):
+        """
+        http://docs.python.org/py3k/reference/datamodel.html#object.__repr__
+        http://docs.python.org/reference/datamodel.html#object.__repr__
+        "...The return value must be a string object."
+
+        (str on py2.x, str (unicode) on py3)
+
+        """
+        data=[8,5,3,5]
+        index1=[u"\u03c3",u"\u03c4",u"\u03c5",u"\u03c6"]
+        cols=[u"\u03c8"]
+        df=DataFrame(data,columns=cols,index=index1)
+        self.assertTrue(type(df.__repr__() == str)) # both py2 / 3
+
     def test_to_string_repr_unicode(self):
         buf = StringIO()
 
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 3e7934c01..1f1b3285f 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1057,6 +1057,20 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         s.name = (u"\u05d0",) * 2
         repr(s)
 
+    def test_repr_should_return_str (self):
+        """
+        http://docs.python.org/py3k/reference/datamodel.html#object.__repr__
+        http://docs.python.org/reference/datamodel.html#object.__repr__
+        "...The return value must be a string object."
+
+        (str on py2.x, str (unicode) on py3)
+
+        """
+        data=[8,5,3,5]
+        index1=[u"\u03c3",u"\u03c4",u"\u03c5",u"\u03c6"]
+        df=Series(data,index=index1)
+        self.assertTrue(type(df.__repr__() == str)) # both py2 / 3
+
     def test_timeseries_repr_object_dtype(self):
         index = Index([datetime(2000, 1, 1) + timedelta(i)
                        for i in range(1000)], dtype=object)
