commit 866217640ca7b2feb90d846ceb1afb5ec50f49da
Author: Chang She <changshe@gmail.com>
Date:   Wed Nov 7 17:28:00 2012 -0500

    BUG: DataFrame constructor list of lists with duplicated columns

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index f39c8b0f0..5a000485d 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -3318,6 +3318,7 @@ class DataFrame(NDFrame):
 
         if this._is_mixed_type or other._is_mixed_type:
             # XXX no good for duplicate columns
+            # but cannot outer join in align if dups anyways?
             result = {}
             for col in this:
                 result[col] = _arith_op(this[col].values, other[col].values)
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 10a85c559..76550a0b5 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -1325,7 +1325,8 @@ def _stack_arrays(tuples, ref_items, dtype):
     names, arrays = zip(*tuples)
 
     # index may box values
-    items = ref_items[ref_items.isin(names)]
+    names = Index(names)
+    items = names[names.isin(ref_items)]
 
     first = arrays[0]
     shape = (len(arrays),) + _shape_compat(first)
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 5c5fd1902..d728511c2 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2319,6 +2319,13 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
                           [('a',[8]),('a',[5]), ('b', [6])],
                           columns=['b', 'a','a'])
 
+        #additional test for #2079
+        vals = [[1, -1, 2.], [2, -2, 3.]]
+        rs = DataFrame(vals, columns=['A', 'A', 'B'])
+        xp = DataFrame(vals)
+        xp.columns = ['A', 'A', 'B']
+        assert_frame_equal(rs, xp)
+
     def test_new_empty_index(self):
         df1 = DataFrame(randn(0, 3))
         df2 = DataFrame(randn(0, 3))
