commit c805c3b0f6d9dd20b2319e37e0002d413b1e34ca
Author: Pietro Battiston <me@pietrobattiston.it>
Date:   Wed Feb 10 21:53:56 2016 -0500

    ENH: Make HDFStore iterable
    
    closes #12221    HDFStore is not an iterator - but being iterable, it
    can return an iterator of itself (i.e. of ``.keys()``).
    
    Author: Pietro Battiston <me@pietrobattiston.it>
    
    Closes #12253 from toobaz/iterable_hdfstore and squashes the following commits:
    
    23bfb3a [Pietro Battiston] ENH: Make HDFStore iterable

diff --git a/doc/source/whatsnew/v0.18.0.txt b/doc/source/whatsnew/v0.18.0.txt
index 7c3beea88..c420b34db 100644
--- a/doc/source/whatsnew/v0.18.0.txt
+++ b/doc/source/whatsnew/v0.18.0.txt
@@ -395,6 +395,7 @@ Other enhancements
 - ``DataFrame.select_dtypes`` now allows the ``np.float16`` typecode (:issue:`11990`)
 - ``pivot_table()`` now accepts most iterables for the ``values`` parameter (:issue:`12017`)
 - Added Google ``BigQuery`` service account authentication support, which enables authentication on remote servers. (:issue:`11881`). For further details see :ref:`here <io.bigquery_authentication>`
+- ``HDFStore`` is now iterable: ``for k in store`` is equivalent to ``for k in store.keys()`` (:issue: `12221`).
 
 .. _whatsnew_0180.api_breaking:
 
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index cd8f7699a..c94b387f7 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -488,6 +488,9 @@ class HDFStore(StringMixin):
         """
         return [n._v_pathname for n in self.groups()]
 
+    def __iter__(self):
+        return iter(self.keys())
+
     def items(self):
         """
         iterate on key->group
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index b08d24747..192ed4e68 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -389,8 +389,15 @@ class TestHDFStore(Base, tm.TestCase):
             store['d'] = tm.makePanel()
             store['foo/bar'] = tm.makePanel()
             self.assertEqual(len(store), 5)
-            self.assertTrue(set(
-                store.keys()) == set(['/a', '/b', '/c', '/d', '/foo/bar']))
+            expected = set(['/a', '/b', '/c', '/d', '/foo/bar'])
+            self.assertTrue(set(store.keys()) == expected)
+            self.assertTrue(set(store) == expected)
+
+    def test_iter_empty(self):
+
+        with ensure_clean_path(self.path) as path:
+            # GH 12221
+            self.assertTrue(list(pd.HDFStore(path)) == [])
 
     def test_repr(self):
 
