commit c4817938d032b04425fb019b7e41d0eea0cf0df0
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jan 12 00:36:20 2012 -0500

    BUG: hack around Series mixed-type formatting issue, GH #616

diff --git a/pandas/core/series.py b/pandas/core/series.py
index 4091499ef..f2fa8e33c 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -522,19 +522,31 @@ copy : boolean, default False
             if float_format is None:
                 float_format = com._float_format_default
 
-        def _format(k, v):
+        def _format(k, v, extra=0):
             # GH #490
             if not isinstance(v, np.ndarray) and isnull(v):
                 v = na_rep
             if com.is_float(v):
                 v = float_format(v)
-            return '%s    %s' % (str(k).ljust(padSpace),
-                                 str(v).replace('\n', ' '))
-
-        it = [_format(idx, v) for idx, v in izip(string_index, vals)]
+            strv = ' ' * extra + str(v).replace('\n', ' ')
+            return '%s    %s' % (str(k).ljust(padSpace), strv)
+
+        # floating point handling
+        if self.dtype == 'O':
+            is_float = (self.map(com.is_float) & self.notnull()).values
+            leading_space = is_float.any()
+
+            res = []
+            for i, (k, v) in enumerate(izip(string_index, vals)):
+                if not is_float[i] and leading_space:
+                    res.append(_format(k, v, extra=1))
+                else:
+                    res.append(_format(k, v))
+        else:
+            res = [_format(idx, v) for idx, v in izip(string_index, vals)]
 
         if print_header and have_header:
-            it.insert(0, header)
+            res.insert(0, header)
 
         footer = ''
         if name:
@@ -546,9 +558,9 @@ copy : boolean, default False
             footer += 'Length: %d' % len(self)
 
         if footer:
-            it.append(footer)
+            res.append(footer)
 
-        return '\n'.join(it)
+        return '\n'.join(res)
 
     def __str__(self):
         return repr(self)
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index c70c6f38a..1f4bee412 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -608,6 +608,24 @@ class TestSeries(unittest.TestCase, CheckNameIntegration):
         last_line = result.split('\n')[-1].strip()
         self.assertEqual(last_line, "Name: foo, Length: %d" % len(cp))
 
+    def test_to_string_mixed(self):
+        s = Series(['foo', np.nan, -1.23, 4.56])
+        result = s.to_string()
+        expected = ('0     foo\n'
+                    '1     NaN\n'
+                    '2    -1.23\n'
+                    '3     4.56')
+        self.assertEqual(result, expected)
+
+        # but don't count NAs as floats
+        s = Series(['foo', np.nan, 'bar', 'baz'])
+        result = s.to_string()
+        expected = ('0    foo\n'
+                    '1    NaN\n'
+                    '2    bar\n'
+                    '3    baz')
+        self.assertEqual(result, expected)
+
     def test_iter(self):
         for i, val in enumerate(self.series):
             self.assertEqual(val, self.series[i])
