commit 843653cd863ca5752b8a0f96d4db88ee23da183c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Sep 25 23:31:42 2012 -0400

    BUG: fix build on python 2.x (hopefully) and remaining test failures

diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index b1e1011ea..aa189c9e8 100644
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -200,7 +200,7 @@ def _read(filepath_or_buffer, kwds):
 @Appender(_read_csv_doc)
 def read_csv(filepath_or_buffer,
              sep=',',
-             engine='python',
+             engine='c',
              dialect=None,
              header=0,
              index_col=None,
@@ -252,7 +252,7 @@ def read_csv(filepath_or_buffer,
 @Appender(_read_table_doc)
 def read_table(filepath_or_buffer,
                sep='\t',
-               engine='python',
+               engine='c',
                dialect=None,
                header=0,
                index_col=None,
@@ -504,14 +504,17 @@ class TextFileReader(object):
 
         # miscellanea
         self.kwds = kwds
-
         self.squeeze = squeeze    # return single-column DataFrame as Series
-
         self.as_recarray = as_recarray # C parser return structured array
 
         # file options
         self.f = f
         self.encoding = encoding
+
+        # can't handle it
+        if encoding is not None and engine == 'c':
+            engine = 'python'
+
         self.engine_kind = engine
 
         self.factorize = factorize
@@ -1379,7 +1382,10 @@ def _process_date_conversion(data_dict, converter, parse_spec,
                              index_col, index_names, columns,
                              keep_date_col=False):
     def _isindex(colspec):
-        return colspec in index_col or colspec in index_names
+        return ((isinstance(index_col, list) and
+                 colspec in index_col)
+                or (isinstance(index_names, list) and
+                    colspec in index_names))
 
     new_cols = []
     new_data = {}
diff --git a/setup.py b/setup.py
index 822b0fa7a..0e54ddb79 100755
--- a/setup.py
+++ b/setup.py
@@ -373,9 +373,11 @@ else:
     tseries_depends = []
     plib_depends = []
 
+common_include = [np.get_include(), 'pandas/src/klib']
+
 algos_ext = Extension('pandas._algos',
                       sources=[srcpath('generated', suffix=suffix)],
-                      include_dirs=[np.get_include()],
+                      include_dirs=common_include,
                       )
 
 lib_depends = tseries_depends + ['pandas/src/numpy_helper.h',
@@ -386,8 +388,7 @@ lib_ext = Extension('pandas.lib',
                     sources=[srcpath('tseries', suffix=suffix),
                              'pandas/src/datetime/np_datetime.c',
                              'pandas/src/datetime/np_datetime_strings.c'],
-                    include_dirs=[np.get_include(),
-                                  'pandas/src/klib'],
+                    include_dirs=common_include,
                     # pyrex_gdb=True,
                     # extra_compile_args=['-Wconversion']
                     )
@@ -408,8 +409,7 @@ parser_ext = Extension('pandas._parser',
                                 'pandas/src/parser/conversions.c',
                                 'pandas/src/parser/str_to.c',
                                 ],
-                       include_dirs=[np.get_include(),
-                                     'pandas/src/klib'])
+                       include_dirs=common_include)
 
 sparse_ext = Extension('pandas._sparse',
                        sources=[srcpath('sparse', suffix=suffix)],
@@ -417,8 +417,7 @@ sparse_ext = Extension('pandas._sparse',
 
 sandbox_ext = Extension('pandas._sandbox',
                         sources=[srcpath('sandbox', suffix=suffix)],
-                        include_dirs=[np.get_include(),
-                                      'pandas/src/klib'])
+                        include_dirs=common_include)
 
 cppsandbox_ext = Extension('pandas._cppsandbox',
                            language='c++',
