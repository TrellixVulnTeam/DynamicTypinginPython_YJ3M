commit 39c1500b5db0b2f40d3b4a96773ab963a94a02dd
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Mon Sep 5 18:13:21 2011 -0400

    ENH: swaplevel methods

diff --git a/doc/source/reshaping.rst b/doc/source/reshaping.rst
index ce80cb44b..896e40b02 100644
--- a/doc/source/reshaping.rst
+++ b/doc/source/reshaping.rst
@@ -15,6 +15,12 @@
 Pivoting and reshaping data
 ***************************
 
+.. note::
+
+   Since some of the functionality documented in this section is very new, the
+   user should keep an eye on any changes to the API or behavior which may
+   occur by the next release.
+
 Reshaping by pivoting DataFrame objects
 ---------------------------------------
 
@@ -92,3 +98,16 @@ are homogeneously-typed.
 
 Reshaping by stacking and unstacking
 ------------------------------------
+
+Closely related to the ``pivot`` function are the related ``stack`` and
+``unstack`` functions currently available on Series and DataFrame. These
+functions are designed to tie together with ``MultiIndex`` objects (see the
+section on :ref:`hierarchical indexing <indexing.hierarchical>`). Here are
+essentially what these functions do:
+
+  - ``stack``: collapse level in ``axis=1`` to produce new object whose index
+    has the collapsed columns as its lowest level
+  - ``unstack``: inverse operation from ``stack``; "pivot" index level to
+    produce reshaped DataFrame
+
+Actually very hard to explain in words; the clearest way is by example.
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 18df2a2be..bb07d6500 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -2,6 +2,7 @@ import numpy as np
 import cPickle
 
 from pandas.core.common import _ensure_index
+from pandas.core.index import Index, MultiIndex
 import pandas.core.datetools as datetools
 
 #-------------------------------------------------------------------------------
@@ -381,3 +382,20 @@ class NDFrame(PandasObject):
         result[count == 0] = np.NaN
 
         return result
+
+    def copy(self):
+        """Make a deep copy of this object"""
+        return self._constructor(self._data.copy())
+
+    def swaplevel(self, i, j, axis=0):
+        """
+        Swap levels i and j in a MultiIndex on a particular axis
+
+        Returns
+        -------
+        swapped : type of caller (new object)
+        """
+        result = self.copy()
+        labels = result._data.axes[axis]
+        result._data.set_axis(axis, labels.swaplevel(i, j))
+        return result
diff --git a/pandas/core/panel.py b/pandas/core/panel.py
index 8f5c82217..0d7de5ad1 100644
--- a/pandas/core/panel.py
+++ b/pandas/core/panel.py
@@ -306,16 +306,6 @@ class WidePanel(Panel, NDFrame):
         return self._constructor(arr, items=items, major_axis=major,
                                  minor_axis=minor, copy=copy)
 
-    def copy(self):
-        """
-        Return a copy of WidePanel (only values ndarray copied)
-
-        Returns
-        -------
-        y : WidePanel
-        """
-        return WidePanel(self._data.copy())
-
     fromDict = from_dict
 
     def to_sparse(self, fill_value=None, kind='block'):
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 55a0e3c9a..24a420bb3 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1046,6 +1046,17 @@ copy : boolean, default False
         new_values = self.values.take(indexer)
         return Series(new_values, index=new_index)
 
+    def swaplevel(self, i, j, copy=True):
+        """
+        Swap levels i and j in a MultiIndex
+
+        Returns
+        -------
+        swapped : Series
+        """
+        new_index = self.index.swaplevel(i, j)
+        return Series(self.values, index=new_index, copy=copy)
+
     def unstack(self, level=-1):
         """
         Unstack, a.k.a. pivot, Series with MultiIndex to produce DataFrame
