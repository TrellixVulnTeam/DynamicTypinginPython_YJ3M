commit 4eba823e7a4f2a3dc5a75d3715583d40eacc438f
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Jun 5 21:42:32 2012 -0400

    ENH: attach name to Factor

diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 729483e78..e249e20b1 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -201,8 +201,6 @@ class Timestamp(_Timestamp):
             # tz naive, use tz_localize
             raise Exception('Cannot convert tz-naive Timestamp, use '
                             'tz_localize to localize')
-
-            return Timestamp(self.to_pydatetime(), tz=tz)
         else:
             # Same UTC timestamp, different time zone
             return Timestamp(self.value, tz=tz)
diff --git a/pandas/tools/tests/test_tile.py b/pandas/tools/tests/test_tile.py
index bb9d1fbf3..c281d214c 100644
--- a/pandas/tools/tests/test_tile.py
+++ b/pandas/tools/tests/test_tile.py
@@ -61,6 +61,12 @@ class TestCut(unittest.TestCase):
                      '[0.75, 1.001)']
         self.assert_(np.array_equal(result.levels, ex_levels))
 
+    def test_cut_pass_series_name_to_factor(self):
+        s = Series(np.random.randn(100), name='foo')
+
+        factor = cut(s, 4)
+        self.assertEquals(factor.name, 'foo')
+
     def test_label_precision(self):
         arr = np.arange(0, 0.73, 0.01)
 
diff --git a/pandas/tools/tile.py b/pandas/tools/tile.py
index e750e97ea..1b8d7a097 100644
--- a/pandas/tools/tile.py
+++ b/pandas/tools/tile.py
@@ -137,7 +137,9 @@ def qcut(x, q=4, labels=None, retbins=False, precision=3):
 
 
 def _bins_to_cuts(x, bins, right=True, labels=None, retbins=False,
-                  precision=3):
+                  precision=3, name=None):
+    if name is None and isinstance(x, Series):
+        name = x.name
     x = np.asarray(x)
 
     side = 'left' if right else 'right'
@@ -166,7 +168,7 @@ def _bins_to_cuts(x, bins, right=True, labels=None, retbins=False,
         if has_nas:
             np.putmask(ids, mask, 0)
 
-        fac = Factor(ids - 1, levels)
+        fac = Factor(ids - 1, levels, name=name)
     else:
         fac = ids
         if has_nas:
