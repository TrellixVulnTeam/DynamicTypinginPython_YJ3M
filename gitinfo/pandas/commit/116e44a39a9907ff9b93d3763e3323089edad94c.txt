commit 116e44a39a9907ff9b93d3763e3323089edad94c
Author: Chang She <changshe@gmail.com>
Date:   Fri Nov 2 12:22:47 2012 -0400

    BUG: Tick isAnchored inconsistencies #2150

diff --git a/pandas/tseries/offsets.py b/pandas/tseries/offsets.py
index 90ce4cf0f..d6897ef89 100644
--- a/pandas/tseries/offsets.py
+++ b/pandas/tseries/offsets.py
@@ -1053,6 +1053,8 @@ class Tick(DateOffset):
     def rule_code(self):
         return self._rule_base
 
+    def isAnchored(self):
+        return False
 
 def _delta_to_tick(delta):
     if delta.microseconds == 0:
@@ -1088,35 +1090,25 @@ class Day(Tick, CacheableOffset):
     _inc = timedelta(1)
     _rule_base = 'D'
 
-    def isAnchored(self):
-
-        return False
-
-
 class Hour(Tick):
     _inc = timedelta(0, 3600)
     _rule_base = 'H'
 
-
 class Minute(Tick):
     _inc = timedelta(0, 60)
     _rule_base = 'T'
 
-
 class Second(Tick):
     _inc = timedelta(0, 1)
     _rule_base = 'S'
 
-
 class Milli(Tick):
     _rule_base = 'L'
 
-
 class Micro(Tick):
     _inc = timedelta(microseconds=1)
     _rule_base = 'U'
 
-
 class Nano(Tick):
     _inc = 1
     _rule_base = 'N'
diff --git a/pandas/tseries/tests/test_offsets.py b/pandas/tseries/tests/test_offsets.py
index 3242b4b3e..5b9973ff2 100644
--- a/pandas/tseries/tests/test_offsets.py
+++ b/pandas/tseries/tests/test_offsets.py
@@ -5,7 +5,8 @@ import numpy as np
 from pandas.core.datetools import (
     bday, BDay, BQuarterEnd, BMonthEnd, BYearEnd, MonthEnd, MonthBegin,
     BYearBegin, QuarterBegin, BQuarterBegin, BMonthBegin,
-    DateOffset, Week, YearBegin, YearEnd, Hour, Minute, Second,
+    DateOffset, Week, YearBegin, YearEnd, Hour, Minute, Second, Day, Micro,
+    Milli, Nano,
     WeekOfMonth, format, ole2datetime, QuarterEnd, to_datetime, normalize_date,
     get_offset, get_offset_name, inferTimeRule, hasOffsetName,
     get_standard_freq)
@@ -1303,6 +1304,8 @@ def test_Hour():
 
     assert(Hour(4) != Hour(1))
 
+    assert not Hour().isAnchored()
+
 def test_Minute():
     assertEq(Minute(), datetime(2010, 1, 1), datetime(2010, 1, 1, 0, 1))
     assertEq(Minute(-1), datetime(2010, 1, 1, 0, 1), datetime(2010, 1, 1))
@@ -1313,6 +1316,8 @@ def test_Minute():
     assert (Minute(3) - Minute(2)) == Minute()
     assert(Minute(5) != Minute())
 
+    assert not Minute().isAnchored()
+
 def test_Second():
     assertEq(Second(), datetime(2010, 1, 1), datetime(2010, 1, 1, 0, 0, 1))
     assertEq(Second(-1), datetime(2010, 1, 1, 0, 0, 1), datetime(2010, 1, 1))
@@ -1322,6 +1327,14 @@ def test_Second():
     assert (Second(3) + Second(2)) == Second(5)
     assert (Second(3) - Second(2)) == Second()
 
+    assert not Second().isAnchored()
+
+def test_tick_offset():
+    assert not Day().isAnchored()
+    assert not Milli().isAnchored()
+    assert not Micro().isAnchored()
+    assert not Nano().isAnchored()
+
 def test_hasOffsetName():
     assert hasOffsetName(BDay())
     assert not hasOffsetName(BDay(2))
