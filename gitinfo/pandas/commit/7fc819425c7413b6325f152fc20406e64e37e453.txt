commit 7fc819425c7413b6325f152fc20406e64e37e453
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Sep 25 17:11:38 2011 -0400

    BUG: do not allow appending with different item order

diff --git a/RELEASE.rst b/RELEASE.rst
index 65e1bff87..1033a5e33 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -37,6 +37,8 @@ improvements
   - `read_csv` can automatically "sniff" other kinds of delimiters using
     `csv.Sniffer` (PR #146)
   - Improved speed of unit test suite by about 40%
+  - Exception will not be raised calling `HDFStore.remove` on non-existent node
+    with where clause
 
 **Bug fixes**
 
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 9a033ccaa..0fa2aeb80 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -567,6 +567,13 @@ class HDFStore(object):
         # add kinds
         table._v_attrs.index_kind = index_kind
         table._v_attrs.columns_kind = cols_kind
+        if append:
+            existing_fields = getattr(table._v_attrs,'fields',None)
+            if (existing_fields is not None and
+                existing_fields != list(items)):
+                raise Exception("appended items do not match existing items"
+                                " in table!")
+        # this depends on creation order of the table
         table._v_attrs.fields = list(items)
 
         # add the rows
diff --git a/pandas/io/tests/test_pytables.py b/pandas/io/tests/test_pytables.py
index e6d8cada8..c40cc3e15 100644
--- a/pandas/io/tests/test_pytables.py
+++ b/pandas/io/tests/test_pytables.py
@@ -117,6 +117,15 @@ class TesttHDFStore(unittest.TestCase):
         self.store.append('c', df[10:])
         tm.assert_frame_equal(self.store['c'], df)
 
+    def test_append_diff_item_order(self):
+        wp = tm.makePanel()
+        wp1 = wp.ix[:, :10, :]
+        wp2 = wp.ix[['ItemC', 'ItemB', 'ItemA'], 10:, :]
+
+        self.store.put('panel', wp1, table=True)
+        self.assertRaises(Exception, self.store.put, 'panel', wp2,
+                          append=True)
+
     def test_remove(self):
         ts = tm.makeTimeSeries()
         df = tm.makeDataFrame()
