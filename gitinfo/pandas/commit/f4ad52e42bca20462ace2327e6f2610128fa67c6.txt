commit f4ad52e42bca20462ace2327e6f2610128fa67c6
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sat May 12 14:05:03 2012 -0400

    TST: use NaT value

diff --git a/pandas/src/datetime.pxd b/pandas/src/datetime.pxd
index ed56029b6..213f29c5e 100644
--- a/pandas/src/datetime.pxd
+++ b/pandas/src/datetime.pxd
@@ -1,4 +1,4 @@
-from numpy cimport int64_t
+from numpy cimport int64_t, int32_t, npy_int64, npy_int32
 from cpython cimport PyObject
 
 
@@ -75,15 +75,19 @@ cdef extern from "np_datetime.h":
         PANDAS_FR_as
 
     ctypedef struct pandas_datetimestruct:
-        int64_t year
-        int month, day, hour, min, sec, us, ps, as
+        npy_int64 year
+        npy_int32 month, day, hour, min, sec, us, ps, as
 
-    int convert_pydatetime_to_datetimestruct(PyObject *obj, pandas_datetimestruct *out,
+    int convert_pydatetime_to_datetimestruct(PyObject *obj,
+                                             pandas_datetimestruct *out,
                                              PANDAS_DATETIMEUNIT *out_bestunit,
                                              int apply_tzinfo)
 
-    npy_datetime pandas_datetimestruct_to_datetime(PANDAS_DATETIMEUNIT fr, pandas_datetimestruct *d)
-    void pandas_datetime_to_datetimestruct(npy_datetime val, PANDAS_DATETIMEUNIT fr, pandas_datetimestruct *result)
+    npy_datetime pandas_datetimestruct_to_datetime(PANDAS_DATETIMEUNIT fr,
+                                                   pandas_datetimestruct *d)
+    void pandas_datetime_to_datetimestruct(npy_datetime val,
+                                           PANDAS_DATETIMEUNIT fr,
+                                           pandas_datetimestruct *result)
     int _days_per_month_table[2][12]
 
     int dayofweek(int y, int m, int d)
diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index 5988179eb..4627e0bd8 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -737,19 +737,18 @@ def string_to_datetime(ndarray[object] strings, raise_=False, dayfirst=False):
 
     from dateutil.parser import parse
 
-
     try:
         result = np.empty(n, dtype='M8[us]')
         iresult = result.view('i8')
         for i in range(n):
             val = strings[i]
             if util._checknull(val):
-                result[i] = 'NaT'
+                iresult[i] = NaT
             elif PyDateTime_Check(val):
                 result[i] = val
             else:
                 if len(val) == 0:
-                    result[i] = 'NaT'
+                    iresult[i] = NaT
                     continue
                 try:
                     result[i] = parse(val, dayfirst=dayfirst)
