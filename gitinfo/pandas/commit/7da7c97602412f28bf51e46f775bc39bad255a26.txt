commit 7da7c97602412f28bf51e46f775bc39bad255a26
Author: rekcahpassyla <0xdeadcafebeef@gmail.com>
Date:   Wed Jun 17 18:34:18 2015 +0100

    Check for size=0 before setting item
    Fixes #10193

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index 4a513f312..d4becdf6b 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -59,3 +59,4 @@ Performance Improvements
 Bug Fixes
 ~~~~~~~~~
 - Bug in ``DataFrame.apply`` when function returns categorical series. (:issue:`9573`)
+- Bug in ``pd.Series`` when setting a value on an empty ``Series`` whose index has a frequency. (:issue:`10193`)
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index ff0d57395..007d74289 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -1480,6 +1480,18 @@ class TestSeries(tm.TestCase, CheckNameIntegration):
         expected = self.series.append(app)
         assert_series_equal(s, expected)
 
+        # Test for issue #10193
+        key = pd.Timestamp('2012-01-01')
+        series = pd.Series()
+        series[key] = 47
+        expected = pd.Series(47, [key])
+        assert_series_equal(series, expected)
+
+        series = pd.Series([], pd.DatetimeIndex([], freq='D'))
+        series[key] = 47
+        expected = pd.Series(47, pd.DatetimeIndex([key], freq='D'))
+        assert_series_equal(series, expected)
+
     def test_setitem_dtypes(self):
 
         # change dtypes
diff --git a/pandas/tseries/index.py b/pandas/tseries/index.py
index 1a0d87c0d..a549c44d1 100644
--- a/pandas/tseries/index.py
+++ b/pandas/tseries/index.py
@@ -1497,7 +1497,7 @@ class DatetimeIndex(DatetimeIndexOpsMixin, Int64Index):
             if zone != izone:
                 raise ValueError('Passed item and index have different timezone')
             # check freq can be preserved on edge cases
-            if self.freq is not None:
+            if self.size and self.freq is not None:
                 if (loc == 0 or loc == -len(self)) and item + self.freq == self[0]:
                     freq = self.freq
                 elif (loc == len(self)) and item - self.freq == self[-1]:
