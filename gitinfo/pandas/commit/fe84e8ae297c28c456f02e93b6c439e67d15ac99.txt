commit fe84e8ae297c28c456f02e93b6c439e67d15ac99
Author: y-p <yoval@gmx.com>
Date:   Tue Jan 7 07:09:39 2014 +0200

    BLD: enhancements to print_versions.py

diff --git a/ci/print_versions.py b/ci/print_versions.py
index f9123fc28..8be795174 100755
--- a/ci/print_versions.py
+++ b/ci/print_versions.py
@@ -1,15 +1,15 @@
 #!/usr/bin/env python
 
 
-
 def show_versions(as_json=False):
     import imp
     import os
     fn = __file__
     this_dir = os.path.dirname(fn)
-    pandas_dir = os.path.abspath(os.path.join(this_dir,".."))
-    sv_path = os.path.join(pandas_dir, 'pandas','util')
-    mod = imp.load_module('pvmod', *imp.find_module('print_versions', [sv_path]))
+    pandas_dir = os.path.abspath(os.path.join(this_dir, ".."))
+    sv_path = os.path.join(pandas_dir, 'pandas', 'util')
+    mod = imp.load_module(
+        'pvmod', *imp.find_module('print_versions', [sv_path]))
     return mod.show_versions(as_json)
 
 
@@ -17,8 +17,12 @@ if __name__ == '__main__':
     # optparse is 2.6-safe
     from optparse import OptionParser
     parser = OptionParser()
-    parser.add_option("-j", "--json", action="store_true", help="Format output as JSON")
+    parser.add_option("-j", "--json", metavar="FILE", nargs=1,
+                      help="Save output as JSON into file, pass in '-' to output to stdout")
 
     (options, args) = parser.parse_args()
 
+    if options.json == "-":
+        options.json = True
+
     show_versions(as_json=options.json)
diff --git a/pandas/util/print_versions.py b/pandas/util/print_versions.py
index ca94448f7..aee0fc903 100644
--- a/pandas/util/print_versions.py
+++ b/pandas/util/print_versions.py
@@ -2,19 +2,41 @@ import os
 import platform
 import sys
 import struct
+import subprocess
+
 
 def get_sys_info():
     "Returns system information as a dict"
 
+    # get full commit hash
+    commit = None
+    try:
+        pipe = subprocess.Popen('git log --format="%H" -n 1'.split(" "),
+                                stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+        so, serr = pipe.communicate()
+    except:
+        pass
+    else:
+        if pipe.returncode == 0:
+            commit = so
+            try:
+                commit = so.decode('utf-8')
+            except ValueError:
+                pass
+            commit = commit.strip().strip('"')
+
     # list of tuples over dict because OrderedDict not in 2.6, least
     # resistance.
     blob = []
+    blob.append(('commit', commit))
+
     try:
-        sysname, nodename, release, version, machine, processor = platform.uname()
-        blob = [
+        sysname, nodename, release, version, machine, processor = platform.uname(
+        )
+        blob.extend([
             ("python", "%d.%d.%d.%s.%s" % sys.version_info[:]),
             ("python-bits", struct.calcsize("P") * 8),
-            ("OS","%s" % (sysname)),
+            ("OS", "%s" % (sysname)),
             ("OS-release", "%s" % (release)),
             # ("Version", "%s" % (version)),
             # ("Machine", "%s" % (machine)),
@@ -23,7 +45,7 @@ def get_sys_info():
             ("LC_ALL", "%s" % os.environ.get('LC_ALL', "None")),
             ("LANG", "%s" % os.environ.get('LANG', "None")),
 
-        ]
+        ])
     except:
         pass
 
@@ -77,7 +99,14 @@ def show_versions(as_json=False):
         except:
             import simplejson as json
 
-        print(json.dumps(dict(system=dict(sys_info), dependencies=dict(deps_blob)), indent=2))
+        j = json.dumps(
+            dict(system=dict(sys_info), dependencies=dict(deps_blob)), indent=2)
+
+        if as_json == True:
+            print(j)
+        else:
+            with open(as_json, "wb") as f:
+                f.write(j)
 
     else:
 
