commit 51ce7770087099361153f855727d74cdcaeffa24
Author: Uwe L. Korn <xhochy@users.noreply.github.com>
Date:   Sun Jan 5 17:22:12 2020 +0100

    TYP: Fix chainmap typing for mypy 0.740+ (#30680)

diff --git a/pandas/compat/chainmap.py b/pandas/compat/chainmap.py
index 479eddf0c..588bd24dd 100644
--- a/pandas/compat/chainmap.py
+++ b/pandas/compat/chainmap.py
@@ -1,15 +1,24 @@
-from collections import ChainMap
+from typing import ChainMap, MutableMapping, TypeVar, cast
 
+_KT = TypeVar("_KT")
+_VT = TypeVar("_VT")
 
-class DeepChainMap(ChainMap):
-    def __setitem__(self, key, value):
+
+class DeepChainMap(ChainMap[_KT, _VT]):
+    """Variant of ChainMap that allows direct updates to inner scopes.
+
+    Only works when all passed mapping are mutable.
+    """
+
+    def __setitem__(self, key: _KT, value: _VT) -> None:
         for mapping in self.maps:
-            if key in mapping:
-                mapping[key] = value
+            mutable_mapping = cast(MutableMapping[_KT, _VT], mapping)
+            if key in mutable_mapping:
+                mutable_mapping[key] = value
                 return
-        self.maps[0][key] = value
+        cast(MutableMapping[_KT, _VT], self.maps[0])[key] = value
 
-    def __delitem__(self, key):
+    def __delitem__(self, key: _KT) -> None:
         """
         Raises
         ------
@@ -17,7 +26,8 @@ class DeepChainMap(ChainMap):
             If `key` doesn't exist.
         """
         for mapping in self.maps:
+            mutable_mapping = cast(MutableMapping[_KT, _VT], mapping)
             if key in mapping:
-                del mapping[key]
+                del mutable_mapping[key]
                 return
         raise KeyError(key)
diff --git a/pandas/core/computation/pytables.py b/pandas/core/computation/pytables.py
index 4d27bcf28..be652ca0e 100644
--- a/pandas/core/computation/pytables.py
+++ b/pandas/core/computation/pytables.py
@@ -533,7 +533,7 @@ class PyTablesExpr(expr.Expr):
         self._visitor = None
 
         # capture the environment if needed
-        local_dict = DeepChainMap()
+        local_dict: DeepChainMap[Any, Any] = DeepChainMap()
 
         if isinstance(where, PyTablesExpr):
             local_dict = where.env.scope
