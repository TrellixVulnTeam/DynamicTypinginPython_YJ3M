commit a46574a970f4b7a1968313f1d1f55e50f71c0fcb
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Wed Oct 19 17:35:42 2011 -0400

    BUG: check for inf and neginf too

diff --git a/pandas/src/generate_code.py b/pandas/src/generate_code.py
index 48d17b75b..28bc8f2ca 100644
--- a/pandas/src/generate_code.py
+++ b/pandas/src/generate_code.py
@@ -312,7 +312,7 @@ groupby_template = """@cython.wraparound(False)
 @cython.boundscheck(False)
 def groupby_%(name)s(ndarray[%(c_type)s] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[int8_t] mask
+    cdef ndarray[uint8_t, cast=True] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
diff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx
index 2bdf65f09..9d191e0a5 100644
--- a/pandas/src/generated.pyx
+++ b/pandas/src/generated.pyx
@@ -938,7 +938,7 @@ def is_monotonic_bool(ndarray[uint8_t] arr):
 @cython.boundscheck(False)
 def groupby_float64(ndarray[float64_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[int8_t] mask
+    cdef ndarray[uint8_t, cast=True] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
@@ -964,7 +964,7 @@ def groupby_float64(ndarray[float64_t] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_object(ndarray[object] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[int8_t] mask
+    cdef ndarray[uint8_t, cast=True] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
@@ -990,7 +990,7 @@ def groupby_object(ndarray[object] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_int32(ndarray[int32_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[int8_t] mask
+    cdef ndarray[uint8_t, cast=True] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
@@ -1016,7 +1016,7 @@ def groupby_int32(ndarray[int32_t] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_int64(ndarray[int64_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[int8_t] mask
+    cdef ndarray[uint8_t, cast=True] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
@@ -1042,7 +1042,7 @@ def groupby_int64(ndarray[int64_t] index, ndarray[object] labels):
 @cython.boundscheck(False)
 def groupby_bool(ndarray[uint8_t] index, ndarray[object] labels):
     cdef dict result = {}
-    cdef ndarray[int8_t] mask
+    cdef ndarray[uint8_t, cast=True] mask
     cdef int i, length
     cdef list members
     cdef object idx, key
diff --git a/pandas/src/tseries.pyx b/pandas/src/tseries.pyx
index d384fe951..23a9278e6 100644
--- a/pandas/src/tseries.pyx
+++ b/pandas/src/tseries.pyx
@@ -49,9 +49,6 @@ cdef double_t *get_double_ptr(ndarray arr):
 cdef extern from "math.h":
     double sqrt(double x)
 
-#cdef extern from "cobject.h":
-#    pass # for datetime API
-
 cdef extern from "datetime.h":
 
     ctypedef class datetime.datetime [object PyDateTime_DateTime]:
@@ -227,7 +224,10 @@ cdef inline _checknull(object val):
     return val is None or val != val
 
 cpdef checknull(object val):
-    return _checknull(val)
+    if isinstance(val, (float, np.floating)):
+        return val != val or val == INF or val == NEGINF
+    else:
+        return _checknull(val)
 
 def isnullobj(ndarray[object] arr):
     cdef Py_ssize_t i, n
