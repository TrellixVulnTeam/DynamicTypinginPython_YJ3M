commit dd9c585e7093dd752b7b3630abc7a1e77571f39f
Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>
Date:   Thu Apr 18 17:31:40 2019 +0200

    DOC: add deprecated to docstring of Series.data/itemsize/strides/flags/base (#26132)

diff --git a/pandas/core/base.py b/pandas/core/base.py
index 1d3eb880f..0b3d8b601 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -703,6 +703,8 @@ class IndexOpsMixin(object):
     def data(self):
         """
         Return the data pointer of the underlying data.
+
+        .. deprecated:: 0.23.0
         """
         warnings.warn("{obj}.data is deprecated and will be removed "
                       "in a future version".format(obj=type(self).__name__),
@@ -713,6 +715,8 @@ class IndexOpsMixin(object):
     def itemsize(self):
         """
         Return the size of the dtype of the item of the underlying data.
+
+        .. deprecated:: 0.23.0
         """
         warnings.warn("{obj}.itemsize is deprecated and will be removed "
                       "in a future version".format(obj=type(self).__name__),
@@ -730,6 +734,8 @@ class IndexOpsMixin(object):
     def strides(self):
         """
         Return the strides of the underlying data.
+
+        .. deprecated:: 0.23.0
         """
         warnings.warn("{obj}.strides is deprecated and will be removed "
                       "in a future version".format(obj=type(self).__name__),
@@ -747,6 +753,8 @@ class IndexOpsMixin(object):
     def flags(self):
         """
         Return the ndarray.flags for the underlying data.
+
+        .. deprecated:: 0.23.0
         """
         warnings.warn("{obj}.flags is deprecated and will be removed "
                       "in a future version".format(obj=type(self).__name__),
@@ -757,6 +765,8 @@ class IndexOpsMixin(object):
     def base(self):
         """
         Return the base object if the memory of the underlying data is shared.
+
+        .. deprecated:: 0.23.0
         """
         warnings.warn("{obj}.base is deprecated and will be removed "
                       "in a future version".format(obj=type(self).__name__),
