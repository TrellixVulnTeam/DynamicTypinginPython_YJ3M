commit 2522efa9e687e777d966f49af70b325922699bea
Author: Tom Augspurger <TomAugspurger@users.noreply.github.com>
Date:   Tue Apr 18 09:55:30 2017 -0500

    DOC: Various doc fixes (#16035)
    
    - Fixed spacing
    - Fixed method reference
    - Fixed list line wrapping
    - Fixed unbalanced ticks
    - Fixed section-heading without colon
    - Changed Interval Properties -> Attributes
    - Changed Styler properties

diff --git a/doc/source/whatsnew/v0.20.0.txt b/doc/source/whatsnew/v0.20.0.txt
index 9fe0b6602..7951a4dd4 100644
--- a/doc/source/whatsnew/v0.20.0.txt
+++ b/doc/source/whatsnew/v0.20.0.txt
@@ -176,7 +176,7 @@ The following are now part of this API:
 ``pandas.testing``
 ^^^^^^^^^^^^^^^^^^
 
-We are adding a standard module that exposes the public testing functions in ``pandas.testing``(:issue:`9895`). Those functions can be used when writing tests for functionality using pandas objects.
+We are adding a standard module that exposes the public testing functions in ``pandas.testing`` (:issue:`9895`). Those functions can be used when writing tests for functionality using pandas objects.
 
 The following testing functions are now part of this API:
 
@@ -517,7 +517,7 @@ Other Enhancements
 - ``pandas.io.json.json_normalize()`` gained the option ``errors='ignore'|'raise'``; the default is ``errors='raise'`` which is backward compatible. (:issue:`14583`)
 - ``pandas.io.json.json_normalize()`` with an empty ``list`` will return an empty ``DataFrame`` (:issue:`15534`)
 - ``pandas.io.json.json_normalize()`` has gained a ``sep`` option that accepts ``str`` to separate joined fields; the default is ".", which is backward compatible. (:issue:`14883`)
-- :method:`~MultiIndex.remove_unused_levels` has been added to facilitate :ref:`removing unused levels <advanced.shown_levels>`. (:issue:`15694`)
+- :meth:`~MultiIndex.remove_unused_levels` has been added to facilitate :ref:`removing unused levels <advanced.shown_levels>`. (:issue:`15694`)
 - ``pd.read_csv()`` will now raise a ``ParserError`` error whenever any parsing error occurs (:issue:`15913`, :issue:`15925`)
 - ``pd.read_csv()`` now supports the ``error_bad_lines`` and ``warn_bad_lines`` arguments for the Python parser (:issue:`15925`)
 - The ``display.show_dimensions`` option can now also be used to specify
@@ -620,8 +620,8 @@ However, ``.agg(..)`` can *also* accept a dict that allows 'renaming' of the res
 between ``Series`` and ``DataFrame``. We are deprecating this 'renaming' functionaility.
 
 - We are deprecating passing a dict to a grouped/rolled/resampled ``Series``. This allowed
-one to ``rename`` the resulting aggregation, but this had a completely different
-meaning than passing a dictionary to a grouped ``DataFrame``, which accepts column-to-aggregations.
+  one to ``rename`` the resulting aggregation, but this had a completely different
+  meaning than passing a dictionary to a grouped ``DataFrame``, which accepts column-to-aggregations.
 - We are deprecating passing a dict-of-dicts to a grouped/rolled/resampled ``DataFrame`` in a similar manner.
 
 This is an illustrative example:
@@ -1363,9 +1363,9 @@ If indicated, a deprecation warning will be issued if you reference theses modul
     "pandas._testing", "pandas.util.libtesting", ""
     "pandas._window", "pandas.core.libwindow", ""
 
-- The function :func:`~pandas.api.type.union_categoricals` is now importable from ``pandas.api.types``, formerly from ``pandas.types.concat`` (:issue:`15998`)
+- The function :func:`~pandas.api.types.union_categoricals` is now importable from ``pandas.api.types``, formerly from ``pandas.types.concat`` (:issue:`15998`)
 
-.. _whatsnew_0200.privacy.deprecate_plotting
+.. _whatsnew_0200.privacy.deprecate_plotting:
 
 Deprecate .plotting
 ^^^^^^^^^^^^^^^^^^^
diff --git a/pandas/_libs/interval.pyx b/pandas/_libs/interval.pyx
index 60a34aff1..e287e1fc8 100644
--- a/pandas/_libs/interval.pyx
+++ b/pandas/_libs/interval.pyx
@@ -52,7 +52,7 @@ cdef class Interval(IntervalMixin):
 
     .. versionadded:: 0.20.0
 
-    Properties
+    Attributes
     ----------
     left, right : values
         Left and right bounds for each interval.
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 155515761..74d305382 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -4217,14 +4217,14 @@ class NDFrame(PandasObject, SelectionMixin):
 
         Parameters
         ----------
-        by : mapping function / list of functions, dict, Series, ndarray,
-                or tuple / list of column names or index level names or
-                Series or ndarrays
-            Called on each element of the object index to determine the groups.
-            If a dict or Series is passed, the Series or dict VALUES will be
-            used to determine the groups (the Series' values are first
-            aligned; see ``.align()`` method). If ndarray is passed, the
-            values as-is determine the groups.
+        by : mapping, function, str, or iterable
+            Used to determine the groups for the groupby.
+            If ``by`` is a function, it's called on each value of the object's
+            index. If a dict or Series is passed, the Series or dict VALUES
+            will be used to determine the groups (the Series' values are first
+            aligned; see ``.align()`` method). If an ndarray is passed, the
+            values are used as-is determine the groups. A str or list of strs
+            may be passed to group by the columns in ``self``
         axis : int, default 0
         level : int, level name, or sequence of such, default None
             If the axis is a MultiIndex (hierarchical), group by a particular
diff --git a/pandas/io/formats/style.py b/pandas/io/formats/style.py
index 9321c29c9..10f18fc35 100644
--- a/pandas/io/formats/style.py
+++ b/pandas/io/formats/style.py
@@ -71,7 +71,7 @@ class Styler(object):
     Attributes
     ----------
     env : Jinja2 Environment
-    template: Jinja2 Template
+    template : Jinja2 Template
     loader : Jinja2 Loader
 
     Notes
