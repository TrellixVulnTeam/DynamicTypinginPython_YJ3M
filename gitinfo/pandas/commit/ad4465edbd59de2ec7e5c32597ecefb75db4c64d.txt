commit ad4465edbd59de2ec7e5c32597ecefb75db4c64d
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Sat Apr 25 14:39:32 2020 -0700

    CLN: remove unused PeriodEngine methods (#33796)

diff --git a/pandas/_libs/index.pyx b/pandas/_libs/index.pyx
index 5f04c2c7c..c7b774ad0 100644
--- a/pandas/_libs/index.pyx
+++ b/pandas/_libs/index.pyx
@@ -21,14 +21,13 @@ cnp.import_array()
 
 cimport pandas._libs.util as util
 
-from pandas._libs.tslibs import Period
+from pandas._libs.tslibs import Period, Timedelta
 from pandas._libs.tslibs.nattype cimport c_NaT as NaT
 from pandas._libs.tslibs.c_timestamp cimport _Timestamp
 
 from pandas._libs.hashtable cimport HashTable
 
 from pandas._libs import algos, hashtable as _hash
-from pandas._libs.tslibs import Timedelta, period as periodlib
 from pandas._libs.missing import checknull
 
 
@@ -505,38 +504,6 @@ cdef class PeriodEngine(Int64Engine):
     cdef _call_monotonic(self, values):
         return algos.is_monotonic(values, timelike=True)
 
-    def get_indexer(self, values):
-        cdef:
-            ndarray[int64_t, ndim=1] ordinals
-
-        super(PeriodEngine, self)._ensure_mapping_populated()
-
-        freq = super(PeriodEngine, self).vgetter().freq
-        ordinals = periodlib.extract_ordinals(values, freq)
-
-        return self.mapping.lookup(ordinals)
-
-    def get_pad_indexer(self, other: np.ndarray, limit=None) -> np.ndarray:
-        freq = super(PeriodEngine, self).vgetter().freq
-        ordinal = periodlib.extract_ordinals(other, freq)
-
-        return algos.pad(self._get_index_values(),
-                         np.asarray(ordinal), limit=limit)
-
-    def get_backfill_indexer(self, other: np.ndarray, limit=None) -> np.ndarray:
-        freq = super(PeriodEngine, self).vgetter().freq
-        ordinal = periodlib.extract_ordinals(other, freq)
-
-        return algos.backfill(self._get_index_values(),
-                              np.asarray(ordinal), limit=limit)
-
-    def get_indexer_non_unique(self, targets):
-        freq = super(PeriodEngine, self).vgetter().freq
-        ordinal = periodlib.extract_ordinals(targets, freq)
-        ordinal_array = np.asarray(ordinal)
-
-        return super(PeriodEngine, self).get_indexer_non_unique(ordinal_array)
-
 
 cdef class BaseMultiIndexCodesEngine:
     """
diff --git a/pandas/core/indexes/period.py b/pandas/core/indexes/period.py
index d3c49c5ed..76c78fa34 100644
--- a/pandas/core/indexes/period.py
+++ b/pandas/core/indexes/period.py
@@ -1,6 +1,5 @@
 from datetime import datetime, timedelta
 from typing import Any
-import weakref
 
 import numpy as np
 
@@ -322,12 +321,6 @@ class PeriodIndex(DatetimeIndexOpsMixin, Int64Index):
     # ------------------------------------------------------------------------
     # Indexing
 
-    @cache_readonly
-    def _engine(self):
-        # To avoid a reference cycle, pass a weakref of self._values to _engine_type.
-        period = weakref.ref(self._values)
-        return self._engine_type(period, len(self))
-
     @doc(Index.__contains__)
     def __contains__(self, key: Any) -> bool:
         if isinstance(key, Period):
