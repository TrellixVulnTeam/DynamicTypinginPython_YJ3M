commit 1bcb671877287be731ce677aaf96686278b69f9a
Author: Jeff Reback <jeff@reback.net>
Date:   Thu Mar 23 15:06:49 2017 -0400

    CI: remove travis dedupe as enabled auto-cancellation
    
    xref https://github.com/pandas-
    dev/pandas/commit/79581ffe6fb73089dfa8394c2f4e44677acfe1ce    of
    course Travis just announced auto-cancellation / it looks good when I
    enabled it. so removing this :<
    
    Author: Jeff Reback <jeff@reback.net>
    
    Closes #15783 from jreback/cancel and squashes the following commits:
    
    8286d70 [Jeff Reback] CI: remove travis dedupe as enabled auto-cancellation

diff --git a/.travis.yml b/.travis.yml
index 270f8c2fc..eb2a58b06 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -177,8 +177,6 @@ matrix:
         - USE_CACHE=true
 
 before_install:
-  - echo "Checking to see if this build is outdated"
-  - ci/travis_fast_finish.py || { echo "Failing outdated build to end it."; exit 1; }
   - echo "before_install"
   - source ci/travis_process_gbq_encryption.sh
   - export PATH="$HOME/miniconda3/bin:$PATH"
diff --git a/ci/travis_fast_finish.py b/ci/travis_fast_finish.py
deleted file mode 100755
index c2e2a9159..000000000
--- a/ci/travis_fast_finish.py
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/usr/bin/env python
-
-# script to cancel previous travis builds for the same PR
-# originally from
-# https://github.com/conda-forge/staged-recipes/pull/2257
-
-try:
-    from future_builtins import (
-        map,
-        filter,
-    )
-except ImportError:
-    pass
-
-import codecs
-import contextlib
-import json
-import os
-
-try:
-    from urllib.request import (
-        Request,
-        urlopen,
-    )
-except ImportError:
-    from urllib2 import (
-        Request,
-        urlopen,
-    )
-
-
-def check_latest_pr_build(repo, pr, build_num):
-    # Not a PR so it is latest.
-    if pr is None:
-        return True
-
-    headers = {
-        "Accept": "application/vnd.travis-ci.2+json",
-    }
-    url = "https://api.travis-ci.org/repos/{repo}/builds?event_type=pull_request"
-
-    request = Request(url.format(repo=repo), headers=headers)
-    with contextlib.closing(urlopen(request)) as response:
-        reader = codecs.getreader("utf-8")
-        data = json.load(reader(response))
-
-    # Parse the response to get a list of build numbers for this PR.
-    builds = data["builds"]
-    pr_builds = filter(lambda b: b["pull_request_number"] == pr, builds)
-    pr_build_nums = sorted(map(lambda b: int(b["number"]), pr_builds))
-
-    print("build_num: {}".format(build_num))
-    print("pr_build_nums: {}".format(','.join([str(n) for n in pr_build_nums])))
-
-    # Check if our build number is the latest (largest)
-    # out of all of the builds for this PR.
-    if build_num < max(pr_build_nums):
-        return False
-    else:
-        return True
-
-
-def main():
-    repo = os.environ["TRAVIS_REPO_SLUG"]
-
-    pr = os.environ["TRAVIS_PULL_REQUEST"]
-    pr = None if pr == "false" else int(pr)
-    build_num = int(os.environ["TRAVIS_BUILD_NUMBER"])
-
-    print("checking for fast_finish: {}-{}-{}".format(repo, pr, build_num))
-
-    return int(check_latest_pr_build(repo, pr, build_num) is False)
-
-
-if __name__ == "__main__":
-    import sys
-    sys.exit(main())
