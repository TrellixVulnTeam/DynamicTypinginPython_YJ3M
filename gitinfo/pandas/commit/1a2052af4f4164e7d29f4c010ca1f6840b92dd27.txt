commit 1a2052af4f4164e7d29f4c010ca1f6840b92dd27
Author: Adam Klein <adamklein@gmail.com>
Date:   Tue Feb 28 12:32:58 2012 -0500

    ENH: fast offset generation in DTI for regularly strided offset

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 1fef9bdf1..27ace1298 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -893,9 +893,9 @@ class Tick(DateOffset):
         return self._delta
 
     def us_stride(self):
-        return (self._delta.days * 24 * 60 * 60 * 1000000
-                + self._delta.seconds * 1000000
-                + self._delta.microseconds)
+        return (self.delta.days * 24 * 60 * 60 * 1000000
+                + self.delta.seconds * 1000000
+                + self.delta.microseconds)
 
     def apply(self, other):
         if isinstance(other, (datetime, timedelta, Timestamp)):
diff --git a/pandas/core/index.py b/pandas/core/index.py
index 8b8fe7d08..4ed5fb521 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1153,12 +1153,25 @@ class DatetimeIndex(Int64Index):
                                           offset=offset, name=name,
                                           _deprecated=_deprecated)
             else:
-                xdr = datetools.generate_range(start=start, end=end,
-                                               periods=periods, offset=offset,
-                                               _deprecated=_deprecated)
+                if isinstance(offset, datetools.Tick):
+                    if periods is None:
+                        b, e = Timestamp(start), Timestamp(end)
+                        data = np.arange(b.value, e.value+1,
+                                        offset.us_stride(), dtype=np.int64)
+                    else:
+                        b = Timestamp(start)
+                        e = b.value + periods * offset.us_stride()
+                        data = np.arange(b.value, e,
+                                         offset.us_stride(), dtype=np.int64)
 
-                index = np.array(_dt_unbox_array(list(xdr)), dtype='M8[us]',
-                                 copy=False)
+                else:
+                    xdr = datetools.generate_range(start=start, end=end,
+                        periods=periods, offset=offset,
+                        _deprecated=_deprecated)
+
+                    data = _dt_unbox_array(list(xdr))
+
+                index = np.array(data, dtype=np.datetime64, copy=False)
 
             index = index.view(cls)
             index.name = name
