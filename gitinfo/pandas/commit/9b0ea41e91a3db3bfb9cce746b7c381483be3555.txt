commit 9b0ea41e91a3db3bfb9cce746b7c381483be3555
Author: Jeff Tratner <jeffrey.tratner@gmail.com>
Date:   Wed May 31 03:39:46 2017 -0700

    Fix unbound local with bad engine (#16511)

diff --git a/doc/source/whatsnew/v0.20.2.txt b/doc/source/whatsnew/v0.20.2.txt
index 90146aa17..1517327ab 100644
--- a/doc/source/whatsnew/v0.20.2.txt
+++ b/doc/source/whatsnew/v0.20.2.txt
@@ -41,6 +41,9 @@ Bug Fixes
   detecting the terminal size. This fix only applies to python 3 (:issue:`16496`)
 - Bug in using ``pathlib.Path`` or ``py.path.local`` objects with io functions (:issue:`16291`)
 - Bug in ``DataFrame.update()`` with ``overwrite=False`` and ``NaN values`` (:issue:`15593`)
+- Passing an invalid engine to :func:`read_csv` now raises an informative
+  ``ValueError`` rather than ``UnboundLocalError``. (:issue:`16511`)
+
 
 
 
diff --git a/pandas/io/parsers.py b/pandas/io/parsers.py
index e287d92f6..12b606d96 100755
--- a/pandas/io/parsers.py
+++ b/pandas/io/parsers.py
@@ -969,6 +969,10 @@ class TextFileReader(BaseIterator):
                 klass = PythonParser
             elif engine == 'python-fwf':
                 klass = FixedWidthFieldParser
+            else:
+                raise ValueError('Unknown engine: {engine} (valid options are'
+                                 ' "c", "python", or' ' "python-fwf")'.format(
+                                     engine=engine))
             self._engine = klass(self.f, **self.options)
 
     def _failover_to_python(self):
diff --git a/pandas/tests/io/test_common.py b/pandas/tests/io/test_common.py
index b7d158dd7..289f86eb2 100644
--- a/pandas/tests/io/test_common.py
+++ b/pandas/tests/io/test_common.py
@@ -223,3 +223,10 @@ class TestMMapWrapper(object):
             assert next_line.strip() == line.strip()
 
         pytest.raises(StopIteration, next, wrapper)
+
+    def test_unknown_engine(self):
+        with tm.ensure_clean() as path:
+            df = tm.makeDataFrame()
+            df.to_csv(path)
+            with tm.assert_raises_regex(ValueError, 'Unknown engine'):
+                read_csv(path, engine='pyt')
