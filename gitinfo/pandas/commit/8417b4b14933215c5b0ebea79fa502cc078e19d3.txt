commit 8417b4b14933215c5b0ebea79fa502cc078e19d3
Author: Uwe L. Korn <xhochy@users.noreply.github.com>
Date:   Tue Jun 9 17:37:44 2020 +0200

    BUG: Allow plain bools in ExtensionArray.equals (#34661)

diff --git a/pandas/core/arrays/base.py b/pandas/core/arrays/base.py
index 79f0039a9..7f2c61ff7 100644
--- a/pandas/core/arrays/base.py
+++ b/pandas/core/arrays/base.py
@@ -738,7 +738,7 @@ class ExtensionArray:
                 # boolean array with NA -> fill with False
                 equal_values = equal_values.fillna(False)
             equal_na = self.isna() & other.isna()
-            return (equal_values | equal_na).all().item()
+            return bool((equal_values | equal_na).all())
 
     def _values_for_factorize(self) -> Tuple[np.ndarray, Any]:
         """
diff --git a/pandas/tests/extension/arrow/arrays.py b/pandas/tests/extension/arrow/arrays.py
index ffebc9f8b..29cfe1e0f 100644
--- a/pandas/tests/extension/arrow/arrays.py
+++ b/pandas/tests/extension/arrow/arrays.py
@@ -8,6 +8,7 @@ current implementation is not efficient.
 """
 import copy
 import itertools
+import operator
 from typing import Type
 
 import numpy as np
@@ -106,6 +107,27 @@ class ArrowExtensionArray(ExtensionArray):
     def dtype(self):
         return self._dtype
 
+    def _boolean_op(self, other, op):
+        if not isinstance(other, type(self)):
+            raise NotImplementedError()
+
+        result = op(np.array(self._data), np.array(other._data))
+        return ArrowBoolArray(
+            pa.chunked_array([pa.array(result, mask=pd.isna(self._data.to_pandas()))])
+        )
+
+    def __eq__(self, other):
+        if not isinstance(other, type(self)):
+            return False
+
+        return self._boolean_op(other, operator.eq)
+
+    def __and__(self, other):
+        return self._boolean_op(other, operator.and_)
+
+    def __or__(self, other):
+        return self._boolean_op(other, operator.or_)
+
     @property
     def nbytes(self):
         return sum(
@@ -153,10 +175,12 @@ class ArrowExtensionArray(ExtensionArray):
         return op(**kwargs)
 
     def any(self, axis=0, out=None):
-        return self._data.to_pandas().any()
+        # Explicitly return a plain bool to reproduce GH-34660
+        return bool(self._data.to_pandas().any())
 
     def all(self, axis=0, out=None):
-        return self._data.to_pandas().all()
+        # Explicitly return a plain bool to reproduce GH-34660
+        return bool(self._data.to_pandas().all())
 
 
 class ArrowBoolArray(ArrowExtensionArray):
diff --git a/pandas/tests/extension/arrow/test_bool.py b/pandas/tests/extension/arrow/test_bool.py
index 48f1c3476..7841360e5 100644
--- a/pandas/tests/extension/arrow/test_bool.py
+++ b/pandas/tests/extension/arrow/test_bool.py
@@ -29,6 +29,11 @@ def data_missing():
     return ArrowBoolArray.from_scalars([None, True])
 
 
+def test_basic_equals(data):
+    # https://github.com/pandas-dev/pandas/issues/34660
+    assert pd.Series(data).equals(pd.Series(data))
+
+
 class BaseArrowTests:
     pass
 
