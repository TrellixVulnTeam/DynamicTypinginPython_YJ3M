commit 7c1705c0330fc41699adf4322c2191f747184d2b
Author: Jeff Reback <jeff@reback.net>
Date:   Wed Dec 10 19:52:25 2014 -0500

    DOC: v0.15.2 editiing, removing several duplicated issues

diff --git a/doc/source/release.rst b/doc/source/release.rst
index f76c6bd35..c9d79995c 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -48,7 +48,7 @@ analysis / manipulation tool available in any language.
 pandas 0.15.2
 -------------
 
-**Release date:** (December ??, 2014)
+**Release date:** (December 12, 2014)
 
 This is a minor release from 0.15.1 and includes a small number of API changes, several new features, enhancements, and
 performance improvements along with a large number of bug fixes.
diff --git a/doc/source/whatsnew/v0.15.2.txt b/doc/source/whatsnew/v0.15.2.txt
index 60ff30053..3a0fdbae5 100644
--- a/doc/source/whatsnew/v0.15.2.txt
+++ b/doc/source/whatsnew/v0.15.2.txt
@@ -1,18 +1,15 @@
 .. _whatsnew_0152:
 
-v0.15.2 (December ??, 2014)
+v0.15.2 (December 12, 2014)
 ---------------------------
 
 This is a minor release from 0.15.1 and includes a small number of API changes, several new features,
 enhancements, and performance improvements along with a large number of bug fixes. We recommend that all
 users upgrade to this version.
 
-- Highlights include:
-
 - :ref:`Enhancements <whatsnew_0152.enhancements>`
 - :ref:`API Changes <whatsnew_0152.api>`
 - :ref:`Performance Improvements <whatsnew_0152.performance>`
-- :ref:`Experimental Changes <whatsnew_0152.experimental>`
 - :ref:`Bug Fixes <whatsnew_0152.bug_fixes>`
 
 .. _whatsnew_0152.api:
@@ -91,8 +88,7 @@ API changes
      data.y
      data['y'].values
 
-- Timestamp('now') is now equivalent to Timestamp.now() in that it returns the local time rather than UTC. Also, Timestamp('today') is now
-  equivalent to Timestamp.today() and both have tz as a possible argument. (:issue:`9000`)
+- ``Timestamp('now')`` is now equivalent to ``Timestamp.now()`` in that it returns the local time rather than UTC. Also, ``Timestamp('today')`` is now equivalent to ``Timestamp.today()`` and both have ``tz`` as a possible argument. (:issue:`9000`)
 
 .. _whatsnew_0152.enhancements:
 
@@ -110,18 +106,18 @@ Enhancements
      data.to_sql('data_dtype', engine, dtype={'Col_1': String})
 
 - Added ability to export Categorical data to Stata (:issue:`8633`).  See :ref:`here <io.stata-categorical>` for limitations of categorical variables exported to Stata data files.
+- Added flag ``order_categoricals`` to ``StataReader`` and ``read_stata`` to select whether to order imported categorical data (:issue:`8836`).  See :ref:`here <io.stata-categorical>` for more information on importing categorical variables from Stata data files.
 - Added ability to export Categorical data to to/from HDF5 (:issue:`7621`). Queries work the same as if it was an object array. However, the ``category`` dtyped data is stored in a more efficient manner. See :ref:`here <io.hdf5-categorical>` for an example and caveats w.r.t. prior versions of pandas.
 - Added support for ``searchsorted()`` on `Categorical` class (:issue:`8420`).
 - Added support for ``utcfromtimestamp()``, ``fromtimestamp()``, and ``combine()`` on `Timestamp` class (:issue:`5351`).
 - Added Google Analytics (`pandas.io.ga`) basic documentation (:issue:`8835`). See :ref:`here<remote_data.ga>`.
-- Added flag ``order_categoricals`` to ``StataReader`` and ``read_stata`` to select whether to order imported categorical data (:issue:`8836`).  See :ref:`here <io.stata-categorical>` for more information on importing categorical variables from Stata data files.
 - ``Timedelta`` arithmetic returns ``NotImplemented`` in unknown cases, allowing extensions by custom classes (:issue:`8813`).
 - ``Timedelta`` now supports arithemtic with ``numpy.ndarray`` objects of the appropriate dtype (numpy 1.8 or newer only) (:issue:`8884`).
-- Added ``Timedelta.to_timedelta64`` method to the public API (:issue:`8884`).
-- Added ``gbq.generate_bq_schema`` function to the gbq module (:issue:`8325`).
+- Added ``Timedelta.to_timedelta64()`` method to the public API (:issue:`8884`).
+- Added ``gbq.generate_bq_schema()`` function to the gbq module (:issue:`8325`).
 - ``Series`` now works with map objects the same way as generators (:issue:`8909`).
 - Added context manager to ``HDFStore`` for automatic closing (:issue:`8791`).
-- ``to_datetime`` gains an ``exact`` keyword to allow for a format to not require an exact match for a provided format string (if its ``False). ``exact`` defaults to ``True`` (meaning that exact matching is still the default)  (:issue:`8904`)
+- ``to_datetime`` gains an ``exact`` keyword to allow for a format to not require an exact match for a provided format string (if its ``False``). ``exact`` defaults to ``True`` (meaning that exact matching is still the default)  (:issue:`8904`)
 - Added ``axvlines`` boolean option to parallel_coordinates plot function, determines whether vertical lines will be printed, default is True
 - Added ability to read table footers to read_html (:issue:`8552`)
 - ``to_sql`` now infers datatypes of non-NA values for columns that contain NA values and have dtype ``object`` (:issue:`8778`).
@@ -134,12 +130,6 @@ Performance
 
 - Performance boost for ``to_datetime`` conversions with a passed ``format=``, and the ``exact=False`` (:issue:`8904`)
 
-.. _whatsnew_0152.experimental:
-
-Experimental
-~~~~~~~~~~~~
-
-
 .. _whatsnew_0152.bug_fixes:
 
 Bug Fixes
@@ -190,25 +180,12 @@ Bug Fixes
      s = pd.Series(np.arange(3), ['a', 'b', 'c'])
      s.loc['c':'a':-1]
 
-- Report a ``TypeError`` when invalid/no paramaters are passed in a groupby (:issue:`8015`)
 - Regression in DatetimeIndex iteration with a Fixed/Local offset timezone (:issue:`8890`)
 - Bug in ``to_datetime`` when parsing a nanoseconds using the ``%f`` format (:issue:`8989`)
-- Bug in packaging pandas with ``py2app/cx_Freeze`` (:issue:`8602`, :issue:`8831`)
-- Bug in ``groupby`` signatures that didn't include \*args or \*\*kwargs (:issue:`8733`).
 - ``io.data.Options`` now raises ``RemoteDataError`` when no expiry dates are available from Yahoo and when it receives no data from Yahoo (:issue:`8761`), (:issue:`8783`).
-- Unclear error message in csv parsing when passing dtype and names and the parsed data is a different data type (:issue:`8833`)
-- Bug in slicing a multi-index with an empty list and at least one boolean indexer (:issue:`8781`)
-- ``io.data.Options`` now raises ``RemoteDataError`` when no expiry dates are available from Yahoo (:issue:`8761`).
-- ``Timedelta`` kwargs may now be numpy ints and floats (:issue:`8757`).
-- Fixed several outstanding bugs for ``Timedelta`` arithmetic and comparisons (:issue:`8813`, :issue:`5963`, :issue:`5436`).
-- ``sql_schema`` now generates dialect appropriate ``CREATE TABLE`` statements (:issue:`8697`)
-- ``slice`` string method now takes step into account (:issue:`8754`)
-- Bug in ``BlockManager`` where setting values with different type would break block integrity (:issue:`8850`)
-- Bug in ``DatetimeIndex`` when using ``time`` object as key (:issue:`8667`)
-- Bug in ``merge`` where ``how='left'`` and ``sort=False`` would not preserve left frame order (:issue:`7331`)
 - Fix: The font size was only set on x axis if vertical or the y axis if horizontal. (:issue:`8765`)
 - Fixed division by 0 when reading big csv files in python 3 (:issue:`8621`)
-- Fixed Multindex to_html index=False adds an extra column (:issue:`8452`)
+- Bug in outputing a Multindex with ``to_html,index=False`` which would add an extra column (:issue:`8452`)
 
 
 
@@ -236,7 +213,7 @@ Bug Fixes
   whose ``labels`` do not reference all its ``levels``. (:issue:`8844`)
 
 
-- BUG: Option context applies on __enter__ (:issue:`8514`)
+- Bug in that Option context applied on ``__enter__`` (:issue:`8514`)
 
 
 - Bug in resample that causes a ValueError when resampling across multiple days
@@ -244,17 +221,14 @@ Bug Fixes
 
 
 
-- Bug where DataFrame.plot(kind='scatter') fails when checking if an np.array is in the DataFrame (:issue:`8852`)
+- Bug where ``DataFrame.plot(kind='scatter')`` fails when checking if an np.array is in the DataFrame (:issue:`8852`)
 
 
 
-- Bug in `pd.infer_freq`/`DataFrame.inferred_freq` that prevented proper sub-daily frequency inference
-  when the index contained DST days (:issue:`8772`).
+- Bug in ``pd.infer_freq/DataFrame.inferred_freq`` that prevented proper sub-daily frequency inference when the index contained DST days (:issue:`8772`).
 - Bug where index name was still used when plotting a series with ``use_index=False`` (:issue:`8558`).
-- Bugs when trying to stack multiple columns, when some (or all)
-  of the level names are numbers (:issue:`8584`).
-- Bug in ``MultiIndex`` where ``__contains__`` returns wrong result if index is
-  not lexically sorted or unique (:issue:`7724`)
+- Bugs when trying to stack multiple columns, when some (or all) of the level names are numbers (:issue:`8584`).
+- Bug in ``MultiIndex`` where ``__contains__`` returns wrong result if index is not lexically sorted or unique (:issue:`7724`)
 - BUG CSV: fix problem with trailing whitespace in skipped rows, (:issue:`8679`), (:issue:`8661`), (:issue:`8983`)
 - Regression in ``Timestamp`` does not parse 'Z' zone designator for UTC (:issue:`8771`)
 
