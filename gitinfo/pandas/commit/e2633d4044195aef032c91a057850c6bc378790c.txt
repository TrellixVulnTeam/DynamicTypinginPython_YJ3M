commit e2633d4044195aef032c91a057850c6bc378790c
Author: Chang She <chang@lambdafoundry.com>
Date:   Fri Jul 13 12:16:34 2012 -0400

    BUG: slicing with dups #1587

diff --git a/pandas/core/index.py b/pandas/core/index.py
index dddfb68ac..72b2e9591 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -1053,6 +1053,8 @@ class Index(np.ndarray):
         else:
             try:
                 beg_slice = self.get_loc(start)
+                if isinstance(beg_slice, slice):
+                    beg_slice = beg_slice.start
             except KeyError:
                 if self.is_monotonic:
                     beg_slice = self.searchsorted(start, side='left')
@@ -1063,7 +1065,11 @@ class Index(np.ndarray):
             end_slice = len(self)
         else:
             try:
-                end_slice = self.get_loc(end) + 1
+                end_slice = self.get_loc(end)
+                if isinstance(end_slice, slice):
+                    end_slice = end_slice.stop
+                else:
+                    end_slice += 1
             except KeyError:
                 if self.is_monotonic:
                     end_slice = self.searchsorted(end, side='right')
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 0f5b309f7..36cc4d2aa 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -369,10 +369,6 @@ class _NDFrameIndexer(object):
             else:
                 try:
                     i, j = labels.slice_locs(start, stop)
-                    if isinstance(i, slice):
-                        i = i.start
-                    if isinstance(j, slice):
-                        j = j.stop
                     slicer = slice(i, j, obj.step)
                 except Exception:
                     if _is_index_slice(obj):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index a98991658..dcb8e39a9 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -702,6 +702,20 @@ class CheckIndexing(object):
         xp = df.reindex(['x'], columns=[('a', '1')])
         assert_frame_equal(rs, xp)
 
+    def test_ix_dup(self):
+        idx = Index(['a', 'a', 'b', 'c', 'd', 'd'])
+        df = DataFrame(np.random.randn(len(idx), 3), idx)
+
+        sub = df.ix[:'d']
+        assert_frame_equal(sub, df)
+
+        sub = df.ix['a':'c']
+        assert_frame_equal(sub, df.ix[0:4])
+
+        sub = df.ix['b':'d']
+        assert_frame_equal(sub, df.ix[2:])
+
+
     def test_getitem_fancy_1d(self):
         f = self.frame
         ix = f.ix
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index d14637bef..4ed831764 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -397,6 +397,20 @@ class TestIndex(unittest.TestCase):
         self.assertRaises(KeyError, idx2.slice_locs, 8, 2)
         self.assertRaises(KeyError, idx2.slice_locs, 7, 3)
 
+    def test_slice_locs_dup(self):
+        idx = Index(['a', 'a', 'b', 'c', 'd', 'd'])
+        rs = idx.slice_locs('a', 'd')
+        self.assert_(rs == (0, 6))
+
+        rs2 = idx.slice_locs(end='d')
+        self.assert_(rs == (0, 6))
+
+        rs = idx.slice_locs('a', 'c')
+        self.assert_(rs == (0, 4))
+
+        rs = idx.slice_locs('b', 'd')
+        self.assert_(rs == (2, 6))
+
     def test_drop(self):
         n = len(self.strIndex)
 
