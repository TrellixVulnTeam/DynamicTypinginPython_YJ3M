commit 6213fe4699b502ab9b394a64624bd1196855e1a3
Author: Chang She <chang@lambdafoundry.com>
Date:   Thu Oct 4 19:36:48 2012 -0400

    BUG: Timestamp dayofyear returns day of month #2021

diff --git a/pandas/src/datetime.pyx b/pandas/src/datetime.pyx
index dc733a830..33e20d44e 100644
--- a/pandas/src/datetime.pyx
+++ b/pandas/src/datetime.pyx
@@ -178,7 +178,7 @@ class Timestamp(_Timestamp):
 
     @property
     def dayofyear(self):
-        return self.day
+        return self._get_field('doy')
 
     @property
     def week(self):
diff --git a/pandas/tseries/tests/test_timeseries.py b/pandas/tseries/tests/test_timeseries.py
index 9d098c55b..e116822b7 100644
--- a/pandas/tseries/tests/test_timeseries.py
+++ b/pandas/tseries/tests/test_timeseries.py
@@ -969,16 +969,16 @@ class TestTimeSeries(unittest.TestCase):
     def test_timestamp_fields(self):
         # extra fields from DatetimeIndex like quarter and week
         from pandas.lib import Timestamp
-        idx = tm.makeDateIndex(10)
+        idx = tm.makeDateIndex(100)
 
         fields = ['dayofweek', 'dayofyear', 'week', 'weekofyear', 'quarter']
         for f in fields:
-            expected = getattr(idx, f)[0]
-            result = getattr(Timestamp(idx[0]), f)
+            expected = getattr(idx, f)[-1]
+            result = getattr(Timestamp(idx[-1]), f)
             self.assertEqual(result, expected)
 
-        self.assertEqual(idx.freq, Timestamp(idx[0], idx.freq).freq)
-        self.assertEqual(idx.freqstr, Timestamp(idx[0], idx.freq).freqstr)
+        self.assertEqual(idx.freq, Timestamp(idx[-1], idx.freq).freq)
+        self.assertEqual(idx.freqstr, Timestamp(idx[-1], idx.freq).freqstr)
 
     def test_timestamp_date_out_of_range(self):
         self.assertRaises(ValueError, Timestamp, '1676-01-01')
