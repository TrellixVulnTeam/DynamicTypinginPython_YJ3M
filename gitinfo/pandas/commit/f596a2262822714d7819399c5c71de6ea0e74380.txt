commit f596a2262822714d7819399c5c71de6ea0e74380
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Dec 25 23:14:49 2011 -0500

    BUG: use centered tss in r-square with entity or time effects in panel model

diff --git a/RELEASE.rst b/RELEASE.rst
index 57f9b7e24..2d0f60ee9 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -91,6 +91,8 @@ pandas 0.6.2
   - Fix handling of missing columns (was combine_first-specific) in
     DataFrame.combine for general case (GH #529)
   - Fix type inference logic with boolean lists and arrays in DataFrame indexing
+  - Use centered sum of squares in R-square computation if entity_effects=True
+    in panel regression
 
 Thanks
 ------
@@ -98,6 +100,7 @@ Thanks
 - Andreas Hilboll
 - Adam Klein
 - Matt Harrison
+- Mario Gamboa-Cavazos
 - Arthur Gerigk
 - Gregg Lind
 - Solomon Negusse
diff --git a/pandas/stats/ols.py b/pandas/stats/ols.py
index 3fea01661..1a27c45e1 100644
--- a/pandas/stats/ols.py
+++ b/pandas/stats/ols.py
@@ -257,12 +257,16 @@ class OLS(object):
     @cache_readonly
     def _r2_raw(self):
         """Returns the raw r-squared values."""
-        has_intercept = np.abs(self._resid_raw.sum()) < _FP_ERR
-        if self._intercept:
+        if self._use_centered_tss:
             return 1 - self.sm_ols.ssr / self.sm_ols.centered_tss
         else:
             return 1 - self.sm_ols.ssr / self.sm_ols.uncentered_tss
 
+    @property
+    def _use_centered_tss(self):
+        # has_intercept = np.abs(self._resid_raw.sum()) < _FP_ERR
+        return self._intercept
+
     @cache_readonly
     def r2(self):
         """Returns the r-squared values."""
@@ -934,7 +938,7 @@ class MovingOLS(OLS):
     def _r2_raw(self):
         rs = self._resid_stats
 
-        if self._intercept:
+        if self._use_centered_tss:
             return 1 - rs['sse'] / rs['centered_tss']
         else:
             return 1 - rs['sse'] / rs['uncentered_tss']
diff --git a/pandas/stats/plm.py b/pandas/stats/plm.py
index 60bf00b7b..7b4a46747 100644
--- a/pandas/stats/plm.py
+++ b/pandas/stats/plm.py
@@ -328,10 +328,19 @@ class PanelOLS(OLS):
         resid = Y - np.dot(X, self._beta_raw)
 
         SSE = (resid ** 2).sum()
-        SST = ((Y - np.mean(Y)) ** 2).sum()
+
+        if self._use_centered_tss:
+            SST = ((Y - np.mean(Y)) ** 2).sum()
+        else:
+            SST = (Y**2).sum()
 
         return 1 - SSE / SST
 
+    @property
+    def _use_centered_tss(self):
+        # has_intercept = np.abs(self._resid_raw.sum()) < _FP_ERR
+        return self._intercept or self._entity_effects or self._time_effects
+
     @cache_readonly
     def _r2_adj_raw(self):
         """Returns the raw r-squared adjusted values."""
diff --git a/pandas/stats/tests/test_ols.py b/pandas/stats/tests/test_ols.py
index 8f5ece7bf..71d6b82c6 100644
--- a/pandas/stats/tests/test_ols.py
+++ b/pandas/stats/tests/test_ols.py
@@ -562,6 +562,8 @@ class TestPanelOLS(BaseTest):
     def testRollingWithFixedEffects(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
                             entity_effects=True)
+        self.checkMovingOLS(self.panel_x, self.panel_y, intercept=False,
+                            entity_effects=True)
 
     def testRollingWithTimeEffects(self):
         self.checkMovingOLS(self.panel_x, self.panel_y,
