commit ebca2a6dc8fdac33687648002a6c27fa15503887
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Wed Jul 8 14:52:28 2020 -0700

    TYP: maybe_get_tz (#35103)

diff --git a/pandas/_libs/tslibs/timezones.pxd b/pandas/_libs/tslibs/timezones.pxd
index f51ee41cb..136710003 100644
--- a/pandas/_libs/tslibs/timezones.pxd
+++ b/pandas/_libs/tslibs/timezones.pxd
@@ -9,7 +9,7 @@ cdef bint treat_tz_as_pytz(tzinfo tz)
 
 cpdef bint tz_compare(tzinfo start, tzinfo end)
 cpdef object get_timezone(tzinfo tz)
-cpdef object maybe_get_tz(object tz)
+cpdef tzinfo maybe_get_tz(object tz)
 
 cdef timedelta get_utcoffset(tzinfo tz, datetime obj)
 cdef bint is_fixed_offset(tzinfo tz)
diff --git a/pandas/_libs/tslibs/timezones.pyx b/pandas/_libs/tslibs/timezones.pyx
index 3b2104f75..a8c785704 100644
--- a/pandas/_libs/tslibs/timezones.pyx
+++ b/pandas/_libs/tslibs/timezones.pyx
@@ -84,7 +84,7 @@ cpdef inline object get_timezone(tzinfo tz):
                 return tz
 
 
-cpdef inline object maybe_get_tz(object tz):
+cpdef inline tzinfo maybe_get_tz(object tz):
     """
     (Maybe) Construct a timezone object from a string. If tz is a string, use
     it to construct a timezone object. Otherwise, just return tz.
@@ -102,6 +102,12 @@ cpdef inline object maybe_get_tz(object tz):
             tz = pytz.timezone(tz)
     elif is_integer_object(tz):
         tz = pytz.FixedOffset(tz / 60)
+    elif isinstance(tz, tzinfo):
+        pass
+    elif tz is None:
+        pass
+    else:
+        raise TypeError(type(tz))
     return tz
 
 
diff --git a/pandas/tests/tslibs/test_timezones.py b/pandas/tests/tslibs/test_timezones.py
index 03cc8fcb6..81b41f567 100644
--- a/pandas/tests/tslibs/test_timezones.py
+++ b/pandas/tests/tslibs/test_timezones.py
@@ -106,3 +106,15 @@ def test_infer_tz_mismatch(infer_setup, ordered):
 
     with pytest.raises(AssertionError, match=msg):
         timezones.infer_tzinfo(*args)
+
+
+def test_maybe_get_tz_invalid_types():
+    with pytest.raises(TypeError, match="<class 'float'>"):
+        timezones.maybe_get_tz(44.0)
+
+    with pytest.raises(TypeError, match="<class 'module'>"):
+        timezones.maybe_get_tz(pytz)
+
+    msg = "<class 'pandas._libs.tslibs.timestamps.Timestamp'>"
+    with pytest.raises(TypeError, match=msg):
+        timezones.maybe_get_tz(Timestamp.now("UTC"))
