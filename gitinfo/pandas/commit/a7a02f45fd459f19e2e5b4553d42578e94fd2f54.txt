commit a7a02f45fd459f19e2e5b4553d42578e94fd2f54
Author: sinhrks <sinhrks@gmail.com>
Date:   Sun May 31 05:27:09 2015 +0900

    BUG: Series arithmetic methods incorrectly hold name

diff --git a/doc/source/whatsnew/v0.17.0.txt b/doc/source/whatsnew/v0.17.0.txt
index 9b87c6c13..842d7cf84 100644
--- a/doc/source/whatsnew/v0.17.0.txt
+++ b/doc/source/whatsnew/v0.17.0.txt
@@ -73,7 +73,7 @@ Bug Fixes
 - Bug in getting timezone data with ``dateutil`` on various platforms ( :issue:`9059`, :issue:`8639`, :issue:`9663`, :issue:`10121`)
 - Bug in display datetimes with mixed frequencies uniformly; display 'ms' datetimes to the proper precision. (:issue:`10170`)
 
-
+- Bung in ``Series`` arithmetic methods may incorrectly hold names (:issue:`10068`)
 
 - Bug in ``DatetimeIndex`` and ``TimedeltaIndex`` names are lost after timedelta arithmetics ( :issue:`9926`)
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 6367fb4fe..c54bd96f6 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -1508,7 +1508,12 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
         result = func(this_vals, other_vals)
         name = _maybe_match_name(self, other)
-        return self._constructor(result, index=new_index).__finalize__(self)
+        result = self._constructor(result, index=new_index, name=name)
+        result = result.__finalize__(self)
+        if name is None:
+            # When name is None, __finalize__ overwrites current name
+            result.name = None
+        return result
 
     def combine(self, other, func, fill_value=nan):
         """
diff --git a/pandas/tests/test_series.py b/pandas/tests/test_series.py
index 5a5b5fa2b..bbe942e60 100644
--- a/pandas/tests/test_series.py
+++ b/pandas/tests/test_series.py
@@ -264,10 +264,11 @@ class CheckNameIntegration(object):
         self.assertTrue('dt' not in dir(s))
 
     def test_binop_maybe_preserve_name(self):
-
         # names match, preserve
         result = self.ts * self.ts
         self.assertEqual(result.name, self.ts.name)
+        result = self.ts.mul(self.ts)
+        self.assertEqual(result.name, self.ts.name)
 
         result = self.ts * self.ts[:-2]
         self.assertEqual(result.name, self.ts.name)
@@ -277,6 +278,22 @@ class CheckNameIntegration(object):
         cp.name = 'something else'
         result = self.ts + cp
         self.assertIsNone(result.name)
+        result = self.ts.add(cp)
+        self.assertIsNone(result.name)
+
+        ops = ['add', 'sub', 'mul', 'div', 'truediv', 'floordiv', 'mod', 'pow']
+        ops = ops + ['r' + op for op in ops]
+        for op in ops:
+            # names match, preserve
+            s = self.ts.copy()
+            result = getattr(s, op)(s)
+            self.assertEqual(result.name, self.ts.name)
+
+            # names don't match, don't preserve
+            cp = self.ts.copy()
+            cp.name = 'changed'
+            result = getattr(s, op)(cp)
+            self.assertIsNone(result.name)
 
     def test_combine_first_name(self):
         result = self.ts.combine_first(self.ts[:5])
