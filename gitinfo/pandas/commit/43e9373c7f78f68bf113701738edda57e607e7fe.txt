commit 43e9373c7f78f68bf113701738edda57e607e7fe
Author: Phillip Cloud <cpcloud@gmail.com>
Date:   Tue Jun 3 18:58:11 2014 -0400

    BUG: already mixed indexes should not sort

diff --git a/pandas/core/index.py b/pandas/core/index.py
index 146b7cd0e..8b2c7bde4 100644
--- a/pandas/core/index.py
+++ b/pandas/core/index.py
@@ -2,7 +2,6 @@
 import datetime
 import warnings
 from functools import partial
-import warnings
 from pandas.compat import range, zip, lrange, lzip, u, reduce
 from pandas import compat
 import numpy as np
@@ -29,6 +28,9 @@ default_pprint = lambda x: com.pprint_thing(x, escape_chars=('\t', '\r', '\n'),
 __all__ = ['Index']
 
 
+_unsortable_types = frozenset(('mixed', 'mixed-integer'))
+
+
 def _try_get_item(x):
     try:
         return x.item()
@@ -1011,7 +1013,10 @@ class Index(IndexOpsMixin, FrozenNDArray):
                     warnings.warn("%s, sort order is undefined for "
                                   "incomparable objects" % e, RuntimeWarning)
                 else:
-                    result.sort()
+                    types = frozenset((self.inferred_type,
+                                       other.inferred_type))
+                    if not types & _unsortable_types:
+                        result.sort()
 
             else:
                 result = self.values
diff --git a/pandas/tests/test_index.py b/pandas/tests/test_index.py
index 5def2039c..29aed792b 100644
--- a/pandas/tests/test_index.py
+++ b/pandas/tests/test_index.py
@@ -793,7 +793,7 @@ class TestIndex(tm.TestCase):
 
         # union broken
         union_idx = idx1.union(idx2)
-        expected = pandas.Index(sorted(set(idx1) | set(idx2)))
+        expected = idx2
         self.assertEqual(union_idx.ndim, 1)
         self.assertTrue(union_idx.equals(expected))
 
