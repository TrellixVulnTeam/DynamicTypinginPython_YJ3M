commit 4292a27e7e64dc0da6fb6dade7b8304a4251360e
Author: Jeff Reback <jeff@reback.net>
Date:   Mon Nov 13 06:38:02 2017 -0500

    TST: move grouping test to correct location

diff --git a/pandas/tests/groupby/test_groupby.py b/pandas/tests/groupby/test_groupby.py
index a763dd170..03f780957 100644
--- a/pandas/tests/groupby/test_groupby.py
+++ b/pandas/tests/groupby/test_groupby.py
@@ -12,7 +12,7 @@ from pandas import (date_range, bdate_range, Timestamp,
 from pandas.errors import UnsupportedFunctionCall, PerformanceWarning
 from pandas.util.testing import (assert_frame_equal, assert_index_equal,
                                  assert_series_equal, assert_almost_equal)
-from pandas.compat import (range, long, lrange, StringIO, lmap, lzip, map, zip,
+from pandas.compat import (range, lrange, StringIO, lmap, lzip, map, zip,
                            builtins, OrderedDict)
 from pandas import compat
 from collections import defaultdict
@@ -2051,30 +2051,6 @@ class TestGroupBy(MixIn):
 
         assert_frame_equal(closure_bad, closure_good)
 
-    def test_multiindex_columns_empty_level(self):
-        l = [['count', 'values'], ['to filter', '']]
-        midx = MultiIndex.from_tuples(l)
-
-        df = DataFrame([[long(1), 'A']], columns=midx)
-
-        grouped = df.groupby('to filter').groups
-        assert grouped['A'] == [0]
-
-        grouped = df.groupby([('to filter', '')]).groups
-        assert grouped['A'] == [0]
-
-        df = DataFrame([[long(1), 'A'], [long(2), 'B']], columns=midx)
-
-        expected = df.groupby('to filter').groups
-        result = df.groupby([('to filter', '')]).groups
-        assert result == expected
-
-        df = DataFrame([[long(1), 'A'], [long(2), 'A']], columns=midx)
-
-        expected = df.groupby('to filter').groups
-        result = df.groupby([('to filter', '')]).groups
-        tm.assert_dict_equal(result, expected)
-
     def test_cython_median(self):
         df = DataFrame(np.random.randn(1000))
         df.values[::2] = np.nan
diff --git a/pandas/tests/groupby/test_grouping.py b/pandas/tests/groupby/test_grouping.py
index d94c691b1..cc422f2d1 100644
--- a/pandas/tests/groupby/test_grouping.py
+++ b/pandas/tests/groupby/test_grouping.py
@@ -9,7 +9,7 @@ from pandas import (date_range, Timestamp,
                     Index, MultiIndex, DataFrame, Series)
 from pandas.util.testing import (assert_panel_equal, assert_frame_equal,
                                  assert_series_equal, assert_almost_equal)
-from pandas.compat import lrange
+from pandas.compat import lrange, long
 
 from pandas import compat
 import numpy as np
@@ -356,6 +356,30 @@ class TestGrouping(MixIn):
         # it works!
         df.groupby(1, as_index=False)[2].agg({'Q': np.mean})
 
+    def test_multiindex_columns_empty_level(self):
+        lst = [['count', 'values'], ['to filter', '']]
+        midx = MultiIndex.from_tuples(lst)
+
+        df = DataFrame([[long(1), 'A']], columns=midx)
+
+        grouped = df.groupby('to filter').groups
+        assert grouped['A'] == [0]
+
+        grouped = df.groupby([('to filter', '')]).groups
+        assert grouped['A'] == [0]
+
+        df = DataFrame([[long(1), 'A'], [long(2), 'B']], columns=midx)
+
+        expected = df.groupby('to filter').groups
+        result = df.groupby([('to filter', '')]).groups
+        assert result == expected
+
+        df = DataFrame([[long(1), 'A'], [long(2), 'A']], columns=midx)
+
+        expected = df.groupby('to filter').groups
+        result = df.groupby([('to filter', '')]).groups
+        tm.assert_dict_equal(result, expected)
+
     def test_groupby_multiindex_tuple(self):
         # GH 17979
         df = pd.DataFrame([[1, 2, 3, 4], [3, 4, 5, 6], [1, 4, 2, 3]],
