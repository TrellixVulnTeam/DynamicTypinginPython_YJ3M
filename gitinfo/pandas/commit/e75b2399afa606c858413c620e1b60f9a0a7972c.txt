commit e75b2399afa606c858413c620e1b60f9a0a7972c
Author: Ksenia Gueletina <gueletina.ksenia@gmail.com>
Date:   Mon Nov 12 19:45:50 2018 -0500

    DOC: Fix name of the See Also section titles in docstrings (#23653)

diff --git a/pandas/_libs/tslibs/period.pyx b/pandas/_libs/tslibs/period.pyx
index a284d8fb5..d651e7567 100644
--- a/pandas/_libs/tslibs/period.pyx
+++ b/pandas/_libs/tslibs/period.pyx
@@ -1739,7 +1739,7 @@ cdef class _Period(object):
         -------
         Timestamp
 
-        See also
+        See Also
         --------
         Period.end_time : Return the end Timestamp.
         Period.dayofyear : Return the day of year.
diff --git a/pandas/core/accessor.py b/pandas/core/accessor.py
index 669473773..d178c66da 100644
--- a/pandas/core/accessor.py
+++ b/pandas/core/accessor.py
@@ -247,7 +247,7 @@ Back in an interactive IPython session:
     >>> ds.geo.plot()
     # plots data on a map
 
-See also
+See Also
 --------
 %(others)s
 """
diff --git a/pandas/core/arrays/categorical.py b/pandas/core/arrays/categorical.py
index 4363f3ccb..55f004034 100644
--- a/pandas/core/arrays/categorical.py
+++ b/pandas/core/arrays/categorical.py
@@ -313,7 +313,7 @@ class Categorical(ExtensionArray, PandasObject):
     See the `user guide
     <http://pandas.pydata.org/pandas-docs/stable/categorical.html>`_ for more.
 
-    See also
+    See Also
     --------
     pandas.api.types.CategoricalDtype : Type for categorical data
     CategoricalIndex : An Index with an underlying ``Categorical``
@@ -457,7 +457,7 @@ class Categorical(ExtensionArray, PandasObject):
             If the new categories do not validate as categories or if the
             number of new categories is unequal the number of old categories
 
-        See also
+        See Also
         --------
         rename_categories
         reorder_categories
@@ -823,7 +823,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         cat : Categorical with reordered categories or None if inplace.
 
-        See also
+        See Also
         --------
         rename_categories
         reorder_categories
@@ -894,7 +894,7 @@ class Categorical(ExtensionArray, PandasObject):
            With ``inplace=False``, the new categorical is returned.
            With ``inplace=True``, there is no return value.
 
-        See also
+        See Also
         --------
         reorder_categories
         add_categories
@@ -971,7 +971,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         cat : Categorical with reordered categories or None if inplace.
 
-        See also
+        See Also
         --------
         rename_categories
         add_categories
@@ -1010,7 +1010,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         cat : Categorical with new categories added or None if inplace.
 
-        See also
+        See Also
         --------
         rename_categories
         reorder_categories
@@ -1058,7 +1058,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         cat : Categorical with removed categories or None if inplace.
 
-        See also
+        See Also
         --------
         rename_categories
         reorder_categories
@@ -1100,7 +1100,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         cat : Categorical with unused categories dropped or None if inplace.
 
-        See also
+        See Also
         --------
         rename_categories
         reorder_categories
@@ -1364,7 +1364,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         a boolean array of whether my values are null
 
-        See also
+        See Also
         --------
         isna : top-level isna
         isnull : alias of isna
@@ -1387,7 +1387,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         a boolean array of whether my values are not null
 
-        See also
+        See Also
         --------
         notna : top-level notna
         notnull : alias of notna
@@ -1503,7 +1503,7 @@ class Categorical(ExtensionArray, PandasObject):
         -------
         argsorted : numpy array
 
-        See also
+        See Also
         --------
         numpy.ndarray.argsort
 
@@ -2322,7 +2322,7 @@ class Categorical(ExtensionArray, PandasObject):
         """
         Repeat elements of a Categorical.
 
-        See also
+        See Also
         --------
         numpy.ndarray.repeat
 
diff --git a/pandas/core/arrays/datetimes.py b/pandas/core/arrays/datetimes.py
index a6f688fb0..926228f26 100644
--- a/pandas/core/arrays/datetimes.py
+++ b/pandas/core/arrays/datetimes.py
@@ -874,7 +874,7 @@ class DatetimeArrayMixin(dtl.DatetimeLikeArrayMixin):
         PeriodIndex(['2017-01-01', '2017-01-02'],
                     dtype='period[D]', freq='D')
 
-        See also
+        See Also
         --------
         pandas.PeriodIndex: Immutable ndarray holding ordinal values
         pandas.DatetimeIndex.to_pydatetime: Return DatetimeIndex as object
diff --git a/pandas/core/arrays/period.py b/pandas/core/arrays/period.py
index b343d42ef..faba404fa 100644
--- a/pandas/core/arrays/period.py
+++ b/pandas/core/arrays/period.py
@@ -636,7 +636,7 @@ class PeriodArray(dtl.DatetimeLikeArrayMixin, ExtensionArray):
         """
         Repeat elements of a PeriodArray.
 
-        See also
+        See Also
         --------
         numpy.ndarray.repeat
         """
diff --git a/pandas/core/base.py b/pandas/core/base.py
index de368f52b..5533054fc 100644
--- a/pandas/core/base.py
+++ b/pandas/core/base.py
@@ -820,7 +820,7 @@ class IndexOpsMixin(object):
         """
         return a ndarray of the maximum argument indexer
 
-        See also
+        See Also
         --------
         numpy.ndarray.argmax
         """
@@ -863,7 +863,7 @@ class IndexOpsMixin(object):
         """
         return a ndarray of the minimum argument indexer
 
-        See also
+        See Also
         --------
         numpy.ndarray.argmin
         """
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index f6f91ff50..cef811d71 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -346,7 +346,7 @@ class DataFrame(NDFrame):
     1  4  5  6
     2  7  8  9
 
-    See also
+    See Also
     --------
     DataFrame.from_records : constructor from tuples, also record arrays
     DataFrame.from_dict : from dicts of Series, arrays, or dicts
@@ -1694,7 +1694,7 @@ class DataFrame(NDFrame):
             datetime format based on the first datetime string. If the format
             can be inferred, there often will be a large parsing speed-up.
 
-        See also
+        See Also
         --------
         pandas.read_csv
 
@@ -5592,7 +5592,7 @@ class DataFrame(NDFrame):
         -------
         table : DataFrame
 
-        See also
+        See Also
         --------
         DataFrame.pivot : pivot without aggregation that can handle
             non-numeric data
@@ -5797,7 +5797,7 @@ class DataFrame(NDFrame):
 
             .. versionadded:: 0.18.0
 
-        See also
+        See Also
         --------
         DataFrame.pivot : Pivot a table based on column values.
         DataFrame.stack : Pivot a level of the column labels (inverse operation
@@ -5867,7 +5867,7 @@ class DataFrame(NDFrame):
     col_level : int or string, optional
         If columns are a MultiIndex then use this level to melt.
 
-    See also
+    See Also
     --------
     %(other)s
     pivot_table
@@ -6108,7 +6108,7 @@ class DataFrame(NDFrame):
     3    NaN
     dtype: float64
 
-    See also
+    See Also
     --------
     DataFrame.apply : Perform any type of operations.
     DataFrame.transform : Perform transformation type operations.
@@ -6242,7 +6242,7 @@ class DataFrame(NDFrame):
         side-effects, as they will take effect twice for the first
         column/row.
 
-        See also
+        See Also
         --------
         DataFrame.applymap: For elementwise operations
         DataFrame.aggregate: only perform aggregating type operations
@@ -6351,7 +6351,7 @@ class DataFrame(NDFrame):
         DataFrame
             Transformed DataFrame.
 
-        See also
+        See Also
         --------
         DataFrame.apply : Apply a function along input axis of DataFrame
 
@@ -6434,7 +6434,7 @@ class DataFrame(NDFrame):
         those rows to a list and then concatenate the list with the original
         DataFrame all at once.
 
-        See also
+        See Also
         --------
         pandas.concat : General function to concatenate DataFrame, Series
             or Panel objects
diff --git a/pandas/core/generic.py b/pandas/core/generic.py
index 2cb3df421..80ea084cc 100644
--- a/pandas/core/generic.py
+++ b/pandas/core/generic.py
@@ -1850,7 +1850,7 @@ class NDFrame(PandasObject, SelectionMixin):
         >>> df.dropna().empty
         True
 
-        See also
+        See Also
         --------
         pandas.Series.dropna
         pandas.DataFrame.dropna
@@ -5309,7 +5309,7 @@ class NDFrame(PandasObject, SelectionMixin):
         1     2
         dtype: int64
 
-        See also
+        See Also
         --------
         pandas.to_datetime : Convert argument to datetime.
         pandas.to_timedelta : Convert argument to timedelta.
@@ -10090,7 +10090,7 @@ False
 """
 
 _all_see_also = """\
-See also
+See Also
 --------
 pandas.Series.all : Return True if all elements are True
 pandas.DataFrame.any : Return True if one (or more) elements are True
@@ -10117,7 +10117,7 @@ Returns
 -------
 %(outname)s : %(name1)s or %(name2)s\n
 %(examples)s
-See also
+See Also
 --------
 pandas.core.window.Expanding.%(accum_func_name)s : Similar functionality
     but ignores ``NaN`` values.
diff --git a/pandas/core/groupby/generic.py b/pandas/core/groupby/generic.py
index b0477c7d3..ee84f8cda 100644
--- a/pandas/core/groupby/generic.py
+++ b/pandas/core/groupby/generic.py
@@ -734,7 +734,7 @@ class SeriesGroupBy(GroupBy):
     1    1    2
     2    3    4
 
-    See also
+    See Also
     --------
     pandas.Series.groupby.apply
     pandas.Series.groupby.transform
@@ -1289,7 +1289,7 @@ class DataFrameGroupBy(NDFrameGroupBy):
     1   1   2  0.590716
     2   3   4  0.704907
 
-    See also
+    See Also
     --------
     pandas.DataFrame.groupby.apply
     pandas.DataFrame.groupby.transform
diff --git a/pandas/core/groupby/groupby.py b/pandas/core/groupby/groupby.py
index 12327e1cf..5041449b4 100644
--- a/pandas/core/groupby/groupby.py
+++ b/pandas/core/groupby/groupby.py
@@ -43,7 +43,7 @@ from pandas.core.sorting import get_group_index_sorter
 
 _doc_template = """
 
-        See also
+        See Also
         --------
         pandas.Series.%(name)s
         pandas.DataFrame.%(name)s
@@ -91,7 +91,7 @@ _apply_docs = dict(
     --------
     {examples}
 
-    See also
+    See Also
     --------
     pipe : Apply function to the full GroupBy object instead of to each
         group.
@@ -253,7 +253,7 @@ Returns
 -------
 %(klass)s
 
-See also
+See Also
 --------
 aggregate, transform
 
@@ -1624,7 +1624,7 @@ class GroupBy(_GroupBy):
         5    0
         dtype: int64
 
-        See also
+        See Also
         --------
         .cumcount : Number the rows in each group.
         """
@@ -1680,7 +1680,7 @@ class GroupBy(_GroupBy):
         5    0
         dtype: int64
 
-        See also
+        See Also
         --------
         .ngroup : Number the groups themselves.
         """
diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index 263de57d3..2b916f35a 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -876,7 +876,7 @@ class Index(IndexOpsMixin, PandasObject):
         """
         return an ndarray of the flattened values of the underlying data
 
-        See also
+        See Also
         --------
         numpy.ndarray.ravel
         """
@@ -2160,7 +2160,7 @@ class Index(IndexOpsMixin, PandasObject):
             If allow_fill=True and fill_value is not None, indices specified by
             -1 is regarded as NA. If Index doesn't hold NA, raise ValueError
 
-        See also
+        See Also
         --------
         numpy.ndarray.take
         """
@@ -2305,7 +2305,7 @@ class Index(IndexOpsMixin, PandasObject):
         numpy.ndarray
             Boolean array to indicate which entries are not NA.
 
-        See also
+        See Also
         --------
         Index.notnull : alias of notna
         Index.isna: inverse of notna
@@ -2338,7 +2338,7 @@ class Index(IndexOpsMixin, PandasObject):
         """
         return a new Index of the values set with the mask
 
-        See also
+        See Also
         --------
         numpy.ndarray.putmask
         """
@@ -2695,7 +2695,7 @@ class Index(IndexOpsMixin, PandasObject):
             Integer indices that would sort the index if used as
             an indexer.
 
-        See also
+        See Also
         --------
         numpy.argsort : Similar method for NumPy arrays.
         Index.sort_values : Return sorted copy of Index.
@@ -3202,7 +3202,7 @@ class Index(IndexOpsMixin, PandasObject):
         values : Index
             Calling object, as there is only one level in the Index.
 
-        See also
+        See Also
         --------
         MultiIndex.get_level_values : get values for a level of a MultiIndex
 
@@ -3607,7 +3607,7 @@ class Index(IndexOpsMixin, PandasObject):
         is_contained : ndarray
             NumPy array of boolean values.
 
-        See also
+        See Also
         --------
         Series.isin : Same for Series.
         DataFrame.isin : Same method for DataFrames.
diff --git a/pandas/core/indexes/datetimelike.py b/pandas/core/indexes/datetimelike.py
index 2ce6a0ec2..3f9a60f6d 100644
--- a/pandas/core/indexes/datetimelike.py
+++ b/pandas/core/indexes/datetimelike.py
@@ -436,7 +436,7 @@ class DatetimeIndexOpsMixin(DatetimeLikeArrayMixin):
         Return the minimum value of the Index or minimum along
         an axis.
 
-        See also
+        See Also
         --------
         numpy.ndarray.min
         """
@@ -465,7 +465,7 @@ class DatetimeIndexOpsMixin(DatetimeLikeArrayMixin):
         See `numpy.ndarray.argmin` for more information on the
         `axis` parameter.
 
-        See also
+        See Also
         --------
         numpy.ndarray.argmin
         """
@@ -486,7 +486,7 @@ class DatetimeIndexOpsMixin(DatetimeLikeArrayMixin):
         Return the maximum value of the Index or maximum along
         an axis.
 
-        See also
+        See Also
         --------
         numpy.ndarray.max
         """
@@ -515,7 +515,7 @@ class DatetimeIndexOpsMixin(DatetimeLikeArrayMixin):
         See `numpy.ndarray.argmax` for more information on the
         `axis` parameter.
 
-        See also
+        See Also
         --------
         numpy.ndarray.argmax
         """
diff --git a/pandas/core/indexes/multi.py b/pandas/core/indexes/multi.py
index 01304cce5..7a188dd7b 100644
--- a/pandas/core/indexes/multi.py
+++ b/pandas/core/indexes/multi.py
@@ -1176,7 +1176,7 @@ class MultiIndex(Index):
         -------
         DataFrame : a DataFrame containing the original MultiIndex data.
 
-        See also
+        See Also
         --------
         DataFrame
         """
@@ -2204,7 +2204,7 @@ class MultiIndex(Index):
         or a sequence of such. If you want to use those, use
         :meth:`MultiIndex.get_locs` instead.
 
-        See also
+        See Also
         --------
         Index.get_loc : get_loc method for (single-level) index.
         MultiIndex.slice_locs : Get slice location given start label(s) and
@@ -2530,7 +2530,7 @@ class MultiIndex(Index):
         >>> mi.get_locs([[True, False, True], slice('e', 'f')])
         array([2], dtype=int64)
 
-        See also
+        See Also
         --------
         MultiIndex.get_loc : Get location for a label or a tuple of labels.
         MultiIndex.slice_locs : Get slice location given start label(s) and
@@ -2657,7 +2657,7 @@ class MultiIndex(Index):
         Determines if two MultiIndex objects have the same labeling information
         (the levels themselves do not necessarily have to be the same)
 
-        See also
+        See Also
         --------
         equal_levels
         """
diff --git a/pandas/core/indexes/numeric.py b/pandas/core/indexes/numeric.py
index 795ffeefa..bdd0bf405 100644
--- a/pandas/core/indexes/numeric.py
+++ b/pandas/core/indexes/numeric.py
@@ -155,7 +155,7 @@ _num_index_shared_docs['class_descr'] = """
     -----
     An Index instance can **only** contain hashable objects.
 
-    See also
+    See Also
     --------
     Index : The base pandas Index type
 """
diff --git a/pandas/core/indexes/range.py b/pandas/core/indexes/range.py
index e4c177a08..e689eb4a7 100644
--- a/pandas/core/indexes/range.py
+++ b/pandas/core/indexes/range.py
@@ -305,7 +305,7 @@ class RangeIndex(Int64Index):
         -------
         argsorted : numpy array
 
-        See also
+        See Also
         --------
         numpy.ndarray.argsort
         """
diff --git a/pandas/core/ops.py b/pandas/core/ops.py
index fbfdfb9c0..1f422a609 100644
--- a/pandas/core/ops.py
+++ b/pandas/core/ops.py
@@ -88,7 +88,7 @@ def _maybe_match_name(a, b):
     -------
     name : str or None
 
-    See also
+    See Also
     --------
     pandas.core.common.consensus_name_attr
     """
@@ -609,7 +609,7 @@ d    1.0
 e    NaN
 dtype: float64
 
-See also
+See Also
 --------
 Series.{reverse}
 """
@@ -673,7 +673,7 @@ Examples
 --------
 {df_examples}
 
-See also
+See Also
 --------
 DataFrame.{reverse}
 """
@@ -692,7 +692,7 @@ Returns
 -------
 Panel
 
-See also
+See Also
 --------
 Panel.{reverse}
 """
diff --git a/pandas/core/resample.py b/pandas/core/resample.py
index 36476a8ec..0a275c7a3 100644
--- a/pandas/core/resample.py
+++ b/pandas/core/resample.py
@@ -239,7 +239,7 @@ one pass, you can do
     2013-01-01 00:00:02      7  4.949747
     2013-01-01 00:00:04      5       NaN
 
-    See also
+    See Also
     --------
     pandas.DataFrame.groupby.aggregate
     pandas.DataFrame.resample.transform
@@ -983,7 +983,7 @@ class DatetimeIndexResampler(Resampler):
         fill_value : scalar, default None
             Value to use for missing values
 
-        See also
+        See Also
         --------
         .fillna
 
@@ -1113,7 +1113,7 @@ class PeriodIndexResampler(DatetimeIndexResampler):
         fill_value : scalar, default None
             Value to use for missing values
 
-        See also
+        See Also
         --------
         .fillna
 
diff --git a/pandas/core/reshape/merge.py b/pandas/core/reshape/merge.py
index e09cf0a52..3d6f55c90 100644
--- a/pandas/core/reshape/merge.py
+++ b/pandas/core/reshape/merge.py
@@ -199,7 +199,7 @@ def merge_ordered(left, right, on=None,
         The output type will the be same as 'left', if it is a subclass
         of DataFrame.
 
-    See also
+    See Also
     --------
     merge
     merge_asof
@@ -447,7 +447,7 @@ def merge_asof(left, right, on=None,
     3 2016-05-25 13:30:00.048   GOOG  720.92       100     NaN     NaN
     4 2016-05-25 13:30:00.048   AAPL   98.00       100     NaN     NaN
 
-    See also
+    See Also
     --------
     merge
     merge_ordered
diff --git a/pandas/core/reshape/util.py b/pandas/core/reshape/util.py
index 07f727239..7f43a0e97 100644
--- a/pandas/core/reshape/util.py
+++ b/pandas/core/reshape/util.py
@@ -26,7 +26,7 @@ def cartesian_product(X):
     [array(['A', 'A', 'B', 'B', 'C', 'C'], dtype='|S1'),
     array([1, 2, 1, 2, 1, 2])]
 
-    See also
+    See Also
     --------
     itertools.product : Cartesian product of input iterables.  Equivalent to
         nested for-loops.
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 20e4720a3..6617bf850 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -475,7 +475,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         """
         Return the flattened underlying data as an ndarray
 
-        See also
+        See Also
         --------
         numpy.ndarray.ravel
         """
@@ -487,7 +487,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
 
         .. deprecated:: 0.24.0
 
-        See also
+        See Also
         --------
         numpy.ndarray.compress
         """
@@ -538,7 +538,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         Applies the `put` method to its `values` attribute
         if it has one.
 
-        See also
+        See Also
         --------
         numpy.ndarray.put
         """
@@ -992,7 +992,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         Repeat elements of an Series. Refer to `numpy.ndarray.repeat`
         for more information about the `repeats` argument.
 
-        See also
+        See Also
         --------
         numpy.ndarray.repeat
         """
@@ -2181,7 +2181,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         list and then concatenate the list with the original Series all at
         once.
 
-        See also
+        See Also
         --------
         pandas.concat : General function to concatenate DataFrame, Series
             or Panel objects
@@ -2784,7 +2784,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         -------
         argsorted : Series, with -1 indicated where nan values are present
 
-        See also
+        See Also
         --------
         numpy.ndarray.argsort
         """
@@ -3198,7 +3198,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
     max   4
     dtype: int64
 
-    See also
+    See Also
     --------
     pandas.Series.apply : Invoke function on a Series.
     pandas.Series.transform : Transform function producing
@@ -3263,7 +3263,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         -------
         y : Series or DataFrame if func returns a Series
 
-        See also
+        See Also
         --------
         Series.map: For element-wise operations
         Series.agg: only perform aggregating type operations
@@ -3891,7 +3891,7 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
             datetime format based on the first datetime string. If the format
             can be inferred, there often will be a large parsing speed-up.
 
-        See also
+        See Also
         --------
         pandas.read_csv
 
diff --git a/pandas/core/tools/datetimes.py b/pandas/core/tools/datetimes.py
index dcba51d26..0eb2ffeab 100644
--- a/pandas/core/tools/datetimes.py
+++ b/pandas/core/tools/datetimes.py
@@ -543,7 +543,7 @@ def to_datetime(arg, errors='raise', dayfirst=False, yearfirst=False,
     1    1960-01-03
     2    1960-01-04
 
-    See also
+    See Also
     --------
     pandas.DataFrame.astype : Cast argument to a specified dtype.
     pandas.to_timedelta : Convert argument to timedelta.
diff --git a/pandas/core/tools/numeric.py b/pandas/core/tools/numeric.py
index 4bb5c223d..126999271 100644
--- a/pandas/core/tools/numeric.py
+++ b/pandas/core/tools/numeric.py
@@ -88,7 +88,7 @@ def to_numeric(arg, errors='raise', downcast=None):
     3   -3.0
     dtype: float64
 
-    See also
+    See Also
     --------
     pandas.DataFrame.astype : Cast argument to a specified dtype.
     pandas.to_datetime : Convert argument to datetime.
diff --git a/pandas/core/tools/timedeltas.py b/pandas/core/tools/timedeltas.py
index 58673c80c..db93820c6 100644
--- a/pandas/core/tools/timedeltas.py
+++ b/pandas/core/tools/timedeltas.py
@@ -68,7 +68,7 @@ def to_timedelta(arg, unit='ns', box=True, errors='raise'):
     TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'],
                    dtype='timedelta64[ns]', freq=None)
 
-    See also
+    See Also
     --------
     pandas.DataFrame.astype : Cast argument to a specified dtype.
     pandas.to_datetime : Convert argument to datetime.
diff --git a/pandas/core/window.py b/pandas/core/window.py
index be28a3bcc..b250851a1 100644
--- a/pandas/core/window.py
+++ b/pandas/core/window.py
@@ -50,7 +50,7 @@ Returns
 -------
 same type as input
 
-See also
+See Also
 --------
 pandas.Series.%(name)s
 pandas.DataFrame.%(name)s
@@ -733,7 +733,7 @@ class Window(_Window):
     8 -0.096361  0.818139  0.472290
     9  0.070889  0.134399 -0.031308
 
-    See also
+    See Also
     --------
     pandas.DataFrame.rolling.aggregate
     pandas.DataFrame.aggregate
@@ -1640,7 +1640,7 @@ class Rolling(_Rolling_and_Expanding):
     8 -0.289082 -1.647453
     9  0.212668 -1.647453
 
-    See also
+    See Also
     --------
     pandas.Series.rolling
     pandas.DataFrame.rolling
@@ -1916,7 +1916,7 @@ class Expanding(_Rolling_and_Expanding):
     8  0.067236  0.948257  0.163353
     9 -0.286980  0.618493 -0.694496
 
-    See also
+    See Also
     --------
     pandas.DataFrame.expanding.aggregate
     pandas.DataFrame.rolling.aggregate
@@ -2219,7 +2219,7 @@ class EWM(_Rolling):
     8  0.067236  0.948257  0.163353
     9 -0.286980  0.618493 -0.694496
 
-    See also
+    See Also
     --------
     pandas.DataFrame.rolling.aggregate
 
diff --git a/pandas/io/json/table_schema.py b/pandas/io/json/table_schema.py
index 3b4ebb638..5cbecaf14 100644
--- a/pandas/io/json/table_schema.py
+++ b/pandas/io/json/table_schema.py
@@ -290,7 +290,7 @@ def parse_table_schema(json, precise_float):
         :class:`Index` name of 'index'  and :class:`MultiIndex` names starting
         with 'level_' are not supported.
 
-    See also
+    See Also
     --------
     build_table_schema : inverse function
     pandas.read_json
diff --git a/pandas/io/sql.py b/pandas/io/sql.py
index 2f411a956..db4053904 100644
--- a/pandas/io/sql.py
+++ b/pandas/io/sql.py
@@ -222,7 +222,7 @@ def read_sql_table(table_name, con, schema=None, index_col=None,
     -----
     Any datetime values with time zone information will be converted to UTC.
 
-    See also
+    See Also
     --------
     read_sql_query : Read SQL query into a DataFrame.
     read_sql
@@ -302,7 +302,7 @@ def read_sql_query(sql, con, index_col=None, coerce_float=True, params=None,
     Any datetime values with time zone information parsed via the `parse_dates`
     parameter will be converted to UTC.
 
-    See also
+    See Also
     --------
     read_sql_table : Read SQL database table into a DataFrame.
     read_sql
@@ -366,7 +366,7 @@ def read_sql(sql, con, index_col=None, coerce_float=True, params=None,
     -------
     DataFrame
 
-    See also
+    See Also
     --------
     read_sql_table : Read SQL database table into a DataFrame.
     read_sql_query : Read SQL query into a DataFrame.
@@ -1002,7 +1002,7 @@ class SQLDatabase(PandasSQL):
         -------
         DataFrame
 
-        See also
+        See Also
         --------
         pandas.read_sql_table
         SQLDatabase.read_query
@@ -1063,7 +1063,7 @@ class SQLDatabase(PandasSQL):
         -------
         DataFrame
 
-        See also
+        See Also
         --------
         read_sql_table : Read SQL database table into a DataFrame
         read_sql
