commit 868d11420b408d93aecc5e3f366142d23c97152f
Author: gfyoung <gfyoung17@gmail.com>
Date:   Thu Dec 22 06:27:29 2016 -0500

    BUG: Patch maybe_convert_objects uint64 handling (#14951)
    
    Makes method robust against known NumPy bug
    that you can't compare uint64 against int64
    because they are casted to float64 during
    the comparison, causing truncation.

diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index 2f829417f..97d786bf8 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -810,7 +810,7 @@ def maybe_convert_objects(ndarray[object] objects, bint try_float=0,
             floats[i] = <float64_t> val
             complexes[i] = <double complex> val
             if not seen_null:
-                seen_uint = seen_uint or (val > npy_int64_max)
+                seen_uint = seen_uint or (int(val) > npy_int64_max)
                 seen_sint = seen_sint or (val < 0)
 
                 if seen_uint and seen_sint:
diff --git a/pandas/tests/types/test_inference.py b/pandas/tests/types/test_inference.py
index f83ad51c2..fb8f3ca0b 100644
--- a/pandas/tests/types/test_inference.py
+++ b/pandas/tests/types/test_inference.py
@@ -260,6 +260,13 @@ class TestInference(tm.TestCase):
         exp = np.array([2**63], dtype=np.uint64)
         tm.assert_numpy_array_equal(lib.maybe_convert_objects(arr), exp)
 
+        # NumPy bug: can't compare uint64 to int64, as that
+        # results in both casting to float64, so we should
+        # make sure that this function is robust against it
+        arr = np.array([np.uint64(2**63)], dtype=object)
+        exp = np.array([2**63], dtype=np.uint64)
+        tm.assert_numpy_array_equal(lib.maybe_convert_objects(arr), exp)
+
         arr = np.array([2, -1], dtype=object)
         exp = np.array([2, -1], dtype=np.int64)
         tm.assert_numpy_array_equal(lib.maybe_convert_objects(arr), exp)
