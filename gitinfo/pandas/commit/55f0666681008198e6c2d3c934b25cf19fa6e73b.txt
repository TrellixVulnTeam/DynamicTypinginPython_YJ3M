commit 55f0666681008198e6c2d3c934b25cf19fa6e73b
Author: Matthew Roeschke <emailformattr@gmail.com>
Date:   Fri Jul 5 07:29:34 2019 -0700

    BUG: merge_asof with multiple by columns with tz (#27243)

diff --git a/doc/source/whatsnew/v0.25.0.rst b/doc/source/whatsnew/v0.25.0.rst
index ab242ece9..101addfa0 100644
--- a/doc/source/whatsnew/v0.25.0.rst
+++ b/doc/source/whatsnew/v0.25.0.rst
@@ -1151,6 +1151,7 @@ Reshaping
 - Bug in :func:`DataFrame.pivot_table` with a :class:`IntervalIndex` as pivot index would raise ``TypeError`` (:issue:`25814`)
 - Bug in :meth:`DataFrame.transpose` where transposing a DataFrame with a timezone-aware datetime column would incorrectly raise ``ValueError`` (:issue:`26825`)
 - Bug in :func:`pivot_table` when pivoting a timezone aware column as the ``values`` would remove timezone information (:issue:`14948`)
+- Bug in :func:`merge_asof` when specifying multiple ``by`` columns where one is ``datetime64[ns, tz]`` dtype (:issue:`26649`)
 
 Sparse
 ^^^^^^
diff --git a/pandas/core/reshape/merge.py b/pandas/core/reshape/merge.py
index 4f910f6a2..c1a07c129 100644
--- a/pandas/core/reshape/merge.py
+++ b/pandas/core/reshape/merge.py
@@ -1686,6 +1686,9 @@ class _AsOfMerge(_OrderedMerge):
 
         def flip(xs):
             """ unlike np.transpose, this returns an array of tuples """
+            xs = [
+                x if not is_extension_array_dtype(x) else x._ndarray_values for x in xs
+            ]
             labels = list(string.ascii_lowercase[: len(xs)])
             dtypes = [x.dtype for x in xs]
             labeled_dtypes = list(zip(labels, dtypes))
diff --git a/pandas/tests/reshape/merge/test_merge_asof.py b/pandas/tests/reshape/merge/test_merge_asof.py
index e2e173974..6b66386ba 100644
--- a/pandas/tests/reshape/merge/test_merge_asof.py
+++ b/pandas/tests/reshape/merge/test_merge_asof.py
@@ -190,9 +190,9 @@ class TestAsOfMerge:
         result = merge_asof(
             trades, quotes, left_index=True, right_on="time", by="ticker"
         )
-        # left-only index uses right's index, oddly
+        # left-only index uses right"s index, oddly
         expected.index = result.index
-        # time column appears after left's columns
+        # time column appears after left"s columns
         expected = expected[result.columns]
         assert_frame_equal(result, expected)
 
@@ -233,7 +233,7 @@ class TestAsOfMerge:
 
     def test_on_and_index(self):
 
-        # 'on' parameter and index together is prohibited
+        # "on" parameter and index together is prohibited
         trades = self.trades.set_index("time")
         quotes = self.quotes.set_index("time")
         with pytest.raises(MergeError):
@@ -1220,3 +1220,29 @@ class TestAsOfMerge:
             columns=["by_col", "on_col", "values_x", "values_y"],
         )
         assert_frame_equal(result, expected)
+
+    def test_by_mixed_tz_aware(self):
+        # GH 26649
+        left = pd.DataFrame(
+            {
+                "by_col1": pd.DatetimeIndex(["2018-01-01"]).tz_localize("UTC"),
+                "by_col2": ["HELLO"],
+                "on_col": [2],
+                "value": ["a"],
+            }
+        )
+        right = pd.DataFrame(
+            {
+                "by_col1": pd.DatetimeIndex(["2018-01-01"]).tz_localize("UTC"),
+                "by_col2": ["WORLD"],
+                "on_col": [1],
+                "value": ["b"],
+            }
+        )
+        result = pd.merge_asof(left, right, by=["by_col1", "by_col2"], on="on_col")
+        expected = pd.DataFrame(
+            [[pd.Timestamp("2018-01-01", tz="UTC"), "HELLO", 2, "a"]],
+            columns=["by_col1", "by_col2", "on_col", "value_x"],
+        )
+        expected["value_y"] = np.array([np.nan], dtype=object)
+        assert_frame_equal(result, expected)
