commit 378adfbd1e042a2c45770fc6a1afc9fbf970cfed
Author: y-p <yoval@gmx.com>
Date:   Sun Mar 31 18:53:16 2013 +0300

    Revert "BLD: Travis revamped their log widget, be verbose and fold furiously"
    
    This reverts commit 18d3893c651cb74078519a3edd8aaf10b4bb612b.
    
    Log file is too big, display is delayed too much

diff --git a/.travis.yml b/.travis.yml
index a5f963e04..6842f5584 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,9 +1,8 @@
 language: python
 
-# travis insist on having at least one entry here, rather then
-# all in the matrix section
 python:
   - 2.6
+  - 3.3
 
 env:
   global:
@@ -17,8 +16,6 @@ matrix:
       env: FULL_DEPS=true
     - python: 3.2
       env: FULL_DEPS=true
-    - python: 3.3
-
 
 # allow importing from site-packages,
 # so apt-get python-x works for system pythons
@@ -30,8 +27,8 @@ before_install:
   - echo "Waldo1"
   - echo $VIRTUAL_ENV
   - date
-  # - export PIP_ARGS=-q # comment this this to debug travis install issues
-  # - export APT_ARGS=-qq # comment this to debug travis install issues
+  - export PIP_ARGS=-q # comment this this to debug travis install issues
+  - export APT_ARGS=-qq # comment this to debug travis install issues
   # - set -x # enable this to see bash commands
   - source ci/before_install.sh # we need to source this to bring in the env
   - python -V
diff --git a/ci/install.sh b/ci/install.sh
index d158b0f98..442b999a9 100755
--- a/ci/install.sh
+++ b/ci/install.sh
@@ -6,30 +6,8 @@ echo "inside $0"
 # workaround for travis ignoring system_site_packages in travis.yml
 rm -f $VIRTUAL_ENV/lib/python$TRAVIS_PYTHON_VERSION/no-global-site-packages.txt
 
-function pip_install {
-    NAME="$1"
-    if [ x"$2" != x"$2" ]; then
-        NAME=$2;
-    fi
-    echo "travis_fold:begin:$NAME"
-    pip install $PIP_ARGS  "$1"
-    echo "travis_fold:end:$NAME"
-}
-function apt_install {
-    NAME=$1
-    if [ x"$2" != x"!2" ]; then
-        NAME=$2;
-    fi
-    echo "travis_fold:begin:$NAME"
-    sudo apt-get install $APT_ARGS "$1"
-    echo "travis_fold:end:$NAME"
-}
-
 # Hard Deps
-pip_install cython
-pip_install nose
-pip_install python-dateutil
-pip_install pytz
+pip install $PIP_ARGS --use-mirrors cython nose python-dateutil pytz
 
 # try and get numpy as a binary deb
 
@@ -39,63 +17,59 @@ pip_install pytz
 # fi
 
 if [ ${TRAVIS_PYTHON_VERSION} == "3.2" ]; then
-    apt_install  python3-numpy;
+    sudo apt-get $APT_ARGS install python3-numpy;
 elif [ ${TRAVIS_PYTHON_VERSION} == "3.3" ] || [  x"$LOCALE_OVERRIDE" != x""  ]; then # should be >=3,3
-    pip_install numpy==1.7.0
+    pip $PIP_ARGS install https://github.com/numpy/numpy/archive/v1.7.0.tar.gz;
 else
-     pip_install numpy==1.6.1
+     pip install numpy==1.6.1
 fi
 
 # Optional Deps
 if [ x"$FULL_DEPS" == x"true" ]; then
     echo "Installing FULL_DEPS"
     if [ ${TRAVIS_PYTHON_VERSION} == "2.7" ]; then
-        apt_install python-scipy;
+        sudo apt-get $APT_ARGS install python-scipy;
     fi
 
     if [ ${TRAVIS_PYTHON_VERSION} == "3.2" ]; then
-        apt_install $APT_ARGS install python3-scipy;
+        sudo apt-get $APT_ARGS install python3-scipy;
     fi
 
     if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
         sudo apt-get $APT_ARGS install libhdf5-serial-dev;
-        pip_install numexpr
-        pip_install tables
+        pip install numexpr
+        pip install tables
     fi
 
-    pip_install matplotlib;
-    pip_install openpyxl;
-    pip_install xlwt;
-    pip_install xlrd ;
-    pip_install 'http://downloads.sourceforge.net/project/pytseries/scikits.timeseries/0.91.3/scikits.timeseries-0.91.3.tar.gz?r=' scikit.timeseries
+    pip install $PIP_ARGS --use-mirrors openpyxl matplotlib;
+    pip install $PIP_ARGS --use-mirrors xlrd xlwt;
+    pip install $PIP_ARGS 'http://downloads.sourceforge.net/project/pytseries/scikits.timeseries/0.91.3/scikits.timeseries-0.91.3.tar.gz?r='
 fi
 
-# if [ x"$VBENCH" == x"true" ]; then
-#     if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
-#         sudo apt-get $APT_ARGS install libhdf5-serial-dev;
-#         pip install numexpr
-#         pip install tables
-#     fi
-#     pip $PIP_ARGS install sqlalchemy git+git://github.com/pydata/vbench.git;
-# fi
+if [ x"$VBENCH" == x"true" ]; then
+    if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
+        sudo apt-get $APT_ARGS install libhdf5-serial-dev;
+        pip install numexpr
+        pip install tables
+    fi
+    pip $PIP_ARGS install sqlalchemy git+git://github.com/pydata/vbench.git;
+fi
 
 #build and install pandas
-echo "travis_fold:begin:pandas-install"
 python setup.py build_ext install
-echo "travis_fold:end:pandas-install"
 
 #HACK: pandas is a statsmodels dependency
 # so we need to install it after pandas
 if [ x"$FULL_DEPS" == x"true" ]; then
-    pip_install patsy
+    pip install patsy
     # pick recent 0.5dev dec/2012
-    pip_install git+git://github.com/statsmodels/statsmodels@c9062e43b8a5f7385537ca95#egg=statsmodels statsmodels
+    pip install git+git://github.com/statsmodels/statsmodels@c9062e43b8a5f7385537ca95#egg=statsmodels
 fi;
 
 # make sure the desired locale is generated
 if [ x"$LOCALE_OVERRIDE" != x"" ]; then
     # piggyback this build for plotting tests. oh boy.
-    pip_install  matplotlib;
+    pip install $PIP_ARGS --use-mirrors  matplotlib;
 
     sudo locale-gen "$LOCALE_OVERRIDE"
 fi
diff --git a/ci/script.sh b/ci/script.sh
index 898628562..92ac30697 100755
--- a/ci/script.sh
+++ b/ci/script.sh
@@ -10,13 +10,14 @@ if [ x"$LOCALE_OVERRIDE" != x"" ]; then
     # also do slow tests here, especially plotting
     nosetests --exe -w /tmp -A "not network" pandas;
     exit
-elif [ x"$VBENCH" != x"true" ]; then
-    # plain/FULL_DEPS
+fi
+
+if [ x"$VBENCH" != x"true" ]; then
     nosetests --exe -w /tmp -A "not slow" pandas;
     exit
 fi
 
-# if [ x"$VBENCH" == x"true" ]; then
-#     python vb_suite/perf_HEAD.py;
-#     exit
-# fi
+if [ x"$VBENCH" == x"true" ]; then
+    python vb_suite/perf_HEAD.py;
+    exit
+fi
