commit acbfdf83ddb0cea63eaed0b3281e673d5094184d
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Thu Jan 4 16:45:30 2018 -0800

    Tests for fixed issues in Series[datetime64] (#19072)

diff --git a/pandas/tests/series/test_operators.py b/pandas/tests/series/test_operators.py
index c1e9a62d9..2350477c2 100644
--- a/pandas/tests/series/test_operators.py
+++ b/pandas/tests/series/test_operators.py
@@ -1195,6 +1195,18 @@ class TestDatetimeSeriesArithmetic(object):
         expected = Series([Timedelta('-2days')])
         assert_series_equal(result, expected)
 
+    def test_dt64tz_series_sub_dtitz(self):
+        # GH#19071 subtracting tzaware DatetimeIndex from tzaware Series
+        # (with same tz) raises, fixed by #19024
+        dti = pd.date_range('1999-09-30', periods=10, tz='US/Pacific')
+        ser = pd.Series(dti)
+        expected = pd.Series(pd.TimedeltaIndex(['0days'] * 10))
+
+        res = dti - ser
+        tm.assert_series_equal(res, expected)
+        res = ser - dti
+        tm.assert_series_equal(res, expected)
+
     def test_sub_datetime_compat(self):
         # see gh-14088
         s = Series([datetime(2016, 8, 23, 12, tzinfo=pytz.utc), pd.NaT])
@@ -1317,6 +1329,37 @@ class TestDatetimeSeriesArithmetic(object):
         with pytest.raises(TypeError):
             nat_series_dtype_timestamp / 1
 
+    def test_dt64series_arith_overflow(self):
+        # GH#12534, fixed by #19024
+        dt = pd.Timestamp('1700-01-31')
+        td = pd.Timedelta('20000 Days')
+        dti = pd.date_range('1949-09-30', freq='100Y', periods=4)
+        ser = pd.Series(dti)
+        with pytest.raises(OverflowError):
+            ser - dt
+        with pytest.raises(OverflowError):
+            dt - ser
+        with pytest.raises(OverflowError):
+            ser + td
+        with pytest.raises(OverflowError):
+            td + ser
+
+        ser.iloc[-1] = pd.NaT
+        expected = pd.Series(['2004-10-03', '2104-10-04', '2204-10-04', 'NaT'],
+                             dtype='datetime64[ns]')
+        res = ser + td
+        tm.assert_series_equal(res, expected)
+        res = td + ser
+        tm.assert_series_equal(res, expected)
+
+        ser.iloc[1:] = pd.NaT
+        expected = pd.Series(['91279 Days', 'NaT', 'NaT', 'NaT'],
+                             dtype='timedelta64[ns]')
+        res = ser - dt
+        tm.assert_series_equal(res, expected)
+        res = dt - ser
+        tm.assert_series_equal(res, -expected)
+
 
 class TestSeriesOperators(TestData):
     def test_op_method(self):
