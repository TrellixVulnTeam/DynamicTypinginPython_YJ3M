commit d840edafd017664d53f40bd951a05cba0cddebe1
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Apr 20 16:33:38 2012 -0400

    ENH: week of month legacy naming / cleanup close #1088

diff --git a/pandas/core/datetools.py b/pandas/core/datetools.py
index 0545bbc8a..8ac4473ac 100644
--- a/pandas/core/datetools.py
+++ b/pandas/core/datetools.py
@@ -2039,13 +2039,13 @@ _rule_aliases = {
     'us': 'U'
 }
 
-
-_legacy_reverse_map = dict((v, k) for k, v in _rule_aliases.iteritems())
-
 for i, weekday in enumerate(['MON', 'TUE', 'WED', 'THU', 'FRI']):
     for iweek in xrange(4):
-        _offset_map['WOM@%d%s' % (iweek + 1, weekday)] = \
-            WeekOfMonth(week=iweek, weekday=i)
+        name = 'WOM-%d%s' % (iweek + 1, weekday)
+        _offset_map[name] = WeekOfMonth(week=iweek, weekday=i)
+        _rule_aliases[name.replace('-', '@')] = name
+
+_legacy_reverse_map = dict((v, k) for k, v in _rule_aliases.iteritems())
 
 # for helping out with pretty-printing and name-lookups
 
diff --git a/pandas/tests/test_timeseries.py b/pandas/tests/test_timeseries.py
index 5651ad559..347f175c1 100644
--- a/pandas/tests/test_timeseries.py
+++ b/pandas/tests/test_timeseries.py
@@ -530,8 +530,9 @@ class TestLegacySupport(unittest.TestCase):
                  ('A@JAN', 'BA-JAN'), ('A@FEB', 'BA-FEB'), ('A@MAR', 'BA-MAR'),
                  ('A@APR', 'BA-APR'), ('A@MAY', 'BA-MAY'), ('A@JUN', 'BA-JUN'),
                  ('A@JUL', 'BA-JUL'), ('A@AUG', 'BA-AUG'), ('A@SEP', 'BA-SEP'),
-                 ('A@OCT', 'BA-OCT'), ('A@NOV', 'BA-NOV'), ('A@DEC', 'BA-DEC')
-                 ]
+                 ('A@OCT', 'BA-OCT'), ('A@NOV', 'BA-NOV'), ('A@DEC', 'BA-DEC'),
+                 ('WOM@1FRI', 'WOM-1FRI'), ('WOM@2FRI', 'WOM-2FRI'),
+                 ('WOM@3FRI', 'WOM-3FRI'), ('WOM@4FRI', 'WOM-4FRI')]
 
         start, end = '1/1/2000', '1/1/2010'
 
@@ -688,7 +689,7 @@ class TestDatetime64(unittest.TestCase):
         self.assert_( len(dti1.diff(dti2)) == 2)
 
     def test_fancy_getitem(self):
-        dti = DatetimeIndex(freq='WOM@1FRI', start=datetime(2005,1,1),
+        dti = DatetimeIndex(freq='WOM-1FRI', start=datetime(2005,1,1),
                             end=datetime(2010,1,1))
 
         s = Series(np.arange(len(dti)), index=dti)
@@ -704,7 +705,7 @@ class TestDatetime64(unittest.TestCase):
                             s[datetime(2009,3,6):datetime(2009,6,5)])
 
     def test_fancy_setitem(self):
-        dti = DatetimeIndex(freq='WOM@1FRI', start=datetime(2005,1,1),
+        dti = DatetimeIndex(freq='WOM-1FRI', start=datetime(2005,1,1),
                             end=datetime(2010,1,1))
 
         s = Series(np.arange(len(dti)), index=dti)
