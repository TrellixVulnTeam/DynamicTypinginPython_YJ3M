commit a8b5728a53f46aa574388d63be981632c71faf40
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Tue Oct 18 16:27:44 2011 -0400

    BUG: join on length-0 frame produce correct columns

diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 476bcd7da..69e9d6861 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2219,9 +2219,6 @@ class DataFrame(NDFrame):
             assert(other.name is not None)
             other = DataFrame({other.name : other})
 
-        if len(other.index) == 0:
-            return self
-
         if isinstance(on, (list, tuple)):
             if len(on) == 1:
                 join_key = self[on[0]].values
diff --git a/pandas/core/internals.py b/pandas/core/internals.py
index 4247b6f31..e3dc1e296 100644
--- a/pandas/core/internals.py
+++ b/pandas/core/internals.py
@@ -736,7 +736,6 @@ class BlockManager(object):
         other_axis = other.axes[axis]
         indexer = other_axis.get_indexer(on)
 
-        # TODO: deal with length-0 case? or does it fall out?
         if how == 'left':
             mask = indexer == -1
             needs_masking = len(on) > 0 and mask.any()
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 91b28561b..b7ac9a7d1 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -3106,6 +3106,11 @@ class TestDataFrameJoin(unittest.TestCase):
             self.assert_(col in merged)
             self.assert_(merged[col].isnull().all())
 
+        merged2 = self.target.join(self.source.reindex([]), on='C',
+                                   how='inner')
+        self.assert_(merged2.columns.equals(merged.columns))
+        self.assertEqual(len(merged2), 0)
+
     def test_join_on_inner(self):
         df = DataFrame({'key' : ['a', 'a', 'd', 'b', 'b', 'c']})
         df2 = DataFrame({'value' : [0, 1]}, index=['a', 'b'])
