commit 76ac02e22b40a44327ad37a1d11022c9deef575c
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Fri Jun 29 10:38:50 2012 -0400

    BUG: fix Panel slice setting issue and matplotlib import issues #1548, #1533

diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 0602f4574..5e59ab5e7 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -75,7 +75,12 @@ class _NDFrameIndexer(object):
         return tuple(keyidx)
 
     def _setitem_with_indexer(self, indexer, value):
+        from pandas.core.frame import DataFrame
+
         # also has the side effect of consolidating in-place
+
+        # mmm, spaghetti
+
         if self.obj._is_mixed_type:
             if not isinstance(indexer, tuple):
                 indexer = self._tuplify(indexer)
@@ -89,6 +94,10 @@ class _NDFrameIndexer(object):
             plane_indexer = indexer[:het_axis] + indexer[het_axis + 1:]
             item_labels = self.obj._get_axis(het_axis)
 
+            if isinstance(value, (np.ndarray, DataFrame)) and value.ndim > 1:
+                raise ValueError('Setting mixed-type DataFrames with '
+                                 'array/DataFrame pieces not yet supported')
+
             try:
                 for item in item_labels[het_idx]:
                     data = self.obj[item]
@@ -100,6 +109,12 @@ class _NDFrameIndexer(object):
         else:
             if isinstance(indexer, tuple):
                 indexer = _maybe_convert_ix(*indexer)
+
+            if isinstance(value, DataFrame):
+                value = value.values
+                if not isinstance(self.obj, DataFrame):
+                    value = value.T
+
             self.obj.values[indexer] = value
 
     def _getitem_tuple(self, tup):
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index e3794222d..3e5977a15 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -932,6 +932,17 @@ class CheckIndexing(object):
         expected = [nan, 'qux', nan, 'qux', nan]
         assert_almost_equal(df['str'].values, expected)
 
+    def test_setitem_frame(self):
+        piece = self.frame.ix[:2, ['A', 'B']]
+        self.frame.ix[-2:, ['A', 'B']] = piece
+        assert_almost_equal(self.frame.ix[-2:, ['A', 'B']].values,
+                           piece.values)
+
+        piece = self.mixed_frame.ix[:2, ['A', 'B']]
+        f = self.mixed_frame.ix.__setitem__
+        key = (slice(-2, None), ['A', 'B'])
+        self.assertRaises(ValueError, f, key, piece)
+
     def test_setitem_fancy_exceptions(self):
         pass
 
diff --git a/pandas/tests/test_panel.py b/pandas/tests/test_panel.py
index 70c817fc4..dcb055ad7 100644
--- a/pandas/tests/test_panel.py
+++ b/pandas/tests/test_panel.py
@@ -519,6 +519,7 @@ class CheckIndexing(object):
     def test_getitem_fancy_xs(self):
         p = self.panel
         item = 'ItemB'
+
         date = p.major_axis[5]
         col = 'C'
 
@@ -565,6 +566,16 @@ class CheckIndexing(object):
         self._check_view((item, NS, 'C'), comp)
         self._check_view((NS, date, 'C'), comp)
 
+    def test_ix_setitem_slice_dataframe(self):
+        a = Panel(items=[1,2,3],major_axis=[11,22,33],minor_axis=[111,222,333])
+        b = DataFrame(np.random.randn(2,3), index=[111,333],
+                      columns=[1,2,3])
+
+        a.ix[:, 22, [111, 333]] = b
+
+        assert_frame_equal(a.ix[:, 22, [111, 333]], b)
+
+
     def _check_view(self, indexer, comp):
         cp = self.panel.copy()
         obj = cp.ix[indexer]
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 7969f95f4..98d698802 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -7,14 +7,12 @@ import numpy as np
 
 from pandas.util.decorators import cache_readonly
 import pandas.core.common as com
-from pandas.core.index import Index, MultiIndex
+from pandas.core.index import MultiIndex
 from pandas.core.series import Series, remove_na
 from pandas.tseries.index import DatetimeIndex
 from pandas.tseries.period import PeriodIndex
 from pandas.tseries.frequencies import get_period_alias, get_base_alias
 from pandas.tseries.offsets import DateOffset
-import pandas.tseries.tools as datetools
-import pandas.lib as lib
 
 try: # mpl optional
     import pandas.tseries.converter as conv
diff --git a/pandas/tseries/converter.py b/pandas/tseries/converter.py
index 811d21ed1..86245ad4a 100644
--- a/pandas/tseries/converter.py
+++ b/pandas/tseries/converter.py
@@ -4,8 +4,6 @@ import numpy as np
 
 import matplotlib.units as units
 import matplotlib.dates as dates
-import matplotlib.cbook as cbook
-from matplotlib import pylab
 from matplotlib.ticker import Formatter, AutoLocator, Locator
 from matplotlib.transforms import nonsingular
 
