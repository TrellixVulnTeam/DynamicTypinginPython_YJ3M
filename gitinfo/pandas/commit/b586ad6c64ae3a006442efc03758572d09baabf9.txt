commit b586ad6c64ae3a006442efc03758572d09baabf9
Author: y-p <yoval@gmx.com>
Date:   Tue Jan 7 17:56:44 2014 +0200

    BLD/DOC: explain how to print_versions() sans repo in CONTRIBUTING.md

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 630fbd3bc..3e0df9f26 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -18,8 +18,13 @@ looking for a quick way to help out.
 
         ```
 
-  - Specify the pandas version used and those of it's dependencies. You can simply include   the output of
-    [`ci/print_versions.py`](https://github.com/pydata/pandas/blob/master/ci/print_versions.py).
+  - Include the full version string of pandas and it's dependencies:
+
+    ```python
+    >>> from pandas.util.print_versions import show_versions
+    >>> show_versions()
+    ```
+
   - Explain what the expected behavior was, and what you saw instead.
 
 #### Pull Requests
diff --git a/pandas/util/print_versions.py b/pandas/util/print_versions.py
index f61fc4aaa..6b701c666 100644
--- a/pandas/util/print_versions.py
+++ b/pandas/util/print_versions.py
@@ -8,26 +8,26 @@ import subprocess
 def get_sys_info():
     "Returns system information as a dict"
 
+    blob = []
+
     # get full commit hash
     commit = None
-    try:
-        pipe = subprocess.Popen('git log --format="%H" -n 1'.split(" "),
-                                stdout=subprocess.PIPE, stderr=subprocess.PIPE)
-        so, serr = pipe.communicate()
-    except:
-        pass
-    else:
-        if pipe.returncode == 0:
-            commit = so
-            try:
-                commit = so.decode('utf-8')
-            except ValueError:
-                pass
-            commit = commit.strip().strip('"')
-
-    # list of tuples over dict because OrderedDict not in 2.6, least
-    # resistance.
-    blob = []
+    if os.path.isdir(".git") and os.path.isdir("pandas"):
+        try:
+            pipe = subprocess.Popen('git log --format="%H" -n 1'.split(" "),
+                                    stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+            so, serr = pipe.communicate()
+        except:
+            pass
+        else:
+            if pipe.returncode == 0:
+                commit = so
+                try:
+                    commit = so.decode('utf-8')
+                except ValueError:
+                    pass
+                commit = commit.strip().strip('"')
+
     blob.append(('commit', commit))
 
     try:
