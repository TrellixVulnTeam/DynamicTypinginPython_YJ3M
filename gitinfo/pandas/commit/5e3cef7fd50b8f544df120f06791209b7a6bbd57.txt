commit 5e3cef7fd50b8f544df120f06791209b7a6bbd57
Author: Andy Hayden <andyhayden1@gmail.com>
Date:   Mon Jun 24 21:14:27 2013 +0100

    FIX groupby name without multiindex GH4014

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 1525cc022..b2c1e585f 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -214,6 +214,7 @@ pandas 0.11.1
       names (:issue:`3873`)
 
   - Fixed bug in groupby with empty series referencing a variable before assignment. (:issue:`3510`)
+  - Allow index name to be used in groupby for non MultiIndex (:issue:`4014`)
   - Fixed bug in mixed-frame assignment with aligned series (:issue:`3492`)
   - Fixed bug in selecting month/quarter/year from a series would not select the time element
     on the last day (:issue:`3546`)
diff --git a/pandas/core/groupby.py b/pandas/core/groupby.py
index 43def5047..9bd7923f6 100644
--- a/pandas/core/groupby.py
+++ b/pandas/core/groupby.py
@@ -1252,11 +1252,14 @@ def _get_grouper(obj, key=None, axis=0, level=None, sort=True):
 
     if level is not None:
         if not isinstance(group_axis, MultiIndex):
-            if level > 0:
+            if isinstance(level, basestring):
+                if obj.index.name != level:
+                    raise ValueError('level name %s is not the name of the index' % level)
+            elif level > 0:
                 raise ValueError('level > 0 only valid with MultiIndex')
-            else:
-                level = None
-                key = group_axis
+            
+            level = None
+            key = group_axis
 
     if isinstance(key, CustomGrouper):
         gpr = key.get_grouper(obj)
diff --git a/pandas/tests/test_groupby.py b/pandas/tests/test_groupby.py
index 8f60cb8fc..6af287b77 100644
--- a/pandas/tests/test_groupby.py
+++ b/pandas/tests/test_groupby.py
@@ -1414,6 +1414,12 @@ class TestGroupBy(unittest.TestCase):
         # raise exception for non-MultiIndex
         self.assertRaises(ValueError, self.df.groupby, level=1)
 
+    def test_groupby_level_index_names(self):
+        ## GH4014 this used to raise ValueError since 'exp'>1 (in py2)
+        df = DataFrame({'exp' : ['A']*3 + ['B']*3, 'var1' : range(6),}).set_index('exp')
+        df.groupby(level='exp')
+        self.assertRaises(ValueError, df.groupby, level='foo')
+
     def test_groupby_level_with_nas(self):
         index = MultiIndex(levels=[[1, 0], [0, 1, 2, 3]],
                            labels=[[1, 1, 1, 1, 0, 0, 0, 0],
