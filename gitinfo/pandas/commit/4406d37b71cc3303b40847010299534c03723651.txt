commit 4406d37b71cc3303b40847010299534c03723651
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Thu Jul 12 17:36:23 2012 -0400

    BUG: fix duplicate index indexing problems close #1201

diff --git a/RELEASE.rst b/RELEASE.rst
index b888382f2..4c88b5e38 100644
--- a/RELEASE.rst
+++ b/RELEASE.rst
@@ -76,6 +76,7 @@ pandas 0.8.1
   - Fix unhandled IndexError when indexing very large time series (#1562)
   - Fix DatetimeIndex intersection logic error with irregular indexes (#1551)
   - Fix unit test errors on Python 3 (#1550)
+  - Fix .ix indexing bugs in duplicate DataFrame index (#1201)
 
 pandas 0.8.0
 ============
diff --git a/pandas/core/indexing.py b/pandas/core/indexing.py
index 5e59ab5e7..a7a58563a 100644
--- a/pandas/core/indexing.py
+++ b/pandas/core/indexing.py
@@ -275,7 +275,8 @@ class _NDFrameIndexer(object):
 
         if com._is_bool_indexer(key):
             key = _check_bool_indexer(labels, key)
-            return _reindex(labels[np.asarray(key)])
+            inds, = np.asarray(key, dtype=bool).nonzero()
+            return self.obj.take(inds, axis=axis)
         else:
             if isinstance(key, Index):
                 # want Index objects to pass through untouched
@@ -294,7 +295,11 @@ class _NDFrameIndexer(object):
             else:
                 level = None
 
-            return _reindex(keyarr, level=level)
+            if labels.is_unique:
+                return _reindex(keyarr, level=level)
+            else:
+                mask = labels.isin(keyarr)
+                return self.obj.take(mask.nonzero()[0], axis=axis)
 
     def _convert_to_indexer(self, obj, axis=0):
         """
diff --git a/pandas/io/tests/test_yahoo.py b/pandas/io/tests/test_yahoo.py
index 9f123e016..1f10a860e 100644
--- a/pandas/io/tests/test_yahoo.py
+++ b/pandas/io/tests/test_yahoo.py
@@ -7,13 +7,15 @@ import re
 import unittest
 import pandas.io.data as pd
 import nose
+from pandas.util.testing import network
 
 class TestYahoo(unittest.TestCase):
 
+    @network
     def test_yahoo(self):
-        """asserts that yahoo is minimally working and that it throws
-        an excecption when DataReader can't get a 200 response from
-        yahoo """
+        # asserts that yahoo is minimally working and that it throws
+        # an excecption when DataReader can't get a 200 response from
+        # yahoo
         start = datetime(2010,1,1)
         end = datetime(2012,1,24)
         self.assertEquals(
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index de6837a6d..a98991658 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -969,6 +969,23 @@ class CheckIndexing(object):
         expected = df.ix[3]
         assert_series_equal(result, expected)
 
+    def test_getitem_ix_boolean_duplicates_multiple(self):
+        # #1201
+        df = DataFrame(np.random.randn(5, 3),
+                       index=['foo', 'foo', 'bar', 'baz', 'bar'])
+
+        result = df.ix[['bar']]
+        exp = df.ix[[2, 4]]
+        assert_frame_equal(result, exp)
+
+        result = df.ix[df[1] > 0]
+        exp = df[df[1] > 0]
+        assert_frame_equal(result, exp)
+
+        result = df.ix[df[0] > 0]
+        exp = df[df[0] > 0]
+        assert_frame_equal(result, exp)
+
     def test_get_value(self):
         for idx in self.frame.index:
             for col in self.frame.columns:
