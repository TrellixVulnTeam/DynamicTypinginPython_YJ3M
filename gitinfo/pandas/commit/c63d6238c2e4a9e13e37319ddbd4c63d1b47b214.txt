commit c63d6238c2e4a9e13e37319ddbd4c63d1b47b214
Author: Wes McKinney <wesmckinn@gmail.com>
Date:   Sun Apr 1 14:36:06 2012 -0400

    ENH: horizontal bar plot working, change default rotation for bar plots

diff --git a/pandas/core/series.py b/pandas/core/series.py
index c2eba86f2..6b26a6667 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2448,6 +2448,7 @@ import pandas.tools.plotting as _gfx
 Series.plot = _gfx.plot_series
 Series.hist = _gfx.hist_series
 
+# Put here, otherwise monkey-patching in methods fails
 
 class TimeSeries(Series):
     pass
diff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx
index 2c3b83791..8ce924da4 100644
--- a/pandas/src/inference.pyx
+++ b/pandas/src/inference.pyx
@@ -60,6 +60,10 @@ def infer_dtype(object _values):
         if is_datetime_array(values):
             return 'datetime'
 
+    elif is_date(val):
+        if is_date_array(values):
+            return 'date'
+
     elif util.is_float_object(val):
         if is_float_array(values):
 
@@ -88,6 +92,9 @@ def infer_dtype_list(list values):
 cdef inline bint is_datetime(object o):
     return PyDateTime_Check(o)
 
+cdef inline bint is_date(object o):
+    return PyDate_Check(o)
+
 def is_bool_array(ndarray values):
     cdef:
         Py_ssize_t i, n = len(values)
diff --git a/pandas/tests/test_tseries.py b/pandas/tests/test_tseries.py
index 3083a9b12..9f3d2a1b3 100644
--- a/pandas/tests/test_tseries.py
+++ b/pandas/tests/test_tseries.py
@@ -349,6 +349,9 @@ class TestTypeInference(unittest.TestCase):
     def test_datetime(self):
         pass
 
+    def test_date(self):
+        pass
+
     def test_to_object_array_tuples(self):
         r = (5,6)
         values = [r]
diff --git a/pandas/tools/plotting.py b/pandas/tools/plotting.py
index 24169121e..fbdc06e81 100644
--- a/pandas/tools/plotting.py
+++ b/pandas/tools/plotting.py
@@ -53,9 +53,11 @@ class MPLPlot(object):
     data :
 
     """
+    _default_rot = 0
+
     def __init__(self, data, kind=None, by=None, subplots=False, sharex=True,
                  sharey=False, use_index=True,
-                 figsize=None, grid=True, legend=True, rot=30,
+                 figsize=None, grid=True, legend=True, rot=None,
                  ax=None, fig=None, title=None,
                  xlim=None, ylim=None,
                  xticks=None, yticks=None,
@@ -97,6 +99,7 @@ class MPLPlot(object):
         self._setup_subplots()
         self._make_plot()
         self._post_plot_logic()
+        self._adorn_subplots()
 
     def draw(self):
         self.plt.draw_if_interactive()
@@ -235,12 +238,17 @@ class LinePlot(MPLPlot):
 
 
 class BarPlot(MPLPlot):
+    _default_rot = {'bar' : 90, 'barh' : 0}
 
     def __init__(self, data, **kwargs):
         self.stacked = kwargs.pop('stacked', False)
+        self.ax_pos = np.arange(len(data)) + 0.25
         MPLPlot.__init__(self, data, **kwargs)
 
     def _args_adjust(self):
+        if self.rot is None:
+            self.rot = self._default_rot[self.kind]
+
         if self.fontsize is None:
             if len(self.data) < 10:
                 self.fontsize = 12
@@ -264,7 +272,7 @@ class BarPlot(MPLPlot):
         df = self.data
 
         N, K = df.shape
-        xinds = np.arange(N) + 0.25
+
         colors = 'rgbyk'
         rects = []
         labels = []
@@ -273,47 +281,62 @@ class BarPlot(MPLPlot):
 
         bar_f = self.bar_f
 
-        prior = np.zeros(N)
+        pos_prior = neg_prior = np.zeros(N)
         for i, col in enumerate(df.columns):
             empty = df[col].count() == 0
             y = df[col].values if not empty else np.zeros(len(df))
 
             if self.subplots:
                 ax = self.axes[i]
-                rect = bar_f(ax, xinds, y, 0.5, start=prior,
+                rect = bar_f(ax, self.ax_pos, y, 0.5, start=pos_prior,
                              linewidth=1, **self.kwds)
                 ax.set_title(col)
             elif self.stacked:
-                rect = bar_f(ax, xinds, y, 0.5, start=prior,
+                mask = y > 0
+                start = np.where(mask, pos_prior, neg_prior)
+                rect = bar_f(ax, self.ax_pos, y, 0.5, start=start,
                              color=colors[i % len(colors)],
                              label=str(col), linewidth=1,
                              **self.kwds)
-                prior = y + prior
+                pos_prior = pos_prior + np.where(mask, y, 0)
+                neg_prior = neg_prior + np.where(mask, 0, y)
             else:
-                rect = bar_f(ax, xinds + i * 0.75 / K, y, 0.75 / K,
+                rect = bar_f(ax, self.ax_pos + i * 0.75 / K, y, 0.75 / K,
                              start=np.zeros(N), label=str(col),
                              color=colors[i % len(colors)],
                              **self.kwds)
             rects.append(rect)
             labels.append(col)
 
-        ax.set_xlim([xinds[0] - 0.25, xinds[-1] + 1])
-        ax.set_xticks(xinds + 0.375)
-        ax.set_xticklabels([_stringify(key) for key in df.index],
-                           rotation=self.rot,
-                           fontsize=self.fontsize)
-
         if self.legend and not self.subplots:
             patches =[r[0] for r in rects]
 
             # Legend to the right of the plot
             # ax.legend(patches, labels, bbox_to_anchor=(1.05, 1),
             #           loc=2, borderaxespad=0.)
+            # self.fig.subplots_adjust(right=0.80)
 
             ax.legend(patches, labels, loc='best')
 
-        self.fig.subplots_adjust(top=0.8, right=0.80)
 
+        self.fig.subplots_adjust(top=0.8)
+
+    def _post_plot_logic(self):
+        for ax in self.axes:
+            str_index = [_stringify(key) for key in self.data.index]
+            if self.kind == 'bar':
+                ax.set_xlim([self.ax_pos[0] - 0.25, self.ax_pos[-1] + 1])
+                ax.set_xticks(self.ax_pos + 0.375)
+                ax.set_xticklabels(str_index, rotation=self.rot,
+                                   fontsize=self.fontsize)
+                ax.axhline(0, color='k', linestyle='--')
+            else:
+                # horizontal bars
+                ax.set_ylim([self.ax_pos[0] - 0.25, self.ax_pos[-1] + 1])
+                ax.set_yticks(self.ax_pos + 0.375)
+                ax.set_yticklabels(str_index, rotation=self.rot,
+                                   fontsize=self.fontsize)
+                ax.axvline(0, color='k', linestyle='--')
 
 class BoxPlot(MPLPlot):
     pass
@@ -325,7 +348,7 @@ class HistPlot(MPLPlot):
 
 def plot_frame(frame=None, subplots=False, sharex=True, sharey=False,
                use_index=True,
-               figsize=None, grid=True, legend=True, rot=30,
+               figsize=None, grid=True, legend=True, rot=None,
                ax=None, title=None,
                xlim=None, ylim=None,
                xticks=None, yticks=None,
@@ -843,8 +866,9 @@ if __name__ == '__main__':
     reload(fr)
     from pandas.core.frame import DataFrame
 
-    data = DataFrame([[3, 6], [4, 8], [4, 9], [4, 9], [2, 5]],
-                     columns=['A', 'B'])
+    data = DataFrame([[3, 6, -5], [4, 8, 2], [4, 9, -6],
+                      [4, 9, -3], [2, 5, -1]],
+                     columns=['A', 'B', 'C'])
     data.plot(kind='barh', stacked=True)
 
     plt.show()
