commit 67c10cc2177581888b7ed323abb01b29280b7c3a
Author: jreback <jeff@reback.net>
Date:   Tue Jul 2 19:30:20 2013 -0400

    ERROR: better error message reporting on inserting incompatible column to frame (GH4107)

diff --git a/doc/source/release.rst b/doc/source/release.rst
index 5f2dd3df0..d410f39da 100644
--- a/doc/source/release.rst
+++ b/doc/source/release.rst
@@ -313,6 +313,7 @@ pandas 0.12
     (:issue:`4089`)
   - Fix bug where ``HDFStore`` will fail to append because of a different block
     ordering on-disk (:issue:`4096`)
+  - Better error messages on inserting incompatible columns to a frame (:issue:`4107`)
 
 
 pandas 0.11.0
diff --git a/pandas/core/frame.py b/pandas/core/frame.py
index 5fe2d6099..cc25d7e06 100644
--- a/pandas/core/frame.py
+++ b/pandas/core/frame.py
@@ -2190,7 +2190,13 @@ class DataFrame(NDFrame):
                     # copy the values
                     value = value.values.copy()
                 else:
-                    value = value.reindex(self.index).values
+
+                    # GH 4107
+                    try:
+                        value = value.reindex(self.index).values
+                    except:
+                        raise TypeError('incompatible index of inserted column '
+                                        'with frame index')
 
                 if is_frame:
                     value = value.T
diff --git a/pandas/tests/test_frame.py b/pandas/tests/test_frame.py
index 4ed4c37b8..a8a435e3b 100644
--- a/pandas/tests/test_frame.py
+++ b/pandas/tests/test_frame.py
@@ -2250,6 +2250,19 @@ class TestDataFrame(unittest.TestCase, CheckIndexing,
             self.assert_(type(detail) == ValueError)
             self.assert_(msg in str(detail))
 
+    def test_insert_error_msmgs(self):
+
+        # GH 4107, more descriptive error message
+        df = DataFrame(np.random.randint(0,2,(4,4)),
+                       columns=['a', 'b', 'c', 'd'])
+
+        try:
+            df['gr'] = df.groupby(['b', 'c']).count()
+        except (Exception), detail:
+            msg = 'incompatible index of inserted column with frame index'
+            self.assert_(type(detail) == TypeError)
+            self.assert_(msg in str(detail))
+
     def test_constructor_subclass_dict(self):
         # Test for passing dict subclass to constructor
         data = {'col1': tm.TestSubDict((x, 10.0 * x) for x in xrange(10)),
